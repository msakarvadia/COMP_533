<Events startTimestamp="1648471300703" logVersion="1.0.0.202111260825">
  <Command __id="15" _type="RunCommand" className="(Unknown)" date="Mon Mar 28 08:42:11 EDT 2022" kind="HitBreakPoint" projectName="A4" starttimestamp="1648471300703" timestamp="30941" type="Run" />
  <Command __id="16" _type="ConsoleOutput" date="Mon Mar 28 08:42:12 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="31588" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.9037148554887082
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="18" _type="PauseCommand" date="Mon Mar 28 08:42:13 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="32991">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1402]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="17" _type="ShellCommand" date="Mon Mar 28 08:42:13 EDT 2022" starttimestamp="1648471300703" timestamp="32990" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="20" _type="PauseCommand" date="Mon Mar 28 08:42:16 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="35563">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2573]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="19" _type="ShellCommand" date="Mon Mar 28 08:42:16 EDT 2022" starttimestamp="1648471300703" timestamp="35563" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="22" _type="PauseCommand" date="Mon Mar 28 08:42:18 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="37821">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2258]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="21" _type="ShellCommand" date="Mon Mar 28 08:42:18 EDT 2022" starttimestamp="1648471300703" timestamp="37821" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="24" _type="PauseCommand" date="Mon Mar 28 08:42:21 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="41011">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3190]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="23" _type="ConsoleOutput" date="Mon Mar 28 08:42:21 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="41011" type="ConsoleOutput">
    <outputString><![CDATA[Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.9037148554887082"), Diff(INSERT,"Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="26" _type="PauseCommand" date="Mon Mar 28 08:42:24 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="44011">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3000]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="27" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 08:42:31 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="50389" type="Run" />
  <Command __id="30" _type="PauseCommand" date="Mon Mar 28 08:42:34 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="53519">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3130]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="29" _type="ShellCommand" date="Mon Mar 28 08:42:34 EDT 2022" starttimestamp="1648471300703" timestamp="53519" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="32" _type="PauseCommand" date="Mon Mar 28 08:42:39 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="59225">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5706]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="31" _type="ConsoleOutput" date="Mon Mar 28 08:42:39 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="59225" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Mar 28 08:42:39 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Mar 28 08:42:39 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="34" _type="PauseCommand" date="Mon Mar 28 08:42:42 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="61818">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2593]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="33" _type="ConsoleOutput" date="Mon Mar 28 08:42:42 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="61818" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:65
Running second pass checks Mon Mar 28 08:42:42 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Mar 28 08:42:42 EDT 2022
End O(n2) inter- and intra class method calls:Mon Mar 28 08:42:42 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:65¶Running second pass checks Mon Mar 28 08:42:42 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Mar 28 08:42:42 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Mar 28 08:42:"), Diff(DELETE,"39"), Diff(INSERT,"42"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="36" _type="PauseCommand" date="Mon Mar 28 08:42:43 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="62848">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1030]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="35" _type="ConsoleOutput" date="Mon Mar 28 08:42:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="62848" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Mar 28 08:42:43 EDT 2022
Generating checks:Mon Mar 28 08:42:43 EDT 2022
Finished Generating checks:Mon Mar 28 08:42:43 EDT 2022
Generating externals:Mon Mar 28 08:42:43 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:65¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Mar 28 08:42:4"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Mar 28 08:42:43 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Mar 28 08:42:4"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Mar 28 08:42:4"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="37" _type="ConsoleOutput" date="Mon Mar 28 08:42:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="63059" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Mar 28 08:42:43 EDT 2022
Test execution time (ms):3875
Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Mar 28 08:42:43 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Mar 28 08:42:43 EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Mar 28 08:42:43 EDT 2022¶Generating externals:Mon Mar 28 08:42:43 EDT 2022"), Diff(INSERT,"Test execution time (ms):3875¶Test execution time (ms):8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="38" _type="ConsoleOutput" date="Mon Mar 28 08:42:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="63120" type="ConsoleOutput">
    <outputString><![CDATA[
A4ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.8513513513513513
Test execution time (ms):12
Test execution time (ms):1
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Mar 28 08:42:43 EDT 202"), Diff(INSERT,"¶A4ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.8513513513513513¶Test execution time (ms):1"), Diff(EQUAL,"2¶Test execution time (ms):"), Diff(DELETE,"3875"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"8"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="39" _type="ConsoleOutput" date="Mon Mar 28 08:42:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="63249" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.47058823529411764
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (16)
 |- checks (1)
  |~ Checks.java (36)
 |- client (5)
  |~ Client.java (22)
  |~ ClientConfigure.java (228)
  |~ ClientOutCoupler.java (47)
  |~ ClientRemoteInterface.java (23)
  |~ ClientRemoteObject.java (179)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (5)
  |~ OriginalSimulation.java (9)
  |~ Server.java (22)
  |~ ServerConfigure.java (163)
  |~ ServerRemoteInterface.java (21)
  |~ ServerRemoteObject.java (160)

Attempting to match to the structure:
|- .* (17)
 |- [a-z]?.*[Cc]lient.* (7)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (2)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (6)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
  |- [a-z]?.*[Rr]emote.* (2)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)


Test execution time (ms):47
A4ProjectOrganization did not pass completely:View console for more information%0.0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"A4ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.8513513513513513¶Test execution time (ms):12¶Test execution time (ms):1¶Test execution time (ms):2"), Diff(INSERT,"Your project does not meet the required similarity percent of: 0.95 your similarity: 0.47058823529411764¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (16)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (5)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (228)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterface.java (23)¶  |~ ClientRemoteObject.java (179)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (5)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (22)¶  |~ ServerConfigure.java (163)¶  |~ ServerRemoteInterface.java (21)¶  |~ ServerRemoteObject.java (160)¶¶Attempting to match to the structure:¶|- .* (17)¶ |- [a-z]?.*[Cc]lient.* (7)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (2)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (6)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (2)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶¶¶Test execution time (ms):47¶A4ProjectOrganization did not pass completely:View console for more information%0.0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="41" _type="PauseCommand" date="Mon Mar 28 08:42:46 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="65916">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2667]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="75" _type="MoveCaretCommand" caretOffset="3855" date="Mon Mar 28 08:43:29 EDT 2022" docOffset="4861" starttimestamp="1648471300703" timestamp="108683" />
  <Command __id="74" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 08:43:28 EDT 2022" docASTNodeCount="652" docActiveCodeLength="4573" docExpressionCount="470" docLength="5053" projectName="A4" starttimestamp="1648471300703" timestamp="108099">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A4\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterface;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI})
public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterface{
	List<ClientRemoteInterface> clientList = new ArrayList<ClientRemoteInterface>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//int aProposalNumber = 0;
	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterface aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterface originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterface client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterface server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterface) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterface client) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="77" _type="PauseCommand" date="Mon Mar 28 08:43:34 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="113423">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4740]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="78" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 08:43:34 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="113929" />
  <Command __id="80" _type="PauseCommand" date="Mon Mar 28 08:43:40 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="119667">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5738]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="79" _type="MoveCaretCommand" caretOffset="115" date="Mon Mar 28 08:43:40 EDT 2022" docOffset="115" starttimestamp="1648471300703" timestamp="119667" />
  <Command __id="76" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 08:43:34 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" projectName="A5" starttimestamp="1648471300703" timestamp="113423">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\checks\Checks.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package checks;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp533s22.assignment4.S22Assignment4Suite;
import trace.grader.basics.GraderBasicsTraceUtility;
import util.trace.Tracer;

public class Checks {
	public static void main(final String[] args) {
		Tracer.showInfo(true);
		GraderBasicsTraceUtility.setBufferTracedMessages(false);
		final int traces = 8000;
		Tracer.setMaxTraces(traces);
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		
		GraderBasicsTraceUtility.setBufferTracedMessages(false);
		// Change this number if a test trace gets longer than 600 and is clipped
		
		final int length = 600;
		GraderBasicsTraceUtility.setMaxPrintedTraces(length);
		// Change this number if all traces together are longer than 600
		
		final int time = 4000;
		GraderBasicsTraceUtility.setMaxTraces(time);
		// Change this number if your process times out prematurely
		
		final int timer = 50;
		BasicProjectExecution.setProcessTimeOut(timer);
		// You need to always call such a method
		S22Assignment4Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="82" _type="PauseCommand" date="Mon Mar 28 08:43:41 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="120766">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1099]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="81" _type="Delete" date="Mon Mar 28 08:43:41 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="3" length="1" offset="115" startLine="3" starttimestamp="1648471300703" timestamp="120766">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <Command __id="83" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 08:43:41 EDT 2022" starttimestamp="1648471300703" timestamp="120786" />
  <Command __id="85" _type="InsertStringCommand" date="Mon Mar 28 08:43:42 EDT 2022" starttimestamp="1648471300703" timestamp="121441" timestamp2="121441">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="87" _type="PauseCommand" date="Mon Mar 28 08:43:43 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="123124">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1682]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="86" _type="MoveCaretCommand" caretOffset="130" date="Mon Mar 28 08:43:43 EDT 2022" docOffset="130" starttimestamp="1648471300703" timestamp="123123" />
  <Command __id="89" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 08:43:44 EDT 2022" starttimestamp="1648471300703" timestamp="123768" />
  <Command __id="91" _type="InsertStringCommand" date="Mon Mar 28 08:43:45 EDT 2022" starttimestamp="1648471300703" timestamp="124718" timestamp2="124718">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="92" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 08:43:46 EDT 2022" starttimestamp="1648471300703" timestamp="125616" />
  <Command __id="93" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:43:46 EDT 2022" starttimestamp="1648471300703" timestamp="125702" />
  <Command __id="94" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:43:46 EDT 2022" starttimestamp="1648471300703" timestamp="125745" />
  <Command __id="96" _type="PauseCommand" date="Mon Mar 28 08:44:02 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="141778">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[16033]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="95" _type="MoveCaretCommand" caretOffset="36" date="Mon Mar 28 08:44:02 EDT 2022" docOffset="36" starttimestamp="1648471300703" timestamp="141778" />
  <Command __id="98" _type="PauseCommand" date="Mon Mar 28 08:44:04 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="144015">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2237]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="97" _type="MoveCaretCommand" caretOffset="1243" date="Mon Mar 28 08:44:04 EDT 2022" docOffset="1243" starttimestamp="1648471300703" timestamp="144015" />
  <DocumentChange __id="84" _type="Insert" date="Mon Mar 28 08:43:42 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="115" starttimestamp="1648471300703" timestamp="121426">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <DocumentChange __id="88" _type="Delete" date="Mon Mar 28 08:43:44 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="3" length="1" offset="130" startLine="3" starttimestamp="1648471300703" timestamp="123760">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="90" _type="Insert" date="Mon Mar 28 08:43:45 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="130" starttimestamp="1648471300703" timestamp="124702">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <Command __id="100" _type="PauseCommand" date="Mon Mar 28 08:44:06 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="145379">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1364]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="99" _type="Delete" date="Mon Mar 28 08:44:06 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="33" length="1" offset="1242" startLine="33" starttimestamp="1648471300703" timestamp="145379">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <Command __id="101" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 08:44:06 EDT 2022" starttimestamp="1648471300703" timestamp="145408" />
  <Command __id="103" _type="InsertStringCommand" date="Mon Mar 28 08:44:06 EDT 2022" starttimestamp="1648471300703" timestamp="145506" timestamp2="145506">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="105" _type="PauseCommand" date="Mon Mar 28 08:44:07 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="146552">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1046]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="104" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 08:44:07 EDT 2022" starttimestamp="1648471300703" timestamp="146552" />
  <Command __id="106" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:44:07 EDT 2022" starttimestamp="1648471300703" timestamp="146636" />
  <Command __id="107" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:44:07 EDT 2022" starttimestamp="1648471300703" timestamp="146677" />
  <Command __id="109" _type="PauseCommand" date="Mon Mar 28 08:44:12 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="151471">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4794]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="108" _type="ShellCommand" date="Mon Mar 28 08:44:12 EDT 2022" starttimestamp="1648471300703" timestamp="151471" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="111" _type="PauseCommand" date="Mon Mar 28 08:45:05 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="204625">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[53154]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="110" _type="ShellCommand" date="Mon Mar 28 08:45:05 EDT 2022" starttimestamp="1648471300703" timestamp="204625" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="112" _type="MoveCaretCommand" caretOffset="1065" date="Mon Mar 28 08:45:05 EDT 2022" docOffset="1065" starttimestamp="1648471300703" timestamp="204670" />
  <Command __id="114" _type="UndoCommand" date="Mon Mar 28 08:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="205515" />
  <Command __id="116" _type="UndoCommand" date="Mon Mar 28 08:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="205934" />
  <Command __id="118" _type="UndoCommand" date="Mon Mar 28 08:45:07 EDT 2022" starttimestamp="1648471300703" timestamp="206404" />
  <Command __id="120" _type="UndoCommand" date="Mon Mar 28 08:45:07 EDT 2022" starttimestamp="1648471300703" timestamp="207077" />
  <DocumentChange __id="102" _type="Insert" date="Mon Mar 28 08:44:06 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="1242" starttimestamp="1648471300703" timestamp="145491">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <DocumentChange __id="113" _type="Delete" date="Mon Mar 28 08:45:06 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="33" length="1" offset="1242" startLine="33" starttimestamp="1648471300703" timestamp="205475">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <DocumentChange __id="115" _type="Insert" date="Mon Mar 28 08:45:06 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="1242" starttimestamp="1648471300703" timestamp="205915">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="117" _type="Delete" date="Mon Mar 28 08:45:07 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="3" length="1" offset="130" startLine="3" starttimestamp="1648471300703" timestamp="206369">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <DocumentChange __id="119" _type="Insert" date="Mon Mar 28 08:45:07 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="130" starttimestamp="1648471300703" timestamp="207063">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <Command __id="122" _type="PauseCommand" date="Mon Mar 28 08:45:11 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="210392">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[3315]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="121" _type="Delete" date="Mon Mar 28 08:45:11 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="3" length="1" offset="115" startLine="3" starttimestamp="1648471300703" timestamp="210392">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <Command __id="123" _type="UndoCommand" date="Mon Mar 28 08:45:11 EDT 2022" starttimestamp="1648471300703" timestamp="210419" />
  <Command __id="125" _type="UndoCommand" date="Mon Mar 28 08:45:11 EDT 2022" starttimestamp="1648471300703" timestamp="211054" />
  <Command __id="127" _type="PauseCommand" date="Mon Mar 28 08:45:13 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="212781">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1727]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="137" _type="ShellCommand" date="Mon Mar 28 08:51:20 EDT 2022" starttimestamp="1648471300703" timestamp="580204" type="ECLIPSE_MAXIMIZED" />
  <Command __id="139" _type="ShellCommand" date="Mon Mar 28 08:51:20 EDT 2022" starttimestamp="1648471300703" timestamp="580286" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="141" _type="PauseCommand" date="Mon Mar 28 08:51:30 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="589384">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9098]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="140" _type="ShellCommand" date="Mon Mar 28 08:51:30 EDT 2022" starttimestamp="1648471300703" timestamp="589384" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="143" _type="PauseCommand" date="Mon Mar 28 08:51:45 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="605259">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15875]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="142" _type="ShellCommand" date="Mon Mar 28 08:51:45 EDT 2022" starttimestamp="1648471300703" timestamp="605259" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="144" _type="EclipseCommand" commandID="org.eclipse.ui.project.properties" date="Mon Mar 28 08:51:46 EDT 2022" starttimestamp="1648471300703" timestamp="605340" />
  <Command __id="146" _type="PauseCommand" date="Mon Mar 28 08:51:48 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="608167">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2827]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="145" _type="MoveCaretCommand" caretOffset="116" date="Mon Mar 28 08:51:48 EDT 2022" docOffset="116" starttimestamp="1648471300703" timestamp="608167" />
  <Command __id="148" _type="PauseCommand" date="Mon Mar 28 08:51:53 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="612405">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4238]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="147" _type="EclipseCommand" commandID="org.eclipse.ui.file.refresh" date="Mon Mar 28 08:51:53 EDT 2022" starttimestamp="1648471300703" timestamp="612405" />
  <Command __id="149" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:53 EDT 2022" starttimestamp="1648471300703" timestamp="612698" />
  <Command __id="150" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:53 EDT 2022" starttimestamp="1648471300703" timestamp="612787" />
  <Command __id="151" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:53 EDT 2022" starttimestamp="1648471300703" timestamp="612907" />
  <Command __id="152" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:53 EDT 2022" starttimestamp="1648471300703" timestamp="613254" />
  <Command __id="153" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:53 EDT 2022" starttimestamp="1648471300703" timestamp="613254" />
  <Command __id="154" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:54 EDT 2022" starttimestamp="1648471300703" timestamp="613515" />
  <Command __id="155" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:54 EDT 2022" starttimestamp="1648471300703" timestamp="613515" />
  <Command __id="156" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:54 EDT 2022" starttimestamp="1648471300703" timestamp="613882" />
  <Command __id="157" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:54 EDT 2022" starttimestamp="1648471300703" timestamp="613884" />
  <Command __id="158" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:54 EDT 2022" starttimestamp="1648471300703" timestamp="614049" />
  <Command __id="159" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:54 EDT 2022" starttimestamp="1648471300703" timestamp="614049" />
  <Command __id="160" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:51:54 EDT 2022" starttimestamp="1648471300703" timestamp="614198" />
  <Command __id="162" _type="PauseCommand" date="Mon Mar 28 08:51:59 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="618705">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4507]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="161" _type="MoveCaretCommand" caretOffset="116" date="Mon Mar 28 08:51:59 EDT 2022" docOffset="116" starttimestamp="1648471300703" timestamp="618705" />
  <Command __id="164" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 08:51:59 EDT 2022" starttimestamp="1648471300703" timestamp="619249" />
  <Command __id="166" _type="InsertStringCommand" date="Mon Mar 28 08:52:00 EDT 2022" starttimestamp="1648471300703" timestamp="619627" timestamp2="619627">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="168" _type="PauseCommand" date="Mon Mar 28 08:52:02 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="621711">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2084]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="167" _type="MoveCaretCommand" caretOffset="130" date="Mon Mar 28 08:52:02 EDT 2022" docOffset="130" starttimestamp="1648471300703" timestamp="621711" />
  <Command __id="170" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 08:52:03 EDT 2022" starttimestamp="1648471300703" timestamp="622465" />
  <Command __id="172" _type="InsertStringCommand" date="Mon Mar 28 08:52:03 EDT 2022" starttimestamp="1648471300703" timestamp="622724" timestamp2="622724">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="174" _type="PauseCommand" date="Mon Mar 28 08:52:05 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="624728">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2004]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="173" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 08:52:05 EDT 2022" starttimestamp="1648471300703" timestamp="624728" />
  <Command __id="175" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:52:05 EDT 2022" starttimestamp="1648471300703" timestamp="624816" />
  <Command __id="176" _type="EclipseCommand" commandID="" date="Mon Mar 28 08:52:05 EDT 2022" starttimestamp="1648471300703" timestamp="624853" />
  <Command __id="178" _type="PauseCommand" date="Mon Mar 28 08:52:07 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="627158">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2305]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="177" _type="MoveCaretCommand" caretOffset="1243" date="Mon Mar 28 08:52:07 EDT 2022" docOffset="1243" starttimestamp="1648471300703" timestamp="627158" />
  <Command __id="180" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 08:52:08 EDT 2022" starttimestamp="1648471300703" timestamp="627657" />
  <Command __id="182" _type="InsertStringCommand" date="Mon Mar 28 08:52:08 EDT 2022" starttimestamp="1648471300703" timestamp="628097" timestamp2="628097">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="184" _type="PauseCommand" date="Mon Mar 28 08:52:10 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="629309">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1211]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="187" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 08:52:14 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="633692" type="Run" />
  <Command __id="189" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 08:52:14 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="633692" type="Run" />
  <Command __id="191" _type="PauseCommand" date="Mon Mar 28 08:52:25 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="644458">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[10766]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="190" _type="ShellCommand" date="Mon Mar 28 08:52:25 EDT 2022" starttimestamp="1648471300703" timestamp="644458" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="193" _type="PauseCommand" date="Mon Mar 28 08:52:27 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="646775">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2317]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="192" _type="ConsoleOutput" date="Mon Mar 28 08:52:27 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="646775" type="ConsoleOutput">
    <outputString><![CDATA[Please run the checkstle plugin on your project
Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project 
A5TaggedClassesDefined did not pass completely:Did not find checkstyle text%0.0

Test execution time (ms):32
A5ExpectedInterfaces did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
A5ExpectedCalls did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):8
A5SpuriousCalls did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
A5ExpectedSignatures did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment4.style.A4ExpectedCalls@60f4e2ec . Results may change."), Diff(INSERT,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶A5TaggedClassesDefined did not pass completely:Did not find checkstyle text%0.0¶¶Test execution time (ms):32¶A5ExpectedInterfaces did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A5ExpectedCalls did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):8¶A5SpuriousCalls did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A5ExpectedSignatures did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="194" _type="ConsoleOutput" date="Mon Mar 28 08:52:27 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="646927" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.38095238095238093
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (16)
 |- checks (1)
  |~ Checks.java (36)
 |- client (5)
  |~ Client.java (22)
  |~ ClientConfigure.java (228)
  |~ ClientOutCoupler.java (47)
  |~ ClientRemoteInterface.java (23)
  |~ ClientRemoteObject.java (179)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (5)
  |~ OriginalSimulation.java (9)
  |~ Server.java (22)
  |~ ServerConfigure.java (163)
  |~ ServerRemoteInterface.java (21)
  |~ ServerRemoteObject.java (160)

Attempting to match to the structure:
|- .* (21)
 |- [a-z]?.*[Cc]lient.* (9)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (8)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)

A5ProjectOrganization did not pass completely:View console for more information%0.0

Test execution time (ms):80
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make s"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.38095238095238093¶|- represents a package, |~ represents a file¶¶The struct"), Diff(EQUAL,"ure "), Diff(DELETE,"you have installed the plugin and run checkstyle on the project ¶A5TaggedClassesDefined did not pass completely:Did not find checkstyle text%0.0¶¶Test execution time (ms):32¶A5Expec"), Diff(INSERT,"of your project was found to be:¶|- src (16)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (5)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (228)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterface.java (23)¶  |~ ClientRemoteObject.java (179)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (5)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (22)¶  |~ ServerConfigure.java (163)¶  |~ ServerRemo"), Diff(EQUAL,"te"), Diff(DELETE,"d"), Diff(EQUAL,"Interface"), Diff(DELETE,"s did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A5ExpectedCalls did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):8¶A5SpuriousCalls did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A5ExpectedSignatures did not pass completely:No checkstyle output, check console error messages"), Diff(INSERT,".java (21)¶  |~ ServerRemoteObject.java (160)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶¶A5ProjectOrganization did not pass completely:View console for more information"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):"), Diff(INSERT,"8"), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="196" _type="PauseCommand" date="Mon Mar 28 08:53:06 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="685946">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[39019]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="195" _type="ConsoleOutput" date="Mon Mar 28 08:53:06 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="685946" type="ConsoleOutput">
    <outputString><![CDATA[E*** Tags:[Server, RMI, GIPC]not found

Test execution time (ms):5605
GIPCRMIStaticArguments did not pass completely:Couldn't run code:Tags:[Server, RMI, GIPC]not found:%0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.38095238095238093¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (16)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (5)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (228)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterface.java (23)¶  |~ ClientRemoteObject.java (179)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (5)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (22)¶  |~ ServerConfigure.java (163)¶  |~ ServerRemoteInterface.java (21)¶  |~ ServerRemoteObject.java (160)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶¶A5ProjectOrganization did not pass completely:View console for more information%0.0¶¶Test execution time (ms):8"), Diff(INSERT,"E*** Tags:[Server, RMI, GIPC]not found¶¶Test execution time (ms):5605¶GIPCRMIStaticArguments did not pass completely:Couldn't run code:Tags:[Server, RMI, GIPC]not found:%"), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="197" _type="ConsoleOutput" date="Mon Mar 28 08:53:07 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="686453" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIOneClientConnection did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*%0.0

Test execution time (ms):522
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E*** Tags:[Server, RMI, GIPC]not found¶¶Test ex"), Diff(INSERT,"GIPCRMIOneClientConn"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"tion "), Diff(DELETE,"time (ms):5605¶GIPCRMIStaticArguments did not pass completely:Couldn't run code:Tags:[Server, RMI, GIPC]not found:%0"), Diff(INSERT,"did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*%0.0¶¶Test execution time (ms):522"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="198" _type="ConsoleOutput" date="Mon Mar 28 08:53:07 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="686945" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIOneClientReadWriteNonAtomic did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*
GIPC is not checked because RMI failed%0.0

Test execution time (ms):515
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMIOneClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*"), Diff(INSERT,"¶GIPC is not checked because RMI failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):5"), Diff(DELETE,"22"), Diff(INSERT,"15"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="200" _type="PauseCommand" date="Mon Mar 28 08:53:24 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="703567">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16622]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="199" _type="ConsoleOutput" date="Mon Mar 28 08:53:24 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="703567" type="ConsoleOutput">
    <outputString><![CDATA[
GIPCRMITwoClientConnection did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*%0.0
Test execution time (ms):528
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"GIPCRMI"), Diff(DELETE,"One"), Diff(INSERT,"Two"), Diff(EQUAL,"Client"), Diff(DELETE,"ReadWriteNonAtomic"), Diff(INSERT,"Connection"), Diff(EQUAL," did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*"), Diff(DELETE,"¶GIPC is not checked because RMI failed"), Diff(EQUAL,"%0.0¶"), Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):5"), Diff(DELETE,"15"), Diff(INSERT,"28"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="201" _type="ConsoleOutput" date="Mon Mar 28 08:53:24 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="704054" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMITwoClientReadWriteNonAtomic did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*
GIPC is not checked because RMI failed%0.0

Test execution time (ms):524
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"GIPCRMITwoClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*"), Diff(INSERT,"¶GIPC is not checked because RMI failed"), Diff(EQUAL,"%0.0¶"), Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):52"), Diff(DELETE,"8"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="202" _type="ConsoleOutput" date="Mon Mar 28 08:53:25 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="704597" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):511
GIPCRMIClientMetaStateNoBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*%0.0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):511¶"), Diff(EQUAL,"GIPCRMI"), Diff(DELETE,"Two"), Diff(EQUAL,"Client"), Diff(DELETE,"ReadWriteNonAtomic"), Diff(INSERT,"MetaStateNoBroadcast"), Diff(EQUAL," did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*"), Diff(DELETE,"¶GIPC is not checked because RMI failed%0.0¶¶Test execution time (ms):524"), Diff(INSERT,"%0.0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="203" _type="ConsoleOutput" date="Mon Mar 28 08:53:25 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="705064" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):510
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):51"), Diff(DELETE,"1¶GIPCRMIClientMetaStateNoBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*%0."), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="204" _type="ConsoleOutput" date="Mon Mar 28 08:53:25 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="705124" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIClientMetaStateBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*%0.0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):51"), Diff(INSERT,"GIPCRMIClientMetaStateBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*%0."), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="205" _type="ConsoleOutput" date="Mon Mar 28 08:53:26 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="705798" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIServerMetaStateNoBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*%0.0

Test execution time (ms):514
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMI"), Diff(DELETE,"Client"), Diff(INSERT,"Server"), Diff(EQUAL,"MetaState"), Diff(INSERT,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*%0.0¶"), Diff(INSERT,"¶Test execution time (ms):514¶")]]]></diff>
  </Command>
  <Command __id="206" _type="ConsoleOutput" date="Mon Mar 28 08:53:26 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="706195" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIServerMetaStateBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*%0.0

Test execution time (ms):511
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMIServerMetaState"), Diff(DELETE,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*%0.0¶¶Test execution time (ms):51"), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="208" _type="PauseCommand" date="Mon Mar 28 08:53:49 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="728329">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22134]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="207" _type="ConsoleOutput" date="Mon Mar 28 08:53:49 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="728329" type="ConsoleOutput">
    <outputString><![CDATA[A5NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0

Test execution time (ms):0
A5NamedConstants did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0

Test execution time (ms):0
A5PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0
A5InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
A5MnemonicNames did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
A5AccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMIServerMetaStateBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIRegistryLocated.*"), Diff(INSERT,"A5NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0¶¶Test execution time (ms):0¶A5NamedConstants did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶¶Test execution time (ms):0¶A5PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0¶A5InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A5MnemonicNames did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A5AccessModifiersMatched did not pass completely:No checkstyle output, check console error messages"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):"), Diff(DELETE,"511"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="210" _type="PauseCommand" date="Mon Mar 28 08:53:56 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="736046">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7717]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="213" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 08:54:14 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="754021" type="Run" />
  <Command __id="215" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 08:54:14 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="754022" type="Run" />
  <Command __id="217" _type="PauseCommand" date="Mon Mar 28 08:54:17 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="756938">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2916]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="216" _type="ShellCommand" date="Mon Mar 28 08:54:17 EDT 2022" starttimestamp="1648471300703" timestamp="756938" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="219" _type="PauseCommand" date="Mon Mar 28 08:54:19 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="758876">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1938]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="218" _type="ConsoleOutput" date="Mon Mar 28 08:54:19 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="758876" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Mar 28 08:54:19 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A5NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0¶¶Test execution time (ms):0¶A5NamedConstants did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶¶Test execution time (ms):0¶A5PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0¶A5InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A5MnemonicNames did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A5AccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Mar 28 08:54:19 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="221" _type="PauseCommand" date="Mon Mar 28 08:54:21 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="761036">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2160]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="220" _type="ConsoleOutput" date="Mon Mar 28 08:54:21 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="761036" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:65
Running second pass checks Mon Mar 28 08:54:21 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Mar 28 08:54:21 EDT 2022
End O(n2) inter- and intra class method calls:Mon Mar 28 08:54:21 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:65¶Running second pass checks Mon Mar 28 08:54:21 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Mar 28 08:54:21 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Mar 28 08:54:"), Diff(INSERT,"2"), Diff(EQUAL,"1"), Diff(DELETE,"9"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="222" _type="ConsoleOutput" date="Mon Mar 28 08:54:22 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="761955" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Mar 28 08:54:22 EDT 2022
Generating checks:Mon Mar 28 08:54:22 EDT 2022
Finished Generating checks:Mon Mar 28 08:54:22 EDT 2022
Generating externals:Mon Mar 28 08:54:22 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:65¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Mar 28 08:54:2"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Mar 28 08:54:22 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Mar 28 08:54:2"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Mar 28 08:54:2"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="223" _type="ConsoleOutput" date="Mon Mar 28 08:54:22 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="762147" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Mar 28 08:54:22 EDT 2022
A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):3341
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Mar 28 08:54:22 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Mar 28 08:54:22 EDT 2022¶Finished Generat"), Diff(INSERT,"A5NoCheckstyleWarnings did not pass completely:Warnings found "), Diff(EQUAL,"in"), Diff(DELETE,"g"), Diff(EQUAL," checks"), Diff(DELETE,":Mon Mar 28 08:54:22 EDT 2022¶Generating externals:Mon Mar 28 08:54:22 EDT 2022"), Diff(INSERT,"tyle text, see traced console output%0.0¶¶Test execution time (ms):3341"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="224" _type="ConsoleOutput" date="Mon Mar 28 08:54:22 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="762210" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):34
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Mar 28 08:54:22 EDT 2022¶A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶"), Diff(EQUAL,"Test execution time (ms):3"), Diff(DELETE,"341"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="225" _type="ConsoleOutput" date="Mon Mar 28 08:54:22 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="762276" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
Test execution time (ms):29
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"34"), Diff(INSERT,"25¶Test execution time (ms):29"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="226" _type="ConsoleOutput" date="Mon Mar 28 08:54:23 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="762350" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
Test execution time (ms):29
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL,"¶Test execution time (ms):29¶")]]]></diff>
  </Command>
  <Command __id="228" _type="PauseCommand" date="Mon Mar 28 08:54:26 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="766125">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3775]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="227" _type="ConsoleOutput" date="Mon Mar 28 08:54:26 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="766125" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment5.style.A5NoCheckstyleWarnings@518d200f . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):26¶Test execution time (ms):29"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment5.style.A5NoCheckstyleWarnings@518d200f . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="229" _type="ConsoleOutput" date="Mon Mar 28 08:54:27 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="767121" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment5.style.A5NoCheckstyleWarnings@518d200f . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment5.style.A5NoCheckstyleWarnings@518d200f . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="231" _type="PauseCommand" date="Mon Mar 28 08:54:29 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="769137">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2016]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="230" _type="ConsoleOutput" date="Mon Mar 28 08:54:29 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="769137" type="ConsoleOutput">
    <outputString><![CDATA[Unmatched tags:[ @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC]
Matched tags:[@DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI]

Test execution time (ms):6
A5TaggedClassesDefined did not pass completely:Only 3.0 matched out of 12.0 tags.
 See console text%0.25
A5ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment5.style.A5NoCheckstyleWarnings@518d200f . Results may change."), Diff(INSERT,"Unmatched tags:[ @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC]¶Matched tags:[@DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI]¶¶Test execution time (ms):6¶A5TaggedClassesDefined did not pass completely:Only 3.0 matched out of 12.0 tags.¶ See console text%0.25¶A5ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="232" _type="ConsoleOutput" date="Mon Mar 28 08:54:29 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="769143" type="ConsoleOutput">
    <outputString><![CDATA[A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):8
A5SpuriousCalls did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Unmatched tags:[ @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC]¶Matched tags:[@DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI]"), Diff(INSERT,"A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.0"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"¶A5"), Diff(DELETE,"TaggedClassesDefined did not pass completely:Only 3.0 matched out of 12.0 tags.¶ See console text%0.25¶A5ExpectedInterface"), Diff(INSERT,"SpuriousCall"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):"), Diff(DELETE,"32"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="233" _type="ConsoleOutput" date="Mon Mar 28 08:54:29 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="769237" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.0

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.38095238095238093
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (16)
 |- checks (1)
  |~ Checks.java (36)
 |- client (5)
  |~ Client.java (22)
  |~ ClientConfigure.java (228)
  |~ ClientOutCoupler.java (47)
  |~ ClientRemoteInterface.java (23)
  |~ ClientRemoteObject.java (179)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (5)
  |~ OriginalSimulation.java (9)
  |~ Server.java (22)
  |~ ServerConfigure.java (163)
  |~ ServerRemoteInterface.java (21)
  |~ ServerRemoteObject.java (160)

Attempting to match to the structure:
|- .* (21)
 |- [a-z]?.*[Cc]lient.* (9)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (8)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):2¶"), Diff(EQUAL,"A5Expected"), Diff(DELETE,"Call"), Diff(INSERT,"Signature"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0.0¶¶"), Diff(DELETE,"Test execution time (ms):8¶A5SpuriousCalls did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):8"), Diff(INSERT,"Your project does not meet the required similarity percent of: 0.95 your similarity: 0.38095238095238093¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (16)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (5)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (228)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterface.java (23)¶  |~ ClientRemoteObject.java (179)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (5)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (22)¶  |~ ServerConfigure.java (163)¶  |~ ServerRemoteInterface.java (21)¶  |~ ServerRemoteObject.java (160)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="235" _type="PauseCommand" date="Mon Mar 28 08:54:31 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="771152">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1915]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="234" _type="ConsoleOutput" date="Mon Mar 28 08:54:31 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="771152" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment5.style.A5TaggedClassesDefined@545346e4 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):2¶A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.0¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.38095238095238093¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (16)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (5)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (228)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterface.java (23)¶  |~ ClientRemoteObject.java (179)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (5)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (22)¶  |~ ServerConfigure.java (163)¶  |~ ServerRemoteInterface.java (21)¶  |~ ServerRemoteObject.java (160)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment5.style.A5TaggedClassesDefined@545346e4 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="237" _type="PauseCommand" date="Mon Mar 28 08:54:43 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="783108">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[11956]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="236" _type="ShellCommand" date="Mon Mar 28 08:54:43 EDT 2022" starttimestamp="1648471300703" timestamp="783108" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="239" _type="PauseCommand" date="Mon Mar 28 08:55:31 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="830664">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[47549]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="238" _type="ShellCommand" date="Mon Mar 28 08:55:31 EDT 2022" starttimestamp="1648471300703" timestamp="830657" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="241" _type="PauseCommand" date="Mon Mar 28 09:06:26 EDT 2022" range="10m-20m" starttimestamp="1648471300703" timestamp="1485940">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[655283]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="240" _type="ShellCommand" date="Mon Mar 28 09:06:26 EDT 2022" starttimestamp="1648471300703" timestamp="1485940" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="124" _type="Insert" date="Mon Mar 28 08:45:11 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="115" starttimestamp="1648471300703" timestamp="211041">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="163" _type="Delete" date="Mon Mar 28 08:51:59 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="3" length="1" offset="115" startLine="3" starttimestamp="1648471300703" timestamp="619237">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="165" _type="Insert" date="Mon Mar 28 08:52:00 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="115" starttimestamp="1648471300703" timestamp="619621">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <DocumentChange __id="169" _type="Delete" date="Mon Mar 28 08:52:03 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="3" length="1" offset="130" startLine="3" starttimestamp="1648471300703" timestamp="622457">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="171" _type="Insert" date="Mon Mar 28 08:52:03 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="130" starttimestamp="1648471300703" timestamp="622714">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <DocumentChange __id="179" _type="Delete" date="Mon Mar 28 08:52:08 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="33" length="1" offset="1242" startLine="33" starttimestamp="1648471300703" timestamp="627648">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="181" _type="Insert" date="Mon Mar 28 08:52:08 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="1242" starttimestamp="1648471300703" timestamp="628080">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <Command __id="243" _type="PauseCommand" date="Mon Mar 28 09:06:35 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1495051">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9111]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="244" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:06:36 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="1495398" />
  <Command __id="245" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:06:37 EDT 2022" starttimestamp="1648471300703" timestamp="1496354" />
  <Command __id="246" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:06:37 EDT 2022" starttimestamp="1648471300703" timestamp="1496362" />
  <Command __id="248" _type="PauseCommand" date="Mon Mar 28 09:06:59 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="1518751">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[22389]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="247" _type="ShellCommand" date="Mon Mar 28 09:06:59 EDT 2022" starttimestamp="1648471300703" timestamp="1518751" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="250" _type="PauseCommand" date="Mon Mar 28 09:07:10 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="1530281">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11530]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="242" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:06:35 EDT 2022" docASTNodeCount="745" docActiveCodeLength="5568" docExpressionCount="527" docLength="6167" projectName="A5" starttimestamp="1648471300703" timestamp="1495051">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import main.BeauAndersonFinalProject;
import server.ServerRemoteInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterface {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterface server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);

		// Locate Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			// TODO Auto-generated catch block
			e3.printStackTrace();
		}
		// Get server here
		
		try {
			server = (ServerRemoteInterface) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="253" _type="Insert" date="Mon Mar 28 09:07:11 EDT 2022" docASTNodeCount="745" docActiveCodeLength="5576" docExpressionCount="527" docLength="6175" length="8" offset="3199" repeat="2" starttimestamp="1648471300703" timestamp="1531290" timestamp2="1531562">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <Command __id="285" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:07:21 EDT 2022" starttimestamp="1648471300703" timestamp="1540961" />
  <Command __id="287" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:07:21 EDT 2022" starttimestamp="1648471300703" timestamp="1541040" />
  <Command __id="288" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:07:21 EDT 2022" starttimestamp="1648471300703" timestamp="1541089" />
  <Command __id="290" _type="PauseCommand" date="Mon Mar 28 09:07:26 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1545398">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4309]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="289" _type="ShellCommand" date="Mon Mar 28 09:07:26 EDT 2022" starttimestamp="1648471300703" timestamp="1545398" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="291" _type="ShellCommand" date="Mon Mar 28 09:07:26 EDT 2022" starttimestamp="1648471300703" timestamp="1545539" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="295" _type="PauseCommand" date="Mon Mar 28 09:07:30 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1549621">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[3986]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="294" _type="ShellCommand" date="Mon Mar 28 09:07:30 EDT 2022" starttimestamp="1648471300703" timestamp="1549621" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="296" _type="ShellCommand" date="Mon Mar 28 09:07:30 EDT 2022" starttimestamp="1648471300703" timestamp="1549767" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="300" _type="PauseCommand" date="Mon Mar 28 09:07:32 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1551966">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2175]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="299" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:07:32 EDT 2022" starttimestamp="1648471300703" timestamp="1551966" />
  <Command __id="301" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:07:32 EDT 2022" starttimestamp="1648471300703" timestamp="1551988" />
  <Command __id="302" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:07:32 EDT 2022" starttimestamp="1648471300703" timestamp="1552065" />
  <Command __id="304" _type="PauseCommand" date="Mon Mar 28 09:07:40 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1559356">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7286]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="303" _type="SelectTextCommand" caretOffset="2041" date="Mon Mar 28 09:07:40 EDT 2022" end="2290" start="2041" starttimestamp="1648471300703" timestamp="1559351" />
  <Command __id="305" _type="CopyCommand" date="Mon Mar 28 09:07:40 EDT 2022" starttimestamp="1648471300703" timestamp="1559722" />
  <DocumentChange __id="259" _type="Insert" date="Mon Mar 28 09:07:14 EDT 2022" docASTNodeCount="745" docActiveCodeLength="5576" docExpressionCount="527" docLength="6179" length="4" offset="3207" repeat="4" starttimestamp="1648471300703" timestamp="1533587" timestamp2="1535219">
    <text><![CDATA[//A$]]></text>
  </DocumentChange>
  <DocumentChange __id="268" _type="Delete" date="Mon Mar 28 09:07:16 EDT 2022" docASTNodeCount="745" docActiveCodeLength="5576" docExpressionCount="527" docLength="6178" endLine="77" length="1" offset="3210" startLine="77" starttimestamp="1648471300703" timestamp="1536041">
    <text><![CDATA[$]]></text>
  </DocumentChange>
  <DocumentChange __id="270" _type="Insert" date="Mon Mar 28 09:07:16 EDT 2022" docASTNodeCount="745" docActiveCodeLength="5576" docExpressionCount="527" docLength="6179" length="1" offset="3210" starttimestamp="1648471300703" timestamp="1536269">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="273" _type="Insert" date="Mon Mar 28 09:07:18 EDT 2022" docASTNodeCount="745" docActiveCodeLength="5580" docExpressionCount="527" docLength="6187" length="8" offset="3203" repeat="5" starttimestamp="1648471300703" timestamp="1537640" timestamp2="1539163">
    <text><![CDATA[//A5
		]]></text>
  </DocumentChange>
  <DocumentChange __id="283" _type="Replace" date="Mon Mar 28 09:07:20 EDT 2022" docASTNodeCount="773" docActiveCodeLength="5823" docExpressionCount="548" docLength="6430" endLine="77" insertionLength="245" int_docASTNodeCount="745" int_docActiveCodeLength="5578" int_docExpressionCount="527" int_docLength="6185" length="2" offset="3209" startLine="77" starttimestamp="1648471300703" timestamp="1539857">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="292" _type="Insert" date="Mon Mar 28 09:07:26 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5877" docExpressionCount="559" docLength="6484" length="54" offset="1058" repeat="2" starttimestamp="1648471300703" timestamp="1545635" timestamp2="1545639">
    <text><![CDATA[
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;]]></text>
  </DocumentChange>
  <DocumentChange __id="297" _type="Insert" date="Mon Mar 28 09:07:30 EDT 2022" docASTNodeCount="793" docActiveCodeLength="5919" docExpressionCount="566" docLength="6526" length="42" offset="702" repeat="2" starttimestamp="1648471300703" timestamp="1549791" timestamp2="1549799">
    <text><![CDATA[
import util.trace.bean.BeanTraceUtility;]]></text>
  </DocumentChange>
  <Command __id="307" _type="PauseCommand" date="Mon Mar 28 09:07:50 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="1569864">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[10142]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="308" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:07:50 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="1570139" />
  <Command __id="310" _type="PauseCommand" date="Mon Mar 28 09:07:58 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1577777">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7638]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="309" _type="MoveCaretCommand" caretOffset="2493" date="Mon Mar 28 09:07:58 EDT 2022" docOffset="3500" starttimestamp="1648471300703" timestamp="1577777" />
  <Command __id="312" _type="InsertStringCommand" date="Mon Mar 28 09:07:59 EDT 2022" starttimestamp="1648471300703" timestamp="1578298" timestamp2="1578298">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="318" _type="PasteCommand" date="Mon Mar 28 09:07:59 EDT 2022" starttimestamp="1648471300703" timestamp="1579223" />
  <Command __id="320" _type="InsertStringCommand" date="Mon Mar 28 09:08:00 EDT 2022" starttimestamp="1648471300703" timestamp="1580096" timestamp2="1580096">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="322" _type="InsertStringCommand" date="Mon Mar 28 09:08:01 EDT 2022" starttimestamp="1648471300703" timestamp="1580588" timestamp2="1580588">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="324" _type="InsertStringCommand" date="Mon Mar 28 09:08:01 EDT 2022" starttimestamp="1648471300703" timestamp="1581187" timestamp2="1581187">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="326" _type="InsertStringCommand" date="Mon Mar 28 09:08:02 EDT 2022" starttimestamp="1648471300703" timestamp="1581308" timestamp2="1581308">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="327" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 09:08:02 EDT 2022" starttimestamp="1648471300703" timestamp="1582139" />
  <Command __id="328" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 09:08:03 EDT 2022" starttimestamp="1648471300703" timestamp="1582369" />
  <Command __id="330" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:08:03 EDT 2022" starttimestamp="1648471300703" timestamp="1582717" />
  <Command __id="332" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:08:03 EDT 2022" starttimestamp="1648471300703" timestamp="1582928" />
  <Command __id="334" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:08:03 EDT 2022" starttimestamp="1648471300703" timestamp="1583099" />
  <Command __id="336" _type="InsertStringCommand" date="Mon Mar 28 09:08:04 EDT 2022" starttimestamp="1648471300703" timestamp="1583777" timestamp2="1583777">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="338" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:08:05 EDT 2022" starttimestamp="1648471300703" timestamp="1584447" />
  <Command __id="340" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:08:05 EDT 2022" starttimestamp="1648471300703" timestamp="1584754" />
  <Command __id="341" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 09:08:05 EDT 2022" starttimestamp="1648471300703" timestamp="1585186" />
  <Command __id="342" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 09:08:06 EDT 2022" starttimestamp="1648471300703" timestamp="1585570" />
  <Command __id="344" _type="InsertStringCommand" date="Mon Mar 28 09:08:06 EDT 2022" starttimestamp="1648471300703" timestamp="1586062" timestamp2="1586062">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="346" _type="InsertStringCommand" date="Mon Mar 28 09:08:07 EDT 2022" starttimestamp="1648471300703" timestamp="1586704" timestamp2="1586704">
    <data><![CDATA[4]]></data>
  </Command>
  <Command __id="348" _type="PauseCommand" date="Mon Mar 28 09:08:09 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="1588409">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1705]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="386" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:08:15 EDT 2022" starttimestamp="1648471300703" timestamp="1595020" />
  <Command __id="387" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:08:15 EDT 2022" starttimestamp="1648471300703" timestamp="1595086" />
  <Command __id="389" _type="PauseCommand" date="Mon Mar 28 09:08:17 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="1596822">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1735]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="388" _type="ShellCommand" date="Mon Mar 28 09:08:17 EDT 2022" starttimestamp="1648471300703" timestamp="1596821" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="391" _type="PauseCommand" date="Mon Mar 28 09:10:04 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="1703844">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[107023]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="390" _type="ShellCommand" date="Mon Mar 28 09:10:04 EDT 2022" starttimestamp="1648471300703" timestamp="1703844" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="306" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:07:50 EDT 2022" docASTNodeCount="637" docActiveCodeLength="4510" docExpressionCount="462" docLength="4990" projectName="A5" starttimestamp="1648471300703" timestamp="1569864">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterface;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI})
public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterface{
	List<ClientRemoteInterface> clientList = new ArrayList<ClientRemoteInterface>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterface aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterface originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterface client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterface server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterface) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterface client) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="311" _type="Insert" date="Mon Mar 28 09:07:58 EDT 2022" docASTNodeCount="637" docActiveCodeLength="4514" docExpressionCount="462" docLength="4994" length="4" offset="3500" starttimestamp="1648471300703" timestamp="1578278">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="313" _type="Replace" date="Mon Mar 28 09:07:59 EDT 2022" docASTNodeCount="665" docActiveCodeLength="4773" docExpressionCount="483" docLength="5257" endLine="100" insertionLength="265" int_docASTNodeCount="637" int_docActiveCodeLength="4512" int_docExpressionCount="462" int_docLength="4992" length="2" offset="3502" startLine="100" starttimestamp="1648471300703" timestamp="1578946">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		//A5
				FactoryTraceUtility.setTracing();
				BeanTraceUtility.setTracing();
				RMITraceUtility.setTracing();
				ConsensusTraceUtility.setTracing();
				ThreadDelayed.enablePrint();
				GIPCRPCTraceUtility.setTracing();
				NIOTraceUtility.setTracing();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="314" _type="Insert" date="Mon Mar 28 09:07:59 EDT 2022" docASTNodeCount="677" docActiveCodeLength="4827" docExpressionCount="494" docLength="5311" length="54" offset="1004" repeat="2" starttimestamp="1648471300703" timestamp="1579149" timestamp2="1579149">
    <text><![CDATA[
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;]]></text>
  </DocumentChange>
  <DocumentChange __id="316" _type="Insert" date="Mon Mar 28 09:07:59 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4869" docExpressionCount="501" docLength="5353" length="42" offset="539" repeat="2" starttimestamp="1648471300703" timestamp="1579149" timestamp2="1579157">
    <text><![CDATA[
import util.trace.bean.BeanTraceUtility;]]></text>
  </DocumentChange>
  <DocumentChange __id="319" _type="Insert" date="Mon Mar 28 09:08:00 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4881" docExpressionCount="501" docLength="5367" length="14" offset="3863" repeat="4" starttimestamp="1648471300703" timestamp="1580069" timestamp2="1581282">
    <text><![CDATA[
				
				//]]></text>
  </DocumentChange>
  <DocumentChange __id="329" _type="Delete" date="Mon Mar 28 09:08:03 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4878" docExpressionCount="501" docLength="5364" endLine="111" length="3" offset="3872" repeat="3" startLine="111" starttimestamp="1648471300703" timestamp="1582705" timestamp2="1583089">
    <text><![CDATA[			]]></text>
  </DocumentChange>
  <DocumentChange __id="335" _type="Replace" date="Mon Mar 28 09:08:04 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4881" docExpressionCount="501" docLength="5367" endLine="111" insertionLength="4" int_docASTNodeCount="685" int_docActiveCodeLength="4877" int_docExpressionCount="501" int_docLength="5363" length="1" offset="3871" startLine="111" starttimestamp="1648471300703" timestamp="1583763">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[				]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="337" _type="Delete" date="Mon Mar 28 09:08:05 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4879" docExpressionCount="501" docLength="5365" endLine="111" length="2" offset="3873" repeat="2" startLine="111" starttimestamp="1648471300703" timestamp="1584433" timestamp2="1584747">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="343" _type="Insert" date="Mon Mar 28 09:08:06 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4879" docExpressionCount="501" docLength="5367" length="2" offset="3875" repeat="2" starttimestamp="1648471300703" timestamp="1586051" timestamp2="1586690">
    <text><![CDATA[A4]]></text>
  </DocumentChange>
  <DocumentChange __id="349" _type="Delete" date="Mon Mar 28 09:08:09 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4877" docExpressionCount="501" docLength="5365" endLine="103" length="2" offset="3608" repeat="2" startLine="103" starttimestamp="1648471300703" timestamp="1588781" timestamp2="1588944">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="356" _type="Delete" date="Mon Mar 28 09:08:11 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4875" docExpressionCount="501" docLength="5363" endLine="104" length="2" offset="3645" repeat="2" startLine="104" starttimestamp="1648471300703" timestamp="1590783" timestamp2="1590993">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="361" _type="Delete" date="Mon Mar 28 09:08:12 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4873" docExpressionCount="501" docLength="5361" endLine="105" length="2" offset="3679" repeat="2" startLine="105" starttimestamp="1648471300703" timestamp="1591488" timestamp2="1591668">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="366" _type="Delete" date="Mon Mar 28 09:08:12 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4871" docExpressionCount="501" docLength="5359" endLine="106" length="2" offset="3712" repeat="2" startLine="106" starttimestamp="1648471300703" timestamp="1592103" timestamp2="1592287">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="371" _type="Delete" date="Mon Mar 28 09:08:13 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4869" docExpressionCount="501" docLength="5357" endLine="107" length="2" offset="3751" repeat="2" startLine="107" starttimestamp="1648471300703" timestamp="1592752" timestamp2="1592924">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="376" _type="Delete" date="Mon Mar 28 09:08:14 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4867" docExpressionCount="501" docLength="5355" endLine="108" length="2" offset="3783" repeat="2" startLine="108" starttimestamp="1648471300703" timestamp="1593356" timestamp2="1593531">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="381" _type="Delete" date="Mon Mar 28 09:08:14 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4865" docExpressionCount="501" docLength="5353" endLine="109" length="2" offset="3820" repeat="2" startLine="109" starttimestamp="1648471300703" timestamp="1593930" timestamp2="1594134">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <Command __id="393" _type="PauseCommand" date="Mon Mar 28 09:10:20 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="1719961">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16117]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="394" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:10:21 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="1720439" />
  <Command __id="392" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:10:20 EDT 2022" docASTNodeCount="113" docActiveCodeLength="824" docExpressionCount="66" docLength="824" projectName="A5" starttimestamp="1648471300703" timestamp="1719961">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerRemoteInterface.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterface;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterface  extends Remote{
	public void registerClient(ClientRemoteInterface aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterface originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterface client) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="396" _type="PauseCommand" date="Mon Mar 28 09:10:29 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1728380">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7941]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="397" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:10:29 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="1728921" />
  <Command __id="399" _type="PauseCommand" date="Mon Mar 28 09:10:32 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1731593">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2672]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="398" _type="MoveCaretCommand" caretOffset="114" date="Mon Mar 28 09:10:32 EDT 2022" docOffset="422" starttimestamp="1648471300703" timestamp="1731593" />
  <Command __id="395" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:10:29 EDT 2022" docASTNodeCount="193" docActiveCodeLength="1486" docExpressionCount="132" docLength="1486" projectName="A5" starttimestamp="1648471300703" timestamp="1728380">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import server.ServerRemoteInterface;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI})
public class ClientOutCoupler implements PropertyChangeListener{
	ServerRemoteInterface ObservingServer;
	ClientRemoteInterface originalClient;
	String ORIGINAL_CLIENT_NAME;
	
	int aProposalNumber = 0;
	
	public ClientOutCoupler (ServerRemoteInterface anObservingServer, ClientRemoteInterface aClient, String aClientName) {
		ObservingServer = anObservingServer;
		originalClient = aClient;
		ORIGINAL_CLIENT_NAME = aClientName;
		
		
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent anEvent) {
		if (!anEvent.getPropertyName().equals("InputString")) return;
		String newCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, newCommand);
		
		System.out.println("Command being sent from coupler:" + newCommand);
		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);
		try {
			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}

}
]]></snapshot>
  </Command>
  <Command __id="401" _type="PauseCommand" date="Mon Mar 28 09:10:33 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="1733087">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1494]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="402" _type="InsertStringCommand" date="Mon Mar 28 09:10:33 EDT 2022" starttimestamp="1648471300703" timestamp="1733095" timestamp2="1733095">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="404" _type="InsertStringCommand" date="Mon Mar 28 09:10:33 EDT 2022" starttimestamp="1648471300703" timestamp="1733200" timestamp2="1733200">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="406" _type="PauseCommand" date="Mon Mar 28 09:10:36 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1735946">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2746]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="405" _type="ShellCommand" date="Mon Mar 28 09:10:36 EDT 2022" starttimestamp="1648471300703" timestamp="1735946" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="408" _type="PauseCommand" date="Mon Mar 28 09:10:41 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1740524">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4578]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="407" _type="ShellCommand" date="Mon Mar 28 09:10:41 EDT 2022" starttimestamp="1648471300703" timestamp="1740524" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="409" _type="MoveCaretCommand" caretOffset="116" date="Mon Mar 28 09:10:41 EDT 2022" docOffset="424" starttimestamp="1648471300703" timestamp="1740607" />
  <Command __id="411" _type="PasteCommand" date="Mon Mar 28 09:10:41 EDT 2022" starttimestamp="1648471300703" timestamp="1741210" />
  <Command __id="412" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:10:42 EDT 2022" starttimestamp="1648471300703" timestamp="1742197" />
  <Command __id="413" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:10:42 EDT 2022" starttimestamp="1648471300703" timestamp="1742289" />
  <Command __id="414" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:10:43 EDT 2022" starttimestamp="1648471300703" timestamp="1742371" />
  <DocumentChange __id="400" _type="Insert" date="Mon Mar 28 09:10:33 EDT 2022" docASTNodeCount="193" docActiveCodeLength="1488" docExpressionCount="132" docLength="1488" length="2" offset="422" repeat="2" starttimestamp="1648471300703" timestamp="1733087" timestamp2="1733187">
    <text><![CDATA[, ]]></text>
  </DocumentChange>
  <DocumentChange __id="410" _type="Insert" date="Mon Mar 28 09:10:41 EDT 2022" docASTNodeCount="196" docActiveCodeLength="1508" docExpressionCount="135" docLength="1508" length="20" offset="424" starttimestamp="1648471300703" timestamp="1741179">
    <text><![CDATA[DistributedTags.GIPC]]></text>
  </DocumentChange>
  <Command __id="416" _type="PauseCommand" date="Mon Mar 28 09:11:40 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="1799845">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[57474]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="417" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:11:40 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="1800179" />
  <Command __id="419" _type="PauseCommand" date="Mon Mar 28 09:12:09 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="1829212">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[29033]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="420" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 09:12:16 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="1835851" />
  <Command __id="422" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Mon Mar 28 09:12:16 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="1835851" />
  <Command __id="423" _type="ShellCommand" date="Mon Mar 28 09:12:16 EDT 2022" starttimestamp="1648471300703" timestamp="1836237" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="424" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:12:16 EDT 2022" starttimestamp="1648471300703" timestamp="1836276" />
  <Command __id="425" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Mon Mar 28 09:12:16 EDT 2022" starttimestamp="1648471300703" timestamp="1836276" />
  <Command __id="426" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:12:17 EDT 2022" starttimestamp="1648471300703" timestamp="1836431" />
  <Command __id="415" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:11:40 EDT 2022" docASTNodeCount="113" docActiveCodeLength="824" docExpressionCount="66" docLength="824" projectName="A5" starttimestamp="1648471300703" timestamp="1799845">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerRemoteInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterface;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterface  extends Remote{¶	public void registerClient(ClientRemoteInterface aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterface originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterface client) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="428" _type="PauseCommand" date="Mon Mar 28 09:12:21 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1841096">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4665]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="429" _type="MoveCaretCommand" caretOffset="2720" date="Mon Mar 28 09:12:22 EDT 2022" docOffset="3823" starttimestamp="1648471300703" timestamp="1841412" />
  <Command __id="431" _type="PauseCommand" date="Mon Mar 28 09:12:48 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="1868271">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[26859]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="430" _type="CopyCommand" date="Mon Mar 28 09:12:48 EDT 2022" starttimestamp="1648471300703" timestamp="1868271" />
  <Command __id="432" _type="ShellCommand" date="Mon Mar 28 09:12:49 EDT 2022" starttimestamp="1648471300703" timestamp="1868906" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="434" _type="PauseCommand" date="Mon Mar 28 09:12:54 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1873857">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4951]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="433" _type="ShellCommand" date="Mon Mar 28 09:12:54 EDT 2022" starttimestamp="1648471300703" timestamp="1873857" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="435" _type="PasteCommand" date="Mon Mar 28 09:12:54 EDT 2022" starttimestamp="1648471300703" timestamp="1874120" />
  <Command __id="436" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:12:54 EDT 2022" starttimestamp="1648471300703" timestamp="1874170" />
  <Command __id="437" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:12:54 EDT 2022" starttimestamp="1648471300703" timestamp="1874206" />
  <Command __id="427" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:12:21 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4874" docExpressionCount="501" docLength="5362" projectName="A5" starttimestamp="1648471300703" timestamp="1841096">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterface;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶"), Diff(INSERT,"import util.trace.bean.BeanTraceUtility;¶"), Diff(EQUAL,"import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶"), Diff(INSERT,"import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶"), Diff(EQUAL,"import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL,"{¶	List<ClientRemoteInterface> clientList = new ArrayList<ClientRemoteInterface>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterface aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterface originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterface client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		"), Diff(INSERT,"//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		"), Diff(EQUAL,"PortTraceUtility.setTracing();¶"), Diff(DELETE,""), Diff(EQUAL,"		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶"), Diff(DELETE,""), Diff(EQUAL,"			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL,") this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterface client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterface;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI})
public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterface> clientList = new ArrayList<ClientRemoteInterface>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterface aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterface originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterface client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterface client) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="439" _type="PauseCommand" date="Mon Mar 28 09:13:02 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1881719">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7513]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="440" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:13:02 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="1882175" />
  <Command __id="442" _type="PauseCommand" date="Mon Mar 28 09:13:04 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="1883966">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1791]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="441" _type="MoveCaretCommand" caretOffset="113" date="Mon Mar 28 09:13:04 EDT 2022" docOffset="253" starttimestamp="1648471300703" timestamp="1883966" />
  <Command __id="444" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:13:05 EDT 2022" starttimestamp="1648471300703" timestamp="1884346" />
  <Command __id="446" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:13:05 EDT 2022" starttimestamp="1648471300703" timestamp="1884529" />
  <Command __id="448" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:13:05 EDT 2022" starttimestamp="1648471300703" timestamp="1884680" />
  <Command __id="450" _type="InsertStringCommand" date="Mon Mar 28 09:13:05 EDT 2022" starttimestamp="1648471300703" timestamp="1885070" timestamp2="1885070">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="452" _type="InsertStringCommand" date="Mon Mar 28 09:13:06 EDT 2022" starttimestamp="1648471300703" timestamp="1885548" timestamp2="1885548">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="454" _type="InsertStringCommand" date="Mon Mar 28 09:13:06 EDT 2022" starttimestamp="1648471300703" timestamp="1885668" timestamp2="1885668">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="456" _type="InsertStringCommand" date="Mon Mar 28 09:13:06 EDT 2022" starttimestamp="1648471300703" timestamp="1886041" timestamp2="1886041">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="457" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:13:07 EDT 2022" starttimestamp="1648471300703" timestamp="1886773" />
  <Command __id="458" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:13:07 EDT 2022" starttimestamp="1648471300703" timestamp="1886860" />
  <Command __id="459" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:13:07 EDT 2022" starttimestamp="1648471300703" timestamp="1886898" />
  <Command __id="438" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:13:02 EDT 2022" docASTNodeCount="113" docActiveCodeLength="828" docExpressionCount="66" docLength="828" projectName="A5" starttimestamp="1648471300703" timestamp="1881719">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterface;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceGIPC  extends Remote{
	public void registerClient(ClientRemoteInterface aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterface originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterface client) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="443" _type="Delete" date="Mon Mar 28 09:13:05 EDT 2022" docASTNodeCount="106" docActiveCodeLength="825" docExpressionCount="59" docLength="825" endLine="9" length="3" offset="250" repeat="3" startLine="9" starttimestamp="1648471300703" timestamp="1884332" timestamp2="1884670">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="449" _type="Insert" date="Mon Mar 28 09:13:05 EDT 2022" docASTNodeCount="113" docActiveCodeLength="829" docExpressionCount="66" docLength="829" length="4" offset="250" repeat="4" starttimestamp="1648471300703" timestamp="1885055" timestamp2="1886020">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="461" _type="PauseCommand" date="Mon Mar 28 09:13:16 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1895548">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8650]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="462" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:13:16 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="1896075" />
  <Command __id="464" _type="PauseCommand" date="Mon Mar 28 09:13:18 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="1897824">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1749]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="463" _type="MoveCaretCommand" caretOffset="116" date="Mon Mar 28 09:13:18 EDT 2022" docOffset="1122" starttimestamp="1648471300703" timestamp="1897824" />
  <Command __id="466" _type="InsertStringCommand" date="Mon Mar 28 09:13:19 EDT 2022" starttimestamp="1648471300703" timestamp="1898361" timestamp2="1898361">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="468" _type="InsertStringCommand" date="Mon Mar 28 09:13:19 EDT 2022" starttimestamp="1648471300703" timestamp="1898939" timestamp2="1898939">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="470" _type="PauseCommand" date="Mon Mar 28 09:13:21 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1901155">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2216]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="469" _type="SelectTextCommand" caretOffset="97" date="Mon Mar 28 09:13:21 EDT 2022" end="116" start="97" starttimestamp="1648471300703" timestamp="1901155" />
  <Command __id="471" _type="CopyCommand" date="Mon Mar 28 09:13:22 EDT 2022" starttimestamp="1648471300703" timestamp="1901456" />
  <Command __id="472" _type="MoveCaretCommand" caretOffset="119" date="Mon Mar 28 09:13:23 EDT 2022" docOffset="1125" starttimestamp="1648471300703" timestamp="1902339" />
  <Command __id="473" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 09:13:23 EDT 2022" starttimestamp="1648471300703" timestamp="1902888" />
  <Command __id="475" _type="PasteCommand" date="Mon Mar 28 09:13:23 EDT 2022" starttimestamp="1648471300703" timestamp="1903195" />
  <Command __id="460" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:13:16 EDT 2022" docASTNodeCount="652" docActiveCodeLength="4582" docExpressionCount="470" docLength="5062" projectName="A5" starttimestamp="1648471300703" timestamp="1895548">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterface;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI})
public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterface> clientList = new ArrayList<ClientRemoteInterface>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//int aProposalNumber = 0;
	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterface aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterface originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterface client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterface client) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="465" _type="Insert" date="Mon Mar 28 09:13:19 EDT 2022" docASTNodeCount="652" docActiveCodeLength="4584" docExpressionCount="470" docLength="5064" length="2" offset="1122" repeat="2" starttimestamp="1648471300703" timestamp="1898351" timestamp2="1898926">
    <text><![CDATA[, ]]></text>
  </DocumentChange>
  <DocumentChange __id="474" _type="Insert" date="Mon Mar 28 09:13:23 EDT 2022" docASTNodeCount="655" docActiveCodeLength="4603" docExpressionCount="473" docLength="5083" length="19" offset="1124" starttimestamp="1648471300703" timestamp="1903161">
    <text><![CDATA[DistributedTags.RMI]]></text>
  </DocumentChange>
  <Command __id="477" _type="PauseCommand" date="Mon Mar 28 09:13:25 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="1904317">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1122]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="476" _type="Delete" date="Mon Mar 28 09:13:25 EDT 2022" docASTNodeCount="645" docActiveCodeLength="4600" docExpressionCount="463" docLength="5080" endLine="27" length="3" offset="1140" repeat="3" startLine="27" starttimestamp="1648471300703" timestamp="1904317" timestamp2="1904605">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="478" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:13:25 EDT 2022" starttimestamp="1648471300703" timestamp="1904327" />
  <Command __id="480" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:13:25 EDT 2022" starttimestamp="1648471300703" timestamp="1904449" />
  <Command __id="482" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:13:25 EDT 2022" starttimestamp="1648471300703" timestamp="1904613" />
  <Command __id="484" _type="InsertStringCommand" date="Mon Mar 28 09:13:25 EDT 2022" starttimestamp="1648471300703" timestamp="1904907" timestamp2="1904907">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="486" _type="InsertStringCommand" date="Mon Mar 28 09:13:26 EDT 2022" starttimestamp="1648471300703" timestamp="1905368" timestamp2="1905368">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="488" _type="InsertStringCommand" date="Mon Mar 28 09:13:26 EDT 2022" starttimestamp="1648471300703" timestamp="1905455" timestamp2="1905455">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="490" _type="InsertStringCommand" date="Mon Mar 28 09:13:26 EDT 2022" starttimestamp="1648471300703" timestamp="1905701" timestamp2="1905701">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="491" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:13:27 EDT 2022" starttimestamp="1648471300703" timestamp="1906335" />
  <Command __id="492" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:13:27 EDT 2022" starttimestamp="1648471300703" timestamp="1906377" />
  <Command __id="493" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:13:27 EDT 2022" starttimestamp="1648471300703" timestamp="1906481" />
  <DocumentChange __id="483" _type="Insert" date="Mon Mar 28 09:13:25 EDT 2022" docASTNodeCount="655" docActiveCodeLength="4604" docExpressionCount="473" docLength="5084" length="4" offset="1140" repeat="4" starttimestamp="1648471300703" timestamp="1904884" timestamp2="1905687">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="495" _type="PauseCommand" date="Mon Mar 28 09:13:36 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1915592">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9111]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="496" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:13:36 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="1916112" />
  <Command __id="498" _type="PauseCommand" date="Mon Mar 28 09:13:45 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1924581">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8469]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="497" _type="ShellCommand" date="Mon Mar 28 09:13:45 EDT 2022" starttimestamp="1648471300703" timestamp="1924581" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="500" _type="PauseCommand" date="Mon Mar 28 09:13:54 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1934018">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9437]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="499" _type="ShellCommand" date="Mon Mar 28 09:13:54 EDT 2022" starttimestamp="1648471300703" timestamp="1934018" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="501" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Mon Mar 28 09:13:54 EDT 2022" starttimestamp="1648471300703" timestamp="1934051" />
  <Command __id="503" _type="PauseCommand" date="Mon Mar 28 09:13:57 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1936908">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2857]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="502" _type="ShellCommand" date="Mon Mar 28 09:13:57 EDT 2022" starttimestamp="1648471300703" timestamp="1936908" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="505" _type="PauseCommand" date="Mon Mar 28 09:14:04 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1943596">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6688]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="504" _type="ShellCommand" date="Mon Mar 28 09:14:04 EDT 2022" starttimestamp="1648471300703" timestamp="1943596" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="507" _type="PauseCommand" date="Mon Mar 28 09:14:09 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1949259">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5663]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="506" _type="CopyCommand" date="Mon Mar 28 09:14:09 EDT 2022" starttimestamp="1648471300703" timestamp="1949259" />
  <Command __id="508" _type="ShellCommand" date="Mon Mar 28 09:14:10 EDT 2022" starttimestamp="1648471300703" timestamp="1949786" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="510" _type="PauseCommand" date="Mon Mar 28 09:14:14 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1953891">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4105]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="509" _type="ShellCommand" date="Mon Mar 28 09:14:14 EDT 2022" starttimestamp="1648471300703" timestamp="1953891" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="511" _type="PasteCommand" date="Mon Mar 28 09:14:14 EDT 2022" starttimestamp="1648471300703" timestamp="1954152" />
  <Command __id="512" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:14:14 EDT 2022" starttimestamp="1648471300703" timestamp="1954216" />
  <Command __id="513" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:14:14 EDT 2022" starttimestamp="1648471300703" timestamp="1954274" />
  <Command __id="494" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:13:36 EDT 2022" docASTNodeCount="138" docActiveCodeLength="839" docExpressionCount="95" docLength="879" projectName="A5" starttimestamp="1648471300703" timestamp="1915592">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\registry\TrickOrTreatRegistry.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package registry;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Scanner;

import util.annotations.Tags;
import util.tags.DistributedTags;

import  util.trace.port.rpc.rmi.RMIRegistryCreated;
import assignments.util.mainArgs.RegistryArgsProcessor;

@Tags({DistributedTags.REGISTRY, DistributedTags.RMI})
public class TrickOrTreatRegistry {
	//TODO get rid of hard coded port number
	 private static int SERVER_PORT = 1099;

	public static void main (final String[] args) {
		SERVER_PORT = RegistryArgsProcessor.getRegistryPort(args);
		 try {
			final Registry rmiRegistry = LocateRegistry.createRegistry(SERVER_PORT);
			Scanner scanner = new Scanner(System.in);
		    scanner.nextLine();

			
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		 
	 }

}
]]></snapshot>
  </Command>
  <Command __id="515" _type="PauseCommand" date="Mon Mar 28 09:14:17 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1956456">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2182]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="516" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:14:18 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="1957316" />
  <Command __id="518" _type="PauseCommand" date="Mon Mar 28 09:14:19 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="1958632">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1316]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="517" _type="MoveCaretCommand" caretOffset="114" date="Mon Mar 28 09:14:19 EDT 2022" docOffset="268" starttimestamp="1648471300703" timestamp="1958632" />
  <Command __id="519" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 09:14:19 EDT 2022" starttimestamp="1648471300703" timestamp="1959148" />
  <Command __id="521" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:14:20 EDT 2022" starttimestamp="1648471300703" timestamp="1959514" />
  <Command __id="523" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:14:20 EDT 2022" starttimestamp="1648471300703" timestamp="1959650" />
  <Command __id="525" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:14:20 EDT 2022" starttimestamp="1648471300703" timestamp="1959758" />
  <Command __id="527" _type="InsertStringCommand" date="Mon Mar 28 09:14:20 EDT 2022" starttimestamp="1648471300703" timestamp="1960209" timestamp2="1960209">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="529" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:14:21 EDT 2022" starttimestamp="1648471300703" timestamp="1960958" />
  <Command __id="531" _type="InsertStringCommand" date="Mon Mar 28 09:14:21 EDT 2022" starttimestamp="1648471300703" timestamp="1961146" timestamp2="1961146">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="533" _type="InsertStringCommand" date="Mon Mar 28 09:14:22 EDT 2022" starttimestamp="1648471300703" timestamp="1961486" timestamp2="1961486">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="535" _type="InsertStringCommand" date="Mon Mar 28 09:14:22 EDT 2022" starttimestamp="1648471300703" timestamp="1961596" timestamp2="1961596">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="537" _type="InsertStringCommand" date="Mon Mar 28 09:14:22 EDT 2022" starttimestamp="1648471300703" timestamp="1961922" timestamp2="1961922">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="539" _type="PauseCommand" date="Mon Mar 28 09:14:23 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="1963162">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1240]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="538" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:14:23 EDT 2022" starttimestamp="1648471300703" timestamp="1963162" />
  <Command __id="540" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:14:23 EDT 2022" starttimestamp="1648471300703" timestamp="1963234" />
  <Command __id="541" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:14:23 EDT 2022" starttimestamp="1648471300703" timestamp="1963288" />
  <Command __id="514" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:14:17 EDT 2022" docASTNodeCount="83" docActiveCodeLength="628" docExpressionCount="53" docLength="662" projectName="A5" starttimestamp="1648471300703" timestamp="1956456">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

}
]]></snapshot>
  </Command>
  <DocumentChange __id="520" _type="Delete" date="Mon Mar 28 09:14:20 EDT 2022" docASTNodeCount="76" docActiveCodeLength="625" docExpressionCount="46" docLength="659" endLine="9" length="3" offset="264" repeat="3" startLine="9" starttimestamp="1648471300703" timestamp="1959475" timestamp2="1959746">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="526" _type="Insert" date="Mon Mar 28 09:14:20 EDT 2022" docASTNodeCount="83" docActiveCodeLength="626" docExpressionCount="53" docLength="660" length="1" offset="264" starttimestamp="1648471300703" timestamp="1960174">
    <text><![CDATA[C]]></text>
  </DocumentChange>
  <DocumentChange __id="528" _type="Delete" date="Mon Mar 28 09:14:21 EDT 2022" docASTNodeCount="76" docActiveCodeLength="625" docExpressionCount="46" docLength="659" endLine="9" length="1" offset="264" startLine="9" starttimestamp="1648471300703" timestamp="1960947">
    <text><![CDATA[C]]></text>
  </DocumentChange>
  <DocumentChange __id="530" _type="Insert" date="Mon Mar 28 09:14:21 EDT 2022" docASTNodeCount="83" docActiveCodeLength="629" docExpressionCount="53" docLength="663" length="4" offset="264" repeat="4" starttimestamp="1648471300703" timestamp="1961129" timestamp2="1961899">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="543" _type="PauseCommand" date="Mon Mar 28 09:14:26 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1965521">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2232]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="544" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:14:27 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="1966428" />
  <Command __id="545" _type="MoveCaretCommand" caretOffset="112" date="Mon Mar 28 09:14:27 EDT 2022" docOffset="266" starttimestamp="1648471300703" timestamp="1967174" />
  <Command __id="546" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 09:14:28 EDT 2022" starttimestamp="1648471300703" timestamp="1967942" />
  <Command __id="542" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:14:26 EDT 2022" docASTNodeCount="83" docActiveCodeLength="624" docExpressionCount="53" docLength="658" projectName="A5" starttimestamp="1648471300703" timestamp="1965520">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterface.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterface  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="548" _type="PauseCommand" date="Mon Mar 28 09:14:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1970554">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2612]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="549" _type="MoveCaretCommand" caretOffset="114" date="Mon Mar 28 09:14:31 EDT 2022" docOffset="268" starttimestamp="1648471300703" timestamp="1971099" />
  <Command __id="551" _type="PauseCommand" date="Mon Mar 28 09:14:37 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="1976733">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5634]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="552" _type="ShellCommand" date="Mon Mar 28 09:14:41 EDT 2022" starttimestamp="1648471300703" timestamp="1980438" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="554" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:14:41 EDT 2022" starttimestamp="1648471300703" timestamp="1980489" />
  <Command __id="555" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:14:41 EDT 2022" starttimestamp="1648471300703" timestamp="1980675" />
  <Command __id="557" _type="PauseCommand" date="Mon Mar 28 09:14:44 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1983661">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2986]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="556" _type="ShellCommand" date="Mon Mar 28 09:14:44 EDT 2022" starttimestamp="1648471300703" timestamp="1983661" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="559" _type="PauseCommand" date="Mon Mar 28 09:14:48 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1988127">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4465]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="558" _type="ShellCommand" date="Mon Mar 28 09:14:48 EDT 2022" starttimestamp="1648471300703" timestamp="1988126" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="547" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:14:31 EDT 2022" docASTNodeCount="83" docActiveCodeLength="629" docExpressionCount="53" docLength="663" projectName="A5" starttimestamp="1648471300703" timestamp="1970554">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags."), Diff(DELETE,"RMI"), Diff(INSERT,"GIPC"), Diff(EQUAL,"})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="561" _type="PauseCommand" date="Mon Mar 28 09:14:52 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1991529">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3403]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="562" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:14:52 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="1992019" />
  <Command __id="564" _type="PauseCommand" date="Mon Mar 28 09:14:55 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="1994566">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2547]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="563" _type="SelectTextCommand" caretOffset="106" date="Mon Mar 28 09:14:55 EDT 2022" end="125" start="106" starttimestamp="1648471300703" timestamp="1994566" />
  <Command __id="565" _type="CopyCommand" date="Mon Mar 28 09:14:55 EDT 2022" starttimestamp="1648471300703" timestamp="1995170" />
  <Command __id="567" _type="PauseCommand" date="Mon Mar 28 09:14:56 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="1996206">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1036]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="566" _type="MoveCaretCommand" caretOffset="125" date="Mon Mar 28 09:14:56 EDT 2022" docOffset="1376" starttimestamp="1648471300703" timestamp="1996206" />
  <Command __id="569" _type="InsertStringCommand" date="Mon Mar 28 09:14:57 EDT 2022" starttimestamp="1648471300703" timestamp="1996875" timestamp2="1996875">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="571" _type="InsertStringCommand" date="Mon Mar 28 09:14:57 EDT 2022" starttimestamp="1648471300703" timestamp="1997086" timestamp2="1997086">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="573" _type="PasteCommand" date="Mon Mar 28 09:14:58 EDT 2022" starttimestamp="1648471300703" timestamp="1997451" />
  <Command __id="560" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:14:52 EDT 2022" docASTNodeCount="895" docActiveCodeLength="6726" docExpressionCount="626" docLength="7613" projectName="A5" starttimestamp="1648471300703" timestamp="1991529">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import main.BeauAndersonFinalProject;
import server.ServerRemoteInterfaceRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI})
public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);

		// Locate Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			// TODO Auto-generated catch block
			e3.printStackTrace();
		}
		// Get server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		//NOTE This is just a hacky way of satisfying tests
		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();
		clientOutCoupler = new ClientOutCoupler(server, aClient, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}
	
	
	@Override	
	public void trace(boolean newValue) {
		super.trace(newValue);
		Tracer.showInfo(isTrace());
	}
	
	@Override
	public void experimentInput() {
		long aStartTime = System.currentTimeMillis();
		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);
		boolean anOldValue = isTrace();
		this.trace(false);
		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {
			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);
		
		}
		trace(anOldValue);
		long anEndTime = System.currentTimeMillis();
		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);
		
	}
	
	@Override
	/*
	 * This override is not really needed, provided here to show that this method
	 * exists.
	 */
	public void delaySends(int aMillisecondDelay) {
		// getDelay() can be used to determine the delay
		// in other parts of the program
		super.delaySends(aMillisecondDelay);
	}
	
	@Override
	/**
	 * Relevant in consistency assignments only 
	 */
	public void atomicBroadcast(boolean newValue) {
		super.atomicBroadcast(newValue);
		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="568" _type="Insert" date="Mon Mar 28 09:14:57 EDT 2022" docASTNodeCount="898" docActiveCodeLength="6747" docExpressionCount="629" docLength="7634" length="21" offset="1376" repeat="3" starttimestamp="1648471300703" timestamp="1996861" timestamp2="1997421">
    <text><![CDATA[, DistributedTags.RMI]]></text>
  </DocumentChange>
  <Command __id="575" _type="PauseCommand" date="Mon Mar 28 09:14:59 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="1998764">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1313]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="574" _type="Delete" date="Mon Mar 28 09:14:59 EDT 2022" docASTNodeCount="888" docActiveCodeLength="6744" docExpressionCount="619" docLength="7631" endLine="33" length="3" offset="1394" repeat="3" startLine="33" starttimestamp="1648471300703" timestamp="1998764" timestamp2="1999072">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="576" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:14:59 EDT 2022" starttimestamp="1648471300703" timestamp="1998777" />
  <Command __id="578" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:14:59 EDT 2022" starttimestamp="1648471300703" timestamp="1998937" />
  <Command __id="580" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:14:59 EDT 2022" starttimestamp="1648471300703" timestamp="1999079" />
  <Command __id="582" _type="InsertStringCommand" date="Mon Mar 28 09:15:00 EDT 2022" starttimestamp="1648471300703" timestamp="1999405" timestamp2="1999405">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="584" _type="InsertStringCommand" date="Mon Mar 28 09:15:00 EDT 2022" starttimestamp="1648471300703" timestamp="1999537" timestamp2="1999537">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="586" _type="InsertStringCommand" date="Mon Mar 28 09:15:00 EDT 2022" starttimestamp="1648471300703" timestamp="1999683" timestamp2="1999683">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="588" _type="InsertStringCommand" date="Mon Mar 28 09:15:00 EDT 2022" starttimestamp="1648471300703" timestamp="1999952" timestamp2="1999952">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="590" _type="PauseCommand" date="Mon Mar 28 09:15:01 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2001054">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1102]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="589" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:15:01 EDT 2022" starttimestamp="1648471300703" timestamp="2001054" />
  <Command __id="591" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:15:01 EDT 2022" starttimestamp="1648471300703" timestamp="2001136" />
  <Command __id="592" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:15:01 EDT 2022" starttimestamp="1648471300703" timestamp="2001191" />
  <Command __id="594" _type="PauseCommand" date="Mon Mar 28 09:15:08 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2007581">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6390]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="593" _type="ShellCommand" date="Mon Mar 28 09:15:08 EDT 2022" starttimestamp="1648471300703" timestamp="2007581" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="596" _type="PauseCommand" date="Mon Mar 28 09:15:34 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="2034011">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[26430]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="595" _type="ShellCommand" date="Mon Mar 28 09:15:34 EDT 2022" starttimestamp="1648471300703" timestamp="2034011" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="598" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:15:36 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="2035592" />
  <Command __id="600" _type="PauseCommand" date="Mon Mar 28 09:15:39 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2038908">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3316]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="599" _type="SelectTextCommand" caretOffset="87" date="Mon Mar 28 09:15:39 EDT 2022" end="106" start="87" starttimestamp="1648471300703" timestamp="2038908" />
  <Command __id="601" _type="CopyCommand" date="Mon Mar 28 09:15:39 EDT 2022" starttimestamp="1648471300703" timestamp="2039235" />
  <Command __id="603" _type="PauseCommand" date="Mon Mar 28 09:15:41 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2040664">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1429]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="602" _type="MoveCaretCommand" caretOffset="106" date="Mon Mar 28 09:15:41 EDT 2022" docOffset="174" starttimestamp="1648471300703" timestamp="2040664" />
  <Command __id="605" _type="InsertStringCommand" date="Mon Mar 28 09:15:41 EDT 2022" starttimestamp="1648471300703" timestamp="2041260" timestamp2="2041260">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="607" _type="InsertStringCommand" date="Mon Mar 28 09:15:42 EDT 2022" starttimestamp="1648471300703" timestamp="2041449" timestamp2="2041449">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="609" _type="PasteCommand" date="Mon Mar 28 09:15:42 EDT 2022" starttimestamp="1648471300703" timestamp="2041763" />
  <DocumentChange __id="581" _type="Insert" date="Mon Mar 28 09:15:00 EDT 2022" docASTNodeCount="898" docActiveCodeLength="6748" docExpressionCount="629" docLength="7635" length="4" offset="1394" repeat="4" starttimestamp="1648471300703" timestamp="1999384" timestamp2="1999926">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="597" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:15:35 EDT 2022" docASTNodeCount="71" docActiveCodeLength="434" docExpressionCount="42" docLength="468" projectName="A5" starttimestamp="1648471300703" timestamp="2034835">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI })
public class Server {

	public static void main(final String[] args) {
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="604" _type="Insert" date="Mon Mar 28 09:15:41 EDT 2022" docASTNodeCount="74" docActiveCodeLength="455" docExpressionCount="45" docLength="489" length="21" offset="174" repeat="3" starttimestamp="1648471300703" timestamp="2041248" timestamp2="2041749">
    <text><![CDATA[, DistributedTags.RMI]]></text>
  </DocumentChange>
  <Command __id="611" _type="PauseCommand" date="Mon Mar 28 09:15:43 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2043029">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1266]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="610" _type="Delete" date="Mon Mar 28 09:15:43 EDT 2022" docASTNodeCount="64" docActiveCodeLength="452" docExpressionCount="35" docLength="486" endLine="7" length="3" offset="192" repeat="3" startLine="7" starttimestamp="1648471300703" timestamp="2043029" timestamp2="2043338">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="612" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:15:43 EDT 2022" starttimestamp="1648471300703" timestamp="2043040" />
  <Command __id="614" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:15:43 EDT 2022" starttimestamp="1648471300703" timestamp="2043194" />
  <Command __id="616" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:15:44 EDT 2022" starttimestamp="1648471300703" timestamp="2043344" />
  <DocumentChange __id="617" _type="Insert" date="Mon Mar 28 09:15:44 EDT 2022" docASTNodeCount="74" docActiveCodeLength="453" docExpressionCount="45" docLength="487" length="1" offset="192" starttimestamp="1648471300703" timestamp="2043757">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <Command __id="618" _type="InsertStringCommand" date="Mon Mar 28 09:15:44 EDT 2022" starttimestamp="1648471300703" timestamp="2043773" timestamp2="2043773">
    <data><![CDATA[I]]></data>
  </Command>
  <DocumentChange __id="619" _type="Delete" date="Mon Mar 28 09:15:44 EDT 2022" docASTNodeCount="64" docActiveCodeLength="452" docExpressionCount="35" docLength="486" endLine="7" length="1" offset="192" startLine="7" starttimestamp="1648471300703" timestamp="2044082">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <Command __id="620" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:15:44 EDT 2022" starttimestamp="1648471300703" timestamp="2044088" />
  <Command __id="622" _type="InsertStringCommand" date="Mon Mar 28 09:15:44 EDT 2022" starttimestamp="1648471300703" timestamp="2044189" timestamp2="2044189">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="624" _type="InsertStringCommand" date="Mon Mar 28 09:15:44 EDT 2022" starttimestamp="1648471300703" timestamp="2044289" timestamp2="2044289">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="626" _type="InsertStringCommand" date="Mon Mar 28 09:15:45 EDT 2022" starttimestamp="1648471300703" timestamp="2044413" timestamp2="2044413">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="628" _type="InsertStringCommand" date="Mon Mar 28 09:15:45 EDT 2022" starttimestamp="1648471300703" timestamp="2044897" timestamp2="2044897">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="629" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:15:46 EDT 2022" starttimestamp="1648471300703" timestamp="2045567" />
  <Command __id="630" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:15:46 EDT 2022" starttimestamp="1648471300703" timestamp="2045620" />
  <Command __id="631" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:15:46 EDT 2022" starttimestamp="1648471300703" timestamp="2045718" />
  <DocumentChange __id="621" _type="Insert" date="Mon Mar 28 09:15:44 EDT 2022" docASTNodeCount="74" docActiveCodeLength="456" docExpressionCount="45" docLength="490" length="4" offset="192" repeat="4" starttimestamp="1648471300703" timestamp="2044176" timestamp2="2044871">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="633" _type="PauseCommand" date="Mon Mar 28 09:16:06 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="2066206">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[20488]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="634" _type="SelectTextCommand" caretOffset="2047" date="Mon Mar 28 09:16:07 EDT 2022" end="2296" start="2047" starttimestamp="1648471300703" timestamp="2066669" />
  <Command __id="636" _type="PauseCommand" date="Mon Mar 28 09:16:08 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2068039">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1370]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="635" _type="MoveCaretCommand" caretOffset="2051" date="Mon Mar 28 09:16:08 EDT 2022" docOffset="3312" starttimestamp="1648471300703" timestamp="2068039" />
  <Command __id="638" _type="PauseCommand" date="Mon Mar 28 09:16:10 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2069941">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1902]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="637" _type="MoveCaretCommand" caretOffset="118" date="Mon Mar 28 09:16:10 EDT 2022" docOffset="1379" starttimestamp="1648471300703" timestamp="2069941" />
  <Command __id="640" _type="PauseCommand" date="Mon Mar 28 09:16:11 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2071208">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1267]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="639" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 09:16:11 EDT 2022" starttimestamp="1648471300703" timestamp="2071208" />
  <Command __id="642" _type="InsertStringCommand" date="Mon Mar 28 09:16:11 EDT 2022" starttimestamp="1648471300703" timestamp="2071231" timestamp2="2071231">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="644" _type="InsertStringCommand" date="Mon Mar 28 09:16:11 EDT 2022" starttimestamp="1648471300703" timestamp="2071252" timestamp2="2071252">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="646" _type="PasteCommand" date="Mon Mar 28 09:16:12 EDT 2022" starttimestamp="1648471300703" timestamp="2071992" />
  <Command __id="632" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:16:06 EDT 2022" docASTNodeCount="793" docActiveCodeLength="5931" docExpressionCount="566" docLength="6538" projectName="A5" starttimestamp="1648471300703" timestamp="2066206">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.ServerRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL,";¶"), Diff(DELETE,""), Diff(EQUAL,"import stringProcessors.HalloweenCommandProcessor;¶"), Diff(INSERT,"import util.trace.bean.BeanTraceUtility;¶"), Diff(EQUAL,"import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶"), Diff(INSERT,"import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶"), Diff(EQUAL,"import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		"), Diff(INSERT,"//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		"), Diff(EQUAL,"PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			// TODO Auto-generated catch block¶			e3.printStackTrace();¶		}¶		// Get server here¶		¶		try {¶"), Diff(DELETE,""), Diff(EQUAL,"			server = (ServerRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL,") rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import main.BeauAndersonFinalProject;
import server.ServerRemoteInterfaceRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);

		// Locate Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			// TODO Auto-generated catch block
			e3.printStackTrace();
		}
		// Get server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="641" _type="Insert" date="Mon Mar 28 09:16:11 EDT 2022" docASTNodeCount="796" docActiveCodeLength="5952" docExpressionCount="569" docLength="6559" length="21" offset="1378" repeat="3" starttimestamp="1648471300703" timestamp="2071222" timestamp2="2071667">
    <text><![CDATA[, DistributedTags.RMI]]></text>
  </DocumentChange>
  <Command __id="648" _type="PauseCommand" date="Mon Mar 28 09:16:15 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2074977">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2985]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="647" _type="Delete" date="Mon Mar 28 09:16:15 EDT 2022" docASTNodeCount="786" docActiveCodeLength="5949" docExpressionCount="559" docLength="6556" endLine="34" length="3" offset="1396" repeat="3" startLine="34" starttimestamp="1648471300703" timestamp="2074977" timestamp2="2075271">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="649" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:16:15 EDT 2022" starttimestamp="1648471300703" timestamp="2075002" />
  <Command __id="651" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:16:15 EDT 2022" starttimestamp="1648471300703" timestamp="2075141" />
  <Command __id="653" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:16:15 EDT 2022" starttimestamp="1648471300703" timestamp="2075281" />
  <Command __id="655" _type="InsertStringCommand" date="Mon Mar 28 09:16:16 EDT 2022" starttimestamp="1648471300703" timestamp="2075661" timestamp2="2075661">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="657" _type="InsertStringCommand" date="Mon Mar 28 09:16:16 EDT 2022" starttimestamp="1648471300703" timestamp="2075757" timestamp2="2075757">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="659" _type="InsertStringCommand" date="Mon Mar 28 09:16:16 EDT 2022" starttimestamp="1648471300703" timestamp="2075876" timestamp2="2075876">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="661" _type="InsertStringCommand" date="Mon Mar 28 09:16:16 EDT 2022" starttimestamp="1648471300703" timestamp="2076081" timestamp2="2076081">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="662" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:16:17 EDT 2022" starttimestamp="1648471300703" timestamp="2076833" />
  <Command __id="663" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:16:17 EDT 2022" starttimestamp="1648471300703" timestamp="2076938" />
  <Command __id="664" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:16:17 EDT 2022" starttimestamp="1648471300703" timestamp="2077000" />
  <DocumentChange __id="654" _type="Insert" date="Mon Mar 28 09:16:16 EDT 2022" docASTNodeCount="796" docActiveCodeLength="5953" docExpressionCount="569" docLength="6560" length="4" offset="1396" repeat="4" starttimestamp="1648471300703" timestamp="2075633" timestamp2="2076057">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="666" _type="PauseCommand" date="Mon Mar 28 09:16:26 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2085780">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8780]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="668" _type="PauseCommand" date="Mon Mar 28 09:16:27 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2086829">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[1049]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="667" _type="MoveCaretCommand" caretOffset="2735" date="Mon Mar 28 09:16:27 EDT 2022" docOffset="3841" starttimestamp="1648471300703" timestamp="2086829" />
  <Command __id="669" _type="MoveCaretCommand" caretOffset="119" date="Mon Mar 28 09:16:28 EDT 2022" docOffset="1225" starttimestamp="1648471300703" timestamp="2087720" />
  <Command __id="665" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:16:26 EDT 2022" docASTNodeCount="685" docActiveCodeLength="4895" docExpressionCount="501" docLength="5383" projectName="A5" starttimestamp="1648471300703" timestamp="2085780">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL,";¶"), Diff(DELETE,""), Diff(EQUAL,"import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL,"> clientList = new ArrayList<ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL,">();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶"), Diff(DELETE,""), Diff(EQUAL,"	public void fakeMethodTwo(String stringOne, ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI})
public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="671" _type="PauseCommand" date="Mon Mar 28 09:16:29 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2088861">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1141]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="672" _type="InsertStringCommand" date="Mon Mar 28 09:16:29 EDT 2022" starttimestamp="1648471300703" timestamp="2088865" timestamp2="2088865">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="674" _type="InsertStringCommand" date="Mon Mar 28 09:16:29 EDT 2022" starttimestamp="1648471300703" timestamp="2088891" timestamp2="2088891">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="676" _type="PasteCommand" date="Mon Mar 28 09:16:30 EDT 2022" starttimestamp="1648471300703" timestamp="2089323" />
  <DocumentChange __id="670" _type="Insert" date="Mon Mar 28 09:16:29 EDT 2022" docASTNodeCount="688" docActiveCodeLength="4916" docExpressionCount="504" docLength="5404" length="21" offset="1225" repeat="3" starttimestamp="1648471300703" timestamp="2088861" timestamp2="2089067">
    <text><![CDATA[, DistributedTags.RMI]]></text>
  </DocumentChange>
  <Command __id="678" _type="PauseCommand" date="Mon Mar 28 09:16:33 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2092975">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3652]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="677" _type="Delete" date="Mon Mar 28 09:16:33 EDT 2022" docASTNodeCount="678" docActiveCodeLength="4913" docExpressionCount="494" docLength="5401" endLine="29" length="3" offset="1243" repeat="3" startLine="29" starttimestamp="1648471300703" timestamp="2092975" timestamp2="2093275">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="679" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:16:33 EDT 2022" starttimestamp="1648471300703" timestamp="2092989" />
  <Command __id="681" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:16:33 EDT 2022" starttimestamp="1648471300703" timestamp="2093160" />
  <Command __id="683" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:16:33 EDT 2022" starttimestamp="1648471300703" timestamp="2093288" />
  <Command __id="685" _type="InsertStringCommand" date="Mon Mar 28 09:16:34 EDT 2022" starttimestamp="1648471300703" timestamp="2093566" timestamp2="2093566">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="687" _type="InsertStringCommand" date="Mon Mar 28 09:16:34 EDT 2022" starttimestamp="1648471300703" timestamp="2093648" timestamp2="2093648">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="689" _type="InsertStringCommand" date="Mon Mar 28 09:16:34 EDT 2022" starttimestamp="1648471300703" timestamp="2093767" timestamp2="2093767">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="691" _type="InsertStringCommand" date="Mon Mar 28 09:16:34 EDT 2022" starttimestamp="1648471300703" timestamp="2093939" timestamp2="2093939">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="692" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:16:35 EDT 2022" starttimestamp="1648471300703" timestamp="2094589" />
  <Command __id="693" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:16:35 EDT 2022" starttimestamp="1648471300703" timestamp="2094692" />
  <Command __id="694" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:16:35 EDT 2022" starttimestamp="1648471300703" timestamp="2094751" />
  <DocumentChange __id="684" _type="Insert" date="Mon Mar 28 09:16:34 EDT 2022" docASTNodeCount="688" docActiveCodeLength="4917" docExpressionCount="504" docLength="5405" length="4" offset="1243" repeat="4" starttimestamp="1648471300703" timestamp="2093544" timestamp2="2093914">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="696" _type="PauseCommand" date="Mon Mar 28 09:16:53 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="2112657">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[17906]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="697" _type="MoveCaretCommand" caretOffset="128" date="Mon Mar 28 09:16:54 EDT 2022" docOffset="196" starttimestamp="1648471300703" timestamp="2113449" />
  <Command __id="695" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:16:53 EDT 2022" docASTNodeCount="74" docActiveCodeLength="456" docExpressionCount="45" docLength="490" projectName="A5" starttimestamp="1648471300703" timestamp="2112657">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI"), Diff(INSERT,", DistributedTags.GIPC"), Diff(EQUAL," })¶public class Server {¶¶	public static void main(final String[] args) {¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {

	public static void main(final String[] args) {
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="699" _type="PauseCommand" date="Mon Mar 28 09:17:01 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2120976">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7527]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="700" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:17:02 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="2121299" />
  <Command __id="702" _type="PauseCommand" date="Mon Mar 28 09:17:08 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2127464">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6165]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="726" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 09:17:29 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="2149076" type="Run" />
  <Command __id="729" _type="PauseCommand" date="Mon Mar 28 09:17:32 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2151994">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2918]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="728" _type="ShellCommand" date="Mon Mar 28 09:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="2151994" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="731" _type="PauseCommand" date="Mon Mar 28 09:17:34 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2154009">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2015]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="730" _type="ConsoleOutput" date="Mon Mar 28 09:17:34 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2154009" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Mar 28 09:17:34 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment5.style.A5TaggedClassesDefined@545346e4 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Mar 28 09:17:34 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="733" _type="PauseCommand" date="Mon Mar 28 09:17:36 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2156225">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2216]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="732" _type="ConsoleOutput" date="Mon Mar 28 09:17:36 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2156225" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:69
Running second pass checks Mon Mar 28 09:17:36 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Mar 28 09:17:36 EDT 2022
End O(n2) inter- and intra class method calls:Mon Mar 28 09:17:36 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:69¶Running second pass checks Mon Mar 28 09:17:36 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Mar 28 09:17:36 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Mar 28 09:17:3"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="734" _type="ConsoleOutput" date="Mon Mar 28 09:17:37 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2157194" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Mar 28 09:17:37 EDT 2022
Generating checks:Mon Mar 28 09:17:37 EDT 2022
Finished Generating checks:Mon Mar 28 09:17:37 EDT 2022
Generating externals:Mon Mar 28 09:17:37 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:69¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Mar 28 09:17:3"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Mar 28 09:17:37 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Mar 28 09:17:3"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Mar 28 09:17:3"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="735" _type="ConsoleOutput" date="Mon Mar 28 09:17:38 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2157395" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Mar 28 09:17:38 EDT 2022
Test execution time (ms):3438
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Mar 28 09:17:37 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Mar 28 09:17:3"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Mar 28 09:17:37 EDT 2022¶Generating externals:Mon Mar 28 09:17:37 EDT 2022"), Diff(INSERT,"Test execution time (ms):3438"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="736" _type="ConsoleOutput" date="Mon Mar 28 09:17:38 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2157455" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2916666666666667

Test execution time (ms):25
Test execution time (ms):16
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Mar 28 09:17:38 EDT 2022"), Diff(INSERT,"Test execution time (ms):25¶A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2916666666666667¶¶Test execution time (ms):25"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"3438"), Diff(INSERT,"16"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="737" _type="ConsoleOutput" date="Mon Mar 28 09:17:38 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2157520" type="ConsoleOutput">
    <outputString><![CDATA[A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.5

Test execution time (ms):40
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):25¶"), Diff(EQUAL,"A5Expected"), Diff(DELETE,"Call"), Diff(INSERT,"Signature"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"2916666666666667"), Diff(INSERT,"5"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"25¶Test execution time (ms):16"), Diff(INSERT,"40"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="738" _type="ConsoleOutput" date="Mon Mar 28 09:17:38 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2157595" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.38095238095238093
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (18)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (228)
  |~ ClientOutCoupler.java (47)
  |~ ClientRemoteInterfaceGIPC.java (23)
  |~ ClientRemoteInterfaceRMI.java (23)
  |~ ClientRemoteObject.java (191)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (6)
  |~ OriginalSimulation.java (9)
  |~ Server.java (22)
  |~ ServerConfigure.java (163)
  |~ ServerRemoteInterfaceGIPC.java (21)
  |~ ServerRemoteInterfaceRMI.java (21)
  |~ ServerRemoteObject.java (172)

Attempting to match to the structure:
|- .* (21)
 |- [a-z]?.*[Cc]lient.* (9)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (8)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)

A5ProjectOrganization did not pass completely:View console for more information%0.0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):4"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.38095238095238093¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (18)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (228)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (191)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (6)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (22)¶  |~ ServerConfigure.java (163)¶  |~ ServerRemoteInterfaceGIPC.java (21)¶  |~ ServerRemoteInterfaceRMI.java (21)¶  |~ ServerRemoteObject.java (172)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶¶A5ProjectOrganization did not pass completely:View console for more information%0."), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="740" _type="PauseCommand" date="Mon Mar 28 09:17:43 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2162501">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4906]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="739" _type="ConsoleOutput" date="Mon Mar 28 09:17:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2162501" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment5.style.A5ExpectedCalls@6d07961c . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.38095238095238093¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (18)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (228)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (191)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (6)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (22)¶  |~ ServerConfigure.java (163)¶  |~ ServerRemoteInterfaceGIPC.java (21)¶  |~ ServerRemoteInterfaceRMI.java (21)¶  |~ ServerRemoteObject.java (172)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶¶A5ProjectOrganization did not pass completely:View console for more information%0.0"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment5.style.A5ExpectedCalls@6d07961c . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="742" _type="PauseCommand" date="Mon Mar 28 09:17:47 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2166923">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4422]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="741" _type="ConsoleOutput" date="Mon Mar 28 09:17:47 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2166923" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment5.style.A5ExpectedSignatures@5e762977 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment5.style.A5Expected"), Diff(DELETE,"Calls@6d07961c"), Diff(INSERT,"Signatures@5e762977"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="744" _type="PauseCommand" date="Mon Mar 28 09:17:49 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2169009">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2086]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="743" _type="ShellCommand" date="Mon Mar 28 09:17:49 EDT 2022" starttimestamp="1648471300703" timestamp="2169009" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="746" _type="PauseCommand" date="Mon Mar 28 09:19:50 EDT 2022" range="2m-5m" starttimestamp="1648471300703" timestamp="2290117">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[121108]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="747" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:19:54 EDT 2022" starttimestamp="1648471300703" timestamp="2294229" />
  <Command __id="749" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:19:54 EDT 2022" starttimestamp="1648471300703" timestamp="2294257" />
  <Command __id="750" _type="ShellCommand" date="Mon Mar 28 09:19:55 EDT 2022" starttimestamp="1648471300703" timestamp="2294412" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="751" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:19:55 EDT 2022" starttimestamp="1648471300703" timestamp="2295277" />
  <Command __id="752" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:19:55 EDT 2022" starttimestamp="1648471300703" timestamp="2295281" />
  <Command __id="754" _type="PauseCommand" date="Mon Mar 28 09:19:58 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2297600">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2319]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="755" _type="ShellCommand" date="Mon Mar 28 09:20:00 EDT 2022" starttimestamp="1648471300703" timestamp="2300246" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="757" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 09:20:01 EDT 2022" starttimestamp="1648471300703" timestamp="2300334" />
  <Command __id="758" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:20:01 EDT 2022" starttimestamp="1648471300703" timestamp="2300335" />
  <Command __id="759" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:20:01 EDT 2022" starttimestamp="1648471300703" timestamp="2300385" />
  <Command __id="761" _type="PauseCommand" date="Mon Mar 28 09:20:05 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2304690">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4305]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="762" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:20:07 EDT 2022" starttimestamp="1648471300703" timestamp="2306554" />
  <Command __id="764" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:20:07 EDT 2022" starttimestamp="1648471300703" timestamp="2306589" />
  <Command __id="765" _type="ShellCommand" date="Mon Mar 28 09:20:07 EDT 2022" starttimestamp="1648471300703" timestamp="2306820" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="767" _type="PauseCommand" date="Mon Mar 28 09:20:19 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="2318304">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11484]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="768" _type="ShellCommand" date="Mon Mar 28 09:20:21 EDT 2022" starttimestamp="1648471300703" timestamp="2320761" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="770" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:20:21 EDT 2022" starttimestamp="1648471300703" timestamp="2320860" />
  <Command __id="771" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 09:20:21 EDT 2022" starttimestamp="1648471300703" timestamp="2320860" />
  <Command __id="772" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:20:21 EDT 2022" starttimestamp="1648471300703" timestamp="2320929" />
  <Command __id="774" _type="PauseCommand" date="Mon Mar 28 09:20:25 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2324818">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3889]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="775" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:20:33 EDT 2022" starttimestamp="1648471300703" timestamp="2332532" />
  <Command __id="777" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:20:33 EDT 2022" starttimestamp="1648471300703" timestamp="2332534" />
  <Command __id="778" _type="ShellCommand" date="Mon Mar 28 09:20:33 EDT 2022" starttimestamp="1648471300703" timestamp="2332810" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="780" _type="PauseCommand" date="Mon Mar 28 09:20:41 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2340755">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7945]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="779" _type="ShellCommand" date="Mon Mar 28 09:20:41 EDT 2022" starttimestamp="1648471300703" timestamp="2340755" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="782" _type="PauseCommand" date="Mon Mar 28 09:20:47 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2346392">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5637]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="781" _type="ShellCommand" date="Mon Mar 28 09:20:47 EDT 2022" starttimestamp="1648471300703" timestamp="2346392" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="784" _type="PauseCommand" date="Mon Mar 28 09:20:53 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2352392">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6000]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="783" _type="CopyCommand" date="Mon Mar 28 09:20:53 EDT 2022" starttimestamp="1648471300703" timestamp="2352392" />
  <Command __id="786" _type="PauseCommand" date="Mon Mar 28 09:20:54 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2353819">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1427]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="785" _type="PasteCommand" date="Mon Mar 28 09:20:54 EDT 2022" starttimestamp="1648471300703" timestamp="2353819" />
  <Command __id="787" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:20:54 EDT 2022" starttimestamp="1648471300703" timestamp="2353907" />
  <Command __id="788" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:20:54 EDT 2022" starttimestamp="1648471300703" timestamp="2353967" />
  <Command __id="698" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:17:01 EDT 2022" docASTNodeCount="65" docActiveCodeLength="397" docExpressionCount="37" docLength="420" projectName="A5" starttimestamp="1648471300703" timestamp="2120976">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\Client.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.CLIENT, DistributedTags.RMI })
public class Client {
	public static void main(final String[] args) {
		try {

			// create client object
			final ClientRemoteInterfaceRMI client = new ClientRemoteObject();

			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="703" _type="Insert" date="Mon Mar 28 09:17:09 EDT 2022" docASTNodeCount="68" docActiveCodeLength="418" docExpressionCount="40" docLength="441" length="21" offset="138" repeat="3" starttimestamp="1648471300703" timestamp="2128390" timestamp2="2128560">
    <text><![CDATA[, DistributedTags.RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="709" _type="Delete" date="Mon Mar 28 09:17:10 EDT 2022" docASTNodeCount="58" docActiveCodeLength="415" docExpressionCount="30" docLength="438" endLine="5" length="3" offset="156" repeat="3" startLine="5" starttimestamp="1648471300703" timestamp="2129628" timestamp2="2129914">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="715" _type="Insert" date="Mon Mar 28 09:17:10 EDT 2022" docASTNodeCount="68" docActiveCodeLength="419" docExpressionCount="40" docLength="442" length="4" offset="156" repeat="4" starttimestamp="1648471300703" timestamp="2130134" timestamp2="2130683">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="790" _type="PauseCommand" date="Mon Mar 28 09:20:58 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2357524">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3557]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="791" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 09:20:58 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="2358053" />
  <Command __id="793" _type="PauseCommand" date="Mon Mar 28 09:21:07 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2366422">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8369]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="792" _type="CopyCommand" date="Mon Mar 28 09:21:07 EDT 2022" starttimestamp="1648471300703" timestamp="2366422" />
  <Command __id="795" _type="PauseCommand" date="Mon Mar 28 09:21:10 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2369607">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3185]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="794" _type="PasteCommand" date="Mon Mar 28 09:21:10 EDT 2022" starttimestamp="1648471300703" timestamp="2369607" />
  <Command __id="796" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:21:10 EDT 2022" starttimestamp="1648471300703" timestamp="2369695" />
  <Command __id="797" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:21:10 EDT 2022" starttimestamp="1648471300703" timestamp="2369745" />
  <Command __id="799" _type="PauseCommand" date="Mon Mar 28 09:21:12 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2371593">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1848]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="798" _type="CopyCommand" date="Mon Mar 28 09:21:12 EDT 2022" starttimestamp="1648471300703" timestamp="2371593" />
  <Command __id="801" _type="PauseCommand" date="Mon Mar 28 09:21:13 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2373191">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1598]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="800" _type="PasteCommand" date="Mon Mar 28 09:21:13 EDT 2022" starttimestamp="1648471300703" timestamp="2373191" />
  <Command __id="802" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:21:13 EDT 2022" starttimestamp="1648471300703" timestamp="2373271" />
  <Command __id="803" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:21:14 EDT 2022" starttimestamp="1648471300703" timestamp="2373301" />
  <Command __id="805" _type="PauseCommand" date="Mon Mar 28 09:21:33 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="2392352">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[19051]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="806" _type="ShellCommand" date="Mon Mar 28 09:21:35 EDT 2022" starttimestamp="1648471300703" timestamp="2394927" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="808" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:21:35 EDT 2022" starttimestamp="1648471300703" timestamp="2395003" />
  <Command __id="809" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 09:21:35 EDT 2022" starttimestamp="1648471300703" timestamp="2395003" />
  <Command __id="810" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:21:35 EDT 2022" starttimestamp="1648471300703" timestamp="2395124" />
  <Command __id="789" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:20:58 EDT 2022" docASTNodeCount="690" docActiveCodeLength="4924" docExpressionCount="506" docLength="5412" projectName="A5" starttimestamp="1648471300703" timestamp="2357524">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="812" _type="PauseCommand" date="Mon Mar 28 09:21:40 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2399425">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4301]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="813" _type="MoveCaretCommand" caretOffset="138" date="Mon Mar 28 09:21:40 EDT 2022" docOffset="1147" starttimestamp="1648471300703" timestamp="2400090" />
  <Command __id="815" _type="PauseCommand" date="Mon Mar 28 09:21:44 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2404222">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4132]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="819" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:21:47 EDT 2022" starttimestamp="1648471300703" timestamp="2406714" />
  <Command __id="821" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:21:47 EDT 2022" starttimestamp="1648471300703" timestamp="2406777" />
  <Command __id="822" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:21:47 EDT 2022" starttimestamp="1648471300703" timestamp="2406872" />
  <Command __id="811" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:21:40 EDT 2022" docASTNodeCount="655" docActiveCodeLength="4625" docExpressionCount="473" docLength="5105" projectName="A5" starttimestamp="1648471300703" timestamp="2399425">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL,";¶"), Diff(DELETE,""), Diff(EQUAL,"import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI"), Diff(INSERT,", DistributedTags.GIPC"), Diff(EQUAL,"})¶public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL,"> clientList = new ArrayList<ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL,">();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶"), Diff(DELETE,""), Diff(EQUAL,"	public void fakeMethodTwo(String stringOne, ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//int aProposalNumber = 0;
	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="817" _type="Insert" date="Mon Mar 28 09:21:45 EDT 2022" docASTNodeCount="661" docActiveCodeLength="4673" docExpressionCount="478" docLength="5153" length="48" offset="443" repeat="2" starttimestamp="1648471300703" timestamp="2404453" timestamp2="2404453">
    <text><![CDATA[
import server.remote.ServerRemoteInterfaceRMI;]]></text>
  </DocumentChange>
  <Command __id="824" _type="PauseCommand" date="Mon Mar 28 09:22:15 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="2434739">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[27867]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="825" _type="MoveCaretCommand" caretOffset="128" date="Mon Mar 28 09:22:15 EDT 2022" docOffset="196" starttimestamp="1648471300703" timestamp="2435199" />
  <Command __id="827" _type="PauseCommand" date="Mon Mar 28 09:22:20 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2439475">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4276]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="826" _type="ShellCommand" date="Mon Mar 28 09:22:20 EDT 2022" starttimestamp="1648471300703" timestamp="2439475" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="828" _type="ShellCommand" date="Mon Mar 28 09:22:20 EDT 2022" starttimestamp="1648471300703" timestamp="2439629" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="834" _type="PauseCommand" date="Mon Mar 28 09:22:28 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2447889">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[8220]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="833" _type="ShellCommand" date="Mon Mar 28 09:22:28 EDT 2022" starttimestamp="1648471300703" timestamp="2447889" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="835" _type="ShellCommand" date="Mon Mar 28 09:22:28 EDT 2022" starttimestamp="1648471300703" timestamp="2448154" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="841" _type="PauseCommand" date="Mon Mar 28 09:22:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2450729">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2540]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="840" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:22:31 EDT 2022" starttimestamp="1648471300703" timestamp="2450729" />
  <Command __id="842" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:22:31 EDT 2022" starttimestamp="1648471300703" timestamp="2450802" />
  <Command __id="843" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:22:31 EDT 2022" starttimestamp="1648471300703" timestamp="2450841" />
  <Command __id="823" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:22:15 EDT 2022" docASTNodeCount="74" docActiveCodeLength="456" docExpressionCount="45" docLength="490" projectName="A5" starttimestamp="1648471300703" timestamp="2434739">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶¶	public static void main(final String[] args) {¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="829" _type="Delete" date="Mon Mar 28 09:22:20 EDT 2022" docASTNodeCount="74" docActiveCodeLength="452" docExpressionCount="45" docLength="486" endLine="4" length="4" offset="51" startLine="2" starttimestamp="1648471300703" timestamp="2439661">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="830" _type="Insert" date="Mon Mar 28 09:22:20 EDT 2022" docASTNodeCount="80" docActiveCodeLength="498" docExpressionCount="50" docLength="532" length="46" offset="51" repeat="3" starttimestamp="1648471300703" timestamp="2439669" timestamp2="2439669">
    <text><![CDATA[

import server.remote.ServerRemoteObject;
]]></text>
  </DocumentChange>
  <DocumentChange __id="836" _type="Delete" date="Mon Mar 28 09:22:28 EDT 2022" docASTNodeCount="80" docActiveCodeLength="494" docExpressionCount="50" docLength="528" endLine="4" length="4" offset="51" startLine="2" starttimestamp="1648471300703" timestamp="2448187">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="837" _type="Insert" date="Mon Mar 28 09:22:28 EDT 2022" docASTNodeCount="86" docActiveCodeLength="546" docExpressionCount="55" docLength="580" length="52" offset="51" repeat="3" starttimestamp="1648471300703" timestamp="2448189" timestamp2="2448190">
    <text><![CDATA[

import server.remote.ServerRemoteInterfaceRMI;
]]></text>
  </DocumentChange>
  <Command __id="845" _type="PauseCommand" date="Mon Mar 28 09:22:34 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2453848">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3007]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="846" _type="MoveCaretCommand" caretOffset="147" date="Mon Mar 28 09:22:34 EDT 2022" docOffset="1398" starttimestamp="1648471300703" timestamp="2454195" />
  <Command __id="844" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:22:34 EDT 2022" docASTNodeCount="898" docActiveCodeLength="6748" docExpressionCount="629" docLength="7635" projectName="A5" starttimestamp="1648471300703" timestamp="2453848">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.ServerRemoteInterfaceRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI"), Diff(INSERT,", DistributedTags.GIPC"), Diff(EQUAL,"})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			// TODO Auto-generated catch block¶			e3.printStackTrace();¶		}¶		// Get server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		//NOTE This is just a hacky way of satisfying tests¶		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();¶		clientOutCoupler = new ClientOutCoupler(server, aClient, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶	¶	¶	@Override	¶	public void trace(boolean newValue) {¶		super.trace(newValue);¶		Tracer.showInfo(isTrace());¶	}¶	¶	@Override¶	public void experimentInput() {¶		long aStartTime = System.currentTimeMillis();¶		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);¶		boolean anOldValue = isTrace();¶		this.trace(false);¶		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {¶			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);¶		¶		}¶		trace(anOldValue);¶		long anEndTime = System.currentTimeMillis();¶		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);¶		¶	}¶	¶	@Override¶	/*¶	 * This override is not really needed, provided here to show that this method¶	 * exists.¶	 */¶	public void delaySends(int aMillisecondDelay) {¶		// getDelay() can be used to determine the delay¶		// in other parts of the program¶		super.delaySends(aMillisecondDelay);¶	}¶	¶	@Override¶	/**¶	 * Relevant in consistency assignments only ¶	 */¶	public void atomicBroadcast(boolean newValue) {¶		super.atomicBroadcast(newValue);¶		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import main.BeauAndersonFinalProject;
import server.ServerRemoteInterfaceRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);

		// Locate Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			// TODO Auto-generated catch block
			e3.printStackTrace();
		}
		// Get server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		//NOTE This is just a hacky way of satisfying tests
		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();
		clientOutCoupler = new ClientOutCoupler(server, aClient, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}
	
	
	@Override	
	public void trace(boolean newValue) {
		super.trace(newValue);
		Tracer.showInfo(isTrace());
	}
	
	@Override
	public void experimentInput() {
		long aStartTime = System.currentTimeMillis();
		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);
		boolean anOldValue = isTrace();
		this.trace(false);
		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {
			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);
		
		}
		trace(anOldValue);
		long anEndTime = System.currentTimeMillis();
		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);
		
	}
	
	@Override
	/*
	 * This override is not really needed, provided here to show that this method
	 * exists.
	 */
	public void delaySends(int aMillisecondDelay) {
		// getDelay() can be used to determine the delay
		// in other parts of the program
		super.delaySends(aMillisecondDelay);
	}
	
	@Override
	/**
	 * Relevant in consistency assignments only 
	 */
	public void atomicBroadcast(boolean newValue) {
		super.atomicBroadcast(newValue);
		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}


}
]]></snapshot>
  </Command>
  <Command __id="848" _type="PauseCommand" date="Mon Mar 28 09:22:56 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="2475791">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[21596]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="849" _type="MoveCaretCommand" caretOffset="286" date="Mon Mar 28 09:22:56 EDT 2022" docOffset="286" starttimestamp="1648471300703" timestamp="2476028" />
  <Command __id="851" _type="PauseCommand" date="Mon Mar 28 09:23:07 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="2486667">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10639]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="850" _type="SelectTextCommand" caretOffset="55" date="Mon Mar 28 09:23:07 EDT 2022" end="101" start="55" starttimestamp="1648471300703" timestamp="2486667" />
  <Command __id="852" _type="CopyCommand" date="Mon Mar 28 09:23:08 EDT 2022" starttimestamp="1648471300703" timestamp="2487537" />
  <Command __id="847" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:22:56 EDT 2022" docASTNodeCount="86" docActiveCodeLength="546" docExpressionCount="55" docLength="580" projectName="A5" starttimestamp="1648471300703" timestamp="2475791">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶"), Diff(INSERT,"import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶"), Diff(EQUAL,"import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶¶	public static void main(final String[] args) {¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObject;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {

	public static void main(final String[] args) {
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="854" _type="PauseCommand" date="Mon Mar 28 09:23:09 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2488608">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1071]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="855" _type="MoveCaretCommand" caretOffset="1398" date="Mon Mar 28 09:23:09 EDT 2022" docOffset="1398" starttimestamp="1648471300703" timestamp="2488772" />
  <Command __id="857" _type="PauseCommand" date="Mon Mar 28 09:23:12 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2491318">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2546]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="856" _type="SelectTextCommand" caretOffset="513" date="Mon Mar 28 09:23:12 EDT 2022" end="552" start="513" starttimestamp="1648471300703" timestamp="2491318" />
  <Command __id="859" _type="PasteCommand" date="Mon Mar 28 09:23:12 EDT 2022" starttimestamp="1648471300703" timestamp="2491718" />
  <Command __id="860" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:23:13 EDT 2022" starttimestamp="1648471300703" timestamp="2492571" />
  <Command __id="861" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:23:13 EDT 2022" starttimestamp="1648471300703" timestamp="2492645" />
  <Command __id="862" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:23:13 EDT 2022" starttimestamp="1648471300703" timestamp="2492772" />
  <Command __id="864" _type="PauseCommand" date="Mon Mar 28 09:23:19 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2498908">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6136]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="863" _type="MoveCaretCommand" caretOffset="1622" date="Mon Mar 28 09:23:19 EDT 2022" docOffset="1622" starttimestamp="1648471300703" timestamp="2498908" />
  <Command __id="853" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:23:09 EDT 2022" docASTNodeCount="898" docActiveCodeLength="6748" docExpressionCount="629" docLength="7635" projectName="A5" starttimestamp="1648471300703" timestamp="2488608">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.ServerRemoteInterfaceRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			// TODO Auto-generated catch block¶			e3.printStackTrace();¶		}¶		// Get server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		//NOTE This is just a hacky way of satisfying tests¶		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();¶		clientOutCoupler = new ClientOutCoupler(server, aClient, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶	¶	¶	@Override	¶	public void trace(boolean newValue) {¶		super.trace(newValue);¶		Tracer.showInfo(isTrace());¶	}¶	¶	@Override¶	public void experimentInput() {¶		long aStartTime = System.currentTimeMillis();¶		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);¶		boolean anOldValue = isTrace();¶		this.trace(false);¶		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {¶			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);¶		¶		}¶		trace(anOldValue);¶		long anEndTime = System.currentTimeMillis();¶		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);¶		¶	}¶	¶	@Override¶	/*¶	 * This override is not really needed, provided here to show that this method¶	 * exists.¶	 */¶	public void delaySends(int aMillisecondDelay) {¶		// getDelay() can be used to determine the delay¶		// in other parts of the program¶		super.delaySends(aMillisecondDelay);¶	}¶	¶	@Override¶	/**¶	 * Relevant in consistency assignments only ¶	 */¶	public void atomicBroadcast(boolean newValue) {¶		super.atomicBroadcast(newValue);¶		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="858" _type="Replace" date="Mon Mar 28 09:23:12 EDT 2022" docASTNodeCount="900" docActiveCodeLength="6755" docExpressionCount="631" docLength="7642" endLine="15" insertionLength="46" int_docASTNodeCount="894" int_docActiveCodeLength="6709" int_docExpressionCount="626" int_docLength="7596" length="39" offset="513" startLine="15" starttimestamp="1648471300703" timestamp="2491698">
    <deletedText><![CDATA[import server.ServerRemoteInterfaceRMI;]]></deletedText>
    <insertedText><![CDATA[import server.remote.ServerRemoteInterfaceRMI;]]></insertedText>
  </DocumentChange>
  <Command __id="866" _type="PauseCommand" date="Mon Mar 28 09:23:45 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="2524727">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[25819]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="867" _type="SelectTextCommand" caretOffset="55" date="Mon Mar 28 09:23:45 EDT 2022" end="101" start="55" starttimestamp="1648471300703" timestamp="2524934" />
  <Command __id="869" _type="PauseCommand" date="Mon Mar 28 09:23:48 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2528276">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3342]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="868" _type="SelectTextCommand" caretOffset="55" date="Mon Mar 28 09:23:48 EDT 2022" end="143" start="55" starttimestamp="1648471300703" timestamp="2528276" />
  <Command __id="870" _type="CopyCommand" date="Mon Mar 28 09:23:49 EDT 2022" starttimestamp="1648471300703" timestamp="2528689" />
  <Command __id="865" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:23:45 EDT 2022" docASTNodeCount="86" docActiveCodeLength="546" docExpressionCount="55" docLength="580" projectName="A5" starttimestamp="1648471300703" timestamp="2524727">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶¶	public static void main(final String[] args) {¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="872" _type="PauseCommand" date="Mon Mar 28 09:23:50 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2529946">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1257]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="873" _type="MoveCaretCommand" caretOffset="1622" date="Mon Mar 28 09:23:50 EDT 2022" docOffset="1622" starttimestamp="1648471300703" timestamp="2530239" />
  <Command __id="875" _type="PauseCommand" date="Mon Mar 28 09:23:56 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2535683">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5444]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="874" _type="MoveCaretCommand" caretOffset="1318" date="Mon Mar 28 09:23:56 EDT 2022" docOffset="1318" starttimestamp="1648471300703" timestamp="2535683" />
  <Command __id="877" _type="PauseCommand" date="Mon Mar 28 09:24:05 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2544384">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8701]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="876" _type="MoveCaretCommand" caretOffset="559" date="Mon Mar 28 09:24:05 EDT 2022" docOffset="559" starttimestamp="1648471300703" timestamp="2544384" />
  <Command __id="879" _type="InsertStringCommand" date="Mon Mar 28 09:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="2544644" timestamp2="2544644">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="881" _type="PasteCommand" date="Mon Mar 28 09:24:06 EDT 2022" starttimestamp="1648471300703" timestamp="2545484" />
  <Command __id="882" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:24:07 EDT 2022" starttimestamp="1648471300703" timestamp="2546346" />
  <Command __id="883" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:24:07 EDT 2022" starttimestamp="1648471300703" timestamp="2546385" />
  <Command __id="884" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:24:07 EDT 2022" starttimestamp="1648471300703" timestamp="2546519" />
  <Command __id="886" _type="PauseCommand" date="Mon Mar 28 09:24:09 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2549035">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2516]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="885" _type="SelectTextCommand" caretOffset="561" date="Mon Mar 28 09:24:09 EDT 2022" end="607" start="561" starttimestamp="1648471300703" timestamp="2549035" />
  <Command __id="888" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:24:10 EDT 2022" starttimestamp="1648471300703" timestamp="2549735" />
  <Command __id="890" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:24:10 EDT 2022" starttimestamp="1648471300703" timestamp="2549918" />
  <Command __id="891" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:24:11 EDT 2022" starttimestamp="1648471300703" timestamp="2550643" />
  <Command __id="892" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:24:11 EDT 2022" starttimestamp="1648471300703" timestamp="2550725" />
  <Command __id="893" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:24:11 EDT 2022" starttimestamp="1648471300703" timestamp="2550785" />
  <Command __id="871" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:23:50 EDT 2022" docASTNodeCount="900" docActiveCodeLength="6755" docExpressionCount="631" docLength="7642" projectName="A5" starttimestamp="1648471300703" timestamp="2529946">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server."), Diff(INSERT,"remote."), Diff(EQUAL,"ServerRemoteInterfaceRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			// TODO Auto-generated catch block¶			e3.printStackTrace();¶		}¶		// Get server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		//NOTE This is just a hacky way of satisfying tests¶		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();¶		clientOutCoupler = new ClientOutCoupler(server, aClient, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶	¶	¶	@Override	¶	public void trace(boolean newValue) {¶		super.trace(newValue);¶		Tracer.showInfo(isTrace());¶	}¶	¶	@Override¶	public void experimentInput() {¶		long aStartTime = System.currentTimeMillis();¶		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);¶		boolean anOldValue = isTrace();¶		this.trace(false);¶		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {¶			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);¶		¶		}¶		trace(anOldValue);¶		long anEndTime = System.currentTimeMillis();¶		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);¶		¶	}¶	¶	@Override¶	/*¶	 * This override is not really needed, provided here to show that this method¶	 * exists.¶	 */¶	public void delaySends(int aMillisecondDelay) {¶		// getDelay() can be used to determine the delay¶		// in other parts of the program¶		super.delaySends(aMillisecondDelay);¶	}¶	¶	@Override¶	/**¶	 * Relevant in consistency assignments only ¶	 */¶	public void atomicBroadcast(boolean newValue) {¶		super.atomicBroadcast(newValue);¶		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);

		// Locate Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			// TODO Auto-generated catch block
			e3.printStackTrace();
		}
		// Get server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		//NOTE This is just a hacky way of satisfying tests
		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();
		clientOutCoupler = new ClientOutCoupler(server, aClient, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}
	
	
	@Override	
	public void trace(boolean newValue) {
		super.trace(newValue);
		Tracer.showInfo(isTrace());
	}
	
	@Override
	public void experimentInput() {
		long aStartTime = System.currentTimeMillis();
		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);
		boolean anOldValue = isTrace();
		this.trace(false);
		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {
			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);
		
		}
		trace(anOldValue);
		long anEndTime = System.currentTimeMillis();
		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);
		
	}
	
	@Override
	/*
	 * This override is not really needed, provided here to show that this method
	 * exists.
	 */
	public void delaySends(int aMillisecondDelay) {
		// getDelay() can be used to determine the delay
		// in other parts of the program
		super.delaySends(aMillisecondDelay);
	}
	
	@Override
	/**
	 * Relevant in consistency assignments only 
	 */
	public void atomicBroadcast(boolean newValue) {
		super.atomicBroadcast(newValue);
		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="878" _type="Insert" date="Mon Mar 28 09:24:05 EDT 2022" docASTNodeCount="912" docActiveCodeLength="6845" docExpressionCount="641" docLength="7732" length="90" offset="559" repeat="2" starttimestamp="1648471300703" timestamp="2544621" timestamp2="2545475">
    <text><![CDATA[
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObject;]]></text>
  </DocumentChange>
  <DocumentChange __id="887" _type="Delete" date="Mon Mar 28 09:24:10 EDT 2022" docASTNodeCount="906" docActiveCodeLength="6797" docExpressionCount="636" docLength="7684" endLine="16" length="48" offset="559" repeat="2" startLine="15" starttimestamp="1648471300703" timestamp="2549725" timestamp2="2549901">
    <text><![CDATA[
import server.remote.ServerRemoteInterfaceRMI;]]></text>
  </DocumentChange>
  <Command __id="895" _type="PauseCommand" date="Mon Mar 28 09:24:14 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2553962">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3177]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="896" _type="MoveCaretCommand" caretOffset="136" date="Mon Mar 28 09:24:14 EDT 2022" docOffset="447" starttimestamp="1648471300703" timestamp="2554289" />
  <Command __id="898" _type="PauseCommand" date="Mon Mar 28 09:24:34 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="2573756">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[19467]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="897" _type="MoveCaretCommand" caretOffset="334" date="Mon Mar 28 09:24:34 EDT 2022" docOffset="334" starttimestamp="1648471300703" timestamp="2573756" />
  <Command __id="900" _type="InsertStringCommand" date="Mon Mar 28 09:24:35 EDT 2022" starttimestamp="1648471300703" timestamp="2574626" timestamp2="2574626">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="902" _type="InsertStringCommand" date="Mon Mar 28 09:24:35 EDT 2022" starttimestamp="1648471300703" timestamp="2574702" timestamp2="2574702">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="904" _type="InsertStringCommand" date="Mon Mar 28 09:24:35 EDT 2022" starttimestamp="1648471300703" timestamp="2574905" timestamp2="2574905">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="906" _type="InsertStringCommand" date="Mon Mar 28 09:24:35 EDT 2022" starttimestamp="1648471300703" timestamp="2575000" timestamp2="2575000">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="908" _type="InsertStringCommand" date="Mon Mar 28 09:24:35 EDT 2022" starttimestamp="1648471300703" timestamp="2575056" timestamp2="2575056">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="910" _type="InsertStringCommand" date="Mon Mar 28 09:24:35 EDT 2022" starttimestamp="1648471300703" timestamp="2575204" timestamp2="2575204">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="912" _type="InsertStringCommand" date="Mon Mar 28 09:24:36 EDT 2022" starttimestamp="1648471300703" timestamp="2575542" timestamp2="2575542">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="914" _type="PauseCommand" date="Mon Mar 28 09:24:37 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2576752">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1210]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="913" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 09:24:37 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="2576752" />
  <Command __id="915" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:24:37 EDT 2022" starttimestamp="1648471300703" timestamp="2577282" />
  <Command __id="916" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 09:24:38 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="2577400" />
  <Command __id="917" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:24:38 EDT 2022" starttimestamp="1648471300703" timestamp="2577489" />
  <Command __id="918" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:24:38 EDT 2022" starttimestamp="1648471300703" timestamp="2577559" />
  <Command __id="894" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:24:14 EDT 2022" docASTNodeCount="196" docActiveCodeLength="1523" docExpressionCount="135" docLength="1523" projectName="A5" starttimestamp="1648471300703" timestamp="2553962">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server.ServerRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL,";¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI"), Diff(INSERT,", DistributedTags.GIPC"), Diff(EQUAL,"})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," ObservingServer;¶	ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," anObservingServer, ClientRemoteInterface"), Diff(INSERT,"RMI"), Diff(EQUAL," aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import server.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientOutCoupler implements PropertyChangeListener{
	ServerRemoteInterfaceRMI ObservingServer;
	ClientRemoteInterfaceRMI originalClient;
	String ORIGINAL_CLIENT_NAME;
	
	int aProposalNumber = 0;
	
	public ClientOutCoupler (ServerRemoteInterfaceRMI anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {
		ObservingServer = anObservingServer;
		originalClient = aClient;
		ORIGINAL_CLIENT_NAME = aClientName;
		
		
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent anEvent) {
		if (!anEvent.getPropertyName().equals("InputString")) return;
		String newCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, newCommand);
		
		System.out.println("Command being sent from coupler:" + newCommand);
		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);
		try {
			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="899" _type="Insert" date="Mon Mar 28 09:24:35 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1530" docExpressionCount="137" docLength="1530" length="7" offset="334" repeat="7" starttimestamp="1648471300703" timestamp="2574614" timestamp2="2575529">
    <text><![CDATA[remote.]]></text>
  </DocumentChange>
  <Command __id="920" _type="PauseCommand" date="Mon Mar 28 09:24:41 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2580427">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2868]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="921" _type="MoveCaretCommand" caretOffset="1195" date="Mon Mar 28 09:24:41 EDT 2022" docOffset="1195" starttimestamp="1648471300703" timestamp="2580665" />
  <Command __id="923" _type="PauseCommand" date="Mon Mar 28 09:24:53 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="2593036">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12371]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="922" _type="MoveCaretCommand" caretOffset="459" date="Mon Mar 28 09:24:53 EDT 2022" docOffset="459" starttimestamp="1648471300703" timestamp="2593036" />
  <Command __id="925" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:24:54 EDT 2022" starttimestamp="1648471300703" timestamp="2593371" />
  <Command __id="927" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:24:54 EDT 2022" starttimestamp="1648471300703" timestamp="2593519" />
  <Command __id="929" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:24:54 EDT 2022" starttimestamp="1648471300703" timestamp="2593667" />
  <Command __id="931" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:24:54 EDT 2022" starttimestamp="1648471300703" timestamp="2593806" />
  <Command __id="933" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:24:54 EDT 2022" starttimestamp="1648471300703" timestamp="2593958" />
  <Command __id="935" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:24:54 EDT 2022" starttimestamp="1648471300703" timestamp="2594100" />
  <Command __id="937" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 09:24:55 EDT 2022" starttimestamp="1648471300703" timestamp="2594499" />
  <Command __id="938" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:24:56 EDT 2022" starttimestamp="1648471300703" timestamp="2595372" />
  <Command __id="939" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:24:56 EDT 2022" starttimestamp="1648471300703" timestamp="2595393" />
  <Command __id="940" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:24:56 EDT 2022" starttimestamp="1648471300703" timestamp="2595423" />
  <Command __id="919" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:24:41 EDT 2022" docASTNodeCount="661" docActiveCodeLength="4673" docExpressionCount="478" docLength="5153" projectName="A5" starttimestamp="1648471300703" timestamp="2580427">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶"), Diff(INSERT,"import server.remote.ServerRemoteInterfaceRMI;¶"), Diff(EQUAL,"import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import server.remote.ServerRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//int aProposalNumber = 0;
	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="924" _type="Delete" date="Mon Mar 28 09:24:54 EDT 2022" docASTNodeCount="659" docActiveCodeLength="4666" docExpressionCount="476" docLength="5146" endLine="13" length="7" offset="452" repeat="7" startLine="13" starttimestamp="1648471300703" timestamp="2593362" timestamp2="2594492">
    <text><![CDATA[server.]]></text>
  </DocumentChange>
  <Command __id="942" _type="PauseCommand" date="Mon Mar 28 09:25:07 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="2606337">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10914]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="943" _type="InsertStringCommand" date="Mon Mar 28 09:25:07 EDT 2022" starttimestamp="1648471300703" timestamp="2606365" timestamp2="2606365">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="945" _type="InsertStringCommand" date="Mon Mar 28 09:25:07 EDT 2022" starttimestamp="1648471300703" timestamp="2606406" timestamp2="2606406">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="947" _type="InsertStringCommand" date="Mon Mar 28 09:25:07 EDT 2022" starttimestamp="1648471300703" timestamp="2606509" timestamp2="2606509">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="949" _type="InsertStringCommand" date="Mon Mar 28 09:25:07 EDT 2022" starttimestamp="1648471300703" timestamp="2606752" timestamp2="2606752">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="951" _type="InsertStringCommand" date="Mon Mar 28 09:25:07 EDT 2022" starttimestamp="1648471300703" timestamp="2606908" timestamp2="2606908">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="953" _type="InsertStringCommand" date="Mon Mar 28 09:25:07 EDT 2022" starttimestamp="1648471300703" timestamp="2607065" timestamp2="2607065">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="955" _type="InsertStringCommand" date="Mon Mar 28 09:25:07 EDT 2022" starttimestamp="1648471300703" timestamp="2607236" timestamp2="2607236">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="956" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 09:25:07 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="2607253" />
  <Command __id="958" _type="PauseCommand" date="Mon Mar 28 09:25:09 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2608582">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1329]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="957" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:25:09 EDT 2022" starttimestamp="1648471300703" timestamp="2608582" />
  <Command __id="959" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:25:09 EDT 2022" starttimestamp="1648471300703" timestamp="2608664" />
  <Command __id="960" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:25:09 EDT 2022" starttimestamp="1648471300703" timestamp="2608712" />
  <Command __id="961" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 09:25:09 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="2608712" />
  <Command __id="963" _type="PauseCommand" date="Mon Mar 28 09:25:17 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2616706">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[7994]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="967" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:25:18 EDT 2022" starttimestamp="1648471300703" timestamp="2617981" />
  <Command __id="969" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:25:18 EDT 2022" starttimestamp="1648471300703" timestamp="2618030" />
  <Command __id="970" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:25:18 EDT 2022" starttimestamp="1648471300703" timestamp="2618246" />
  <DocumentChange __id="941" _type="Insert" date="Mon Mar 28 09:25:07 EDT 2022" docASTNodeCount="661" docActiveCodeLength="4673" docExpressionCount="478" docLength="5153" length="7" offset="452" repeat="7" starttimestamp="1648471300703" timestamp="2606337" timestamp2="2607225">
    <text><![CDATA[server.]]></text>
  </DocumentChange>
  <DocumentChange __id="965" _type="Insert" date="Mon Mar 28 09:25:17 EDT 2022" docASTNodeCount="667" docActiveCodeLength="4715" docExpressionCount="483" docLength="5195" length="42" offset="491" repeat="2" starttimestamp="1648471300703" timestamp="2616933" timestamp2="2616938">
    <text><![CDATA[
import server.remote.ServerRemoteObject;]]></text>
  </DocumentChange>
  <Command __id="972" _type="PauseCommand" date="Mon Mar 28 09:25:26 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2625494">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7248]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="973" _type="MoveCaretCommand" caretOffset="139" date="Mon Mar 28 09:25:26 EDT 2022" docOffset="1400" starttimestamp="1648471300703" timestamp="2625790" />
  <Command __id="975" _type="PauseCommand" date="Mon Mar 28 09:25:38 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="2638186">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12396]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="974" _type="ShellCommand" date="Mon Mar 28 09:25:38 EDT 2022" starttimestamp="1648471300703" timestamp="2638186" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="976" _type="ShellCommand" date="Mon Mar 28 09:25:39 EDT 2022" starttimestamp="1648471300703" timestamp="2638427" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="982" _type="PauseCommand" date="Mon Mar 28 09:25:49 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="2648911">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[10412]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="971" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:25:26 EDT 2022" docASTNodeCount="796" docActiveCodeLength="5953" docExpressionCount="569" docLength="6560" projectName="A5" starttimestamp="1648471300703" timestamp="2625494">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.ServerRemoteInterfaceRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI"), Diff(INSERT,", DistributedTags.GIPC"), Diff(EQUAL," })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			// TODO Auto-generated catch block¶			e3.printStackTrace();¶		}¶		// Get server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import main.BeauAndersonFinalProject;
import server.ServerRemoteInterfaceRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);

		// Locate Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			// TODO Auto-generated catch block
			e3.printStackTrace();
		}
		// Get server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="977" _type="Delete" date="Mon Mar 28 09:25:39 EDT 2022" docASTNodeCount="790" docActiveCodeLength="5929" docExpressionCount="566" docLength="6536" endLine="41" length="24" offset="1799" startLine="41" starttimestamp="1648471300703" timestamp="2638487">
    <text><![CDATA[ServerRemoteInterfaceRMI]]></text>
  </DocumentChange>
  <DocumentChange __id="978" _type="Insert" date="Mon Mar 28 09:25:39 EDT 2022" docASTNodeCount="796" docActiveCodeLength="5954" docExpressionCount="569" docLength="6561" length="25" offset="1799" starttimestamp="1648471300703" timestamp="2638496">
    <text><![CDATA[ServerRemoteInterfaceGIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="979" _type="Insert" date="Mon Mar 28 09:25:39 EDT 2022" docASTNodeCount="802" docActiveCodeLength="6003" docExpressionCount="574" docLength="6610" length="49" offset="653" repeat="2" starttimestamp="1648471300703" timestamp="2638499" timestamp2="2638502">
    <text><![CDATA[
import server.remote.ServerRemoteInterfaceGIPC;]]></text>
  </DocumentChange>
  <Command __id="981" _type="MoveCaretCommand" caretOffset="628" date="Mon Mar 28 09:25:49 EDT 2022" docOffset="628" starttimestamp="1648471300703" timestamp="2648911" />
  <Command __id="999" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:25:53 EDT 2022" starttimestamp="1648471300703" timestamp="2652523" />
  <Command __id="1001" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:25:53 EDT 2022" starttimestamp="1648471300703" timestamp="2652630" />
  <Command __id="1002" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 09:25:53 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="2652652" />
  <Command __id="1003" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:25:53 EDT 2022" starttimestamp="1648471300703" timestamp="2652682" />
  <Command __id="1005" _type="PauseCommand" date="Mon Mar 28 09:26:18 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="2677985">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[25303]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1004" _type="MoveCaretCommand" caretOffset="5191" date="Mon Mar 28 09:26:18 EDT 2022" docOffset="5191" starttimestamp="1648471300703" timestamp="2677985" />
  <DocumentChange __id="983" _type="Insert" date="Mon Mar 28 09:25:49 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6010" docExpressionCount="576" docLength="6617" length="7" offset="628" repeat="7" starttimestamp="1648471300703" timestamp="2649268" timestamp2="2651056">
    <text><![CDATA[remote.]]></text>
  </DocumentChange>
  <Command __id="1007" _type="PauseCommand" date="Mon Mar 28 09:26:29 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="2689190">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11205]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1008" _type="MoveCaretCommand" caretOffset="341" date="Mon Mar 28 09:26:30 EDT 2022" docOffset="341" starttimestamp="1648471300703" timestamp="2689409" />
  <Command __id="1006" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:26:29 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1530" docExpressionCount="137" docLength="1530" projectName="A5" starttimestamp="1648471300703" timestamp="2689190">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server."), Diff(INSERT,"remote."), Diff(EQUAL,"ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceRMI ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceRMI anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientOutCoupler implements PropertyChangeListener{
	ServerRemoteInterfaceRMI ObservingServer;
	ClientRemoteInterfaceRMI originalClient;
	String ORIGINAL_CLIENT_NAME;
	
	int aProposalNumber = 0;
	
	public ClientOutCoupler (ServerRemoteInterfaceRMI anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {
		ObservingServer = anObservingServer;
		originalClient = aClient;
		ORIGINAL_CLIENT_NAME = aClientName;
		
		
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent anEvent) {
		if (!anEvent.getPropertyName().equals("InputString")) return;
		String newCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, newCommand);
		
		System.out.println("Command being sent from coupler:" + newCommand);
		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);
		try {
			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}

}
]]></snapshot>
  </Command>
  <Command __id="1010" _type="PauseCommand" date="Mon Mar 28 09:26:38 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2698132">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8723]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1011" _type="MoveCaretCommand" caretOffset="5191" date="Mon Mar 28 09:26:39 EDT 2022" docOffset="5191" starttimestamp="1648471300703" timestamp="2698494" />
  <Command __id="1013" _type="PauseCommand" date="Mon Mar 28 09:26:47 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2706925">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8425]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1012" _type="ShellCommand" date="Mon Mar 28 09:26:47 EDT 2022" starttimestamp="1648471300703" timestamp="2706919" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1015" _type="PauseCommand" date="Mon Mar 28 09:26:56 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2716023">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9104]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1014" _type="ShellCommand" date="Mon Mar 28 09:26:56 EDT 2022" starttimestamp="1648471300703" timestamp="2716023" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1016" _type="MoveCaretCommand" caretOffset="5284" date="Mon Mar 28 09:26:56 EDT 2022" docOffset="5284" starttimestamp="1648471300703" timestamp="2716167" />
  <Command __id="1018" _type="PauseCommand" date="Mon Mar 28 09:27:19 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="2738845">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[22678]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1017" _type="ShellCommand" date="Mon Mar 28 09:27:19 EDT 2022" starttimestamp="1648471300703" timestamp="2738845" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1019" _type="ShellCommand" date="Mon Mar 28 09:27:19 EDT 2022" starttimestamp="1648471300703" timestamp="2739003" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1023" _type="PauseCommand" date="Mon Mar 28 09:27:21 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2741014">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1973]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1022" _type="MoveCaretCommand" caretOffset="1897" date="Mon Mar 28 09:27:21 EDT 2022" docOffset="1897" starttimestamp="1648471300703" timestamp="2741014" />
  <Command __id="1024" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:27:22 EDT 2022" starttimestamp="1648471300703" timestamp="2741966" />
  <Command __id="1025" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:27:22 EDT 2022" starttimestamp="1648471300703" timestamp="2742060" />
  <Command __id="1026" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:27:22 EDT 2022" starttimestamp="1648471300703" timestamp="2742134" />
  <Command __id="1028" _type="PauseCommand" date="Mon Mar 28 09:27:28 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="2747753">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5619]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1032" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 09:27:32 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="2751911" type="Run" />
  <Command __id="1034" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 09:27:32 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="2751911" type="Run" />
  <Command __id="1036" _type="PauseCommand" date="Mon Mar 28 09:27:34 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2753416">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1505]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1037" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 09:27:36 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="2755712" type="Run" />
  <Command __id="1039" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 09:27:36 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="2755712" type="Run" />
  <Command __id="1041" _type="PauseCommand" date="Mon Mar 28 09:27:39 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2759001">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3289]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1040" _type="ShellCommand" date="Mon Mar 28 09:27:39 EDT 2022" starttimestamp="1648471300703" timestamp="2759001" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1043" _type="PauseCommand" date="Mon Mar 28 09:27:43 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2762596">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3595]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1042" _type="ConsoleOutput" date="Mon Mar 28 09:27:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2762596" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Mar 28 09:27:43 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment5.style.A5ExpectedSignatures@5e762977 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Mar 28 09:27:43 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1045" _type="PauseCommand" date="Mon Mar 28 09:27:45 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2764937">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2341]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1044" _type="ConsoleOutput" date="Mon Mar 28 09:27:45 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2764937" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:69
Running second pass checks Mon Mar 28 09:27:45 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Mar 28 09:27:45 EDT 2022
End O(n2) inter- and intra class method calls:Mon Mar 28 09:27:45 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:69¶Running second pass checks Mon Mar 28 09:27:45 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Mar 28 09:27:45 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Mar 28 09:27:4"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1046" _type="ConsoleOutput" date="Mon Mar 28 09:27:46 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2765913" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Mar 28 09:27:46 EDT 2022
Generating checks:Mon Mar 28 09:27:46 EDT 2022
Finished Generating checks:Mon Mar 28 09:27:46 EDT 2022
Generating externals:Mon Mar 28 09:27:46 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:69¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Mar 28 09:27:4"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Mar 28 09:27:46 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Mar 28 09:27:4"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Mar 28 09:27:4"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1047" _type="ConsoleOutput" date="Mon Mar 28 09:27:46 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2766147" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Mar 28 09:27:46 EDT 2022
Test execution time (ms):3588
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Mar 28 09:27:46 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Mar 28 09:27:46 EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Mar 28 09:27:46 EDT 2022¶Generating externals:Mon Mar 28 09:27:46 EDT 2022"), Diff(INSERT,"Test execution time (ms):3588"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1048" _type="ConsoleOutput" date="Mon Mar 28 09:27:46 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2766207" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):45
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Mar 28 09:27:46 EDT 2022¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"3588"), Diff(INSERT,"45"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1049" _type="ConsoleOutput" date="Mon Mar 28 09:27:46 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2766246" type="ConsoleOutput">
    <outputString><![CDATA[
A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2916666666666667

Test execution time (ms):59
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2916666666666667¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(EQUAL,"5"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1050" _type="ConsoleOutput" date="Mon Mar 28 09:27:47 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2766312" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9
A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.5

Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9"), Diff(EQUAL,"¶A5Expected"), Diff(DELETE,"Call"), Diff(INSERT,"Signature"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"2916666666666667"), Diff(INSERT,"5"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"59"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1051" _type="ConsoleOutput" date="Mon Mar 28 09:27:47 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2766382" type="ConsoleOutput">
    <outputString><![CDATA[A5ProjectOrganization did not pass completely:View console for more information%0.0

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (19)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (229)
  |~ ClientOutCoupler.java (47)
  |~ ClientRemoteInterfaceGIPC.java (23)
  |~ ClientRemoteInterfaceRMI.java (23)
  |~ ClientRemoteObject.java (192)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (7)
  |~ OriginalSimulation.java (9)
  |~ Server.java (24)
  |~ ServerConfigure.java (165)
  |- remote (3)
   |~ ServerRemoteInterfaceGIPC.java (21)
   |~ ServerRemoteInterfaceRMI.java (21)
   |~ ServerRemoteObject.java (172)

Attempting to match to the structure:
|- .* (21)
 |- [a-z]?.*[Cc]lient.* (9)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (8)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):9¶A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):6"), Diff(INSERT,"A5ProjectOrganization did not pass completely:View console for more information%0.0¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (19)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (192)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (7)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (24)¶  |~ ServerConfigure.java (165)¶  |- remote (3)¶   |~ ServerRemoteInterfaceGIPC.java (21)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObject.java (172)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1053" _type="PauseCommand" date="Mon Mar 28 09:28:10 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="2789322">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22940]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1056" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 09:30:00 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="2899959" type="Run" />
  <Command __id="1058" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 09:30:00 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="2899959" type="Run" />
  <Command __id="1060" _type="PauseCommand" date="Mon Mar 28 09:30:03 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2902892">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2933]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1059" _type="ShellCommand" date="Mon Mar 28 09:30:03 EDT 2022" starttimestamp="1648471300703" timestamp="2902892" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1062" _type="PauseCommand" date="Mon Mar 28 09:30:06 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2905591">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2699]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1061" _type="ConsoleOutput" date="Mon Mar 28 09:30:06 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2905591" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Mar 28 09:30:06 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A5ProjectOrganization did not pass completely:View console for more information%0.0¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (19)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (192)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (7)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (24)¶  |~ ServerConfigure.java (165)¶  |- remote (3)¶   |~ ServerRemoteInterfaceGIPC.java (21)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObject.java (172)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Mar 28 09:30:06 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1064" _type="PauseCommand" date="Mon Mar 28 09:30:08 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2907980">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2389]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1063" _type="ConsoleOutput" date="Mon Mar 28 09:30:08 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2907980" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:69
Running second pass checks Mon Mar 28 09:30:08 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Mar 28 09:30:08 EDT 2022
End O(n2) inter- and intra class method calls:Mon Mar 28 09:30:08 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:69¶Running second pass checks Mon Mar 28 09:30:08 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Mar 28 09:30:08 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Mar 28 09:30:0"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1066" _type="PauseCommand" date="Mon Mar 28 09:30:09 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="2909009">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1029]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1065" _type="ConsoleOutput" date="Mon Mar 28 09:30:09 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2909009" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Mar 28 09:30:09 EDT 2022
Generating checks:Mon Mar 28 09:30:09 EDT 2022
Finished Generating checks:Mon Mar 28 09:30:09 EDT 2022
Generating externals:Mon Mar 28 09:30:09 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:69¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Mar 28 09:30:0"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Mar 28 09:30:09 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Mar 28 09:30:0"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Mar 28 09:30:0"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1067" _type="ConsoleOutput" date="Mon Mar 28 09:30:09 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2909244" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Mar 28 09:30:09 EDT 2022
Test execution time (ms):3687
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Mar 28 09:30:09 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Mar 28 09:30:09 EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Mar 28 09:30:09 EDT 2022¶Generating externals:Mon Mar 28 09:30:09 EDT 2022"), Diff(INSERT,"Test execution time (ms):3687"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1068" _type="ConsoleOutput" date="Mon Mar 28 09:30:10 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2909309" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):49
A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2916666666666667

Test execution time (ms):14
Test execution time (ms):16
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Mar 28 09:30:09 EDT 2022"), Diff(INSERT,"Test execution time (ms):49¶A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2916666666666667¶¶Test execution time (ms):14"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"3687"), Diff(INSERT,"16"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1069" _type="ConsoleOutput" date="Mon Mar 28 09:30:10 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2909384" type="ConsoleOutput">
    <outputString><![CDATA[A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.5

Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):49¶"), Diff(EQUAL,"A5Expected"), Diff(DELETE,"Call"), Diff(INSERT,"Signature"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"2916666666666667"), Diff(INSERT,"5"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"14¶Test execution time (ms):16"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1070" _type="ConsoleOutput" date="Mon Mar 28 09:30:10 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2909408" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (19)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (229)
  |~ ClientOutCoupler.java (47)
  |~ ClientRemoteInterfaceGIPC.java (23)
  |~ ClientRemoteInterfaceRMI.java (23)
  |~ ClientRemoteObject.java (192)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (7)
  |~ OriginalSimulation.java (9)
  |~ Server.java (24)
  |~ ServerConfigure.java (165)
  |- remote (3)
   |~ ServerRemoteInterfaceGIPC.java (21)
   |~ ServerRemoteInterfaceRMI.java (21)
   |~ ServerRemoteObject.java (172)

Attempting to match to the structure:
|- .* (21)
 |- [a-z]?.*[Cc]lient.* (9)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (8)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):7"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (19)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (192)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (7)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (24)¶  |~ ServerConfigure.java (165)¶  |- remote (3)¶   |~ ServerRemoteInterfaceGIPC.java (21)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObject.java (172)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1072" _type="PauseCommand" date="Mon Mar 28 09:30:12 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="2912275">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2867]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1071" _type="ConsoleOutput" date="Mon Mar 28 09:30:12 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2912275" type="ConsoleOutput">
    <outputString><![CDATA[A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):3
Test execution time (ms):17
Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (19)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (192)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (7)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (24)¶  |~ ServerConfigure.java (165)¶  |- remote (3)¶   |~ ServerRemoteInterfaceGIPC.java (21)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObject.java (172)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶"), Diff(INSERT,"A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):3¶Test execution time (ms):17¶Test execution time (ms):8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1073" _type="ConsoleOutput" date="Mon Mar 28 09:30:13 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2912362" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):10
Test execution time (ms):8
Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"3"), Diff(INSERT,"10"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"17"), Diff(INSERT,"8"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1075" _type="PauseCommand" date="Mon Mar 28 09:31:19 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="2978612">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[66250]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1074" _type="ConsoleOutput" date="Mon Mar 28 09:31:19 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="2978612" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIStaticArguments did not pass completely:Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client GIPC connection info in traces. Error in server (args as 'nio-port registry-host registry-port gipc-port'): Couldn't find server GIPC connection info in traces.%0.5

Test execution time (ms):63625
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):10¶Test execution time (ms):8"), Diff(INSERT,"GIPCRMIStaticArguments did not pass completely:Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client GIPC connection info in traces. Error in server (args as 'nio-port registry-host registry-port gipc-port'): Couldn't find server GIPC connection info in traces.%0.5¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"9"), Diff(INSERT,"63625"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1077" _type="PauseCommand" date="Mon Mar 28 09:32:17 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="3037180">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[58568]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1076" _type="ConsoleOutput" date="Mon Mar 28 09:32:17 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="3037180" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIOneClientConnection did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*%0.0

Test execution time (ms):58560
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMI"), Diff(DELETE,"StaticArguments"), Diff(INSERT,"OneClientConnection"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client GIPC connection info in traces. Error in server (args as 'nio-port registry-host registry-port gipc-port'): Couldn't find server GIPC connection info in traces."), Diff(INSERT,"In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*"), Diff(EQUAL,"%0."), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"63625"), Diff(INSERT,"58560"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1079" _type="PauseCommand" date="Mon Mar 28 09:33:16 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="3095741">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[58561]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1078" _type="ConsoleOutput" date="Mon Mar 28 09:33:16 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="3095741" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIOneClientReadWriteNonAtomic did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*
GIPC is not checked because RMI failed%0.0

Test execution time (ms):58562
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMIOneClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*"), Diff(INSERT,"¶GIPC is not checked because RMI failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):5856"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1081" _type="PauseCommand" date="Mon Mar 28 09:33:40 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="3119424">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[23683]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1080" _type="ConsoleOutput" date="Mon Mar 28 09:33:40 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="3119424" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@13689fb0 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMIOneClientReadWriteNonAtomic did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*¶GIPC is not checked because RMI failed%0.0¶¶Test execution time (ms):58562"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@13689fb0 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1083" _type="PauseCommand" date="Mon Mar 28 09:35:47 EDT 2022" range="2m-5m" starttimestamp="1648471300703" timestamp="3246544">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[127120]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1082" _type="ConsoleOutput" date="Mon Mar 28 09:35:47 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="3246544" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMITwoClientConnection did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*%0.0

Test execution time (ms):112605
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@13689fb0 . Results may change."), Diff(INSERT,"GIPCRMITwoClientConnection did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*%0.0¶¶Test execution time (ms):112605"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1085" _type="PauseCommand" date="Mon Mar 28 09:36:44 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="3304094">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[57550]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1084" _type="ShellCommand" date="Mon Mar 28 09:36:44 EDT 2022" starttimestamp="1648471300703" timestamp="3304094" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1087" _type="PauseCommand" date="Mon Mar 28 09:36:46 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="3305869">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1775]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1086" _type="ShellCommand" date="Mon Mar 28 09:36:46 EDT 2022" starttimestamp="1648471300703" timestamp="3305869" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1089" _type="PauseCommand" date="Mon Mar 28 09:37:39 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="3359062">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[53193]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1088" _type="ConsoleOutput" date="Mon Mar 28 09:37:39 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="3359062" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMITwoClientReadWriteNonAtomic did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*
GIPC is not checked because RMI failed%0.0

Test execution time (ms):112572
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMITwoClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*"), Diff(INSERT,"¶GIPC is not checked because RMI failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):112"), Diff(DELETE,"605"), Diff(INSERT,"572"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1091" _type="PauseCommand" date="Mon Mar 28 09:39:32 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="3471635">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[112573]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1090" _type="ConsoleOutput" date="Mon Mar 28 09:39:32 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="3471635" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIClientMetaStateNoBroadcast did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*%0.0

Test execution time (ms):112573
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMI"), Diff(DELETE,"Two"), Diff(EQUAL,"Client"), Diff(DELETE,"ReadWriteNonAtomic"), Diff(INSERT,"MetaStateNoBroadcast"), Diff(EQUAL," did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*"), Diff(DELETE,"¶GIPC is not checked because RMI failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):11257"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1093" _type="PauseCommand" date="Mon Mar 28 09:40:11 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="3510679">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[39044]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1092" _type="ShellCommand" date="Mon Mar 28 09:40:11 EDT 2022" starttimestamp="1648471300703" timestamp="3510679" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1094" _type="MoveCaretCommand" caretOffset="6369" date="Mon Mar 28 09:40:11 EDT 2022" docOffset="6369" starttimestamp="1648471300703" timestamp="3510753" />
  <Command __id="1096" _type="PauseCommand" date="Mon Mar 28 09:40:49 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="3548777">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[38024]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1095" _type="MoveCaretCommand" caretOffset="4106" date="Mon Mar 28 09:40:49 EDT 2022" docOffset="4106" starttimestamp="1648471300703" timestamp="3548777" />
  <Command __id="1098" _type="InsertStringCommand" date="Mon Mar 28 09:40:50 EDT 2022" starttimestamp="1648471300703" timestamp="3549727" timestamp2="3549727">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="1100" _type="InsertStringCommand" date="Mon Mar 28 09:40:50 EDT 2022" starttimestamp="1648471300703" timestamp="3549819" timestamp2="3549819">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="1102" _type="InsertStringCommand" date="Mon Mar 28 09:40:50 EDT 2022" starttimestamp="1648471300703" timestamp="3549921" timestamp2="3549921">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1104" _type="InsertStringCommand" date="Mon Mar 28 09:40:50 EDT 2022" starttimestamp="1648471300703" timestamp="3550035" timestamp2="3550035">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1106" _type="PauseCommand" date="Mon Mar 28 09:40:52 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="3551429">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1394]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1105" _type="MoveCaretCommand" caretOffset="4448" date="Mon Mar 28 09:40:52 EDT 2022" docOffset="4448" starttimestamp="1648471300703" timestamp="3551429" />
  <Command __id="1107" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 09:40:52 EDT 2022" starttimestamp="1648471300703" timestamp="3552019" />
  <Command __id="1109" _type="InsertStringCommand" date="Mon Mar 28 09:40:52 EDT 2022" starttimestamp="1648471300703" timestamp="3552286" timestamp2="3552286">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="1111" _type="InsertStringCommand" date="Mon Mar 28 09:40:53 EDT 2022" starttimestamp="1648471300703" timestamp="3552397" timestamp2="3552397">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="1113" _type="InsertStringCommand" date="Mon Mar 28 09:40:53 EDT 2022" starttimestamp="1648471300703" timestamp="3552503" timestamp2="3552503">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1115" _type="InsertStringCommand" date="Mon Mar 28 09:40:53 EDT 2022" starttimestamp="1648471300703" timestamp="3552628" timestamp2="3552628">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1117" _type="PauseCommand" date="Mon Mar 28 09:40:55 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="3555109">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2481]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1133" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:40:59 EDT 2022" starttimestamp="1648471300703" timestamp="3558596" />
  <Command __id="1135" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:40:59 EDT 2022" starttimestamp="1648471300703" timestamp="3558612" />
  <Command __id="1137" _type="PauseCommand" date="Mon Mar 28 09:41:24 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="3584262">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[25650]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1136" _type="ConsoleOutput" date="Mon Mar 28 09:41:24 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="3584262" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIClientMetaStateBroadcast did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*%0.0

Test execution time (ms):112610
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMIClientMetaState"), Diff(DELETE,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*%0.0¶¶Test execution time (ms):112"), Diff(DELETE,"573"), Diff(INSERT,"610"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1139" _type="PauseCommand" date="Mon Mar 28 09:41:32 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="3592284">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8022]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1138" _type="ShellCommand" date="Mon Mar 28 09:41:32 EDT 2022" starttimestamp="1648471300703" timestamp="3592284" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1141" _type="PauseCommand" date="Mon Mar 28 09:41:40 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="3600166">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7882]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="1140" _type="BalloonCommand" date="Mon Mar 28 09:41:40 EDT 2022" message="*******************************************
Worked 24 minutes(fixed)/39 minutes(context based) from
Mon Mar 28 08:41:47 EDT 2022 to Mon Mar 28 09:41:32 EDT 2022
Edited 1 Projects: 
	A5
Edited 10 Files: 
	C:\Users\mannu\COMP_533\A5\src\checks\Checks.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java
	C:\Users\mannu\COMP_533\A5\src\server\Server.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java
	C:\Users\mannu\COMP_533\A5\src\client\Client.java
	C:\Users\mannu\COMP_533\A5\src\server\ServerRemoteInterfaceGIPC.java
	C:\Users\mannu\COMP_533\A5\src\server\ServerConfigure.java
	C:\Users\mannu\COMP_533\A5\src\server\ServerRemoteObject.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientConfigure.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java
Number of insert: 829
Number of delete: 206
" starttimestamp="1648471300703" timestamp="3600166">
    <fineGrainedWorkTime><![CDATA[39]]></fineGrainedWorkTime>
    <insert><![CDATA[829]]></insert>
    <startTime><![CDATA[1648471307299]]></startTime>
    <endTime><![CDATA[1648474892987]]></endTime>
    <workTime><![CDATA[24]]></workTime>
    <delete><![CDATA[206]]></delete>
  </Command>
  <Command __id="1143" _type="PauseCommand" date="Mon Mar 28 09:42:21 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="3640493">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[40327]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1142" _type="ShellCommand" date="Mon Mar 28 09:42:21 EDT 2022" starttimestamp="1648471300703" timestamp="3640493" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1144" _type="MoveCaretCommand" caretOffset="4936" date="Mon Mar 28 09:42:21 EDT 2022" docOffset="4936" starttimestamp="1648471300703" timestamp="3640565" />
  <Command __id="1146" _type="PauseCommand" date="Mon Mar 28 09:42:22 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="3642002">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1437]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1145" _type="ShellCommand" date="Mon Mar 28 09:42:22 EDT 2022" starttimestamp="1648471300703" timestamp="3642002" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1148" _type="PauseCommand" date="Mon Mar 28 09:42:24 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="3644068">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2065]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1147" _type="ShellCommand" date="Mon Mar 28 09:42:24 EDT 2022" starttimestamp="1648471300703" timestamp="3644067" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1149" _type="MoveCaretCommand" caretOffset="4741" date="Mon Mar 28 09:42:24 EDT 2022" docOffset="4741" starttimestamp="1648471300703" timestamp="3644145" />
  <Command __id="1009" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:26:38 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6010" docExpressionCount="576" docLength="6617" projectName="A5" starttimestamp="1648471300703" timestamp="2698132">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server."), Diff(INSERT,"remote."), Diff(EQUAL,"ServerRemoteInterfaceRMI;¶"), Diff(INSERT,"import server.remote.ServerRemoteInterfaceGIPC;¶"), Diff(EQUAL,"import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterface"), Diff(DELETE,"RMI"), Diff(INSERT,"GIPC"), Diff(EQUAL," server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			// TODO Auto-generated catch block¶			e3.printStackTrace();¶		}¶		// Get server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);

		// Locate Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			// TODO Auto-generated catch block
			e3.printStackTrace();
		}
		// Get server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1020" _type="Delete" date="Mon Mar 28 09:27:19 EDT 2022" docASTNodeCount="798" docActiveCodeLength="5985" docExpressionCount="573" docLength="6592" endLine="42" length="25" offset="1855" startLine="42" starttimestamp="1648471300703" timestamp="2739041">
    <text><![CDATA[ServerRemoteInterfaceGIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="1021" _type="Insert" date="Mon Mar 28 09:27:19 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6009" docExpressionCount="576" docLength="6616" length="24" offset="1855" starttimestamp="1648471300703" timestamp="2739041">
    <text><![CDATA[ServerRemoteInterfaceRMI]]></text>
  </DocumentChange>
  <DocumentChange __id="1097" _type="Insert" date="Mon Mar 28 09:40:50 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6009" docExpressionCount="576" docLength="6620" length="4" offset="4106" repeat="4" starttimestamp="1648471300703" timestamp="3549715" timestamp2="3550031">
    <text><![CDATA[RMI ]]></text>
  </DocumentChange>
  <DocumentChange __id="1108" _type="Insert" date="Mon Mar 28 09:40:52 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6009" docExpressionCount="576" docLength="6624" length="4" offset="4447" repeat="4" starttimestamp="1648471300703" timestamp="3552280" timestamp2="3552623">
    <text><![CDATA[RMI ]]></text>
  </DocumentChange>
  <DocumentChange __id="1118" _type="Delete" date="Mon Mar 28 09:40:56 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6004" docExpressionCount="576" docLength="6585" endLine="112" length="39" offset="4366" repeat="6" startLine="111" starttimestamp="1648471300703" timestamp="3555355" timestamp2="3556763">
    <text><![CDATA[
			// TODO Auto-generated catch block]]></text>
  </DocumentChange>
  <Command __id="1151" _type="PauseCommand" date="Mon Mar 28 09:42:55 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="3674671">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[30526]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1152" _type="MoveCaretCommand" caretOffset="341" date="Mon Mar 28 09:42:55 EDT 2022" docOffset="341" starttimestamp="1648471300703" timestamp="3674759" />
  <Command __id="1154" _type="PauseCommand" date="Mon Mar 28 09:43:17 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="3696829">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[22070]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1153" _type="ConsoleOutput" date="Mon Mar 28 09:43:17 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="3696829" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIServerMetaStateNoBroadcast did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*%0.0

Test execution time (ms):112579
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMI"), Diff(DELETE,"Client"), Diff(INSERT,"Server"), Diff(EQUAL,"MetaState"), Diff(INSERT,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*%0.0¶¶Test execution time (ms):112"), Diff(DELETE,"610"), Diff(INSERT,"579"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1156" _type="PauseCommand" date="Mon Mar 28 09:43:35 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="3714814">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[17985]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1155" _type="ShellCommand" date="Mon Mar 28 09:43:35 EDT 2022" starttimestamp="1648471300703" timestamp="3714814" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1158" _type="PauseCommand" date="Mon Mar 28 09:45:05 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="3804466">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[89652]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1157" _type="ConsoleOutput" date="Mon Mar 28 09:45:05 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="3804466" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIServerMetaStateBroadcast did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*%0.0

Test execution time (ms):107576
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMIServerMetaState"), Diff(DELETE,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*%0.0¶¶Test execution time (ms):1"), Diff(DELETE,"12"), Diff(INSERT,"07"), Diff(EQUAL,"57"), Diff(DELETE,"9"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1160" _type="PauseCommand" date="Mon Mar 28 09:45:16 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="3815390">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10924]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1159" _type="ShellCommand" date="Mon Mar 28 09:45:16 EDT 2022" starttimestamp="1648471300703" timestamp="3815390" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1162" _type="PauseCommand" date="Mon Mar 28 09:45:18 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="3817955">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2565]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1161" _type="ShellCommand" date="Mon Mar 28 09:45:18 EDT 2022" starttimestamp="1648471300703" timestamp="3817955" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1164" _type="PauseCommand" date="Mon Mar 28 09:45:32 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="3831367">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13412]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1163" _type="ConsoleOutput" date="Mon Mar 28 09:45:32 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="3831367" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@13689fb0 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMIServerMetaStateBroadcast did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryCreated.*%0.0¶¶Test execution time (ms):107576"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@13689fb0 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1166" _type="PauseCommand" date="Mon Mar 28 09:45:35 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="3835175">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3808]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1165" _type="ShellCommand" date="Mon Mar 28 09:45:35 EDT 2022" starttimestamp="1648471300703" timestamp="3835175" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1167" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 09:45:36 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="3835847" type="Run" />
  <Command __id="1168" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 09:45:36 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="3835847" type="Run" />
  <Command __id="1170" _type="PauseCommand" date="Mon Mar 28 09:45:41 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="3841109">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[5262]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1169" _type="ShellCommand" date="Mon Mar 28 09:45:41 EDT 2022" starttimestamp="1648471300703" timestamp="3841109" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1172" _type="PauseCommand" date="Mon Mar 28 09:46:06 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="3865862">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[24753]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1171" _type="ShellCommand" date="Mon Mar 28 09:46:06 EDT 2022" starttimestamp="1648471300703" timestamp="3865862" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1174" _type="PauseCommand" date="Mon Mar 28 09:49:31 EDT 2022" range="2m-5m" starttimestamp="1648471300703" timestamp="4070999">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[205137]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1173" _type="ShellCommand" date="Mon Mar 28 09:49:31 EDT 2022" starttimestamp="1648471300703" timestamp="4070999" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1176" _type="PauseCommand" date="Mon Mar 28 09:49:43 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="4082429">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11430]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1175" _type="ShellCommand" date="Mon Mar 28 09:49:43 EDT 2022" starttimestamp="1648471300703" timestamp="4082429" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1178" _type="PauseCommand" date="Mon Mar 28 09:49:49 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="4089043">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6614]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1177" _type="ShellCommand" date="Mon Mar 28 09:49:49 EDT 2022" starttimestamp="1648471300703" timestamp="4089043" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1180" _type="PauseCommand" date="Mon Mar 28 09:58:23 EDT 2022" range="5m-10m" starttimestamp="1648471300703" timestamp="4602333">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[513290]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1179" _type="ShellCommand" date="Mon Mar 28 09:58:23 EDT 2022" starttimestamp="1648471300703" timestamp="4602333" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1181" _type="ShellCommand" date="Mon Mar 28 09:58:24 EDT 2022" starttimestamp="1648471300703" timestamp="4603322" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1183" _type="PauseCommand" date="Mon Mar 28 09:58:52 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="4631372">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[28050]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1182" _type="ShellCommand" date="Mon Mar 28 09:58:52 EDT 2022" starttimestamp="1648471300703" timestamp="4631372" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1185" _type="SelectTextCommand" caretOffset="55" date="Mon Mar 28 09:58:52 EDT 2022" end="143" start="55" starttimestamp="1648471300703" timestamp="4631770" />
  <Command __id="1187" _type="PauseCommand" date="Mon Mar 28 09:58:53 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4633125">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1355]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1186" _type="MoveCaretCommand" caretOffset="314" date="Mon Mar 28 09:58:53 EDT 2022" docOffset="314" starttimestamp="1648471300703" timestamp="4633125" />
  <Command __id="1189" _type="PauseCommand" date="Mon Mar 28 09:58:56 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4636178">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3053]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1150" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:42:55 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1530" docExpressionCount="137" docLength="1530" projectName="A5" starttimestamp="1648471300703" timestamp="3674671">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceRMI ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceRMI anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1184" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 09:58:52 EDT 2022" docASTNodeCount="86" docActiveCodeLength="546" docExpressionCount="55" docLength="580" projectName="A5" starttimestamp="1648471300703" timestamp="4631584">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶¶	public static void main(final String[] args) {¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1188" _type="MoveCaretCommand" caretOffset="367" date="Mon Mar 28 09:58:56 EDT 2022" docOffset="367" starttimestamp="1648471300703" timestamp="4636178" />
  <Command __id="1191" _type="InsertStringCommand" date="Mon Mar 28 09:58:57 EDT 2022" starttimestamp="1648471300703" timestamp="4636762" timestamp2="4636762">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1193" _type="InsertStringCommand" date="Mon Mar 28 09:58:57 EDT 2022" starttimestamp="1648471300703" timestamp="4636882" timestamp2="4636882">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1194" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Mar 28 09:58:58 EDT 2022" starttimestamp="1648471300703" timestamp="4637463" />
  <Command __id="1195" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Mar 28 09:58:58 EDT 2022" starttimestamp="1648471300703" timestamp="4637631" />
  <Command __id="1197" _type="InsertStringCommand" date="Mon Mar 28 09:58:58 EDT 2022" starttimestamp="1648471300703" timestamp="4638122" timestamp2="4638122">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1199" _type="InsertStringCommand" date="Mon Mar 28 09:58:58 EDT 2022" starttimestamp="1648471300703" timestamp="4638233" timestamp2="4638233">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1201" _type="InsertStringCommand" date="Mon Mar 28 09:58:59 EDT 2022" starttimestamp="1648471300703" timestamp="4638734" timestamp2="4638734">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1203" _type="InsertStringCommand" date="Mon Mar 28 09:58:59 EDT 2022" starttimestamp="1648471300703" timestamp="4639031" timestamp2="4639031">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1205" _type="InsertStringCommand" date="Mon Mar 28 09:58:59 EDT 2022" starttimestamp="1648471300703" timestamp="4639066" timestamp2="4639066">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1207" _type="InsertStringCommand" date="Mon Mar 28 09:58:59 EDT 2022" starttimestamp="1648471300703" timestamp="4639114" timestamp2="4639114">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1209" _type="InsertStringCommand" date="Mon Mar 28 09:59:00 EDT 2022" starttimestamp="1648471300703" timestamp="4639649" timestamp2="4639649">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1211" _type="InsertStringCommand" date="Mon Mar 28 09:59:00 EDT 2022" starttimestamp="1648471300703" timestamp="4639762" timestamp2="4639762">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1214" _type="PauseCommand" date="Mon Mar 28 09:59:02 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4641523">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1761]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1213" _type="InsertStringCommand" date="Mon Mar 28 09:59:02 EDT 2022" starttimestamp="1648471300703" timestamp="4641523" timestamp2="4641523">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1216" _type="InsertStringCommand" date="Mon Mar 28 09:59:02 EDT 2022" starttimestamp="1648471300703" timestamp="4642016" timestamp2="4642016">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="1218" _type="InsertStringCommand" date="Mon Mar 28 09:59:02 EDT 2022" starttimestamp="1648471300703" timestamp="4642212" timestamp2="4642212">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1220" _type="InsertStringCommand" date="Mon Mar 28 09:59:03 EDT 2022" starttimestamp="1648471300703" timestamp="4642297" timestamp2="4642297">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1222" _type="InsertStringCommand" date="Mon Mar 28 09:59:03 EDT 2022" starttimestamp="1648471300703" timestamp="4642560" timestamp2="4642560">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1224" _type="InsertStringCommand" date="Mon Mar 28 09:59:03 EDT 2022" starttimestamp="1648471300703" timestamp="4642738" timestamp2="4642738">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1226" _type="InsertStringCommand" date="Mon Mar 28 09:59:03 EDT 2022" starttimestamp="1648471300703" timestamp="4643082" timestamp2="4643082">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="1228" _type="InsertStringCommand" date="Mon Mar 28 09:59:04 EDT 2022" starttimestamp="1648471300703" timestamp="4643300" timestamp2="4643300">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1230" _type="InsertStringCommand" date="Mon Mar 28 09:59:04 EDT 2022" starttimestamp="1648471300703" timestamp="4643486" timestamp2="4643486">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1232" _type="InsertStringCommand" date="Mon Mar 28 09:59:04 EDT 2022" starttimestamp="1648471300703" timestamp="4643582" timestamp2="4643582">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1234" _type="InsertStringCommand" date="Mon Mar 28 09:59:04 EDT 2022" starttimestamp="1648471300703" timestamp="4643697" timestamp2="4643697">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1236" _type="InsertStringCommand" date="Mon Mar 28 09:59:04 EDT 2022" starttimestamp="1648471300703" timestamp="4643888" timestamp2="4643888">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1238" _type="InsertStringCommand" date="Mon Mar 28 09:59:04 EDT 2022" starttimestamp="1648471300703" timestamp="4644062" timestamp2="4644062">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1240" _type="InsertStringCommand" date="Mon Mar 28 09:59:04 EDT 2022" starttimestamp="1648471300703" timestamp="4644139" timestamp2="4644139">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1242" _type="InsertStringCommand" date="Mon Mar 28 09:59:05 EDT 2022" starttimestamp="1648471300703" timestamp="4644716" timestamp2="4644716">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1244" _type="InsertStringCommand" date="Mon Mar 28 09:59:05 EDT 2022" starttimestamp="1648471300703" timestamp="4644853" timestamp2="4644853">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1246" _type="PauseCommand" date="Mon Mar 28 09:59:07 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4646508">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1655]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1245" _type="ShellCommand" date="Mon Mar 28 09:59:07 EDT 2022" starttimestamp="1648471300703" timestamp="4646508" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1248" _type="PauseCommand" date="Mon Mar 28 09:59:11 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4650406">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3898]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1247" _type="ShellCommand" date="Mon Mar 28 09:59:11 EDT 2022" starttimestamp="1648471300703" timestamp="4650406" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1249" _type="MoveCaretCommand" caretOffset="393" date="Mon Mar 28 09:59:11 EDT 2022" docOffset="393" starttimestamp="1648471300703" timestamp="4650459" />
  <Command __id="1251" _type="PasteCommand" date="Mon Mar 28 09:59:11 EDT 2022" starttimestamp="1648471300703" timestamp="4650822" />
  <Command __id="1252" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 09:59:12 EDT 2022" starttimestamp="1648471300703" timestamp="4651809" />
  <Command __id="1253" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:59:12 EDT 2022" starttimestamp="1648471300703" timestamp="4651908" />
  <Command __id="1254" _type="EclipseCommand" commandID="" date="Mon Mar 28 09:59:12 EDT 2022" starttimestamp="1648471300703" timestamp="4651937" />
  <Command __id="1256" _type="PauseCommand" date="Mon Mar 28 09:59:31 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="4670663">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[18726]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1255" _type="ShellCommand" date="Mon Mar 28 09:59:31 EDT 2022" starttimestamp="1648471300703" timestamp="4670663" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1258" _type="PauseCommand" date="Mon Mar 28 10:00:04 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="4703920">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[33257]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1257" _type="ShellCommand" date="Mon Mar 28 10:00:04 EDT 2022" starttimestamp="1648471300703" timestamp="4703920" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1260" _type="PauseCommand" date="Mon Mar 28 10:00:06 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4706279">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2359]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1259" _type="MoveCaretCommand" caretOffset="209" date="Mon Mar 28 10:00:06 EDT 2022" docOffset="209" starttimestamp="1648471300703" timestamp="4706279" />
  <Command __id="1262" _type="InsertStringCommand" date="Mon Mar 28 10:00:07 EDT 2022" starttimestamp="1648471300703" timestamp="4706774" timestamp2="4706774">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1264" _type="PasteCommand" date="Mon Mar 28 10:00:08 EDT 2022" starttimestamp="1648471300703" timestamp="4707564" />
  <Command __id="1266" _type="PauseCommand" date="Mon Mar 28 10:00:10 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4710217">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2653]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1265" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:00:10 EDT 2022" starttimestamp="1648471300703" timestamp="4710217" />
  <Command __id="1267" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:00:11 EDT 2022" starttimestamp="1648471300703" timestamp="4710311" />
  <Command __id="1268" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:00:11 EDT 2022" starttimestamp="1648471300703" timestamp="4710331" />
  <Command __id="1270" _type="PauseCommand" date="Mon Mar 28 10:00:18 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="4717314">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6983]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1269" _type="ShellCommand" date="Mon Mar 28 10:00:18 EDT 2022" starttimestamp="1648471300703" timestamp="4717314" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1272" _type="PauseCommand" date="Mon Mar 28 10:01:04 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="4763629">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[46315]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1271" _type="ShellCommand" date="Mon Mar 28 10:01:04 EDT 2022" starttimestamp="1648471300703" timestamp="4763629" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1273" _type="MoveCaretCommand" caretOffset="653" date="Mon Mar 28 10:01:04 EDT 2022" docOffset="653" starttimestamp="1648471300703" timestamp="4763669" />
  <Command __id="1275" _type="InsertStringCommand" date="Mon Mar 28 10:01:04 EDT 2022" starttimestamp="1648471300703" timestamp="4764020" timestamp2="4764020">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1277" _type="InsertStringCommand" date="Mon Mar 28 10:01:05 EDT 2022" starttimestamp="1648471300703" timestamp="4764701" timestamp2="4764701">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1279" _type="InsertStringCommand" date="Mon Mar 28 10:01:05 EDT 2022" starttimestamp="1648471300703" timestamp="4764801" timestamp2="4764801">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1281" _type="InsertStringCommand" date="Mon Mar 28 10:01:05 EDT 2022" starttimestamp="1648471300703" timestamp="4764892" timestamp2="4764892">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1283" _type="InsertStringCommand" date="Mon Mar 28 10:01:05 EDT 2022" starttimestamp="1648471300703" timestamp="4765119" timestamp2="4765119">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1285" _type="InsertStringCommand" date="Mon Mar 28 10:01:05 EDT 2022" starttimestamp="1648471300703" timestamp="4765242" timestamp2="4765242">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1287" _type="InsertStringCommand" date="Mon Mar 28 10:01:06 EDT 2022" starttimestamp="1648471300703" timestamp="4765355" timestamp2="4765355">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1289" _type="InsertStringCommand" date="Mon Mar 28 10:01:06 EDT 2022" starttimestamp="1648471300703" timestamp="4765499" timestamp2="4765499">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1290" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:01:06 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="4765504" />
  <DocumentChange __id="1190" _type="Insert" date="Mon Mar 28 09:58:57 EDT 2022" docASTNodeCount="86" docActiveCodeLength="562" docExpressionCount="55" docLength="618" length="38" offset="367" repeat="26" starttimestamp="1648471300703" timestamp="4636750" timestamp2="4644845">
    <text><![CDATA[//Create GIPC Registry
		
		
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="1250" _type="Replace" date="Mon Mar 28 09:59:11 EDT 2022" docASTNodeCount="93" docActiveCodeLength="624" docExpressionCount="61" docLength="680" endLine="14" insertionLength="64" int_docASTNodeCount="86" int_docActiveCodeLength="560" int_docExpressionCount="55" int_docLength="616" length="2" offset="391" startLine="14" starttimestamp="1648471300703" timestamp="4650816">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		gipcRegistry = GIPCLocateRegistry.createRegistry(SERVER_PORT);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1261" _type="Insert" date="Mon Mar 28 10:00:07 EDT 2022" docASTNodeCount="109" docActiveCodeLength="743" docExpressionCount="74" docLength="799" length="119" offset="209" repeat="2" starttimestamp="1648471300703" timestamp="4706760" timestamp2="4707554">
    <text><![CDATA[
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;]]></text>
  </DocumentChange>
  <DocumentChange __id="1274" _type="Insert" date="Mon Mar 28 10:01:04 EDT 2022" docASTNodeCount="111" docActiveCodeLength="754" docExpressionCount="75" docLength="810" length="11" offset="653" repeat="8" starttimestamp="1648471300703" timestamp="4764010" timestamp2="4765492">
    <text><![CDATA[
		server.]]></text>
  </DocumentChange>
  <Command __id="1292" _type="PauseCommand" date="Mon Mar 28 10:01:09 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4768904">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3399]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="1291" _type="Insert" date="Mon Mar 28 10:01:09 EDT 2022" docASTNodeCount="113" docActiveCodeLength="757" docExpressionCount="77" docLength="813" length="3" offset="664" repeat="3" starttimestamp="1648471300703" timestamp="4768903" timestamp2="4769217">
    <text><![CDATA[Ser]]></text>
  </DocumentChange>
  <Command __id="1296" _type="PauseCommand" date="Mon Mar 28 10:01:11 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4770444">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1541]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1308" _type="PauseCommand" date="Mon Mar 28 10:01:14 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4773331">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[2887]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1307" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:01:14 EDT 2022" starttimestamp="1648471300703" timestamp="4773331" />
  <Command __id="1309" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:01:14 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="4773393" />
  <Command __id="1310" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:01:14 EDT 2022" starttimestamp="1648471300703" timestamp="4773422" />
  <Command __id="1311" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:01:14 EDT 2022" starttimestamp="1648471300703" timestamp="4773445" />
  <DocumentChange __id="1295" _type="Delete" date="Mon Mar 28 10:01:11 EDT 2022" docASTNodeCount="109" docActiveCodeLength="746" docExpressionCount="74" docLength="802" endLine="22" length="11" offset="656" repeat="11" startLine="22" starttimestamp="1648471300703" timestamp="4770444" timestamp2="4772230">
    <text><![CDATA[	server.Ser]]></text>
  </DocumentChange>
  <Command __id="1313" _type="PauseCommand" date="Mon Mar 28 10:01:17 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4776988">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3543]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1314" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 10:01:17 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="4777074" />
  <Command __id="1317" _type="PauseCommand" date="Mon Mar 28 10:01:21 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4780749">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3675]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1316" _type="ShellCommand" date="Mon Mar 28 10:01:21 EDT 2022" starttimestamp="1648471300703" timestamp="4780749" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1319" _type="PauseCommand" date="Mon Mar 28 10:01:22 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4782193">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1444]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1318" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Mon Mar 28 10:01:22 EDT 2022" starttimestamp="1648471300703" timestamp="4782193" />
  <Command __id="1321" _type="PauseCommand" date="Mon Mar 28 10:01:25 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4784766">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2573]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1320" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:01:25 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4784766" wrapSearch="false">
    <searchString><![CDATA[init]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1323" _type="PauseCommand" date="Mon Mar 28 10:01:27 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4786844">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2078]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1322" _type="ShellCommand" date="Mon Mar 28 10:01:27 EDT 2022" starttimestamp="1648471300703" timestamp="4786844" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1326" _type="PauseCommand" date="Mon Mar 28 10:01:28 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4788186">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1342]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1325" _type="ShellCommand" date="Mon Mar 28 10:01:28 EDT 2022" starttimestamp="1648471300703" timestamp="4788186" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1328" _type="PauseCommand" date="Mon Mar 28 10:01:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4791026">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2840]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1327" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:01:31 EDT 2022" forward="true" matchWord="false" offset="4179" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4791026" wrapSearch="false">
    <searchString><![CDATA[processArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1330" _type="PauseCommand" date="Mon Mar 28 10:01:33 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4792573">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1547]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1329" _type="ShellCommand" date="Mon Mar 28 10:01:33 EDT 2022" starttimestamp="1648471300703" timestamp="4792573" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1332" _type="PauseCommand" date="Mon Mar 28 10:02:13 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="4833000">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[40427]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1331" _type="SelectTextCommand" caretOffset="293" date="Mon Mar 28 10:02:13 EDT 2022" end="346" start="293" starttimestamp="1648471300703" timestamp="4833000" />
  <Command __id="1333" _type="CopyCommand" date="Mon Mar 28 10:02:14 EDT 2022" starttimestamp="1648471300703" timestamp="4833505" />
  <Command __id="1312" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:01:17 EDT 2022" docASTNodeCount="690" docActiveCodeLength="4924" docExpressionCount="506" docLength="5412" projectName="A5" starttimestamp="1648471300703" timestamp="4776988">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1335" _type="PauseCommand" date="Mon Mar 28 10:02:34 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="4853482">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[19977]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1336" _type="MoveCaretCommand" caretOffset="656" date="Mon Mar 28 10:02:34 EDT 2022" docOffset="656" starttimestamp="1648471300703" timestamp="4853568" />
  <Command __id="1338" _type="PauseCommand" date="Mon Mar 28 10:02:36 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4855664">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2096]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1337" _type="MoveCaretCommand" caretOffset="327" date="Mon Mar 28 10:02:36 EDT 2022" docOffset="327" starttimestamp="1648471300703" timestamp="4855664" />
  <Command __id="1340" _type="UndoCommand" date="Mon Mar 28 10:02:37 EDT 2022" starttimestamp="1648471300703" timestamp="4856382" />
  <Command __id="1334" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:02:34 EDT 2022" docASTNodeCount="109" docActiveCodeLength="746" docExpressionCount="74" docLength="802" projectName="A5" starttimestamp="1648471300703" timestamp="4853482">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶import util.annotations.Tags;¶import util.tags.DistributedTags;"), Diff(INSERT,"¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;"), Diff(EQUAL,"¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶¶	public static void main(final String[] args) {¶		"), Diff(INSERT,"//Create GIPC Registry¶		gipcRegistry = GIPCLocateRegistry.createRegistry(SERVER_PORT);¶		¶		¶		"), Diff(EQUAL,"final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶"), Diff(INSERT,"	¶"), Diff(EQUAL,"		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObject;
import util.annotations.Tags;
import util.tags.DistributedTags;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {

	public static void main(final String[] args) {
		//Create GIPC Registry
		gipcRegistry = GIPCLocateRegistry.createRegistry(SERVER_PORT);
		
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

	
		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1339" _type="Insert" date="Mon Mar 28 10:02:37 EDT 2022" docASTNodeCount="113" docActiveCodeLength="757" docExpressionCount="77" docLength="813" length="11" offset="656" starttimestamp="1648471300703" timestamp="4856374">
    <text><![CDATA[	server.Ser]]></text>
  </DocumentChange>
  <Command __id="1342" _type="PauseCommand" date="Mon Mar 28 10:02:38 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4857878">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1496]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1343" _type="UndoCommand" date="Mon Mar 28 10:02:38 EDT 2022" starttimestamp="1648471300703" timestamp="4857886" />
  <Command __id="1345" _type="PauseCommand" date="Mon Mar 28 10:02:48 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="4867771">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[9885]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1344" _type="MoveCaretCommand" caretOffset="143" date="Mon Mar 28 10:02:48 EDT 2022" docOffset="143" starttimestamp="1648471300703" timestamp="4867771" />
  <Command __id="1347" _type="InsertStringCommand" date="Mon Mar 28 10:02:48 EDT 2022" starttimestamp="1648471300703" timestamp="4868102" timestamp2="4868102">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1348" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:02:49 EDT 2022" starttimestamp="1648471300703" timestamp="4868918" />
  <Command __id="1349" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:02:49 EDT 2022" starttimestamp="1648471300703" timestamp="4869011" />
  <Command __id="1350" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:02:49 EDT 2022" starttimestamp="1648471300703" timestamp="4869031" />
  <Command __id="1351" _type="MoveCaretCommand" caretOffset="211" date="Mon Mar 28 10:02:50 EDT 2022" docOffset="211" starttimestamp="1648471300703" timestamp="4869799" />
  <Command __id="1353" _type="InsertStringCommand" date="Mon Mar 28 10:02:50 EDT 2022" starttimestamp="1648471300703" timestamp="4870032" timestamp2="4870032">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1354" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:02:51 EDT 2022" starttimestamp="1648471300703" timestamp="4870487" />
  <Command __id="1355" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:02:51 EDT 2022" starttimestamp="1648471300703" timestamp="4870588" />
  <Command __id="1356" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:02:51 EDT 2022" starttimestamp="1648471300703" timestamp="4870618" />
  <Command __id="1358" _type="PauseCommand" date="Mon Mar 28 10:02:55 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4874585">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3967]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1357" _type="SelectTextCommand" caretOffset="215" date="Mon Mar 28 10:02:55 EDT 2022" end="332" start="215" starttimestamp="1648471300703" timestamp="4874585" />
  <Command __id="1359" _type="MoveCaretCommand" caretOffset="213" date="Mon Mar 28 10:02:56 EDT 2022" docOffset="213" starttimestamp="1648471300703" timestamp="4875450" />
  <Command __id="1361" _type="PauseCommand" date="Mon Mar 28 10:02:58 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4877699">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2249]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1360" _type="SelectTextCommand" caretOffset="215" date="Mon Mar 28 10:02:58 EDT 2022" end="332" start="215" starttimestamp="1648471300703" timestamp="4877699" />
  <DocumentChange __id="1341" _type="Delete" date="Mon Mar 28 10:02:38 EDT 2022" docASTNodeCount="109" docActiveCodeLength="743" docExpressionCount="74" docLength="799" endLine="22" length="14" offset="653" startLine="21" starttimestamp="1648471300703" timestamp="4857878">
    <text><![CDATA[
		server.Ser]]></text>
  </DocumentChange>
  <DocumentChange __id="1346" _type="Insert" date="Mon Mar 28 10:02:48 EDT 2022" docASTNodeCount="109" docActiveCodeLength="745" docExpressionCount="74" docLength="801" length="2" offset="143" starttimestamp="1648471300703" timestamp="4868091">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <DocumentChange __id="1352" _type="Insert" date="Mon Mar 28 10:02:50 EDT 2022" docASTNodeCount="109" docActiveCodeLength="747" docExpressionCount="74" docLength="803" length="2" offset="211" starttimestamp="1648471300703" timestamp="4870026">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="1363" _type="PauseCommand" date="Mon Mar 28 10:02:59 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4878752">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1051]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1364" _type="PasteCommand" date="Mon Mar 28 10:02:59 EDT 2022" starttimestamp="1648471300703" timestamp="4878763" />
  <Command __id="1365" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:03:00 EDT 2022" starttimestamp="1648471300703" timestamp="4879561" />
  <Command __id="1366" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:03:00 EDT 2022" starttimestamp="1648471300703" timestamp="4879650" />
  <Command __id="1367" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:03:00 EDT 2022" starttimestamp="1648471300703" timestamp="4879684" />
  <Command __id="1369" _type="PauseCommand" date="Mon Mar 28 10:03:04 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4883522">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3838]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1368" _type="MoveCaretCommand" caretOffset="373" date="Mon Mar 28 10:03:04 EDT 2022" docOffset="373" starttimestamp="1648471300703" timestamp="4883522" />
  <Command __id="1371" _type="InsertStringCommand" date="Mon Mar 28 10:03:04 EDT 2022" starttimestamp="1648471300703" timestamp="4884045" timestamp2="4884045">
    <data><![CDATA[	]]></data>
  </Command>
  <DocumentChange __id="1362" _type="Replace" date="Mon Mar 28 10:02:59 EDT 2022" docASTNodeCount="101" docActiveCodeLength="683" docExpressionCount="68" docLength="739" endLine="12" insertionLength="53" int_docASTNodeCount="93" int_docActiveCodeLength="630" int_docExpressionCount="61" int_docLength="686" length="117" offset="215" startLine="10" starttimestamp="1648471300703" timestamp="4878750">
    <deletedText><![CDATA[import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;]]></deletedText>
    <insertedText><![CDATA[import assignments.util.mainArgs.ServerArgsProcessor;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1370" _type="Insert" date="Mon Mar 28 10:03:04 EDT 2022" docASTNodeCount="101" docActiveCodeLength="684" docExpressionCount="68" docLength="740" length="1" offset="373" starttimestamp="1648471300703" timestamp="4884041">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <Command __id="1373" _type="PauseCommand" date="Mon Mar 28 10:03:07 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4886684">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2639]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="1372" _type="Insert" date="Mon Mar 28 10:03:07 EDT 2022" docASTNodeCount="101" docActiveCodeLength="690" docExpressionCount="68" docLength="746" length="6" offset="374" repeat="6" starttimestamp="1648471300703" timestamp="4886684" timestamp2="4887495">
    <text><![CDATA[SERVER]]></text>
  </DocumentChange>
  <Command __id="1374" _type="InsertStringCommand" date="Mon Mar 28 10:03:07 EDT 2022" starttimestamp="1648471300703" timestamp="4886693" timestamp2="4886693">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1376" _type="InsertStringCommand" date="Mon Mar 28 10:03:07 EDT 2022" starttimestamp="1648471300703" timestamp="4886887" timestamp2="4886887">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1378" _type="InsertStringCommand" date="Mon Mar 28 10:03:07 EDT 2022" starttimestamp="1648471300703" timestamp="4887008" timestamp2="4887008">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="1380" _type="InsertStringCommand" date="Mon Mar 28 10:03:07 EDT 2022" starttimestamp="1648471300703" timestamp="4887247" timestamp2="4887247">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="1382" _type="InsertStringCommand" date="Mon Mar 28 10:03:08 EDT 2022" starttimestamp="1648471300703" timestamp="4887408" timestamp2="4887408">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1384" _type="InsertStringCommand" date="Mon Mar 28 10:03:08 EDT 2022" starttimestamp="1648471300703" timestamp="4887500" timestamp2="4887500">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="1386" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:03:08 EDT 2022" starttimestamp="1648471300703" timestamp="4887884" />
  <Command __id="1388" _type="PauseCommand" date="Mon Mar 28 10:03:10 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4890150">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2266]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1387" _type="SelectTextCommand" caretOffset="248" date="Mon Mar 28 10:03:10 EDT 2022" end="266" start="248" starttimestamp="1648471300703" timestamp="4890150" />
  <Command __id="1389" _type="CopyCommand" date="Mon Mar 28 10:03:11 EDT 2022" starttimestamp="1648471300703" timestamp="4890375" />
  <Command __id="1391" _type="PauseCommand" date="Mon Mar 28 10:03:12 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4891807">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1432]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1390" _type="SelectTextCommand" caretOffset="374" date="Mon Mar 28 10:03:12 EDT 2022" end="379" start="374" starttimestamp="1648471300703" timestamp="4891807" />
  <Command __id="1393" _type="PasteCommand" date="Mon Mar 28 10:03:12 EDT 2022" starttimestamp="1648471300703" timestamp="4892125" />
  <DocumentChange __id="1385" _type="Delete" date="Mon Mar 28 10:03:08 EDT 2022" docASTNodeCount="101" docActiveCodeLength="689" docExpressionCount="68" docLength="745" endLine="14" length="1" offset="379" startLine="14" starttimestamp="1648471300703" timestamp="4887881">
    <text><![CDATA[R]]></text>
  </DocumentChange>
  <DocumentChange __id="1392" _type="Replace" date="Mon Mar 28 10:03:12 EDT 2022" docASTNodeCount="101" docActiveCodeLength="702" docExpressionCount="68" docLength="758" endLine="14" insertionLength="19" int_docASTNodeCount="101" int_docActiveCodeLength="683" int_docExpressionCount="68" int_docLength="739" length="6" offset="373" startLine="14" starttimestamp="1648471300703" timestamp="4892117">
    <deletedText><![CDATA[	SERVE]]></deletedText>
    <insertedText><![CDATA[	ServerArgsProcesso]]></insertedText>
  </DocumentChange>
  <Command __id="1395" _type="PauseCommand" date="Mon Mar 28 10:03:14 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4893590">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1465]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1396" _type="InsertStringCommand" date="Mon Mar 28 10:03:14 EDT 2022" starttimestamp="1648471300703" timestamp="4893596" timestamp2="4893596">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1398" _type="InsertStringCommand" date="Mon Mar 28 10:03:14 EDT 2022" starttimestamp="1648471300703" timestamp="4893862" timestamp2="4893862">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1399" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:03:14 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="4893865" />
  <Command __id="1400" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:03:14 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="4893878" />
  <DocumentChange __id="1394" _type="Insert" date="Mon Mar 28 10:03:14 EDT 2022" docASTNodeCount="101" docActiveCodeLength="704" docExpressionCount="68" docLength="760" length="2" offset="392" repeat="2" starttimestamp="1648471300703" timestamp="4893590" timestamp2="4893856">
    <text><![CDATA[r.]]></text>
  </DocumentChange>
  <Command __id="1402" _type="PauseCommand" date="Mon Mar 28 10:03:28 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="4907975">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[14097]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1403" _type="SelectTextCommand" caretOffset="293" date="Mon Mar 28 10:03:28 EDT 2022" end="346" start="293" starttimestamp="1648471300703" timestamp="4908080" />
  <Command __id="1405" _type="PauseCommand" date="Mon Mar 28 10:03:30 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4909616">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1536]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1404" _type="MoveCaretCommand" caretOffset="641" date="Mon Mar 28 10:03:30 EDT 2022" docOffset="641" starttimestamp="1648471300703" timestamp="4909616" />
  <Command __id="1408" _type="PauseCommand" date="Mon Mar 28 10:03:31 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4910998">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1382]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1407" _type="ShellCommand" date="Mon Mar 28 10:03:31 EDT 2022" starttimestamp="1648471300703" timestamp="4910998" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1410" _type="PauseCommand" date="Mon Mar 28 10:03:34 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4913512">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2514]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1409" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:34 EDT 2022" forward="true" matchWord="false" offset="641" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4913512" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1412" _type="PauseCommand" date="Mon Mar 28 10:03:38 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4918158">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[4646]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1411" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:38 EDT 2022" forward="true" matchWord="false" offset="2276" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4918158" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1413" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:39 EDT 2022" forward="true" matchWord="false" offset="2340" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4918579" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1414" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:39 EDT 2022" forward="true" matchWord="false" offset="2340" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4918972" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1416" _type="PauseCommand" date="Mon Mar 28 10:03:40 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4920225">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1253]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1415" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:40 EDT 2022" forward="true" matchWord="false" offset="2340" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4920225" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1417" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:41 EDT 2022" forward="true" matchWord="false" offset="2340" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4920394" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1418" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:41 EDT 2022" forward="true" matchWord="false" offset="2340" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4920546" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1419" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:41 EDT 2022" forward="true" matchWord="false" offset="2340" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4920717" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1421" _type="PauseCommand" date="Mon Mar 28 10:03:44 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4923660">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2943]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1420" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:44 EDT 2022" forward="false" matchWord="false" offset="2340" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4923660" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1422" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:44 EDT 2022" forward="false" matchWord="false" offset="2340" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4924229" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1424" _type="PauseCommand" date="Mon Mar 28 10:03:47 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4926348">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2119]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1423" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:47 EDT 2022" forward="false" matchWord="false" offset="2340" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4926348" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1425" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:47 EDT 2022" forward="false" matchWord="false" offset="2340" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4926599" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1426" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:03:47 EDT 2022" forward="false" matchWord="false" offset="2340" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="4926763" wrapSearch="false">
    <searchString><![CDATA[ServerArgs]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1428" _type="PauseCommand" date="Mon Mar 28 10:03:48 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4927798">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1035]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1427" _type="ShellCommand" date="Mon Mar 28 10:03:48 EDT 2022" starttimestamp="1648471300703" timestamp="4927798" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1429" _type="MoveCaretCommand" caretOffset="2239" date="Mon Mar 28 10:03:48 EDT 2022" docOffset="2239" starttimestamp="1648471300703" timestamp="4927883" />
  <Command __id="1430" _type="ShellCommand" date="Mon Mar 28 10:03:49 EDT 2022" starttimestamp="1648471300703" timestamp="4928328" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1431" _type="ShellCommand" date="Mon Mar 28 10:03:49 EDT 2022" starttimestamp="1648471300703" timestamp="4928410" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1433" _type="PauseCommand" date="Mon Mar 28 10:03:56 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="4935880">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7470]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1432" _type="SelectTextCommand" caretOffset="294" date="Mon Mar 28 10:03:56 EDT 2022" end="346" start="294" starttimestamp="1648471300703" timestamp="4935880" />
  <Command __id="1435" _type="PauseCommand" date="Mon Mar 28 10:03:58 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4937788">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1908]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1434" _type="MoveCaretCommand" caretOffset="387" date="Mon Mar 28 10:03:58 EDT 2022" docOffset="387" starttimestamp="1648471300703" timestamp="4937788" />
  <Command __id="1437" _type="PauseCommand" date="Mon Mar 28 10:04:00 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4940287">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2499]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1436" _type="CopyCommand" date="Mon Mar 28 10:04:00 EDT 2022" starttimestamp="1648471300703" timestamp="4940287" />
  <Command __id="1401" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:03:28 EDT 2022" docASTNodeCount="690" docActiveCodeLength="4924" docExpressionCount="506" docLength="5412" projectName="A5" starttimestamp="1648471300703" timestamp="4907975">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1439" _type="PauseCommand" date="Mon Mar 28 10:04:05 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4944842">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[4555]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1440" _type="MoveCaretCommand" caretOffset="394" date="Mon Mar 28 10:04:05 EDT 2022" docOffset="394" starttimestamp="1648471300703" timestamp="4944933" />
  <Command __id="1438" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:04:05 EDT 2022" docASTNodeCount="101" docActiveCodeLength="704" docExpressionCount="68" docLength="760" projectName="A5" starttimestamp="1648471300703" timestamp="4944842">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶"), Diff(INSERT,"¶"), Diff(EQUAL,"import util.annotations.Tags;¶import util.tags.DistributedTags;¶"), Diff(INSERT,"¶"), Diff(EQUAL,"import "), Diff(DELETE,"inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListene"), Diff(INSERT,"assignments.util.mainArgs.ServerArgsProcesso"), Diff(EQUAL,"r;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶"), Diff(INSERT,"	ServerArgsProcessor."), Diff(EQUAL,"¶"), Diff(DELETE,""), Diff(EQUAL,"	public static void main(final String[] args) {¶		//Create GIPC Registry¶		gipcRegistry = GIPCLocateRegistry.createRegistry(SERVER_PORT);¶		¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶"), Diff(DELETE,"	¶"), Diff(EQUAL,"		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObject;

import util.annotations.Tags;
import util.tags.DistributedTags;

import assignments.util.mainArgs.ServerArgsProcessor;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {
	ServerArgsProcessor.
	public static void main(final String[] args) {
		//Create GIPC Registry
		gipcRegistry = GIPCLocateRegistry.createRegistry(SERVER_PORT);
		
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="1442" _type="PauseCommand" date="Mon Mar 28 10:04:09 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4948645">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3712]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1443" _type="SelectTextCommand" caretOffset="293" date="Mon Mar 28 10:04:09 EDT 2022" end="346" start="293" starttimestamp="1648471300703" timestamp="4948751" />
  <Command __id="1445" _type="PauseCommand" date="Mon Mar 28 10:04:13 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4952612">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3861]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1444" _type="SelectTextCommand" caretOffset="2243" date="Mon Mar 28 10:04:13 EDT 2022" end="2308" start="2243" starttimestamp="1648471300703" timestamp="4952612" />
  <Command __id="1446" _type="CopyCommand" date="Mon Mar 28 10:04:13 EDT 2022" starttimestamp="1648471300703" timestamp="4952879" />
  <Command __id="1441" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:04:09 EDT 2022" docASTNodeCount="690" docActiveCodeLength="4924" docExpressionCount="506" docLength="5412" projectName="A5" starttimestamp="1648471300703" timestamp="4948645">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1448" _type="PauseCommand" date="Mon Mar 28 10:04:16 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4956237">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3358]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1449" _type="MoveCaretCommand" caretOffset="394" date="Mon Mar 28 10:04:17 EDT 2022" docOffset="394" starttimestamp="1648471300703" timestamp="4956326" />
  <Command __id="1451" _type="PauseCommand" date="Mon Mar 28 10:04:20 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4959409">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3083]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1450" _type="SelectTextCommand" caretOffset="374" date="Mon Mar 28 10:04:20 EDT 2022" end="394" start="374" starttimestamp="1648471300703" timestamp="4959409" />
  <Command __id="1447" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:04:16 EDT 2022" docASTNodeCount="101" docActiveCodeLength="704" docExpressionCount="68" docLength="760" projectName="A5" starttimestamp="1648471300703" timestamp="4956237">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶import assignments.util.mainArgs.ServerArgsProcessor;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	ServerArgsProcessor.¶	public static void main(final String[] args) {¶		//Create GIPC Registry¶		gipcRegistry = GIPCLocateRegistry.createRegistry(SERVER_PORT);¶		¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1453" _type="PauseCommand" date="Mon Mar 28 10:04:21 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4960666">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1257]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1454" _type="CutCommand" date="Mon Mar 28 10:04:21 EDT 2022" starttimestamp="1648471300703" timestamp="4960675" />
  <Command __id="1456" _type="PauseCommand" date="Mon Mar 28 10:04:25 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4964759">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[4084]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1455" _type="MoveCaretCommand" caretOffset="449" date="Mon Mar 28 10:04:25 EDT 2022" docOffset="449" starttimestamp="1648471300703" timestamp="4964759" />
  <Command __id="1458" _type="InsertStringCommand" date="Mon Mar 28 10:04:25 EDT 2022" starttimestamp="1648471300703" timestamp="4964993" timestamp2="4964993">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1460" _type="InsertStringCommand" date="Mon Mar 28 10:04:25 EDT 2022" starttimestamp="1648471300703" timestamp="4965205" timestamp2="4965205">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1462" _type="PasteCommand" date="Mon Mar 28 10:04:26 EDT 2022" starttimestamp="1648471300703" timestamp="4965552" />
  <DocumentChange __id="1452" _type="Delete" date="Mon Mar 28 10:04:21 EDT 2022" docASTNodeCount="101" docActiveCodeLength="684" docExpressionCount="68" docLength="740" endLine="14" length="20" offset="374" startLine="14" starttimestamp="1648471300703" timestamp="4960666">
    <text><![CDATA[ServerArgsProcessor.]]></text>
  </DocumentChange>
  <DocumentChange __id="1457" _type="Insert" date="Mon Mar 28 10:04:25 EDT 2022" docASTNodeCount="101" docActiveCodeLength="692" docExpressionCount="68" docLength="748" length="8" offset="449" repeat="2" starttimestamp="1648471300703" timestamp="4964983" timestamp2="4965197">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="1461" _type="Replace" date="Mon Mar 28 10:04:26 EDT 2022" docASTNodeCount="103" docActiveCodeLength="712" docExpressionCount="70" docLength="768" endLine="18" insertionLength="22" int_docASTNodeCount="101" int_docActiveCodeLength="690" int_docExpressionCount="68" int_docLength="746" length="2" offset="455" startLine="18" starttimestamp="1648471300703" timestamp="4965548">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ServerArgsProcessor.]]></insertedText>
  </DocumentChange>
  <Command __id="1464" _type="PauseCommand" date="Mon Mar 28 10:04:27 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="4966656">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1104]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="1463" _type="Delete" date="Mon Mar 28 10:04:27 EDT 2022" docASTNodeCount="103" docActiveCodeLength="711" docExpressionCount="68" docLength="767" endLine="18" length="1" offset="476" startLine="18" starttimestamp="1648471300703" timestamp="4966656">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="1465" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:04:27 EDT 2022" starttimestamp="1648471300703" timestamp="4966660" />
  <Command __id="1467" _type="InsertStringCommand" date="Mon Mar 28 10:04:27 EDT 2022" starttimestamp="1648471300703" timestamp="4967068" timestamp2="4967068">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1468" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:04:27 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="4967073" />
  <DocumentChange __id="1466" _type="Insert" date="Mon Mar 28 10:04:27 EDT 2022" docASTNodeCount="103" docActiveCodeLength="712" docExpressionCount="70" docLength="768" length="1" offset="476" starttimestamp="1648471300703" timestamp="4967063">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="1470" _type="PauseCommand" date="Mon Mar 28 10:04:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4970587">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3514]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1474" _type="PauseCommand" date="Mon Mar 28 10:04:36 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="4976188">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[5601]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1473" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:04:36 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="4976188" />
  <Command __id="1476" _type="InsertStringCommand" date="Mon Mar 28 10:04:36 EDT 2022" starttimestamp="1648471300703" timestamp="4976251" timestamp2="4976251">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1469" _type="Insert" date="Mon Mar 28 10:04:31 EDT 2022" docASTNodeCount="105" docActiveCodeLength="715" docExpressionCount="70" docLength="771" length="3" offset="477" repeat="3" starttimestamp="1648471300703" timestamp="4970587" timestamp2="4971011">
    <text><![CDATA[get]]></text>
  </DocumentChange>
  <DocumentChange __id="1475" _type="Replace" date="Mon Mar 28 10:04:36 EDT 2022" docASTNodeCount="106" docActiveCodeLength="735" docExpressionCount="72" docLength="791" endLine="18" insertionLength="23" int_docASTNodeCount="103" int_docActiveCodeLength="712" int_docExpressionCount="70" int_docLength="768" length="3" offset="477" startLine="18" starttimestamp="1648471300703" timestamp="4976191">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getGIPCServerPort(args)]]></insertedText>
  </DocumentChange>
  <Command __id="1478" _type="PauseCommand" date="Mon Mar 28 10:04:39 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="4978511">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2260]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1479" _type="InsertStringCommand" date="Mon Mar 28 10:04:39 EDT 2022" starttimestamp="1648471300703" timestamp="4978522" timestamp2="4978522">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1477" _type="Replace" date="Mon Mar 28 10:04:39 EDT 2022" docASTNodeCount="106" docActiveCodeLength="735" docExpressionCount="72" docLength="791" endLine="18" insertionLength="4" int_docASTNodeCount="105" int_docActiveCodeLength="731" int_docExpressionCount="71" int_docLength="787" length="4" offset="495" startLine="18" starttimestamp="1648471300703" timestamp="4978511">
    <deletedText><![CDATA[args]]></deletedText>
    <insertedText><![CDATA[args]]></insertedText>
  </DocumentChange>
  <Command __id="1481" _type="PauseCommand" date="Mon Mar 28 10:04:48 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="4987687">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[9165]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1482" _type="SelectTextCommand" caretOffset="2243" date="Mon Mar 28 10:04:48 EDT 2022" end="2308" start="2243" starttimestamp="1648471300703" timestamp="4987773" />
  <Command __id="1480" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:04:48 EDT 2022" docASTNodeCount="690" docActiveCodeLength="4924" docExpressionCount="506" docLength="5412" projectName="A5" starttimestamp="1648471300703" timestamp="4987687">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1484" _type="PauseCommand" date="Mon Mar 28 10:05:07 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5006962">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[19189]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1485" _type="MoveCaretCommand" caretOffset="500" date="Mon Mar 28 10:05:07 EDT 2022" docOffset="500" starttimestamp="1648471300703" timestamp="5007048" />
  <Command __id="1483" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:05:07 EDT 2022" docASTNodeCount="106" docActiveCodeLength="735" docExpressionCount="72" docLength="791" projectName="A5" starttimestamp="1648471300703" timestamp="5006962">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶import assignments.util.mainArgs.ServerArgsProcessor;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	"), Diff(DELETE,"ServerArgsProcessor."), Diff(EQUAL,"¶	public static void main(final String[] args) {¶		//Create GIPC Registry¶		"), Diff(INSERT,"¶		ServerArgsProcessor.getGIPCServerPort(args)¶		"), Diff(EQUAL,"gipcRegistry = GIPCLocateRegistry.createRegistry(SERVER_PORT);¶		¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObject;

import util.annotations.Tags;
import util.tags.DistributedTags;

import assignments.util.mainArgs.ServerArgsProcessor;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {
	
	public static void main(final String[] args) {
		//Create GIPC Registry
		
		ServerArgsProcessor.getGIPCServerPort(args)
		gipcRegistry = GIPCLocateRegistry.createRegistry(SERVER_PORT);
		
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="1487" _type="PauseCommand" date="Mon Mar 28 10:05:13 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5013063">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6015]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1488" _type="SelectTextCommand" caretOffset="2243" date="Mon Mar 28 10:05:13 EDT 2022" end="2308" start="2243" starttimestamp="1648471300703" timestamp="5013153" />
  <Command __id="1490" _type="PauseCommand" date="Mon Mar 28 10:05:18 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5017963">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4810]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1489" _type="SelectTextCommand" caretOffset="1471" date="Mon Mar 28 10:05:18 EDT 2022" end="1515" start="1471" starttimestamp="1648471300703" timestamp="5017963" />
  <Command __id="1492" _type="PauseCommand" date="Mon Mar 28 10:05:21 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5020392">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2429]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1491" _type="SelectTextCommand" caretOffset="1518" date="Mon Mar 28 10:05:21 EDT 2022" end="1553" start="1518" starttimestamp="1648471300703" timestamp="5020392" />
  <Command __id="1493" _type="CopyCommand" date="Mon Mar 28 10:05:21 EDT 2022" starttimestamp="1648471300703" timestamp="5020596" />
  <Command __id="1486" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:05:13 EDT 2022" docASTNodeCount="690" docActiveCodeLength="4924" docExpressionCount="506" docLength="5412" projectName="A5" starttimestamp="1648471300703" timestamp="5013063">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1495" _type="PauseCommand" date="Mon Mar 28 10:05:23 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5022346">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1750]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1496" _type="MoveCaretCommand" caretOffset="500" date="Mon Mar 28 10:05:23 EDT 2022" docOffset="500" starttimestamp="1648471300703" timestamp="5022428" />
  <Command __id="1494" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:05:23 EDT 2022" docASTNodeCount="106" docActiveCodeLength="735" docExpressionCount="72" docLength="791" projectName="A5" starttimestamp="1648471300703" timestamp="5022346">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶import assignments.util.mainArgs.ServerArgsProcessor;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	public static void main(final String[] args) {¶		//Create GIPC Registry¶		¶		ServerArgsProcessor.getGIPCServerPort(args)¶		gipcRegistry = GIPCLocateRegistry.createRegistry(SERVER_PORT);¶		¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1498" _type="PauseCommand" date="Mon Mar 28 10:05:27 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5026549">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4121]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1499" _type="SelectTextCommand" caretOffset="1518" date="Mon Mar 28 10:05:27 EDT 2022" end="1553" start="1518" starttimestamp="1648471300703" timestamp="5026643" />
  <Command __id="1497" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:05:27 EDT 2022" docASTNodeCount="690" docActiveCodeLength="4924" docExpressionCount="506" docLength="5412" projectName="A5" starttimestamp="1648471300703" timestamp="5026549">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1501" _type="PauseCommand" date="Mon Mar 28 10:05:29 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5028676">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2033]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1502" _type="MoveCaretCommand" caretOffset="500" date="Mon Mar 28 10:05:29 EDT 2022" docOffset="500" starttimestamp="1648471300703" timestamp="5028757" />
  <Command __id="1504" _type="PauseCommand" date="Mon Mar 28 10:05:30 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5029983">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1225]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1503" _type="MoveCaretCommand" caretOffset="374" date="Mon Mar 28 10:05:30 EDT 2022" docOffset="374" starttimestamp="1648471300703" timestamp="5029982" />
  <Command __id="1506" _type="InsertStringCommand" date="Mon Mar 28 10:05:31 EDT 2022" starttimestamp="1648471300703" timestamp="5030600" timestamp2="5030600">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1507" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Mar 28 10:05:31 EDT 2022" starttimestamp="1648471300703" timestamp="5031033" />
  <Command __id="1509" _type="PasteCommand" date="Mon Mar 28 10:05:32 EDT 2022" starttimestamp="1648471300703" timestamp="5031359" />
  <Command __id="1511" _type="PauseCommand" date="Mon Mar 28 10:05:34 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5034288">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2929]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1510" _type="SelectTextCommand" caretOffset="394" date="Mon Mar 28 10:05:34 EDT 2022" end="407" start="394" starttimestamp="1648471300703" timestamp="5034288" />
  <Command __id="1513" _type="PauseCommand" date="Mon Mar 28 10:05:36 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5035323">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1035]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1512" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 10:05:36 EDT 2022" starttimestamp="1648471300703" timestamp="5035323" />
  <Command __id="1514" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:05:36 EDT 2022" starttimestamp="1648471300703" timestamp="5036022" />
  <Command __id="1515" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:05:37 EDT 2022" starttimestamp="1648471300703" timestamp="5036527" />
  <Command __id="1516" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:05:37 EDT 2022" starttimestamp="1648471300703" timestamp="5036556" />
  <Command __id="1517" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:05:37 EDT 2022" starttimestamp="1648471300703" timestamp="5036588" />
  <Command __id="1518" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:05:37 EDT 2022" starttimestamp="1648471300703" timestamp="5036618" />
  <Command __id="1519" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:05:37 EDT 2022" starttimestamp="1648471300703" timestamp="5036648" />
  <Command __id="1520" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:05:37 EDT 2022" starttimestamp="1648471300703" timestamp="5036678" />
  <Command __id="1521" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:05:37 EDT 2022" starttimestamp="1648471300703" timestamp="5036710" />
  <Command __id="1522" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:05:37 EDT 2022" starttimestamp="1648471300703" timestamp="5036740" />
  <Command __id="1523" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:05:37 EDT 2022" starttimestamp="1648471300703" timestamp="5036771" />
  <Command __id="1524" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:05:37 EDT 2022" starttimestamp="1648471300703" timestamp="5037047" />
  <Command __id="1526" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:05:38 EDT 2022" starttimestamp="1648471300703" timestamp="5037774" />
  <Command __id="1528" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:05:38 EDT 2022" starttimestamp="1648471300703" timestamp="5037982" />
  <Command __id="1530" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:05:39 EDT 2022" starttimestamp="1648471300703" timestamp="5038796" />
  <Command __id="1532" _type="InsertStringCommand" date="Mon Mar 28 10:05:39 EDT 2022" starttimestamp="1648471300703" timestamp="5039076" timestamp2="5039076">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="1534" _type="InsertStringCommand" date="Mon Mar 28 10:05:39 EDT 2022" starttimestamp="1648471300703" timestamp="5039207" timestamp2="5039207">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1536" _type="InsertStringCommand" date="Mon Mar 28 10:05:40 EDT 2022" starttimestamp="1648471300703" timestamp="5039374" timestamp2="5039374">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1538" _type="InsertStringCommand" date="Mon Mar 28 10:05:40 EDT 2022" starttimestamp="1648471300703" timestamp="5039787" timestamp2="5039787">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1540" _type="PauseCommand" date="Mon Mar 28 10:05:42 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5041529">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1742]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1539" _type="MoveCaretCommand" caretOffset="592" date="Mon Mar 28 10:05:42 EDT 2022" docOffset="592" starttimestamp="1648471300703" timestamp="5041529" />
  <Command __id="1542" _type="InsertStringCommand" date="Mon Mar 28 10:05:42 EDT 2022" starttimestamp="1648471300703" timestamp="5041867" timestamp2="5041867">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1544" _type="InsertStringCommand" date="Mon Mar 28 10:05:42 EDT 2022" starttimestamp="1648471300703" timestamp="5041895" timestamp2="5041895">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1546" _type="InsertStringCommand" date="Mon Mar 28 10:05:42 EDT 2022" starttimestamp="1648471300703" timestamp="5042031" timestamp2="5042031">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1548" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:05:43 EDT 2022" starttimestamp="1648471300703" timestamp="5042691" />
  <Command __id="1550" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:05:43 EDT 2022" starttimestamp="1648471300703" timestamp="5042827" />
  <Command __id="1552" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:05:43 EDT 2022" starttimestamp="1648471300703" timestamp="5042982" />
  <Command __id="1554" _type="InsertStringCommand" date="Mon Mar 28 10:05:43 EDT 2022" starttimestamp="1648471300703" timestamp="5043159" timestamp2="5043159">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="1556" _type="InsertStringCommand" date="Mon Mar 28 10:05:43 EDT 2022" starttimestamp="1648471300703" timestamp="5043284" timestamp2="5043284">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1558" _type="InsertStringCommand" date="Mon Mar 28 10:05:44 EDT 2022" starttimestamp="1648471300703" timestamp="5043641" timestamp2="5043641">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1560" _type="InsertStringCommand" date="Mon Mar 28 10:05:44 EDT 2022" starttimestamp="1648471300703" timestamp="5043814" timestamp2="5043814">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1562" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:05:45 EDT 2022" starttimestamp="1648471300703" timestamp="5044400" />
  <Command __id="1564" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:05:45 EDT 2022" starttimestamp="1648471300703" timestamp="5044547" />
  <Command __id="1566" _type="InsertStringCommand" date="Mon Mar 28 10:05:45 EDT 2022" starttimestamp="1648471300703" timestamp="5044911" timestamp2="5044911">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1568" _type="InsertStringCommand" date="Mon Mar 28 10:05:45 EDT 2022" starttimestamp="1648471300703" timestamp="5045067" timestamp2="5045067">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1570" _type="InsertStringCommand" date="Mon Mar 28 10:05:46 EDT 2022" starttimestamp="1648471300703" timestamp="5045351" timestamp2="5045351">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="1572" _type="PauseCommand" date="Mon Mar 28 10:05:47 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5046508">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1157]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1571" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:05:47 EDT 2022" starttimestamp="1648471300703" timestamp="5046508" />
  <Command __id="1573" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:05:47 EDT 2022" starttimestamp="1648471300703" timestamp="5046603" />
  <Command __id="1574" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:05:47 EDT 2022" starttimestamp="1648471300703" timestamp="5046632" />
  <Command __id="1576" _type="PauseCommand" date="Mon Mar 28 10:05:55 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5054807">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8175]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1575" _type="ShellCommand" date="Mon Mar 28 10:05:55 EDT 2022" starttimestamp="1648471300703" timestamp="5054807" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1577" _type="ShellCommand" date="Mon Mar 28 10:05:55 EDT 2022" starttimestamp="1648471300703" timestamp="5054995" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1581" _type="PauseCommand" date="Mon Mar 28 10:05:57 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5056758">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1744]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1580" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:05:57 EDT 2022" starttimestamp="1648471300703" timestamp="5056758" />
  <Command __id="1582" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:05:57 EDT 2022" starttimestamp="1648471300703" timestamp="5056851" />
  <Command __id="1583" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:05:57 EDT 2022" starttimestamp="1648471300703" timestamp="5056871" />
  <Command __id="1585" _type="PauseCommand" date="Mon Mar 28 10:06:04 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5063700">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6829]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1584" _type="MoveCaretCommand" caretOffset="581" date="Mon Mar 28 10:06:04 EDT 2022" docOffset="581" starttimestamp="1648471300703" timestamp="5063700" />
  <Command __id="1587" _type="InsertStringCommand" date="Mon Mar 28 10:06:04 EDT 2022" starttimestamp="1648471300703" timestamp="5064154" timestamp2="5064154">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1589" _type="PauseCommand" date="Mon Mar 28 10:06:05 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5065155">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1001]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1588" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:06:05 EDT 2022" starttimestamp="1648471300703" timestamp="5065155" />
  <Command __id="1590" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:06:05 EDT 2022" starttimestamp="1648471300703" timestamp="5065250" />
  <Command __id="1591" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:06:05 EDT 2022" starttimestamp="1648471300703" timestamp="5065273" />
  <Command __id="1593" _type="PauseCommand" date="Mon Mar 28 10:06:09 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5068305">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3032]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1592" _type="ShellCommand" date="Mon Mar 28 10:06:09 EDT 2022" starttimestamp="1648471300703" timestamp="5068305" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1595" _type="PauseCommand" date="Mon Mar 28 10:06:15 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5074750">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6445]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1594" _type="ShellCommand" date="Mon Mar 28 10:06:15 EDT 2022" starttimestamp="1648471300703" timestamp="5074750" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1596" _type="MoveCaretCommand" caretOffset="452" date="Mon Mar 28 10:06:15 EDT 2022" docOffset="452" starttimestamp="1648471300703" timestamp="5074764" />
  <Command __id="1598" _type="InsertStringCommand" date="Mon Mar 28 10:06:15 EDT 2022" starttimestamp="1648471300703" timestamp="5075013" timestamp2="5075013">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1600" _type="PasteCommand" date="Mon Mar 28 10:06:15 EDT 2022" starttimestamp="1648471300703" timestamp="5075264" />
  <Command __id="1601" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:06:16 EDT 2022" starttimestamp="1648471300703" timestamp="5076112" />
  <Command __id="1602" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:06:16 EDT 2022" starttimestamp="1648471300703" timestamp="5076205" />
  <Command __id="1603" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:06:16 EDT 2022" starttimestamp="1648471300703" timestamp="5076234" />
  <Command __id="1605" _type="PauseCommand" date="Mon Mar 28 10:06:22 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5081435">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5201]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1604" _type="ShellCommand" date="Mon Mar 28 10:06:22 EDT 2022" starttimestamp="1648471300703" timestamp="5081435" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1606" _type="ShellCommand" date="Mon Mar 28 10:06:22 EDT 2022" starttimestamp="1648471300703" timestamp="5081634" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1609" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:06:23 EDT 2022" starttimestamp="1648471300703" timestamp="5082588" />
  <Command __id="1610" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:06:23 EDT 2022" starttimestamp="1648471300703" timestamp="5082678" />
  <Command __id="1611" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:06:23 EDT 2022" starttimestamp="1648471300703" timestamp="5082696" />
  <Command __id="1500" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:05:29 EDT 2022" docASTNodeCount="106" docActiveCodeLength="735" docExpressionCount="72" docLength="791" projectName="A5" starttimestamp="1648471300703" timestamp="5028676">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶import assignments.util.mainArgs.ServerArgsProcessor;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	public static void main(final String[] args) {¶		//Create GIPC Registry¶		¶		ServerArgsProcessor.getGIPCServerPort(args)¶		gipcRegistry = GIPCLocateRegistry.createRegistry(SERVER_PORT);¶		¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1505" _type="Insert" date="Mon Mar 28 10:05:31 EDT 2022" docASTNodeCount="106" docActiveCodeLength="738" docExpressionCount="72" docLength="794" length="3" offset="374" starttimestamp="1648471300703" timestamp="5030575">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1508" _type="Replace" date="Mon Mar 28 10:05:32 EDT 2022" docASTNodeCount="112" docActiveCodeLength="773" docExpressionCount="73" docLength="829" endLine="14" insertionLength="36" int_docASTNodeCount="106" int_docActiveCodeLength="737" int_docExpressionCount="72" int_docLength="793" length="1" offset="373" startLine="14" starttimestamp="1648471300703" timestamp="5031355">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	private static int RMI_SERVER_PORT;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1525" _type="Delete" date="Mon Mar 28 10:05:38 EDT 2022" docASTNodeCount="112" docActiveCodeLength="770" docExpressionCount="73" docLength="826" endLine="14" length="3" offset="393" repeat="3" startLine="14" starttimestamp="1648471300703" timestamp="5037766" timestamp2="5038789">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="1531" _type="Insert" date="Mon Mar 28 10:05:39 EDT 2022" docASTNodeCount="112" docActiveCodeLength="774" docExpressionCount="73" docLength="830" length="4" offset="393" repeat="4" starttimestamp="1648471300703" timestamp="5039069" timestamp2="5039780">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="1541" _type="Insert" date="Mon Mar 28 10:05:42 EDT 2022" docASTNodeCount="112" docActiveCodeLength="777" docExpressionCount="73" docLength="833" length="3" offset="592" repeat="3" starttimestamp="1648471300703" timestamp="5041858" timestamp2="5042025">
    <text><![CDATA[CIP]]></text>
  </DocumentChange>
  <DocumentChange __id="1547" _type="Delete" date="Mon Mar 28 10:05:43 EDT 2022" docASTNodeCount="112" docActiveCodeLength="774" docExpressionCount="73" docLength="830" endLine="20" length="3" offset="592" repeat="3" startLine="20" starttimestamp="1648471300703" timestamp="5042686" timestamp2="5042977">
    <text><![CDATA[CIP]]></text>
  </DocumentChange>
  <DocumentChange __id="1553" _type="Insert" date="Mon Mar 28 10:05:43 EDT 2022" docASTNodeCount="112" docActiveCodeLength="778" docExpressionCount="73" docLength="834" length="4" offset="592" repeat="4" starttimestamp="1648471300703" timestamp="5043152" timestamp2="5043808">
    <text><![CDATA[GICP]]></text>
  </DocumentChange>
  <DocumentChange __id="1561" _type="Delete" date="Mon Mar 28 10:05:45 EDT 2022" docASTNodeCount="112" docActiveCodeLength="776" docExpressionCount="73" docLength="832" endLine="20" length="2" offset="594" repeat="2" startLine="20" starttimestamp="1648471300703" timestamp="5044396" timestamp2="5044544">
    <text><![CDATA[CP]]></text>
  </DocumentChange>
  <DocumentChange __id="1565" _type="Insert" date="Mon Mar 28 10:05:45 EDT 2022" docASTNodeCount="112" docActiveCodeLength="779" docExpressionCount="73" docLength="835" length="3" offset="594" repeat="3" starttimestamp="1648471300703" timestamp="5044906" timestamp2="5045343">
    <text><![CDATA[PC_]]></text>
  </DocumentChange>
  <DocumentChange __id="1578" _type="Insert" date="Mon Mar 28 10:05:55 EDT 2022" docASTNodeCount="118" docActiveCodeLength="821" docExpressionCount="78" docLength="877" length="42" offset="268" repeat="2" starttimestamp="1648471300703" timestamp="5055014" timestamp2="5055015">
    <text><![CDATA[
import inputport.rpc.GIPCLocateRegistry;]]></text>
  </DocumentChange>
  <DocumentChange __id="1586" _type="Insert" date="Mon Mar 28 10:06:04 EDT 2022" docASTNodeCount="118" docActiveCodeLength="822" docExpressionCount="78" docLength="878" length="1" offset="581" starttimestamp="1648471300703" timestamp="5064138">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="1597" _type="Insert" date="Mon Mar 28 10:06:15 EDT 2022" docASTNodeCount="118" docActiveCodeLength="825" docExpressionCount="78" docLength="881" length="3" offset="452" starttimestamp="1648471300703" timestamp="5075007">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1599" _type="Replace" date="Mon Mar 28 10:06:15 EDT 2022" docASTNodeCount="125" docActiveCodeLength="868" docExpressionCount="80" docLength="924" endLine="16" insertionLength="44" int_docASTNodeCount="118" int_docActiveCodeLength="824" int_docExpressionCount="78" int_docLength="880" length="1" offset="454" startLine="16" starttimestamp="1648471300703" timestamp="5075258">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	protected static GIPCRegistry gipcRegistry;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1607" _type="Insert" date="Mon Mar 28 10:06:22 EDT 2022" docASTNodeCount="131" docActiveCodeLength="904" docExpressionCount="85" docLength="960" length="36" offset="310" repeat="2" starttimestamp="1648471300703" timestamp="5081654" timestamp2="5081655">
    <text><![CDATA[
import inputport.rpc.GIPCRegistry;]]></text>
  </DocumentChange>
  <Command __id="1613" _type="PauseCommand" date="Mon Mar 28 10:06:37 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5096856">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[14160]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1614" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 10:06:37 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="5097026" />
  <Command __id="1616" _type="PauseCommand" date="Mon Mar 28 10:06:50 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5109460">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12434]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1615" _type="ShellCommand" date="Mon Mar 28 10:06:50 EDT 2022" starttimestamp="1648471300703" timestamp="5109460" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1618" _type="PauseCommand" date="Mon Mar 28 10:07:32 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="5151353">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[41893]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1617" _type="ShellCommand" date="Mon Mar 28 10:07:32 EDT 2022" starttimestamp="1648471300703" timestamp="5151353" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1620" _type="SelectTextCommand" caretOffset="1518" date="Mon Mar 28 10:07:32 EDT 2022" end="1553" start="1518" starttimestamp="1648471300703" timestamp="5151512" />
  <Command __id="1622" _type="PauseCommand" date="Mon Mar 28 10:07:36 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5155622">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4110]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1621" _type="MoveCaretCommand" caretOffset="2095" date="Mon Mar 28 10:07:36 EDT 2022" docOffset="2095" starttimestamp="1648471300703" timestamp="5155622" />
  <Command __id="1624" _type="ShellCommand" date="Mon Mar 28 10:07:36 EDT 2022" starttimestamp="1648471300703" timestamp="5156251" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1626" _type="PauseCommand" date="Mon Mar 28 10:07:38 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5157622">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1371]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1625" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:07:38 EDT 2022" forward="false" matchWord="false" offset="2095" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="5157622" wrapSearch="false">
    <searchString><![CDATA[trace]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1628" _type="PauseCommand" date="Mon Mar 28 10:07:40 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5160236">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2614]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1627" _type="ShellCommand" date="Mon Mar 28 10:07:40 EDT 2022" starttimestamp="1648471300703" timestamp="5160236" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1630" _type="PauseCommand" date="Mon Mar 28 10:07:44 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5164268">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4032]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1629" _type="SelectTextCommand" caretOffset="1058" date="Mon Mar 28 10:07:44 EDT 2022" end="1110" start="1058" starttimestamp="1648471300703" timestamp="5164268" />
  <Command __id="1632" _type="PauseCommand" date="Mon Mar 28 10:07:46 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5165483">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1215]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1631" _type="CopyCommand" date="Mon Mar 28 10:07:46 EDT 2022" starttimestamp="1648471300703" timestamp="5165483" />
  <Command __id="1634" _type="PauseCommand" date="Mon Mar 28 10:07:47 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5166847">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1364]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1633" _type="MoveCaretCommand" caretOffset="1056" date="Mon Mar 28 10:07:47 EDT 2022" docOffset="1056" starttimestamp="1648471300703" timestamp="5166847" />
  <Command __id="1637" _type="PauseCommand" date="Mon Mar 28 10:07:50 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5170069">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3222]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1636" _type="ShellCommand" date="Mon Mar 28 10:07:50 EDT 2022" starttimestamp="1648471300703" timestamp="5170069" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1639" _type="PauseCommand" date="Mon Mar 28 10:07:52 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5171387">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1318]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1638" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:07:52 EDT 2022" forward="false" matchWord="false" offset="1056" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="5171387" wrapSearch="false">
    <searchString><![CDATA[trace]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1641" _type="PauseCommand" date="Mon Mar 28 10:08:00 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5179785">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[8398]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1640" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:08:00 EDT 2022" forward="false" matchWord="false" offset="1048" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="5179785" wrapSearch="false">
    <searchString><![CDATA[trace]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1642" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:08:00 EDT 2022" forward="false" matchWord="false" offset="1048" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="5180120" wrapSearch="false">
    <searchString><![CDATA[trace]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1644" _type="PauseCommand" date="Mon Mar 28 10:08:01 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5181189">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1069]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1643" _type="ShellCommand" date="Mon Mar 28 10:08:01 EDT 2022" starttimestamp="1648471300703" timestamp="5181189" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1646" _type="PauseCommand" date="Mon Mar 28 10:08:16 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5195646">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14457]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1645" _type="CopyCommand" date="Mon Mar 28 10:08:16 EDT 2022" starttimestamp="1648471300703" timestamp="5195646" />
  <Command __id="1612" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:06:37 EDT 2022" docASTNodeCount="138" docActiveCodeLength="839" docExpressionCount="95" docLength="879" projectName="A5" starttimestamp="1648471300703" timestamp="5096856">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\registry\TrickOrTreatRegistry.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package registry;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.util.Scanner;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶import  util.trace.port.rpc.rmi.RMIRegistryCreated;¶import assignments.util.mainArgs.RegistryArgsProcessor;¶¶@Tags({DistributedTags.REGISTRY, DistributedTags.RMI})¶public class TrickOrTreatRegistry {¶	//TODO get rid of hard coded port number¶	 private static int SERVER_PORT = 1099;¶¶	public static void main (final String[] args) {¶		SERVER_PORT = RegistryArgsProcessor.getRegistryPort(args);¶		 try {¶			final Registry rmiRegistry = LocateRegistry.createRegistry(SERVER_PORT);¶			Scanner scanner = new Scanner(System.in);¶		    scanner.nextLine();¶¶			¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		 ¶	 }¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1619" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:07:32 EDT 2022" docASTNodeCount="690" docActiveCodeLength="4924" docExpressionCount="506" docLength="5412" projectName="A5" starttimestamp="1648471300703" timestamp="5151434">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1648" _type="PauseCommand" date="Mon Mar 28 10:08:19 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5198579">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2933]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1649" _type="MoveCaretCommand" caretOffset="534" date="Mon Mar 28 10:08:19 EDT 2022" docOffset="534" starttimestamp="1648471300703" timestamp="5198686" />
  <Command __id="1651" _type="PauseCommand" date="Mon Mar 28 10:08:20 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5199922">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1236]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1650" _type="MoveCaretCommand" caretOffset="739" date="Mon Mar 28 10:08:20 EDT 2022" docOffset="739" starttimestamp="1648471300703" timestamp="5199922" />
  <Command __id="1653" _type="PasteCommand" date="Mon Mar 28 10:08:20 EDT 2022" starttimestamp="1648471300703" timestamp="5200189" />
  <Command __id="1655" _type="InsertStringCommand" date="Mon Mar 28 10:08:21 EDT 2022" starttimestamp="1648471300703" timestamp="5201034" timestamp2="5201034">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1656" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:08:21 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="5201037" />
  <Command __id="1658" _type="PauseCommand" date="Mon Mar 28 10:08:23 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5202560">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1523]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1657" _type="ShellCommand" date="Mon Mar 28 10:08:23 EDT 2022" starttimestamp="1648471300703" timestamp="5202560" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1660" _type="PauseCommand" date="Mon Mar 28 10:08:24 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5203914">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1354]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1659" _type="ShellCommand" date="Mon Mar 28 10:08:24 EDT 2022" starttimestamp="1648471300703" timestamp="5203914" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1661" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:08:24 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="5203925" />
  <Command __id="1667" _type="SelectTextCommand" caretOffset="826" date="Mon Mar 28 10:08:24 EDT 2022" end="826" start="819" starttimestamp="1648471300703" timestamp="5204119" />
  <Command __id="1669" _type="PauseCommand" date="Mon Mar 28 10:08:27 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5207007">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2888]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1668" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:08:27 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="5207007" />
  <Command __id="1670" _type="MoveCaretCommand" caretOffset="834" date="Mon Mar 28 10:08:27 EDT 2022" docOffset="834" starttimestamp="1648471300703" timestamp="5207096" />
  <Command __id="1672" _type="InsertStringCommand" date="Mon Mar 28 10:08:28 EDT 2022" starttimestamp="1648471300703" timestamp="5207629" timestamp2="5207629">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1674" _type="PauseCommand" date="Mon Mar 28 10:08:36 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5216122">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[8493]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1673" _type="SelectTextCommand" caretOffset="819" date="Mon Mar 28 10:08:36 EDT 2022" end="826" start="819" starttimestamp="1648471300703" timestamp="5216122" />
  <Command __id="1676" _type="InsertStringCommand" date="Mon Mar 28 10:08:37 EDT 2022" starttimestamp="1648471300703" timestamp="5216738" timestamp2="5216738">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1678" _type="InsertStringCommand" date="Mon Mar 28 10:08:37 EDT 2022" starttimestamp="1648471300703" timestamp="5216870" timestamp2="5216870">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1680" _type="InsertStringCommand" date="Mon Mar 28 10:08:37 EDT 2022" starttimestamp="1648471300703" timestamp="5216909" timestamp2="5216909">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1682" _type="InsertStringCommand" date="Mon Mar 28 10:08:37 EDT 2022" starttimestamp="1648471300703" timestamp="5217023" timestamp2="5217023">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1684" _type="PauseCommand" date="Mon Mar 28 10:08:40 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5219497">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2474]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1683" _type="SelectTextCommand" caretOffset="825" date="Mon Mar 28 10:08:40 EDT 2022" end="830" start="825" starttimestamp="1648471300703" timestamp="5219497" />
  <Command __id="1647" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:08:19 EDT 2022" docASTNodeCount="131" docActiveCodeLength="904" docExpressionCount="85" docLength="960" projectName="A5" starttimestamp="1648471300703" timestamp="5198579">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶import assignments.util.mainArgs.ServerArgsProcessor;"), Diff(INSERT,"¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;"), Diff(EQUAL,"¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	"), Diff(INSERT,"private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	"), Diff(EQUAL,"¶	public static void main(final String[] args) {¶		//Create GIPC Registry¶		¶		ServerArgsProcessor.getGIPCServerPort(args)"), Diff(INSERT,";"), Diff(EQUAL,"¶		gipcRegistry = GIPCLocateRegistry.createRegistry("), Diff(INSERT,"GIPC_"), Diff(EQUAL,"SERVER_PORT);¶		¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObject;

import util.annotations.Tags;
import util.tags.DistributedTags;

import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	public static void main(final String[] args) {
		//Create GIPC Registry
		
		ServerArgsProcessor.getGIPCServerPort(args);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1652" _type="Replace" date="Mon Mar 28 10:08:20 EDT 2022" docASTNodeCount="133" docActiveCodeLength="923" docExpressionCount="86" docLength="979" endLine="24" insertionLength="21" int_docASTNodeCount="131" int_docActiveCodeLength="902" int_docExpressionCount="85" int_docLength="958" length="2" offset="737" startLine="24" starttimestamp="1648471300703" timestamp="5200180">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		GIPCRegistryCreated]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1654" _type="Insert" date="Mon Mar 28 10:08:21 EDT 2022" docASTNodeCount="132" docActiveCodeLength="924" docExpressionCount="87" docLength="980" length="1" offset="758" starttimestamp="1648471300703" timestamp="5201027">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="1662" _type="Delete" date="Mon Mar 28 10:08:24 EDT 2022" docASTNodeCount="132" docActiveCodeLength="920" docExpressionCount="87" docLength="976" endLine="10" length="4" offset="211" startLine="8" starttimestamp="1648471300703" timestamp="5203931">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="1663" _type="Insert" date="Mon Mar 28 10:08:24 EDT 2022" docASTNodeCount="144" docActiveCodeLength="976" docExpressionCount="98" docLength="1032" length="56" offset="211" repeat="3" starttimestamp="1648471300703" timestamp="5203935" timestamp2="5203939">
    <text><![CDATA[
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1666" _type="Insert" date="Mon Mar 28 10:08:24 EDT 2022" docASTNodeCount="149" docActiveCodeLength="999" docExpressionCount="101" docLength="1055" length="23" offset="811" starttimestamp="1648471300703" timestamp="5203953">
    <text><![CDATA[newCase(aSource, aPort)]]></text>
  </DocumentChange>
  <DocumentChange __id="1671" _type="Insert" date="Mon Mar 28 10:08:28 EDT 2022" docASTNodeCount="149" docActiveCodeLength="1000" docExpressionCount="101" docLength="1056" length="1" offset="834" starttimestamp="1648471300703" timestamp="5207620">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="1675" _type="Replace" date="Mon Mar 28 10:08:37 EDT 2022" docASTNodeCount="149" docActiveCodeLength="994" docExpressionCount="101" docLength="1050" endLine="24" insertionLength="1" int_docASTNodeCount="148" int_docActiveCodeLength="993" int_docExpressionCount="100" int_docLength="1049" length="7" offset="819" startLine="24" starttimestamp="1648471300703" timestamp="5216730">
    <deletedText><![CDATA[aSource]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1677" _type="Insert" date="Mon Mar 28 10:08:37 EDT 2022" docASTNodeCount="149" docActiveCodeLength="997" docExpressionCount="101" docLength="1053" length="3" offset="820" repeat="3" starttimestamp="1648471300703" timestamp="5216864" timestamp2="5217014">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <Command __id="1686" _type="PauseCommand" date="Mon Mar 28 10:08:41 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5220697">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1200]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="1685" _type="Replace" date="Mon Mar 28 10:08:41 EDT 2022" docASTNodeCount="149" docActiveCodeLength="993" docExpressionCount="101" docLength="1049" endLine="24" insertionLength="1" int_docASTNodeCount="149" int_docActiveCodeLength="992" int_docExpressionCount="101" int_docLength="1048" length="5" offset="825" startLine="24" starttimestamp="1648471300703" timestamp="5220697">
    <deletedText><![CDATA[aPort]]></deletedText>
    <insertedText><![CDATA[G]]></insertedText>
  </DocumentChange>
  <Command __id="1687" _type="InsertStringCommand" date="Mon Mar 28 10:08:41 EDT 2022" starttimestamp="1648471300703" timestamp="5220715" timestamp2="5220715">
    <data><![CDATA[G]]></data>
  </Command>
  <DocumentChange __id="1688" _type="Insert" date="Mon Mar 28 10:08:41 EDT 2022" docASTNodeCount="151" docActiveCodeLength="1000" docExpressionCount="103" docLength="1056" length="7" offset="826" repeat="7" starttimestamp="1648471300703" timestamp="5220802" timestamp2="5222134">
    <text><![CDATA[IPC-ser]]></text>
  </DocumentChange>
  <Command __id="1689" _type="InsertStringCommand" date="Mon Mar 28 10:08:41 EDT 2022" starttimestamp="1648471300703" timestamp="5220807" timestamp2="5220807">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1691" _type="InsertStringCommand" date="Mon Mar 28 10:08:41 EDT 2022" starttimestamp="1648471300703" timestamp="5220900" timestamp2="5220900">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1693" _type="InsertStringCommand" date="Mon Mar 28 10:08:41 EDT 2022" starttimestamp="1648471300703" timestamp="5221103" timestamp2="5221103">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1695" _type="InsertStringCommand" date="Mon Mar 28 10:08:42 EDT 2022" starttimestamp="1648471300703" timestamp="5221642" timestamp2="5221642">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="1697" _type="InsertStringCommand" date="Mon Mar 28 10:08:42 EDT 2022" starttimestamp="1648471300703" timestamp="5221879" timestamp2="5221879">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1699" _type="InsertStringCommand" date="Mon Mar 28 10:08:42 EDT 2022" starttimestamp="1648471300703" timestamp="5222011" timestamp2="5222011">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1701" _type="InsertStringCommand" date="Mon Mar 28 10:08:42 EDT 2022" starttimestamp="1648471300703" timestamp="5222141" timestamp2="5222141">
    <data><![CDATA[r]]></data>
  </Command>
  <DocumentChange __id="1702" _type="Delete" date="Mon Mar 28 10:08:43 EDT 2022" docASTNodeCount="149" docActiveCodeLength="996" docExpressionCount="101" docLength="1052" endLine="24" length="4" offset="829" repeat="4" startLine="24" starttimestamp="1648471300703" timestamp="5222469" timestamp2="5222924">
    <text><![CDATA[-ser]]></text>
  </DocumentChange>
  <Command __id="1703" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:08:43 EDT 2022" starttimestamp="1648471300703" timestamp="5222474" />
  <Command __id="1705" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:08:43 EDT 2022" starttimestamp="1648471300703" timestamp="5222621" />
  <Command __id="1707" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:08:43 EDT 2022" starttimestamp="1648471300703" timestamp="5222782" />
  <Command __id="1709" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:08:43 EDT 2022" starttimestamp="1648471300703" timestamp="5222928" />
  <Command __id="1711" _type="InsertStringCommand" date="Mon Mar 28 10:08:43 EDT 2022" starttimestamp="1648471300703" timestamp="5223168" timestamp2="5223168">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="1713" _type="InsertStringCommand" date="Mon Mar 28 10:08:44 EDT 2022" starttimestamp="1648471300703" timestamp="5223658" timestamp2="5223658">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1715" _type="InsertStringCommand" date="Mon Mar 28 10:08:44 EDT 2022" starttimestamp="1648471300703" timestamp="5223792" timestamp2="5223792">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1717" _type="InsertStringCommand" date="Mon Mar 28 10:08:44 EDT 2022" starttimestamp="1648471300703" timestamp="5223895" timestamp2="5223895">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="1719" _type="InsertStringCommand" date="Mon Mar 28 10:08:44 EDT 2022" starttimestamp="1648471300703" timestamp="5224127" timestamp2="5224127">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="1721" _type="InsertStringCommand" date="Mon Mar 28 10:08:44 EDT 2022" starttimestamp="1648471300703" timestamp="5224276" timestamp2="5224276">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1723" _type="InsertStringCommand" date="Mon Mar 28 10:08:45 EDT 2022" starttimestamp="1648471300703" timestamp="5224604" timestamp2="5224604">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="1725" _type="InsertStringCommand" date="Mon Mar 28 10:08:45 EDT 2022" starttimestamp="1648471300703" timestamp="5225122" timestamp2="5225122">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="1727" _type="InsertStringCommand" date="Mon Mar 28 10:08:46 EDT 2022" starttimestamp="1648471300703" timestamp="5225429" timestamp2="5225429">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1729" _type="InsertStringCommand" date="Mon Mar 28 10:08:46 EDT 2022" starttimestamp="1648471300703" timestamp="5225517" timestamp2="5225517">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="1731" _type="InsertStringCommand" date="Mon Mar 28 10:08:46 EDT 2022" starttimestamp="1648471300703" timestamp="5225653" timestamp2="5225653">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="1733" _type="InsertStringCommand" date="Mon Mar 28 10:08:46 EDT 2022" starttimestamp="1648471300703" timestamp="5225886" timestamp2="5225886">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1735" _type="PauseCommand" date="Mon Mar 28 10:08:47 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5227206">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1320]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1734" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:08:47 EDT 2022" starttimestamp="1648471300703" timestamp="5227206" />
  <Command __id="1736" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:08:48 EDT 2022" starttimestamp="1648471300703" timestamp="5227308" />
  <Command __id="1737" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:08:48 EDT 2022" starttimestamp="1648471300703" timestamp="5227339" />
  <Command __id="1739" _type="PauseCommand" date="Mon Mar 28 10:09:10 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="5250052">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[22713]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1738" _type="MoveCaretCommand" caretOffset="1053" date="Mon Mar 28 10:09:10 EDT 2022" docOffset="1053" starttimestamp="1648471300703" timestamp="5250052" />
  <Command __id="1741" _type="PauseCommand" date="Mon Mar 28 10:09:13 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5252928">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2876]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="1710" _type="Insert" date="Mon Mar 28 10:08:43 EDT 2022" docASTNodeCount="149" docActiveCodeLength="1008" docExpressionCount="101" docLength="1064" length="12" offset="829" repeat="12" starttimestamp="1648471300703" timestamp="5223160" timestamp2="5225878">
    <text><![CDATA[_SERVER_PORT]]></text>
  </DocumentChange>
  <Command __id="1740" _type="MoveCaretCommand" caretOffset="1057" date="Mon Mar 28 10:09:13 EDT 2022" docOffset="1057" starttimestamp="1648471300703" timestamp="5252928" />
  <Command __id="1743" _type="InsertStringCommand" date="Mon Mar 28 10:09:13 EDT 2022" starttimestamp="1648471300703" timestamp="5253230" timestamp2="5253230">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1745" _type="InsertStringCommand" date="Mon Mar 28 10:09:14 EDT 2022" starttimestamp="1648471300703" timestamp="5253385" timestamp2="5253385">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1747" _type="InsertStringCommand" date="Mon Mar 28 10:09:14 EDT 2022" starttimestamp="1648471300703" timestamp="5253891" timestamp2="5253891">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1749" _type="InsertStringCommand" date="Mon Mar 28 10:09:14 EDT 2022" starttimestamp="1648471300703" timestamp="5254015" timestamp2="5254015">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1751" _type="InsertStringCommand" date="Mon Mar 28 10:09:14 EDT 2022" starttimestamp="1648471300703" timestamp="5254125" timestamp2="5254125">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1753" _type="InsertStringCommand" date="Mon Mar 28 10:09:14 EDT 2022" starttimestamp="1648471300703" timestamp="5254277" timestamp2="5254277">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1755" _type="InsertStringCommand" date="Mon Mar 28 10:09:15 EDT 2022" starttimestamp="1648471300703" timestamp="5254310" timestamp2="5254310">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1757" _type="InsertStringCommand" date="Mon Mar 28 10:09:15 EDT 2022" starttimestamp="1648471300703" timestamp="5254485" timestamp2="5254485">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1759" _type="InsertStringCommand" date="Mon Mar 28 10:09:15 EDT 2022" starttimestamp="1648471300703" timestamp="5254573" timestamp2="5254573">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1762" _type="PauseCommand" date="Mon Mar 28 10:09:17 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5256339">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1766]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1761" _type="InsertStringCommand" date="Mon Mar 28 10:09:17 EDT 2022" starttimestamp="1648471300703" timestamp="5256339" timestamp2="5256339">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1764" _type="InsertStringCommand" date="Mon Mar 28 10:09:17 EDT 2022" starttimestamp="1648471300703" timestamp="5256550" timestamp2="5256550">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1766" _type="InsertStringCommand" date="Mon Mar 28 10:09:17 EDT 2022" starttimestamp="1648471300703" timestamp="5256743" timestamp2="5256743">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1768" _type="InsertStringCommand" date="Mon Mar 28 10:09:17 EDT 2022" starttimestamp="1648471300703" timestamp="5256774" timestamp2="5256774">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1770" _type="InsertStringCommand" date="Mon Mar 28 10:09:17 EDT 2022" starttimestamp="1648471300703" timestamp="5256896" timestamp2="5256896">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1772" _type="InsertStringCommand" date="Mon Mar 28 10:09:17 EDT 2022" starttimestamp="1648471300703" timestamp="5257087" timestamp2="5257087">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1774" _type="InsertStringCommand" date="Mon Mar 28 10:09:17 EDT 2022" starttimestamp="1648471300703" timestamp="5257157" timestamp2="5257157">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1776" _type="InsertStringCommand" date="Mon Mar 28 10:09:18 EDT 2022" starttimestamp="1648471300703" timestamp="5257362" timestamp2="5257362">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1778" _type="InsertStringCommand" date="Mon Mar 28 10:09:18 EDT 2022" starttimestamp="1648471300703" timestamp="5257435" timestamp2="5257435">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1780" _type="InsertStringCommand" date="Mon Mar 28 10:09:18 EDT 2022" starttimestamp="1648471300703" timestamp="5257523" timestamp2="5257523">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1782" _type="InsertStringCommand" date="Mon Mar 28 10:09:18 EDT 2022" starttimestamp="1648471300703" timestamp="5257627" timestamp2="5257627">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1784" _type="InsertStringCommand" date="Mon Mar 28 10:09:18 EDT 2022" starttimestamp="1648471300703" timestamp="5257745" timestamp2="5257745">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="1742" _type="Insert" date="Mon Mar 28 10:09:13 EDT 2022" docASTNodeCount="149" docActiveCodeLength="1033" docExpressionCount="101" docLength="1089" length="25" offset="1057" repeat="21" starttimestamp="1648471300703" timestamp="5253212" timestamp2="5257739">
    <text><![CDATA[
	
	public static void ]]></text>
  </DocumentChange>
  <Command __id="1786" _type="PauseCommand" date="Mon Mar 28 10:09:22 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5261949">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4204]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="1785" _type="Insert" date="Mon Mar 28 10:09:22 EDT 2022" docASTNodeCount="155" docActiveCodeLength="1042" docExpressionCount="102" docLength="1098" length="9" offset="1082" repeat="9" starttimestamp="1648471300703" timestamp="5261949" timestamp2="5263420">
    <text><![CDATA[createCIP]]></text>
  </DocumentChange>
  <Command __id="1787" _type="InsertStringCommand" date="Mon Mar 28 10:09:22 EDT 2022" starttimestamp="1648471300703" timestamp="5261957" timestamp2="5261957">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1789" _type="InsertStringCommand" date="Mon Mar 28 10:09:22 EDT 2022" starttimestamp="1648471300703" timestamp="5262176" timestamp2="5262176">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1791" _type="InsertStringCommand" date="Mon Mar 28 10:09:22 EDT 2022" starttimestamp="1648471300703" timestamp="5262270" timestamp2="5262270">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1793" _type="InsertStringCommand" date="Mon Mar 28 10:09:23 EDT 2022" starttimestamp="1648471300703" timestamp="5262308" timestamp2="5262308">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1795" _type="InsertStringCommand" date="Mon Mar 28 10:09:23 EDT 2022" starttimestamp="1648471300703" timestamp="5262520" timestamp2="5262520">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1797" _type="InsertStringCommand" date="Mon Mar 28 10:09:23 EDT 2022" starttimestamp="1648471300703" timestamp="5262671" timestamp2="5262671">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1799" _type="InsertStringCommand" date="Mon Mar 28 10:09:23 EDT 2022" starttimestamp="1648471300703" timestamp="5263233" timestamp2="5263233">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1801" _type="InsertStringCommand" date="Mon Mar 28 10:09:24 EDT 2022" starttimestamp="1648471300703" timestamp="5263322" timestamp2="5263322">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1803" _type="InsertStringCommand" date="Mon Mar 28 10:09:24 EDT 2022" starttimestamp="1648471300703" timestamp="5263426" timestamp2="5263426">
    <data><![CDATA[P]]></data>
  </Command>
  <DocumentChange __id="1804" _type="Delete" date="Mon Mar 28 10:09:24 EDT 2022" docASTNodeCount="155" docActiveCodeLength="1039" docExpressionCount="102" docLength="1095" endLine="36" length="3" offset="1088" repeat="3" startLine="36" starttimestamp="1648471300703" timestamp="5263890" timestamp2="5264180">
    <text><![CDATA[CIP]]></text>
  </DocumentChange>
  <Command __id="1805" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:09:24 EDT 2022" starttimestamp="1648471300703" timestamp="5263894" />
  <Command __id="1807" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:09:24 EDT 2022" starttimestamp="1648471300703" timestamp="5264052" />
  <Command __id="1809" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:09:24 EDT 2022" starttimestamp="1648471300703" timestamp="5264183" />
  <Command __id="1811" _type="InsertStringCommand" date="Mon Mar 28 10:09:24 EDT 2022" starttimestamp="1648471300703" timestamp="5264272" timestamp2="5264272">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="1813" _type="InsertStringCommand" date="Mon Mar 28 10:09:25 EDT 2022" starttimestamp="1648471300703" timestamp="5264375" timestamp2="5264375">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1815" _type="InsertStringCommand" date="Mon Mar 28 10:09:25 EDT 2022" starttimestamp="1648471300703" timestamp="5264478" timestamp2="5264478">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1817" _type="InsertStringCommand" date="Mon Mar 28 10:09:25 EDT 2022" starttimestamp="1648471300703" timestamp="5264640" timestamp2="5264640">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1819" _type="InsertStringCommand" date="Mon Mar 28 10:09:26 EDT 2022" starttimestamp="1648471300703" timestamp="5265407" timestamp2="5265407">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="1821" _type="InsertStringCommand" date="Mon Mar 28 10:09:26 EDT 2022" starttimestamp="1648471300703" timestamp="5265640" timestamp2="5265640">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1823" _type="InsertStringCommand" date="Mon Mar 28 10:09:26 EDT 2022" starttimestamp="1648471300703" timestamp="5265911" timestamp2="5265911">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1825" _type="InsertStringCommand" date="Mon Mar 28 10:09:26 EDT 2022" starttimestamp="1648471300703" timestamp="5265996" timestamp2="5265996">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1827" _type="InsertStringCommand" date="Mon Mar 28 10:09:26 EDT 2022" starttimestamp="1648471300703" timestamp="5266088" timestamp2="5266088">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1829" _type="InsertStringCommand" date="Mon Mar 28 10:09:26 EDT 2022" starttimestamp="1648471300703" timestamp="5266266" timestamp2="5266266">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1831" _type="InsertStringCommand" date="Mon Mar 28 10:09:27 EDT 2022" starttimestamp="1648471300703" timestamp="5266448" timestamp2="5266448">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1833" _type="InsertStringCommand" date="Mon Mar 28 10:09:27 EDT 2022" starttimestamp="1648471300703" timestamp="5266532" timestamp2="5266532">
    <data><![CDATA[y]]></data>
  </Command>
  <DocumentChange __id="1810" _type="Insert" date="Mon Mar 28 10:09:24 EDT 2022" docASTNodeCount="155" docActiveCodeLength="1051" docExpressionCount="102" docLength="1107" length="12" offset="1088" repeat="12" starttimestamp="1648471300703" timestamp="5264263" timestamp2="5266527">
    <text><![CDATA[GIPCRegistry]]></text>
  </DocumentChange>
  <Command __id="1835" _type="PauseCommand" date="Mon Mar 28 10:09:29 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5268864">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2331]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1836" _type="InsertStringCommand" date="Mon Mar 28 10:09:29 EDT 2022" starttimestamp="1648471300703" timestamp="5268871" timestamp2="5268871">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1837" _type="InsertStringCommand" date="Mon Mar 28 10:09:29 EDT 2022" starttimestamp="1648471300703" timestamp="5268875" timestamp2="5268875">
    <data><![CDATA[)]]></data>
  </Command>
  <DocumentChange __id="1834" _type="Insert" date="Mon Mar 28 10:09:29 EDT 2022" docASTNodeCount="155" docActiveCodeLength="1053" docExpressionCount="102" docLength="1109" length="2" offset="1100" starttimestamp="1648471300703" timestamp="5268863">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="1839" _type="PauseCommand" date="Mon Mar 28 10:09:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5271030">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2155]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1840" _type="InsertStringCommand" date="Mon Mar 28 10:09:31 EDT 2022" starttimestamp="1648471300703" timestamp="5271042" timestamp2="5271042">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="1842" _type="InsertStringCommand" date="Mon Mar 28 10:09:31 EDT 2022" starttimestamp="1648471300703" timestamp="5271061" timestamp2="5271061">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="1843" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:09:32 EDT 2022" starttimestamp="1648471300703" timestamp="5271549" />
  <Command __id="1845" _type="InsertStringCommand" date="Mon Mar 28 10:09:32 EDT 2022" starttimestamp="1648471300703" timestamp="5271790" timestamp2="5271790">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1847" _type="PauseCommand" date="Mon Mar 28 10:09:36 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5275510">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3720]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1846" _type="SelectTextCommand" caretOffset="672" date="Mon Mar 28 10:09:36 EDT 2022" end="843" start="672" starttimestamp="1648471300703" timestamp="5275510" />
  <Command __id="1849" _type="CutCommand" date="Mon Mar 28 10:09:36 EDT 2022" starttimestamp="1648471300703" timestamp="5275915" />
  <Command __id="1851" _type="PauseCommand" date="Mon Mar 28 10:09:37 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5277045">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1130]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1850" _type="MoveCaretCommand" caretOffset="937" date="Mon Mar 28 10:09:37 EDT 2022" docOffset="937" starttimestamp="1648471300703" timestamp="5277045" />
  <Command __id="1853" _type="PasteCommand" date="Mon Mar 28 10:09:37 EDT 2022" starttimestamp="1648471300703" timestamp="5277288" />
  <Command __id="1855" _type="PauseCommand" date="Mon Mar 28 10:09:39 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5278397">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1109]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1854" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:09:39 EDT 2022" starttimestamp="1648471300703" timestamp="5278397" />
  <Command __id="1856" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:09:39 EDT 2022" starttimestamp="1648471300703" timestamp="5278492" />
  <Command __id="1857" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:09:39 EDT 2022" starttimestamp="1648471300703" timestamp="5278515" />
  <Command __id="1859" _type="PauseCommand" date="Mon Mar 28 10:09:44 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5283424">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4909]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1858" _type="SelectTextCommand" caretOffset="899" date="Mon Mar 28 10:09:44 EDT 2022" end="906" start="899" starttimestamp="1648471300703" timestamp="5283424" />
  <Command __id="1861" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:09:44 EDT 2022" starttimestamp="1648471300703" timestamp="5283713" />
  <Command __id="1862" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:09:45 EDT 2022" starttimestamp="1648471300703" timestamp="5284680" />
  <Command __id="1863" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:09:45 EDT 2022" starttimestamp="1648471300703" timestamp="5284771" />
  <Command __id="1864" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:09:45 EDT 2022" starttimestamp="1648471300703" timestamp="5284801" />
  <Command __id="1866" _type="PauseCommand" date="Mon Mar 28 10:09:50 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5290225">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5424]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1865" _type="MoveCaretCommand" caretOffset="923" date="Mon Mar 28 10:09:50 EDT 2022" docOffset="923" starttimestamp="1648471300703" timestamp="5290225" />
  <DocumentChange __id="1838" _type="Insert" date="Mon Mar 28 10:09:31 EDT 2022" docASTNodeCount="155" docActiveCodeLength="1063" docExpressionCount="102" docLength="1119" length="10" offset="1102" repeat="3" starttimestamp="1648471300703" timestamp="5271030" timestamp2="5271785">
    <text><![CDATA[ {
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1848" _type="Delete" date="Mon Mar 28 10:09:36 EDT 2022" docASTNodeCount="137" docActiveCodeLength="892" docExpressionCount="87" docLength="948" endLine="24" length="171" offset="672" startLine="22" starttimestamp="1648471300703" timestamp="5275903">
    <text><![CDATA[ServerArgsProcessor.getGIPCServerPort(args);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);]]></text>
  </DocumentChange>
  <DocumentChange __id="1852" _type="Replace" date="Mon Mar 28 10:09:37 EDT 2022" docASTNodeCount="155" docActiveCodeLength="1063" docExpressionCount="102" docLength="1119" endLine="35" insertionLength="173" int_docASTNodeCount="137" int_docActiveCodeLength="890" int_docExpressionCount="87" int_docLength="946" length="2" offset="935" startLine="35" starttimestamp="1648471300703" timestamp="5277276">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ServerArgsProcessor.getGIPCServerPort(args);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1860" _type="Delete" date="Mon Mar 28 10:09:44 EDT 2022" docASTNodeCount="154" docActiveCodeLength="1056" docExpressionCount="102" docLength="1112" endLine="34" length="7" offset="899" startLine="34" starttimestamp="1648471300703" timestamp="5283704">
    <text><![CDATA[static ]]></text>
  </DocumentChange>
  <Command __id="1868" _type="PauseCommand" date="Mon Mar 28 10:09:51 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5291236">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1011]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1869" _type="InsertStringCommand" date="Mon Mar 28 10:09:51 EDT 2022" starttimestamp="1648471300703" timestamp="5291245" timestamp2="5291245">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1871" _type="InsertStringCommand" date="Mon Mar 28 10:09:52 EDT 2022" starttimestamp="1648471300703" timestamp="5291354" timestamp2="5291354">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1873" _type="InsertStringCommand" date="Mon Mar 28 10:09:52 EDT 2022" starttimestamp="1648471300703" timestamp="5291450" timestamp2="5291450">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1875" _type="InsertStringCommand" date="Mon Mar 28 10:09:52 EDT 2022" starttimestamp="1648471300703" timestamp="5291560" timestamp2="5291560">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1877" _type="PauseCommand" date="Mon Mar 28 10:09:58 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5298259">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6699]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1876" _type="SelectTextCommand" caretOffset="616" date="Mon Mar 28 10:09:58 EDT 2022" end="635" start="616" starttimestamp="1648471300703" timestamp="5298259" />
  <Command __id="1878" _type="CopyCommand" date="Mon Mar 28 10:09:59 EDT 2022" starttimestamp="1648471300703" timestamp="5298553" />
  <Command __id="1880" _type="PauseCommand" date="Mon Mar 28 10:10:00 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5299751">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1198]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1879" _type="MoveCaretCommand" caretOffset="779" date="Mon Mar 28 10:10:00 EDT 2022" docOffset="779" starttimestamp="1648471300703" timestamp="5299751" />
  <Command __id="1882" _type="PauseCommand" date="Mon Mar 28 10:10:02 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5301997">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2246]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1881" _type="SelectTextCommand" caretOffset="923" date="Mon Mar 28 10:10:02 EDT 2022" end="927" start="923" starttimestamp="1648471300703" timestamp="5301997" />
  <Command __id="1884" _type="PasteCommand" date="Mon Mar 28 10:10:03 EDT 2022" starttimestamp="1648471300703" timestamp="5302490" />
  <Command __id="1885" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:10:03 EDT 2022" starttimestamp="1648471300703" timestamp="5302894" />
  <Command __id="1886" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:10:03 EDT 2022" starttimestamp="1648471300703" timestamp="5302984" />
  <Command __id="1887" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:10:03 EDT 2022" starttimestamp="1648471300703" timestamp="5303005" />
  <Command __id="1889" _type="PauseCommand" date="Mon Mar 28 10:10:28 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="5328257">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[25252]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1888" _type="SelectTextCommand" caretOffset="904" date="Mon Mar 28 10:10:28 EDT 2022" end="922" start="904" starttimestamp="1648471300703" timestamp="5328257" />
  <Command __id="1890" _type="CopyCommand" date="Mon Mar 28 10:10:29 EDT 2022" starttimestamp="1648471300703" timestamp="5328512" />
  <Command __id="1892" _type="PauseCommand" date="Mon Mar 28 10:10:30 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5330217">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1705]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1891" _type="MoveCaretCommand" caretOffset="668" date="Mon Mar 28 10:10:30 EDT 2022" docOffset="668" starttimestamp="1648471300703" timestamp="5330217" />
  <Command __id="1894" _type="PasteCommand" date="Mon Mar 28 10:10:31 EDT 2022" starttimestamp="1648471300703" timestamp="5330441" />
  <Command __id="1896" _type="InsertStringCommand" date="Mon Mar 28 10:10:32 EDT 2022" starttimestamp="1648471300703" timestamp="5331397" timestamp2="5331397">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1898" _type="InsertStringCommand" date="Mon Mar 28 10:10:33 EDT 2022" starttimestamp="1648471300703" timestamp="5332302" timestamp2="5332302">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1900" _type="InsertStringCommand" date="Mon Mar 28 10:10:33 EDT 2022" starttimestamp="1648471300703" timestamp="5332424" timestamp2="5332424">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1902" _type="InsertStringCommand" date="Mon Mar 28 10:10:33 EDT 2022" starttimestamp="1648471300703" timestamp="5332631" timestamp2="5332631">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1904" _type="InsertStringCommand" date="Mon Mar 28 10:10:33 EDT 2022" starttimestamp="1648471300703" timestamp="5332716" timestamp2="5332716">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1905" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 10:10:33 EDT 2022" starttimestamp="1648471300703" timestamp="5332913" />
  <Command __id="1907" _type="InsertStringCommand" date="Mon Mar 28 10:10:33 EDT 2022" starttimestamp="1648471300703" timestamp="5333273" timestamp2="5333273">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1909" _type="PauseCommand" date="Mon Mar 28 10:10:35 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5334448">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1175]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1908" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:10:35 EDT 2022" starttimestamp="1648471300703" timestamp="5334448" />
  <Command __id="1910" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:10:35 EDT 2022" starttimestamp="1648471300703" timestamp="5334543" />
  <Command __id="1911" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:10:35 EDT 2022" starttimestamp="1648471300703" timestamp="5334574" />
  <Command __id="1913" _type="PauseCommand" date="Mon Mar 28 10:10:45 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5344429">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9855]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1912" _type="ShellCommand" date="Mon Mar 28 10:10:45 EDT 2022" starttimestamp="1648471300703" timestamp="5344429" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1914" _type="ShellCommand" date="Mon Mar 28 10:10:45 EDT 2022" starttimestamp="1648471300703" timestamp="5344515" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1918" _type="PauseCommand" date="Mon Mar 28 10:10:57 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5357096">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[12557]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1917" _type="ShellCommand" date="Mon Mar 28 10:10:57 EDT 2022" starttimestamp="1648471300703" timestamp="5357096" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1920" _type="PauseCommand" date="Mon Mar 28 10:11:14 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5373862">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16766]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1919" _type="ShellCommand" date="Mon Mar 28 10:11:14 EDT 2022" starttimestamp="1648471300703" timestamp="5373862" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1867" _type="Insert" date="Mon Mar 28 10:09:51 EDT 2022" docASTNodeCount="136" docActiveCodeLength="1060" docExpressionCount="87" docLength="1116" length="4" offset="923" repeat="4" starttimestamp="1648471300703" timestamp="5291236" timestamp2="5291555">
    <text><![CDATA[args]]></text>
  </DocumentChange>
  <DocumentChange __id="1883" _type="Replace" date="Mon Mar 28 10:10:03 EDT 2022" docASTNodeCount="160" docActiveCodeLength="1075" docExpressionCount="104" docLength="1131" endLine="34" insertionLength="19" int_docASTNodeCount="154" int_docActiveCodeLength="1056" int_docExpressionCount="102" int_docLength="1112" length="4" offset="923" startLine="34" starttimestamp="1648471300703" timestamp="5302473">
    <deletedText><![CDATA[args]]></deletedText>
    <insertedText><![CDATA[final String[] args]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1893" _type="Replace" date="Mon Mar 28 10:10:31 EDT 2022" docASTNodeCount="162" docActiveCodeLength="1093" docExpressionCount="105" docLength="1149" endLine="21" insertionLength="20" int_docASTNodeCount="160" int_docActiveCodeLength="1073" int_docExpressionCount="104" int_docLength="1129" length="2" offset="666" startLine="21" starttimestamp="1648471300703" timestamp="5330424">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		createGIPCRegistry]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1895" _type="Insert" date="Mon Mar 28 10:10:32 EDT 2022" docASTNodeCount="164" docActiveCodeLength="1100" docExpressionCount="107" docLength="1156" length="7" offset="686" repeat="6" starttimestamp="1648471300703" timestamp="5331392" timestamp2="5333265">
    <text><![CDATA[(args);]]></text>
  </DocumentChange>
  <DocumentChange __id="1915" _type="Insert" date="Mon Mar 28 10:10:45 EDT 2022" docASTNodeCount="165" docActiveCodeLength="1107" docExpressionCount="107" docLength="1163" length="7" offset="923" repeat="2" starttimestamp="1648471300703" timestamp="5344539" timestamp2="5344540">
    <text><![CDATA[ static]]></text>
  </DocumentChange>
  <Command __id="1922" _type="PauseCommand" date="Mon Mar 28 10:11:17 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5376850">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2988]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1923" _type="MoveCaretCommand" caretOffset="125" date="Mon Mar 28 10:11:17 EDT 2022" docOffset="160" starttimestamp="1648471300703" timestamp="5377032" />
  <Command __id="1925" _type="PauseCommand" date="Mon Mar 28 10:11:47 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="5406820">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[29788]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1924" _type="ShellCommand" date="Mon Mar 28 10:11:47 EDT 2022" starttimestamp="1648471300703" timestamp="5406820" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1927" _type="PauseCommand" date="Mon Mar 28 10:11:59 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5418422">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11602]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1926" _type="ShellCommand" date="Mon Mar 28 10:11:59 EDT 2022" starttimestamp="1648471300703" timestamp="5418422" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1929" _type="SelectTextCommand" caretOffset="930" date="Mon Mar 28 10:11:59 EDT 2022" end="930" start="924" starttimestamp="1648471300703" timestamp="5418600" />
  <Command __id="1931" _type="PauseCommand" date="Mon Mar 28 10:12:04 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5423724">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5124]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1930" _type="SelectTextCommand" caretOffset="916" date="Mon Mar 28 10:12:04 EDT 2022" end="1156" start="916" starttimestamp="1648471300703" timestamp="5423724" />
  <Command __id="1933" _type="PauseCommand" date="Mon Mar 28 10:12:05 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5425271">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1547]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1932" _type="MoveCaretCommand" caretOffset="916" date="Mon Mar 28 10:12:05 EDT 2022" docOffset="916" starttimestamp="1648471300703" timestamp="5425271" />
  <Command __id="1936" _type="UndoCommand" date="Mon Mar 28 10:12:06 EDT 2022" starttimestamp="1648471300703" timestamp="5425814" />
  <Command __id="1938" _type="PauseCommand" date="Mon Mar 28 10:12:11 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5430368">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[4554]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1937" _type="SelectTextCommand" caretOffset="916" date="Mon Mar 28 10:12:11 EDT 2022" end="1149" start="916" starttimestamp="1648471300703" timestamp="5430368" />
  <Command __id="1921" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:11:17 EDT 2022" docASTNodeCount="68" docActiveCodeLength="419" docExpressionCount="40" docLength="442" projectName="A5" starttimestamp="1648471300703" timestamp="5376850">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\Client.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.CLIENT, DistributedTags.RMI"), Diff(INSERT,", DistributedTags.GIPC"), Diff(EQUAL," })¶public class Client {¶	public static void main(final String[] args) {¶		try {¶¶			// create client object¶			final ClientRemoteInterfaceRMI client = new ClientRemoteObject();¶¶			client.start(args);¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC })
public class Client {
	public static void main(final String[] args) {
		try {

			// create client object
			final ClientRemoteInterfaceRMI client = new ClientRemoteObject();

			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
]]></snapshot>
  </Command>
  <Command __id="1928" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:11:59 EDT 2022" docASTNodeCount="165" docActiveCodeLength="1107" docExpressionCount="107" docLength="1163" projectName="A5" starttimestamp="1648471300703" timestamp="5418507">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶"), Diff(INSERT,"import util.trace.port.rpc.gipc.GIPCRegistryCreated;"), Diff(EQUAL,"¶"), Diff(DELETE,""), Diff(EQUAL,"import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	public static void main(final String[] args) {¶		//Create GIPC Registry¶		"), Diff(DELETE,"¶		ServerArgsProcessor.getGIPCServerPort(args);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT"), Diff(INSERT,"createGIPCRegistry(args"), Diff(EQUAL,");¶		¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶"), Diff(DELETE,""), Diff(EQUAL,"		}¶	}"), Diff(INSERT,"¶	¶	public static void createGIPCRegistry(final String[] args) {¶		ServerArgsProcessor.getGIPCServerPort(args);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶	}"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObject;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	public static void main(final String[] args) {
		//Create GIPC Registry
		createGIPCRegistry(args);
		
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public static void createGIPCRegistry(final String[] args) {
		ServerArgsProcessor.getGIPCServerPort(args);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1934" _type="Delete" date="Mon Mar 28 10:12:06 EDT 2022" docASTNodeCount="164" docActiveCodeLength="1100" docExpressionCount="107" docLength="1156" endLine="34" length="7" offset="923" repeat="2" startLine="34" starttimestamp="1648471300703" timestamp="5425795" timestamp2="5425800">
    <text><![CDATA[ static]]></text>
  </DocumentChange>
  <Command __id="1940" _type="PauseCommand" date="Mon Mar 28 10:12:13 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5432826">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2458]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1941" _type="CutCommand" date="Mon Mar 28 10:12:13 EDT 2022" starttimestamp="1648471300703" timestamp="5432855" />
  <DocumentChange __id="1939" _type="Delete" date="Mon Mar 28 10:12:13 EDT 2022" docASTNodeCount="135" docActiveCodeLength="867" docExpressionCount="89" docLength="923" endLine="38" length="233" offset="916" startLine="34" starttimestamp="1648471300703" timestamp="5432826">
    <text><![CDATA[	public void createGIPCRegistry(final String[] args) {
		ServerArgsProcessor.getGIPCServerPort(args);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
	}]]></text>
  </DocumentChange>
  <Command __id="1943" _type="PauseCommand" date="Mon Mar 28 10:12:18 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5437752">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[4897]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1944" _type="SelectTextCommand" caretOffset="1048" date="Mon Mar 28 10:12:18 EDT 2022" end="1048" start="1043" starttimestamp="1648471300703" timestamp="5437839" />
  <Command __id="1946" _type="PauseCommand" date="Mon Mar 28 10:12:21 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5440620">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2781]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1945" _type="MoveCaretCommand" caretOffset="5405" date="Mon Mar 28 10:12:21 EDT 2022" docOffset="5405" starttimestamp="1648471300703" timestamp="5440620" />
  <Command __id="1948" _type="InsertStringCommand" date="Mon Mar 28 10:12:21 EDT 2022" starttimestamp="1648471300703" timestamp="5440895" timestamp2="5440895">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1950" _type="InsertStringCommand" date="Mon Mar 28 10:12:21 EDT 2022" starttimestamp="1648471300703" timestamp="5440998" timestamp2="5440998">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1956" _type="PasteCommand" date="Mon Mar 28 10:12:22 EDT 2022" starttimestamp="1648471300703" timestamp="5441367" />
  <Command __id="1957" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:12:22 EDT 2022" starttimestamp="1648471300703" timestamp="5441879" />
  <Command __id="1958" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:12:22 EDT 2022" starttimestamp="1648471300703" timestamp="5441992" />
  <Command __id="1959" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:12:22 EDT 2022" starttimestamp="1648471300703" timestamp="5442041" />
  <Command __id="1961" _type="PauseCommand" date="Mon Mar 28 10:12:29 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5449035">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6994]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1960" _type="ShellCommand" date="Mon Mar 28 10:12:29 EDT 2022" starttimestamp="1648471300703" timestamp="5449035" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1962" _type="ShellCommand" date="Mon Mar 28 10:12:29 EDT 2022" starttimestamp="1648471300703" timestamp="5449175" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1942" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:12:18 EDT 2022" docASTNodeCount="690" docActiveCodeLength="4924" docExpressionCount="506" docLength="5412" projectName="A5" starttimestamp="1648471300703" timestamp="5437752">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1947" _type="Insert" date="Mon Mar 28 10:12:21 EDT 2022" docASTNodeCount="690" docActiveCodeLength="4930" docExpressionCount="506" docLength="5418" length="6" offset="5405" repeat="2" starttimestamp="1648471300703" timestamp="5440882" timestamp2="5440993">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1951" _type="Replace" date="Mon Mar 28 10:12:21 EDT 2022" docASTNodeCount="719" docActiveCodeLength="5162" docExpressionCount="524" docLength="5650" endLine="171" insertionLength="233" int_docASTNodeCount="690" int_docActiveCodeLength="4929" int_docExpressionCount="506" int_docLength="5417" length="1" offset="5410" startLine="171" starttimestamp="1648471300703" timestamp="5441258">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public void createGIPCRegistry(final String[] args) {
		ServerArgsProcessor.getGIPCServerPort(args);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1952" _type="Insert" date="Mon Mar 28 10:12:22 EDT 2022" docASTNodeCount="731" docActiveCodeLength="5216" docExpressionCount="535" docLength="5704" length="54" offset="1110" repeat="2" starttimestamp="1648471300703" timestamp="5441314" timestamp2="5441317">
    <text><![CDATA[
import util.trace.port.rpc.gipc.GIPCRegistryCreated;]]></text>
  </DocumentChange>
  <DocumentChange __id="1954" _type="Insert" date="Mon Mar 28 10:12:22 EDT 2022" docASTNodeCount="737" docActiveCodeLength="5258" docExpressionCount="540" docLength="5746" length="42" offset="549" repeat="2" starttimestamp="1648471300703" timestamp="5441318" timestamp2="5441319">
    <text><![CDATA[
import inputport.rpc.GIPCLocateRegistry;]]></text>
  </DocumentChange>
  <Command __id="1964" _type="PauseCommand" date="Mon Mar 28 10:12:31 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5450579">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1404]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1965" _type="MoveCaretCommand" caretOffset="916" date="Mon Mar 28 10:12:31 EDT 2022" docOffset="916" starttimestamp="1648471300703" timestamp="5450668" />
  <Command __id="1967" _type="PauseCommand" date="Mon Mar 28 10:12:36 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5456078">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5410]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1966" _type="SelectTextCommand" caretOffset="504" date="Mon Mar 28 10:12:36 EDT 2022" end="586" start="504" starttimestamp="1648471300703" timestamp="5456078" />
  <Command __id="1963" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:12:31 EDT 2022" docASTNodeCount="135" docActiveCodeLength="867" docExpressionCount="89" docLength="923" projectName="A5" starttimestamp="1648471300703" timestamp="5450579">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	public static void main(final String[] args) {¶		//Create GIPC Registry¶		createGIPCRegistry(args);¶		¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶"), Diff(DELETE,"	public static void createGIPCRegistry(final String[] args) {¶		ServerArgsProcessor.getGIPCServerPort(args);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶	}"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObject;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	public static void main(final String[] args) {
		//Create GIPC Registry
		createGIPCRegistry(args);
		
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	


}
]]></snapshot>
  </Command>
  <Command __id="1969" _type="PauseCommand" date="Mon Mar 28 10:12:37 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5457174">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1096]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1970" _type="CutCommand" date="Mon Mar 28 10:12:37 EDT 2022" starttimestamp="1648471300703" timestamp="5457190" />
  <DocumentChange __id="1968" _type="Delete" date="Mon Mar 28 10:12:37 EDT 2022" docASTNodeCount="122" docActiveCodeLength="785" docExpressionCount="86" docLength="841" endLine="17" length="82" offset="504" startLine="16" starttimestamp="1648471300703" timestamp="5457174">
    <text><![CDATA[private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;]]></text>
  </DocumentChange>
  <Command __id="1972" _type="PauseCommand" date="Mon Mar 28 10:12:39 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5458463">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1273]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1973" _type="MoveCaretCommand" caretOffset="5739" date="Mon Mar 28 10:12:39 EDT 2022" docOffset="5739" starttimestamp="1648471300703" timestamp="5458584" />
  <Command __id="1975" _type="PauseCommand" date="Mon Mar 28 10:12:43 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5462614">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4030]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1974" _type="MoveCaretCommand" caretOffset="1686" date="Mon Mar 28 10:12:43 EDT 2022" docOffset="1686" starttimestamp="1648471300703" timestamp="5462614" />
  <Command __id="1977" _type="InsertStringCommand" date="Mon Mar 28 10:12:43 EDT 2022" starttimestamp="1648471300703" timestamp="5462875" timestamp2="5462875">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1979" _type="InsertStringCommand" date="Mon Mar 28 10:12:43 EDT 2022" starttimestamp="1648471300703" timestamp="5462996" timestamp2="5462996">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1981" _type="InsertStringCommand" date="Mon Mar 28 10:12:44 EDT 2022" starttimestamp="1648471300703" timestamp="5463402" timestamp2="5463402">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1983" _type="InsertStringCommand" date="Mon Mar 28 10:12:44 EDT 2022" starttimestamp="1648471300703" timestamp="5463506" timestamp2="5463506">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1985" _type="InsertStringCommand" date="Mon Mar 28 10:12:44 EDT 2022" starttimestamp="1648471300703" timestamp="5463961" timestamp2="5463961">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1987" _type="InsertStringCommand" date="Mon Mar 28 10:12:45 EDT 2022" starttimestamp="1648471300703" timestamp="5464673" timestamp2="5464673">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="1989" _type="InsertStringCommand" date="Mon Mar 28 10:12:45 EDT 2022" starttimestamp="1648471300703" timestamp="5464851" timestamp2="5464851">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1993" _type="PasteCommand" date="Mon Mar 28 10:12:46 EDT 2022" starttimestamp="1648471300703" timestamp="5465310" />
  <Command __id="1994" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:12:46 EDT 2022" starttimestamp="1648471300703" timestamp="5465623" />
  <Command __id="1995" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:12:46 EDT 2022" starttimestamp="1648471300703" timestamp="5465721" />
  <Command __id="1996" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:12:46 EDT 2022" starttimestamp="1648471300703" timestamp="5465780" />
  <Command __id="1998" _type="PauseCommand" date="Mon Mar 28 10:13:06 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="5485944">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[20164]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1997" _type="MoveCaretCommand" caretOffset="4473" date="Mon Mar 28 10:13:06 EDT 2022" docOffset="4473" starttimestamp="1648471300703" timestamp="5485944" />
  <Command __id="2000" _type="InsertStringCommand" date="Mon Mar 28 10:13:07 EDT 2022" starttimestamp="1648471300703" timestamp="5486592" timestamp2="5486592">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2002" _type="InsertStringCommand" date="Mon Mar 28 10:13:07 EDT 2022" starttimestamp="1648471300703" timestamp="5487062" timestamp2="5487062">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2004" _type="PauseCommand" date="Mon Mar 28 10:13:22 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5501331">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[14269]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2003" _type="SelectTextCommand" caretOffset="5658" date="Mon Mar 28 10:13:22 EDT 2022" end="5697" start="5658" starttimestamp="1648471300703" timestamp="5501331" />
  <Command __id="2005" _type="CopyCommand" date="Mon Mar 28 10:13:22 EDT 2022" starttimestamp="1648471300703" timestamp="5501541" />
  <Command __id="2007" _type="PauseCommand" date="Mon Mar 28 10:13:35 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5515081">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[13540]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2006" _type="SelectTextCommand" caretOffset="5800" date="Mon Mar 28 10:13:35 EDT 2022" end="5816" start="5800" starttimestamp="1648471300703" timestamp="5515081" />
  <Command __id="2009" _type="CutCommand" date="Mon Mar 28 10:13:36 EDT 2022" starttimestamp="1648471300703" timestamp="5515716" />
  <Command __id="1971" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:12:39 EDT 2022" docASTNodeCount="737" docActiveCodeLength="5258" docExpressionCount="540" docLength="5746" projectName="A5" starttimestamp="1648471300703" timestamp="5458463">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶"), Diff(INSERT,"import inputport.rpc.GIPCLocateRegistry;¶"), Diff(EQUAL,"import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶"), Diff(INSERT,"import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶"), Diff(EQUAL,"import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}"), Diff(INSERT,"¶	¶	public void createGIPCRegistry(final String[] args) {¶		ServerArgsProcessor.getGIPCServerPort(args);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶	}"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry(final String[] args) {
		ServerArgsProcessor.getGIPCServerPort(args);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1976" _type="Insert" date="Mon Mar 28 10:12:43 EDT 2022" docASTNodeCount="737" docActiveCodeLength="5267" docExpressionCount="540" docLength="5759" length="13" offset="1686" repeat="7" starttimestamp="1648471300703" timestamp="5462868" timestamp2="5464840">
    <text><![CDATA[
	
	//A5
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1990" _type="Replace" date="Mon Mar 28 10:12:45 EDT 2022" docASTNodeCount="750" docActiveCodeLength="5349" docExpressionCount="543" docLength="5841" endLine="40" insertionLength="83" int_docASTNodeCount="737" int_docActiveCodeLength="5266" int_docExpressionCount="540" int_docLength="5758" length="1" offset="1698" startLine="40" starttimestamp="1648471300703" timestamp="5465212">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1991" _type="Insert" date="Mon Mar 28 10:12:45 EDT 2022" docASTNodeCount="756" docActiveCodeLength="5385" docExpressionCount="548" docLength="5877" length="36" offset="591" repeat="2" starttimestamp="1648471300703" timestamp="5465270" timestamp2="5465271">
    <text><![CDATA[
import inputport.rpc.GIPCRegistry;]]></text>
  </DocumentChange>
  <DocumentChange __id="1999" _type="Insert" date="Mon Mar 28 10:13:07 EDT 2022" docASTNodeCount="756" docActiveCodeLength="5393" docExpressionCount="548" docLength="5885" length="8" offset="4473" repeat="2" starttimestamp="1648471300703" timestamp="5486579" timestamp2="5487055">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2008" _type="Delete" date="Mon Mar 28 10:13:36 EDT 2022" docASTNodeCount="755" docActiveCodeLength="5377" docExpressionCount="547" docLength="5869" endLine="182" length="16" offset="5800" startLine="182" starttimestamp="1648471300703" timestamp="5515707">
    <text><![CDATA[GIPC_SERVER_PORT]]></text>
  </DocumentChange>
  <Command __id="2011" _type="PauseCommand" date="Mon Mar 28 10:13:38 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5518248">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[2532]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2012" _type="UndoCommand" date="Mon Mar 28 10:13:38 EDT 2022" starttimestamp="1648471300703" timestamp="5518254" />
  <Command __id="2013" _type="CopyCommand" date="Mon Mar 28 10:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="5518925" />
  <Command __id="2015" _type="PauseCommand" date="Mon Mar 28 10:13:40 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5519942">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1017]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2014" _type="MoveCaretCommand" caretOffset="5651" date="Mon Mar 28 10:13:40 EDT 2022" docOffset="5651" starttimestamp="1648471300703" timestamp="5519942" />
  <Command __id="2016" _type="MoveCaretCommand" caretOffset="5703" date="Mon Mar 28 10:13:41 EDT 2022" docOffset="5703" starttimestamp="1648471300703" timestamp="5520482" />
  <Command __id="2018" _type="PasteCommand" date="Mon Mar 28 10:13:41 EDT 2022" starttimestamp="1648471300703" timestamp="5520698" />
  <Command __id="2020" _type="InsertStringCommand" date="Mon Mar 28 10:13:41 EDT 2022" starttimestamp="1648471300703" timestamp="5520936" timestamp2="5520936">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2022" _type="InsertStringCommand" date="Mon Mar 28 10:13:42 EDT 2022" starttimestamp="1648471300703" timestamp="5521568" timestamp2="5521568">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2024" _type="InsertStringCommand" date="Mon Mar 28 10:13:42 EDT 2022" starttimestamp="1648471300703" timestamp="5521770" timestamp2="5521770">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2026" _type="PauseCommand" date="Mon Mar 28 10:13:43 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5523001">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1231]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2025" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="5523001" />
  <Command __id="2027" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="5523090" />
  <Command __id="2028" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="5523118" />
  <Command __id="2030" _type="PauseCommand" date="Mon Mar 28 10:13:46 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5525869">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2751]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2029" _type="SelectTextCommand" caretOffset="5658" date="Mon Mar 28 10:13:46 EDT 2022" end="5697" start="5658" starttimestamp="1648471300703" timestamp="5525869" />
  <Command __id="2031" _type="CopyCommand" date="Mon Mar 28 10:13:46 EDT 2022" starttimestamp="1648471300703" timestamp="5526076" />
  <Command __id="2033" _type="PauseCommand" date="Mon Mar 28 10:13:50 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5530294">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[4218]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2032" _type="MoveCaretCommand" caretOffset="4477" date="Mon Mar 28 10:13:50 EDT 2022" docOffset="4477" starttimestamp="1648471300703" timestamp="5530294" />
  <Command __id="2035" _type="PasteCommand" date="Mon Mar 28 10:13:51 EDT 2022" starttimestamp="1648471300703" timestamp="5530594" />
  <Command __id="2037" _type="PauseCommand" date="Mon Mar 28 10:13:53 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5532381">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1787]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2036" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:13:53 EDT 2022" starttimestamp="1648471300703" timestamp="5532381" />
  <Command __id="2038" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:13:53 EDT 2022" starttimestamp="1648471300703" timestamp="5532618" />
  <Command __id="2039" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:13:53 EDT 2022" starttimestamp="1648471300703" timestamp="5532807" />
  <Command __id="2040" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:13:53 EDT 2022" starttimestamp="1648471300703" timestamp="5532941" />
  <Command __id="2041" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:13:53 EDT 2022" starttimestamp="1648471300703" timestamp="5533124" />
  <Command __id="2043" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:54 EDT 2022" starttimestamp="1648471300703" timestamp="5533427" />
  <Command __id="2045" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:54 EDT 2022" starttimestamp="1648471300703" timestamp="5533601" />
  <Command __id="2047" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:54 EDT 2022" starttimestamp="1648471300703" timestamp="5533739" />
  <Command __id="2049" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:54 EDT 2022" starttimestamp="1648471300703" timestamp="5533901" />
  <Command __id="2051" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:54 EDT 2022" starttimestamp="1648471300703" timestamp="5534057" />
  <Command __id="2053" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:54 EDT 2022" starttimestamp="1648471300703" timestamp="5534215" />
  <Command __id="2055" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:55 EDT 2022" starttimestamp="1648471300703" timestamp="5534366" />
  <Command __id="2057" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:55 EDT 2022" starttimestamp="1648471300703" timestamp="5534510" />
  <Command __id="2059" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:55 EDT 2022" starttimestamp="1648471300703" timestamp="5534672" />
  <Command __id="2061" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:55 EDT 2022" starttimestamp="1648471300703" timestamp="5535001" />
  <Command __id="2063" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:55 EDT 2022" starttimestamp="1648471300703" timestamp="5535169" />
  <Command __id="2065" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:56 EDT 2022" starttimestamp="1648471300703" timestamp="5535345" />
  <Command __id="2067" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:56 EDT 2022" starttimestamp="1648471300703" timestamp="5535498" />
  <Command __id="2069" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:56 EDT 2022" starttimestamp="1648471300703" timestamp="5535654" />
  <Command __id="2071" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:13:56 EDT 2022" starttimestamp="1648471300703" timestamp="5536049" />
  <Command __id="2072" _type="MoveCaretCommand" caretOffset="4473" date="Mon Mar 28 10:13:57 EDT 2022" docOffset="4473" starttimestamp="1648471300703" timestamp="5536888" />
  <Command __id="2073" _type="MoveCaretCommand" caretOffset="4501" date="Mon Mar 28 10:13:58 EDT 2022" docOffset="4501" starttimestamp="1648471300703" timestamp="5537835" />
  <Command __id="2075" _type="InsertStringCommand" date="Mon Mar 28 10:13:58 EDT 2022" starttimestamp="1648471300703" timestamp="5538245" timestamp2="5538245">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2077" _type="PauseCommand" date="Mon Mar 28 10:14:00 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5539402">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1157]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2076" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:14:00 EDT 2022" starttimestamp="1648471300703" timestamp="5539402" />
  <Command __id="2078" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:14:00 EDT 2022" starttimestamp="1648471300703" timestamp="5539501" />
  <Command __id="2079" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:14:00 EDT 2022" starttimestamp="1648471300703" timestamp="5539537" />
  <Command __id="2081" _type="PauseCommand" date="Mon Mar 28 10:14:06 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5545941">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6404]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2080" _type="SelectTextCommand" caretOffset="5728" date="Mon Mar 28 10:14:06 EDT 2022" end="5791" start="5728" starttimestamp="1648471300703" timestamp="5545941" />
  <DocumentChange __id="2010" _type="Insert" date="Mon Mar 28 10:13:38 EDT 2022" docASTNodeCount="756" docActiveCodeLength="5393" docExpressionCount="548" docLength="5885" length="16" offset="5800" starttimestamp="1648471300703" timestamp="5518248">
    <text><![CDATA[GIPC_SERVER_PORT]]></text>
  </DocumentChange>
  <DocumentChange __id="2017" _type="Replace" date="Mon Mar 28 10:13:41 EDT 2022" docASTNodeCount="756" docActiveCodeLength="5409" docExpressionCount="548" docLength="5901" endLine="181" insertionLength="18" int_docASTNodeCount="756" int_docActiveCodeLength="5391" int_docExpressionCount="548" int_docLength="5883" length="2" offset="5701" startLine="181" starttimestamp="1648471300703" timestamp="5520693">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		GIPC_SERVER_PORT]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2019" _type="Insert" date="Mon Mar 28 10:13:41 EDT 2022" docASTNodeCount="758" docActiveCodeLength="5412" docExpressionCount="550" docLength="5904" length="3" offset="5719" repeat="3" starttimestamp="1648471300703" timestamp="5520930" timestamp2="5521759">
    <text><![CDATA[ = ]]></text>
  </DocumentChange>
  <DocumentChange __id="2034" _type="Replace" date="Mon Mar 28 10:13:51 EDT 2022" docASTNodeCount="688" docActiveCodeLength="5451" docExpressionCount="502" docLength="5943" endLine="134" insertionLength="41" int_docASTNodeCount="758" int_docActiveCodeLength="5410" int_docExpressionCount="550" int_docLength="5902" length="2" offset="4475" startLine="134" starttimestamp="1648471300703" timestamp="5530575">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		createGIPCRegistry(final String[] args)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2042" _type="Delete" date="Mon Mar 28 10:13:54 EDT 2022" docASTNodeCount="762" docActiveCodeLength="5436" docExpressionCount="553" docLength="5928" endLine="134" length="15" offset="4496" repeat="15" startLine="134" starttimestamp="1648471300703" timestamp="5533422" timestamp2="5536043">
    <text><![CDATA[final String[] ]]></text>
  </DocumentChange>
  <DocumentChange __id="2074" _type="Insert" date="Mon Mar 28 10:13:58 EDT 2022" docASTNodeCount="762" docActiveCodeLength="5437" docExpressionCount="553" docLength="5929" length="1" offset="4501" starttimestamp="1648471300703" timestamp="5538231">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="2083" _type="PauseCommand" date="Mon Mar 28 10:14:08 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5547400">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1459]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2084" _type="CutCommand" date="Mon Mar 28 10:14:08 EDT 2022" starttimestamp="1648471300703" timestamp="5547411" />
  <Command __id="2086" _type="PauseCommand" date="Mon Mar 28 10:14:13 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5552833">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[5422]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2085" _type="MoveCaretCommand" caretOffset="2626" date="Mon Mar 28 10:14:13 EDT 2022" docOffset="2626" starttimestamp="1648471300703" timestamp="5552833" />
  <Command __id="2088" _type="InsertStringCommand" date="Mon Mar 28 10:14:14 EDT 2022" starttimestamp="1648471300703" timestamp="5553301" timestamp2="5553301">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2090" _type="PasteCommand" date="Mon Mar 28 10:14:14 EDT 2022" starttimestamp="1648471300703" timestamp="5553642" />
  <Command __id="2091" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:14:14 EDT 2022" starttimestamp="1648471300703" timestamp="5554126" />
  <Command __id="2092" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:14:14 EDT 2022" starttimestamp="1648471300703" timestamp="5554226" />
  <Command __id="2093" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:14:14 EDT 2022" starttimestamp="1648471300703" timestamp="5554253" />
  <Command __id="2095" _type="PauseCommand" date="Mon Mar 28 10:14:20 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5559444">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5191]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2094" _type="SelectTextCommand" caretOffset="5769" date="Mon Mar 28 10:14:20 EDT 2022" end="5788" start="5769" starttimestamp="1648471300703" timestamp="5559444" />
  <Command __id="2097" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:20 EDT 2022" starttimestamp="1648471300703" timestamp="5559718" />
  <Command __id="2099" _type="PauseCommand" date="Mon Mar 28 10:14:25 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5565230">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5512]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2098" _type="MoveCaretCommand" caretOffset="4567" date="Mon Mar 28 10:14:25 EDT 2022" docOffset="4567" starttimestamp="1648471300703" timestamp="5565230" />
  <Command __id="2101" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:26 EDT 2022" starttimestamp="1648471300703" timestamp="5565580" />
  <Command __id="2103" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:26 EDT 2022" starttimestamp="1648471300703" timestamp="5565724" />
  <Command __id="2105" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:26 EDT 2022" starttimestamp="1648471300703" timestamp="5565882" />
  <Command __id="2107" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:26 EDT 2022" starttimestamp="1648471300703" timestamp="5566125" />
  <Command __id="2108" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:14:27 EDT 2022" starttimestamp="1648471300703" timestamp="5566628" />
  <Command __id="2109" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:14:27 EDT 2022" starttimestamp="1648471300703" timestamp="5566719" />
  <Command __id="2110" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:14:27 EDT 2022" starttimestamp="1648471300703" timestamp="5566790" />
  <DocumentChange __id="2082" _type="Delete" date="Mon Mar 28 10:14:08 EDT 2022" docASTNodeCount="755" docActiveCodeLength="5374" docExpressionCount="547" docLength="5866" endLine="181" length="63" offset="5728" startLine="181" starttimestamp="1648471300703" timestamp="5547400">
    <text><![CDATA[GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);]]></text>
  </DocumentChange>
  <DocumentChange __id="2087" _type="Insert" date="Mon Mar 28 10:14:13 EDT 2022" docASTNodeCount="755" docActiveCodeLength="5378" docExpressionCount="547" docLength="5870" length="4" offset="2626" starttimestamp="1648471300703" timestamp="5553288">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2089" _type="Replace" date="Mon Mar 28 10:14:14 EDT 2022" docASTNodeCount="762" docActiveCodeLength="5441" docExpressionCount="553" docLength="5933" endLine="62" insertionLength="65" int_docASTNodeCount="755" int_docActiveCodeLength="5376" int_docExpressionCount="547" int_docLength="5868" length="2" offset="2628" startLine="62" starttimestamp="1648471300703" timestamp="5553636">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2096" _type="Delete" date="Mon Mar 28 10:14:20 EDT 2022" docASTNodeCount="756" docActiveCodeLength="5422" docExpressionCount="551" docLength="5914" endLine="181" length="19" offset="5769" startLine="181" starttimestamp="1648471300703" timestamp="5559704">
    <text><![CDATA[final String[] args]]></text>
  </DocumentChange>
  <DocumentChange __id="2100" _type="Delete" date="Mon Mar 28 10:14:26 EDT 2022" docASTNodeCount="755" docActiveCodeLength="5418" docExpressionCount="550" docLength="5910" endLine="135" length="4" offset="4563" repeat="4" startLine="135" starttimestamp="1648471300703" timestamp="5565578" timestamp2="5566120">
    <text><![CDATA[args]]></text>
  </DocumentChange>
  <Command __id="2112" _type="PauseCommand" date="Mon Mar 28 10:14:33 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5572711">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5920]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2113" _type="MoveCaretCommand" caretOffset="504" date="Mon Mar 28 10:14:33 EDT 2022" docOffset="504" starttimestamp="1648471300703" timestamp="5572788" />
  <Command __id="2115" _type="PauseCommand" date="Mon Mar 28 10:14:36 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5575593">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2805]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2114" _type="SelectTextCommand" caretOffset="586" date="Mon Mar 28 10:14:36 EDT 2022" end="611" start="586" starttimestamp="1648471300703" timestamp="5575593" />
  <Command __id="2117" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:36 EDT 2022" starttimestamp="1648471300703" timestamp="5575861" />
  <Command __id="2119" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:37 EDT 2022" starttimestamp="1648471300703" timestamp="5576789" />
  <Command __id="2121" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:37 EDT 2022" starttimestamp="1648471300703" timestamp="5576997" />
  <Command __id="2123" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:37 EDT 2022" starttimestamp="1648471300703" timestamp="5577171" />
  <Command __id="2125" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:37 EDT 2022" starttimestamp="1648471300703" timestamp="5577294" />
  <Command __id="2127" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:38 EDT 2022" starttimestamp="1648471300703" timestamp="5577453" />
  <Command __id="2129" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:38 EDT 2022" starttimestamp="1648471300703" timestamp="5577588" />
  <Command __id="2131" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:38 EDT 2022" starttimestamp="1648471300703" timestamp="5578091" />
  <Command __id="2133" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:38 EDT 2022" starttimestamp="1648471300703" timestamp="5578121" />
  <Command __id="2135" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:38 EDT 2022" starttimestamp="1648471300703" timestamp="5578149" />
  <Command __id="2137" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:38 EDT 2022" starttimestamp="1648471300703" timestamp="5578181" />
  <Command __id="2139" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:38 EDT 2022" starttimestamp="1648471300703" timestamp="5578208" />
  <Command __id="2141" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:38 EDT 2022" starttimestamp="1648471300703" timestamp="5578239" />
  <Command __id="2143" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:38 EDT 2022" starttimestamp="1648471300703" timestamp="5578269" />
  <Command __id="2145" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:39 EDT 2022" starttimestamp="1648471300703" timestamp="5578300" />
  <Command __id="2147" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:39 EDT 2022" starttimestamp="1648471300703" timestamp="5578331" />
  <Command __id="2149" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:39 EDT 2022" starttimestamp="1648471300703" timestamp="5578362" />
  <Command __id="2151" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:39 EDT 2022" starttimestamp="1648471300703" timestamp="5578495" />
  <Command __id="2153" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:39 EDT 2022" starttimestamp="1648471300703" timestamp="5578670" />
  <Command __id="2155" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:39 EDT 2022" starttimestamp="1648471300703" timestamp="5578828" />
  <Command __id="2157" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:39 EDT 2022" starttimestamp="1648471300703" timestamp="5578977" />
  <Command __id="2159" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:39 EDT 2022" starttimestamp="1648471300703" timestamp="5579118" />
  <Command __id="2161" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:39 EDT 2022" starttimestamp="1648471300703" timestamp="5579284" />
  <Command __id="2163" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:40 EDT 2022" starttimestamp="1648471300703" timestamp="5579425" />
  <Command __id="2165" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:40 EDT 2022" starttimestamp="1648471300703" timestamp="5579570" />
  <Command __id="2167" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:40 EDT 2022" starttimestamp="1648471300703" timestamp="5579971" />
  <Command __id="2169" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 10:14:41 EDT 2022" starttimestamp="1648471300703" timestamp="5580327" />
  <Command __id="2171" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 10:14:41 EDT 2022" starttimestamp="1648471300703" timestamp="5580653" />
  <Command __id="2173" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 10:14:42 EDT 2022" starttimestamp="1648471300703" timestamp="5581485" />
  <Command __id="2175" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:42 EDT 2022" starttimestamp="1648471300703" timestamp="5582281" />
  <Command __id="2177" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:43 EDT 2022" starttimestamp="1648471300703" timestamp="5582650" />
  <Command __id="2111" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:14:33 EDT 2022" docASTNodeCount="122" docActiveCodeLength="785" docExpressionCount="86" docLength="841" projectName="A5" starttimestamp="1648471300703" timestamp="5572710">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	"), Diff(DELETE,"private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;"), Diff(EQUAL,"¶	¶	public static void main(final String[] args) {¶		//Create GIPC Registry¶		createGIPCRegistry(args);¶		¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObject;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {
	
	
	public static void main(final String[] args) {
		//Create GIPC Registry
		createGIPCRegistry(args);
		
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	


}
]]></snapshot>
  </Command>
  <DocumentChange __id="2116" _type="Delete" date="Mon Mar 28 10:14:36 EDT 2022" docASTNodeCount="118" docActiveCodeLength="750" docExpressionCount="83" docLength="784" endLine="21" length="57" offset="558" repeat="31" startLine="19" starttimestamp="1648471300703" timestamp="5575855" timestamp2="5582648">
    <text><![CDATA[		//Create GIPC Registry
		createGIPCRegistry(args);
		]]></text>
  </DocumentChange>
  <Command __id="2179" _type="PauseCommand" date="Mon Mar 28 10:14:45 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5584875">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2225]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2180" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:45 EDT 2022" starttimestamp="1648471300703" timestamp="5584889" />
  <Command __id="2182" _type="PauseCommand" date="Mon Mar 28 10:14:46 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5586048">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1159]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2181" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:14:46 EDT 2022" starttimestamp="1648471300703" timestamp="5586048" />
  <Command __id="2183" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:14:46 EDT 2022" starttimestamp="1648471300703" timestamp="5586147" />
  <Command __id="2184" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:14:46 EDT 2022" starttimestamp="1648471300703" timestamp="5586170" />
  <Command __id="2186" _type="PauseCommand" date="Mon Mar 28 10:14:52 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5591866">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5696]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <DocumentChange __id="2178" _type="Delete" date="Mon Mar 28 10:14:45 EDT 2022" docASTNodeCount="118" docActiveCodeLength="748" docExpressionCount="83" docLength="782" endLine="19" length="2" offset="556" startLine="18" starttimestamp="1648471300703" timestamp="5584875">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="2185" _type="SelectTextCommand" caretOffset="213" date="Mon Mar 28 10:14:52 EDT 2022" end="398" start="213" starttimestamp="1648471300703" timestamp="5591866" />
  <Command __id="2188" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:52 EDT 2022" starttimestamp="1648471300703" timestamp="5592127" />
  <Command __id="2191" _type="PauseCommand" date="Mon Mar 28 10:14:54 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5593318">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1191]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2190" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:14:54 EDT 2022" starttimestamp="1648471300703" timestamp="5593318" />
  <Command __id="2192" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:14:54 EDT 2022" starttimestamp="1648471300703" timestamp="5594188" />
  <Command __id="2193" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:14:54 EDT 2022" starttimestamp="1648471300703" timestamp="5594286" />
  <Command __id="2194" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:14:55 EDT 2022" starttimestamp="1648471300703" timestamp="5594307" />
  <DocumentChange __id="2187" _type="Delete" date="Mon Mar 28 10:14:52 EDT 2022" docASTNodeCount="86" docActiveCodeLength="561" docExpressionCount="55" docLength="595" endLine="12" length="187" offset="211" repeat="2" startLine="8" starttimestamp="1648471300703" timestamp="5592121" timestamp2="5593313">
    <text><![CDATA[
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;]]></text>
  </DocumentChange>
  <Command __id="2196" _type="PauseCommand" date="Mon Mar 28 10:14:56 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="5595741">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1434]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2197" _type="MoveCaretCommand" caretOffset="4563" date="Mon Mar 28 10:14:56 EDT 2022" docOffset="4563" starttimestamp="1648471300703" timestamp="5595860" />
  <Command __id="2199" _type="PauseCommand" date="Mon Mar 28 10:14:59 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5598971">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3111]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2198" _type="MoveCaretCommand" caretOffset="5879" date="Mon Mar 28 10:14:59 EDT 2022" docOffset="5879" starttimestamp="1648471300703" timestamp="5598971" />
  <Command __id="2201" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:15:00 EDT 2022" starttimestamp="1648471300703" timestamp="5599505" />
  <Command __id="2203" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:15:00 EDT 2022" starttimestamp="1648471300703" timestamp="5599662" />
  <Command __id="2205" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:15:00 EDT 2022" starttimestamp="1648471300703" timestamp="5599821" />
  <Command __id="2207" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:15:00 EDT 2022" starttimestamp="1648471300703" timestamp="5599976" />
  <Command __id="2195" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:14:56 EDT 2022" docASTNodeCount="755" docActiveCodeLength="5418" docExpressionCount="550" docLength="5910" projectName="A5" starttimestamp="1648471300703" timestamp="5595741">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶"), Diff(INSERT,"import inputport.rpc.GIPCRegistry;¶"), Diff(EQUAL,"import util.trace.bean.BeanTraceUtility;¶"), Diff(DELETE,""), Diff(EQUAL,"import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	"), Diff(INSERT,"//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	"), Diff(EQUAL,"//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		"), Diff(INSERT,"GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		"), Diff(EQUAL,"		//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		"), Diff(INSERT,"createGIPCRegistry();¶		¶		"), Diff(EQUAL,"¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry("), Diff(DELETE,"final String[] args) {¶		ServerArgsProcessor.getGIPCServerPort(args);"), Diff(INSERT,") {¶		"), Diff(EQUAL,"¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2200" _type="Delete" date="Mon Mar 28 10:15:00 EDT 2022" docASTNodeCount="754" docActiveCodeLength="5414" docExpressionCount="549" docLength="5906" endLine="184" length="4" offset="5875" repeat="4" startLine="184" starttimestamp="1648471300703" timestamp="5599498" timestamp2="5599973">
    <text><![CDATA[this]]></text>
  </DocumentChange>
  <Command __id="2209" _type="PauseCommand" date="Mon Mar 28 10:15:17 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5616979">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[17003]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2220" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 10:15:26 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="5625843" type="Run" />
  <Command __id="2222" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 10:15:26 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="5625843" type="Run" />
  <Command __id="2224" _type="PauseCommand" date="Mon Mar 28 10:15:28 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="5627886">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2043]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2223" _type="ShellCommand" date="Mon Mar 28 10:15:28 EDT 2022" starttimestamp="1648471300703" timestamp="5627886" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2226" _type="PauseCommand" date="Mon Mar 28 10:15:46 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5645458">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17572]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2225" _type="ShellCommand" date="Mon Mar 28 10:15:46 EDT 2022" starttimestamp="1648471300703" timestamp="5645458" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2228" _type="PauseCommand" date="Mon Mar 28 10:15:58 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5658238">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12780]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2227" _type="ShellCommand" date="Mon Mar 28 10:15:58 EDT 2022" starttimestamp="1648471300703" timestamp="5658238" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2230" _type="PauseCommand" date="Mon Mar 28 10:16:35 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="5694859">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[36621]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2229" _type="ConsoleOutput" date="Mon Mar 28 10:16:35 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="5694859" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIStaticArguments did not pass completely:Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client GIPC connection info in traces.%0.625

Test execution time (ms):63653
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@13689fb0 . Results may change."), Diff(INSERT,"GIPCRMIStaticArguments did not pass completely:Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client GIPC connection info in traces.%0.625¶¶Test execution time (ms):63653"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2232" _type="PauseCommand" date="Mon Mar 28 10:17:11 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="5731124">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[36265]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2231" _type="ShellCommand" date="Mon Mar 28 10:17:11 EDT 2022" starttimestamp="1648471300703" timestamp="5731124" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2234" _type="PauseCommand" date="Mon Mar 28 10:17:26 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="5745347">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14223]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2233" _type="ShellCommand" date="Mon Mar 28 10:17:26 EDT 2022" starttimestamp="1648471300703" timestamp="5745347" type="ECLIPSE_MINIMIZED" />
  <Command __id="2235" _type="ShellCommand" date="Mon Mar 28 10:17:26 EDT 2022" starttimestamp="1648471300703" timestamp="5745363" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2237" _type="PauseCommand" date="Mon Mar 28 10:17:34 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="5753444">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8081]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2236" _type="ConsoleOutput" date="Mon Mar 28 10:17:34 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="5753444" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIOneClientConnection did not pass completely:In Client connecting with GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryLocated.*%0.33

Test execution time (ms):58571
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMI"), Diff(DELETE,"StaticArguments"), Diff(INSERT,"OneClientConnection"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"Error i"), Diff(INSERT,"I"), Diff(EQUAL,"n "), Diff(DELETE,"c"), Diff(INSERT,"C"), Diff(EQUAL,"lient "), Diff(DELETE,"(args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client GIPC connection info in traces.%0.625"), Diff(INSERT,"connecting with GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryLocated.*%0.33"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"63653"), Diff(INSERT,"58571"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2239" _type="PauseCommand" date="Mon Mar 28 10:18:32 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="5811994">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[58550]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2238" _type="ConsoleOutput" date="Mon Mar 28 10:18:32 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="5811994" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIOneClientReadWriteNonAtomic did not pass completely:In Client connecting with GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryLocated.*
GIPC is not checked because RMI failed%0.0

Test execution time (ms):58544
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMIOneClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Client connecting with GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryLocated.*"), Diff(INSERT,"¶GIPC is not checked because RMI failed"), Diff(EQUAL,"%0."), Diff(DELETE,"33"), Diff(INSERT,"0"), Diff(EQUAL,"¶¶Test execution time (ms):585"), Diff(DELETE,"71"), Diff(INSERT,"44"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2241" _type="PauseCommand" date="Mon Mar 28 10:21:45 EDT 2022" range="2m-5m" starttimestamp="1648471300703" timestamp="6004401">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[192407]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2240" _type="ShellCommand" date="Mon Mar 28 10:21:45 EDT 2022" starttimestamp="1648471300703" timestamp="6004401" type="ECLIPSE_MAXIMIZED" />
  <Command __id="2242" _type="ShellCommand" date="Mon Mar 28 10:21:45 EDT 2022" starttimestamp="1648471300703" timestamp="6004439" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2244" _type="PauseCommand" date="Mon Mar 28 10:21:48 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6007740">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3301]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2243" _type="ShellCommand" date="Mon Mar 28 10:21:48 EDT 2022" starttimestamp="1648471300703" timestamp="6007740" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2246" _type="PauseCommand" date="Mon Mar 28 10:21:50 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6009959">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2219]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2245" _type="ConsoleOutput" date="Mon Mar 28 10:21:50 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="6009959" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClientConnection@21d36433 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMIOneClientReadWriteNonAtomic did not pass completely:In "), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOne"), Diff(EQUAL,"Client"), Diff(DELETE," c"), Diff(INSERT,"C"), Diff(EQUAL,"onnecti"), Diff(DELETE,"ng with GIPC, no line found matching regex: .*?\{main\}.*?GIPCRegistryLocated.*¶GIPC is not checked because RMI failed%0.0¶¶Test execution time (ms):58544"), Diff(INSERT,"on@21d36433 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2248" _type="PauseCommand" date="Mon Mar 28 10:21:56 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6015809">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5850]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2247" _type="ConsoleOutput" date="Mon Mar 28 10:21:56 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="6015809" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClientReadWriteNonAtomic@609a11d2 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClient"), Diff(DELETE,"Connection@21d36433"), Diff(INSERT,"ReadWriteNonAtomic@609a11d2"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2250" _type="PauseCommand" date="Mon Mar 28 10:22:15 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="6034465">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[18656]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2249" _type="ConsoleOutput" date="Mon Mar 28 10:22:15 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="6034465" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClientReadWriteNonAtomic@609a11d2 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClientReadWriteNonAtomic@609a11d2 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2252" _type="PauseCommand" date="Mon Mar 28 10:22:36 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="6055857">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[21392]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2251" _type="ShellCommand" date="Mon Mar 28 10:22:36 EDT 2022" starttimestamp="1648471300703" timestamp="6055857" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2254" _type="PauseCommand" date="Mon Mar 28 10:23:08 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="6088069">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[32212]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2253" _type="ShellCommand" date="Mon Mar 28 10:23:08 EDT 2022" starttimestamp="1648471300703" timestamp="6088069" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2256" _type="PauseCommand" date="Mon Mar 28 10:23:12 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6092281">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4212]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2255" _type="ConsoleOutput" date="Mon Mar 28 10:23:12 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="6092281" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClientReadWriteNonAtomic@609a11d2 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClientReadWriteNonAtomic@609a11d2 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2258" _type="PauseCommand" date="Mon Mar 28 10:24:08 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="6147974">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[55693]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2257" _type="ShellCommand" date="Mon Mar 28 10:24:08 EDT 2022" starttimestamp="1648471300703" timestamp="6147974" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2259" _type="MoveCaretCommand" caretOffset="5899" date="Mon Mar 28 10:24:08 EDT 2022" docOffset="5899" starttimestamp="1648471300703" timestamp="6148060" />
  <Command __id="2261" _type="InsertStringCommand" date="Mon Mar 28 10:24:09 EDT 2022" starttimestamp="1648471300703" timestamp="6148429" timestamp2="6148429">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2263" _type="InsertStringCommand" date="Mon Mar 28 10:24:09 EDT 2022" starttimestamp="1648471300703" timestamp="6148751" timestamp2="6148751">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2265" _type="PasteCommand" date="Mon Mar 28 10:24:09 EDT 2022" starttimestamp="1648471300703" timestamp="6148994" />
  <Command __id="2267" _type="PauseCommand" date="Mon Mar 28 10:24:16 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6155327">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[6333]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2266" _type="ShellCommand" date="Mon Mar 28 10:24:16 EDT 2022" starttimestamp="1648471300703" timestamp="6155327" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2268" _type="ShellCommand" date="Mon Mar 28 10:24:16 EDT 2022" starttimestamp="1648471300703" timestamp="6155509" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2272" _type="PauseCommand" date="Mon Mar 28 10:24:17 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6156931">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1404]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2271" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:24:17 EDT 2022" starttimestamp="1648471300703" timestamp="6156931" />
  <Command __id="2273" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:24:17 EDT 2022" starttimestamp="1648471300703" timestamp="6157032" />
  <Command __id="2274" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:24:17 EDT 2022" starttimestamp="1648471300703" timestamp="6157057" />
  <Command __id="2276" _type="PauseCommand" date="Mon Mar 28 10:24:19 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6159114">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2057]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2275" _type="ShellCommand" date="Mon Mar 28 10:24:19 EDT 2022" starttimestamp="1648471300703" timestamp="6159114" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2278" _type="PauseCommand" date="Mon Mar 28 10:24:47 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="6187126">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[28012]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2277" _type="ShellCommand" date="Mon Mar 28 10:24:47 EDT 2022" starttimestamp="1648471300703" timestamp="6187126" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2279" _type="MoveCaretCommand" caretOffset="5813" date="Mon Mar 28 10:24:47 EDT 2022" docOffset="5813" starttimestamp="1648471300703" timestamp="6187227" />
  <DocumentChange __id="2208" _type="Insert" date="Mon Mar 28 10:15:17 EDT 2022" docASTNodeCount="755" docActiveCodeLength="5418" docExpressionCount="550" docLength="5910" length="4" offset="5875" repeat="4" starttimestamp="1648471300703" timestamp="5616979" timestamp2="5617283">
    <text><![CDATA[this]]></text>
  </DocumentChange>
  <DocumentChange __id="2260" _type="Insert" date="Mon Mar 28 10:24:09 EDT 2022" docASTNodeCount="755" docActiveCodeLength="5426" docExpressionCount="550" docLength="5918" length="8" offset="5899" repeat="2" starttimestamp="1648471300703" timestamp="6148421" timestamp2="6148745">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2264" _type="Replace" date="Mon Mar 28 10:24:09 EDT 2022" docASTNodeCount="767" docActiveCodeLength="5537" docExpressionCount="560" docLength="6029" endLine="186" insertionLength="113" int_docASTNodeCount="755" int_docActiveCodeLength="5424" int_docExpressionCount="550" int_docLength="5916" length="2" offset="5905" startLine="186" starttimestamp="1648471300703" timestamp="6148988">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2269" _type="Insert" date="Mon Mar 28 10:24:16 EDT 2022" docASTNodeCount="771" docActiveCodeLength="5578" docExpressionCount="563" docLength="6070" length="41" offset="627" repeat="2" starttimestamp="1648471300703" timestamp="6155527" timestamp2="6155528">
    <text><![CDATA[
import port.ATracingConnectionListener;]]></text>
  </DocumentChange>
  <Command __id="2281" _type="PauseCommand" date="Mon Mar 28 10:24:55 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6194437">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7210]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2282" _type="MoveCaretCommand" caretOffset="211" date="Mon Mar 28 10:24:55 EDT 2022" docOffset="211" starttimestamp="1648471300703" timestamp="6194522" />
  <Command __id="2284" _type="PauseCommand" date="Mon Mar 28 10:24:58 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6197623">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3101]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2283" _type="MoveCaretCommand" caretOffset="444" date="Mon Mar 28 10:24:58 EDT 2022" docOffset="444" starttimestamp="1648471300703" timestamp="6197623" />
  <Command __id="2286" _type="InsertStringCommand" date="Mon Mar 28 10:24:58 EDT 2022" starttimestamp="1648471300703" timestamp="6197966" timestamp2="6197966">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2288" _type="InsertStringCommand" date="Mon Mar 28 10:24:59 EDT 2022" starttimestamp="1648471300703" timestamp="6198337" timestamp2="6198337">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2290" _type="InsertStringCommand" date="Mon Mar 28 10:24:59 EDT 2022" starttimestamp="1648471300703" timestamp="6198557" timestamp2="6198557">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2292" _type="InsertStringCommand" date="Mon Mar 28 10:24:59 EDT 2022" starttimestamp="1648471300703" timestamp="6198582" timestamp2="6198582">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2294" _type="InsertStringCommand" date="Mon Mar 28 10:24:59 EDT 2022" starttimestamp="1648471300703" timestamp="6198945" timestamp2="6198945">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2296" _type="InsertStringCommand" date="Mon Mar 28 10:24:59 EDT 2022" starttimestamp="1648471300703" timestamp="6199172" timestamp2="6199172">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2298" _type="InsertStringCommand" date="Mon Mar 28 10:24:59 EDT 2022" starttimestamp="1648471300703" timestamp="6199238" timestamp2="6199238">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2300" _type="InsertStringCommand" date="Mon Mar 28 10:25:00 EDT 2022" starttimestamp="1648471300703" timestamp="6199426" timestamp2="6199426">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2301" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:25:00 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="6199431" />
  <Command __id="2280" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:24:55 EDT 2022" docASTNodeCount="86" docActiveCodeLength="561" docExpressionCount="55" docLength="595" projectName="A5" starttimestamp="1648471300703" timestamp="6194437">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;"), Diff(DELETE,"¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;"), Diff(EQUAL,"¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		"), Diff(DELETE,"//Create GIPC Registry¶		createGIPCRegistry(args);¶		¶		"), Diff(EQUAL,"¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObject;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {
	
	
	public static void main(final String[] args) {
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	


}
]]></snapshot>
  </Command>
  <DocumentChange __id="2285" _type="Insert" date="Mon Mar 28 10:24:58 EDT 2022" docASTNodeCount="90" docActiveCodeLength="573" docExpressionCount="58" docLength="607" length="12" offset="444" repeat="9" starttimestamp="1648471300703" timestamp="6197951" timestamp2="6199824">
    <text><![CDATA[
		server.g]]></text>
  </DocumentChange>
  <Command __id="2304" _type="PauseCommand" date="Mon Mar 28 10:25:01 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6201225">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1794]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="2303" _type="Delete" date="Mon Mar 28 10:25:01 EDT 2022" docASTNodeCount="86" docActiveCodeLength="565" docExpressionCount="55" docLength="599" endLine="18" length="8" offset="448" repeat="8" startLine="18" starttimestamp="1648471300703" timestamp="6201225" timestamp2="6202545">
    <text><![CDATA[server.g]]></text>
  </DocumentChange>
  <Command __id="2313" _type="PauseCommand" date="Mon Mar 28 10:25:05 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6204795">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[3570]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2314" _type="MoveCaretCommand" caretOffset="5813" date="Mon Mar 28 10:25:05 EDT 2022" docOffset="5813" starttimestamp="1648471300703" timestamp="6204937" />
  <Command __id="2316" _type="PauseCommand" date="Mon Mar 28 10:25:08 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6208073">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3136]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2315" _type="MoveCaretCommand" caretOffset="5944" date="Mon Mar 28 10:25:08 EDT 2022" docOffset="5944" starttimestamp="1648471300703" timestamp="6208073" />
  <Command __id="2318" _type="PasteCommand" date="Mon Mar 28 10:25:08 EDT 2022" starttimestamp="1648471300703" timestamp="6208260" />
  <Command __id="2320" _type="PauseCommand" date="Mon Mar 28 10:25:11 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6210985">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2725]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2319" _type="SelectTextCommand" caretOffset="5964" date="Mon Mar 28 10:25:11 EDT 2022" end="5976" start="5964" starttimestamp="1648471300703" timestamp="6210985" />
  <Command __id="2322" _type="PauseCommand" date="Mon Mar 28 10:25:23 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="6222833">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[11848]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2321" _type="SelectTextCommand" caretOffset="1751" date="Mon Mar 28 10:25:23 EDT 2022" end="1762" start="1751" starttimestamp="1648471300703" timestamp="6222833" />
  <Command __id="2323" _type="CopyCommand" date="Mon Mar 28 10:25:23 EDT 2022" starttimestamp="1648471300703" timestamp="6223063" />
  <Command __id="2325" _type="PauseCommand" date="Mon Mar 28 10:25:29 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6228572">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[5509]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2324" _type="SelectTextCommand" caretOffset="5964" date="Mon Mar 28 10:25:29 EDT 2022" end="5976" start="5964" starttimestamp="1648471300703" timestamp="6228572" />
  <Command __id="2327" _type="PasteCommand" date="Mon Mar 28 10:25:29 EDT 2022" starttimestamp="1648471300703" timestamp="6229034" />
  <Command __id="2329" _type="PauseCommand" date="Mon Mar 28 10:25:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6231226">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2191]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2328" _type="SelectTextCommand" caretOffset="5977" date="Mon Mar 28 10:25:31 EDT 2022" end="5984" start="5977" starttimestamp="1648471300703" timestamp="6231225" />
  <Command __id="2335" _type="PauseCommand" date="Mon Mar 28 10:25:34 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6233535">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1905]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2334" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:25:34 EDT 2022" starttimestamp="1648471300703" timestamp="6233535" />
  <Command __id="2336" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:25:34 EDT 2022" starttimestamp="1648471300703" timestamp="6233628" />
  <Command __id="2337" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:25:34 EDT 2022" starttimestamp="1648471300703" timestamp="6233653" />
  <Command __id="2312" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:25:05 EDT 2022" docASTNodeCount="771" docActiveCodeLength="5578" docExpressionCount="563" docLength="6070" projectName="A5" starttimestamp="1648471300703" timestamp="6204795">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶"), Diff(INSERT,"import port.ATracingConnectionListener;¶"), Diff(EQUAL,"import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶	"), Diff(INSERT,"	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	"), Diff(EQUAL,"}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2317" _type="Replace" date="Mon Mar 28 10:25:08 EDT 2022" docASTNodeCount="777" docActiveCodeLength="5622" docExpressionCount="568" docLength="6114" endLine="186" insertionLength="46" int_docASTNodeCount="771" int_docActiveCodeLength="5576" int_docExpressionCount="563" int_docLength="6068" length="2" offset="5942" startLine="186" starttimestamp="1648471300703" timestamp="6208252">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		gipcRegistry.rebind(COUNTER_NAME, counter);	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2326" _type="Replace" date="Mon Mar 28 10:25:29 EDT 2022" docASTNodeCount="777" docActiveCodeLength="5621" docExpressionCount="568" docLength="6113" endLine="186" insertionLength="11" int_docASTNodeCount="776" int_docActiveCodeLength="5610" int_docExpressionCount="567" int_docLength="6102" length="12" offset="5964" startLine="186" starttimestamp="1648471300703" timestamp="6229025">
    <deletedText><![CDATA[COUNTER_NAME]]></deletedText>
    <insertedText><![CDATA[SERVER_NAME]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2330" _type="Replace" date="Mon Mar 28 10:25:32 EDT 2022" docASTNodeCount="777" docActiveCodeLength="5615" docExpressionCount="568" docLength="6107" endLine="186" insertionLength="1" int_docASTNodeCount="777" int_docActiveCodeLength="5614" int_docExpressionCount="568" int_docLength="6106" length="7" offset="5977" startLine="186" starttimestamp="1648471300703" timestamp="6231438">
    <deletedText><![CDATA[counter]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2331" _type="Insert" date="Mon Mar 28 10:25:32 EDT 2022" docASTNodeCount="777" docActiveCodeLength="5618" docExpressionCount="568" docLength="6110" length="3" offset="5978" repeat="3" starttimestamp="1648471300703" timestamp="6231630" timestamp2="6232293">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <Command __id="2339" _type="PauseCommand" date="Mon Mar 28 10:25:43 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6242662">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9009]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2340" _type="MoveCaretCommand" caretOffset="448" date="Mon Mar 28 10:25:43 EDT 2022" docOffset="448" starttimestamp="1648471300703" timestamp="6242746" />
  <Command __id="2342" _type="PauseCommand" date="Mon Mar 28 10:25:45 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6244304">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1558]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2341" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:25:45 EDT 2022" starttimestamp="1648471300703" timestamp="6244304" />
  <Command __id="2343" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:25:45 EDT 2022" starttimestamp="1648471300703" timestamp="6244401" />
  <Command __id="2344" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:25:45 EDT 2022" starttimestamp="1648471300703" timestamp="6244426" />
  <Command __id="2338" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:25:43 EDT 2022" docASTNodeCount="86" docActiveCodeLength="565" docExpressionCount="55" docLength="599" projectName="A5" starttimestamp="1648471300703" timestamp="6242662">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶"), Diff(INSERT,"		¶"), Diff(EQUAL,"		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObject;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {
	
	
	public static void main(final String[] args) {
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();

		
		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	


}
]]></snapshot>
  </Command>
  <Command __id="2346" _type="PauseCommand" date="Mon Mar 28 10:25:47 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6246962">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2536]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2347" _type="MoveCaretCommand" caretOffset="4741" date="Mon Mar 28 10:25:47 EDT 2022" docOffset="4741" starttimestamp="1648471300703" timestamp="6247042" />
  <Command __id="2349" _type="PauseCommand" date="Mon Mar 28 10:26:11 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="6270614">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23572]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2348" _type="ShellCommand" date="Mon Mar 28 10:26:11 EDT 2022" starttimestamp="1648471300703" timestamp="6270614" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2351" _type="PauseCommand" date="Mon Mar 28 10:29:12 EDT 2022" range="2m-5m" starttimestamp="1648471300703" timestamp="6451684">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[181070]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2350" _type="ShellCommand" date="Mon Mar 28 10:29:12 EDT 2022" starttimestamp="1648471300703" timestamp="6451684" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2345" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:25:47 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6004" docExpressionCount="576" docLength="6585" projectName="A5" starttimestamp="1648471300703" timestamp="6246962">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterface"), Diff(DELETE,"GIPC"), Diff(INSERT,"RMI"), Diff(EQUAL," server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate "), Diff(INSERT,"RMI "), Diff(EQUAL,"Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			"), Diff(DELETE,"// TODO Auto-generated catch block¶			"), Diff(EQUAL,"e3.printStackTrace();¶		}¶		// Get "), Diff(INSERT,"RMI "), Diff(EQUAL,"server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);

		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="2353" _type="PauseCommand" date="Mon Mar 28 10:29:16 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6455656">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3972]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2354" _type="MoveCaretCommand" caretOffset="5981" date="Mon Mar 28 10:29:16 EDT 2022" docOffset="5981" starttimestamp="1648471300703" timestamp="6455744" />
  <Command __id="2352" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:29:16 EDT 2022" docASTNodeCount="777" docActiveCodeLength="5618" docExpressionCount="568" docLength="6110" projectName="A5" starttimestamp="1648471300703" timestamp="6455656">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		"), Diff(INSERT,"gipcRegistry.rebind(SERVER_NAME, this);	"), Diff(EQUAL,"¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		gipcRegistry.rebind(SERVER_NAME, this);	
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <Command __id="2356" _type="PauseCommand" date="Mon Mar 28 10:29:23 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6462584">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6840]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2357" _type="MoveCaretCommand" caretOffset="448" date="Mon Mar 28 10:29:23 EDT 2022" docOffset="448" starttimestamp="1648471300703" timestamp="6462667" />
  <Command __id="2355" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:29:23 EDT 2022" docASTNodeCount="86" docActiveCodeLength="565" docExpressionCount="55" docLength="599" projectName="A5" starttimestamp="1648471300703" timestamp="6462584">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2359" _type="PauseCommand" date="Mon Mar 28 10:29:28 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6467888">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5221]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2360" _type="MoveCaretCommand" caretOffset="5981" date="Mon Mar 28 10:29:28 EDT 2022" docOffset="5981" starttimestamp="1648471300703" timestamp="6467972" />
  <Command __id="2358" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:29:28 EDT 2022" docASTNodeCount="777" docActiveCodeLength="5618" docExpressionCount="568" docLength="6110" projectName="A5" starttimestamp="1648471300703" timestamp="6467888">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2362" _type="PauseCommand" date="Mon Mar 28 10:29:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6471116">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3144]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2363" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Mar 28 10:29:31 EDT 2022" starttimestamp="1648471300703" timestamp="6471122" />
  <DocumentChange __id="2361" _type="Delete" date="Mon Mar 28 10:29:31 EDT 2022" docASTNodeCount="771" docActiveCodeLength="5574" docExpressionCount="563" docLength="6066" endLine="187" length="44" offset="5942" startLine="186" starttimestamp="1648471300703" timestamp="6471116">
    <text><![CDATA[		gipcRegistry.rebind(SERVER_NAME, this);	
]]></text>
  </DocumentChange>
  <Command __id="2365" _type="PauseCommand" date="Mon Mar 28 10:29:32 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6472152">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1030]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2366" _type="UndoCommand" date="Mon Mar 28 10:29:32 EDT 2022" starttimestamp="1648471300703" timestamp="6472158" />
  <Command __id="2368" _type="ShellCommand" date="Mon Mar 28 10:29:33 EDT 2022" starttimestamp="1648471300703" timestamp="6472865" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2370" _type="PauseCommand" date="Mon Mar 28 10:29:35 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6475244">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2379]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2369" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:29:35 EDT 2022" forward="false" matchWord="false" offset="5942" regexp="false" replaceAll="false" selection="Find" selectionScope="true" starttimestamp="1648471300703" timestamp="6475244" wrapSearch="false">
    <searchString><![CDATA[start]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2372" _type="PauseCommand" date="Mon Mar 28 10:29:38 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6477917">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2673]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2371" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:29:38 EDT 2022" forward="true" matchWord="false" offset="5942" regexp="false" replaceAll="false" selection="Find" selectionScope="true" starttimestamp="1648471300703" timestamp="6477917" wrapSearch="false">
    <searchString><![CDATA[start]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2374" _type="PauseCommand" date="Mon Mar 28 10:29:39 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6479102">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1185]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2373" _type="ShellCommand" date="Mon Mar 28 10:29:39 EDT 2022" starttimestamp="1648471300703" timestamp="6479102" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2376" _type="PauseCommand" date="Mon Mar 28 10:29:56 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="6495596">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16494]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2375" _type="ShellCommand" date="Mon Mar 28 10:29:56 EDT 2022" starttimestamp="1648471300703" timestamp="6495596" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2378" _type="PauseCommand" date="Mon Mar 28 10:31:05 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="6565153">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[69557]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2377" _type="ShellCommand" date="Mon Mar 28 10:31:05 EDT 2022" starttimestamp="1648471300703" timestamp="6565153" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2364" _type="Insert" date="Mon Mar 28 10:29:32 EDT 2022" docASTNodeCount="777" docActiveCodeLength="5618" docExpressionCount="568" docLength="6110" length="44" offset="5942" starttimestamp="1648471300703" timestamp="6472152">
    <text><![CDATA[		gipcRegistry.rebind(SERVER_NAME, this);	
]]></text>
  </DocumentChange>
  <Command __id="2380" _type="PauseCommand" date="Mon Mar 28 10:31:24 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="6583338">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[18185]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2381" _type="MoveCaretCommand" caretOffset="448" date="Mon Mar 28 10:31:24 EDT 2022" docOffset="448" starttimestamp="1648471300703" timestamp="6583423" />
  <Command __id="2383" _type="PauseCommand" date="Mon Mar 28 10:31:47 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="6606458">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23035]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="2382" _type="CopyCommand" date="Mon Mar 28 10:31:47 EDT 2022" starttimestamp="1648471300703" timestamp="6606458" />
  <Command __id="2385" _type="PauseCommand" date="Mon Mar 28 10:31:48 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6608295">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1837]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2384" _type="ShellCommand" date="Mon Mar 28 10:31:48 EDT 2022" starttimestamp="1648471300703" timestamp="6608295" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2387" _type="PauseCommand" date="Mon Mar 28 10:31:52 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6611997">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3702]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2386" _type="ShellCommand" date="Mon Mar 28 10:31:52 EDT 2022" starttimestamp="1648471300703" timestamp="6611997" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2388" _type="PasteCommand" date="Mon Mar 28 10:31:52 EDT 2022" starttimestamp="1648471300703" timestamp="6612150" />
  <Command __id="2389" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:31:52 EDT 2022" starttimestamp="1648471300703" timestamp="6612251" />
  <Command __id="2390" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:31:52 EDT 2022" starttimestamp="1648471300703" timestamp="6612273" />
  <Command __id="2379" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:31:24 EDT 2022" docASTNodeCount="86" docActiveCodeLength="565" docExpressionCount="55" docLength="599" projectName="A5" starttimestamp="1648471300703" timestamp="6583338">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2392" _type="PauseCommand" date="Mon Mar 28 10:31:55 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6614494">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2221]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2393" _type="MoveCaretCommand" caretOffset="5942" date="Mon Mar 28 10:31:55 EDT 2022" docOffset="5942" starttimestamp="1648471300703" timestamp="6614623" />
  <Command __id="2395" _type="PauseCommand" date="Mon Mar 28 10:31:58 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6617342">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2719]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2394" _type="SelectTextCommand" caretOffset="5774" date="Mon Mar 28 10:31:58 EDT 2022" end="6103" start="5774" starttimestamp="1648471300703" timestamp="6617342" />
  <Command __id="2391" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:31:55 EDT 2022" docASTNodeCount="777" docActiveCodeLength="5618" docExpressionCount="568" docLength="6110" projectName="A5" starttimestamp="1648471300703" timestamp="6614494">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2397" _type="PauseCommand" date="Mon Mar 28 10:31:59 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6618754">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1412]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2398" _type="MoveCaretCommand" caretOffset="448" date="Mon Mar 28 10:31:59 EDT 2022" docOffset="448" starttimestamp="1648471300703" timestamp="6618907" />
  <Command __id="2400" _type="PauseCommand" date="Mon Mar 28 10:32:04 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6624143">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5236]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2401" _type="ShellCommand" date="Mon Mar 28 10:32:07 EDT 2022" starttimestamp="1648471300703" timestamp="6626845" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2403" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:32:07 EDT 2022" starttimestamp="1648471300703" timestamp="6626868" />
  <Command __id="2404" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:32:07 EDT 2022" starttimestamp="1648471300703" timestamp="6626918" />
  <Command __id="2396" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:31:59 EDT 2022" docASTNodeCount="86" docActiveCodeLength="565" docExpressionCount="55" docLength="599" projectName="A5" starttimestamp="1648471300703" timestamp="6618754">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2406" _type="PauseCommand" date="Mon Mar 28 10:32:13 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6632985">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6067]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2407" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 10:32:13 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="6633165" />
  <Command __id="2409" _type="PauseCommand" date="Mon Mar 28 10:32:21 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6641127">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7962]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2408" _type="SelectTextCommand" caretOffset="196" date="Mon Mar 28 10:32:21 EDT 2022" end="273" start="196" starttimestamp="1648471300703" timestamp="6641127" />
  <Command __id="2405" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:32:13 EDT 2022" docASTNodeCount="777" docActiveCodeLength="5626" docExpressionCount="568" docLength="6118" projectName="A5" starttimestamp="1648471300703" timestamp="6632985">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectGIPC extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		gipcRegistry.rebind(SERVER_NAME, this);	
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2410" _type="Replace" date="Mon Mar 28 10:32:22 EDT 2022" docASTNodeCount="775" docActiveCodeLength="5550" docExpressionCount="567" docLength="6042" endLine="34" insertionLength="1" int_docASTNodeCount="773" int_docActiveCodeLength="5549" int_docExpressionCount="566" int_docLength="6041" length="77" offset="1475" startLine="34" starttimestamp="1648471300703" timestamp="6641951">
    <deletedText><![CDATA[AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI]]></deletedText>
    <insertedText><![CDATA[S]]></insertedText>
  </DocumentChange>
  <Command __id="2412" _type="PauseCommand" date="Mon Mar 28 10:32:24 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6644205">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Replace]]></prev>
    <pause><![CDATA[2254]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2433" _type="PauseCommand" date="Mon Mar 28 10:32:29 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6649149">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[4944]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2432" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:32:29 EDT 2022" starttimestamp="1648471300703" timestamp="6649149" />
  <Command __id="2434" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:32:29 EDT 2022" starttimestamp="1648471300703" timestamp="6649244" />
  <Command __id="2435" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:32:29 EDT 2022" starttimestamp="1648471300703" timestamp="6649270" />
  <Command __id="2437" _type="PauseCommand" date="Mon Mar 28 10:32:35 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6654322">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5052]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2436" _type="SelectTextCommand" caretOffset="488" date="Mon Mar 28 10:32:35 EDT 2022" end="547" start="488" starttimestamp="1648471300703" timestamp="6654322" />
  <Command __id="2440" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 10:32:35 EDT 2022" starttimestamp="1648471300703" timestamp="6655243" />
  <Command __id="2442" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 10:32:36 EDT 2022" starttimestamp="1648471300703" timestamp="6655577" />
  <Command __id="2443" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:32:36 EDT 2022" starttimestamp="1648471300703" timestamp="6656111" />
  <Command __id="2444" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:32:36 EDT 2022" starttimestamp="1648471300703" timestamp="6656213" />
  <Command __id="2445" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:32:36 EDT 2022" starttimestamp="1648471300703" timestamp="6656250" />
  <DocumentChange __id="2411" _type="Insert" date="Mon Mar 28 10:32:24 EDT 2022" docASTNodeCount="775" docActiveCodeLength="5570" docExpressionCount="567" docLength="6062" length="20" offset="1476" repeat="20" starttimestamp="1648471300703" timestamp="6644205" timestamp2="6647811">
    <text><![CDATA[erverRemoteObjectRMI]]></text>
  </DocumentChange>
  <DocumentChange __id="2438" _type="Delete" date="Mon Mar 28 10:32:35 EDT 2022" docASTNodeCount="771" docActiveCodeLength="5509" docExpressionCount="564" docLength="6001" endLine="15" length="61" offset="488" repeat="3" startLine="15" starttimestamp="1648471300703" timestamp="6654890" timestamp2="6655562">
    <text><![CDATA[import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;]]></text>
  </DocumentChange>
  <Command __id="2447" _type="PauseCommand" date="Mon Mar 28 10:32:52 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="6671758">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[15508]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2448" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 10:32:52 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="6671945" />
  <Command __id="2446" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:32:52 EDT 2022" docASTNodeCount="115" docActiveCodeLength="846" docExpressionCount="68" docLength="846" projectName="A5" starttimestamp="1648471300703" timestamp="6671758">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceRMI  extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="2450" _type="PauseCommand" date="Mon Mar 28 10:33:05 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="6684398">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12453]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2451" _type="MoveCaretCommand" caretOffset="454" date="Mon Mar 28 10:33:05 EDT 2022" docOffset="454" starttimestamp="1648471300703" timestamp="6684573" />
  <Command __id="2453" _type="PauseCommand" date="Mon Mar 28 10:33:07 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6687260">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2687]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2452" _type="SelectTextCommand" caretOffset="442" date="Mon Mar 28 10:33:07 EDT 2022" end="445" start="442" starttimestamp="1648471300703" timestamp="6687260" />
  <Command __id="2454" _type="SelectTextCommand" caretOffset="442" date="Mon Mar 28 10:33:07 EDT 2022" end="445" start="442" starttimestamp="1648471300703" timestamp="6687260" />
  <Command __id="2460" _type="PauseCommand" date="Mon Mar 28 10:33:10 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6689716">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1770]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2459" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:33:10 EDT 2022" starttimestamp="1648471300703" timestamp="6689716" />
  <Command __id="2461" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:33:10 EDT 2022" starttimestamp="1648471300703" timestamp="6689810" />
  <Command __id="2462" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:33:10 EDT 2022" starttimestamp="1648471300703" timestamp="6689829" />
  <Command __id="2464" _type="PauseCommand" date="Mon Mar 28 10:33:13 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6693000">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3171]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2463" _type="ShellCommand" date="Mon Mar 28 10:33:13 EDT 2022" starttimestamp="1648471300703" timestamp="6693000" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2465" _type="ShellCommand" date="Mon Mar 28 10:33:13 EDT 2022" starttimestamp="1648471300703" timestamp="6693141" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2468" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:33:14 EDT 2022" starttimestamp="1648471300703" timestamp="6693856" />
  <Command __id="2469" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:33:14 EDT 2022" starttimestamp="1648471300703" timestamp="6693947" />
  <Command __id="2470" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:33:14 EDT 2022" starttimestamp="1648471300703" timestamp="6693980" />
  <Command __id="2472" _type="PauseCommand" date="Mon Mar 28 10:33:16 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6695449">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1469]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2449" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:33:05 EDT 2022" docASTNodeCount="86" docActiveCodeLength="571" docExpressionCount="55" docLength="605" projectName="A5" starttimestamp="1648471300703" timestamp="6684398">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObject"), Diff(INSERT,"RMI"), Diff(EQUAL,";¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObject"), Diff(INSERT,"RMI"), Diff(EQUAL,"();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectRMI;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {
	
	
	public static void main(final String[] args) {
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();

		
		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	


}
]]></snapshot>
  </Command>
  <DocumentChange __id="2455" _type="Replace" date="Mon Mar 28 10:33:08 EDT 2022" docASTNodeCount="86" docActiveCodeLength="569" docExpressionCount="55" docLength="603" endLine="16" insertionLength="1" int_docASTNodeCount="86" int_docActiveCodeLength="568" int_docExpressionCount="55" int_docLength="602" length="3" offset="442" startLine="16" starttimestamp="1648471300703" timestamp="6687889">
    <deletedText><![CDATA[RMI]]></deletedText>
    <insertedText><![CDATA[G]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2456" _type="Insert" date="Mon Mar 28 10:33:08 EDT 2022" docASTNodeCount="86" docActiveCodeLength="572" docExpressionCount="55" docLength="606" length="3" offset="443" repeat="3" starttimestamp="1648471300703" timestamp="6687946" timestamp2="6688319">
    <text><![CDATA[IPC]]></text>
  </DocumentChange>
  <DocumentChange __id="2466" _type="Insert" date="Mon Mar 28 10:33:13 EDT 2022" docASTNodeCount="92" docActiveCodeLength="618" docExpressionCount="60" docLength="652" length="46" offset="101" repeat="2" starttimestamp="1648471300703" timestamp="6693156" timestamp2="6693156">
    <text><![CDATA[
import server.remote.ServerRemoteObjectGIPC;]]></text>
  </DocumentChange>
  <Command __id="2471" _type="MoveCaretCommand" caretOffset="422" date="Mon Mar 28 10:33:16 EDT 2022" docOffset="422" starttimestamp="1648471300703" timestamp="6695449" />
  <Command __id="2473" _type="MoveCaretCommand" caretOffset="422" date="Mon Mar 28 10:33:16 EDT 2022" docOffset="422" starttimestamp="1648471300703" timestamp="6695449" />
  <DocumentChange __id="2474" _type="Insert" date="Mon Mar 28 10:33:16 EDT 2022" docASTNodeCount="92" docActiveCodeLength="623" docExpressionCount="60" docLength="657" length="5" offset="422" repeat="2" starttimestamp="1648471300703" timestamp="6695727" timestamp2="6696938">
    <text><![CDATA[
		%]]></text>
  </DocumentChange>
  <DocumentChange __id="2476" _type="Delete" date="Mon Mar 28 10:33:18 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="656" endLine="17" length="1" offset="426" startLine="17" starttimestamp="1648471300703" timestamp="6697479">
    <text><![CDATA[%]]></text>
  </DocumentChange>
  <Command __id="2477" _type="PauseCommand" date="Mon Mar 28 10:33:18 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6697479">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1752]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2484" _type="PauseCommand" date="Mon Mar 28 10:33:20 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6700258">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2250]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2521" _type="PauseCommand" date="Mon Mar 28 10:33:26 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6705532">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[5070]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2535" _type="PauseCommand" date="Mon Mar 28 10:33:28 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6707400">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1757]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2573" _type="PauseCommand" date="Mon Mar 28 10:34:12 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="6751537">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[44063]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2572" _type="MoveCaretCommand" caretOffset="545" date="Mon Mar 28 10:34:12 EDT 2022" docOffset="545" starttimestamp="1648471300703" timestamp="6751537" />
  <Command __id="2574" _type="MoveCaretCommand" caretOffset="545" date="Mon Mar 28 10:34:12 EDT 2022" docOffset="545" starttimestamp="1648471300703" timestamp="6751537" />
  <Command __id="2576" _type="PauseCommand" date="Mon Mar 28 10:34:14 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6753732">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2195]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2575" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:34:14 EDT 2022" starttimestamp="1648471300703" timestamp="6753732" />
  <Command __id="2577" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:34:14 EDT 2022" starttimestamp="1648471300703" timestamp="6753830" />
  <Command __id="2578" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:34:14 EDT 2022" starttimestamp="1648471300703" timestamp="6753856" />
  <DocumentChange __id="2478" _type="Insert" date="Mon Mar 28 10:33:18 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="661" length="5" offset="426" repeat="5" starttimestamp="1648471300703" timestamp="6698008" timestamp2="6699711">
    <text><![CDATA[//GIC]]></text>
  </DocumentChange>
  <DocumentChange __id="2483" _type="Delete" date="Mon Mar 28 10:33:20 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="660" endLine="17" length="1" offset="430" startLine="17" starttimestamp="1648471300703" timestamp="6700258">
    <text><![CDATA[C]]></text>
  </DocumentChange>
  <DocumentChange __id="2485" _type="Insert" date="Mon Mar 28 10:33:21 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="695" length="35" offset="430" repeat="35" starttimestamp="1648471300703" timestamp="6700462" timestamp2="6705275">
    <text><![CDATA[PC Server is a subclass of RMI sere]]></text>
  </DocumentChange>
  <DocumentChange __id="2520" _type="Delete" date="Mon Mar 28 10:33:26 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="694" endLine="17" length="1" offset="464" startLine="17" starttimestamp="1648471300703" timestamp="6705532">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="2522" _type="Insert" date="Mon Mar 28 10:33:26 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="706" length="12" offset="464" repeat="12" starttimestamp="1648471300703" timestamp="6705643" timestamp2="6707030">
    <text><![CDATA[ver, so we a]]></text>
  </DocumentChange>
  <DocumentChange __id="2534" _type="Delete" date="Mon Mar 28 10:33:28 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="705" endLine="17" length="1" offset="475" startLine="17" starttimestamp="1648471300703" timestamp="6707400">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="2536" _type="Insert" date="Mon Mar 28 10:33:28 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="741" length="36" offset="475" repeat="36" starttimestamp="1648471300703" timestamp="6707474" timestamp2="6714122">
    <text><![CDATA[can just call super.method() on gipc]]></text>
  </DocumentChange>
  <Command __id="2580" _type="PauseCommand" date="Mon Mar 28 10:34:21 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6761073">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7217]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2581" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 10:34:21 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="6761173" />
  <Command __id="2579" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:34:21 EDT 2022" docASTNodeCount="115" docActiveCodeLength="846" docExpressionCount="68" docLength="846" projectName="A5" starttimestamp="1648471300703" timestamp="6761073">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2583" _type="PauseCommand" date="Mon Mar 28 10:34:24 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6763339">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2166]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2584" _type="MoveCaretCommand" caretOffset="488" date="Mon Mar 28 10:34:24 EDT 2022" docOffset="488" starttimestamp="1648471300703" timestamp="6763429" />
  <Command __id="2587" _type="PauseCommand" date="Mon Mar 28 10:34:53 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="6792799">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[29370]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2586" _type="ShellCommand" date="Mon Mar 28 10:34:53 EDT 2022" starttimestamp="1648471300703" timestamp="6792799" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2589" _type="PauseCommand" date="Mon Mar 28 10:34:55 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6794480">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1681]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2588" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:34:55 EDT 2022" forward="true" matchWord="false" offset="488" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="6794480" wrapSearch="false">
    <searchString><![CDATA[register]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2591" _type="PauseCommand" date="Mon Mar 28 10:34:57 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6797217">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2737]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2590" _type="ShellCommand" date="Mon Mar 28 10:34:57 EDT 2022" starttimestamp="1648471300703" timestamp="6797217" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2593" _type="PauseCommand" date="Mon Mar 28 10:34:59 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6799219">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2002]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2592" _type="MoveCaretCommand" caretOffset="1480" date="Mon Mar 28 10:34:59 EDT 2022" docOffset="1480" starttimestamp="1648471300703" timestamp="6799219" />
  <Command __id="2598" _type="PauseCommand" date="Mon Mar 28 10:35:04 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6803651">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[3885]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2597" _type="MoveCaretCommand" caretOffset="1524" date="Mon Mar 28 10:35:04 EDT 2022" docOffset="1524" starttimestamp="1648471300703" timestamp="6803651" />
  <Command __id="2600" _type="PauseCommand" date="Mon Mar 28 10:35:07 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6807252">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3601]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2599" _type="SelectTextCommand" caretOffset="1439" date="Mon Mar 28 10:35:07 EDT 2022" end="1528" start="1439" starttimestamp="1648471300703" timestamp="6807252" />
  <Command __id="2602" _type="PauseCommand" date="Mon Mar 28 10:35:09 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6809091">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1839]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="2601" _type="CopyCommand" date="Mon Mar 28 10:35:09 EDT 2022" starttimestamp="1648471300703" timestamp="6809091" />
  <Command __id="2603" _type="MoveCaretCommand" caretOffset="1528" date="Mon Mar 28 10:35:10 EDT 2022" docOffset="1528" starttimestamp="1648471300703" timestamp="6809905" />
  <Command __id="2607" _type="PasteCommand" date="Mon Mar 28 10:35:11 EDT 2022" starttimestamp="1648471300703" timestamp="6810633" />
  <Command __id="2609" _type="PauseCommand" date="Mon Mar 28 10:35:12 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6812174">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1541]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2608" _type="MoveCaretCommand" caretOffset="1563" date="Mon Mar 28 10:35:12 EDT 2022" docOffset="1563" starttimestamp="1648471300703" timestamp="6812174" />
  <Command __id="2620" _type="PauseCommand" date="Mon Mar 28 10:35:17 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6816637">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2286]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2619" _type="SelectTextCommand" caretOffset="1576" date="Mon Mar 28 10:35:17 EDT 2022" end="1579" start="1576" starttimestamp="1648471300703" timestamp="6816637" />
  <Command __id="2634" _type="PauseCommand" date="Mon Mar 28 10:35:21 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6820975">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2584]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2633" _type="MoveCaretCommand" caretOffset="1620" date="Mon Mar 28 10:35:21 EDT 2022" docOffset="1620" starttimestamp="1648471300703" timestamp="6820975" />
  <Command __id="2645" _type="PauseCommand" date="Mon Mar 28 10:35:24 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6824108">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1177]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2644" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:35:24 EDT 2022" starttimestamp="1648471300703" timestamp="6824108" />
  <Command __id="2646" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:35:24 EDT 2022" starttimestamp="1648471300703" timestamp="6824215" />
  <Command __id="2647" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:35:24 EDT 2022" starttimestamp="1648471300703" timestamp="6824264" />
  <Command __id="2649" _type="PauseCommand" date="Mon Mar 28 10:35:29 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6829132">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4868]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2648" _type="ShellCommand" date="Mon Mar 28 10:35:29 EDT 2022" starttimestamp="1648471300703" timestamp="6829132" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2650" _type="ShellCommand" date="Mon Mar 28 10:35:29 EDT 2022" starttimestamp="1648471300703" timestamp="6829203" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2654" _type="PauseCommand" date="Mon Mar 28 10:35:31 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6830482">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1264]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2653" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:35:31 EDT 2022" starttimestamp="1648471300703" timestamp="6830482" />
  <Command __id="2655" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:35:31 EDT 2022" starttimestamp="1648471300703" timestamp="6830573" />
  <Command __id="2656" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:35:31 EDT 2022" starttimestamp="1648471300703" timestamp="6830624" />
  <Command __id="2658" _type="PauseCommand" date="Mon Mar 28 10:35:41 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6840463">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9839]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2657" _type="MoveCaretCommand" caretOffset="2979" date="Mon Mar 28 10:35:41 EDT 2022" docOffset="2979" starttimestamp="1648471300703" timestamp="6840463" />
  <Command __id="2663" _type="PauseCommand" date="Mon Mar 28 10:35:43 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6842484">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1198]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2662" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:35:43 EDT 2022" starttimestamp="1648471300703" timestamp="6842484" />
  <Command __id="2664" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:35:43 EDT 2022" starttimestamp="1648471300703" timestamp="6842590" />
  <Command __id="2665" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:35:43 EDT 2022" starttimestamp="1648471300703" timestamp="6842615" />
  <Command __id="2667" _type="PauseCommand" date="Mon Mar 28 10:35:46 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6845627">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3012]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2666" _type="SelectTextCommand" caretOffset="2969" date="Mon Mar 28 10:35:46 EDT 2022" end="2996" start="2969" starttimestamp="1648471300703" timestamp="6845627" />
  <Command __id="2668" _type="CopyCommand" date="Mon Mar 28 10:35:46 EDT 2022" starttimestamp="1648471300703" timestamp="6845932" />
  <Command __id="2670" _type="PauseCommand" date="Mon Mar 28 10:35:47 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6847007">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1075]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2669" _type="MoveCaretCommand" caretOffset="2996" date="Mon Mar 28 10:35:47 EDT 2022" docOffset="2996" starttimestamp="1648471300703" timestamp="6847007" />
  <Command __id="2674" _type="PasteCommand" date="Mon Mar 28 10:35:48 EDT 2022" starttimestamp="1648471300703" timestamp="6847757" />
  <Command __id="2676" _type="PauseCommand" date="Mon Mar 28 10:35:49 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6849048">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1291]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2675" _type="MoveCaretCommand" caretOffset="3017" date="Mon Mar 28 10:35:49 EDT 2022" docOffset="3017" starttimestamp="1648471300703" timestamp="6849048" />
  <Command __id="2582" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:34:24 EDT 2022" docASTNodeCount="771" docActiveCodeLength="5509" docExpressionCount="564" docLength="6001" projectName="A5" starttimestamp="1648471300703" timestamp="6763339">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶"), Diff(DELETE,"import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;"), Diff(EQUAL,"¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends "), Diff(DELETE,"AStandAloneTwoCoupledHalloweenSimulations implements "), Diff(EQUAL,"ServerRemote"), Diff(DELETE,"Interface"), Diff(INSERT,"Object"), Diff(EQUAL,"RMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		gipcRegistry.rebind(SERVER_NAME, this);	
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2594" _type="Insert" date="Mon Mar 28 10:35:00 EDT 2022" docASTNodeCount="771" docActiveCodeLength="5512" docExpressionCount="564" docLength="6004" length="3" offset="1480" repeat="3" starttimestamp="1648471300703" timestamp="6799766" timestamp2="6800036">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="2604" _type="Insert" date="Mon Mar 28 10:35:10 EDT 2022" docASTNodeCount="771" docActiveCodeLength="5518" docExpressionCount="564" docLength="6010" length="6" offset="1528" repeat="2" starttimestamp="1648471300703" timestamp="6810233" timestamp2="6810373">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2606" _type="Replace" date="Mon Mar 28 10:35:11 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5607" docExpressionCount="570" docLength="6099" endLine="37" insertionLength="90" int_docASTNodeCount="771" int_docActiveCodeLength="5517" int_docExpressionCount="564" int_docLength="6009" length="1" offset="1533" startLine="37" starttimestamp="1648471300703" timestamp="6810628">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2610" _type="Delete" date="Mon Mar 28 10:35:13 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5604" docExpressionCount="570" docLength="6096" endLine="37" length="3" offset="1560" repeat="3" startLine="37" starttimestamp="1648471300703" timestamp="6813062" timestamp2="6813333">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="2613" _type="Insert" date="Mon Mar 28 10:35:14 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5606" docExpressionCount="570" docLength="6098" length="2" offset="1560" repeat="2" starttimestamp="1648471300703" timestamp="6813537" timestamp2="6813778">
    <text><![CDATA[GP]]></text>
  </DocumentChange>
  <DocumentChange __id="2615" _type="Delete" date="Mon Mar 28 10:35:14 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5605" docExpressionCount="570" docLength="6097" endLine="37" length="1" offset="1561" startLine="37" starttimestamp="1648471300703" timestamp="6814180">
    <text><![CDATA[P]]></text>
  </DocumentChange>
  <DocumentChange __id="2616" _type="Insert" date="Mon Mar 28 10:35:15 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5608" docExpressionCount="570" docLength="6100" length="3" offset="1561" repeat="3" starttimestamp="1648471300703" timestamp="6814351" timestamp2="6814593">
    <text><![CDATA[IPC]]></text>
  </DocumentChange>
  <DocumentChange __id="2621" _type="Replace" date="Mon Mar 28 10:35:17 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5606" docExpressionCount="570" docLength="6098" endLine="37" insertionLength="1" int_docASTNodeCount="785" int_docActiveCodeLength="5605" int_docExpressionCount="570" int_docLength="6097" length="3" offset="1576" startLine="37" starttimestamp="1648471300703" timestamp="6816946">
    <deletedText><![CDATA[RMI]]></deletedText>
    <insertedText><![CDATA[C]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2622" _type="Insert" date="Mon Mar 28 10:35:17 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5609" docExpressionCount="570" docLength="6101" length="3" offset="1577" repeat="3" starttimestamp="1648471300703" timestamp="6817039" timestamp2="6817267">
    <text><![CDATA[IPC]]></text>
  </DocumentChange>
  <DocumentChange __id="2625" _type="Delete" date="Mon Mar 28 10:35:18 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5605" docExpressionCount="570" docLength="6097" endLine="37" length="4" offset="1576" repeat="4" startLine="37" starttimestamp="1648471300703" timestamp="6817831" timestamp2="6818290">
    <text><![CDATA[CIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="2629" _type="Insert" date="Mon Mar 28 10:35:19 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5609" docExpressionCount="570" docLength="6101" length="4" offset="1576" repeat="4" starttimestamp="1648471300703" timestamp="6818391" timestamp2="6819026">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="2635" _type="Delete" date="Mon Mar 28 10:35:22 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5606" docExpressionCount="570" docLength="6098" endLine="37" length="3" offset="1618" repeat="3" startLine="37" starttimestamp="1648471300703" timestamp="6821677" timestamp2="6821990">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="2638" _type="Insert" date="Mon Mar 28 10:35:23 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5607" docExpressionCount="570" docLength="6099" length="1" offset="1618" starttimestamp="1648471300703" timestamp="6822522">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <DocumentChange __id="2639" _type="Delete" date="Mon Mar 28 10:35:23 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5606" docExpressionCount="570" docLength="6098" endLine="37" length="1" offset="1618" startLine="37" starttimestamp="1648471300703" timestamp="6822817">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <DocumentChange __id="2640" _type="Insert" date="Mon Mar 28 10:35:23 EDT 2022" docASTNodeCount="785" docActiveCodeLength="5610" docExpressionCount="570" docLength="6102" length="4" offset="1618" repeat="4" starttimestamp="1648471300703" timestamp="6822931" timestamp2="6823283">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="2651" _type="Insert" date="Mon Mar 28 10:35:29 EDT 2022" docASTNodeCount="789" docActiveCodeLength="5652" docExpressionCount="573" docLength="6144" length="42" offset="346" repeat="2" starttimestamp="1648471300703" timestamp="6829218" timestamp2="6829219">
    <text><![CDATA[
import client.ClientRemoteInterfaceGIPC;]]></text>
  </DocumentChange>
  <DocumentChange __id="2659" _type="Insert" date="Mon Mar 28 10:35:41 EDT 2022" docASTNodeCount="789" docActiveCodeLength="5655" docExpressionCount="573" docLength="6147" length="3" offset="2979" repeat="3" starttimestamp="1648471300703" timestamp="6841286" timestamp2="6841519">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="2671" _type="Insert" date="Mon Mar 28 10:35:48 EDT 2022" docASTNodeCount="789" docActiveCodeLength="5663" docExpressionCount="573" docLength="6155" length="8" offset="2996" repeat="2" starttimestamp="1648471300703" timestamp="6847342" timestamp2="6847501">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2673" _type="Replace" date="Mon Mar 28 10:35:48 EDT 2022" docASTNodeCount="794" docActiveCodeLength="5690" docExpressionCount="577" docLength="6182" endLine="77" insertionLength="29" int_docASTNodeCount="789" int_docActiveCodeLength="5661" int_docExpressionCount="573" int_docLength="6153" length="2" offset="3002" startLine="77" starttimestamp="1648471300703" timestamp="6847752">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		clientListRMI.add(aClient);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2677" _type="Delete" date="Mon Mar 28 10:35:50 EDT 2022" docASTNodeCount="794" docActiveCodeLength="5687" docExpressionCount="577" docLength="6179" endLine="77" length="3" offset="3014" repeat="3" startLine="77" starttimestamp="1648471300703" timestamp="6849450" timestamp2="6849746">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="2680" _type="Insert" date="Mon Mar 28 10:35:50 EDT 2022" docASTNodeCount="794" docActiveCodeLength="5691" docExpressionCount="577" docLength="6183" length="4" offset="3014" repeat="4" starttimestamp="1648471300703" timestamp="6850001" timestamp2="6850742">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="2685" _type="PauseCommand" date="Mon Mar 28 10:35:52 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6852008">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2007]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2686" _type="UndoCommand" date="Mon Mar 28 10:35:52 EDT 2022" starttimestamp="1648471300703" timestamp="6852016" />
  <Command __id="2688" _type="PauseCommand" date="Mon Mar 28 10:35:55 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6854671">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2655]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2687" _type="SelectTextCommand" caretOffset="3004" date="Mon Mar 28 10:35:55 EDT 2022" end="3028" start="3004" starttimestamp="1648471300703" timestamp="6854671" />
  <Command __id="2697" _type="PauseCommand" date="Mon Mar 28 10:36:01 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6860383">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[5418]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2696" _type="MoveCaretCommand" caretOffset="2868" date="Mon Mar 28 10:36:01 EDT 2022" docOffset="2868" starttimestamp="1648471300703" timestamp="6860383" />
  <Command __id="2702" _type="PauseCommand" date="Mon Mar 28 10:36:13 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="6873170">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[12102]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2701" _type="SelectTextCommand" caretOffset="2851" date="Mon Mar 28 10:36:13 EDT 2022" end="3043" start="2851" starttimestamp="1648471300703" timestamp="6873170" />
  <Command __id="2704" _type="PauseCommand" date="Mon Mar 28 10:36:15 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6874549">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1379]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2703" _type="SelectTextCommand" caretOffset="2831" date="Mon Mar 28 10:36:15 EDT 2022" end="2839" start="2831" starttimestamp="1648471300703" timestamp="6874549" />
  <Command __id="2708" _type="PauseCommand" date="Mon Mar 28 10:36:18 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6877969">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[3016]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="2684" _type="Delete" date="Mon Mar 28 10:35:52 EDT 2022" docASTNodeCount="794" docActiveCodeLength="5687" docExpressionCount="577" docLength="6179" endLine="77" length="4" offset="3014" startLine="77" starttimestamp="1648471300703" timestamp="6852008">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="2689" _type="Delete" date="Mon Mar 28 10:35:55 EDT 2022" docASTNodeCount="789" docActiveCodeLength="5655" docExpressionCount="573" docLength="6147" endLine="77" length="32" offset="2996" repeat="7" startLine="75" starttimestamp="1648471300703" timestamp="6854965" timestamp2="6858506">
    <text><![CDATA[
		
		clientList.add(aClient);]]></text>
  </DocumentChange>
  <DocumentChange __id="2698" _type="Insert" date="Mon Mar 28 10:36:01 EDT 2022" docASTNodeCount="789" docActiveCodeLength="5658" docExpressionCount="573" docLength="6150" length="3" offset="2868" repeat="3" starttimestamp="1648471300703" timestamp="6861068" timestamp2="6861314">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="2705" _type="Delete" date="Mon Mar 28 10:36:15 EDT 2022" docASTNodeCount="787" docActiveCodeLength="5649" docExpressionCount="571" docLength="6141" endLine="72" length="9" offset="2830" repeat="2" startLine="72" starttimestamp="1648471300703" timestamp="6874953" timestamp2="6875160">
    <text><![CDATA[@Override]]></text>
  </DocumentChange>
  <DocumentChange __id="2709" _type="Insert" date="Mon Mar 28 10:36:19 EDT 2022" docASTNodeCount="787" docActiveCodeLength="5650" docExpressionCount="571" docLength="6142" length="1" offset="2925" starttimestamp="1648471300703" timestamp="6878631">
    <text><![CDATA[\]]></text>
  </DocumentChange>
  <DocumentChange __id="2710" _type="Delete" date="Mon Mar 28 10:36:19 EDT 2022" docASTNodeCount="787" docActiveCodeLength="5649" docExpressionCount="571" docLength="6141" endLine="74" length="1" offset="2925" startLine="74" starttimestamp="1648471300703" timestamp="6879277">
    <text><![CDATA[\]]></text>
  </DocumentChange>
  <DocumentChange __id="2711" _type="Insert" date="Mon Mar 28 10:36:20 EDT 2022" docASTNodeCount="789" docActiveCodeLength="5659" docExpressionCount="573" docLength="6151" length="10" offset="2925" repeat="7" starttimestamp="1648471300703" timestamp="6879545" timestamp2="6881554">
    <text><![CDATA[Super.
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2721" _type="Delete" date="Mon Mar 28 10:36:23 EDT 2022" docASTNodeCount="787" docActiveCodeLength="5653" docExpressionCount="571" docLength="6145" endLine="74" length="6" offset="2925" repeat="6" startLine="74" starttimestamp="1648471300703" timestamp="6882393" timestamp2="6883423">
    <text><![CDATA[Super.]]></text>
  </DocumentChange>
  <Command __id="2707" _type="MoveCaretCommand" caretOffset="2926" date="Mon Mar 28 10:36:18 EDT 2022" docOffset="2926" starttimestamp="1648471300703" timestamp="6877969" />
  <Command __id="2719" _type="PauseCommand" date="Mon Mar 28 10:36:22 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6881561">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2016]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2718" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:36:22 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="6881561" />
  <Command __id="2720" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:36:22 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="6881599" />
  <Command __id="2722" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:23 EDT 2022" starttimestamp="1648471300703" timestamp="6882403" />
  <Command __id="2724" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:23 EDT 2022" starttimestamp="1648471300703" timestamp="6882547" />
  <Command __id="2726" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:23 EDT 2022" starttimestamp="1648471300703" timestamp="6882714" />
  <Command __id="2728" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:23 EDT 2022" starttimestamp="1648471300703" timestamp="6882880" />
  <Command __id="2730" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:23 EDT 2022" starttimestamp="1648471300703" timestamp="6883038" />
  <Command __id="2732" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:24 EDT 2022" starttimestamp="1648471300703" timestamp="6883425" />
  <Command __id="2734" _type="InsertStringCommand" date="Mon Mar 28 10:36:24 EDT 2022" starttimestamp="1648471300703" timestamp="6883534" timestamp2="6883534">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2736" _type="InsertStringCommand" date="Mon Mar 28 10:36:24 EDT 2022" starttimestamp="1648471300703" timestamp="6883621" timestamp2="6883621">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2738" _type="InsertStringCommand" date="Mon Mar 28 10:36:24 EDT 2022" starttimestamp="1648471300703" timestamp="6883752" timestamp2="6883752">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2740" _type="InsertStringCommand" date="Mon Mar 28 10:36:24 EDT 2022" starttimestamp="1648471300703" timestamp="6883838" timestamp2="6883838">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2742" _type="InsertStringCommand" date="Mon Mar 28 10:36:24 EDT 2022" starttimestamp="1648471300703" timestamp="6883919" timestamp2="6883919">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2744" _type="InsertStringCommand" date="Mon Mar 28 10:36:24 EDT 2022" starttimestamp="1648471300703" timestamp="6884283" timestamp2="6884283">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2745" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:36:24 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="6884285" />
  <Command __id="2752" _type="PauseCommand" date="Mon Mar 28 10:36:27 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6886868">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2583]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2751" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:36:27 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="6886868" />
  <Command __id="2754" _type="InsertStringCommand" date="Mon Mar 28 10:36:27 EDT 2022" starttimestamp="1648471300703" timestamp="6886937" timestamp2="6886937">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2756" _type="PauseCommand" date="Mon Mar 28 10:36:29 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6888577">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1640]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2755" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:36:29 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="6888577" />
  <Command __id="2757" _type="MoveCaretCommand" caretOffset="3028" date="Mon Mar 28 10:36:29 EDT 2022" docOffset="3028" starttimestamp="1648471300703" timestamp="6888618" />
  <Command __id="2759" _type="PauseCommand" date="Mon Mar 28 10:36:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6890740">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2122]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2758" _type="SelectTextCommand" caretOffset="2959" date="Mon Mar 28 10:36:31 EDT 2022" end="3068" start="2959" starttimestamp="1648471300703" timestamp="6890740" />
  <Command __id="2761" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:31 EDT 2022" starttimestamp="1648471300703" timestamp="6891265" />
  <Command __id="2763" _type="PauseCommand" date="Mon Mar 28 10:36:33 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6892468">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1203]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2762" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:36:33 EDT 2022" starttimestamp="1648471300703" timestamp="6892468" />
  <Command __id="2764" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:36:33 EDT 2022" starttimestamp="1648471300703" timestamp="6892562" />
  <Command __id="2765" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:36:33 EDT 2022" starttimestamp="1648471300703" timestamp="6892616" />
  <Command __id="2767" _type="PauseCommand" date="Mon Mar 28 10:36:40 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6899799">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7183]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2766" _type="MoveCaretCommand" caretOffset="2959" date="Mon Mar 28 10:36:40 EDT 2022" docOffset="2959" starttimestamp="1648471300703" timestamp="6899799" />
  <Command __id="2769" _type="InsertStringCommand" date="Mon Mar 28 10:36:40 EDT 2022" starttimestamp="1648471300703" timestamp="6899820" timestamp2="6899820">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2771" _type="InsertStringCommand" date="Mon Mar 28 10:36:40 EDT 2022" starttimestamp="1648471300703" timestamp="6899955" timestamp2="6899955">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2773" _type="InsertStringCommand" date="Mon Mar 28 10:36:40 EDT 2022" starttimestamp="1648471300703" timestamp="6900029" timestamp2="6900029">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2775" _type="InsertStringCommand" date="Mon Mar 28 10:36:40 EDT 2022" starttimestamp="1648471300703" timestamp="6900093" timestamp2="6900093">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2777" _type="InsertStringCommand" date="Mon Mar 28 10:36:40 EDT 2022" starttimestamp="1648471300703" timestamp="6900178" timestamp2="6900178">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2779" _type="InsertStringCommand" date="Mon Mar 28 10:36:41 EDT 2022" starttimestamp="1648471300703" timestamp="6900357" timestamp2="6900357">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2780" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:36:41 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="6900360" />
  <Command __id="2782" _type="PauseCommand" date="Mon Mar 28 10:36:43 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6902721">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2361]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2781" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:36:43 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="6902721" />
  <DocumentChange __id="2733" _type="Insert" date="Mon Mar 28 10:36:24 EDT 2022" docASTNodeCount="792" docActiveCodeLength="5664" docExpressionCount="575" docLength="6156" length="11" offset="2925" repeat="11" starttimestamp="1648471300703" timestamp="6883530" timestamp2="6886420">
    <text><![CDATA[super.regis]]></text>
  </DocumentChange>
  <DocumentChange __id="2753" _type="Replace" date="Mon Mar 28 10:36:27 EDT 2022" docASTNodeCount="791" docActiveCodeLength="5683" docExpressionCount="574" docLength="6175" endLine="74" insertionLength="24" int_docASTNodeCount="788" int_docActiveCodeLength="5659" int_docExpressionCount="572" int_docLength="6151" length="5" offset="2931" startLine="74" starttimestamp="1648471300703" timestamp="6886879">
    <deletedText><![CDATA[regis]]></deletedText>
    <insertedText><![CDATA[registerClient(aClient);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2760" _type="Delete" date="Mon Mar 28 10:36:31 EDT 2022" docASTNodeCount="779" docActiveCodeLength="5608" docExpressionCount="564" docLength="6066" endLine="77" length="109" offset="2959" startLine="75" starttimestamp="1648471300703" timestamp="6891256">
    <text><![CDATA[// TODO Auto-generated method stub
		clientListRMI.add(aClient);
		System.out.println("Client registered");]]></text>
  </DocumentChange>
  <DocumentChange __id="2768" _type="Insert" date="Mon Mar 28 10:36:40 EDT 2022" docASTNodeCount="779" docActiveCodeLength="5614" docExpressionCount="564" docLength="6072" length="6" offset="2959" repeat="6" starttimestamp="1648471300703" timestamp="6899815" timestamp2="6900353">
    <text><![CDATA[super.]]></text>
  </DocumentChange>
  <Command __id="2784" _type="PauseCommand" date="Mon Mar 28 10:36:54 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="6913327">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[10606]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2785" _type="InsertStringCommand" date="Mon Mar 28 10:36:54 EDT 2022" starttimestamp="1648471300703" timestamp="6913334" timestamp2="6913334">
    <data><![CDATA[c]]></data>
  </Command>
  <DocumentChange __id="2783" _type="Insert" date="Mon Mar 28 10:36:54 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5615" docExpressionCount="568" docLength="6073" length="1" offset="2965" starttimestamp="1648471300703" timestamp="6913327">
    <text><![CDATA[c]]></text>
  </DocumentChange>
  <Command __id="2787" _type="PauseCommand" date="Mon Mar 28 10:36:55 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6914395">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1061]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2788" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:55 EDT 2022" starttimestamp="1648471300703" timestamp="6914398" />
  <Command __id="2790" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:55 EDT 2022" starttimestamp="1648471300703" timestamp="6914555" />
  <Command __id="2792" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:55 EDT 2022" starttimestamp="1648471300703" timestamp="6914719" />
  <Command __id="2794" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:55 EDT 2022" starttimestamp="1648471300703" timestamp="6914877" />
  <Command __id="2796" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:55 EDT 2022" starttimestamp="1648471300703" timestamp="6915031" />
  <Command __id="2798" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:55 EDT 2022" starttimestamp="1648471300703" timestamp="6915198" />
  <Command __id="2800" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:36:56 EDT 2022" starttimestamp="1648471300703" timestamp="6915348" />
  <Command __id="2802" _type="PauseCommand" date="Mon Mar 28 10:37:12 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="6931346">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[15998]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2801" _type="MoveCaretCommand" caretOffset="2967" date="Mon Mar 28 10:37:12 EDT 2022" docOffset="2967" starttimestamp="1648471300703" timestamp="6931346" />
  <Command __id="2804" _type="InsertStringCommand" date="Mon Mar 28 10:37:12 EDT 2022" starttimestamp="1648471300703" timestamp="6931629" timestamp2="6931629">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2806" _type="InsertStringCommand" date="Mon Mar 28 10:37:12 EDT 2022" starttimestamp="1648471300703" timestamp="6931743" timestamp2="6931743">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2808" _type="InsertStringCommand" date="Mon Mar 28 10:37:12 EDT 2022" starttimestamp="1648471300703" timestamp="6932087" timestamp2="6932087">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2810" _type="InsertStringCommand" date="Mon Mar 28 10:37:12 EDT 2022" starttimestamp="1648471300703" timestamp="6932219" timestamp2="6932219">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2812" _type="InsertStringCommand" date="Mon Mar 28 10:37:13 EDT 2022" starttimestamp="1648471300703" timestamp="6932319" timestamp2="6932319">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2814" _type="InsertStringCommand" date="Mon Mar 28 10:37:13 EDT 2022" starttimestamp="1648471300703" timestamp="6932436" timestamp2="6932436">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2816" _type="InsertStringCommand" date="Mon Mar 28 10:37:13 EDT 2022" starttimestamp="1648471300703" timestamp="6932532" timestamp2="6932532">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2818" _type="InsertStringCommand" date="Mon Mar 28 10:37:13 EDT 2022" starttimestamp="1648471300703" timestamp="6932634" timestamp2="6932634">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2820" _type="InsertStringCommand" date="Mon Mar 28 10:37:13 EDT 2022" starttimestamp="1648471300703" timestamp="6932734" timestamp2="6932734">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2822" _type="InsertStringCommand" date="Mon Mar 28 10:37:13 EDT 2022" starttimestamp="1648471300703" timestamp="6932943" timestamp2="6932943">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2824" _type="InsertStringCommand" date="Mon Mar 28 10:37:13 EDT 2022" starttimestamp="1648471300703" timestamp="6933045" timestamp2="6933045">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2826" _type="InsertStringCommand" date="Mon Mar 28 10:37:13 EDT 2022" starttimestamp="1648471300703" timestamp="6933094" timestamp2="6933094">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2828" _type="InsertStringCommand" date="Mon Mar 28 10:37:13 EDT 2022" starttimestamp="1648471300703" timestamp="6933212" timestamp2="6933212">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2830" _type="InsertStringCommand" date="Mon Mar 28 10:37:14 EDT 2022" starttimestamp="1648471300703" timestamp="6933349" timestamp2="6933349">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2832" _type="InsertStringCommand" date="Mon Mar 28 10:37:14 EDT 2022" starttimestamp="1648471300703" timestamp="6934202" timestamp2="6934202">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2834" _type="InsertStringCommand" date="Mon Mar 28 10:37:14 EDT 2022" starttimestamp="1648471300703" timestamp="6934266" timestamp2="6934266">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2836" _type="InsertStringCommand" date="Mon Mar 28 10:37:15 EDT 2022" starttimestamp="1648471300703" timestamp="6934513" timestamp2="6934513">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2838" _type="InsertStringCommand" date="Mon Mar 28 10:37:15 EDT 2022" starttimestamp="1648471300703" timestamp="6934596" timestamp2="6934596">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2840" _type="InsertStringCommand" date="Mon Mar 28 10:37:15 EDT 2022" starttimestamp="1648471300703" timestamp="6934685" timestamp2="6934685">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2842" _type="InsertStringCommand" date="Mon Mar 28 10:37:15 EDT 2022" starttimestamp="1648471300703" timestamp="6934923" timestamp2="6934923">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2844" _type="InsertStringCommand" date="Mon Mar 28 10:37:15 EDT 2022" starttimestamp="1648471300703" timestamp="6935182" timestamp2="6935182">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2846" _type="InsertStringCommand" date="Mon Mar 28 10:37:15 EDT 2022" starttimestamp="1648471300703" timestamp="6935214" timestamp2="6935214">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2848" _type="InsertStringCommand" date="Mon Mar 28 10:37:16 EDT 2022" starttimestamp="1648471300703" timestamp="6935833" timestamp2="6935833">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="2850" _type="InsertStringCommand" date="Mon Mar 28 10:37:16 EDT 2022" starttimestamp="1648471300703" timestamp="6935971" timestamp2="6935971">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2852" _type="InsertStringCommand" date="Mon Mar 28 10:37:16 EDT 2022" starttimestamp="1648471300703" timestamp="6936043" timestamp2="6936043">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2854" _type="InsertStringCommand" date="Mon Mar 28 10:37:16 EDT 2022" starttimestamp="1648471300703" timestamp="6936144" timestamp2="6936144">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2856" _type="InsertStringCommand" date="Mon Mar 28 10:37:16 EDT 2022" starttimestamp="1648471300703" timestamp="6936249" timestamp2="6936249">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2858" _type="InsertStringCommand" date="Mon Mar 28 10:37:17 EDT 2022" starttimestamp="1648471300703" timestamp="6936343" timestamp2="6936343">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2860" _type="InsertStringCommand" date="Mon Mar 28 10:37:17 EDT 2022" starttimestamp="1648471300703" timestamp="6936784" timestamp2="6936784">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="2862" _type="InsertStringCommand" date="Mon Mar 28 10:37:17 EDT 2022" starttimestamp="1648471300703" timestamp="6936955" timestamp2="6936955">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="2864" _type="InsertStringCommand" date="Mon Mar 28 10:37:17 EDT 2022" starttimestamp="1648471300703" timestamp="6937053" timestamp2="6937053">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="2866" _type="InsertStringCommand" date="Mon Mar 28 10:37:17 EDT 2022" starttimestamp="1648471300703" timestamp="6937216" timestamp2="6937216">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="2868" _type="InsertStringCommand" date="Mon Mar 28 10:37:18 EDT 2022" starttimestamp="1648471300703" timestamp="6937866" timestamp2="6937866">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2869" _type="InsertStringCommand" date="Mon Mar 28 10:37:18 EDT 2022" starttimestamp="1648471300703" timestamp="6937945" timestamp2="6937945">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2871" _type="PauseCommand" date="Mon Mar 28 10:37:22 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6941573">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3628]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2870" _type="SelectTextCommand" caretOffset="2863" date="Mon Mar 28 10:37:22 EDT 2022" end="2895" start="2863" starttimestamp="1648471300703" timestamp="6941573" />
  <Command __id="2872" _type="CopyCommand" date="Mon Mar 28 10:37:22 EDT 2022" starttimestamp="1648471300703" timestamp="6941810" />
  <Command __id="2874" _type="PauseCommand" date="Mon Mar 28 10:37:23 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6942824">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1014]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2873" _type="MoveCaretCommand" caretOffset="3004" date="Mon Mar 28 10:37:23 EDT 2022" docOffset="3004" starttimestamp="1648471300703" timestamp="6942824" />
  <Command __id="2876" _type="PasteCommand" date="Mon Mar 28 10:37:23 EDT 2022" starttimestamp="1648471300703" timestamp="6943045" />
  <Command __id="2878" _type="PauseCommand" date="Mon Mar 28 10:37:25 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6944446">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1401]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2877" _type="MoveCaretCommand" caretOffset="3027" date="Mon Mar 28 10:37:25 EDT 2022" docOffset="3027" starttimestamp="1648471300703" timestamp="6944446" />
  <Command __id="2879" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 10:37:25 EDT 2022" starttimestamp="1648471300703" timestamp="6945155" />
  <Command __id="2881" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:37:26 EDT 2022" starttimestamp="1648471300703" timestamp="6945710" />
  <Command __id="2883" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:37:26 EDT 2022" starttimestamp="1648471300703" timestamp="6945862" />
  <Command __id="2885" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:37:26 EDT 2022" starttimestamp="1648471300703" timestamp="6946020" />
  <Command __id="2887" _type="InsertStringCommand" date="Mon Mar 28 10:37:27 EDT 2022" starttimestamp="1648471300703" timestamp="6946685" timestamp2="6946685">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="2889" _type="InsertStringCommand" date="Mon Mar 28 10:37:27 EDT 2022" starttimestamp="1648471300703" timestamp="6946772" timestamp2="6946772">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="2891" _type="InsertStringCommand" date="Mon Mar 28 10:37:27 EDT 2022" starttimestamp="1648471300703" timestamp="6946870" timestamp2="6946870">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="2893" _type="InsertStringCommand" date="Mon Mar 28 10:37:27 EDT 2022" starttimestamp="1648471300703" timestamp="6947038" timestamp2="6947038">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="2895" _type="PauseCommand" date="Mon Mar 28 10:37:29 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6948388">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1350]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2894" _type="MoveCaretCommand" caretOffset="3038" date="Mon Mar 28 10:37:29 EDT 2022" docOffset="3038" starttimestamp="1648471300703" timestamp="6948388" />
  <DocumentChange __id="2786" _type="Delete" date="Mon Mar 28 10:36:55 EDT 2022" docASTNodeCount="779" docActiveCodeLength="5608" docExpressionCount="564" docLength="6066" endLine="75" length="7" offset="2959" repeat="7" startLine="75" starttimestamp="1648471300703" timestamp="6914395" timestamp2="6915344">
    <text><![CDATA[super.c]]></text>
  </DocumentChange>
  <DocumentChange __id="2803" _type="Insert" date="Mon Mar 28 10:37:12 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5646" docExpressionCount="565" docLength="6104" length="38" offset="2967" repeat="33" starttimestamp="1648471300703" timestamp="6931616" timestamp2="6937863">
    <text><![CDATA[
	
	public void registerClientGIPC()]]></text>
  </DocumentChange>
  <DocumentChange __id="2875" _type="Insert" date="Mon Mar 28 10:37:23 EDT 2022" docASTNodeCount="788" docActiveCodeLength="5678" docExpressionCount="567" docLength="6136" length="32" offset="3004" starttimestamp="1648471300703" timestamp="6943038">
    <text><![CDATA[ClientRemoteInterfaceRMI aClient]]></text>
  </DocumentChange>
  <DocumentChange __id="2880" _type="Delete" date="Mon Mar 28 10:37:26 EDT 2022" docASTNodeCount="788" docActiveCodeLength="5675" docExpressionCount="567" docLength="6133" endLine="79" length="3" offset="3025" repeat="3" startLine="79" starttimestamp="1648471300703" timestamp="6945705" timestamp2="6946018">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="2886" _type="Insert" date="Mon Mar 28 10:37:27 EDT 2022" docASTNodeCount="788" docActiveCodeLength="5679" docExpressionCount="567" docLength="6137" length="4" offset="3025" repeat="4" starttimestamp="1648471300703" timestamp="6946680" timestamp2="6947034">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="2897" _type="PauseCommand" date="Mon Mar 28 10:37:30 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6949881">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1493]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2898" _type="InsertStringCommand" date="Mon Mar 28 10:37:30 EDT 2022" starttimestamp="1648471300703" timestamp="6949888" timestamp2="6949888">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2900" _type="InsertStringCommand" date="Mon Mar 28 10:37:30 EDT 2022" starttimestamp="1648471300703" timestamp="6949967" timestamp2="6949967">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="2901" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:37:30 EDT 2022" starttimestamp="1648471300703" timestamp="6950233" />
  <Command __id="2903" _type="InsertStringCommand" date="Mon Mar 28 10:37:31 EDT 2022" starttimestamp="1648471300703" timestamp="6950420" timestamp2="6950420">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2896" _type="Insert" date="Mon Mar 28 10:37:30 EDT 2022" docASTNodeCount="788" docActiveCodeLength="5689" docExpressionCount="567" docLength="6147" length="10" offset="3038" repeat="3" starttimestamp="1648471300703" timestamp="6949881" timestamp2="6950416">
    <text><![CDATA[ {
		
	}]]></text>
  </DocumentChange>
  <Command __id="2905" _type="PauseCommand" date="Mon Mar 28 10:37:35 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6954793">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4373]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="2904" _type="Delete" date="Mon Mar 28 10:37:35 EDT 2022" docASTNodeCount="788" docActiveCodeLength="5679" docExpressionCount="567" docLength="6137" endLine="81" length="10" offset="3038" repeat="3" startLine="79" starttimestamp="1648471300703" timestamp="6954793" timestamp2="6955526">
    <text><![CDATA[ {
		
	}]]></text>
  </DocumentChange>
  <Command __id="2906" _type="UndoCommand" date="Mon Mar 28 10:37:35 EDT 2022" starttimestamp="1648471300703" timestamp="6954802" />
  <Command __id="2908" _type="UndoCommand" date="Mon Mar 28 10:37:35 EDT 2022" starttimestamp="1648471300703" timestamp="6955282" />
  <Command __id="2910" _type="UndoCommand" date="Mon Mar 28 10:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="6955533" />
  <DocumentChange __id="2911" _type="Delete" date="Mon Mar 28 10:37:36 EDT 2022" docASTNodeCount="788" docActiveCodeLength="5675" docExpressionCount="567" docLength="6133" endLine="79" length="4" offset="3025" startLine="79" starttimestamp="1648471300703" timestamp="6955739">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="2912" _type="UndoCommand" date="Mon Mar 28 10:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="6955747" />
  <DocumentChange __id="2913" _type="Insert" date="Mon Mar 28 10:37:36 EDT 2022" docASTNodeCount="788" docActiveCodeLength="5678" docExpressionCount="567" docLength="6136" length="3" offset="3025" starttimestamp="1648471300703" timestamp="6955894">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="2914" _type="UndoCommand" date="Mon Mar 28 10:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="6955898" />
  <DocumentChange __id="2915" _type="Delete" date="Mon Mar 28 10:37:36 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5646" docExpressionCount="565" docLength="6104" endLine="79" length="32" offset="3004" startLine="79" starttimestamp="1648471300703" timestamp="6956043">
    <text><![CDATA[ClientRemoteInterfaceRMI aClient]]></text>
  </DocumentChange>
  <Command __id="2916" _type="UndoCommand" date="Mon Mar 28 10:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="6956051" />
  <DocumentChange __id="2917" _type="Delete" date="Mon Mar 28 10:37:36 EDT 2022" docASTNodeCount="779" docActiveCodeLength="5608" docExpressionCount="564" docLength="6066" endLine="79" length="38" offset="2967" repeat="2" startLine="77" starttimestamp="1648471300703" timestamp="6956189" timestamp2="6956358">
    <text><![CDATA[
	
	public void registerClientGIPC()]]></text>
  </DocumentChange>
  <Command __id="2918" _type="UndoCommand" date="Mon Mar 28 10:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="6956195" />
  <Command __id="2920" _type="UndoCommand" date="Mon Mar 28 10:37:37 EDT 2022" starttimestamp="1648471300703" timestamp="6956366" />
  <DocumentChange __id="2921" _type="Insert" date="Mon Mar 28 10:37:37 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5615" docExpressionCount="568" docLength="6073" length="7" offset="2959" starttimestamp="1648471300703" timestamp="6956512">
    <text><![CDATA[super.c]]></text>
  </DocumentChange>
  <Command __id="2922" _type="UndoCommand" date="Mon Mar 28 10:37:37 EDT 2022" starttimestamp="1648471300703" timestamp="6956518" />
  <DocumentChange __id="2923" _type="Delete" date="Mon Mar 28 10:37:37 EDT 2022" docASTNodeCount="779" docActiveCodeLength="5608" docExpressionCount="564" docLength="6066" endLine="75" length="7" offset="2959" startLine="75" starttimestamp="1648471300703" timestamp="6956677">
    <text><![CDATA[super.c]]></text>
  </DocumentChange>
  <Command __id="2924" _type="UndoCommand" date="Mon Mar 28 10:37:37 EDT 2022" starttimestamp="1648471300703" timestamp="6956686" />
  <Command __id="2926" _type="UndoCommand" date="Mon Mar 28 10:37:37 EDT 2022" starttimestamp="1648471300703" timestamp="6957046" />
  <Command __id="2928" _type="PauseCommand" date="Mon Mar 28 10:37:39 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6958816">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1770]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2927" _type="MoveCaretCommand" caretOffset="3076" date="Mon Mar 28 10:37:39 EDT 2022" docOffset="3076" starttimestamp="1648471300703" timestamp="6958816" />
  <Command __id="2930" _type="InsertStringCommand" date="Mon Mar 28 10:37:39 EDT 2022" starttimestamp="1648471300703" timestamp="6959122" timestamp2="6959122">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2932" _type="InsertStringCommand" date="Mon Mar 28 10:37:40 EDT 2022" starttimestamp="1648471300703" timestamp="6959622" timestamp2="6959622">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2934" _type="InsertStringCommand" date="Mon Mar 28 10:37:40 EDT 2022" starttimestamp="1648471300703" timestamp="6960001" timestamp2="6960001">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2936" _type="InsertStringCommand" date="Mon Mar 28 10:37:40 EDT 2022" starttimestamp="1648471300703" timestamp="6960100" timestamp2="6960100">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2938" _type="InsertStringCommand" date="Mon Mar 28 10:37:40 EDT 2022" starttimestamp="1648471300703" timestamp="6960234" timestamp2="6960234">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2940" _type="InsertStringCommand" date="Mon Mar 28 10:37:41 EDT 2022" starttimestamp="1648471300703" timestamp="6960337" timestamp2="6960337">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2942" _type="InsertStringCommand" date="Mon Mar 28 10:37:41 EDT 2022" starttimestamp="1648471300703" timestamp="6960418" timestamp2="6960418">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2944" _type="InsertStringCommand" date="Mon Mar 28 10:37:41 EDT 2022" starttimestamp="1648471300703" timestamp="6960535" timestamp2="6960535">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2946" _type="InsertStringCommand" date="Mon Mar 28 10:37:41 EDT 2022" starttimestamp="1648471300703" timestamp="6960634" timestamp2="6960634">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2948" _type="InsertStringCommand" date="Mon Mar 28 10:37:41 EDT 2022" starttimestamp="1648471300703" timestamp="6960775" timestamp2="6960775">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2950" _type="InsertStringCommand" date="Mon Mar 28 10:37:41 EDT 2022" starttimestamp="1648471300703" timestamp="6960862" timestamp2="6960862">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2952" _type="InsertStringCommand" date="Mon Mar 28 10:37:41 EDT 2022" starttimestamp="1648471300703" timestamp="6960907" timestamp2="6960907">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2954" _type="InsertStringCommand" date="Mon Mar 28 10:37:41 EDT 2022" starttimestamp="1648471300703" timestamp="6961049" timestamp2="6961049">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2956" _type="InsertStringCommand" date="Mon Mar 28 10:37:41 EDT 2022" starttimestamp="1648471300703" timestamp="6961156" timestamp2="6961156">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2958" _type="InsertStringCommand" date="Mon Mar 28 10:37:42 EDT 2022" starttimestamp="1648471300703" timestamp="6962017" timestamp2="6962017">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2960" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="6962333" />
  <Command __id="2962" _type="InsertStringCommand" date="Mon Mar 28 10:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="6962386" timestamp2="6962386">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2964" _type="InsertStringCommand" date="Mon Mar 28 10:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="6962478" timestamp2="6962478">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2966" _type="InsertStringCommand" date="Mon Mar 28 10:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="6962634" timestamp2="6962634">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2968" _type="InsertStringCommand" date="Mon Mar 28 10:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="6962764" timestamp2="6962764">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2970" _type="InsertStringCommand" date="Mon Mar 28 10:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="6962861" timestamp2="6962861">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2972" _type="InsertStringCommand" date="Mon Mar 28 10:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="6963031" timestamp2="6963031">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2974" _type="InsertStringCommand" date="Mon Mar 28 10:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="6963182" timestamp2="6963182">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2976" _type="InsertStringCommand" date="Mon Mar 28 10:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="6963252" timestamp2="6963252">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2978" _type="InsertStringCommand" date="Mon Mar 28 10:37:44 EDT 2022" starttimestamp="1648471300703" timestamp="6963952" timestamp2="6963952">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="2980" _type="InsertStringCommand" date="Mon Mar 28 10:37:44 EDT 2022" starttimestamp="1648471300703" timestamp="6964189" timestamp2="6964189">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2982" _type="InsertStringCommand" date="Mon Mar 28 10:37:44 EDT 2022" starttimestamp="1648471300703" timestamp="6964252" timestamp2="6964252">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2984" _type="InsertStringCommand" date="Mon Mar 28 10:37:45 EDT 2022" starttimestamp="1648471300703" timestamp="6964344" timestamp2="6964344">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2986" _type="InsertStringCommand" date="Mon Mar 28 10:37:45 EDT 2022" starttimestamp="1648471300703" timestamp="6964461" timestamp2="6964461">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2988" _type="InsertStringCommand" date="Mon Mar 28 10:37:45 EDT 2022" starttimestamp="1648471300703" timestamp="6964548" timestamp2="6964548">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2990" _type="InsertStringCommand" date="Mon Mar 28 10:37:45 EDT 2022" starttimestamp="1648471300703" timestamp="6964964" timestamp2="6964964">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="2992" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:37:46 EDT 2022" starttimestamp="1648471300703" timestamp="6965484" />
  <Command __id="2994" _type="InsertStringCommand" date="Mon Mar 28 10:37:46 EDT 2022" starttimestamp="1648471300703" timestamp="6965731" timestamp2="6965731">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="2996" _type="InsertStringCommand" date="Mon Mar 28 10:37:46 EDT 2022" starttimestamp="1648471300703" timestamp="6965843" timestamp2="6965843">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="2998" _type="InsertStringCommand" date="Mon Mar 28 10:37:46 EDT 2022" starttimestamp="1648471300703" timestamp="6965955" timestamp2="6965955">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3000" _type="InsertStringCommand" date="Mon Mar 28 10:37:47 EDT 2022" starttimestamp="1648471300703" timestamp="6966437" timestamp2="6966437">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3002" _type="InsertStringCommand" date="Mon Mar 28 10:37:47 EDT 2022" starttimestamp="1648471300703" timestamp="6967161" timestamp2="6967161">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3003" _type="InsertStringCommand" date="Mon Mar 28 10:37:47 EDT 2022" starttimestamp="1648471300703" timestamp="6967237" timestamp2="6967237">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="3004" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:37:48 EDT 2022" starttimestamp="1648471300703" timestamp="6967606" />
  <Command __id="3006" _type="InsertStringCommand" date="Mon Mar 28 10:37:48 EDT 2022" starttimestamp="1648471300703" timestamp="6967869" timestamp2="6967869">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3008" _type="InsertStringCommand" date="Mon Mar 28 10:37:48 EDT 2022" starttimestamp="1648471300703" timestamp="6967989" timestamp2="6967989">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3010" _type="InsertStringCommand" date="Mon Mar 28 10:37:48 EDT 2022" starttimestamp="1648471300703" timestamp="6968091" timestamp2="6968091">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3012" _type="InsertStringCommand" date="Mon Mar 28 10:37:48 EDT 2022" starttimestamp="1648471300703" timestamp="6968159" timestamp2="6968159">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3014" _type="InsertStringCommand" date="Mon Mar 28 10:37:48 EDT 2022" starttimestamp="1648471300703" timestamp="6968284" timestamp2="6968284">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3016" _type="InsertStringCommand" date="Mon Mar 28 10:37:49 EDT 2022" starttimestamp="1648471300703" timestamp="6968360" timestamp2="6968360">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3018" _type="InsertStringCommand" date="Mon Mar 28 10:37:49 EDT 2022" starttimestamp="1648471300703" timestamp="6968720" timestamp2="6968720">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3020" _type="InsertStringCommand" date="Mon Mar 28 10:37:49 EDT 2022" starttimestamp="1648471300703" timestamp="6968896" timestamp2="6968896">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="2925" _type="Insert" date="Mon Mar 28 10:37:37 EDT 2022" docASTNodeCount="791" docActiveCodeLength="5683" docExpressionCount="574" docLength="6175" length="109" offset="2959" starttimestamp="1648471300703" timestamp="6957040">
    <text><![CDATA[// TODO Auto-generated method stub
		clientListRMI.add(aClient);
		System.out.println("Client registered");]]></text>
  </DocumentChange>
  <DocumentChange __id="2929" _type="Insert" date="Mon Mar 28 10:37:39 EDT 2022" docASTNodeCount="792" docActiveCodeLength="5702" docExpressionCount="574" docLength="6194" length="19" offset="3076" repeat="15" starttimestamp="1648471300703" timestamp="6959114" timestamp2="6962006">
    <text><![CDATA[
	
	public void s]]></text>
  </DocumentChange>
  <DocumentChange __id="2959" _type="Delete" date="Mon Mar 28 10:37:43 EDT 2022" docASTNodeCount="792" docActiveCodeLength="5701" docExpressionCount="574" docLength="6193" endLine="81" length="1" offset="3094" startLine="81" starttimestamp="1648471300703" timestamp="6962330">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="2961" _type="Insert" date="Mon Mar 28 10:37:43 EDT 2022" docASTNodeCount="792" docActiveCodeLength="5716" docExpressionCount="574" docLength="6208" length="15" offset="3094" repeat="15" starttimestamp="1648471300703" timestamp="6962383" timestamp2="6964958">
    <text><![CDATA[registerClientR]]></text>
  </DocumentChange>
  <DocumentChange __id="2991" _type="Delete" date="Mon Mar 28 10:37:46 EDT 2022" docASTNodeCount="792" docActiveCodeLength="5715" docExpressionCount="574" docLength="6207" endLine="81" length="1" offset="3108" startLine="81" starttimestamp="1648471300703" timestamp="6965481">
    <text><![CDATA[R]]></text>
  </DocumentChange>
  <Command __id="3022" _type="InsertStringCommand" date="Mon Mar 28 10:37:49 EDT 2022" starttimestamp="1648471300703" timestamp="6968984" timestamp2="6968984">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3024" _type="InsertStringCommand" date="Mon Mar 28 10:37:49 EDT 2022" starttimestamp="1648471300703" timestamp="6969043" timestamp2="6969043">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3026" _type="InsertStringCommand" date="Mon Mar 28 10:37:49 EDT 2022" starttimestamp="1648471300703" timestamp="6969104" timestamp2="6969104">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3028" _type="InsertStringCommand" date="Mon Mar 28 10:37:49 EDT 2022" starttimestamp="1648471300703" timestamp="6969276" timestamp2="6969276">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3030" _type="InsertStringCommand" date="Mon Mar 28 10:37:50 EDT 2022" starttimestamp="1648471300703" timestamp="6969913" timestamp2="6969913">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3032" _type="InsertStringCommand" date="Mon Mar 28 10:37:50 EDT 2022" starttimestamp="1648471300703" timestamp="6970184" timestamp2="6970184">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3034" _type="InsertStringCommand" date="Mon Mar 28 10:37:50 EDT 2022" starttimestamp="1648471300703" timestamp="6970225" timestamp2="6970225">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3036" _type="InsertStringCommand" date="Mon Mar 28 10:37:51 EDT 2022" starttimestamp="1648471300703" timestamp="6970410" timestamp2="6970410">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3038" _type="InsertStringCommand" date="Mon Mar 28 10:37:51 EDT 2022" starttimestamp="1648471300703" timestamp="6970481" timestamp2="6970481">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3040" _type="InsertStringCommand" date="Mon Mar 28 10:37:51 EDT 2022" starttimestamp="1648471300703" timestamp="6970680" timestamp2="6970680">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3042" _type="InsertStringCommand" date="Mon Mar 28 10:37:51 EDT 2022" starttimestamp="1648471300703" timestamp="6970742" timestamp2="6970742">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3044" _type="InsertStringCommand" date="Mon Mar 28 10:37:51 EDT 2022" starttimestamp="1648471300703" timestamp="6970947" timestamp2="6970947">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3046" _type="InsertStringCommand" date="Mon Mar 28 10:37:51 EDT 2022" starttimestamp="1648471300703" timestamp="6971129" timestamp2="6971129">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3049" _type="PauseCommand" date="Mon Mar 28 10:37:53 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="6972523">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1394]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3048" _type="InsertStringCommand" date="Mon Mar 28 10:37:53 EDT 2022" starttimestamp="1648471300703" timestamp="6972523" timestamp2="6972523">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3051" _type="InsertStringCommand" date="Mon Mar 28 10:37:53 EDT 2022" starttimestamp="1648471300703" timestamp="6972854" timestamp2="6972854">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3053" _type="InsertStringCommand" date="Mon Mar 28 10:37:53 EDT 2022" starttimestamp="1648471300703" timestamp="6972989" timestamp2="6972989">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3055" _type="InsertStringCommand" date="Mon Mar 28 10:37:54 EDT 2022" starttimestamp="1648471300703" timestamp="6973379" timestamp2="6973379">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3057" _type="InsertStringCommand" date="Mon Mar 28 10:37:54 EDT 2022" starttimestamp="1648471300703" timestamp="6973904" timestamp2="6973904">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3059" _type="InsertStringCommand" date="Mon Mar 28 10:37:54 EDT 2022" starttimestamp="1648471300703" timestamp="6974069" timestamp2="6974069">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3061" _type="InsertStringCommand" date="Mon Mar 28 10:37:55 EDT 2022" starttimestamp="1648471300703" timestamp="6974435" timestamp2="6974435">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3063" _type="InsertStringCommand" date="Mon Mar 28 10:37:55 EDT 2022" starttimestamp="1648471300703" timestamp="6974567" timestamp2="6974567">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3065" _type="InsertStringCommand" date="Mon Mar 28 10:37:55 EDT 2022" starttimestamp="1648471300703" timestamp="6974621" timestamp2="6974621">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3067" _type="InsertStringCommand" date="Mon Mar 28 10:37:55 EDT 2022" starttimestamp="1648471300703" timestamp="6974742" timestamp2="6974742">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3069" _type="InsertStringCommand" date="Mon Mar 28 10:37:55 EDT 2022" starttimestamp="1648471300703" timestamp="6974823" timestamp2="6974823">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3071" _type="InsertStringCommand" date="Mon Mar 28 10:37:55 EDT 2022" starttimestamp="1648471300703" timestamp="6974941" timestamp2="6974941">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3072" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 10:37:55 EDT 2022" starttimestamp="1648471300703" timestamp="6975268" />
  <Command __id="3074" _type="InsertStringCommand" date="Mon Mar 28 10:37:56 EDT 2022" starttimestamp="1648471300703" timestamp="6975852" timestamp2="6975852">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3076" _type="InsertStringCommand" date="Mon Mar 28 10:37:56 EDT 2022" starttimestamp="1648471300703" timestamp="6975902" timestamp2="6975902">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="3077" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:37:56 EDT 2022" starttimestamp="1648471300703" timestamp="6976148" />
  <Command __id="3079" _type="InsertStringCommand" date="Mon Mar 28 10:37:57 EDT 2022" starttimestamp="1648471300703" timestamp="6976313" timestamp2="6976313">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3081" _type="PauseCommand" date="Mon Mar 28 10:38:05 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="6985164">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[8851]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3080" _type="SelectTextCommand" caretOffset="2997" date="Mon Mar 28 10:38:05 EDT 2022" end="3068" start="2997" starttimestamp="1648471300703" timestamp="6985164" />
  <Command __id="3082" _type="CopyCommand" date="Mon Mar 28 10:38:06 EDT 2022" starttimestamp="1648471300703" timestamp="6985423" />
  <Command __id="3083" _type="MoveCaretCommand" caretOffset="3153" date="Mon Mar 28 10:38:06 EDT 2022" docOffset="3153" starttimestamp="1648471300703" timestamp="6986265" />
  <Command __id="3085" _type="PasteCommand" date="Mon Mar 28 10:38:07 EDT 2022" starttimestamp="1648471300703" timestamp="6986447" />
  <Command __id="3087" _type="PauseCommand" date="Mon Mar 28 10:38:11 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="6990941">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4494]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3086" _type="MoveCaretCommand" caretOffset="3009" date="Mon Mar 28 10:38:11 EDT 2022" docOffset="3009" starttimestamp="1648471300703" timestamp="6990941" />
  <Command __id="3088" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 10:38:12 EDT 2022" starttimestamp="1648471300703" timestamp="6991578" />
  <Command __id="3090" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:12 EDT 2022" starttimestamp="1648471300703" timestamp="6991862" />
  <Command __id="3092" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:12 EDT 2022" starttimestamp="1648471300703" timestamp="6992031" />
  <Command __id="3094" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:12 EDT 2022" starttimestamp="1648471300703" timestamp="6992180" />
  <Command __id="3096" _type="InsertStringCommand" date="Mon Mar 28 10:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="6992706" timestamp2="6992706">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3098" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="6992966" />
  <Command __id="3100" _type="InsertStringCommand" date="Mon Mar 28 10:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="6993056" timestamp2="6993056">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3102" _type="InsertStringCommand" date="Mon Mar 28 10:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="6993176" timestamp2="6993176">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3104" _type="InsertStringCommand" date="Mon Mar 28 10:38:14 EDT 2022" starttimestamp="1648471300703" timestamp="6993305" timestamp2="6993305">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3106" _type="InsertStringCommand" date="Mon Mar 28 10:38:14 EDT 2022" starttimestamp="1648471300703" timestamp="6993495" timestamp2="6993495">
    <data><![CDATA[C]]></data>
  </Command>
  <DocumentChange __id="2993" _type="Insert" date="Mon Mar 28 10:37:46 EDT 2022" docASTNodeCount="800" docActiveCodeLength="5764" docExpressionCount="577" docLength="6256" length="49" offset="3108" repeat="41" starttimestamp="1648471300703" timestamp="6965727" timestamp2="6976306">
    <text><![CDATA[GIPC(ClientRemoteInterfaceGIPC aClient) {
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="3084" _type="Replace" date="Mon Mar 28 10:38:07 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5835" docExpressionCount="587" docLength="6327" endLine="82" insertionLength="73" int_docASTNodeCount="800" int_docActiveCodeLength="5762" int_docExpressionCount="577" int_docLength="6254" length="2" offset="3151" startLine="82" starttimestamp="1648471300703" timestamp="6986438">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		clientListRMI.add(aClient);
		System.out.println("Client registered");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3089" _type="Delete" date="Mon Mar 28 10:38:12 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5832" docExpressionCount="587" docLength="6324" endLine="76" length="3" offset="3007" repeat="3" startLine="76" starttimestamp="1648471300703" timestamp="6991859" timestamp2="6992178">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="3095" _type="Insert" date="Mon Mar 28 10:38:13 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5833" docExpressionCount="587" docLength="6325" length="1" offset="3007" starttimestamp="1648471300703" timestamp="6992700">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <DocumentChange __id="3097" _type="Delete" date="Mon Mar 28 10:38:13 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5832" docExpressionCount="587" docLength="6324" endLine="76" length="1" offset="3007" startLine="76" starttimestamp="1648471300703" timestamp="6992964">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <DocumentChange __id="3099" _type="Insert" date="Mon Mar 28 10:38:13 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5836" docExpressionCount="587" docLength="6328" length="4" offset="3007" repeat="4" starttimestamp="1648471300703" timestamp="6993052" timestamp2="6993489">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="3108" _type="PauseCommand" date="Mon Mar 28 10:38:24 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="7003786">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[10291]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="3107" _type="Delete" date="Mon Mar 28 10:38:24 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5832" docExpressionCount="587" docLength="6324" endLine="76" length="4" offset="3007" repeat="4" startLine="76" starttimestamp="1648471300703" timestamp="7003786" timestamp2="7004571">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="3109" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:24 EDT 2022" starttimestamp="1648471300703" timestamp="7003792" />
  <Command __id="3111" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:24 EDT 2022" starttimestamp="1648471300703" timestamp="7003934" />
  <Command __id="3113" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:24 EDT 2022" starttimestamp="1648471300703" timestamp="7004062" />
  <Command __id="3115" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:25 EDT 2022" starttimestamp="1648471300703" timestamp="7004575" />
  <Command __id="3117" _type="InsertStringCommand" date="Mon Mar 28 10:38:25 EDT 2022" starttimestamp="1648471300703" timestamp="7005078" timestamp2="7005078">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3119" _type="InsertStringCommand" date="Mon Mar 28 10:38:25 EDT 2022" starttimestamp="1648471300703" timestamp="7005265" timestamp2="7005265">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="3121" _type="InsertStringCommand" date="Mon Mar 28 10:38:26 EDT 2022" starttimestamp="1648471300703" timestamp="7005355" timestamp2="7005355">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3123" _type="PauseCommand" date="Mon Mar 28 10:38:27 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7006879">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1524]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3122" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:38:27 EDT 2022" starttimestamp="1648471300703" timestamp="7006879" />
  <Command __id="3124" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:38:27 EDT 2022" starttimestamp="1648471300703" timestamp="7006974" />
  <Command __id="3125" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:38:27 EDT 2022" starttimestamp="1648471300703" timestamp="7007019" />
  <Command __id="3127" _type="PauseCommand" date="Mon Mar 28 10:38:28 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7008081">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1062]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3126" _type="MoveCaretCommand" caretOffset="3165" date="Mon Mar 28 10:38:28 EDT 2022" docOffset="3165" starttimestamp="1648471300703" timestamp="7008081" />
  <Command __id="3128" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 10:38:29 EDT 2022" starttimestamp="1648471300703" timestamp="7008562" />
  <Command __id="3130" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:29 EDT 2022" starttimestamp="1648471300703" timestamp="7008811" />
  <Command __id="3132" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:29 EDT 2022" starttimestamp="1648471300703" timestamp="7008988" />
  <Command __id="3134" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:29 EDT 2022" starttimestamp="1648471300703" timestamp="7009128" />
  <Command __id="3136" _type="InsertStringCommand" date="Mon Mar 28 10:38:30 EDT 2022" starttimestamp="1648471300703" timestamp="7009461" timestamp2="7009461">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3138" _type="InsertStringCommand" date="Mon Mar 28 10:38:30 EDT 2022" starttimestamp="1648471300703" timestamp="7009610" timestamp2="7009610">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3140" _type="InsertStringCommand" date="Mon Mar 28 10:38:30 EDT 2022" starttimestamp="1648471300703" timestamp="7009718" timestamp2="7009718">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3142" _type="InsertStringCommand" date="Mon Mar 28 10:38:30 EDT 2022" starttimestamp="1648471300703" timestamp="7009878" timestamp2="7009878">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3144" _type="PauseCommand" date="Mon Mar 28 10:38:31 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7011100">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1222]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3143" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:38:31 EDT 2022" starttimestamp="1648471300703" timestamp="7011100" />
  <Command __id="3145" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:38:31 EDT 2022" starttimestamp="1648471300703" timestamp="7011203" />
  <Command __id="3146" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:38:31 EDT 2022" starttimestamp="1648471300703" timestamp="7011246" />
  <Command __id="3148" _type="PauseCommand" date="Mon Mar 28 10:38:33 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7012623">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1377]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3147" _type="SelectTextCommand" caretOffset="2925" date="Mon Mar 28 10:38:33 EDT 2022" end="2955" start="2925" starttimestamp="1648471300703" timestamp="7012623" />
  <Command __id="3150" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:33 EDT 2022" starttimestamp="1648471300703" timestamp="7012884" />
  <Command __id="3152" _type="PauseCommand" date="Mon Mar 28 10:38:36 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7015330">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2446]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <DocumentChange __id="3116" _type="Insert" date="Mon Mar 28 10:38:25 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5835" docExpressionCount="587" docLength="6327" length="3" offset="3007" repeat="3" starttimestamp="1648471300703" timestamp="7005069" timestamp2="7005351">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="3129" _type="Delete" date="Mon Mar 28 10:38:29 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5832" docExpressionCount="587" docLength="6324" endLine="82" length="3" offset="3163" repeat="3" startLine="82" starttimestamp="1648471300703" timestamp="7008806" timestamp2="7009125">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="3135" _type="Insert" date="Mon Mar 28 10:38:30 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5836" docExpressionCount="587" docLength="6328" length="4" offset="3163" repeat="4" starttimestamp="1648471300703" timestamp="7009456" timestamp2="7009872">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="3149" _type="Delete" date="Mon Mar 28 10:38:33 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5806" docExpressionCount="584" docLength="6298" endLine="74" length="30" offset="2925" startLine="74" starttimestamp="1648471300703" timestamp="7012879">
    <text><![CDATA[super.registerClient(aClient);]]></text>
  </DocumentChange>
  <Command __id="3151" _type="SelectTextCommand" caretOffset="2929" date="Mon Mar 28 10:38:36 EDT 2022" end="2963" start="2929" starttimestamp="1648471300703" timestamp="7015330" />
  <Command __id="3154" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:36 EDT 2022" starttimestamp="1648471300703" timestamp="7015616" />
  <Command __id="3157" _type="PauseCommand" date="Mon Mar 28 10:38:37 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7017079">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1463]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3156" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:37 EDT 2022" starttimestamp="1648471300703" timestamp="7017079" />
  <Command __id="3159" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:38 EDT 2022" starttimestamp="1648471300703" timestamp="7017591" />
  <Command __id="3161" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:38:38 EDT 2022" starttimestamp="1648471300703" timestamp="7017895" />
  <Command __id="3163" _type="PauseCommand" date="Mon Mar 28 10:38:40 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7019346">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1451]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3162" _type="MoveCaretCommand" caretOffset="2997" date="Mon Mar 28 10:38:40 EDT 2022" docOffset="2997" starttimestamp="1648471300703" timestamp="7019346" />
  <Command __id="3165" _type="InsertStringCommand" date="Mon Mar 28 10:38:40 EDT 2022" starttimestamp="1648471300703" timestamp="7019720" timestamp2="7019720">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3167" _type="InsertStringCommand" date="Mon Mar 28 10:38:41 EDT 2022" starttimestamp="1648471300703" timestamp="7020480" timestamp2="7020480">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3169" _type="InsertStringCommand" date="Mon Mar 28 10:38:41 EDT 2022" starttimestamp="1648471300703" timestamp="7020582" timestamp2="7020582">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="3171" _type="InsertStringCommand" date="Mon Mar 28 10:38:41 EDT 2022" starttimestamp="1648471300703" timestamp="7020697" timestamp2="7020697">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3173" _type="PauseCommand" date="Mon Mar 28 10:38:43 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7022412">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1715]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3172" _type="MoveCaretCommand" caretOffset="3159" date="Mon Mar 28 10:38:43 EDT 2022" docOffset="3159" starttimestamp="1648471300703" timestamp="7022412" />
  <Command __id="3174" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Mar 28 10:38:43 EDT 2022" starttimestamp="1648471300703" timestamp="7022816" />
  <Command __id="3175" _type="MoveCaretCommand" caretOffset="3159" date="Mon Mar 28 10:38:44 EDT 2022" docOffset="3159" starttimestamp="1648471300703" timestamp="7023763" />
  <Command __id="3176" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:38:44 EDT 2022" starttimestamp="1648471300703" timestamp="7024171" />
  <Command __id="3178" _type="InsertStringCommand" date="Mon Mar 28 10:38:45 EDT 2022" starttimestamp="1648471300703" timestamp="7024705" timestamp2="7024705">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3180" _type="InsertStringCommand" date="Mon Mar 28 10:38:45 EDT 2022" starttimestamp="1648471300703" timestamp="7025112" timestamp2="7025112">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3182" _type="InsertStringCommand" date="Mon Mar 28 10:38:46 EDT 2022" starttimestamp="1648471300703" timestamp="7025373" timestamp2="7025373">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3184" _type="InsertStringCommand" date="Mon Mar 28 10:38:46 EDT 2022" starttimestamp="1648471300703" timestamp="7025525" timestamp2="7025525">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3186" _type="InsertStringCommand" date="Mon Mar 28 10:38:46 EDT 2022" starttimestamp="1648471300703" timestamp="7025884" timestamp2="7025884">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3187" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:38:47 EDT 2022" starttimestamp="1648471300703" timestamp="7026538" />
  <Command __id="3188" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:38:47 EDT 2022" starttimestamp="1648471300703" timestamp="7026634" />
  <Command __id="3189" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:38:47 EDT 2022" starttimestamp="1648471300703" timestamp="7026671" />
  <DocumentChange __id="3153" _type="Delete" date="Mon Mar 28 10:38:36 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5802" docExpressionCount="584" docLength="6260" endLine="75" length="38" offset="2925" repeat="4" startLine="74" starttimestamp="1648471300703" timestamp="7015611" timestamp2="7017891">
    <text><![CDATA[
		// TODO Auto-generated method stub]]></text>
  </DocumentChange>
  <DocumentChange __id="3164" _type="Insert" date="Mon Mar 28 10:38:40 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5806" docExpressionCount="584" docLength="6264" length="4" offset="2997" repeat="4" starttimestamp="1648471300703" timestamp="7019716" timestamp2="7020694">
    <text><![CDATA[ RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="3177" _type="Insert" date="Mon Mar 28 10:38:45 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5811" docExpressionCount="584" docLength="6269" length="5" offset="3158" repeat="5" starttimestamp="1648471300703" timestamp="7024700" timestamp2="7025881">
    <text><![CDATA[ GIPC]]></text>
  </DocumentChange>
  <Command __id="3191" _type="PauseCommand" date="Mon Mar 28 10:39:16 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="7055474">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[28803]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3192" _type="MoveCaretCommand" caretOffset="4741" date="Mon Mar 28 10:39:16 EDT 2022" docOffset="4741" starttimestamp="1648471300703" timestamp="7055557" />
  <Command __id="3190" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:39:16 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6004" docExpressionCount="576" docLength="6585" projectName="A5" starttimestamp="1648471300703" timestamp="7055474">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3194" _type="PauseCommand" date="Mon Mar 28 10:39:57 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="7096791">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[41234]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3195" _type="MoveCaretCommand" caretOffset="3163" date="Mon Mar 28 10:39:57 EDT 2022" docOffset="3163" starttimestamp="1648471300703" timestamp="7096929" />
  <Command __id="3193" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:39:57 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5811" docExpressionCount="584" docLength="6269" projectName="A5" starttimestamp="1648471300703" timestamp="7096791">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶"), Diff(INSERT,"import client.ClientRemoteInterfaceGIPC;¶"), Diff(EQUAL,"import client.ClientRemoteInterfaceRMI;¶"), Diff(DELETE,""), Diff(EQUAL,"import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientList"), Diff(INSERT,"RMI"), Diff(EQUAL," = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	"), Diff(INSERT,"List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	"), Diff(EQUAL,"private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	"), Diff(DELETE,"@Override"), Diff(EQUAL,"¶	public void registerClient"), Diff(INSERT,"RMI"), Diff(EQUAL,"(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		"), Diff(DELETE,"// TODO Auto-generated method stub"), Diff(INSERT,"¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {"), Diff(EQUAL,"¶		clientList"), Diff(INSERT,"GIPC"), Diff(EQUAL,".add(aClient);¶		System.out.println("Client registered"), Diff(DELETE,"");¶		"), Diff(INSERT," GIPC");"), Diff(EQUAL,"¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{
	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();
	
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	
	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		
	}
	
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		gipcRegistry.rebind(SERVER_NAME, this);	
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <Command __id="3197" _type="PauseCommand" date="Mon Mar 28 10:40:00 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7099824">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2895]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3198" _type="MoveCaretCommand" caretOffset="114" date="Mon Mar 28 10:40:00 EDT 2022" docOffset="268" starttimestamp="1648471300703" timestamp="7100044" />
  <Command __id="3196" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:40:00 EDT 2022" docASTNodeCount="83" docActiveCodeLength="629" docExpressionCount="53" docLength="663" projectName="A5" starttimestamp="1648471300703" timestamp="7099824">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3200" _type="PauseCommand" date="Mon Mar 28 10:40:10 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7109924">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9880]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3201" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 10:40:10 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="7110127" />
  <Command __id="3203" _type="PauseCommand" date="Mon Mar 28 10:40:20 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7120106">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9979]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3202" _type="MoveCaretCommand" caretOffset="2775" date="Mon Mar 28 10:40:20 EDT 2022" docOffset="4092" starttimestamp="1648471300703" timestamp="7120106" />
  <Command __id="3205" _type="InsertStringCommand" date="Mon Mar 28 10:40:21 EDT 2022" starttimestamp="1648471300703" timestamp="7121013" timestamp2="7121013">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3206" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Mar 28 10:40:22 EDT 2022" starttimestamp="1648471300703" timestamp="7121664" />
  <Command __id="3199" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:40:10 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6004" docExpressionCount="576" docLength="6585" projectName="A5" starttimestamp="1648471300703" timestamp="7109924">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3204" _type="Insert" date="Mon Mar 28 10:40:21 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6008" docExpressionCount="576" docLength="6589" length="4" offset="4092" starttimestamp="1648471300703" timestamp="7120995">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="3208" _type="PauseCommand" date="Mon Mar 28 10:40:24 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7123628">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1964]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3209" _type="InsertStringCommand" date="Mon Mar 28 10:40:24 EDT 2022" starttimestamp="1648471300703" timestamp="7123631" timestamp2="7123631">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="3211" _type="InsertStringCommand" date="Mon Mar 28 10:40:25 EDT 2022" starttimestamp="1648471300703" timestamp="7124382" timestamp2="7124382">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3213" _type="InsertStringCommand" date="Mon Mar 28 10:40:25 EDT 2022" starttimestamp="1648471300703" timestamp="7124891" timestamp2="7124891">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3215" _type="InsertStringCommand" date="Mon Mar 28 10:40:25 EDT 2022" starttimestamp="1648471300703" timestamp="7125027" timestamp2="7125027">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3217" _type="InsertStringCommand" date="Mon Mar 28 10:40:26 EDT 2022" starttimestamp="1648471300703" timestamp="7125378" timestamp2="7125378">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3219" _type="InsertStringCommand" date="Mon Mar 28 10:40:26 EDT 2022" starttimestamp="1648471300703" timestamp="7125732" timestamp2="7125732">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3221" _type="InsertStringCommand" date="Mon Mar 28 10:40:26 EDT 2022" starttimestamp="1648471300703" timestamp="7125861" timestamp2="7125861">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3223" _type="InsertStringCommand" date="Mon Mar 28 10:40:26 EDT 2022" starttimestamp="1648471300703" timestamp="7126031" timestamp2="7126031">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3225" _type="InsertStringCommand" date="Mon Mar 28 10:40:26 EDT 2022" starttimestamp="1648471300703" timestamp="7126148" timestamp2="7126148">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3227" _type="InsertStringCommand" date="Mon Mar 28 10:40:26 EDT 2022" starttimestamp="1648471300703" timestamp="7126281" timestamp2="7126281">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3229" _type="InsertStringCommand" date="Mon Mar 28 10:40:27 EDT 2022" starttimestamp="1648471300703" timestamp="7126644" timestamp2="7126644">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3231" _type="InsertStringCommand" date="Mon Mar 28 10:40:27 EDT 2022" starttimestamp="1648471300703" timestamp="7126996" timestamp2="7126996">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3233" _type="InsertStringCommand" date="Mon Mar 28 10:40:28 EDT 2022" starttimestamp="1648471300703" timestamp="7127331" timestamp2="7127331">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3235" _type="InsertStringCommand" date="Mon Mar 28 10:40:28 EDT 2022" starttimestamp="1648471300703" timestamp="7127446" timestamp2="7127446">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3237" _type="InsertStringCommand" date="Mon Mar 28 10:40:28 EDT 2022" starttimestamp="1648471300703" timestamp="7127595" timestamp2="7127595">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3239" _type="InsertStringCommand" date="Mon Mar 28 10:40:28 EDT 2022" starttimestamp="1648471300703" timestamp="7127852" timestamp2="7127852">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3241" _type="InsertStringCommand" date="Mon Mar 28 10:40:28 EDT 2022" starttimestamp="1648471300703" timestamp="7128212" timestamp2="7128212">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3243" _type="InsertStringCommand" date="Mon Mar 28 10:40:29 EDT 2022" starttimestamp="1648471300703" timestamp="7128430" timestamp2="7128430">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3245" _type="InsertStringCommand" date="Mon Mar 28 10:40:29 EDT 2022" starttimestamp="1648471300703" timestamp="7128531" timestamp2="7128531">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3247" _type="InsertStringCommand" date="Mon Mar 28 10:40:29 EDT 2022" starttimestamp="1648471300703" timestamp="7128720" timestamp2="7128720">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3249" _type="InsertStringCommand" date="Mon Mar 28 10:40:29 EDT 2022" starttimestamp="1648471300703" timestamp="7128893" timestamp2="7128893">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3251" _type="InsertStringCommand" date="Mon Mar 28 10:40:29 EDT 2022" starttimestamp="1648471300703" timestamp="7129027" timestamp2="7129027">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3254" _type="PauseCommand" date="Mon Mar 28 10:40:30 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7130077">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1050]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3253" _type="InsertStringCommand" date="Mon Mar 28 10:40:30 EDT 2022" starttimestamp="1648471300703" timestamp="7130077" timestamp2="7130077">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3256" _type="InsertStringCommand" date="Mon Mar 28 10:40:30 EDT 2022" starttimestamp="1648471300703" timestamp="7130234" timestamp2="7130234">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3258" _type="InsertStringCommand" date="Mon Mar 28 10:40:31 EDT 2022" starttimestamp="1648471300703" timestamp="7130698" timestamp2="7130698">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3260" _type="InsertStringCommand" date="Mon Mar 28 10:40:31 EDT 2022" starttimestamp="1648471300703" timestamp="7130835" timestamp2="7130835">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3262" _type="InsertStringCommand" date="Mon Mar 28 10:40:31 EDT 2022" starttimestamp="1648471300703" timestamp="7131164" timestamp2="7131164">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3264" _type="InsertStringCommand" date="Mon Mar 28 10:40:32 EDT 2022" starttimestamp="1648471300703" timestamp="7131346" timestamp2="7131346">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3266" _type="InsertStringCommand" date="Mon Mar 28 10:40:32 EDT 2022" starttimestamp="1648471300703" timestamp="7131686" timestamp2="7131686">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3268" _type="InsertStringCommand" date="Mon Mar 28 10:40:32 EDT 2022" starttimestamp="1648471300703" timestamp="7131924" timestamp2="7131924">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3270" _type="InsertStringCommand" date="Mon Mar 28 10:40:32 EDT 2022" starttimestamp="1648471300703" timestamp="7132076" timestamp2="7132076">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3272" _type="InsertStringCommand" date="Mon Mar 28 10:40:32 EDT 2022" starttimestamp="1648471300703" timestamp="7132272" timestamp2="7132272">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3274" _type="InsertStringCommand" date="Mon Mar 28 10:40:33 EDT 2022" starttimestamp="1648471300703" timestamp="7132444" timestamp2="7132444">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3276" _type="InsertStringCommand" date="Mon Mar 28 10:40:33 EDT 2022" starttimestamp="1648471300703" timestamp="7132495" timestamp2="7132495">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3278" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:40:33 EDT 2022" starttimestamp="1648471300703" timestamp="7132991" />
  <Command __id="3280" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:40:33 EDT 2022" starttimestamp="1648471300703" timestamp="7133153" />
  <Command __id="3282" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:40:34 EDT 2022" starttimestamp="1648471300703" timestamp="7133662" />
  <Command __id="3284" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:40:34 EDT 2022" starttimestamp="1648471300703" timestamp="7133692" />
  <Command __id="3286" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:40:34 EDT 2022" starttimestamp="1648471300703" timestamp="7133720" />
  <Command __id="3288" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:40:34 EDT 2022" starttimestamp="1648471300703" timestamp="7133750" />
  <Command __id="3290" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:40:34 EDT 2022" starttimestamp="1648471300703" timestamp="7133781" />
  <Command __id="3292" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:40:34 EDT 2022" starttimestamp="1648471300703" timestamp="7133812" />
  <Command __id="3294" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:40:34 EDT 2022" starttimestamp="1648471300703" timestamp="7133845" />
  <Command __id="3296" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:40:34 EDT 2022" starttimestamp="1648471300703" timestamp="7134137" />
  <Command __id="3298" _type="PauseCommand" date="Mon Mar 28 10:41:03 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="7163143">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[29006]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3297" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:41:03 EDT 2022" starttimestamp="1648471300703" timestamp="7163143" />
  <Command __id="3299" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:41:03 EDT 2022" starttimestamp="1648471300703" timestamp="7163240" />
  <Command __id="3300" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:41:03 EDT 2022" starttimestamp="1648471300703" timestamp="7163275" />
  <Command __id="3302" _type="PauseCommand" date="Mon Mar 28 10:41:12 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7171452">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8177]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3301" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Mar 28 10:41:12 EDT 2022" starttimestamp="1648471300703" timestamp="7171452" />
  <Command __id="3304" _type="PauseCommand" date="Mon Mar 28 10:41:13 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7173281">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1829]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3303" _type="ShellCommand" date="Mon Mar 28 10:41:13 EDT 2022" starttimestamp="1648471300703" timestamp="7173281" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3306" _type="PauseCommand" date="Mon Mar 28 10:41:35 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="7195095">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[21814]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3305" _type="ShellCommand" date="Mon Mar 28 10:41:35 EDT 2022" starttimestamp="1648471300703" timestamp="7195095" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="3207" _type="Insert" date="Mon Mar 28 10:40:24 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6022" docExpressionCount="576" docLength="6633" length="44" offset="4092" repeat="34" starttimestamp="1648471300703" timestamp="7123628" timestamp2="7132490">
    <text><![CDATA[		
		//Locate GIPC Server
		
		//Register]]></text>
  </DocumentChange>
  <DocumentChange __id="3277" _type="Delete" date="Mon Mar 28 10:40:33 EDT 2022" docASTNodeCount="804" docActiveCodeLength="6022" docExpressionCount="576" docLength="6623" endLine="108" length="10" offset="4126" repeat="10" startLine="108" starttimestamp="1648471300703" timestamp="7132988" timestamp2="7134134">
    <text><![CDATA[//Register]]></text>
  </DocumentChange>
  <Command __id="3308" _type="PauseCommand" date="Mon Mar 28 10:41:37 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7196371">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1276]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3309" _type="PasteCommand" date="Mon Mar 28 10:41:37 EDT 2022" starttimestamp="1648471300703" timestamp="7196380" />
  <Command __id="3311" _type="PauseCommand" date="Mon Mar 28 10:41:38 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7197634">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1254]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3310" _type="MoveCaretCommand" caretOffset="2874" date="Mon Mar 28 10:41:38 EDT 2022" docOffset="4191" starttimestamp="1648471300703" timestamp="7197634" />
  <Command __id="3313" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:41:38 EDT 2022" starttimestamp="1648471300703" timestamp="7198089" />
  <Command __id="3315" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:41:38 EDT 2022" starttimestamp="1648471300703" timestamp="7198254" />
  <Command __id="3317" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:41:39 EDT 2022" starttimestamp="1648471300703" timestamp="7198442" />
  <Command __id="3319" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:41:39 EDT 2022" starttimestamp="1648471300703" timestamp="7198772" />
  <Command __id="3321" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:41:39 EDT 2022" starttimestamp="1648471300703" timestamp="7199092" />
  <Command __id="3323" _type="InsertStringCommand" date="Mon Mar 28 10:41:40 EDT 2022" starttimestamp="1648471300703" timestamp="7199979" timestamp2="7199979">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3324" _type="BalloonCommand" date="Mon Mar 28 10:41:40 EDT 2022" message="*******************************************
Worked 34 minutes(fixed)/47 minutes(context based) from
Mon Mar 28 09:41:40 EDT 2022 to Mon Mar 28 10:41:40 EDT 2022
Edited 1 Projects: 
	A5
Edited 4 Files: 
	C:\Users\mannu\COMP_533\A5\src\server\Server.java
	C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java
	C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObject.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java
Number of insert: 1413
Number of delete: 1424
" starttimestamp="1648471300703" timestamp="7200165">
    <fineGrainedWorkTime><![CDATA[47]]></fineGrainedWorkTime>
    <insert><![CDATA[1413]]></insert>
    <startTime><![CDATA[1648474900869]]></startTime>
    <endTime><![CDATA[1648478500682]]></endTime>
    <workTime><![CDATA[34]]></workTime>
    <delete><![CDATA[1424]]></delete>
  </Command>
  <Command __id="3326" _type="PauseCommand" date="Mon Mar 28 10:41:47 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7206704">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[6539]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3325" _type="ShellCommand" date="Mon Mar 28 10:41:47 EDT 2022" starttimestamp="1648471300703" timestamp="7206704" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3327" _type="ShellCommand" date="Mon Mar 28 10:41:47 EDT 2022" starttimestamp="1648471300703" timestamp="7206848" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="3307" _type="Replace" date="Mon Mar 28 10:41:37 EDT 2022" docASTNodeCount="813" docActiveCodeLength="6117" docExpressionCount="584" docLength="6718" endLine="107" insertionLength="97" int_docASTNodeCount="804" int_docActiveCodeLength="6020" int_docExpressionCount="576" int_docLength="6621" length="2" offset="4120" startLine="107" starttimestamp="1648471300703" timestamp="7196371">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_HOST_NAME,
				SERVER_PORT, aClientName);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3312" _type="Delete" date="Mon Mar 28 10:41:38 EDT 2022" docASTNodeCount="813" docActiveCodeLength="6111" docExpressionCount="584" docLength="6712" endLine="108" length="6" offset="4185" repeat="5" startLine="107" starttimestamp="1648471300703" timestamp="7198086" timestamp2="7199087">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="3322" _type="Insert" date="Mon Mar 28 10:41:40 EDT 2022" docASTNodeCount="813" docActiveCodeLength="6112" docExpressionCount="584" docLength="6713" length="1" offset="4185" starttimestamp="1648471300703" timestamp="7199973">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="3328" _type="Delete" date="Mon Mar 28 10:41:47 EDT 2022" docASTNodeCount="805" docActiveCodeLength="6023" docExpressionCount="576" docLength="6624" endLine="107" length="89" offset="4122" startLine="107" starttimestamp="1648471300703" timestamp="7206875">
    <text><![CDATA[gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_HOST_NAME, SERVER_PORT, aClientName)]]></text>
  </DocumentChange>
  <DocumentChange __id="3329" _type="Insert" date="Mon Mar 28 10:41:47 EDT 2022" docASTNodeCount="815" docActiveCodeLength="6119" docExpressionCount="584" docLength="6720" length="96" offset="4122" repeat="5" starttimestamp="1648471300703" timestamp="7206877" timestamp2="7206882">
    <text><![CDATA[Object gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_HOST_NAME, SERVER_PORT, aClientName)]]></text>
  </DocumentChange>
  <Command __id="3335" _type="PauseCommand" date="Mon Mar 28 10:41:49 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7208434">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1557]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3341" _type="UndoCommand" date="Mon Mar 28 10:41:49 EDT 2022" starttimestamp="1648471300703" timestamp="7208477" />
  <DocumentChange __id="3334" _type="Delete" date="Mon Mar 28 10:41:49 EDT 2022" docASTNodeCount="805" docActiveCodeLength="6023" docExpressionCount="576" docLength="6624" endLine="107" length="96" offset="4122" repeat="5" startLine="107" starttimestamp="1648471300703" timestamp="7208434" timestamp2="7208463">
    <text><![CDATA[Object gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_HOST_NAME, SERVER_PORT, aClientName)]]></text>
  </DocumentChange>
  <DocumentChange __id="3340" _type="Insert" date="Mon Mar 28 10:41:49 EDT 2022" docASTNodeCount="813" docActiveCodeLength="6112" docExpressionCount="584" docLength="6713" length="89" offset="4122" starttimestamp="1648471300703" timestamp="7208469">
    <text><![CDATA[gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_HOST_NAME, SERVER_PORT, aClientName)]]></text>
  </DocumentChange>
  <Command __id="3343" _type="PauseCommand" date="Mon Mar 28 10:41:53 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7212432">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[3955]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3344" _type="MoveCaretCommand" caretOffset="545" date="Mon Mar 28 10:41:53 EDT 2022" docOffset="545" starttimestamp="1648471300703" timestamp="7212524" />
  <Command __id="3342" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:41:53 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="741" projectName="A5" starttimestamp="1648471300703" timestamp="7212432">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶"), Diff(INSERT,"import server.remote.ServerRemoteObjectGIPC;¶"), Diff(EQUAL,"import server.remote.ServerRemoteObjectRMI;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		"), Diff(INSERT,"//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc¶		"), Diff(EQUAL,"final ServerRemoteInterfaceRMI server = new ServerRemoteObject"), Diff(DELETE,"RMI"), Diff(INSERT,"GIPC"), Diff(EQUAL,"();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {
	
	
	public static void main(final String[] args) {
		
		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc
		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();

		
		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	


}
]]></snapshot>
  </Command>
  <Command __id="3346" _type="PauseCommand" date="Mon Mar 28 10:41:54 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7213997">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1473]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3347" _type="MoveCaretCommand" caretOffset="3163" date="Mon Mar 28 10:41:54 EDT 2022" docOffset="3163" starttimestamp="1648471300703" timestamp="7214081" />
  <Command __id="3345" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:41:54 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5811" docExpressionCount="584" docLength="6269" projectName="A5" starttimestamp="1648471300703" timestamp="7213997">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3349" _type="PauseCommand" date="Mon Mar 28 10:41:57 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7216736">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2655]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3350" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 10:41:57 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="7216837" />
  <Command __id="3348" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:41:57 EDT 2022" docASTNodeCount="115" docActiveCodeLength="846" docExpressionCount="68" docLength="846" projectName="A5" starttimestamp="1648471300703" timestamp="7216736">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3352" _type="PauseCommand" date="Mon Mar 28 10:41:58 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7217895">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1058]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3351" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:41:58 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5811" docExpressionCount="584" docLength="6269" projectName="A5" starttimestamp="1648471300703" timestamp="7217895">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3353" _type="MoveCaretCommand" caretOffset="3163" date="Mon Mar 28 10:41:58 EDT 2022" docOffset="3163" starttimestamp="1648471300703" timestamp="7218025" />
  <Command __id="3355" _type="MoveCaretCommand" caretOffset="2805" date="Mon Mar 28 10:41:59 EDT 2022" docOffset="4122" starttimestamp="1648471300703" timestamp="7218823" />
  <Command __id="3354" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:41:59 EDT 2022" docASTNodeCount="813" docActiveCodeLength="6112" docExpressionCount="584" docLength="6713" projectName="A5" starttimestamp="1648471300703" timestamp="7218719">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶"), Diff(INSERT,"		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_HOST_NAME, SERVER_PORT, aClientName);¶		¶		"), Diff(EQUAL,"¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_HOST_NAME, SERVER_PORT, aClientName);
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="3357" _type="PauseCommand" date="Mon Mar 28 10:42:06 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7225482">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6659]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3358" _type="MoveCaretCommand" caretOffset="3163" date="Mon Mar 28 10:42:06 EDT 2022" docOffset="3163" starttimestamp="1648471300703" timestamp="7225560" />
  <Command __id="3360" _type="PauseCommand" date="Mon Mar 28 10:42:15 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7234621">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9061]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3359" _type="SelectTextCommand" caretOffset="1806" date="Mon Mar 28 10:42:15 EDT 2022" end="1888" start="1806" starttimestamp="1648471300703" timestamp="7234621" />
  <Command __id="3361" _type="SelectTextCommand" caretOffset="1806" date="Mon Mar 28 10:42:15 EDT 2022" end="1888" start="1806" starttimestamp="1648471300703" timestamp="7234621" />
  <Command __id="3362" _type="CopyCommand" date="Mon Mar 28 10:42:15 EDT 2022" starttimestamp="1648471300703" timestamp="7234751" />
  <Command __id="3356" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:42:06 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5811" docExpressionCount="584" docLength="6269" projectName="A5" starttimestamp="1648471300703" timestamp="7225482">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3364" _type="PauseCommand" date="Mon Mar 28 10:42:16 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7236076">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1325]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3365" _type="MoveCaretCommand" caretOffset="545" date="Mon Mar 28 10:42:16 EDT 2022" docOffset="545" starttimestamp="1648471300703" timestamp="7236161" />
  <Command __id="3363" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:42:16 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="741" projectName="A5" starttimestamp="1648471300703" timestamp="7236076">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3367" _type="PauseCommand" date="Mon Mar 28 10:42:19 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7238694">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2533]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3368" _type="MoveCaretCommand" caretOffset="2805" date="Mon Mar 28 10:42:19 EDT 2022" docOffset="4122" starttimestamp="1648471300703" timestamp="7238784" />
  <Command __id="3370" _type="PauseCommand" date="Mon Mar 28 10:42:22 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7242061">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3277]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3369" _type="MoveCaretCommand" caretOffset="740" date="Mon Mar 28 10:42:22 EDT 2022" docOffset="2057" starttimestamp="1648471300703" timestamp="7242061" />
  <Command __id="3372" _type="InsertStringCommand" date="Mon Mar 28 10:42:23 EDT 2022" starttimestamp="1648471300703" timestamp="7242354" timestamp2="7242354">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3374" _type="InsertStringCommand" date="Mon Mar 28 10:42:23 EDT 2022" starttimestamp="1648471300703" timestamp="7242463" timestamp2="7242463">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3376" _type="InsertStringCommand" date="Mon Mar 28 10:42:23 EDT 2022" starttimestamp="1648471300703" timestamp="7243004" timestamp2="7243004">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3378" _type="InsertStringCommand" date="Mon Mar 28 10:42:23 EDT 2022" starttimestamp="1648471300703" timestamp="7243135" timestamp2="7243135">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3380" _type="InsertStringCommand" date="Mon Mar 28 10:42:24 EDT 2022" starttimestamp="1648471300703" timestamp="7243546" timestamp2="7243546">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3382" _type="InsertStringCommand" date="Mon Mar 28 10:42:24 EDT 2022" starttimestamp="1648471300703" timestamp="7243924" timestamp2="7243924">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="3384" _type="InsertStringCommand" date="Mon Mar 28 10:42:24 EDT 2022" starttimestamp="1648471300703" timestamp="7244058" timestamp2="7244058">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3388" _type="PasteCommand" date="Mon Mar 28 10:42:25 EDT 2022" starttimestamp="1648471300703" timestamp="7244569" />
  <Command __id="3389" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:42:25 EDT 2022" starttimestamp="1648471300703" timestamp="7244913" />
  <Command __id="3390" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:42:25 EDT 2022" starttimestamp="1648471300703" timestamp="7245012" />
  <Command __id="3391" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:42:25 EDT 2022" starttimestamp="1648471300703" timestamp="7245057" />
  <Command __id="3393" _type="PauseCommand" date="Mon Mar 28 10:42:33 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7252843">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7786]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3392" _type="ShellCommand" date="Mon Mar 28 10:42:33 EDT 2022" starttimestamp="1648471300703" timestamp="7252843" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3394" _type="ShellCommand" date="Mon Mar 28 10:42:33 EDT 2022" starttimestamp="1648471300703" timestamp="7252985" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3398" _type="PauseCommand" date="Mon Mar 28 10:42:39 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7258444">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[5438]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3397" _type="ShellCommand" date="Mon Mar 28 10:42:39 EDT 2022" starttimestamp="1648471300703" timestamp="7258444" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3400" _type="PauseCommand" date="Mon Mar 28 10:43:10 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="7289420">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[30976]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3399" _type="ShellCommand" date="Mon Mar 28 10:43:10 EDT 2022" starttimestamp="1648471300703" timestamp="7289420" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3401" _type="MoveCaretCommand" caretOffset="2998" date="Mon Mar 28 10:43:10 EDT 2022" docOffset="4393" starttimestamp="1648471300703" timestamp="7289527" />
  <Command __id="3403" _type="PauseCommand" date="Mon Mar 28 10:43:23 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="7302882">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13355]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3402" _type="MoveCaretCommand" caretOffset="2109" date="Mon Mar 28 10:43:23 EDT 2022" docOffset="3504" starttimestamp="1648471300703" timestamp="7302882" />
  <Command __id="3405" _type="InsertStringCommand" date="Mon Mar 28 10:43:23 EDT 2022" starttimestamp="1648471300703" timestamp="7303251" timestamp2="7303251">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3407" _type="InsertStringCommand" date="Mon Mar 28 10:43:24 EDT 2022" starttimestamp="1648471300703" timestamp="7303401" timestamp2="7303401">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3409" _type="PauseCommand" date="Mon Mar 28 10:43:26 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7305793">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2392]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3408" _type="SelectTextCommand" caretOffset="2069" date="Mon Mar 28 10:43:26 EDT 2022" end="2109" start="2069" starttimestamp="1648471300703" timestamp="7305793" />
  <Command __id="3410" _type="CopyCommand" date="Mon Mar 28 10:43:26 EDT 2022" starttimestamp="1648471300703" timestamp="7306038" />
  <Command __id="3411" _type="MoveCaretCommand" caretOffset="2113" date="Mon Mar 28 10:43:27 EDT 2022" docOffset="3508" starttimestamp="1648471300703" timestamp="7306495" />
  <Command __id="3413" _type="PasteCommand" date="Mon Mar 28 10:43:27 EDT 2022" starttimestamp="1648471300703" timestamp="7306633" />
  <Command __id="3415" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:27 EDT 2022" starttimestamp="1648471300703" timestamp="7307191" />
  <Command __id="3417" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7307697" />
  <Command __id="3419" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7307725" />
  <Command __id="3421" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7307754" />
  <Command __id="3423" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7307784" />
  <Command __id="3425" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7307815" />
  <Command __id="3427" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7307845" />
  <Command __id="3429" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7307876" />
  <Command __id="3431" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7307908" />
  <Command __id="3433" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7307936" />
  <Command __id="3435" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7307966" />
  <Command __id="3437" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7307996" />
  <Command __id="3439" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7308029" />
  <Command __id="3441" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7308058" />
  <Command __id="3443" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7308092" />
  <Command __id="3445" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7308118" />
  <Command __id="3447" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7308150" />
  <Command __id="3449" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7308179" />
  <Command __id="3451" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7308211" />
  <Command __id="3453" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7308241" />
  <Command __id="3455" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:28 EDT 2022" starttimestamp="1648471300703" timestamp="7308273" />
  <Command __id="3457" _type="InsertStringCommand" date="Mon Mar 28 10:43:29 EDT 2022" starttimestamp="1648471300703" timestamp="7308870" timestamp2="7308870">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3458" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:43:29 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="7308873" />
  <Command __id="3463" _type="PauseCommand" date="Mon Mar 28 10:43:41 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="7320535">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[11662]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3462" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:43:41 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="7320535" />
  <Command __id="3465" _type="InsertStringCommand" date="Mon Mar 28 10:43:41 EDT 2022" starttimestamp="1648471300703" timestamp="7320593" timestamp2="7320593">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3366" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:42:19 EDT 2022" docASTNodeCount="813" docActiveCodeLength="6112" docExpressionCount="584" docLength="6713" projectName="A5" starttimestamp="1648471300703" timestamp="7238694">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_HOST_NAME, SERVER_PORT, aClientName);¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3371" _type="Insert" date="Mon Mar 28 10:42:23 EDT 2022" docASTNodeCount="813" docActiveCodeLength="6121" docExpressionCount="584" docLength="6726" length="13" offset="2057" repeat="7" starttimestamp="1648471300703" timestamp="7242335" timestamp2="7244047">
    <text><![CDATA[
	
	//A5
	]]></text>
  </DocumentChange>
  <DocumentChange __id="3385" _type="Replace" date="Mon Mar 28 10:42:25 EDT 2022" docASTNodeCount="826" docActiveCodeLength="6203" docExpressionCount="587" docLength="6808" endLine="51" insertionLength="83" int_docASTNodeCount="813" int_docActiveCodeLength="6120" int_docExpressionCount="584" int_docLength="6725" length="1" offset="2069" startLine="51" starttimestamp="1648471300703" timestamp="7244442">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3386" _type="Insert" date="Mon Mar 28 10:42:25 EDT 2022" docASTNodeCount="832" docActiveCodeLength="6239" docExpressionCount="592" docLength="6844" length="36" offset="573" repeat="2" starttimestamp="1648471300703" timestamp="7244518" timestamp2="7244519">
    <text><![CDATA[
import inputport.rpc.GIPCRegistry;]]></text>
  </DocumentChange>
  <DocumentChange __id="3395" _type="Insert" date="Mon Mar 28 10:42:33 EDT 2022" docASTNodeCount="838" docActiveCodeLength="6281" docExpressionCount="597" docLength="6886" length="42" offset="573" repeat="2" starttimestamp="1648471300703" timestamp="7253006" timestamp2="7253007">
    <text><![CDATA[
import inputport.rpc.GIPCLocateRegistry;]]></text>
  </DocumentChange>
  <DocumentChange __id="3404" _type="Insert" date="Mon Mar 28 10:43:23 EDT 2022" docASTNodeCount="838" docActiveCodeLength="6289" docExpressionCount="597" docLength="6894" length="8" offset="3504" repeat="2" starttimestamp="1648471300703" timestamp="7303229" timestamp2="7303395">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3412" _type="Replace" date="Mon Mar 28 10:43:27 EDT 2022" docASTNodeCount="843" docActiveCodeLength="6329" docExpressionCount="601" docLength="6934" endLine="81" insertionLength="42" int_docASTNodeCount="838" int_docActiveCodeLength="6287" int_docExpressionCount="597" int_docLength="6892" length="2" offset="3506" startLine="81" starttimestamp="1648471300703" timestamp="7306629">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ClientArgsProcessor.getClientName(args);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3414" _type="Delete" date="Mon Mar 28 10:43:27 EDT 2022" docASTNodeCount="840" docActiveCodeLength="6308" docExpressionCount="598" docLength="6913" endLine="81" length="21" offset="3527" repeat="21" startLine="81" starttimestamp="1648471300703" timestamp="7307185" timestamp2="7308269">
    <text><![CDATA[.getClientName(args);]]></text>
  </DocumentChange>
  <DocumentChange __id="3456" _type="Insert" date="Mon Mar 28 10:43:29 EDT 2022" docASTNodeCount="842" docActiveCodeLength="6312" docExpressionCount="600" docLength="6917" length="4" offset="3527" repeat="4" starttimestamp="1648471300703" timestamp="7308865" timestamp2="7309584">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <DocumentChange __id="3464" _type="Replace" date="Mon Mar 28 10:43:41 EDT 2022" docASTNodeCount="843" docActiveCodeLength="6326" docExpressionCount="601" docLength="6931" endLine="81" insertionLength="17" int_docASTNodeCount="840" int_docActiveCodeLength="6309" int_docExpressionCount="598" int_docLength="6914" length="3" offset="3528" startLine="81" starttimestamp="1648471300703" timestamp="7320540">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getGIPCPort(args)]]></insertedText>
  </DocumentChange>
  <Command __id="3467" _type="PauseCommand" date="Mon Mar 28 10:43:49 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7328483">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[7890]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3468" _type="UndoCommand" date="Mon Mar 28 10:43:49 EDT 2022" starttimestamp="1648471300703" timestamp="7328512" />
  <DocumentChange __id="3466" _type="Replace" date="Mon Mar 28 10:43:49 EDT 2022" docASTNodeCount="842" docActiveCodeLength="6312" docExpressionCount="600" docLength="6917" endLine="81" insertionLength="3" int_docASTNodeCount="840" int_docActiveCodeLength="6309" int_docExpressionCount="598" int_docLength="6914" length="17" offset="3528" startLine="81" starttimestamp="1648471300703" timestamp="7328483">
    <deletedText><![CDATA[getGIPCPort(args)]]></deletedText>
    <insertedText><![CDATA[get]]></insertedText>
  </DocumentChange>
  <Command __id="3470" _type="PauseCommand" date="Mon Mar 28 10:43:50 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7329685">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1173]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="3469" _type="Delete" date="Mon Mar 28 10:43:50 EDT 2022" docASTNodeCount="840" docActiveCodeLength="6308" docExpressionCount="598" docLength="6913" endLine="81" length="4" offset="3527" repeat="2" startLine="81" starttimestamp="1648471300703" timestamp="7329685" timestamp2="7330039">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <Command __id="3471" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:50 EDT 2022" starttimestamp="1648471300703" timestamp="7329691" />
  <Command __id="3473" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:43:50 EDT 2022" starttimestamp="1648471300703" timestamp="7330041" />
  <Command __id="3475" _type="InsertStringCommand" date="Mon Mar 28 10:43:51 EDT 2022" starttimestamp="1648471300703" timestamp="7330558" timestamp2="7330558">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3476" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:43:51 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="7330562" />
  <Command __id="3480" _type="PauseCommand" date="Mon Mar 28 10:44:19 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="7359144">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[28582]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3479" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:44:19 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="7359144" />
  <Command __id="3481" _type="MoveCaretCommand" caretOffset="2113" date="Mon Mar 28 10:44:19 EDT 2022" docOffset="3508" starttimestamp="1648471300703" timestamp="7359235" />
  <Command __id="3483" _type="PauseCommand" date="Mon Mar 28 10:44:25 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7365132">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5897]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <DocumentChange __id="3474" _type="Insert" date="Mon Mar 28 10:43:51 EDT 2022" docASTNodeCount="842" docActiveCodeLength="6311" docExpressionCount="600" docLength="6916" length="3" offset="3527" repeat="3" starttimestamp="1648471300703" timestamp="7330553" timestamp2="7331063">
    <text><![CDATA[.ge]]></text>
  </DocumentChange>
  <DocumentChange __id="3484" _type="Replace" date="Mon Mar 28 10:44:26 EDT 2022" docASTNodeCount="838" docActiveCodeLength="6289" docExpressionCount="597" docLength="6894" endLine="81" insertionLength="2" int_docASTNodeCount="838" int_docActiveCodeLength="6287" int_docExpressionCount="597" int_docLength="6892" length="24" offset="3506" startLine="81" starttimestamp="1648471300703" timestamp="7365479">
    <deletedText><![CDATA[		ClientArgsProcessor.ge]]></deletedText>
    <insertedText><![CDATA[
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3486" _type="Insert" date="Mon Mar 28 10:44:26 EDT 2022" docASTNodeCount="838" docActiveCodeLength="6297" docExpressionCount="597" docLength="6906" length="12" offset="3508" repeat="6" starttimestamp="1648471300703" timestamp="7365654" timestamp2="7367771">
    <text><![CDATA[
		//A%
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3498" _type="Delete" date="Mon Mar 28 10:44:28 EDT 2022" docASTNodeCount="838" docActiveCodeLength="6293" docExpressionCount="597" docLength="6901" endLine="84" length="5" offset="3515" repeat="4" startLine="83" starttimestamp="1648471300703" timestamp="7368100" timestamp2="7368792">
    <text><![CDATA[%
		]]></text>
  </DocumentChange>
  <Command __id="3482" _type="SelectTextCommand" caretOffset="2113" date="Mon Mar 28 10:44:25 EDT 2022" end="2135" start="2113" starttimestamp="1648471300703" timestamp="7365132" />
  <Command __id="3485" _type="InsertStringCommand" date="Mon Mar 28 10:44:26 EDT 2022" starttimestamp="1648471300703" timestamp="7365496" timestamp2="7365496">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3487" _type="InsertStringCommand" date="Mon Mar 28 10:44:26 EDT 2022" starttimestamp="1648471300703" timestamp="7365660" timestamp2="7365660">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3489" _type="InsertStringCommand" date="Mon Mar 28 10:44:26 EDT 2022" starttimestamp="1648471300703" timestamp="7366185" timestamp2="7366185">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3491" _type="InsertStringCommand" date="Mon Mar 28 10:44:27 EDT 2022" starttimestamp="1648471300703" timestamp="7366318" timestamp2="7366318">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3493" _type="InsertStringCommand" date="Mon Mar 28 10:44:27 EDT 2022" starttimestamp="1648471300703" timestamp="7366586" timestamp2="7366586">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3495" _type="InsertStringCommand" date="Mon Mar 28 10:44:28 EDT 2022" starttimestamp="1648471300703" timestamp="7367393" timestamp2="7367393">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="3497" _type="InsertStringCommand" date="Mon Mar 28 10:44:28 EDT 2022" starttimestamp="1648471300703" timestamp="7367779" timestamp2="7367779">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3499" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:44:28 EDT 2022" starttimestamp="1648471300703" timestamp="7368103" />
  <Command __id="3501" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:44:28 EDT 2022" starttimestamp="1648471300703" timestamp="7368262" />
  <Command __id="3503" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:44:29 EDT 2022" starttimestamp="1648471300703" timestamp="7368453" />
  <Command __id="3505" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:44:29 EDT 2022" starttimestamp="1648471300703" timestamp="7368794" />
  <Command __id="3507" _type="InsertStringCommand" date="Mon Mar 28 10:44:29 EDT 2022" starttimestamp="1648471300703" timestamp="7369257" timestamp2="7369257">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="3509" _type="InsertStringCommand" date="Mon Mar 28 10:44:30 EDT 2022" starttimestamp="1648471300703" timestamp="7369364" timestamp2="7369364">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3512" _type="PauseCommand" date="Mon Mar 28 10:44:31 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7370814">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1450]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3511" _type="InsertStringCommand" date="Mon Mar 28 10:44:31 EDT 2022" starttimestamp="1648471300703" timestamp="7370814" timestamp2="7370814">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3514" _type="InsertStringCommand" date="Mon Mar 28 10:44:31 EDT 2022" starttimestamp="1648471300703" timestamp="7370939" timestamp2="7370939">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3516" _type="InsertStringCommand" date="Mon Mar 28 10:44:31 EDT 2022" starttimestamp="1648471300703" timestamp="7371112" timestamp2="7371112">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3518" _type="InsertStringCommand" date="Mon Mar 28 10:44:32 EDT 2022" starttimestamp="1648471300703" timestamp="7371529" timestamp2="7371529">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3520" _type="InsertStringCommand" date="Mon Mar 28 10:44:32 EDT 2022" starttimestamp="1648471300703" timestamp="7371897" timestamp2="7371897">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3522" _type="InsertStringCommand" date="Mon Mar 28 10:44:32 EDT 2022" starttimestamp="1648471300703" timestamp="7372121" timestamp2="7372121">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3524" _type="InsertStringCommand" date="Mon Mar 28 10:44:32 EDT 2022" starttimestamp="1648471300703" timestamp="7372262" timestamp2="7372262">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3526" _type="InsertStringCommand" date="Mon Mar 28 10:44:33 EDT 2022" starttimestamp="1648471300703" timestamp="7372344" timestamp2="7372344">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3528" _type="InsertStringCommand" date="Mon Mar 28 10:44:33 EDT 2022" starttimestamp="1648471300703" timestamp="7372557" timestamp2="7372557">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="3530" _type="InsertStringCommand" date="Mon Mar 28 10:44:33 EDT 2022" starttimestamp="1648471300703" timestamp="7372741" timestamp2="7372741">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3532" _type="InsertStringCommand" date="Mon Mar 28 10:44:33 EDT 2022" starttimestamp="1648471300703" timestamp="7372813" timestamp2="7372813">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3534" _type="InsertStringCommand" date="Mon Mar 28 10:44:33 EDT 2022" starttimestamp="1648471300703" timestamp="7372960" timestamp2="7372960">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3537" _type="PauseCommand" date="Mon Mar 28 10:44:34 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7374249">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1289]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3536" _type="InsertStringCommand" date="Mon Mar 28 10:44:34 EDT 2022" starttimestamp="1648471300703" timestamp="7374249" timestamp2="7374249">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3539" _type="InsertStringCommand" date="Mon Mar 28 10:44:35 EDT 2022" starttimestamp="1648471300703" timestamp="7374328" timestamp2="7374328">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3541" _type="InsertStringCommand" date="Mon Mar 28 10:44:35 EDT 2022" starttimestamp="1648471300703" timestamp="7374408" timestamp2="7374408">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3543" _type="InsertStringCommand" date="Mon Mar 28 10:44:35 EDT 2022" starttimestamp="1648471300703" timestamp="7374623" timestamp2="7374623">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3545" _type="PauseCommand" date="Mon Mar 28 10:44:41 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7380854">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6231]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3544" _type="MoveCaretCommand" caretOffset="2141" date="Mon Mar 28 10:44:41 EDT 2022" docOffset="3536" starttimestamp="1648471300703" timestamp="7380854" />
  <Command __id="3547" _type="PauseCommand" date="Mon Mar 28 10:44:42 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7381944">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1090]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3546" _type="MoveCaretCommand" caretOffset="780" date="Mon Mar 28 10:44:42 EDT 2022" docOffset="2175" starttimestamp="1648471300703" timestamp="7381944" />
  <Command __id="3549" _type="PauseCommand" date="Mon Mar 28 10:44:44 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7383769">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1825]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3548" _type="SelectTextCommand" caretOffset="772" date="Mon Mar 28 10:44:44 EDT 2022" end="788" start="772" starttimestamp="1648471300703" timestamp="7383769" />
  <Command __id="3550" _type="CopyCommand" date="Mon Mar 28 10:44:44 EDT 2022" starttimestamp="1648471300703" timestamp="7383998" />
  <Command __id="3552" _type="PauseCommand" date="Mon Mar 28 10:44:47 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7386822">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2824]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3551" _type="SelectTextCommand" caretOffset="2125" date="Mon Mar 28 10:44:47 EDT 2022" end="2141" start="2125" starttimestamp="1648471300703" timestamp="7386822" />
  <Command __id="3554" _type="PasteCommand" date="Mon Mar 28 10:44:47 EDT 2022" starttimestamp="1648471300703" timestamp="7387009" />
  <Command __id="3556" _type="InsertStringCommand" date="Mon Mar 28 10:44:48 EDT 2022" starttimestamp="1648471300703" timestamp="7387489" timestamp2="7387489">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3558" _type="PauseCommand" date="Mon Mar 28 10:44:49 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7389286">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1797]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3557" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:44:49 EDT 2022" starttimestamp="1648471300703" timestamp="7389286" />
  <Command __id="3559" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:44:50 EDT 2022" starttimestamp="1648471300703" timestamp="7389386" />
  <Command __id="3560" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:44:50 EDT 2022" starttimestamp="1648471300703" timestamp="7389428" />
  <Command __id="3561" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:44:50 EDT 2022" starttimestamp="1648471300703" timestamp="7389732" />
  <Command __id="3563" _type="InsertStringCommand" date="Mon Mar 28 10:44:51 EDT 2022" starttimestamp="1648471300703" timestamp="7390315" timestamp2="7390315">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3565" _type="InsertStringCommand" date="Mon Mar 28 10:44:51 EDT 2022" starttimestamp="1648471300703" timestamp="7390455" timestamp2="7390455">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="3567" _type="InsertStringCommand" date="Mon Mar 28 10:44:51 EDT 2022" starttimestamp="1648471300703" timestamp="7390631" timestamp2="7390631">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3569" _type="InsertStringCommand" date="Mon Mar 28 10:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="7391362" timestamp2="7391362">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3571" _type="InsertStringCommand" date="Mon Mar 28 10:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="7391469" timestamp2="7391469">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3573" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:44:53 EDT 2022" starttimestamp="1648471300703" timestamp="7392307" />
  <Command __id="3575" _type="InsertStringCommand" date="Mon Mar 28 10:44:53 EDT 2022" starttimestamp="1648471300703" timestamp="7392884" timestamp2="7392884">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3577" _type="InsertStringCommand" date="Mon Mar 28 10:44:53 EDT 2022" starttimestamp="1648471300703" timestamp="7392924" timestamp2="7392924">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3579" _type="InsertStringCommand" date="Mon Mar 28 10:44:53 EDT 2022" starttimestamp="1648471300703" timestamp="7393114" timestamp2="7393114">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3581" _type="InsertStringCommand" date="Mon Mar 28 10:44:53 EDT 2022" starttimestamp="1648471300703" timestamp="7393137" timestamp2="7393137">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3583" _type="InsertStringCommand" date="Mon Mar 28 10:44:54 EDT 2022" starttimestamp="1648471300703" timestamp="7393323" timestamp2="7393323">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3585" _type="InsertStringCommand" date="Mon Mar 28 10:44:54 EDT 2022" starttimestamp="1648471300703" timestamp="7393573" timestamp2="7393573">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3587" _type="InsertStringCommand" date="Mon Mar 28 10:44:54 EDT 2022" starttimestamp="1648471300703" timestamp="7393751" timestamp2="7393751">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3589" _type="InsertStringCommand" date="Mon Mar 28 10:44:54 EDT 2022" starttimestamp="1648471300703" timestamp="7393974" timestamp2="7393974">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3591" _type="InsertStringCommand" date="Mon Mar 28 10:44:54 EDT 2022" starttimestamp="1648471300703" timestamp="7394032" timestamp2="7394032">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3593" _type="InsertStringCommand" date="Mon Mar 28 10:44:55 EDT 2022" starttimestamp="1648471300703" timestamp="7394441" timestamp2="7394441">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3595" _type="InsertStringCommand" date="Mon Mar 28 10:44:56 EDT 2022" starttimestamp="1648471300703" timestamp="7395429" timestamp2="7395429">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3597" _type="InsertStringCommand" date="Mon Mar 28 10:44:56 EDT 2022" starttimestamp="1648471300703" timestamp="7395596" timestamp2="7395596">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3599" _type="InsertStringCommand" date="Mon Mar 28 10:44:56 EDT 2022" starttimestamp="1648471300703" timestamp="7395761" timestamp2="7395761">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3601" _type="InsertStringCommand" date="Mon Mar 28 10:44:56 EDT 2022" starttimestamp="1648471300703" timestamp="7395940" timestamp2="7395940">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3603" _type="InsertStringCommand" date="Mon Mar 28 10:44:56 EDT 2022" starttimestamp="1648471300703" timestamp="7396045" timestamp2="7396045">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3605" _type="InsertStringCommand" date="Mon Mar 28 10:44:56 EDT 2022" starttimestamp="1648471300703" timestamp="7396252" timestamp2="7396252">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3607" _type="InsertStringCommand" date="Mon Mar 28 10:44:57 EDT 2022" starttimestamp="1648471300703" timestamp="7396349" timestamp2="7396349">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3609" _type="InsertStringCommand" date="Mon Mar 28 10:44:57 EDT 2022" starttimestamp="1648471300703" timestamp="7396457" timestamp2="7396457">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3611" _type="InsertStringCommand" date="Mon Mar 28 10:44:57 EDT 2022" starttimestamp="1648471300703" timestamp="7396838" timestamp2="7396838">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3612" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:44:57 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="7396842" />
  <Command __id="3614" _type="PauseCommand" date="Mon Mar 28 10:45:01 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7401099">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[4257]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3613" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:45:01 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="7401099" />
  <Command __id="3616" _type="InsertStringCommand" date="Mon Mar 28 10:45:01 EDT 2022" starttimestamp="1648471300703" timestamp="7401150" timestamp2="7401150">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3617" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:45:02 EDT 2022" starttimestamp="1648471300703" timestamp="7402146" />
  <Command __id="3618" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:45:02 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="7402197" />
  <Command __id="3619" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:45:02 EDT 2022" starttimestamp="1648471300703" timestamp="7402245" />
  <Command __id="3620" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:45:02 EDT 2022" starttimestamp="1648471300703" timestamp="7402281" />
  <Command __id="3622" _type="PauseCommand" date="Mon Mar 28 10:45:05 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7404505">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2222]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="3506" _type="Insert" date="Mon Mar 28 10:44:29 EDT 2022" docASTNodeCount="840" docActiveCodeLength="6313" docExpressionCount="598" docLength="6922" length="21" offset="3515" repeat="18" starttimestamp="1648471300703" timestamp="7369251" timestamp2="7374616">
    <text><![CDATA[5
		GIPC_SERVER_PORT]]></text>
  </DocumentChange>
  <DocumentChange __id="3553" _type="Replace" date="Mon Mar 28 10:44:47 EDT 2022" docASTNodeCount="840" docActiveCodeLength="6313" docExpressionCount="598" docLength="6922" endLine="84" insertionLength="18" int_docASTNodeCount="838" int_docActiveCodeLength="6295" int_docExpressionCount="597" int_docLength="6904" length="18" offset="3518" startLine="84" starttimestamp="1648471300703" timestamp="7387002">
    <deletedText><![CDATA[		GIPC_SERVER_PORT]]></deletedText>
    <insertedText><![CDATA[		GIPC_SERVER_PORT]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3555" _type="Insert" date="Mon Mar 28 10:44:48 EDT 2022" docASTNodeCount="840" docActiveCodeLength="6314" docExpressionCount="598" docLength="6923" length="1" offset="3536" starttimestamp="1648471300703" timestamp="7387481">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="3562" _type="Insert" date="Mon Mar 28 10:44:51 EDT 2022" docASTNodeCount="842" docActiveCodeLength="6319" docExpressionCount="600" docLength="6928" length="5" offset="3536" repeat="5" starttimestamp="1648471300703" timestamp="7390311" timestamp2="7391464">
    <text><![CDATA[ = CL]]></text>
  </DocumentChange>
  <DocumentChange __id="3572" _type="Delete" date="Mon Mar 28 10:44:53 EDT 2022" docASTNodeCount="842" docActiveCodeLength="6318" docExpressionCount="600" docLength="6927" endLine="84" length="1" offset="3540" startLine="84" starttimestamp="1648471300703" timestamp="7392302">
    <text><![CDATA[L]]></text>
  </DocumentChange>
  <DocumentChange __id="3574" _type="Insert" date="Mon Mar 28 10:44:53 EDT 2022" docASTNodeCount="844" docActiveCodeLength="6337" docExpressionCount="601" docLength="6946" length="19" offset="3540" repeat="19" starttimestamp="1648471300703" timestamp="7392876" timestamp2="7396833">
    <text><![CDATA[lientArgsProcessor.]]></text>
  </DocumentChange>
  <DocumentChange __id="3615" _type="Insert" date="Mon Mar 28 10:45:01 EDT 2022" docASTNodeCount="845" docActiveCodeLength="6354" docExpressionCount="603" docLength="6963" length="17" offset="3559" starttimestamp="1648471300703" timestamp="7401106">
    <text><![CDATA[getGIPCPort(args)]]></text>
  </DocumentChange>
  <Command __id="3621" _type="MoveCaretCommand" caretOffset="2182" date="Mon Mar 28 10:45:05 EDT 2022" docOffset="3577" starttimestamp="1648471300703" timestamp="7404503" />
  <Command __id="3624" _type="InsertStringCommand" date="Mon Mar 28 10:45:05 EDT 2022" starttimestamp="1648471300703" timestamp="7404817" timestamp2="7404817">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3626" _type="InsertStringCommand" date="Mon Mar 28 10:45:05 EDT 2022" starttimestamp="1648471300703" timestamp="7405293" timestamp2="7405293">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3628" _type="InsertStringCommand" date="Mon Mar 28 10:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="7405624" timestamp2="7405624">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3630" _type="InsertStringCommand" date="Mon Mar 28 10:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="7405744" timestamp2="7405744">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3632" _type="InsertStringCommand" date="Mon Mar 28 10:45:07 EDT 2022" starttimestamp="1648471300703" timestamp="7406379" timestamp2="7406379">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3634" _type="InsertStringCommand" date="Mon Mar 28 10:45:07 EDT 2022" starttimestamp="1648471300703" timestamp="7406708" timestamp2="7406708">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3637" _type="PauseCommand" date="Mon Mar 28 10:45:08 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7407745">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1037]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3636" _type="InsertStringCommand" date="Mon Mar 28 10:45:08 EDT 2022" starttimestamp="1648471300703" timestamp="7407745" timestamp2="7407745">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3639" _type="InsertStringCommand" date="Mon Mar 28 10:45:08 EDT 2022" starttimestamp="1648471300703" timestamp="7408012" timestamp2="7408012">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3641" _type="InsertStringCommand" date="Mon Mar 28 10:45:08 EDT 2022" starttimestamp="1648471300703" timestamp="7408120" timestamp2="7408120">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3643" _type="InsertStringCommand" date="Mon Mar 28 10:45:09 EDT 2022" starttimestamp="1648471300703" timestamp="7408417" timestamp2="7408417">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="3645" _type="InsertStringCommand" date="Mon Mar 28 10:45:09 EDT 2022" starttimestamp="1648471300703" timestamp="7408660" timestamp2="7408660">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3647" _type="InsertStringCommand" date="Mon Mar 28 10:45:09 EDT 2022" starttimestamp="1648471300703" timestamp="7408776" timestamp2="7408776">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3649" _type="InsertStringCommand" date="Mon Mar 28 10:45:10 EDT 2022" starttimestamp="1648471300703" timestamp="7409681" timestamp2="7409681">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3651" _type="InsertStringCommand" date="Mon Mar 28 10:45:11 EDT 2022" starttimestamp="1648471300703" timestamp="7410593" timestamp2="7410593">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3653" _type="InsertStringCommand" date="Mon Mar 28 10:45:11 EDT 2022" starttimestamp="1648471300703" timestamp="7410682" timestamp2="7410682">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3655" _type="InsertStringCommand" date="Mon Mar 28 10:45:11 EDT 2022" starttimestamp="1648471300703" timestamp="7410832" timestamp2="7410832">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="3657" _type="InsertStringCommand" date="Mon Mar 28 10:45:11 EDT 2022" starttimestamp="1648471300703" timestamp="7410968" timestamp2="7410968">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3659" _type="InsertStringCommand" date="Mon Mar 28 10:45:11 EDT 2022" starttimestamp="1648471300703" timestamp="7411156" timestamp2="7411156">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3661" _type="InsertStringCommand" date="Mon Mar 28 10:45:12 EDT 2022" starttimestamp="1648471300703" timestamp="7411879" timestamp2="7411879">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="3663" _type="InsertStringCommand" date="Mon Mar 28 10:45:12 EDT 2022" starttimestamp="1648471300703" timestamp="7412003" timestamp2="7412003">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3665" _type="PauseCommand" date="Mon Mar 28 10:45:14 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7414158">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2155]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3664" _type="SelectTextCommand" caretOffset="2144" date="Mon Mar 28 10:45:14 EDT 2022" end="2182" start="2144" starttimestamp="1648471300703" timestamp="7414158" />
  <Command __id="3666" _type="CopyCommand" date="Mon Mar 28 10:45:15 EDT 2022" starttimestamp="1648471300703" timestamp="7414390" />
  <Command __id="3667" _type="MoveCaretCommand" caretOffset="2205" date="Mon Mar 28 10:45:15 EDT 2022" docOffset="3600" starttimestamp="1648471300703" timestamp="7414897" />
  <Command __id="3669" _type="PasteCommand" date="Mon Mar 28 10:45:15 EDT 2022" starttimestamp="1648471300703" timestamp="7415016" />
  <Command __id="3671" _type="PauseCommand" date="Mon Mar 28 10:45:18 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7417338">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2322]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3670" _type="SelectTextCommand" caretOffset="2224" date="Mon Mar 28 10:45:18 EDT 2022" end="2242" start="2224" starttimestamp="1648471300703" timestamp="7417338" />
  <Command __id="3673" _type="InsertStringCommand" date="Mon Mar 28 10:45:18 EDT 2022" starttimestamp="1648471300703" timestamp="7417734" timestamp2="7417734">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3674" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:45:18 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="7417739" />
  <Command __id="3679" _type="PauseCommand" date="Mon Mar 28 10:45:26 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7425840">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[7964]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3678" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:45:26 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="7425840" />
  <Command __id="3681" _type="InsertStringCommand" date="Mon Mar 28 10:45:26 EDT 2022" starttimestamp="1648471300703" timestamp="7425920" timestamp2="7425920">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3683" _type="PauseCommand" date="Mon Mar 28 10:45:28 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7427409">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1489]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3682" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:45:28 EDT 2022" starttimestamp="1648471300703" timestamp="7427409" />
  <Command __id="3684" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:45:28 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="7427464" />
  <Command __id="3685" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:45:28 EDT 2022" starttimestamp="1648471300703" timestamp="7427508" />
  <Command __id="3686" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:45:28 EDT 2022" starttimestamp="1648471300703" timestamp="7427551" />
  <Command __id="3688" _type="PauseCommand" date="Mon Mar 28 10:45:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7430515">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2964]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3687" _type="SelectTextCommand" caretOffset="2186" date="Mon Mar 28 10:45:31 EDT 2022" end="2203" start="2186" starttimestamp="1648471300703" timestamp="7430515" />
  <Command __id="3689" _type="CopyCommand" date="Mon Mar 28 10:45:31 EDT 2022" starttimestamp="1648471300703" timestamp="7430712" />
  <Command __id="3691" _type="PauseCommand" date="Mon Mar 28 10:45:33 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7433083">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2371]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3690" _type="MoveCaretCommand" caretOffset="835" date="Mon Mar 28 10:45:33 EDT 2022" docOffset="2230" starttimestamp="1648471300703" timestamp="7433083" />
  <Command __id="3693" _type="InsertStringCommand" date="Mon Mar 28 10:45:34 EDT 2022" starttimestamp="1648471300703" timestamp="7433334" timestamp2="7433334">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3695" _type="PasteCommand" date="Mon Mar 28 10:45:34 EDT 2022" starttimestamp="1648471300703" timestamp="7433551" />
  <DocumentChange __id="3623" _type="Insert" date="Mon Mar 28 10:45:05 EDT 2022" docASTNodeCount="847" docActiveCodeLength="6377" docExpressionCount="604" docLength="6986" length="23" offset="3577" repeat="20" starttimestamp="1648471300703" timestamp="7404802" timestamp2="7411998">
    <text><![CDATA[
		GIPC_SERVER_NAME = ]]></text>
  </DocumentChange>
  <DocumentChange __id="3668" _type="Insert" date="Mon Mar 28 10:45:15 EDT 2022" docASTNodeCount="852" docActiveCodeLength="6415" docExpressionCount="609" docLength="7024" length="38" offset="3600" starttimestamp="1648471300703" timestamp="7415012">
    <text><![CDATA[ClientArgsProcessor.getGIPCPort(args);]]></text>
  </DocumentChange>
  <DocumentChange __id="3672" _type="Replace" date="Mon Mar 28 10:45:18 EDT 2022" docASTNodeCount="851" docActiveCodeLength="6398" docExpressionCount="607" docLength="7007" endLine="85" insertionLength="1" int_docASTNodeCount="849" int_docActiveCodeLength="6397" int_docExpressionCount="606" int_docLength="7006" length="18" offset="3619" startLine="85" starttimestamp="1648471300703" timestamp="7417725">
    <deletedText><![CDATA[.getGIPCPort(args)]]></deletedText>
    <insertedText><![CDATA[.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3675" _type="Insert" date="Mon Mar 28 10:45:18 EDT 2022" docASTNodeCount="851" docActiveCodeLength="6401" docExpressionCount="608" docLength="7010" length="3" offset="3620" repeat="3" starttimestamp="1648471300703" timestamp="7417876" timestamp2="7418158">
    <text><![CDATA[get]]></text>
  </DocumentChange>
  <DocumentChange __id="3680" _type="Replace" date="Mon Mar 28 10:45:26 EDT 2022" docASTNodeCount="852" docActiveCodeLength="6417" docExpressionCount="609" docLength="7026" endLine="85" insertionLength="19" int_docASTNodeCount="851" int_docActiveCodeLength="6398" int_docExpressionCount="607" int_docLength="7007" length="3" offset="3620" startLine="85" starttimestamp="1648471300703" timestamp="7425843">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getServerHost(args)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3692" _type="Insert" date="Mon Mar 28 10:45:34 EDT 2022" docASTNodeCount="852" docActiveCodeLength="6420" docExpressionCount="609" docLength="7029" length="3" offset="2230" starttimestamp="1648471300703" timestamp="7433323">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="3694" _type="Replace" date="Mon Mar 28 10:45:34 EDT 2022" docASTNodeCount="852" docActiveCodeLength="6437" docExpressionCount="609" docLength="7046" endLine="55" insertionLength="18" int_docASTNodeCount="852" int_docActiveCodeLength="6419" int_docExpressionCount="609" int_docLength="7028" length="1" offset="2232" startLine="55" starttimestamp="1648471300703" timestamp="7433546">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	GIPC_SERVER_NAME ]]></insertedText>
  </DocumentChange>
  <Command __id="3697" _type="PauseCommand" date="Mon Mar 28 10:45:35 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7434700">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1149]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="3696" _type="Insert" date="Mon Mar 28 10:45:35 EDT 2022" docASTNodeCount="852" docActiveCodeLength="6438" docExpressionCount="609" docLength="7047" length="1" offset="2250" starttimestamp="1648471300703" timestamp="7434700">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="3698" _type="InsertStringCommand" date="Mon Mar 28 10:45:35 EDT 2022" starttimestamp="1648471300703" timestamp="7434707" timestamp2="7434707">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3699" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:35 EDT 2022" starttimestamp="1648471300703" timestamp="7435202" />
  <Command __id="3700" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:36 EDT 2022" starttimestamp="1648471300703" timestamp="7435703" />
  <Command __id="3701" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:36 EDT 2022" starttimestamp="1648471300703" timestamp="7435736" />
  <Command __id="3702" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:36 EDT 2022" starttimestamp="1648471300703" timestamp="7435765" />
  <Command __id="3703" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:36 EDT 2022" starttimestamp="1648471300703" timestamp="7435797" />
  <Command __id="3704" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:36 EDT 2022" starttimestamp="1648471300703" timestamp="7435826" />
  <Command __id="3705" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:36 EDT 2022" starttimestamp="1648471300703" timestamp="7435861" />
  <Command __id="3706" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:36 EDT 2022" starttimestamp="1648471300703" timestamp="7435886" />
  <Command __id="3707" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:36 EDT 2022" starttimestamp="1648471300703" timestamp="7435918" />
  <Command __id="3708" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:36 EDT 2022" starttimestamp="1648471300703" timestamp="7435949" />
  <Command __id="3709" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:36 EDT 2022" starttimestamp="1648471300703" timestamp="7436119" />
  <Command __id="3710" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:36 EDT 2022" starttimestamp="1648471300703" timestamp="7436290" />
  <Command __id="3711" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:37 EDT 2022" starttimestamp="1648471300703" timestamp="7436447" />
  <Command __id="3712" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:37 EDT 2022" starttimestamp="1648471300703" timestamp="7436614" />
  <Command __id="3713" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:37 EDT 2022" starttimestamp="1648471300703" timestamp="7436761" />
  <Command __id="3714" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:37 EDT 2022" starttimestamp="1648471300703" timestamp="7436951" />
  <Command __id="3715" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:37 EDT 2022" starttimestamp="1648471300703" timestamp="7437091" />
  <Command __id="3716" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:45:38 EDT 2022" starttimestamp="1648471300703" timestamp="7437298" />
  <Command __id="3718" _type="InsertStringCommand" date="Mon Mar 28 10:45:38 EDT 2022" starttimestamp="1648471300703" timestamp="7437791" timestamp2="7437791">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3720" _type="InsertStringCommand" date="Mon Mar 28 10:45:38 EDT 2022" starttimestamp="1648471300703" timestamp="7437939" timestamp2="7437939">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3722" _type="InsertStringCommand" date="Mon Mar 28 10:45:38 EDT 2022" starttimestamp="1648471300703" timestamp="7437994" timestamp2="7437994">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3724" _type="InsertStringCommand" date="Mon Mar 28 10:45:39 EDT 2022" starttimestamp="1648471300703" timestamp="7438342" timestamp2="7438342">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3726" _type="InsertStringCommand" date="Mon Mar 28 10:45:39 EDT 2022" starttimestamp="1648471300703" timestamp="7438430" timestamp2="7438430">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3728" _type="InsertStringCommand" date="Mon Mar 28 10:45:39 EDT 2022" starttimestamp="1648471300703" timestamp="7438605" timestamp2="7438605">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3730" _type="InsertStringCommand" date="Mon Mar 28 10:45:39 EDT 2022" starttimestamp="1648471300703" timestamp="7438713" timestamp2="7438713">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3732" _type="InsertStringCommand" date="Mon Mar 28 10:45:39 EDT 2022" starttimestamp="1648471300703" timestamp="7438852" timestamp2="7438852">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3734" _type="InsertStringCommand" date="Mon Mar 28 10:45:39 EDT 2022" starttimestamp="1648471300703" timestamp="7438961" timestamp2="7438961">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3736" _type="InsertStringCommand" date="Mon Mar 28 10:45:39 EDT 2022" starttimestamp="1648471300703" timestamp="7439048" timestamp2="7439048">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3738" _type="InsertStringCommand" date="Mon Mar 28 10:45:39 EDT 2022" starttimestamp="1648471300703" timestamp="7439126" timestamp2="7439126">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3740" _type="InsertStringCommand" date="Mon Mar 28 10:45:39 EDT 2022" starttimestamp="1648471300703" timestamp="7439233" timestamp2="7439233">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3742" _type="InsertStringCommand" date="Mon Mar 28 10:45:40 EDT 2022" starttimestamp="1648471300703" timestamp="7439332" timestamp2="7439332">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3744" _type="InsertStringCommand" date="Mon Mar 28 10:45:40 EDT 2022" starttimestamp="1648471300703" timestamp="7439511" timestamp2="7439511">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3746" _type="InsertStringCommand" date="Mon Mar 28 10:45:40 EDT 2022" starttimestamp="1648471300703" timestamp="7439643" timestamp2="7439643">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="3717" _type="Insert" date="Mon Mar 28 10:45:38 EDT 2022" docASTNodeCount="852" docActiveCodeLength="6453" docExpressionCount="609" docLength="7062" length="15" offset="2233" repeat="15" starttimestamp="1648471300703" timestamp="7437777" timestamp2="7439639">
    <text><![CDATA[private static ]]></text>
  </DocumentChange>
  <Command __id="3748" _type="PauseCommand" date="Mon Mar 28 10:45:42 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7441888">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2245]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3749" _type="InsertStringCommand" date="Mon Mar 28 10:45:42 EDT 2022" starttimestamp="1648471300703" timestamp="7441895" timestamp2="7441895">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3751" _type="InsertStringCommand" date="Mon Mar 28 10:45:42 EDT 2022" starttimestamp="1648471300703" timestamp="7442072" timestamp2="7442072">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3753" _type="InsertStringCommand" date="Mon Mar 28 10:45:42 EDT 2022" starttimestamp="1648471300703" timestamp="7442237" timestamp2="7442237">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3755" _type="InsertStringCommand" date="Mon Mar 28 10:45:43 EDT 2022" starttimestamp="1648471300703" timestamp="7442321" timestamp2="7442321">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3757" _type="InsertStringCommand" date="Mon Mar 28 10:45:43 EDT 2022" starttimestamp="1648471300703" timestamp="7442423" timestamp2="7442423">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3759" _type="InsertStringCommand" date="Mon Mar 28 10:45:43 EDT 2022" starttimestamp="1648471300703" timestamp="7442503" timestamp2="7442503">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3761" _type="InsertStringCommand" date="Mon Mar 28 10:45:43 EDT 2022" starttimestamp="1648471300703" timestamp="7443265" timestamp2="7443265">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3763" _type="PauseCommand" date="Mon Mar 28 10:45:45 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7444315">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1050]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3762" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:45:45 EDT 2022" starttimestamp="1648471300703" timestamp="7444315" />
  <Command __id="3764" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:45:45 EDT 2022" starttimestamp="1648471300703" timestamp="7444409" />
  <Command __id="3765" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:45:45 EDT 2022" starttimestamp="1648471300703" timestamp="7444468" />
  <Command __id="3767" _type="PauseCommand" date="Mon Mar 28 10:45:50 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7449716">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5248]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3766" _type="MoveCaretCommand" caretOffset="854" date="Mon Mar 28 10:45:50 EDT 2022" docOffset="2249" starttimestamp="1648471300703" timestamp="7449716" />
  <Command __id="3769" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:45:50 EDT 2022" starttimestamp="1648471300703" timestamp="7449990" />
  <Command __id="3771" _type="InsertStringCommand" date="Mon Mar 28 10:45:50 EDT 2022" starttimestamp="1648471300703" timestamp="7450141" timestamp2="7450141">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3773" _type="PauseCommand" date="Mon Mar 28 10:45:52 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7451404">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1263]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3772" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:45:52 EDT 2022" starttimestamp="1648471300703" timestamp="7451404" />
  <Command __id="3774" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:45:52 EDT 2022" starttimestamp="1648471300703" timestamp="7451493" />
  <Command __id="3775" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:45:52 EDT 2022" starttimestamp="1648471300703" timestamp="7451541" />
  <Command __id="3777" _type="PauseCommand" date="Mon Mar 28 10:46:03 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="7463209">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11668]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3776" _type="SelectTextCommand" caretOffset="3139" date="Mon Mar 28 10:46:03 EDT 2022" end="3145" start="3139" starttimestamp="1648471300703" timestamp="7463209" />
  <DocumentChange __id="3747" _type="Insert" date="Mon Mar 28 10:45:42 EDT 2022" docASTNodeCount="859" docActiveCodeLength="6460" docExpressionCount="611" docLength="7069" length="7" offset="2248" repeat="7" starttimestamp="1648471300703" timestamp="7441888" timestamp2="7443259">
    <text><![CDATA[string ]]></text>
  </DocumentChange>
  <DocumentChange __id="3768" _type="Delete" date="Mon Mar 28 10:45:50 EDT 2022" docASTNodeCount="859" docActiveCodeLength="6459" docExpressionCount="611" docLength="7068" endLine="55" length="1" offset="2248" startLine="55" starttimestamp="1648471300703" timestamp="7449976">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="3770" _type="Insert" date="Mon Mar 28 10:45:50 EDT 2022" docASTNodeCount="859" docActiveCodeLength="6460" docExpressionCount="611" docLength="7069" length="1" offset="2248" starttimestamp="1648471300703" timestamp="7450136">
    <text><![CDATA[S]]></text>
  </DocumentChange>
  <Command __id="3779" _type="PauseCommand" date="Mon Mar 28 10:46:18 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="7477449">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[14240]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3780" _type="SelectTextCommand" caretOffset="1806" date="Mon Mar 28 10:46:18 EDT 2022" end="1888" start="1806" starttimestamp="1648471300703" timestamp="7477539" />
  <Command __id="3778" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:46:18 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5811" docExpressionCount="584" docLength="6269" projectName="A5" starttimestamp="1648471300703" timestamp="7477449">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3782" _type="PauseCommand" date="Mon Mar 28 10:46:28 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="7487987">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[10448]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3783" _type="SelectTextCommand" caretOffset="3139" date="Mon Mar 28 10:46:28 EDT 2022" end="3145" start="3139" starttimestamp="1648471300703" timestamp="7488081" />
  <Command __id="3785" _type="PauseCommand" date="Mon Mar 28 10:46:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7490498">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2417]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3784" _type="MoveCaretCommand" caretOffset="3142" date="Mon Mar 28 10:46:31 EDT 2022" docOffset="4537" starttimestamp="1648471300703" timestamp="7490498" />
  <Command __id="3786" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:46:32 EDT 2022" starttimestamp="1648471300703" timestamp="7491352" />
  <Command __id="3788" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:46:32 EDT 2022" starttimestamp="1648471300703" timestamp="7491619" />
  <Command __id="3790" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:46:32 EDT 2022" starttimestamp="1648471300703" timestamp="7492123" />
  <Command __id="3792" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:46:32 EDT 2022" starttimestamp="1648471300703" timestamp="7492240" />
  <Command __id="3794" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:46:33 EDT 2022" starttimestamp="1648471300703" timestamp="7492409" />
  <Command __id="3796" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:46:33 EDT 2022" starttimestamp="1648471300703" timestamp="7492562" />
  <Command __id="3798" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:46:33 EDT 2022" starttimestamp="1648471300703" timestamp="7492714" />
  <Command __id="3800" _type="InsertStringCommand" date="Mon Mar 28 10:46:34 EDT 2022" starttimestamp="1648471300703" timestamp="7493547" timestamp2="7493547">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3802" _type="PauseCommand" date="Mon Mar 28 10:46:35 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7495182">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1635]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3801" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:46:35 EDT 2022" starttimestamp="1648471300703" timestamp="7495182" />
  <Command __id="3803" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:46:35 EDT 2022" starttimestamp="1648471300703" timestamp="7495272" />
  <Command __id="3804" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:46:36 EDT 2022" starttimestamp="1648471300703" timestamp="7495312" />
  <Command __id="3806" _type="PauseCommand" date="Mon Mar 28 10:46:38 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7497781">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2469]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3805" _type="MoveCaretCommand" caretOffset="3153" date="Mon Mar 28 10:46:38 EDT 2022" docOffset="4548" starttimestamp="1648471300703" timestamp="7497781" />
  <Command __id="3807" _type="MoveCaretCommand" caretOffset="3142" date="Mon Mar 28 10:46:39 EDT 2022" docOffset="4537" starttimestamp="1648471300703" timestamp="7498577" />
  <Command __id="3809" _type="InsertStringCommand" date="Mon Mar 28 10:46:39 EDT 2022" starttimestamp="1648471300703" timestamp="7498988" timestamp2="7498988">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3811" _type="InsertStringCommand" date="Mon Mar 28 10:46:39 EDT 2022" starttimestamp="1648471300703" timestamp="7499081" timestamp2="7499081">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3813" _type="InsertStringCommand" date="Mon Mar 28 10:46:39 EDT 2022" starttimestamp="1648471300703" timestamp="7499175" timestamp2="7499175">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3815" _type="InsertStringCommand" date="Mon Mar 28 10:46:40 EDT 2022" starttimestamp="1648471300703" timestamp="7499355" timestamp2="7499355">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3817" _type="InsertStringCommand" date="Mon Mar 28 10:46:40 EDT 2022" starttimestamp="1648471300703" timestamp="7499736" timestamp2="7499736">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3819" _type="PauseCommand" date="Mon Mar 28 10:46:41 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7500995">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1259]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3818" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:46:41 EDT 2022" starttimestamp="1648471300703" timestamp="7500995" />
  <Command __id="3820" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:46:41 EDT 2022" starttimestamp="1648471300703" timestamp="7501097" />
  <Command __id="3821" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:46:41 EDT 2022" starttimestamp="1648471300703" timestamp="7501145" />
  <Command __id="3823" _type="PauseCommand" date="Mon Mar 28 10:46:44 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7504198">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3053]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3822" _type="MoveCaretCommand" caretOffset="3171" date="Mon Mar 28 10:46:44 EDT 2022" docOffset="4566" starttimestamp="1648471300703" timestamp="7504198" />
  <Command __id="3825" _type="PauseCommand" date="Mon Mar 28 10:47:03 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="7522398">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[18200]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3824" _type="SelectTextCommand" caretOffset="3160" date="Mon Mar 28 10:47:03 EDT 2022" end="3171" start="3160" starttimestamp="1648471300703" timestamp="7522398" />
  <Command __id="3827" _type="InsertStringCommand" date="Mon Mar 28 10:47:03 EDT 2022" starttimestamp="1648471300703" timestamp="7522695" timestamp2="7522695">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3829" _type="InsertStringCommand" date="Mon Mar 28 10:47:03 EDT 2022" starttimestamp="1648471300703" timestamp="7522774" timestamp2="7522774">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3831" _type="InsertStringCommand" date="Mon Mar 28 10:47:03 EDT 2022" starttimestamp="1648471300703" timestamp="7522878" timestamp2="7522878">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3833" _type="InsertStringCommand" date="Mon Mar 28 10:47:03 EDT 2022" starttimestamp="1648471300703" timestamp="7523026" timestamp2="7523026">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3835" _type="InsertStringCommand" date="Mon Mar 28 10:47:03 EDT 2022" starttimestamp="1648471300703" timestamp="7523095" timestamp2="7523095">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3837" _type="InsertStringCommand" date="Mon Mar 28 10:47:03 EDT 2022" starttimestamp="1648471300703" timestamp="7523268" timestamp2="7523268">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3839" _type="InsertStringCommand" date="Mon Mar 28 10:47:04 EDT 2022" starttimestamp="1648471300703" timestamp="7523401" timestamp2="7523401">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3841" _type="InsertStringCommand" date="Mon Mar 28 10:47:04 EDT 2022" starttimestamp="1648471300703" timestamp="7523626" timestamp2="7523626">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3843" _type="InsertStringCommand" date="Mon Mar 28 10:47:04 EDT 2022" starttimestamp="1648471300703" timestamp="7523746" timestamp2="7523746">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3845" _type="InsertStringCommand" date="Mon Mar 28 10:47:04 EDT 2022" starttimestamp="1648471300703" timestamp="7523862" timestamp2="7523862">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="3847" _type="InsertStringCommand" date="Mon Mar 28 10:47:04 EDT 2022" starttimestamp="1648471300703" timestamp="7523977" timestamp2="7523977">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3849" _type="PauseCommand" date="Mon Mar 28 10:47:06 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7525327">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1350]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3848" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:47:06 EDT 2022" starttimestamp="1648471300703" timestamp="7525327" />
  <Command __id="3850" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:47:06 EDT 2022" starttimestamp="1648471300703" timestamp="7525425" />
  <Command __id="3851" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:47:06 EDT 2022" starttimestamp="1648471300703" timestamp="7525465" />
  <Command __id="3853" _type="PauseCommand" date="Mon Mar 28 10:47:12 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7531504">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6039]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="3852" _type="CopyCommand" date="Mon Mar 28 10:47:12 EDT 2022" starttimestamp="1648471300703" timestamp="7531504" />
  <Command __id="3855" _type="PauseCommand" date="Mon Mar 28 10:47:13 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7532556">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1052]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3854" _type="MoveCaretCommand" caretOffset="3177" date="Mon Mar 28 10:47:13 EDT 2022" docOffset="4572" starttimestamp="1648471300703" timestamp="7532556" />
  <Command __id="3857" _type="PasteCommand" date="Mon Mar 28 10:47:13 EDT 2022" starttimestamp="1648471300703" timestamp="7532726" />
  <Command __id="3859" _type="InsertStringCommand" date="Mon Mar 28 10:47:13 EDT 2022" starttimestamp="1648471300703" timestamp="7533222" timestamp2="7533222">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3860" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:47:13 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="7533226" />
  <Command __id="3863" _type="PauseCommand" date="Mon Mar 28 10:47:15 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7534939">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1713]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3862" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:47:15 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="7534939" />
  <Command __id="3867" _type="InsertStringCommand" date="Mon Mar 28 10:47:15 EDT 2022" starttimestamp="1648471300703" timestamp="7535064" timestamp2="7535064">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3869" _type="PauseCommand" date="Mon Mar 28 10:47:17 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7536791">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1726]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3868" _type="MoveCaretCommand" caretOffset="3240" date="Mon Mar 28 10:47:17 EDT 2022" docOffset="4689" starttimestamp="1648471300703" timestamp="7536790" />
  <Command __id="3871" _type="InsertStringCommand" date="Mon Mar 28 10:47:17 EDT 2022" starttimestamp="1648471300703" timestamp="7537255" timestamp2="7537255">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3873" _type="PauseCommand" date="Mon Mar 28 10:47:20 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7539909">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2654]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3872" _type="SelectTextCommand" caretOffset="3245" date="Mon Mar 28 10:47:20 EDT 2022" end="3245" start="3212" starttimestamp="1648471300703" timestamp="7539909" />
  <Command __id="3875" _type="PauseCommand" date="Mon Mar 28 10:47:22 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7541401">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1492]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3874" _type="MoveCaretCommand" caretOffset="3212" date="Mon Mar 28 10:47:22 EDT 2022" docOffset="4661" starttimestamp="1648471300703" timestamp="7541401" />
  <Command __id="3877" _type="PauseCommand" date="Mon Mar 28 10:47:24 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7543896">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2495]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3876" _type="SelectTextCommand" caretOffset="3205" date="Mon Mar 28 10:47:24 EDT 2022" end="3212" start="3205" starttimestamp="1648471300703" timestamp="7543896" />
  <Command __id="3879" _type="InsertStringCommand" date="Mon Mar 28 10:47:24 EDT 2022" starttimestamp="1648471300703" timestamp="7544236" timestamp2="7544236">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3881" _type="InsertStringCommand" date="Mon Mar 28 10:47:25 EDT 2022" starttimestamp="1648471300703" timestamp="7544335" timestamp2="7544335">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3883" _type="InsertStringCommand" date="Mon Mar 28 10:47:25 EDT 2022" starttimestamp="1648471300703" timestamp="7544424" timestamp2="7544424">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3885" _type="InsertStringCommand" date="Mon Mar 28 10:47:25 EDT 2022" starttimestamp="1648471300703" timestamp="7544509" timestamp2="7544509">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3887" _type="PauseCommand" date="Mon Mar 28 10:47:32 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7551800">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[7291]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3886" _type="SelectTextCommand" caretOffset="3211" date="Mon Mar 28 10:47:32 EDT 2022" end="3216" start="3211" starttimestamp="1648471300703" timestamp="7551800" />
  <Command __id="3889" _type="InsertStringCommand" date="Mon Mar 28 10:47:32 EDT 2022" starttimestamp="1648471300703" timestamp="7552068" timestamp2="7552068">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3891" _type="InsertStringCommand" date="Mon Mar 28 10:47:32 EDT 2022" starttimestamp="1648471300703" timestamp="7552175" timestamp2="7552175">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3893" _type="InsertStringCommand" date="Mon Mar 28 10:47:32 EDT 2022" starttimestamp="1648471300703" timestamp="7552278" timestamp2="7552278">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3895" _type="InsertStringCommand" date="Mon Mar 28 10:47:33 EDT 2022" starttimestamp="1648471300703" timestamp="7552494" timestamp2="7552494">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="3897" _type="InsertStringCommand" date="Mon Mar 28 10:47:33 EDT 2022" starttimestamp="1648471300703" timestamp="7552687" timestamp2="7552687">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3899" _type="InsertStringCommand" date="Mon Mar 28 10:47:33 EDT 2022" starttimestamp="1648471300703" timestamp="7552789" timestamp2="7552789">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3901" _type="InsertStringCommand" date="Mon Mar 28 10:47:34 EDT 2022" starttimestamp="1648471300703" timestamp="7553318" timestamp2="7553318">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3903" _type="InsertStringCommand" date="Mon Mar 28 10:47:34 EDT 2022" starttimestamp="1648471300703" timestamp="7553559" timestamp2="7553559">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3905" _type="InsertStringCommand" date="Mon Mar 28 10:47:34 EDT 2022" starttimestamp="1648471300703" timestamp="7553671" timestamp2="7553671">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3907" _type="InsertStringCommand" date="Mon Mar 28 10:47:34 EDT 2022" starttimestamp="1648471300703" timestamp="7553803" timestamp2="7553803">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="3909" _type="InsertStringCommand" date="Mon Mar 28 10:47:34 EDT 2022" starttimestamp="1648471300703" timestamp="7553920" timestamp2="7553920">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3911" _type="PauseCommand" date="Mon Mar 28 10:47:37 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7556899">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2979]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3910" _type="SelectTextCommand" caretOffset="3224" date="Mon Mar 28 10:47:37 EDT 2022" end="3229" start="3224" starttimestamp="1648471300703" timestamp="7556899" />
  <Command __id="3913" _type="InsertStringCommand" date="Mon Mar 28 10:47:38 EDT 2022" starttimestamp="1648471300703" timestamp="7557598" timestamp2="7557598">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3915" _type="InsertStringCommand" date="Mon Mar 28 10:47:38 EDT 2022" starttimestamp="1648471300703" timestamp="7557695" timestamp2="7557695">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3917" _type="InsertStringCommand" date="Mon Mar 28 10:47:38 EDT 2022" starttimestamp="1648471300703" timestamp="7557801" timestamp2="7557801">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3919" _type="InsertStringCommand" date="Mon Mar 28 10:47:38 EDT 2022" starttimestamp="1648471300703" timestamp="7558071" timestamp2="7558071">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3921" _type="InsertStringCommand" date="Mon Mar 28 10:47:39 EDT 2022" starttimestamp="1648471300703" timestamp="7558374" timestamp2="7558374">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3923" _type="InsertStringCommand" date="Mon Mar 28 10:47:39 EDT 2022" starttimestamp="1648471300703" timestamp="7558719" timestamp2="7558719">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3925" _type="InsertStringCommand" date="Mon Mar 28 10:47:39 EDT 2022" starttimestamp="1648471300703" timestamp="7558794" timestamp2="7558794">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3927" _type="InsertStringCommand" date="Mon Mar 28 10:47:39 EDT 2022" starttimestamp="1648471300703" timestamp="7558956" timestamp2="7558956">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3929" _type="InsertStringCommand" date="Mon Mar 28 10:47:39 EDT 2022" starttimestamp="1648471300703" timestamp="7559162" timestamp2="7559162">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="3931" _type="InsertStringCommand" date="Mon Mar 28 10:47:40 EDT 2022" starttimestamp="1648471300703" timestamp="7559326" timestamp2="7559326">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3933" _type="InsertStringCommand" date="Mon Mar 28 10:47:40 EDT 2022" starttimestamp="1648471300703" timestamp="7559440" timestamp2="7559440">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3935" _type="InsertStringCommand" date="Mon Mar 28 10:47:40 EDT 2022" starttimestamp="1648471300703" timestamp="7559979" timestamp2="7559979">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3937" _type="InsertStringCommand" date="Mon Mar 28 10:47:41 EDT 2022" starttimestamp="1648471300703" timestamp="7560297" timestamp2="7560297">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3939" _type="InsertStringCommand" date="Mon Mar 28 10:47:41 EDT 2022" starttimestamp="1648471300703" timestamp="7560397" timestamp2="7560397">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3941" _type="InsertStringCommand" date="Mon Mar 28 10:47:41 EDT 2022" starttimestamp="1648471300703" timestamp="7560548" timestamp2="7560548">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="3943" _type="InsertStringCommand" date="Mon Mar 28 10:47:41 EDT 2022" starttimestamp="1648471300703" timestamp="7560739" timestamp2="7560739">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3945" _type="PauseCommand" date="Mon Mar 28 10:47:45 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7564385">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3646]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3944" _type="SelectTextCommand" caretOffset="3242" date="Mon Mar 28 10:47:45 EDT 2022" end="3253" start="3242" starttimestamp="1648471300703" timestamp="7564385" />
  <Command __id="3947" _type="InsertStringCommand" date="Mon Mar 28 10:47:45 EDT 2022" starttimestamp="1648471300703" timestamp="7564624" timestamp2="7564624">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3949" _type="InsertStringCommand" date="Mon Mar 28 10:47:45 EDT 2022" starttimestamp="1648471300703" timestamp="7564710" timestamp2="7564710">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3951" _type="InsertStringCommand" date="Mon Mar 28 10:47:45 EDT 2022" starttimestamp="1648471300703" timestamp="7564793" timestamp2="7564793">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3953" _type="InsertStringCommand" date="Mon Mar 28 10:47:45 EDT 2022" starttimestamp="1648471300703" timestamp="7564939" timestamp2="7564939">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3955" _type="InsertStringCommand" date="Mon Mar 28 10:47:45 EDT 2022" starttimestamp="1648471300703" timestamp="7564992" timestamp2="7564992">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3957" _type="InsertStringCommand" date="Mon Mar 28 10:47:45 EDT 2022" starttimestamp="1648471300703" timestamp="7565170" timestamp2="7565170">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3959" _type="InsertStringCommand" date="Mon Mar 28 10:47:46 EDT 2022" starttimestamp="1648471300703" timestamp="7565364" timestamp2="7565364">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3961" _type="InsertStringCommand" date="Mon Mar 28 10:47:46 EDT 2022" starttimestamp="1648471300703" timestamp="7565592" timestamp2="7565592">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3963" _type="InsertStringCommand" date="Mon Mar 28 10:47:46 EDT 2022" starttimestamp="1648471300703" timestamp="7565734" timestamp2="7565734">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3965" _type="InsertStringCommand" date="Mon Mar 28 10:47:46 EDT 2022" starttimestamp="1648471300703" timestamp="7565834" timestamp2="7565834">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="3967" _type="InsertStringCommand" date="Mon Mar 28 10:47:46 EDT 2022" starttimestamp="1648471300703" timestamp="7565971" timestamp2="7565971">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3969" _type="PauseCommand" date="Mon Mar 28 10:47:47 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7567256">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1285]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3968" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:47:47 EDT 2022" starttimestamp="1648471300703" timestamp="7567256" />
  <Command __id="3970" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:47:48 EDT 2022" starttimestamp="1648471300703" timestamp="7567353" />
  <Command __id="3971" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:47:48 EDT 2022" starttimestamp="1648471300703" timestamp="7567380" />
  <Command __id="3781" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:46:28 EDT 2022" docASTNodeCount="859" docActiveCodeLength="6460" docExpressionCount="611" docLength="7069" projectName="A5" starttimestamp="1648471300703" timestamp="7487987">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶"), Diff(INSERT,"import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶"), Diff(EQUAL,"import main.BeauAndersonFinalProject;¶"), Diff(DELETE,""), Diff(EQUAL,"import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	"), Diff(INSERT,"//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	"), Diff(EQUAL,"PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶"), Diff(DELETE,""), Diff(EQUAL,"		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶"), Diff(INSERT,"¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶"), Diff(EQUAL,"	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_HOST_NAME, SERVER_PORT, aClientName);¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_HOST_NAME, SERVER_PORT, aClientName);
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3787" _type="Delete" date="Mon Mar 28 10:46:32 EDT 2022" docASTNodeCount="859" docActiveCodeLength="6454" docExpressionCount="611" docLength="7063" endLine="120" length="6" offset="4530" repeat="6" startLine="120" starttimestamp="1648471300703" timestamp="7491612" timestamp2="7492712">
    <text><![CDATA[_HOST_]]></text>
  </DocumentChange>
  <DocumentChange __id="3799" _type="Insert" date="Mon Mar 28 10:46:34 EDT 2022" docASTNodeCount="859" docActiveCodeLength="6455" docExpressionCount="611" docLength="7064" length="1" offset="4530" starttimestamp="1648471300703" timestamp="7493541">
    <text><![CDATA[_]]></text>
  </DocumentChange>
  <DocumentChange __id="3808" _type="Insert" date="Mon Mar 28 10:46:39 EDT 2022" docASTNodeCount="859" docActiveCodeLength="6460" docExpressionCount="611" docLength="7069" length="5" offset="4537" repeat="5" starttimestamp="1648471300703" timestamp="7498974" timestamp2="7499730">
    <text><![CDATA[GIPC_]]></text>
  </DocumentChange>
  <DocumentChange __id="3826" _type="Replace" date="Mon Mar 28 10:47:03 EDT 2022" docASTNodeCount="859" docActiveCodeLength="6450" docExpressionCount="611" docLength="7059" endLine="120" insertionLength="1" int_docASTNodeCount="859" int_docActiveCodeLength="6449" int_docExpressionCount="611" int_docLength="7058" length="11" offset="4555" startLine="120" starttimestamp="1648471300703" timestamp="7522666">
    <deletedText><![CDATA[aClientName]]></deletedText>
    <insertedText><![CDATA[C]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3828" _type="Insert" date="Mon Mar 28 10:47:03 EDT 2022" docASTNodeCount="859" docActiveCodeLength="6460" docExpressionCount="611" docLength="7069" length="10" offset="4556" repeat="10" starttimestamp="1648471300703" timestamp="7522770" timestamp2="7523973">
    <text><![CDATA[LIENT_NAME]]></text>
  </DocumentChange>
  <DocumentChange __id="3856" _type="Replace" date="Mon Mar 28 10:47:13 EDT 2022" docASTNodeCount="862" docActiveCodeLength="6479" docExpressionCount="613" docLength="7088" endLine="121" insertionLength="21" int_docASTNodeCount="859" int_docActiveCodeLength="6458" int_docExpressionCount="611" int_docLength="7067" length="2" offset="4570" startLine="121" starttimestamp="1648471300703" timestamp="7532715">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		GIPCRegistryLocated]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3858" _type="Insert" date="Mon Mar 28 10:47:13 EDT 2022" docASTNodeCount="864" docActiveCodeLength="6481" docExpressionCount="615" docLength="7090" length="2" offset="4591" repeat="2" starttimestamp="1648471300703" timestamp="7533216" timestamp2="7533930">
    <text><![CDATA[.n]]></text>
  </DocumentChange>
  <DocumentChange __id="3864" _type="Insert" date="Mon Mar 28 10:47:15 EDT 2022" docASTNodeCount="876" docActiveCodeLength="6535" docExpressionCount="626" docLength="7144" length="54" offset="1291" repeat="2" starttimestamp="1648471300703" timestamp="7534944" timestamp2="7534945">
    <text><![CDATA[
import util.trace.port.rpc.gipc.GIPCRegistryLocated;]]></text>
  </DocumentChange>
  <DocumentChange __id="3866" _type="Replace" date="Mon Mar 28 10:47:15 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6577" docExpressionCount="629" docLength="7186" endLine="122" insertionLength="43" int_docASTNodeCount="873" int_docActiveCodeLength="6534" int_docExpressionCount="624" int_docLength="7143" length="1" offset="4646" startLine="122" starttimestamp="1648471300703" timestamp="7534948">
    <deletedText><![CDATA[n]]></deletedText>
    <insertedText><![CDATA[newCase(aSource, aHost, aPort, aClientName)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3870" _type="Insert" date="Mon Mar 28 10:47:17 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6578" docExpressionCount="629" docLength="7187" length="1" offset="4689" starttimestamp="1648471300703" timestamp="7537245">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="3878" _type="Replace" date="Mon Mar 28 10:47:24 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6572" docExpressionCount="629" docLength="7181" endLine="122" insertionLength="1" int_docASTNodeCount="878" int_docActiveCodeLength="6571" int_docExpressionCount="628" int_docLength="7180" length="7" offset="4654" startLine="122" starttimestamp="1648471300703" timestamp="7544224">
    <deletedText><![CDATA[aSource]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3880" _type="Insert" date="Mon Mar 28 10:47:25 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6575" docExpressionCount="629" docLength="7184" length="3" offset="4655" repeat="3" starttimestamp="1648471300703" timestamp="7544330" timestamp2="7544505">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <DocumentChange __id="3888" _type="Replace" date="Mon Mar 28 10:47:32 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6571" docExpressionCount="629" docLength="7180" endLine="122" insertionLength="1" int_docASTNodeCount="878" int_docActiveCodeLength="6570" int_docExpressionCount="628" int_docLength="7179" length="5" offset="4660" startLine="122" starttimestamp="1648471300703" timestamp="7552054">
    <deletedText><![CDATA[aHost]]></deletedText>
    <insertedText><![CDATA[S]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3890" _type="Insert" date="Mon Mar 28 10:47:32 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6581" docExpressionCount="629" docLength="7190" length="10" offset="4661" repeat="10" starttimestamp="1648471300703" timestamp="7552170" timestamp2="7553914">
    <text><![CDATA[ERVER_NAME]]></text>
  </DocumentChange>
  <DocumentChange __id="3912" _type="Replace" date="Mon Mar 28 10:47:38 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6577" docExpressionCount="629" docLength="7186" endLine="122" insertionLength="1" int_docASTNodeCount="878" int_docActiveCodeLength="6576" int_docExpressionCount="628" int_docLength="7185" length="5" offset="4673" startLine="122" starttimestamp="1648471300703" timestamp="7557590">
    <deletedText><![CDATA[aPort]]></deletedText>
    <insertedText><![CDATA[G]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3914" _type="Insert" date="Mon Mar 28 10:47:38 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6592" docExpressionCount="629" docLength="7201" length="15" offset="4674" repeat="15" starttimestamp="1648471300703" timestamp="7557692" timestamp2="7560734">
    <text><![CDATA[IPC_SERVER_PORT]]></text>
  </DocumentChange>
  <DocumentChange __id="3946" _type="Replace" date="Mon Mar 28 10:47:45 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6582" docExpressionCount="629" docLength="7191" endLine="122" insertionLength="1" int_docASTNodeCount="879" int_docActiveCodeLength="6581" int_docExpressionCount="629" int_docLength="7190" length="11" offset="4691" startLine="122" starttimestamp="1648471300703" timestamp="7564613">
    <deletedText><![CDATA[aClientName]]></deletedText>
    <insertedText><![CDATA[C]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3948" _type="Insert" date="Mon Mar 28 10:47:45 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6592" docExpressionCount="629" docLength="7201" length="10" offset="4692" repeat="10" starttimestamp="1648471300703" timestamp="7564705" timestamp2="7565966">
    <text><![CDATA[LIENT_NAME]]></text>
  </DocumentChange>
  <Command __id="3973" _type="PauseCommand" date="Mon Mar 28 10:47:49 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7568844">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1464]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3974" _type="SelectTextCommand" caretOffset="1806" date="Mon Mar 28 10:47:49 EDT 2022" end="1888" start="1806" starttimestamp="1648471300703" timestamp="7568931" />
  <Command __id="3972" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:47:49 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5811" docExpressionCount="584" docLength="6269" projectName="A5" starttimestamp="1648471300703" timestamp="7568844">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3976" _type="PauseCommand" date="Mon Mar 28 10:48:05 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="7585087">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[16156]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3977" _type="MoveCaretCommand" caretOffset="3253" date="Mon Mar 28 10:48:05 EDT 2022" docOffset="4702" starttimestamp="1648471300703" timestamp="7585170" />
  <Command __id="3979" _type="PauseCommand" date="Mon Mar 28 10:48:40 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="7619674">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[34504]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3978" _type="SelectTextCommand" caretOffset="2248" date="Mon Mar 28 10:48:40 EDT 2022" end="2288" start="2248" starttimestamp="1648471300703" timestamp="7619674" />
  <Command __id="3980" _type="CopyCommand" date="Mon Mar 28 10:48:40 EDT 2022" starttimestamp="1648471300703" timestamp="7619963" />
  <Command __id="3975" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:48:05 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6592" docExpressionCount="629" docLength="7201" projectName="A5" starttimestamp="1648471300703" timestamp="7585087">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶"), Diff(INSERT,"import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶"), Diff(EQUAL,"import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_"), Diff(DELETE,"HOST_"), Diff(EQUAL,"NAME, "), Diff(INSERT,"GIPC_"), Diff(EQUAL,"SERVER_PORT, "), Diff(DELETE,"aClientName);¶		"), Diff(INSERT,"CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);"), Diff(EQUAL,"¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="3982" _type="PauseCommand" date="Mon Mar 28 10:48:42 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7621763">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1800]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3983" _type="SelectTextCommand" caretOffset="1806" date="Mon Mar 28 10:48:42 EDT 2022" end="1888" start="1806" starttimestamp="1648471300703" timestamp="7621843" />
  <Command __id="3985" _type="PauseCommand" date="Mon Mar 28 10:48:46 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7625403">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3560]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3984" _type="MoveCaretCommand" caretOffset="2816" date="Mon Mar 28 10:48:46 EDT 2022" docOffset="2816" starttimestamp="1648471300703" timestamp="7625403" />
  <Command __id="3986" _type="MoveCaretCommand" caretOffset="2816" date="Mon Mar 28 10:48:46 EDT 2022" docOffset="2816" starttimestamp="1648471300703" timestamp="7625403" />
  <Command __id="3988" _type="InsertStringCommand" date="Mon Mar 28 10:48:46 EDT 2022" starttimestamp="1648471300703" timestamp="7625741" timestamp2="7625741">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3989" _type="InsertStringCommand" date="Mon Mar 28 10:48:46 EDT 2022" starttimestamp="1648471300703" timestamp="7625741" timestamp2="7625741">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3991" _type="PasteCommand" date="Mon Mar 28 10:48:46 EDT 2022" starttimestamp="1648471300703" timestamp="7626111" />
  <Command __id="3993" _type="PauseCommand" date="Mon Mar 28 10:48:50 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7629746">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3635]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3992" _type="SelectTextCommand" caretOffset="2823" date="Mon Mar 28 10:48:50 EDT 2022" end="2839" start="2823" starttimestamp="1648471300703" timestamp="7629746" />
  <Command __id="3994" _type="SelectTextCommand" caretOffset="2823" date="Mon Mar 28 10:48:50 EDT 2022" end="2839" start="2823" starttimestamp="1648471300703" timestamp="7629747" />
  <Command __id="3995" _type="MoveCaretCommand" caretOffset="2826" date="Mon Mar 28 10:48:51 EDT 2022" docOffset="2826" starttimestamp="1648471300703" timestamp="7630661" />
  <Command __id="3996" _type="MoveCaretCommand" caretOffset="2826" date="Mon Mar 28 10:48:51 EDT 2022" docOffset="2826" starttimestamp="1648471300703" timestamp="7630661" />
  <Command __id="3998" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:52 EDT 2022" starttimestamp="1648471300703" timestamp="7631606" />
  <Command __id="3999" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:52 EDT 2022" starttimestamp="1648471300703" timestamp="7631606" />
  <Command __id="4001" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:52 EDT 2022" starttimestamp="1648471300703" timestamp="7632108" />
  <Command __id="4002" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:52 EDT 2022" starttimestamp="1648471300703" timestamp="7632108" />
  <Command __id="4004" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:52 EDT 2022" starttimestamp="1648471300703" timestamp="7632139" />
  <Command __id="4005" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:52 EDT 2022" starttimestamp="1648471300703" timestamp="7632139" />
  <Command __id="4007" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:52 EDT 2022" starttimestamp="1648471300703" timestamp="7632170" />
  <Command __id="4008" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:52 EDT 2022" starttimestamp="1648471300703" timestamp="7632170" />
  <Command __id="4010" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:52 EDT 2022" starttimestamp="1648471300703" timestamp="7632200" />
  <Command __id="4011" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:52 EDT 2022" starttimestamp="1648471300703" timestamp="7632200" />
  <Command __id="4013" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:53 EDT 2022" starttimestamp="1648471300703" timestamp="7632444" />
  <Command __id="4014" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:53 EDT 2022" starttimestamp="1648471300703" timestamp="7632444" />
  <Command __id="4016" _type="InsertStringCommand" date="Mon Mar 28 10:48:53 EDT 2022" starttimestamp="1648471300703" timestamp="7632738" timestamp2="7632738">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4017" _type="InsertStringCommand" date="Mon Mar 28 10:48:53 EDT 2022" starttimestamp="1648471300703" timestamp="7632738" timestamp2="7632738">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4019" _type="InsertStringCommand" date="Mon Mar 28 10:48:53 EDT 2022" starttimestamp="1648471300703" timestamp="7632859" timestamp2="7632859">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4020" _type="InsertStringCommand" date="Mon Mar 28 10:48:53 EDT 2022" starttimestamp="1648471300703" timestamp="7632859" timestamp2="7632859">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4022" _type="InsertStringCommand" date="Mon Mar 28 10:48:53 EDT 2022" starttimestamp="1648471300703" timestamp="7632973" timestamp2="7632973">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4023" _type="InsertStringCommand" date="Mon Mar 28 10:48:53 EDT 2022" starttimestamp="1648471300703" timestamp="7632973" timestamp2="7632973">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4025" _type="InsertStringCommand" date="Mon Mar 28 10:48:53 EDT 2022" starttimestamp="1648471300703" timestamp="7633172" timestamp2="7633172">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4026" _type="InsertStringCommand" date="Mon Mar 28 10:48:53 EDT 2022" starttimestamp="1648471300703" timestamp="7633172" timestamp2="7633172">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="3981" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:48:42 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5811" docExpressionCount="584" docLength="6269" projectName="A5" starttimestamp="1648471300703" timestamp="7621763">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3987" _type="Insert" date="Mon Mar 28 10:48:46 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5815" docExpressionCount="584" docLength="6273" length="4" offset="2816" starttimestamp="1648471300703" timestamp="7625733">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3990" _type="Replace" date="Mon Mar 28 10:48:46 EDT 2022" docASTNodeCount="813" docActiveCodeLength="5855" docExpressionCount="588" docLength="6313" endLine="69" insertionLength="42" int_docASTNodeCount="808" int_docActiveCodeLength="5813" int_docExpressionCount="584" int_docLength="6271" length="2" offset="2818" startLine="69" starttimestamp="1648471300703" timestamp="7626035">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ClientArgsProcessor.getServerHost(args);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3997" _type="Delete" date="Mon Mar 28 10:48:52 EDT 2022" docASTNodeCount="813" docActiveCodeLength="5849" docExpressionCount="588" docLength="6307" endLine="69" length="6" offset="2820" repeat="6" startLine="69" starttimestamp="1648471300703" timestamp="7631601" timestamp2="7632442">
    <text><![CDATA[Client]]></text>
  </DocumentChange>
  <DocumentChange __id="4015" _type="Insert" date="Mon Mar 28 10:48:53 EDT 2022" docASTNodeCount="813" docActiveCodeLength="5856" docExpressionCount="588" docLength="6314" length="7" offset="2820" repeat="7" starttimestamp="1648471300703" timestamp="7632733" timestamp2="7633669">
    <text><![CDATA[SERVER_]]></text>
  </DocumentChange>
  <Command __id="4028" _type="InsertStringCommand" date="Mon Mar 28 10:48:54 EDT 2022" starttimestamp="1648471300703" timestamp="7633347" timestamp2="7633347">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4029" _type="InsertStringCommand" date="Mon Mar 28 10:48:54 EDT 2022" starttimestamp="1648471300703" timestamp="7633347" timestamp2="7633347">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4031" _type="InsertStringCommand" date="Mon Mar 28 10:48:54 EDT 2022" starttimestamp="1648471300703" timestamp="7633458" timestamp2="7633458">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4032" _type="InsertStringCommand" date="Mon Mar 28 10:48:54 EDT 2022" starttimestamp="1648471300703" timestamp="7633458" timestamp2="7633458">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4034" _type="InsertStringCommand" date="Mon Mar 28 10:48:54 EDT 2022" starttimestamp="1648471300703" timestamp="7633674" timestamp2="7633674">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="4035" _type="InsertStringCommand" date="Mon Mar 28 10:48:54 EDT 2022" starttimestamp="1648471300703" timestamp="7633674" timestamp2="7633674">
    <data><![CDATA[_]]></data>
  </Command>
  <DocumentChange __id="4036" _type="Delete" date="Mon Mar 28 10:48:54 EDT 2022" docASTNodeCount="813" docActiveCodeLength="5850" docExpressionCount="588" docLength="6308" endLine="69" length="6" offset="2821" repeat="6" startLine="69" starttimestamp="1648471300703" timestamp="7634033" timestamp2="7635772">
    <text><![CDATA[ERVER_]]></text>
  </DocumentChange>
  <Command __id="4037" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:54 EDT 2022" starttimestamp="1648471300703" timestamp="7634036" />
  <Command __id="4038" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:54 EDT 2022" starttimestamp="1648471300703" timestamp="7634036" />
  <Command __id="4040" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:54 EDT 2022" starttimestamp="1648471300703" timestamp="7634196" />
  <Command __id="4041" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:54 EDT 2022" starttimestamp="1648471300703" timestamp="7634196" />
  <Command __id="4043" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:55 EDT 2022" starttimestamp="1648471300703" timestamp="7634356" />
  <Command __id="4044" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:55 EDT 2022" starttimestamp="1648471300703" timestamp="7634356" />
  <Command __id="4046" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:55 EDT 2022" starttimestamp="1648471300703" timestamp="7634520" />
  <Command __id="4047" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:55 EDT 2022" starttimestamp="1648471300703" timestamp="7634520" />
  <Command __id="4049" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:55 EDT 2022" starttimestamp="1648471300703" timestamp="7634656" />
  <Command __id="4050" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:55 EDT 2022" starttimestamp="1648471300703" timestamp="7634657" />
  <Command __id="4053" _type="PauseCommand" date="Mon Mar 28 10:48:56 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7635774">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1117]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4052" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:56 EDT 2022" starttimestamp="1648471300703" timestamp="7635774" />
  <Command __id="4054" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:48:56 EDT 2022" starttimestamp="1648471300703" timestamp="7635775" />
  <Command __id="4056" _type="InsertStringCommand" date="Mon Mar 28 10:48:56 EDT 2022" starttimestamp="1648471300703" timestamp="7636130" timestamp2="7636130">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4057" _type="InsertStringCommand" date="Mon Mar 28 10:48:56 EDT 2022" starttimestamp="1648471300703" timestamp="7636131" timestamp2="7636131">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4059" _type="InsertStringCommand" date="Mon Mar 28 10:48:56 EDT 2022" starttimestamp="1648471300703" timestamp="7636244" timestamp2="7636244">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4060" _type="InsertStringCommand" date="Mon Mar 28 10:48:56 EDT 2022" starttimestamp="1648471300703" timestamp="7636244" timestamp2="7636244">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4062" _type="InsertStringCommand" date="Mon Mar 28 10:48:57 EDT 2022" starttimestamp="1648471300703" timestamp="7636494" timestamp2="7636494">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4063" _type="InsertStringCommand" date="Mon Mar 28 10:48:57 EDT 2022" starttimestamp="1648471300703" timestamp="7636494" timestamp2="7636494">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4065" _type="InsertStringCommand" date="Mon Mar 28 10:48:57 EDT 2022" starttimestamp="1648471300703" timestamp="7636624" timestamp2="7636624">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4066" _type="InsertStringCommand" date="Mon Mar 28 10:48:57 EDT 2022" starttimestamp="1648471300703" timestamp="7636624" timestamp2="7636624">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4068" _type="InsertStringCommand" date="Mon Mar 28 10:48:57 EDT 2022" starttimestamp="1648471300703" timestamp="7636733" timestamp2="7636733">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4069" _type="InsertStringCommand" date="Mon Mar 28 10:48:57 EDT 2022" starttimestamp="1648471300703" timestamp="7636733" timestamp2="7636733">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4071" _type="PauseCommand" date="Mon Mar 28 10:49:00 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7640243">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3510]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4070" _type="SelectTextCommand" caretOffset="2839" date="Mon Mar 28 10:49:00 EDT 2022" end="2859" start="2839" starttimestamp="1648471300703" timestamp="7640243" />
  <Command __id="4072" _type="SelectTextCommand" caretOffset="2839" date="Mon Mar 28 10:49:00 EDT 2022" end="2859" start="2839" starttimestamp="1648471300703" timestamp="7640244" />
  <Command __id="4074" _type="InsertStringCommand" date="Mon Mar 28 10:49:01 EDT 2022" starttimestamp="1648471300703" timestamp="7640672" timestamp2="7640672">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4075" _type="InsertStringCommand" date="Mon Mar 28 10:49:01 EDT 2022" starttimestamp="1648471300703" timestamp="7640672" timestamp2="7640672">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4076" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:49:01 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="7640675" />
  <DocumentChange __id="4055" _type="Insert" date="Mon Mar 28 10:48:56 EDT 2022" docASTNodeCount="813" docActiveCodeLength="5855" docExpressionCount="588" docLength="6313" length="5" offset="2821" repeat="5" starttimestamp="1648471300703" timestamp="7636127" timestamp2="7636729">
    <text><![CDATA[erver]]></text>
  </DocumentChange>
  <DocumentChange __id="4073" _type="Replace" date="Mon Mar 28 10:49:01 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5836" docExpressionCount="587" docLength="6294" endLine="69" insertionLength="1" int_docASTNodeCount="810" int_docActiveCodeLength="5835" int_docExpressionCount="585" int_docLength="6293" length="20" offset="2839" startLine="69" starttimestamp="1648471300703" timestamp="7640663">
    <deletedText><![CDATA[.getServerHost(args)]]></deletedText>
    <insertedText><![CDATA[.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4077" _type="Insert" date="Mon Mar 28 10:49:01 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5837" docExpressionCount="587" docLength="6295" length="1" offset="2840" starttimestamp="1648471300703" timestamp="7641262">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <Command __id="4079" _type="PauseCommand" date="Mon Mar 28 10:49:02 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7642279">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1017]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4081" _type="PauseCommand" date="Mon Mar 28 10:50:11 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="7710352">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[68073]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4080" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:50:11 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="7710352" />
  <Command __id="4083" _type="PauseCommand" date="Mon Mar 28 10:50:12 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7711487">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1135]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4082" _type="SelectTextCommand" caretOffset="2820" date="Mon Mar 28 10:50:12 EDT 2022" end="2841" start="2820" starttimestamp="1648471300703" timestamp="7711487" />
  <Command __id="4084" _type="SelectTextCommand" caretOffset="2820" date="Mon Mar 28 10:50:12 EDT 2022" end="2841" start="2820" starttimestamp="1648471300703" timestamp="7711487" />
  <Command __id="4086" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:50:12 EDT 2022" starttimestamp="1648471300703" timestamp="7712033" />
  <Command __id="4087" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:50:12 EDT 2022" starttimestamp="1648471300703" timestamp="7712033" />
  <Command __id="4089" _type="PauseCommand" date="Mon Mar 28 10:50:13 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7713160">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1127]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4088" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:50:13 EDT 2022" starttimestamp="1648471300703" timestamp="7713160" />
  <Command __id="4090" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:50:13 EDT 2022" starttimestamp="1648471300703" timestamp="7713262" />
  <Command __id="4091" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:50:14 EDT 2022" starttimestamp="1648471300703" timestamp="7713299" />
  <DocumentChange __id="4078" _type="Delete" date="Mon Mar 28 10:49:02 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5836" docExpressionCount="587" docLength="6294" endLine="69" length="1" offset="2840" startLine="69" starttimestamp="1648471300703" timestamp="7642279">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <DocumentChange __id="4085" _type="Delete" date="Mon Mar 28 10:50:12 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5815" docExpressionCount="584" docLength="6273" endLine="69" length="21" offset="2820" startLine="69" starttimestamp="1648471300703" timestamp="7712031">
    <text><![CDATA[ServerArgsProcessor.;]]></text>
  </DocumentChange>
  <Command __id="4093" _type="PauseCommand" date="Mon Mar 28 10:50:15 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7714431">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1132]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4094" _type="MoveCaretCommand" caretOffset="545" date="Mon Mar 28 10:50:15 EDT 2022" docOffset="545" starttimestamp="1648471300703" timestamp="7714538" />
  <Command __id="4092" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:50:15 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="741" projectName="A5" starttimestamp="1648471300703" timestamp="7714431">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4096" _type="PauseCommand" date="Mon Mar 28 10:50:19 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7719235">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4697]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4095" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:50:19 EDT 2022" docASTNodeCount="906" docActiveCodeLength="6800" docExpressionCount="636" docLength="7687" projectName="A5" starttimestamp="1648471300703" timestamp="7719235">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶"), Diff(INSERT,"import server.remote.ServerRemoteObjectRMI;¶"), Diff(EQUAL,"import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			// TODO Auto-generated catch block¶			e3.printStackTrace();¶		}¶		// Get server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		//NOTE This is just a hacky way of satisfying tests¶		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();¶		clientOutCoupler = new ClientOutCoupler(server, aClient, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶	¶	¶	@Override	¶	public void trace(boolean newValue) {¶		super.trace(newValue);¶		Tracer.showInfo(isTrace());¶	}¶	¶	@Override¶	public void experimentInput() {¶		long aStartTime = System.currentTimeMillis();¶		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);¶		boolean anOldValue = isTrace();¶		this.trace(false);¶		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {¶			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);¶		¶		}¶		trace(anOldValue);¶		long anEndTime = System.currentTimeMillis();¶		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);¶		¶	}¶	¶	@Override¶	/*¶	 * This override is not really needed, provided here to show that this method¶	 * exists.¶	 */¶	public void delaySends(int aMillisecondDelay) {¶		// getDelay() can be used to determine the delay¶		// in other parts of the program¶		super.delaySends(aMillisecondDelay);¶	}¶	¶	@Override¶	/**¶	 * Relevant in consistency assignments only ¶	 */¶	public void atomicBroadcast(boolean newValue) {¶		super.atomicBroadcast(newValue);¶		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);

		// Locate Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			// TODO Auto-generated catch block
			e3.printStackTrace();
		}
		// Get server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		//NOTE This is just a hacky way of satisfying tests
		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();
		clientOutCoupler = new ClientOutCoupler(server, aClient, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}
	
	
	@Override	
	public void trace(boolean newValue) {
		super.trace(newValue);
		Tracer.showInfo(isTrace());
	}
	
	@Override
	public void experimentInput() {
		long aStartTime = System.currentTimeMillis();
		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);
		boolean anOldValue = isTrace();
		this.trace(false);
		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {
			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);
		
		}
		trace(anOldValue);
		long anEndTime = System.currentTimeMillis();
		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);
		
	}
	
	@Override
	/*
	 * This override is not really needed, provided here to show that this method
	 * exists.
	 */
	public void delaySends(int aMillisecondDelay) {
		// getDelay() can be used to determine the delay
		// in other parts of the program
		super.delaySends(aMillisecondDelay);
	}
	
	@Override
	/**
	 * Relevant in consistency assignments only 
	 */
	public void atomicBroadcast(boolean newValue) {
		super.atomicBroadcast(newValue);
		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}


}
]]></snapshot>
  </Command>
  <Command __id="4097" _type="MoveCaretCommand" caretOffset="559" date="Mon Mar 28 10:50:20 EDT 2022" docOffset="559" starttimestamp="1648471300703" timestamp="7719316" />
  <Command __id="4099" _type="MoveCaretCommand" caretOffset="2820" date="Mon Mar 28 10:50:20 EDT 2022" docOffset="2820" starttimestamp="1648471300703" timestamp="7720194" />
  <Command __id="4098" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:50:20 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5815" docExpressionCount="584" docLength="6273" projectName="A5" starttimestamp="1648471300703" timestamp="7720101">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	"), Diff(INSERT,"	¶	"), Diff(EQUAL,"}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{
	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();
	
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
		
	}
	
	
	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		
	}
	
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		gipcRegistry.rebind(SERVER_NAME, this);	
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <Command __id="4101" _type="PauseCommand" date="Mon Mar 28 10:50:47 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="7747116">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[26922]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4102" _type="SelectTextCommand" caretOffset="2248" date="Mon Mar 28 10:50:47 EDT 2022" end="2288" start="2248" starttimestamp="1648471300703" timestamp="7747193" />
  <Command __id="4104" _type="PauseCommand" date="Mon Mar 28 10:50:49 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7748414">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1221]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4103" _type="MoveCaretCommand" caretOffset="2164" date="Mon Mar 28 10:50:49 EDT 2022" docOffset="3613" starttimestamp="1648471300703" timestamp="7748414" />
  <Command __id="4100" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:50:47 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6592" docExpressionCount="629" docLength="7201" projectName="A5" starttimestamp="1648471300703" timestamp="7747116">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4106" _type="PauseCommand" date="Mon Mar 28 10:50:57 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7757025">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8611]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4107" _type="MoveCaretCommand" caretOffset="2820" date="Mon Mar 28 10:50:57 EDT 2022" docOffset="2820" starttimestamp="1648471300703" timestamp="7757121" />
  <Command __id="4108" _type="MoveCaretCommand" caretOffset="3016" date="Mon Mar 28 10:50:58 EDT 2022" docOffset="3016" starttimestamp="1648471300703" timestamp="7757783" />
  <Command __id="4109" _type="MoveCaretCommand" caretOffset="3016" date="Mon Mar 28 10:50:58 EDT 2022" docOffset="3016" starttimestamp="1648471300703" timestamp="7757783" />
  <Command __id="4111" _type="ShellCommand" date="Mon Mar 28 10:50:58 EDT 2022" starttimestamp="1648471300703" timestamp="7758130" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4113" _type="PauseCommand" date="Mon Mar 28 10:51:01 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7760633">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2502]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="4112" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 10:51:01 EDT 2022" forward="true" matchWord="false" offset="3016" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="7760632" wrapSearch="false">
    <searchString><![CDATA[ServerHost]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="4115" _type="PauseCommand" date="Mon Mar 28 10:51:02 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7762027">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1395]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4114" _type="ShellCommand" date="Mon Mar 28 10:51:02 EDT 2022" starttimestamp="1648471300703" timestamp="7762027" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4117" _type="PauseCommand" date="Mon Mar 28 10:51:28 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="7788123">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[26096]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4116" _type="ShellCommand" date="Mon Mar 28 10:51:28 EDT 2022" starttimestamp="1648471300703" timestamp="7788123" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4119" _type="PauseCommand" date="Mon Mar 28 10:51:38 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7797556">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9433]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4118" _type="ShellCommand" date="Mon Mar 28 10:51:38 EDT 2022" starttimestamp="1648471300703" timestamp="7797556" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4120" _type="MoveCaretCommand" caretOffset="2812" date="Mon Mar 28 10:51:38 EDT 2022" docOffset="2812" starttimestamp="1648471300703" timestamp="7797599" />
  <Command __id="4121" _type="MoveCaretCommand" caretOffset="2812" date="Mon Mar 28 10:51:38 EDT 2022" docOffset="2812" starttimestamp="1648471300703" timestamp="7797599" />
  <Command __id="4105" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:50:57 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5815" docExpressionCount="584" docLength="6273" projectName="A5" starttimestamp="1648471300703" timestamp="7757025">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4123" _type="PauseCommand" date="Mon Mar 28 10:51:42 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7801928">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4329]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4124" _type="MoveCaretCommand" caretOffset="545" date="Mon Mar 28 10:51:42 EDT 2022" docOffset="545" starttimestamp="1648471300703" timestamp="7802018" />
  <Command __id="4122" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:51:42 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="741" projectName="A5" starttimestamp="1648471300703" timestamp="7801928">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4126" _type="PauseCommand" date="Mon Mar 28 10:51:44 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7803684">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1666]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4127" _type="MoveCaretCommand" caretOffset="2164" date="Mon Mar 28 10:51:44 EDT 2022" docOffset="3613" starttimestamp="1648471300703" timestamp="7803758" />
  <Command __id="4129" _type="PauseCommand" date="Mon Mar 28 10:52:10 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="7829794">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[26036]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4128" _type="ShellCommand" date="Mon Mar 28 10:52:10 EDT 2022" starttimestamp="1648471300703" timestamp="7829794" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4131" _type="PauseCommand" date="Mon Mar 28 10:52:28 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="7847481">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17687]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4130" _type="ShellCommand" date="Mon Mar 28 10:52:28 EDT 2022" starttimestamp="1648471300703" timestamp="7847481" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4132" _type="MoveCaretCommand" caretOffset="3676" date="Mon Mar 28 10:52:28 EDT 2022" docOffset="5125" starttimestamp="1648471300703" timestamp="7847585" />
  <Command __id="4125" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:51:44 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6592" docExpressionCount="629" docLength="7201" projectName="A5" starttimestamp="1648471300703" timestamp="7803684">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4134" _type="PauseCommand" date="Mon Mar 28 10:52:51 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="7870821">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23236]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4135" _type="MoveCaretCommand" caretOffset="2812" date="Mon Mar 28 10:52:51 EDT 2022" docOffset="2812" starttimestamp="1648471300703" timestamp="7870900" />
  <Command __id="4133" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:52:51 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5815" docExpressionCount="584" docLength="6273" projectName="A5" starttimestamp="1648471300703" timestamp="7870821">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4137" _type="PauseCommand" date="Mon Mar 28 10:53:09 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="7888970">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[18069]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4138" _type="MoveCaretCommand" caretOffset="3676" date="Mon Mar 28 10:53:09 EDT 2022" docOffset="5125" starttimestamp="1648471300703" timestamp="7889055" />
  <Command __id="4136" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:53:09 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6592" docExpressionCount="629" docLength="7201" projectName="A5" starttimestamp="1648471300703" timestamp="7888969">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4140" _type="PauseCommand" date="Mon Mar 28 10:53:10 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7890152">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1097]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4141" _type="MoveCaretCommand" caretOffset="545" date="Mon Mar 28 10:53:10 EDT 2022" docOffset="545" starttimestamp="1648471300703" timestamp="7890225" />
  <Command __id="4139" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:53:10 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="741" projectName="A5" starttimestamp="1648471300703" timestamp="7890152">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4143" _type="PauseCommand" date="Mon Mar 28 10:53:12 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7892096">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1871]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4144" _type="MoveCaretCommand" caretOffset="3676" date="Mon Mar 28 10:53:12 EDT 2022" docOffset="5125" starttimestamp="1648471300703" timestamp="7892177" />
  <Command __id="4146" _type="PauseCommand" date="Mon Mar 28 10:53:18 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7898098">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5921]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4145" _type="MoveCaretCommand" caretOffset="3211" date="Mon Mar 28 10:53:18 EDT 2022" docOffset="4660" starttimestamp="1648471300703" timestamp="7898098" />
  <Command __id="4148" _type="InsertStringCommand" date="Mon Mar 28 10:53:19 EDT 2022" starttimestamp="1648471300703" timestamp="7898433" timestamp2="7898433">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="4150" _type="InsertStringCommand" date="Mon Mar 28 10:53:19 EDT 2022" starttimestamp="1648471300703" timestamp="7898553" timestamp2="7898553">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4152" _type="InsertStringCommand" date="Mon Mar 28 10:53:19 EDT 2022" starttimestamp="1648471300703" timestamp="7898698" timestamp2="7898698">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="4154" _type="InsertStringCommand" date="Mon Mar 28 10:53:19 EDT 2022" starttimestamp="1648471300703" timestamp="7898867" timestamp2="7898867">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4156" _type="InsertStringCommand" date="Mon Mar 28 10:53:19 EDT 2022" starttimestamp="1648471300703" timestamp="7899084" timestamp2="7899084">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="4158" _type="PauseCommand" date="Mon Mar 28 10:53:20 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7900274">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1190]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4157" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:53:20 EDT 2022" starttimestamp="1648471300703" timestamp="7900274" />
  <Command __id="4159" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:53:21 EDT 2022" starttimestamp="1648471300703" timestamp="7900371" />
  <Command __id="4160" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:53:21 EDT 2022" starttimestamp="1648471300703" timestamp="7900407" />
  <Command __id="4162" _type="PauseCommand" date="Mon Mar 28 10:53:45 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="7924397">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[23990]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4161" _type="MoveCaretCommand" caretOffset="3264" date="Mon Mar 28 10:53:45 EDT 2022" docOffset="4713" starttimestamp="1648471300703" timestamp="7924397" />
  <Command __id="4164" _type="PauseCommand" date="Mon Mar 28 10:54:05 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="7944420">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[20023]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4163" _type="SelectTextCommand" caretOffset="538" date="Mon Mar 28 10:54:05 EDT 2022" end="577" start="538" starttimestamp="1648471300703" timestamp="7944420" />
  <Command __id="4165" _type="CopyCommand" date="Mon Mar 28 10:54:05 EDT 2022" starttimestamp="1648471300703" timestamp="7944677" />
  <Command __id="4166" _type="MoveCaretCommand" caretOffset="577" date="Mon Mar 28 10:54:06 EDT 2022" docOffset="2026" starttimestamp="1648471300703" timestamp="7945587" />
  <Command __id="4168" _type="InsertStringCommand" date="Mon Mar 28 10:54:06 EDT 2022" starttimestamp="1648471300703" timestamp="7946125" timestamp2="7946125">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4170" _type="PasteCommand" date="Mon Mar 28 10:54:07 EDT 2022" starttimestamp="1648471300703" timestamp="7946462" />
  <Command __id="4172" _type="PauseCommand" date="Mon Mar 28 10:54:08 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7948097">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1635]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4171" _type="MoveCaretCommand" caretOffset="604" date="Mon Mar 28 10:54:08 EDT 2022" docOffset="2053" starttimestamp="1648471300703" timestamp="7948097" />
  <Command __id="4142" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:53:12 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6592" docExpressionCount="629" docLength="7201" projectName="A5" starttimestamp="1648471300703" timestamp="7892096">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="4147" _type="Insert" date="Mon Mar 28 10:53:19 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6597" docExpressionCount="629" docLength="7206" length="5" offset="4660" repeat="5" starttimestamp="1648471300703" timestamp="7898428" timestamp2="7899079">
    <text><![CDATA[GIPC_]]></text>
  </DocumentChange>
  <DocumentChange __id="4167" _type="Insert" date="Mon Mar 28 10:54:06 EDT 2022" docASTNodeCount="879" docActiveCodeLength="6600" docExpressionCount="629" docLength="7209" length="3" offset="2026" starttimestamp="1648471300703" timestamp="7946117">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="4169" _type="Replace" date="Mon Mar 28 10:54:07 EDT 2022" docASTNodeCount="885" docActiveCodeLength="6639" docExpressionCount="632" docLength="7248" endLine="46" insertionLength="40" int_docASTNodeCount="879" int_docActiveCodeLength="6599" int_docExpressionCount="629" int_docLength="7208" length="1" offset="2028" startLine="46" starttimestamp="1648471300703" timestamp="7946458">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	ServerRemoteInterfaceRMI server = null;]]></insertedText>
  </DocumentChange>
  <Command __id="4174" _type="PauseCommand" date="Mon Mar 28 10:54:11 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7950558">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2461]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="4173" _type="Delete" date="Mon Mar 28 10:54:11 EDT 2022" docASTNodeCount="885" docActiveCodeLength="6636" docExpressionCount="632" docLength="7245" endLine="46" length="3" offset="2050" repeat="3" startLine="46" starttimestamp="1648471300703" timestamp="7950558" timestamp2="7950937">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="4175" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:54:11 EDT 2022" starttimestamp="1648471300703" timestamp="7950561" />
  <Command __id="4177" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:54:11 EDT 2022" starttimestamp="1648471300703" timestamp="7950760" />
  <Command __id="4179" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:54:11 EDT 2022" starttimestamp="1648471300703" timestamp="7950939" />
  <Command __id="4181" _type="InsertStringCommand" date="Mon Mar 28 10:54:12 EDT 2022" starttimestamp="1648471300703" timestamp="7951547" timestamp2="7951547">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="4183" _type="InsertStringCommand" date="Mon Mar 28 10:54:12 EDT 2022" starttimestamp="1648471300703" timestamp="7951711" timestamp2="7951711">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4185" _type="InsertStringCommand" date="Mon Mar 28 10:54:12 EDT 2022" starttimestamp="1648471300703" timestamp="7951797" timestamp2="7951797">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="4187" _type="InsertStringCommand" date="Mon Mar 28 10:54:12 EDT 2022" starttimestamp="1648471300703" timestamp="7951954" timestamp2="7951954">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4189" _type="PauseCommand" date="Mon Mar 28 10:54:14 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7953647">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1693]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4188" _type="MoveCaretCommand" caretOffset="612" date="Mon Mar 28 10:54:14 EDT 2022" docOffset="2061" starttimestamp="1648471300703" timestamp="7953647" />
  <DocumentChange __id="4180" _type="Insert" date="Mon Mar 28 10:54:12 EDT 2022" docASTNodeCount="885" docActiveCodeLength="6640" docExpressionCount="632" docLength="7249" length="4" offset="2050" repeat="4" starttimestamp="1648471300703" timestamp="7951541" timestamp2="7951948">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="4191" _type="PauseCommand" date="Mon Mar 28 10:54:15 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7955150">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1503]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4192" _type="InsertStringCommand" date="Mon Mar 28 10:54:15 EDT 2022" starttimestamp="1648471300703" timestamp="7955157" timestamp2="7955157">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="4194" _type="InsertStringCommand" date="Mon Mar 28 10:54:16 EDT 2022" starttimestamp="1648471300703" timestamp="7955311" timestamp2="7955311">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4196" _type="InsertStringCommand" date="Mon Mar 28 10:54:16 EDT 2022" starttimestamp="1648471300703" timestamp="7955416" timestamp2="7955416">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="4198" _type="InsertStringCommand" date="Mon Mar 28 10:54:16 EDT 2022" starttimestamp="1648471300703" timestamp="7955493" timestamp2="7955493">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4200" _type="PauseCommand" date="Mon Mar 28 10:54:17 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7956897">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1404]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4199" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:54:17 EDT 2022" starttimestamp="1648471300703" timestamp="7956897" />
  <Command __id="4201" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:54:17 EDT 2022" starttimestamp="1648471300703" timestamp="7956986" />
  <Command __id="4202" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:54:17 EDT 2022" starttimestamp="1648471300703" timestamp="7957028" />
  <Command __id="4204" _type="PauseCommand" date="Mon Mar 28 10:54:20 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7959595">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2567]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4203" _type="SelectTextCommand" caretOffset="606" date="Mon Mar 28 10:54:20 EDT 2022" end="617" start="606" starttimestamp="1648471300703" timestamp="7959595" />
  <Command __id="4205" _type="CopyCommand" date="Mon Mar 28 10:54:20 EDT 2022" starttimestamp="1648471300703" timestamp="7959896" />
  <Command __id="4207" _type="PauseCommand" date="Mon Mar 28 10:54:22 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="7961429">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1533]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4206" _type="MoveCaretCommand" caretOffset="528" date="Mon Mar 28 10:54:22 EDT 2022" docOffset="1977" starttimestamp="1648471300703" timestamp="7961429" />
  <Command __id="4209" _type="PauseCommand" date="Mon Mar 28 10:54:28 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="7968094">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6665]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4208" _type="MoveCaretCommand" caretOffset="3307" date="Mon Mar 28 10:54:28 EDT 2022" docOffset="4756" starttimestamp="1648471300703" timestamp="7968094" />
  <Command __id="4211" _type="InsertStringCommand" date="Mon Mar 28 10:54:29 EDT 2022" starttimestamp="1648471300703" timestamp="7968409" timestamp2="7968409">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4213" _type="InsertStringCommand" date="Mon Mar 28 10:54:29 EDT 2022" starttimestamp="1648471300703" timestamp="7968520" timestamp2="7968520">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4215" _type="InsertStringCommand" date="Mon Mar 28 10:54:29 EDT 2022" starttimestamp="1648471300703" timestamp="7968948" timestamp2="7968948">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4217" _type="InsertStringCommand" date="Mon Mar 28 10:54:29 EDT 2022" starttimestamp="1648471300703" timestamp="7969077" timestamp2="7969077">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4219" _type="InsertStringCommand" date="Mon Mar 28 10:54:30 EDT 2022" starttimestamp="1648471300703" timestamp="7969372" timestamp2="7969372">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="4221" _type="InsertStringCommand" date="Mon Mar 28 10:54:30 EDT 2022" starttimestamp="1648471300703" timestamp="7969577" timestamp2="7969577">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4223" _type="InsertStringCommand" date="Mon Mar 28 10:54:30 EDT 2022" starttimestamp="1648471300703" timestamp="7969704" timestamp2="7969704">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4225" _type="InsertStringCommand" date="Mon Mar 28 10:54:30 EDT 2022" starttimestamp="1648471300703" timestamp="7969921" timestamp2="7969921">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4227" _type="InsertStringCommand" date="Mon Mar 28 10:54:31 EDT 2022" starttimestamp="1648471300703" timestamp="7970421" timestamp2="7970421">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="4229" _type="InsertStringCommand" date="Mon Mar 28 10:54:31 EDT 2022" starttimestamp="1648471300703" timestamp="7970521" timestamp2="7970521">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4231" _type="InsertStringCommand" date="Mon Mar 28 10:54:31 EDT 2022" starttimestamp="1648471300703" timestamp="7970639" timestamp2="7970639">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="4233" _type="InsertStringCommand" date="Mon Mar 28 10:54:31 EDT 2022" starttimestamp="1648471300703" timestamp="7970797" timestamp2="7970797">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4235" _type="InsertStringCommand" date="Mon Mar 28 10:54:31 EDT 2022" starttimestamp="1648471300703" timestamp="7971001" timestamp2="7971001">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4237" _type="InsertStringCommand" date="Mon Mar 28 10:54:32 EDT 2022" starttimestamp="1648471300703" timestamp="7971733" timestamp2="7971733">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4239" _type="InsertStringCommand" date="Mon Mar 28 10:54:32 EDT 2022" starttimestamp="1648471300703" timestamp="7971938" timestamp2="7971938">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4241" _type="InsertStringCommand" date="Mon Mar 28 10:54:32 EDT 2022" starttimestamp="1648471300703" timestamp="7972042" timestamp2="7972042">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4243" _type="InsertStringCommand" date="Mon Mar 28 10:54:33 EDT 2022" starttimestamp="1648471300703" timestamp="7972301" timestamp2="7972301">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4245" _type="InsertStringCommand" date="Mon Mar 28 10:54:33 EDT 2022" starttimestamp="1648471300703" timestamp="7972462" timestamp2="7972462">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4247" _type="InsertStringCommand" date="Mon Mar 28 10:54:33 EDT 2022" starttimestamp="1648471300703" timestamp="7972555" timestamp2="7972555">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4249" _type="InsertStringCommand" date="Mon Mar 28 10:54:33 EDT 2022" starttimestamp="1648471300703" timestamp="7972663" timestamp2="7972663">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4251" _type="InsertStringCommand" date="Mon Mar 28 10:54:33 EDT 2022" starttimestamp="1648471300703" timestamp="7972766" timestamp2="7972766">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4253" _type="InsertStringCommand" date="Mon Mar 28 10:54:33 EDT 2022" starttimestamp="1648471300703" timestamp="7972842" timestamp2="7972842">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4255" _type="InsertStringCommand" date="Mon Mar 28 10:54:33 EDT 2022" starttimestamp="1648471300703" timestamp="7972920" timestamp2="7972920">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4257" _type="InsertStringCommand" date="Mon Mar 28 10:54:33 EDT 2022" starttimestamp="1648471300703" timestamp="7973045" timestamp2="7973045">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4259" _type="InsertStringCommand" date="Mon Mar 28 10:54:34 EDT 2022" starttimestamp="1648471300703" timestamp="7973601" timestamp2="7973601">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4190" _type="Insert" date="Mon Mar 28 10:54:15 EDT 2022" docASTNodeCount="885" docActiveCodeLength="6644" docExpressionCount="632" docLength="7253" length="4" offset="2061" repeat="4" starttimestamp="1648471300703" timestamp="7955150" timestamp2="7955488">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="4210" _type="Insert" date="Mon Mar 28 10:54:29 EDT 2022" docASTNodeCount="885" docActiveCodeLength="6656" docExpressionCount="632" docLength="7287" length="34" offset="4756" repeat="25" starttimestamp="1648471300703" timestamp="7968390" timestamp2="7973580">
    <text><![CDATA[
		
		//Get GIPC server here
		]]></text>
  </DocumentChange>
  <Command __id="4261" _type="PauseCommand" date="Mon Mar 28 10:54:36 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="7975699">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2098]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="4262" _type="PasteCommand" date="Mon Mar 28 10:54:36 EDT 2022" starttimestamp="1648471300703" timestamp="7975704" />
  <Command __id="4264" _type="PauseCommand" date="Mon Mar 28 10:54:49 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="7988451">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[12747]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4263" _type="ShellCommand" date="Mon Mar 28 10:54:49 EDT 2022" starttimestamp="1648471300703" timestamp="7988451" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4266" _type="PauseCommand" date="Mon Mar 28 10:55:02 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8001628">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13177]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4265" _type="ShellCommand" date="Mon Mar 28 10:55:02 EDT 2022" starttimestamp="1648471300703" timestamp="8001628" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="4260" _type="Replace" date="Mon Mar 28 10:54:36 EDT 2022" docASTNodeCount="888" docActiveCodeLength="6667" docExpressionCount="634" docLength="7298" endLine="126" insertionLength="13" int_docASTNodeCount="885" int_docActiveCodeLength="6654" int_docExpressionCount="632" int_docLength="7285" length="2" offset="4788" startLine="126" starttimestamp="1648471300703" timestamp="7975699">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		serverGIPC ]]></insertedText>
  </DocumentChange>
  <Command __id="4268" _type="PauseCommand" date="Mon Mar 28 10:55:05 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8004655">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3027]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4269" _type="PasteCommand" date="Mon Mar 28 10:55:05 EDT 2022" starttimestamp="1648471300703" timestamp="8004663" />
  <Command __id="4271" _type="PauseCommand" date="Mon Mar 28 10:55:07 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8006654">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1991]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4270" _type="MoveCaretCommand" caretOffset="3352" date="Mon Mar 28 10:55:07 EDT 2022" docOffset="4801" starttimestamp="1648471300703" timestamp="8006654" />
  <Command __id="4273" _type="InsertStringCommand" date="Mon Mar 28 10:55:08 EDT 2022" starttimestamp="1648471300703" timestamp="8007396" timestamp2="8007396">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="4275" _type="InsertStringCommand" date="Mon Mar 28 10:55:08 EDT 2022" starttimestamp="1648471300703" timestamp="8007516" timestamp2="8007516">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="4277" _type="InsertStringCommand" date="Mon Mar 28 10:55:08 EDT 2022" starttimestamp="1648471300703" timestamp="8007721" timestamp2="8007721">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4279" _type="PauseCommand" date="Mon Mar 28 10:55:13 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="8013167">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5446]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4278" _type="MoveCaretCommand" caretOffset="3399" date="Mon Mar 28 10:55:13 EDT 2022" docOffset="4848" starttimestamp="1648471300703" timestamp="8013167" />
  <Command __id="4281" _type="PauseCommand" date="Mon Mar 28 10:55:16 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8015770">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2603]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4280" _type="SelectTextCommand" caretOffset="3407" date="Mon Mar 28 10:55:16 EDT 2022" end="3414" start="3407" starttimestamp="1648471300703" timestamp="8015770" />
  <Command __id="4283" _type="InsertStringCommand" date="Mon Mar 28 10:55:16 EDT 2022" starttimestamp="1648471300703" timestamp="8015891" timestamp2="8015891">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4285" _type="InsertStringCommand" date="Mon Mar 28 10:55:16 EDT 2022" starttimestamp="1648471300703" timestamp="8016006" timestamp2="8016006">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4287" _type="InsertStringCommand" date="Mon Mar 28 10:55:16 EDT 2022" starttimestamp="1648471300703" timestamp="8016094" timestamp2="8016094">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4289" _type="InsertStringCommand" date="Mon Mar 28 10:55:17 EDT 2022" starttimestamp="1648471300703" timestamp="8016304" timestamp2="8016304">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4291" _type="InsertStringCommand" date="Mon Mar 28 10:55:17 EDT 2022" starttimestamp="1648471300703" timestamp="8016457" timestamp2="8016457">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4293" _type="InsertStringCommand" date="Mon Mar 28 10:55:17 EDT 2022" starttimestamp="1648471300703" timestamp="8016580" timestamp2="8016580">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4295" _type="PauseCommand" date="Mon Mar 28 10:55:18 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8017781">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1201]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4294" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:55:18 EDT 2022" starttimestamp="1648471300703" timestamp="8017781" />
  <Command __id="4296" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:55:18 EDT 2022" starttimestamp="1648471300703" timestamp="8017881" />
  <Command __id="4297" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:55:18 EDT 2022" starttimestamp="1648471300703" timestamp="8017913" />
  <Command __id="4299" _type="PauseCommand" date="Mon Mar 28 10:55:20 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8020086">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2173]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4298" _type="MoveCaretCommand" caretOffset="3381" date="Mon Mar 28 10:55:20 EDT 2022" docOffset="4830" starttimestamp="1648471300703" timestamp="8020086" />
  <Command __id="4301" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:55:21 EDT 2022" starttimestamp="1648471300703" timestamp="8020527" />
  <Command __id="4303" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:55:21 EDT 2022" starttimestamp="1648471300703" timestamp="8020628" />
  <Command __id="4305" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:55:21 EDT 2022" starttimestamp="1648471300703" timestamp="8020824" />
  <Command __id="4307" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:55:21 EDT 2022" starttimestamp="1648471300703" timestamp="8021223" />
  <Command __id="4309" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:55:22 EDT 2022" starttimestamp="1648471300703" timestamp="8021608" />
  <Command __id="4311" _type="PauseCommand" date="Mon Mar 28 10:55:24 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8023619">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2011]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4310" _type="MoveCaretCommand" caretOffset="3354" date="Mon Mar 28 10:55:24 EDT 2022" docOffset="4803" starttimestamp="1648471300703" timestamp="8023619" />
  <Command __id="4313" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:55:24 EDT 2022" starttimestamp="1648471300703" timestamp="8023951" />
  <Command __id="4315" _type="PauseCommand" date="Mon Mar 28 10:55:25 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8025066">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1115]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4314" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:55:25 EDT 2022" starttimestamp="1648471300703" timestamp="8025066" />
  <Command __id="4316" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:55:25 EDT 2022" starttimestamp="1648471300703" timestamp="8025166" />
  <Command __id="4317" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:55:25 EDT 2022" starttimestamp="1648471300703" timestamp="8025206" />
  <DocumentChange __id="4267" _type="Insert" date="Mon Mar 28 10:55:05 EDT 2022" docASTNodeCount="897" docActiveCodeLength="6733" docExpressionCount="639" docLength="7364" length="66" offset="4801" starttimestamp="1648471300703" timestamp="8004655">
    <text><![CDATA[gipcRegistry.lookup(
				DistributedCounter.class, COUNTER_NAME);]]></text>
  </DocumentChange>
  <DocumentChange __id="4272" _type="Insert" date="Mon Mar 28 10:55:08 EDT 2022" docASTNodeCount="895" docActiveCodeLength="6736" docExpressionCount="640" docLength="7367" length="3" offset="4801" repeat="3" starttimestamp="1648471300703" timestamp="8007388" timestamp2="8007716">
    <text><![CDATA[== ]]></text>
  </DocumentChange>
  <DocumentChange __id="4282" _type="Replace" date="Mon Mar 28 10:55:16 EDT 2022" docASTNodeCount="895" docActiveCodeLength="6730" docExpressionCount="640" docLength="7361" endLine="127" insertionLength="1" int_docASTNodeCount="895" int_docActiveCodeLength="6729" int_docExpressionCount="640" int_docLength="7360" length="7" offset="4856" startLine="127" starttimestamp="1648471300703" timestamp="8015880">
    <deletedText><![CDATA[COUNTER]]></deletedText>
    <insertedText><![CDATA[S]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4284" _type="Insert" date="Mon Mar 28 10:55:16 EDT 2022" docASTNodeCount="895" docActiveCodeLength="6735" docExpressionCount="640" docLength="7366" length="5" offset="4857" repeat="5" starttimestamp="1648471300703" timestamp="8016002" timestamp2="8016577">
    <text><![CDATA[ERVER]]></text>
  </DocumentChange>
  <DocumentChange __id="4300" _type="Delete" date="Mon Mar 28 10:55:21 EDT 2022" docASTNodeCount="895" docActiveCodeLength="6729" docExpressionCount="640" docLength="7360" endLine="127" length="6" offset="4824" repeat="5" startLine="126" starttimestamp="1648471300703" timestamp="8020522" timestamp2="8021603">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="4312" _type="Delete" date="Mon Mar 28 10:55:24 EDT 2022" docASTNodeCount="895" docActiveCodeLength="6728" docExpressionCount="640" docLength="7359" endLine="126" length="1" offset="4802" startLine="126" starttimestamp="1648471300703" timestamp="8023945">
    <text><![CDATA[=]]></text>
  </DocumentChange>
  <Command __id="4319" _type="PauseCommand" date="Mon Mar 28 10:55:31 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="8030749">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5543]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4320" _type="InsertStringCommand" date="Mon Mar 28 10:55:31 EDT 2022" starttimestamp="1648471300703" timestamp="8030757" timestamp2="8030757">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4322" _type="InsertStringCommand" date="Mon Mar 28 10:55:31 EDT 2022" starttimestamp="1648471300703" timestamp="8030940" timestamp2="8030940">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4324" _type="InsertStringCommand" date="Mon Mar 28 10:55:32 EDT 2022" starttimestamp="1648471300703" timestamp="8031797" timestamp2="8031797">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4326" _type="PauseCommand" date="Mon Mar 28 10:55:34 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8033356">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1559]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4325" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 10:55:34 EDT 2022" starttimestamp="1648471300703" timestamp="8033356" />
  <DocumentChange __id="4318" _type="Insert" date="Mon Mar 28 10:55:31 EDT 2022" docASTNodeCount="897" docActiveCodeLength="6731" docExpressionCount="641" docLength="7362" length="3" offset="4802" repeat="3" starttimestamp="1648471300703" timestamp="8030749" timestamp2="8031787">
    <text><![CDATA[ ()]]></text>
  </DocumentChange>
  <Command __id="4328" _type="PauseCommand" date="Mon Mar 28 10:55:36 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8035865">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2509]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="4327" _type="Insert" date="Mon Mar 28 10:55:36 EDT 2022" docASTNodeCount="898" docActiveCodeLength="6736" docExpressionCount="642" docLength="7367" length="5" offset="4804" repeat="5" starttimestamp="1648471300703" timestamp="8035865" timestamp2="8036339">
    <text><![CDATA[Clien]]></text>
  </DocumentChange>
  <Command __id="4329" _type="InsertStringCommand" date="Mon Mar 28 10:55:36 EDT 2022" starttimestamp="1648471300703" timestamp="8035880" timestamp2="8035880">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4331" _type="InsertStringCommand" date="Mon Mar 28 10:55:36 EDT 2022" starttimestamp="1648471300703" timestamp="8036039" timestamp2="8036039">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4333" _type="InsertStringCommand" date="Mon Mar 28 10:55:36 EDT 2022" starttimestamp="1648471300703" timestamp="8036088" timestamp2="8036088">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4335" _type="InsertStringCommand" date="Mon Mar 28 10:55:36 EDT 2022" starttimestamp="1648471300703" timestamp="8036217" timestamp2="8036217">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4337" _type="InsertStringCommand" date="Mon Mar 28 10:55:37 EDT 2022" starttimestamp="1648471300703" timestamp="8036345" timestamp2="8036345">
    <data><![CDATA[n]]></data>
  </Command>
  <DocumentChange __id="4338" _type="Delete" date="Mon Mar 28 10:55:37 EDT 2022" docASTNodeCount="897" docActiveCodeLength="6731" docExpressionCount="641" docLength="7362" endLine="126" length="5" offset="4804" repeat="5" startLine="126" starttimestamp="1648471300703" timestamp="8036715" timestamp2="8037322">
    <text><![CDATA[Clien]]></text>
  </DocumentChange>
  <Command __id="4339" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:55:37 EDT 2022" starttimestamp="1648471300703" timestamp="8036720" />
  <Command __id="4341" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:55:37 EDT 2022" starttimestamp="1648471300703" timestamp="8036870" />
  <Command __id="4343" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:55:37 EDT 2022" starttimestamp="1648471300703" timestamp="8037026" />
  <Command __id="4345" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:55:37 EDT 2022" starttimestamp="1648471300703" timestamp="8037181" />
  <Command __id="4347" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:55:38 EDT 2022" starttimestamp="1648471300703" timestamp="8037329" />
  <Command __id="4349" _type="InsertStringCommand" date="Mon Mar 28 10:55:38 EDT 2022" starttimestamp="1648471300703" timestamp="8037591" timestamp2="8037591">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4351" _type="InsertStringCommand" date="Mon Mar 28 10:55:38 EDT 2022" starttimestamp="1648471300703" timestamp="8037802" timestamp2="8037802">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4353" _type="InsertStringCommand" date="Mon Mar 28 10:55:38 EDT 2022" starttimestamp="1648471300703" timestamp="8037903" timestamp2="8037903">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4355" _type="InsertStringCommand" date="Mon Mar 28 10:55:38 EDT 2022" starttimestamp="1648471300703" timestamp="8038137" timestamp2="8038137">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4357" _type="InsertStringCommand" date="Mon Mar 28 10:55:38 EDT 2022" starttimestamp="1648471300703" timestamp="8038281" timestamp2="8038281">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4359" _type="InsertStringCommand" date="Mon Mar 28 10:55:39 EDT 2022" starttimestamp="1648471300703" timestamp="8038396" timestamp2="8038396">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4361" _type="InsertStringCommand" date="Mon Mar 28 10:55:39 EDT 2022" starttimestamp="1648471300703" timestamp="8038681" timestamp2="8038681">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4363" _type="InsertStringCommand" date="Mon Mar 28 10:55:39 EDT 2022" starttimestamp="1648471300703" timestamp="8038870" timestamp2="8038870">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4365" _type="InsertStringCommand" date="Mon Mar 28 10:55:39 EDT 2022" starttimestamp="1648471300703" timestamp="8039138" timestamp2="8039138">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4367" _type="InsertStringCommand" date="Mon Mar 28 10:55:39 EDT 2022" starttimestamp="1648471300703" timestamp="8039219" timestamp2="8039219">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4369" _type="InsertStringCommand" date="Mon Mar 28 10:55:40 EDT 2022" starttimestamp="1648471300703" timestamp="8039348" timestamp2="8039348">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4371" _type="InsertStringCommand" date="Mon Mar 28 10:55:40 EDT 2022" starttimestamp="1648471300703" timestamp="8039567" timestamp2="8039567">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4373" _type="InsertStringCommand" date="Mon Mar 28 10:55:40 EDT 2022" starttimestamp="1648471300703" timestamp="8040060" timestamp2="8040060">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="4375" _type="InsertStringCommand" date="Mon Mar 28 10:55:40 EDT 2022" starttimestamp="1648471300703" timestamp="8040241" timestamp2="8040241">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="4377" _type="InsertStringCommand" date="Mon Mar 28 10:55:41 EDT 2022" starttimestamp="1648471300703" timestamp="8040348" timestamp2="8040348">
    <data><![CDATA[j]]></data>
  </Command>
  <Command __id="4379" _type="InsertStringCommand" date="Mon Mar 28 10:55:41 EDT 2022" starttimestamp="1648471300703" timestamp="8040450" timestamp2="8040450">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4381" _type="InsertStringCommand" date="Mon Mar 28 10:55:41 EDT 2022" starttimestamp="1648471300703" timestamp="8040660" timestamp2="8040660">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4383" _type="InsertStringCommand" date="Mon Mar 28 10:55:41 EDT 2022" starttimestamp="1648471300703" timestamp="8040830" timestamp2="8040830">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4385" _type="InsertStringCommand" date="Mon Mar 28 10:55:41 EDT 2022" starttimestamp="1648471300703" timestamp="8041221" timestamp2="8041221">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="4387" _type="InsertStringCommand" date="Mon Mar 28 10:55:42 EDT 2022" starttimestamp="1648471300703" timestamp="8041320" timestamp2="8041320">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4389" _type="InsertStringCommand" date="Mon Mar 28 10:55:42 EDT 2022" starttimestamp="1648471300703" timestamp="8041354" timestamp2="8041354">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="4391" _type="InsertStringCommand" date="Mon Mar 28 10:55:42 EDT 2022" starttimestamp="1648471300703" timestamp="8041525" timestamp2="8041525">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4393" _type="PauseCommand" date="Mon Mar 28 10:55:43 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8043210">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1685]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4392" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:55:43 EDT 2022" starttimestamp="1648471300703" timestamp="8043210" />
  <Command __id="4394" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:55:44 EDT 2022" starttimestamp="1648471300703" timestamp="8043311" />
  <Command __id="4395" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:55:44 EDT 2022" starttimestamp="1648471300703" timestamp="8043349" />
  <Command __id="4397" _type="PauseCommand" date="Mon Mar 28 10:55:47 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8046516">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3167]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4396" _type="ShellCommand" date="Mon Mar 28 10:55:47 EDT 2022" starttimestamp="1648471300703" timestamp="8046516" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4398" _type="ShellCommand" date="Mon Mar 28 10:55:47 EDT 2022" starttimestamp="1648471300703" timestamp="8046636" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4402" _type="PauseCommand" date="Mon Mar 28 10:55:51 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8050875">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[4221]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4401" _type="SelectTextCommand" caretOffset="3355" date="Mon Mar 28 10:55:51 EDT 2022" end="3377" start="3355" starttimestamp="1648471300703" timestamp="8050875" />
  <Command __id="4403" _type="CopyCommand" date="Mon Mar 28 10:55:51 EDT 2022" starttimestamp="1648471300703" timestamp="8051091" />
  <Command __id="4405" _type="PauseCommand" date="Mon Mar 28 10:55:56 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8055358">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[4267]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4404" _type="SelectTextCommand" caretOffset="3399" date="Mon Mar 28 10:55:56 EDT 2022" end="3417" start="3399" starttimestamp="1648471300703" timestamp="8055358" />
  <Command __id="4407" _type="PasteCommand" date="Mon Mar 28 10:55:56 EDT 2022" starttimestamp="1648471300703" timestamp="8055740" />
  <Command __id="4409" _type="PauseCommand" date="Mon Mar 28 10:55:57 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8056811">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1071]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4408" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:55:57 EDT 2022" starttimestamp="1648471300703" timestamp="8056811" />
  <Command __id="4410" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:55:57 EDT 2022" starttimestamp="1648471300703" timestamp="8056903" />
  <Command __id="4411" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:55:57 EDT 2022" starttimestamp="1648471300703" timestamp="8056932" />
  <Command __id="4413" _type="PauseCommand" date="Mon Mar 28 10:56:13 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8073059">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[16127]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4412" _type="ShellCommand" date="Mon Mar 28 10:56:13 EDT 2022" starttimestamp="1648471300703" timestamp="8073059" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4414" _type="ShellCommand" date="Mon Mar 28 10:56:13 EDT 2022" starttimestamp="1648471300703" timestamp="8073236" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4418" _type="PauseCommand" date="Mon Mar 28 10:56:15 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8075248">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1991]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4417" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 10:56:15 EDT 2022" starttimestamp="1648471300703" timestamp="8075248" />
  <Command __id="4419" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:56:16 EDT 2022" starttimestamp="1648471300703" timestamp="8075345" />
  <Command __id="4420" _type="EclipseCommand" commandID="" date="Mon Mar 28 10:56:16 EDT 2022" starttimestamp="1648471300703" timestamp="8075386" />
  <Command __id="4422" _type="PauseCommand" date="Mon Mar 28 10:56:33 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8092741">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[17355]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4421" _type="MoveCaretCommand" caretOffset="3449" date="Mon Mar 28 10:56:33 EDT 2022" docOffset="4944" starttimestamp="1648471300703" timestamp="8092741" />
  <Command __id="4424" _type="InsertStringCommand" date="Mon Mar 28 10:56:33 EDT 2022" starttimestamp="1648471300703" timestamp="8093219" timestamp2="8093219">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4425" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Mar 28 10:56:34 EDT 2022" starttimestamp="1648471300703" timestamp="8093951" />
  <Command __id="4427" _type="InsertStringCommand" date="Mon Mar 28 10:56:35 EDT 2022" starttimestamp="1648471300703" timestamp="8094355" timestamp2="8094355">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="4429" _type="InsertStringCommand" date="Mon Mar 28 10:56:35 EDT 2022" starttimestamp="1648471300703" timestamp="8094468" timestamp2="8094468">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4431" _type="InsertStringCommand" date="Mon Mar 28 10:56:35 EDT 2022" starttimestamp="1648471300703" timestamp="8094609" timestamp2="8094609">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="4433" _type="InsertStringCommand" date="Mon Mar 28 10:56:35 EDT 2022" starttimestamp="1648471300703" timestamp="8094752" timestamp2="8094752">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4435" _type="InsertStringCommand" date="Mon Mar 28 10:56:35 EDT 2022" starttimestamp="1648471300703" timestamp="8095294" timestamp2="8095294">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="4437" _type="InsertStringCommand" date="Mon Mar 28 10:56:36 EDT 2022" starttimestamp="1648471300703" timestamp="8095482" timestamp2="8095482">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="4439" _type="InsertStringCommand" date="Mon Mar 28 10:56:36 EDT 2022" starttimestamp="1648471300703" timestamp="8095601" timestamp2="8095601">
    <data><![CDATA[j]]></data>
  </Command>
  <Command __id="4441" _type="InsertStringCommand" date="Mon Mar 28 10:56:36 EDT 2022" starttimestamp="1648471300703" timestamp="8095694" timestamp2="8095694">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4443" _type="InsertStringCommand" date="Mon Mar 28 10:56:36 EDT 2022" starttimestamp="1648471300703" timestamp="8095898" timestamp2="8095898">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4445" _type="InsertStringCommand" date="Mon Mar 28 10:56:36 EDT 2022" starttimestamp="1648471300703" timestamp="8096084" timestamp2="8096084">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4447" _type="InsertStringCommand" date="Mon Mar 28 10:56:37 EDT 2022" starttimestamp="1648471300703" timestamp="8096734" timestamp2="8096734">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4449" _type="InsertStringCommand" date="Mon Mar 28 10:56:37 EDT 2022" starttimestamp="1648471300703" timestamp="8096957" timestamp2="8096957">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4451" _type="InsertStringCommand" date="Mon Mar 28 10:56:37 EDT 2022" starttimestamp="1648471300703" timestamp="8097097" timestamp2="8097097">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4453" _type="InsertStringCommand" date="Mon Mar 28 10:56:37 EDT 2022" starttimestamp="1648471300703" timestamp="8097276" timestamp2="8097276">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="4455" _type="InsertStringCommand" date="Mon Mar 28 10:56:38 EDT 2022" starttimestamp="1648471300703" timestamp="8097369" timestamp2="8097369">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4457" _type="InsertStringCommand" date="Mon Mar 28 10:56:38 EDT 2022" starttimestamp="1648471300703" timestamp="8097557" timestamp2="8097557">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4459" _type="InsertStringCommand" date="Mon Mar 28 10:56:38 EDT 2022" starttimestamp="1648471300703" timestamp="8097852" timestamp2="8097852">
    <data><![CDATA[U]]></data>
  </Command>
  <Command __id="4461" _type="InsertStringCommand" date="Mon Mar 28 10:56:38 EDT 2022" starttimestamp="1648471300703" timestamp="8098007" timestamp2="8098007">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4463" _type="InsertStringCommand" date="Mon Mar 28 10:56:38 EDT 2022" starttimestamp="1648471300703" timestamp="8098294" timestamp2="8098294">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4464" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 10:56:39 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="8098297" />
  <Command __id="4466" _type="PauseCommand" date="Mon Mar 28 10:56:40 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8099952">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1654]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4465" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 10:56:40 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="8099951" />
  <Command __id="4470" _type="InsertStringCommand" date="Mon Mar 28 10:56:40 EDT 2022" starttimestamp="1648471300703" timestamp="8100028" timestamp2="8100028">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4472" _type="PauseCommand" date="Mon Mar 28 10:56:43 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8102309">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2281]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4471" _type="MoveCaretCommand" caretOffset="3527" date="Mon Mar 28 10:56:43 EDT 2022" docOffset="5075" starttimestamp="1648471300703" timestamp="8102309" />
  <Command __id="4474" _type="InsertStringCommand" date="Mon Mar 28 10:56:43 EDT 2022" starttimestamp="1648471300703" timestamp="8102986" timestamp2="8102986">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4476" _type="PauseCommand" date="Mon Mar 28 10:56:47 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8106407">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3421]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4475" _type="SelectTextCommand" caretOffset="3476" date="Mon Mar 28 10:56:47 EDT 2022" end="3483" start="3476" starttimestamp="1648471300703" timestamp="8106407" />
  <Command __id="4478" _type="InsertStringCommand" date="Mon Mar 28 10:56:47 EDT 2022" starttimestamp="1648471300703" timestamp="8106833" timestamp2="8106833">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4480" _type="InsertStringCommand" date="Mon Mar 28 10:56:47 EDT 2022" starttimestamp="1648471300703" timestamp="8107035" timestamp2="8107035">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4482" _type="InsertStringCommand" date="Mon Mar 28 10:56:47 EDT 2022" starttimestamp="1648471300703" timestamp="8107127" timestamp2="8107127">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4484" _type="InsertStringCommand" date="Mon Mar 28 10:56:47 EDT 2022" starttimestamp="1648471300703" timestamp="8107205" timestamp2="8107205">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4486" _type="PauseCommand" date="Mon Mar 28 10:56:50 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8110023">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2818]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4485" _type="SelectTextCommand" caretOffset="3482" date="Mon Mar 28 10:56:50 EDT 2022" end="3490" start="3482" starttimestamp="1648471300703" timestamp="8110023" />
  <Command __id="4488" _type="InsertStringCommand" date="Mon Mar 28 10:56:50 EDT 2022" starttimestamp="1648471300703" timestamp="8110143" timestamp2="8110143">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4490" _type="InsertStringCommand" date="Mon Mar 28 10:56:50 EDT 2022" starttimestamp="1648471300703" timestamp="8110212" timestamp2="8110212">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4492" _type="InsertStringCommand" date="Mon Mar 28 10:56:51 EDT 2022" starttimestamp="1648471300703" timestamp="8110306" timestamp2="8110306">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4494" _type="InsertStringCommand" date="Mon Mar 28 10:56:51 EDT 2022" starttimestamp="1648471300703" timestamp="8111116" timestamp2="8111116">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4496" _type="InsertStringCommand" date="Mon Mar 28 10:56:51 EDT 2022" starttimestamp="1648471300703" timestamp="8111130" timestamp2="8111130">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4498" _type="InsertStringCommand" date="Mon Mar 28 10:56:51 EDT 2022" starttimestamp="1648471300703" timestamp="8111136" timestamp2="8111136">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4500" _type="InsertStringCommand" date="Mon Mar 28 10:56:52 EDT 2022" starttimestamp="1648471300703" timestamp="8111381" timestamp2="8111381">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="4502" _type="InsertStringCommand" date="Mon Mar 28 10:56:52 EDT 2022" starttimestamp="1648471300703" timestamp="8111489" timestamp2="8111489">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4504" _type="InsertStringCommand" date="Mon Mar 28 10:56:52 EDT 2022" starttimestamp="1648471300703" timestamp="8112003" timestamp2="8112003">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="4506" _type="InsertStringCommand" date="Mon Mar 28 10:56:52 EDT 2022" starttimestamp="1648471300703" timestamp="8112244" timestamp2="8112244">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4508" _type="PauseCommand" date="Mon Mar 28 10:56:56 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8115650">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3406]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4507" _type="SelectTextCommand" caretOffset="3495" date="Mon Mar 28 10:56:56 EDT 2022" end="3500" start="3495" starttimestamp="1648471300703" timestamp="8115650" />
  <Command __id="4510" _type="PauseCommand" date="Mon Mar 28 10:56:59 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8119193">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3543]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4509" _type="SelectTextCommand" caretOffset="3402" date="Mon Mar 28 10:56:59 EDT 2022" end="3430" start="3402" starttimestamp="1648471300703" timestamp="8119193" />
  <Command __id="4511" _type="CopyCommand" date="Mon Mar 28 10:57:00 EDT 2022" starttimestamp="1648471300703" timestamp="8119688" />
  <Command __id="4513" _type="PauseCommand" date="Mon Mar 28 10:57:03 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8122323">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2635]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4512" _type="SelectTextCommand" caretOffset="3494" date="Mon Mar 28 10:57:03 EDT 2022" end="3500" start="3494" starttimestamp="1648471300703" timestamp="8122323" />
  <Command __id="4515" _type="PasteCommand" date="Mon Mar 28 10:57:03 EDT 2022" starttimestamp="1648471300703" timestamp="8122395" />
  <Command __id="4517" _type="PauseCommand" date="Mon Mar 28 10:57:05 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8125116">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2721]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4516" _type="SelectTextCommand" caretOffset="3432" date="Mon Mar 28 10:57:05 EDT 2022" end="3443" start="3432" starttimestamp="1648471300703" timestamp="8125116" />
  <Command __id="4518" _type="CopyCommand" date="Mon Mar 28 10:57:06 EDT 2022" starttimestamp="1648471300703" timestamp="8125432" />
  <Command __id="4520" _type="PauseCommand" date="Mon Mar 28 10:57:08 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8128048">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2616]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4519" _type="SelectTextCommand" caretOffset="3524" date="Mon Mar 28 10:57:08 EDT 2022" end="3536" start="3524" starttimestamp="1648471300703" timestamp="8128048" />
  <Command __id="4522" _type="PasteCommand" date="Mon Mar 28 10:57:08 EDT 2022" starttimestamp="1648471300703" timestamp="8128117" />
  <Command __id="4524" _type="PauseCommand" date="Mon Mar 28 10:57:10 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8130261">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2144]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4523" _type="SelectTextCommand" caretOffset="3537" date="Mon Mar 28 10:57:10 EDT 2022" end="3546" start="3537" starttimestamp="1648471300703" timestamp="8130261" />
  <Command __id="4526" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:57:11 EDT 2022" starttimestamp="1648471300703" timestamp="8131110" />
  <DocumentChange __id="4348" _type="Insert" date="Mon Mar 28 10:55:38 EDT 2022" docASTNodeCount="898" docActiveCodeLength="6753" docExpressionCount="642" docLength="7384" length="22" offset="4804" repeat="22" starttimestamp="1648471300703" timestamp="8037583" timestamp2="8041519">
    <text><![CDATA[ServerRemoteObjectGIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="4399" _type="Insert" date="Mon Mar 28 10:55:47 EDT 2022" docASTNodeCount="904" docActiveCodeLength="6799" docExpressionCount="647" docLength="7430" length="46" offset="738" repeat="2" starttimestamp="1648471300703" timestamp="8046654" timestamp2="8046655">
    <text><![CDATA[
import server.remote.ServerRemoteObjectGIPC;]]></text>
  </DocumentChange>
  <DocumentChange __id="4406" _type="Replace" date="Mon Mar 28 10:55:56 EDT 2022" docASTNodeCount="904" docActiveCodeLength="6803" docExpressionCount="647" docLength="7434" endLine="127" insertionLength="22" int_docASTNodeCount="903" int_docActiveCodeLength="6781" int_docExpressionCount="646" int_docLength="7412" length="18" offset="4894" startLine="127" starttimestamp="1648471300703" timestamp="8055722">
    <deletedText><![CDATA[DistributedCounter]]></deletedText>
    <insertedText><![CDATA[ServerRemoteObjectGIPC]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4415" _type="Delete" date="Mon Mar 28 10:56:13 EDT 2022" docASTNodeCount="903" docActiveCodeLength="6781" docExpressionCount="646" docLength="7412" endLine="127" length="22" offset="4850" startLine="127" starttimestamp="1648471300703" timestamp="8073253">
    <text><![CDATA[ServerRemoteObjectGIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="4416" _type="Insert" date="Mon Mar 28 10:56:13 EDT 2022" docASTNodeCount="904" docActiveCodeLength="6806" docExpressionCount="647" docLength="7437" length="25" offset="4850" starttimestamp="1648471300703" timestamp="8073257">
    <text><![CDATA[ServerRemoteInterfaceGIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="4423" _type="Insert" date="Mon Mar 28 10:56:33 EDT 2022" docASTNodeCount="906" docActiveCodeLength="6829" docExpressionCount="649" docLength="7460" length="23" offset="4944" repeat="20" starttimestamp="1648471300703" timestamp="8093212" timestamp2="8098288">
    <text><![CDATA[GIPCObjectLookedUp.
		]]></text>
  </DocumentChange>
  <DocumentChange __id="4467" _type="Insert" date="Mon Mar 28 10:56:40 EDT 2022" docASTNodeCount="918" docActiveCodeLength="6882" docExpressionCount="660" docLength="7513" length="53" offset="1283" repeat="2" starttimestamp="1648471300703" timestamp="8099959" timestamp2="8099961">
    <text><![CDATA[
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;]]></text>
  </DocumentChange>
  <DocumentChange __id="4469" _type="Insert" date="Mon Mar 28 10:56:40 EDT 2022" docASTNodeCount="925" docActiveCodeLength="6941" docExpressionCount="666" docLength="7572" length="59" offset="5016" starttimestamp="1648471300703" timestamp="8099969">
    <text><![CDATA[newCase(aSource, anObject, aClass, anObjectName, aRegistry)]]></text>
  </DocumentChange>
  <DocumentChange __id="4473" _type="Insert" date="Mon Mar 28 10:56:43 EDT 2022" docASTNodeCount="925" docActiveCodeLength="6942" docExpressionCount="666" docLength="7573" length="1" offset="5075" starttimestamp="1648471300703" timestamp="8102977">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="4477" _type="Replace" date="Mon Mar 28 10:56:47 EDT 2022" docASTNodeCount="925" docActiveCodeLength="6936" docExpressionCount="666" docLength="7567" endLine="129" insertionLength="1" int_docASTNodeCount="924" int_docActiveCodeLength="6935" int_docExpressionCount="665" int_docLength="7566" length="7" offset="5024" startLine="129" starttimestamp="1648471300703" timestamp="8106823">
    <deletedText><![CDATA[aSource]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4479" _type="Insert" date="Mon Mar 28 10:56:47 EDT 2022" docASTNodeCount="925" docActiveCodeLength="6939" docExpressionCount="666" docLength="7570" length="3" offset="5025" repeat="3" starttimestamp="1648471300703" timestamp="8107031" timestamp2="8107200">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <DocumentChange __id="4487" _type="Replace" date="Mon Mar 28 10:56:50 EDT 2022" docASTNodeCount="925" docActiveCodeLength="6932" docExpressionCount="666" docLength="7563" endLine="129" insertionLength="1" int_docASTNodeCount="924" int_docActiveCodeLength="6931" int_docExpressionCount="665" int_docLength="7562" length="8" offset="5030" startLine="129" starttimestamp="1648471300703" timestamp="8110135">
    <deletedText><![CDATA[anObject]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4489" _type="Insert" date="Mon Mar 28 10:56:50 EDT 2022" docASTNodeCount="925" docActiveCodeLength="6941" docExpressionCount="666" docLength="7572" length="9" offset="5031" repeat="9" starttimestamp="1648471300703" timestamp="8110207" timestamp2="8112238">
    <text><![CDATA[erverGIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="4514" _type="Replace" date="Mon Mar 28 10:57:03 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6963" docExpressionCount="667" docLength="7594" endLine="129" insertionLength="28" int_docASTNodeCount="924" int_docActiveCodeLength="6935" int_docExpressionCount="665" int_docLength="7566" length="6" offset="5042" startLine="129" starttimestamp="1648471300703" timestamp="8122382">
    <deletedText><![CDATA[aClass]]></deletedText>
    <insertedText><![CDATA[ServerRemoteObjectGIPC.class]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4521" _type="Replace" date="Mon Mar 28 10:57:08 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6962" docExpressionCount="667" docLength="7593" endLine="129" insertionLength="11" int_docASTNodeCount="926" int_docActiveCodeLength="6951" int_docExpressionCount="666" int_docLength="7582" length="12" offset="5072" startLine="129" starttimestamp="1648471300703" timestamp="8128111">
    <deletedText><![CDATA[anObjectName]]></deletedText>
    <insertedText><![CDATA[SERVER_NAME]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4525" _type="Delete" date="Mon Mar 28 10:57:11 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6953" docExpressionCount="667" docLength="7584" endLine="129" length="9" offset="5085" startLine="129" starttimestamp="1648471300703" timestamp="8131103">
    <text><![CDATA[aRegistry]]></text>
  </DocumentChange>
  <Command __id="4528" _type="PauseCommand" date="Mon Mar 28 10:57:12 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8132185">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1074]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="4527" _type="Insert" date="Mon Mar 28 10:57:12 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6956" docExpressionCount="667" docLength="7587" length="3" offset="5085" repeat="3" starttimestamp="1648471300703" timestamp="8132184" timestamp2="8132492">
    <text><![CDATA[gic]]></text>
  </DocumentChange>
  <Command __id="4529" _type="InsertStringCommand" date="Mon Mar 28 10:57:12 EDT 2022" starttimestamp="1648471300703" timestamp="8132191" timestamp2="8132191">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4531" _type="InsertStringCommand" date="Mon Mar 28 10:57:13 EDT 2022" starttimestamp="1648471300703" timestamp="8132298" timestamp2="8132298">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4533" _type="InsertStringCommand" date="Mon Mar 28 10:57:13 EDT 2022" starttimestamp="1648471300703" timestamp="8132497" timestamp2="8132497">
    <data><![CDATA[c]]></data>
  </Command>
  <DocumentChange __id="4534" _type="Delete" date="Mon Mar 28 10:57:13 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6955" docExpressionCount="667" docLength="7586" endLine="129" length="1" offset="5087" startLine="129" starttimestamp="1648471300703" timestamp="8133209">
    <text><![CDATA[c]]></text>
  </DocumentChange>
  <Command __id="4535" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 10:57:13 EDT 2022" starttimestamp="1648471300703" timestamp="8133213" />
  <Command __id="4559" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 10:57:22 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8141689" type="Run" />
  <Command __id="4562" _type="PauseCommand" date="Mon Mar 28 10:57:24 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8143732">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2043]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4561" _type="ShellCommand" date="Mon Mar 28 10:57:24 EDT 2022" starttimestamp="1648471300703" timestamp="8143732" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4564" _type="PauseCommand" date="Mon Mar 28 10:57:26 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8145785">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2053]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4563" _type="ConsoleOutput" date="Mon Mar 28 10:57:26 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8145785" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Mar 28 10:57:26 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClientReadWriteNonAtomic@609a11d2 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Mar 28 10:57:26 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4566" _type="PauseCommand" date="Mon Mar 28 10:57:28 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8147560">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1775]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4565" _type="ConsoleOutput" date="Mon Mar 28 10:57:28 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8147560" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:76
Running second pass checks Mon Mar 28 10:57:28 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Mar 28 10:57:28 EDT 2022
End O(n2) inter- and intra class method calls:Mon Mar 28 10:57:28 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:76¶Running second pass checks Mon Mar 28 10:57:28 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Mar 28 10:57:28 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Mar 28 10:57:2"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="4567" _type="ConsoleOutput" date="Mon Mar 28 10:57:29 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8148366" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Mar 28 10:57:29 EDT 2022
Generating checks:Mon Mar 28 10:57:29 EDT 2022
Finished Generating checks:Mon Mar 28 10:57:29 EDT 2022
Generating externals:Mon Mar 28 10:57:29 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:76¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Mar 28 10:57:2"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Mar 28 10:57:29 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Mar 28 10:57:2"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Mar 28 10:57:2"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="4568" _type="ConsoleOutput" date="Mon Mar 28 10:57:29 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8148626" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Mar 28 10:57:29 EDT 2022
Test execution time (ms):2934
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Mar 28 10:57:29 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Mar 28 10:57:29 EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Mar 28 10:57:29 EDT 2022¶Generating externals:Mon Mar 28 10:57:29 EDT 2022"), Diff(INSERT,"Test execution time (ms):2934"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4569" _type="ConsoleOutput" date="Mon Mar 28 10:57:29 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8148698" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):33

A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2962962962962963
Test execution time (ms):39
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Mar 28 10:57:29 EDT 2022"), Diff(INSERT,"Test execution time (ms):33¶¶A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2962962962962963"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"2934"), Diff(INSERT,"39"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4570" _type="ConsoleOutput" date="Mon Mar 28 10:57:29 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8148754" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.36363636363636365

Test execution time (ms):5

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (20)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (229)
  |~ ClientOutCoupler.java (47)
  |~ ClientRemoteInterfaceGIPC.java (23)
  |~ ClientRemoteInterfaceRMI.java (23)
  |~ ClientRemoteObject.java (216)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (165)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (21)
   |~ ServerRemoteInterfaceRMI.java (21)
   |~ ServerRemoteObjectGIPC.java (200)
   |~ ServerRemoteObjectRMI.java (191)

Attempting to match to the structure:
|- .* (21)
 |- [a-z]?.*[Cc]lient.* (9)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (8)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"33¶"), Diff(INSERT,"8"), Diff(EQUAL,"¶A5Expected"), Diff(DELETE,"Call"), Diff(INSERT,"Signature"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"2962962962962963"), Diff(INSERT,"36363636363636365¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"39"), Diff(INSERT,"5¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (216)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (165)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (21)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObjectGIPC.java (200)¶   |~ ServerRemoteObjectRMI.java (191)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4572" _type="PauseCommand" date="Mon Mar 28 10:57:33 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8152988">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4234]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4571" _type="ConsoleOutput" date="Mon Mar 28 10:57:33 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8152988" type="ConsoleOutput">
    <outputString><![CDATA[A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):2
Test execution time (ms):8
A5PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.6666666666666666

Test execution time (ms):6
Test execution time (ms):6
Test execution time (ms):4
Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):8¶A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.36363636363636365"), Diff(INSERT,"A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"5¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (216)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (165)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (21)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObjectGIPC.java (200)¶   |~ ServerRemoteObjectRMI.java (191)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)"), Diff(INSERT,"2¶Test execution time (ms):8¶A5PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.6666666666666666¶¶Test execution time (ms):6¶Test execution time (ms):6¶Test execution time (ms):4¶Test execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4574" _type="PauseCommand" date="Mon Mar 28 10:58:42 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="8221917">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[68929]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4573" _type="ConsoleOutput" date="Mon Mar 28 10:58:42 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8221917" type="ConsoleOutput">
    <outputString><![CDATA[
GIPCRMIStaticArguments did not pass completely:Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client RMI connection info in traces + Client not using provided registry-host.%0.625
Test execution time (ms):63592
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A5NoCheckstyleWarning"), Diff(INSERT,"¶GIPCRMIStaticArgument"), Diff(EQUAL,"s did not pass completely:"), Diff(DELETE,"Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):2¶Test execution time (ms):8¶A5PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.6666666666666666¶¶Test execution time (ms):6¶Test execution time (ms):6¶Test execution time (ms):4"), Diff(INSERT,"Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client RMI connection info in traces + Client not using provided registry-host.%0.625"), Diff(EQUAL,"¶Test execution time (ms):6"), Diff(INSERT,"3592"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4576" _type="PauseCommand" date="Mon Mar 28 10:58:45 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8224954">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3037]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4585" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 10:58:55 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8234650" type="Run" />
  <Command __id="4587" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 10:58:55 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8234650" type="Run" />
  <Command __id="4589" _type="PauseCommand" date="Mon Mar 28 10:58:57 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8236722">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2072]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4588" _type="ShellCommand" date="Mon Mar 28 10:58:57 EDT 2022" starttimestamp="1648471300703" timestamp="8236722" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4591" _type="PauseCommand" date="Mon Mar 28 10:59:31 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="8270634">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[33912]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4592" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Mar 28 10:59:35 EDT 2022" starttimestamp="1648471300703" timestamp="8274707" />
  <Command __id="4594" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 10:59:35 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8274730" type="Run" />
  <Command __id="4595" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 10:59:35 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8274730" type="Run" />
  <DocumentChange __id="4536" _type="Insert" date="Mon Mar 28 10:57:14 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6965" docExpressionCount="667" docLength="7596" length="10" offset="5087" repeat="10" starttimestamp="1648471300703" timestamp="8133453" timestamp2="8135306">
    <text><![CDATA[pcRegistry]]></text>
  </DocumentChange>
  <Command __id="4597" _type="PauseCommand" date="Mon Mar 28 10:59:37 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8276657">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1927]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4598" _type="MoveCaretCommand" caretOffset="2812" date="Mon Mar 28 10:59:37 EDT 2022" docOffset="2812" starttimestamp="1648471300703" timestamp="8276764" />
  <Command __id="4596" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 10:59:37 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5815" docExpressionCount="584" docLength="6273" projectName="A5" starttimestamp="1648471300703" timestamp="8276657">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4600" _type="PauseCommand" date="Mon Mar 28 11:00:20 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="8319464">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[42700]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4601" _type="MoveCaretCommand" caretOffset="3549" date="Mon Mar 28 11:00:20 EDT 2022" docOffset="5097" starttimestamp="1648471300703" timestamp="8319551" />
  <Command __id="4603" _type="PauseCommand" date="Mon Mar 28 11:00:22 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8321713">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2162]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4604" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:00:38 EDT 2022" kind="HitBreakPoint" projectName="A4" starttimestamp="1648471300703" timestamp="8337603" type="Run" />
  <Command __id="4606" _type="RunCommand" className="(Unknown)" date="Mon Mar 28 11:00:38 EDT 2022" kind="HitBreakPoint" projectName="A4" starttimestamp="1648471300703" timestamp="8337603" type="Run" />
  <Command __id="4607" _type="ConsoleOutput" date="Mon Mar 28 11:00:38 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8337958" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.9296910569786219
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶GIPCRMIStaticArguments did not pass completely:Error in client (args as 'nio-host nio-port name headless registry-"), Diff(INSERT,"Registry host:local"), Diff(EQUAL,"host"), Diff(DELETE," r"), Diff(INSERT,"¶R"), Diff(EQUAL,"egistry"), Diff(DELETE,"-port gipc-port'): Couldn't find client RMI connection info in traces + Client not using provided registry-host.%0.625¶Test execution time (ms):63592"), Diff(INSERT," port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.9296910569786219"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4608" _type="ShellCommand" date="Mon Mar 28 11:00:39 EDT 2022" starttimestamp="1648471300703" timestamp="8338811" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4610" _type="PauseCommand" date="Mon Mar 28 11:00:40 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8340211">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1400]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4609" _type="ShellCommand" date="Mon Mar 28 11:00:40 EDT 2022" starttimestamp="1648471300703" timestamp="8340211" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4612" _type="PauseCommand" date="Mon Mar 28 11:00:42 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8341991">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1780]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4611" _type="ShellCommand" date="Mon Mar 28 11:00:42 EDT 2022" starttimestamp="1648471300703" timestamp="8341991" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4614" _type="PauseCommand" date="Mon Mar 28 11:00:44 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8344065">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2074]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4613" _type="ConsoleOutput" date="Mon Mar 28 11:00:44 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8344065" type="ConsoleOutput">
    <outputString><![CDATA[Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.9296910569786219"), Diff(INSERT,"Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4616" _type="PauseCommand" date="Mon Mar 28 11:00:47 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8347035">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2970]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4617" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Mar 28 11:00:51 EDT 2022" starttimestamp="1648471300703" timestamp="8351005" />
  <Command __id="4619" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:00:51 EDT 2022" kind="HitBreakPoint" projectName="A4" starttimestamp="1648471300703" timestamp="8351052" type="Run" />
  <Command __id="4620" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:00:51 EDT 2022" kind="HitBreakPoint" projectName="A4" starttimestamp="1648471300703" timestamp="8351052" type="Run" />
  <Command __id="4622" _type="PauseCommand" date="Mon Mar 28 11:00:56 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="8356217">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[5165]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4621" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Mon Mar 28 11:00:56 EDT 2022" starttimestamp="1648471300703" timestamp="8356217" />
  <Command __id="4623" _type="ProgramExecutionEvent" className="/A5/src/registry/TrickOrTreatRegistry.java" date="Mon Mar 28 11:00:57 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8356547" type="Run" />
  <Command __id="4624" _type="RunCommand" className="/A5/src/registry/TrickOrTreatRegistry.java" date="Mon Mar 28 11:00:57 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8356547" type="Run" />
  <Command __id="4625" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:00:57 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8356827" type="Run" />
  <Command __id="4626" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:00:57 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8356855" type="Run" />
  <Command __id="4627" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:00:57 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8356859" type="Run" />
  <Command __id="4629" _type="PauseCommand" date="Mon Mar 28 11:01:07 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="8366511">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[9652]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4634" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:01:23 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8382623" type="Run" />
  <Command __id="4637" _type="PauseCommand" date="Mon Mar 28 11:01:25 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8385266">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2643]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4645" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:01:31 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8391283" type="Run" />
  <Command __id="4648" _type="PauseCommand" date="Mon Mar 28 11:01:43 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8402689">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[11406]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="4647" _type="ExceptionCommand" date="Mon Mar 28 11:01:43 EDT 2022" starttimestamp="1648471300703" timestamp="8402689" type="Exception">
    <exceptionString><![CDATA[java.net.UnknownHostException: No such host is known (SERVER)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:929)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1515)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:848)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1505)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1364)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1298)
	at java.base/java.net.InetAddress.getByName(InetAddress.java:1248)
	at inputport.datacomm.simplex.buffer.nio.AnNIOSimplexBufferClientInputPortDriver.<init>(AnNIOSimplexBufferClientInputPortDriver.java:29)
	at inputport.datacomm.duplex.buffer.nio.AnNIODuplexBufferClientInputPortDriver.<init>(AnNIODuplexBufferClientInputPortDriver.java:18)
	at inputport.datacomm.duplex.buffer.nio.AnNIODuplexBufferInputPortFactory.createDuplexClientInputPort(AnNIODuplexBufferInputPortFactory.java:42)
	at inputport.datacomm.duplex.buffer.DuplexBufferInputPortSelector.createDuplexClientInputPort(DuplexBufferInputPortSelector.java:24)
	at inputport.datacomm.duplex.object.ADuplexObjectInputPortFactory.createDuplexClientInputPort(ADuplexObjectInputPortFactory.java:24)
	at inputport.datacomm.duplex.object.DuplexObjectInputPortSelector.createDuplexClientInputPort(DuplexObjectInputPortSelector.java:21)
	at inputport.rpc.duplex.ADuplexRPCInputPortFactory.createDuplexClientInputPort(ADuplexRPCInputPortFactory.java:70)
	at inputport.rpc.duplex.ADuplexRPCInputPortFactory.createDuplexRPCClientInputPort(ADuplexRPCInputPortFactory.java:42)
	at inputport.rpc.duplex.DuplexRPCInputPortSelector.createDuplexRPCClientInputPort(DuplexRPCInputPortSelector.java:17)
	at port.AnAbstractPortLauncher.getRPCClientInputPort(AnAbstractPortLauncher.java:678)
	at port.AnAbstractPortLauncher.getClientInputPort(AnAbstractPortLauncher.java:457)
	at port.AnAbstractPortLauncher.getDefaultPort(AnAbstractPortLauncher.java:438)
	at port.AnAbstractPortLauncher.getDefaultPort(AnAbstractPortLauncher.java:428)
	at port.AnAbstractPortLauncher.getPort(AnAbstractPortLauncher.java:820)
	at port.AnAbstractPortLauncher.setPorts(AnAbstractPortLauncher.java:991)
	at port.AnAbstractPortLauncher.createAndBindConnectablePorts(AnAbstractPortLauncher.java:969)
	at port.AnAbstractPortLauncher.launchWithoutConnecting(AnAbstractPortLauncher.java:1065)
	at inputport.rpc.GIPCLocateRegistry.getRegistryWithoutConnecting(GIPCLocateRegistry.java:61)
	at inputport.rpc.GIPCLocateRegistry.getRegistry(GIPCLocateRegistry.java:45)
	at client.ClientRemoteObject.init(ClientRemoteObject.java:125)
	at coupledsims.AStandAloneTwoCoupledHalloweenSimulations.start(AStandAloneTwoCoupledHalloweenSimulations.java:95)
	at client.Client.main(Client.java:14)
java.lang.NullPointerException
	at inputport.datacomm.simplex.buffer.nio.AnNIOSimplexBufferClientInputPortDriver.registerWithSelectionRunnable(AnNIOSimplexBufferClientInputPortDriver.java:53)
	at inputport.datacomm.simplex.buffer.nio.AnNIOSimplexBufferClientInputPortDriver.connect(AnNIOSimplexBufferClientInputPortDriver.java:50)
	at inputport.datacomm.simplex.buffer.AGenericSimplexBufferClientInputPort.connect(AGenericSimplexBufferClientInputPort.java:87)
	at inputport.datacomm.duplex.buffer.AGenericDuplexBufferClientInputPort.connect(AGenericDuplexBufferClientInputPort.java:88)
	at inputport.datacomm.simplex.object.ASimplexObjectClientInputPort.connect(ASimplexObjectClientInputPort.java:85)
	at inputport.rpc.simplex.ASimplexRPCClientInputPort.connect(ASimplexRPCClientInputPort.java:124)
	at port.AnAbstractPortLauncher.connect(AnAbstractPortLauncher.java:1009)
	at port.AnAbstractPortLauncher.connectPorts(AnAbstractPortLauncher.java:1014)
	at port.AnAbstractPortLauncher.connect(AnAbstractPortLauncher.java:1070)
	at inputport.rpc.GIPCLocateRegistry.getRegistry(GIPCLocateRegistry.java:46)
	at client.ClientRemoteObject.init(ClientRemoteObject.java:125)
	at coupledsims.AStandAloneTwoCoupledHalloweenSimulations.start(AStandAloneTwoCoupledHalloweenSimulations.java:95)
	at client.Client.main(Client.java:14)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4650" _type="PauseCommand" date="Mon Mar 28 11:01:52 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="8412027">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[9338]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4649" _type="ShellCommand" date="Mon Mar 28 11:01:52 EDT 2022" starttimestamp="1648471300703" timestamp="8412027" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4599" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:00:20 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6965" docExpressionCount="667" docLength="7596" projectName="A5" starttimestamp="1648471300703" timestamp="8319464">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶"), Diff(INSERT,"import server.remote.ServerRemoteObjectGIPC;¶"), Diff(EQUAL,"import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶"), Diff(INSERT,"import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶"), Diff(EQUAL,"import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	"), Diff(INSERT,"ServerRemoteInterfaceGIPC serverGIPC = null;¶	"), Diff(EQUAL,"¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, "), Diff(INSERT,"GIPC_"), Diff(EQUAL,"SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		"), Diff(INSERT,"//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		"), Diff(EQUAL,"// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="4652" _type="PauseCommand" date="Mon Mar 28 11:01:58 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="8418085">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6058]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4653" _type="MoveCaretCommand" caretOffset="2812" date="Mon Mar 28 11:01:58 EDT 2022" docOffset="2812" starttimestamp="1648471300703" timestamp="8418213" />
  <Command __id="4655" _type="PauseCommand" date="Mon Mar 28 11:02:14 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8433745">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[15532]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4654" _type="SelectTextCommand" caretOffset="5353" date="Mon Mar 28 11:02:14 EDT 2022" end="5372" start="5353" starttimestamp="1648471300703" timestamp="8433745" />
  <Command __id="4656" _type="SelectTextCommand" caretOffset="5353" date="Mon Mar 28 11:02:14 EDT 2022" end="5372" start="5353" starttimestamp="1648471300703" timestamp="8433745" />
  <Command __id="4657" _type="CopyCommand" date="Mon Mar 28 11:02:14 EDT 2022" starttimestamp="1648471300703" timestamp="8434128" />
  <Command __id="4659" _type="PauseCommand" date="Mon Mar 28 11:02:20 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="8439931">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[5803]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4658" _type="MoveCaretCommand" caretOffset="6147" date="Mon Mar 28 11:02:20 EDT 2022" docOffset="6147" starttimestamp="1648471300703" timestamp="8439931" />
  <Command __id="4660" _type="MoveCaretCommand" caretOffset="6147" date="Mon Mar 28 11:02:20 EDT 2022" docOffset="6147" starttimestamp="1648471300703" timestamp="8439931" />
  <Command __id="4662" _type="InsertStringCommand" date="Mon Mar 28 11:02:20 EDT 2022" starttimestamp="1648471300703" timestamp="8440201" timestamp2="8440201">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4663" _type="InsertStringCommand" date="Mon Mar 28 11:02:20 EDT 2022" starttimestamp="1648471300703" timestamp="8440202" timestamp2="8440202">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4665" _type="PasteCommand" date="Mon Mar 28 11:02:21 EDT 2022" starttimestamp="1648471300703" timestamp="8440516" />
  <Command __id="4667" _type="PauseCommand" date="Mon Mar 28 11:02:24 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8443624">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3108]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4666" _type="SelectTextCommand" caretOffset="6151" date="Mon Mar 28 11:02:24 EDT 2022" end="6154" start="6151" starttimestamp="1648471300703" timestamp="8443624" />
  <Command __id="4668" _type="SelectTextCommand" caretOffset="6151" date="Mon Mar 28 11:02:24 EDT 2022" end="6154" start="6151" starttimestamp="1648471300703" timestamp="8443624" />
  <Command __id="4670" _type="InsertStringCommand" date="Mon Mar 28 11:02:24 EDT 2022" starttimestamp="1648471300703" timestamp="8443820" timestamp2="8443820">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="4671" _type="InsertStringCommand" date="Mon Mar 28 11:02:24 EDT 2022" starttimestamp="1648471300703" timestamp="8443820" timestamp2="8443820">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="4673" _type="InsertStringCommand" date="Mon Mar 28 11:02:24 EDT 2022" starttimestamp="1648471300703" timestamp="8443927" timestamp2="8443927">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4674" _type="InsertStringCommand" date="Mon Mar 28 11:02:24 EDT 2022" starttimestamp="1648471300703" timestamp="8443927" timestamp2="8443927">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4676" _type="InsertStringCommand" date="Mon Mar 28 11:02:24 EDT 2022" starttimestamp="1648471300703" timestamp="8444014" timestamp2="8444014">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="4677" _type="InsertStringCommand" date="Mon Mar 28 11:02:24 EDT 2022" starttimestamp="1648471300703" timestamp="8444014" timestamp2="8444014">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="4679" _type="InsertStringCommand" date="Mon Mar 28 11:02:24 EDT 2022" starttimestamp="1648471300703" timestamp="8444155" timestamp2="8444155">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4680" _type="InsertStringCommand" date="Mon Mar 28 11:02:24 EDT 2022" starttimestamp="1648471300703" timestamp="8444155" timestamp2="8444155">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4682" _type="PauseCommand" date="Mon Mar 28 11:02:26 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8445537">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1382]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4681" _type="MoveCaretCommand" caretOffset="6171" date="Mon Mar 28 11:02:26 EDT 2022" docOffset="6171" starttimestamp="1648471300703" timestamp="8445537" />
  <Command __id="4683" _type="MoveCaretCommand" caretOffset="6171" date="Mon Mar 28 11:02:26 EDT 2022" docOffset="6171" starttimestamp="1648471300703" timestamp="8445538" />
  <Command __id="4685" _type="InsertStringCommand" date="Mon Mar 28 11:02:26 EDT 2022" starttimestamp="1648471300703" timestamp="8446028" timestamp2="8446028">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4686" _type="InsertStringCommand" date="Mon Mar 28 11:02:26 EDT 2022" starttimestamp="1648471300703" timestamp="8446028" timestamp2="8446028">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4687" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 11:02:26 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="8446032" />
  <Command __id="4689" _type="PauseCommand" date="Mon Mar 28 11:02:28 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8447647">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1615]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4688" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 11:02:28 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="8447647" />
  <Command __id="4693" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 11:02:28 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="8447785" />
  <Command __id="4694" _type="InsertStringCommand" date="Mon Mar 28 11:02:28 EDT 2022" starttimestamp="1648471300703" timestamp="8447789" timestamp2="8447789">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4695" _type="InsertStringCommand" date="Mon Mar 28 11:02:28 EDT 2022" starttimestamp="1648471300703" timestamp="8447789" timestamp2="8447789">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4697" _type="PauseCommand" date="Mon Mar 28 11:02:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8450432">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2643]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4696" _type="MoveCaretCommand" caretOffset="6278" date="Mon Mar 28 11:02:31 EDT 2022" docOffset="6278" starttimestamp="1648471300703" timestamp="8450432" />
  <Command __id="4698" _type="MoveCaretCommand" caretOffset="6278" date="Mon Mar 28 11:02:31 EDT 2022" docOffset="6278" starttimestamp="1648471300703" timestamp="8450432" />
  <Command __id="4700" _type="InsertStringCommand" date="Mon Mar 28 11:02:31 EDT 2022" starttimestamp="1648471300703" timestamp="8451009" timestamp2="8451009">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4701" _type="InsertStringCommand" date="Mon Mar 28 11:02:31 EDT 2022" starttimestamp="1648471300703" timestamp="8451009" timestamp2="8451009">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4703" _type="PauseCommand" date="Mon Mar 28 11:02:34 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8453605">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2596]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4717" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:02:37 EDT 2022" starttimestamp="1648471300703" timestamp="8456573" />
  <Command __id="4719" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:02:37 EDT 2022" starttimestamp="1648471300703" timestamp="8456579" />
  <Command __id="4721" _type="PauseCommand" date="Mon Mar 28 11:02:38 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8458073">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1494]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4720" _type="SelectTextCommand" caretOffset="6241" date="Mon Mar 28 11:02:38 EDT 2022" end="6253" start="6241" starttimestamp="1648471300703" timestamp="8458073" />
  <Command __id="4722" _type="SelectTextCommand" caretOffset="6241" date="Mon Mar 28 11:02:38 EDT 2022" end="6253" start="6241" starttimestamp="1648471300703" timestamp="8458073" />
  <Command __id="4651" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:01:58 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5815" docExpressionCount="584" docLength="6273" projectName="A5" starttimestamp="1648471300703" timestamp="8418085">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="4661" _type="Insert" date="Mon Mar 28 11:02:20 EDT 2022" docASTNodeCount="808" docActiveCodeLength="5819" docExpressionCount="584" docLength="6277" length="4" offset="6147" starttimestamp="1648471300703" timestamp="8440195">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="4664" _type="Replace" date="Mon Mar 28 11:02:21 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5838" docExpressionCount="585" docLength="6296" endLine="196" insertionLength="21" int_docASTNodeCount="808" int_docActiveCodeLength="5817" int_docExpressionCount="584" int_docLength="6275" length="2" offset="6149" startLine="196" starttimestamp="1648471300703" timestamp="8440512">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		RMIObjectRegistered]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4669" _type="Replace" date="Mon Mar 28 11:02:24 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5836" docExpressionCount="585" docLength="6294" endLine="196" insertionLength="1" int_docASTNodeCount="812" int_docActiveCodeLength="5835" int_docExpressionCount="585" int_docLength="6293" length="3" offset="6151" startLine="196" starttimestamp="1648471300703" timestamp="8443814">
    <deletedText><![CDATA[RMI]]></deletedText>
    <insertedText><![CDATA[G]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4672" _type="Insert" date="Mon Mar 28 11:02:24 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5839" docExpressionCount="585" docLength="6297" length="3" offset="6152" repeat="3" starttimestamp="1648471300703" timestamp="8443922" timestamp2="8444150">
    <text><![CDATA[IPC]]></text>
  </DocumentChange>
  <DocumentChange __id="4684" _type="Insert" date="Mon Mar 28 11:02:26 EDT 2022" docASTNodeCount="810" docActiveCodeLength="5840" docExpressionCount="586" docLength="6298" length="1" offset="6171" starttimestamp="1648471300703" timestamp="8446021">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="4690" _type="Insert" date="Mon Mar 28 11:02:28 EDT 2022" docASTNodeCount="822" docActiveCodeLength="5895" docExpressionCount="597" docLength="6353" length="55" offset="1156" repeat="2" starttimestamp="1648471300703" timestamp="8447660" timestamp2="8447665">
    <text><![CDATA[
import util.trace.port.rpc.gipc.GIPCObjectRegistered;]]></text>
  </DocumentChange>
  <DocumentChange __id="4692" _type="Insert" date="Mon Mar 28 11:02:28 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5946" docExpressionCount="602" docLength="6404" length="51" offset="6227" starttimestamp="1648471300703" timestamp="8447670">
    <text><![CDATA[newCase(aSource, anObjectName, anObject, aRegistry)]]></text>
  </DocumentChange>
  <DocumentChange __id="4699" _type="Insert" date="Mon Mar 28 11:02:31 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5947" docExpressionCount="602" docLength="6405" length="1" offset="6278" starttimestamp="1648471300703" timestamp="8450997">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="4705" _type="Replace" date="Mon Mar 28 11:02:34 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5941" docExpressionCount="602" docLength="6399" endLine="197" insertionLength="1" int_docASTNodeCount="827" int_docActiveCodeLength="5940" int_docExpressionCount="601" int_docLength="6398" length="7" offset="6235" startLine="197" starttimestamp="1648471300703" timestamp="8453991">
    <deletedText><![CDATA[aSource]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4708" _type="Insert" date="Mon Mar 28 11:02:35 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5944" docExpressionCount="602" docLength="6402" length="3" offset="6236" repeat="3" starttimestamp="1648471300703" timestamp="8454967" timestamp2="8454990">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <Command __id="4724" _type="PauseCommand" date="Mon Mar 28 11:02:43 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8463051">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4978]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="4723" _type="Replace" date="Mon Mar 28 11:02:43 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5933" docExpressionCount="602" docLength="6391" endLine="197" insertionLength="1" int_docASTNodeCount="827" int_docActiveCodeLength="5932" int_docExpressionCount="601" int_docLength="6390" length="12" offset="6241" startLine="197" starttimestamp="1648471300703" timestamp="8463051">
    <deletedText><![CDATA[anObjectName]]></deletedText>
    <insertedText><![CDATA[S]]></insertedText>
  </DocumentChange>
  <Command __id="4725" _type="InsertStringCommand" date="Mon Mar 28 11:02:43 EDT 2022" starttimestamp="1648471300703" timestamp="8463065" timestamp2="8463065">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4726" _type="InsertStringCommand" date="Mon Mar 28 11:02:43 EDT 2022" starttimestamp="1648471300703" timestamp="8463065" timestamp2="8463065">
    <data><![CDATA[S]]></data>
  </Command>
  <DocumentChange __id="4727" _type="Insert" date="Mon Mar 28 11:02:43 EDT 2022" docASTNodeCount="830" docActiveCodeLength="5941" docExpressionCount="604" docLength="6399" length="8" offset="6242" repeat="8" starttimestamp="1648471300703" timestamp="8463155" timestamp2="8464377">
    <text><![CDATA[ERVER)NA]]></text>
  </DocumentChange>
  <Command __id="4728" _type="InsertStringCommand" date="Mon Mar 28 11:02:43 EDT 2022" starttimestamp="1648471300703" timestamp="8463160" timestamp2="8463160">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4729" _type="InsertStringCommand" date="Mon Mar 28 11:02:43 EDT 2022" starttimestamp="1648471300703" timestamp="8463160" timestamp2="8463160">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4731" _type="InsertStringCommand" date="Mon Mar 28 11:02:43 EDT 2022" starttimestamp="1648471300703" timestamp="8463295" timestamp2="8463295">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4732" _type="InsertStringCommand" date="Mon Mar 28 11:02:43 EDT 2022" starttimestamp="1648471300703" timestamp="8463295" timestamp2="8463295">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4734" _type="InsertStringCommand" date="Mon Mar 28 11:02:44 EDT 2022" starttimestamp="1648471300703" timestamp="8463533" timestamp2="8463533">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4735" _type="InsertStringCommand" date="Mon Mar 28 11:02:44 EDT 2022" starttimestamp="1648471300703" timestamp="8463533" timestamp2="8463533">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4737" _type="InsertStringCommand" date="Mon Mar 28 11:02:44 EDT 2022" starttimestamp="1648471300703" timestamp="8463705" timestamp2="8463705">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4738" _type="InsertStringCommand" date="Mon Mar 28 11:02:44 EDT 2022" starttimestamp="1648471300703" timestamp="8463705" timestamp2="8463705">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4740" _type="InsertStringCommand" date="Mon Mar 28 11:02:44 EDT 2022" starttimestamp="1648471300703" timestamp="8463811" timestamp2="8463811">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4741" _type="InsertStringCommand" date="Mon Mar 28 11:02:44 EDT 2022" starttimestamp="1648471300703" timestamp="8463811" timestamp2="8463811">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4743" _type="InsertStringCommand" date="Mon Mar 28 11:02:44 EDT 2022" starttimestamp="1648471300703" timestamp="8464028" timestamp2="8464028">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4744" _type="InsertStringCommand" date="Mon Mar 28 11:02:44 EDT 2022" starttimestamp="1648471300703" timestamp="8464028" timestamp2="8464028">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4746" _type="InsertStringCommand" date="Mon Mar 28 11:02:44 EDT 2022" starttimestamp="1648471300703" timestamp="8464287" timestamp2="8464287">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="4747" _type="InsertStringCommand" date="Mon Mar 28 11:02:44 EDT 2022" starttimestamp="1648471300703" timestamp="8464287" timestamp2="8464287">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="4749" _type="InsertStringCommand" date="Mon Mar 28 11:02:45 EDT 2022" starttimestamp="1648471300703" timestamp="8464381" timestamp2="8464381">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="4750" _type="InsertStringCommand" date="Mon Mar 28 11:02:45 EDT 2022" starttimestamp="1648471300703" timestamp="8464381" timestamp2="8464381">
    <data><![CDATA[A]]></data>
  </Command>
  <DocumentChange __id="4751" _type="Delete" date="Mon Mar 28 11:02:45 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5938" docExpressionCount="602" docLength="6396" endLine="197" length="3" offset="6247" repeat="3" startLine="197" starttimestamp="1648471300703" timestamp="8464715" timestamp2="8465009">
    <text><![CDATA[)NA]]></text>
  </DocumentChange>
  <Command __id="4752" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:02:45 EDT 2022" starttimestamp="1648471300703" timestamp="8464717" />
  <Command __id="4753" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:02:45 EDT 2022" starttimestamp="1648471300703" timestamp="8464718" />
  <Command __id="4755" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:02:45 EDT 2022" starttimestamp="1648471300703" timestamp="8464871" />
  <Command __id="4756" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:02:45 EDT 2022" starttimestamp="1648471300703" timestamp="8464871" />
  <Command __id="4758" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:02:45 EDT 2022" starttimestamp="1648471300703" timestamp="8465013" />
  <Command __id="4759" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:02:45 EDT 2022" starttimestamp="1648471300703" timestamp="8465013" />
  <Command __id="4761" _type="InsertStringCommand" date="Mon Mar 28 11:02:45 EDT 2022" starttimestamp="1648471300703" timestamp="8465232" timestamp2="8465232">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="4762" _type="InsertStringCommand" date="Mon Mar 28 11:02:45 EDT 2022" starttimestamp="1648471300703" timestamp="8465232" timestamp2="8465232">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="4764" _type="InsertStringCommand" date="Mon Mar 28 11:02:46 EDT 2022" starttimestamp="1648471300703" timestamp="8465548" timestamp2="8465548">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="4765" _type="InsertStringCommand" date="Mon Mar 28 11:02:46 EDT 2022" starttimestamp="1648471300703" timestamp="8465548" timestamp2="8465548">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="4767" _type="InsertStringCommand" date="Mon Mar 28 11:02:46 EDT 2022" starttimestamp="1648471300703" timestamp="8465678" timestamp2="8465678">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="4768" _type="InsertStringCommand" date="Mon Mar 28 11:02:46 EDT 2022" starttimestamp="1648471300703" timestamp="8465678" timestamp2="8465678">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="4770" _type="InsertStringCommand" date="Mon Mar 28 11:02:46 EDT 2022" starttimestamp="1648471300703" timestamp="8465839" timestamp2="8465839">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="4771" _type="InsertStringCommand" date="Mon Mar 28 11:02:46 EDT 2022" starttimestamp="1648471300703" timestamp="8465839" timestamp2="8465839">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="4773" _type="InsertStringCommand" date="Mon Mar 28 11:02:46 EDT 2022" starttimestamp="1648471300703" timestamp="8465965" timestamp2="8465965">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4774" _type="InsertStringCommand" date="Mon Mar 28 11:02:46 EDT 2022" starttimestamp="1648471300703" timestamp="8465965" timestamp2="8465965">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4776" _type="PauseCommand" date="Mon Mar 28 11:02:49 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8469029">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3064]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4775" _type="SelectTextCommand" caretOffset="6254" date="Mon Mar 28 11:02:49 EDT 2022" end="6262" start="6254" starttimestamp="1648471300703" timestamp="8469029" />
  <Command __id="4777" _type="SelectTextCommand" caretOffset="6254" date="Mon Mar 28 11:02:49 EDT 2022" end="6262" start="6254" starttimestamp="1648471300703" timestamp="8469029" />
  <DocumentChange __id="4760" _type="Insert" date="Mon Mar 28 11:02:45 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5943" docExpressionCount="602" docLength="6401" length="5" offset="6247" repeat="5" starttimestamp="1648471300703" timestamp="8465226" timestamp2="8465960">
    <text><![CDATA[_NAME]]></text>
  </DocumentChange>
  <Command __id="4779" _type="PauseCommand" date="Mon Mar 28 11:03:00 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8479848">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[10819]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="4778" _type="Replace" date="Mon Mar 28 11:03:00 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5936" docExpressionCount="602" docLength="6394" endLine="197" insertionLength="1" int_docASTNodeCount="827" int_docActiveCodeLength="5935" int_docExpressionCount="601" int_docLength="6393" length="8" offset="6254" startLine="197" starttimestamp="1648471300703" timestamp="8479848">
    <deletedText><![CDATA[anObject]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <Command __id="4780" _type="InsertStringCommand" date="Mon Mar 28 11:03:00 EDT 2022" starttimestamp="1648471300703" timestamp="8479861" timestamp2="8479861">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4781" _type="InsertStringCommand" date="Mon Mar 28 11:03:00 EDT 2022" starttimestamp="1648471300703" timestamp="8479861" timestamp2="8479861">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4783" _type="InsertStringCommand" date="Mon Mar 28 11:03:00 EDT 2022" starttimestamp="1648471300703" timestamp="8479950" timestamp2="8479950">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4784" _type="InsertStringCommand" date="Mon Mar 28 11:03:00 EDT 2022" starttimestamp="1648471300703" timestamp="8479950" timestamp2="8479950">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4786" _type="InsertStringCommand" date="Mon Mar 28 11:03:00 EDT 2022" starttimestamp="1648471300703" timestamp="8480059" timestamp2="8480059">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4787" _type="InsertStringCommand" date="Mon Mar 28 11:03:00 EDT 2022" starttimestamp="1648471300703" timestamp="8480059" timestamp2="8480059">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4789" _type="InsertStringCommand" date="Mon Mar 28 11:03:00 EDT 2022" starttimestamp="1648471300703" timestamp="8480189" timestamp2="8480189">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4790" _type="InsertStringCommand" date="Mon Mar 28 11:03:00 EDT 2022" starttimestamp="1648471300703" timestamp="8480189" timestamp2="8480189">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4792" _type="PauseCommand" date="Mon Mar 28 11:03:03 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8482960">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2771]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4791" _type="SelectTextCommand" caretOffset="6260" date="Mon Mar 28 11:03:03 EDT 2022" end="6269" start="6260" starttimestamp="1648471300703" timestamp="8482960" />
  <Command __id="4793" _type="SelectTextCommand" caretOffset="6260" date="Mon Mar 28 11:03:03 EDT 2022" end="6269" start="6260" starttimestamp="1648471300703" timestamp="8482960" />
  <DocumentChange __id="4782" _type="Insert" date="Mon Mar 28 11:03:00 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5939" docExpressionCount="602" docLength="6397" length="3" offset="6255" repeat="3" starttimestamp="1648471300703" timestamp="8479944" timestamp2="8480182">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <Command __id="4795" _type="PauseCommand" date="Mon Mar 28 11:03:04 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8484202">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1242]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="4794" _type="Replace" date="Mon Mar 28 11:03:04 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5931" docExpressionCount="602" docLength="6389" endLine="197" insertionLength="1" int_docASTNodeCount="828" int_docActiveCodeLength="5930" int_docExpressionCount="602" int_docLength="6388" length="9" offset="6260" startLine="197" starttimestamp="1648471300703" timestamp="8484202">
    <deletedText><![CDATA[aRegistry]]></deletedText>
    <insertedText><![CDATA[g]]></insertedText>
  </DocumentChange>
  <Command __id="4796" _type="InsertStringCommand" date="Mon Mar 28 11:03:04 EDT 2022" starttimestamp="1648471300703" timestamp="8484210" timestamp2="8484210">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4797" _type="InsertStringCommand" date="Mon Mar 28 11:03:04 EDT 2022" starttimestamp="1648471300703" timestamp="8484210" timestamp2="8484210">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4799" _type="InsertStringCommand" date="Mon Mar 28 11:03:04 EDT 2022" starttimestamp="1648471300703" timestamp="8484275" timestamp2="8484275">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4800" _type="InsertStringCommand" date="Mon Mar 28 11:03:04 EDT 2022" starttimestamp="1648471300703" timestamp="8484275" timestamp2="8484275">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4802" _type="InsertStringCommand" date="Mon Mar 28 11:03:05 EDT 2022" starttimestamp="1648471300703" timestamp="8484401" timestamp2="8484401">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4803" _type="InsertStringCommand" date="Mon Mar 28 11:03:05 EDT 2022" starttimestamp="1648471300703" timestamp="8484401" timestamp2="8484401">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4805" _type="InsertStringCommand" date="Mon Mar 28 11:03:05 EDT 2022" starttimestamp="1648471300703" timestamp="8484616" timestamp2="8484616">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4806" _type="InsertStringCommand" date="Mon Mar 28 11:03:05 EDT 2022" starttimestamp="1648471300703" timestamp="8484616" timestamp2="8484616">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4808" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8485444" timestamp2="8485444">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4809" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8485444" timestamp2="8485444">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="4811" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8485626" timestamp2="8485626">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4812" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8485626" timestamp2="8485626">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4814" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8485819" timestamp2="8485819">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4815" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8485819" timestamp2="8485819">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4817" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8485897" timestamp2="8485897">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4818" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8485897" timestamp2="8485897">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4820" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8486014" timestamp2="8486014">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4821" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8486014" timestamp2="8486014">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4823" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8486159" timestamp2="8486159">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4824" _type="InsertStringCommand" date="Mon Mar 28 11:03:06 EDT 2022" starttimestamp="1648471300703" timestamp="8486159" timestamp2="8486159">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4826" _type="InsertStringCommand" date="Mon Mar 28 11:03:07 EDT 2022" starttimestamp="1648471300703" timestamp="8486357" timestamp2="8486357">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4827" _type="InsertStringCommand" date="Mon Mar 28 11:03:07 EDT 2022" starttimestamp="1648471300703" timestamp="8486358" timestamp2="8486358">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4829" _type="InsertStringCommand" date="Mon Mar 28 11:03:07 EDT 2022" starttimestamp="1648471300703" timestamp="8486431" timestamp2="8486431">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="4830" _type="InsertStringCommand" date="Mon Mar 28 11:03:07 EDT 2022" starttimestamp="1648471300703" timestamp="8486431" timestamp2="8486431">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="4832" _type="PauseCommand" date="Mon Mar 28 11:03:08 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8487443">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1012]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4831" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:03:08 EDT 2022" starttimestamp="1648471300703" timestamp="8487443" />
  <Command __id="4833" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:03:08 EDT 2022" starttimestamp="1648471300703" timestamp="8487538" />
  <Command __id="4834" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:03:08 EDT 2022" starttimestamp="1648471300703" timestamp="8487565" />
  <Command __id="4836" _type="PauseCommand" date="Mon Mar 28 11:03:33 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="8513120">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[25555]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4835" _type="MoveCaretCommand" caretOffset="5990" date="Mon Mar 28 11:03:33 EDT 2022" docOffset="5990" starttimestamp="1648471300703" timestamp="8513120" />
  <Command __id="4837" _type="MoveCaretCommand" caretOffset="5990" date="Mon Mar 28 11:03:33 EDT 2022" docOffset="5990" starttimestamp="1648471300703" timestamp="8513120" />
  <Command __id="4839" _type="ShellCommand" date="Mon Mar 28 11:03:34 EDT 2022" starttimestamp="1648471300703" timestamp="8513653" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4841" _type="PauseCommand" date="Mon Mar 28 11:03:37 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8516402">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2749]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="4840" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 11:03:37 EDT 2022" forward="true" matchWord="false" offset="5990" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="8516402" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="4842" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 11:03:37 EDT 2022" forward="true" matchWord="false" offset="6193" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="8517032" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="4844" _type="PauseCommand" date="Mon Mar 28 11:03:41 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8520378">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3346]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4843" _type="ShellCommand" date="Mon Mar 28 11:03:41 EDT 2022" starttimestamp="1648471300703" timestamp="8520378" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4846" _type="MoveCaretCommand" caretOffset="3337" date="Mon Mar 28 11:03:41 EDT 2022" docOffset="4885" starttimestamp="1648471300703" timestamp="8520611" />
  <Command __id="4848" _type="PauseCommand" date="Mon Mar 28 11:03:57 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8537078">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[16467]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4847" _type="ShellCommand" date="Mon Mar 28 11:03:57 EDT 2022" starttimestamp="1648471300703" timestamp="8537078" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4850" _type="PauseCommand" date="Mon Mar 28 11:03:58 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8538092">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1014]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4849" _type="ShellCommand" date="Mon Mar 28 11:03:58 EDT 2022" starttimestamp="1648471300703" timestamp="8538092" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4851" _type="MoveCaretCommand" caretOffset="3307" date="Mon Mar 28 11:03:59 EDT 2022" docOffset="4855" starttimestamp="1648471300703" timestamp="8538594" />
  <Command __id="4853" _type="ShellCommand" date="Mon Mar 28 11:03:59 EDT 2022" starttimestamp="1648471300703" timestamp="8539275" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4855" _type="PauseCommand" date="Mon Mar 28 11:04:03 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8542655">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3380]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="4854" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 11:04:03 EDT 2022" forward="true" matchWord="false" offset="4855" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="8542655" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="4856" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 11:04:03 EDT 2022" forward="true" matchWord="false" offset="4855" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="8543069" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="4857" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 11:04:03 EDT 2022" forward="true" matchWord="false" offset="4855" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="8543293" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="4858" _type="FindCommand" caseSensitive="false" date="Mon Mar 28 11:04:04 EDT 2022" forward="true" matchWord="false" offset="4855" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1648471300703" timestamp="8543462" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="4860" _type="PauseCommand" date="Mon Mar 28 11:04:05 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8544794">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1332]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4859" _type="ShellCommand" date="Mon Mar 28 11:04:05 EDT 2022" starttimestamp="1648471300703" timestamp="8544794" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4862" _type="PauseCommand" date="Mon Mar 28 11:04:52 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="8591794">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[47000]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4861" _type="MoveCaretCommand" caretOffset="3176" date="Mon Mar 28 11:04:52 EDT 2022" docOffset="4724" starttimestamp="1648471300703" timestamp="8591794" />
  <DocumentChange __id="4798" _type="Insert" date="Mon Mar 28 11:03:04 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5942" docExpressionCount="602" docLength="6400" length="11" offset="6261" repeat="11" starttimestamp="1648471300703" timestamp="8484270" timestamp2="8486427">
    <text><![CDATA[ipcRegistry]]></text>
  </DocumentChange>
  <Command __id="4845" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:03:41 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6965" docExpressionCount="667" docLength="7596" projectName="A5" starttimestamp="1648471300703" timestamp="8520478">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4864" _type="PauseCommand" date="Mon Mar 28 11:04:54 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8593757">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1963]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4865" _type="InsertStringCommand" date="Mon Mar 28 11:04:54 EDT 2022" starttimestamp="1648471300703" timestamp="8593770" timestamp2="8593770">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="4867" _type="InsertStringCommand" date="Mon Mar 28 11:04:54 EDT 2022" starttimestamp="1648471300703" timestamp="8593883" timestamp2="8593883">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4869" _type="InsertStringCommand" date="Mon Mar 28 11:04:54 EDT 2022" starttimestamp="1648471300703" timestamp="8593974" timestamp2="8593974">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="4871" _type="InsertStringCommand" date="Mon Mar 28 11:04:55 EDT 2022" starttimestamp="1648471300703" timestamp="8594309" timestamp2="8594309">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4873" _type="InsertStringCommand" date="Mon Mar 28 11:04:55 EDT 2022" starttimestamp="1648471300703" timestamp="8594636" timestamp2="8594636">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="4875" _type="PauseCommand" date="Mon Mar 28 11:04:56 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8595906">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1270]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4874" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:04:56 EDT 2022" starttimestamp="1648471300703" timestamp="8595906" />
  <Command __id="4876" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:04:56 EDT 2022" starttimestamp="1648471300703" timestamp="8596008" />
  <Command __id="4877" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:04:56 EDT 2022" starttimestamp="1648471300703" timestamp="8596036" />
  <Command __id="4878" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:04:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8596091" type="Run" />
  <DocumentChange __id="4863" _type="Insert" date="Mon Mar 28 11:04:54 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6970" docExpressionCount="667" docLength="7601" length="5" offset="4724" repeat="5" starttimestamp="1648471300703" timestamp="8593757" timestamp2="8594630">
    <text><![CDATA[GIPC_]]></text>
  </DocumentChange>
  <Command __id="4880" _type="PauseCommand" date="Mon Mar 28 11:05:19 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="8618702">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[22611]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4881" _type="SelectTextCommand" caretOffset="6252" date="Mon Mar 28 11:05:19 EDT 2022" end="6252" start="6241" starttimestamp="1648471300703" timestamp="8618781" />
  <Command __id="4879" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:05:19 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5942" docExpressionCount="602" docLength="6400" projectName="A5" starttimestamp="1648471300703" timestamp="8618702">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶"), Diff(INSERT,"import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶"), Diff(EQUAL,"import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		"), Diff(INSERT,"GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		"), Diff(EQUAL,"gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{
	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();
	
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
		
	}
	
	
	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		
	}
	
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		gipcRegistry.rebind(SERVER_NAME, this);	
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <Command __id="4883" _type="PauseCommand" date="Mon Mar 28 11:05:26 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="8626187">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[7406]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4885" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Mar 28 11:05:42 EDT 2022" starttimestamp="1648471300703" timestamp="8641835" />
  <Command __id="4887" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:05:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8641883" type="Debug" />
  <Command __id="4888" _type="ProgramExecutionEvent" className="/A5/src/client/Client.java" date="Mon Mar 28 11:05:42 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8641883" type="Run" />
  <Command __id="4889" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:05:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8641883" type="Debug" />
  <Command __id="4890" _type="ProgramExecutionEvent" className="/A5/src/client/Client.java" date="Mon Mar 28 11:05:42 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8641883" type="Run" />
  <Command __id="4892" _type="PauseCommand" date="Mon Mar 28 11:05:49 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="8649111">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[7228]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4902" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:05:55 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8655226" type="Run" />
  <Command __id="4904" _type="ConsoleOutput" date="Mon Mar 28 11:05:56 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8655430" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.8660260388802645 (Opened)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:"), Diff(INSERT,"Server0<-->"), Diff(EQUAL,"Generic Client:0.8660260388802645"), Diff(INSERT," (Opened)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4905" _type="ExceptionCommand" date="Mon Mar 28 11:05:56 EDT 2022" starttimestamp="1648471300703" timestamp="8655434" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class com.sun.proxy.$Proxy14 cannot be cast to class server.remote.ServerRemoteInterfaceGIPC (com.sun.proxy.$Proxy14 and server.remote.ServerRemoteInterfaceGIPC are in unnamed module of loader 'app')
	at client.ClientRemoteObject.init(ClientRemoteObject.java:129)
	at coupledsims.AStandAloneTwoCoupledHalloweenSimulations.start(AStandAloneTwoCoupledHalloweenSimulations.java:95)
	at client.Client.main(Client.java:14)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4907" _type="PauseCommand" date="Mon Mar 28 11:05:58 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8658266">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2832]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4906" _type="ShellCommand" date="Mon Mar 28 11:05:58 EDT 2022" starttimestamp="1648471300703" timestamp="8658266" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4909" _type="PauseCommand" date="Mon Mar 28 11:06:42 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="8702086">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[43820]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4908" _type="SelectTextCommand" caretOffset="3359" date="Mon Mar 28 11:06:42 EDT 2022" end="3387" start="3359" starttimestamp="1648471300703" timestamp="8702086" />
  <Command __id="4911" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:06:43 EDT 2022" starttimestamp="1648471300703" timestamp="8702369" />
  <Command __id="4913" _type="PauseCommand" date="Mon Mar 28 11:06:44 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8703631">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1262]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4912" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:06:44 EDT 2022" starttimestamp="1648471300703" timestamp="8703631" />
  <Command __id="4914" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:06:44 EDT 2022" starttimestamp="1648471300703" timestamp="8703720" />
  <Command __id="4915" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:06:44 EDT 2022" starttimestamp="1648471300703" timestamp="8703747" />
  <Command __id="4916" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:06:44 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8703815" type="Run" />
  <Command __id="4918" _type="PauseCommand" date="Mon Mar 28 11:07:34 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="8753452">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[49637]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4936" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:07:38 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8758267" type="Debug" />
  <Command __id="4938" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:07:38 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8758268" type="Debug" />
  <Command __id="4939" _type="ProgramExecutionEvent" className="/A5/src/client/Client.java" date="Mon Mar 28 11:07:38 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8758268" type="Run" />
  <Command __id="4940" _type="ShellCommand" date="Mon Mar 28 11:07:38 EDT 2022" starttimestamp="1648471300703" timestamp="8758279" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4941" _type="ConsoleOutput" date="Mon Mar 28 11:07:39 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8758343" type="ConsoleOutput">
    <outputString><![CDATA[AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:56159]:An existing connection was forcibly closed by the remote host
Server0<-->Generic Client:0.8660260388802645 (Closed)
Explanation: An existing connection was forcibly closed by the remote host
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.8660260388802645 (Opened)"), Diff(INSERT,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:56159]:An existing connection was forcibly closed by the remote host¶Server0<-->Generic Client:0.8660260388802645 (Closed)¶Explanation: An existing connection was forcibly closed by the remote host"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4943" _type="PauseCommand" date="Mon Mar 28 11:07:53 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8772488">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14145]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4942" _type="ShellCommand" date="Mon Mar 28 11:07:53 EDT 2022" starttimestamp="1648471300703" timestamp="8772488" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4944" _type="ShellCommand" date="Mon Mar 28 11:07:53 EDT 2022" starttimestamp="1648471300703" timestamp="8772681" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4949" _type="PauseCommand" date="Mon Mar 28 11:07:54 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="8773827">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1122]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4962" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:08:25 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8804583" type="Run" />
  <Command __id="4964" _type="ConsoleOutput" date="Mon Mar 28 11:08:25 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8804835" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.47228203807498914 (Opened)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:"), Diff(INSERT,"Server0<-->"), Diff(EQUAL,"Generic Client:0.47228203807498914"), Diff(INSERT," (Opened)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4965" _type="ExceptionCommand" date="Mon Mar 28 11:08:25 EDT 2022" starttimestamp="1648471300703" timestamp="8804838" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class com.sun.proxy.$Proxy14 cannot be cast to class server.remote.ServerRemoteObjectGIPC (com.sun.proxy.$Proxy14 and server.remote.ServerRemoteObjectGIPC are in unnamed module of loader 'app')
	at client.ClientRemoteObject.init(ClientRemoteObject.java:129)
	at coupledsims.AStandAloneTwoCoupledHalloweenSimulations.start(AStandAloneTwoCoupledHalloweenSimulations.java:95)
	at client.Client.main(Client.java:14)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4967" _type="PauseCommand" date="Mon Mar 28 11:08:39 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8818440">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[13602]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4966" _type="ShellCommand" date="Mon Mar 28 11:08:39 EDT 2022" starttimestamp="1648471300703" timestamp="8818440" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4969" _type="PauseCommand" date="Mon Mar 28 11:08:54 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8833971">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15531]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4968" _type="ShellCommand" date="Mon Mar 28 11:08:54 EDT 2022" starttimestamp="1648471300703" timestamp="8833971" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4971" _type="PauseCommand" date="Mon Mar 28 11:09:44 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="8883309">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[49338]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4970" _type="ShellCommand" date="Mon Mar 28 11:09:44 EDT 2022" starttimestamp="1648471300703" timestamp="8883309" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4973" _type="PauseCommand" date="Mon Mar 28 11:09:58 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8897746">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14437]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4995" _type="ProgramExecutionEvent" className="/A5/src/client/Client.java" date="Mon Mar 28 11:10:09 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8908393" type="Run" />
  <Command __id="4997" _type="RunCommand" className="/A5/src/client/Client.java" date="Mon Mar 28 11:10:09 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="8908394" type="Run" />
  <Command __id="4998" _type="ConsoleOutput" date="Mon Mar 28 11:10:09 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8908749" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.9818831732936545
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A"), Diff(EQUAL,"Re"), Diff(DELETE,"adCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:56181]:An existing connection was forcibly closed by the remote host¶Server0<-->Generic Client:0.47228203807498914 (Closed)¶Explanation: An existing connection was forcibly closed by the remote host"), Diff(INSERT,"gistry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.9818831732936545"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4999" _type="ShellCommand" date="Mon Mar 28 11:10:10 EDT 2022" starttimestamp="1648471300703" timestamp="8909604" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5001" _type="PauseCommand" date="Mon Mar 28 11:10:13 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="8912887">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3283]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5000" _type="ConsoleOutput" date="Mon Mar 28 11:10:13 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8912887" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.9818831732936545 (Opened)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:"), Diff(INSERT,"Server0<-->"), Diff(EQUAL,"Generic Client:0.9818831732936545"), Diff(INSERT," (Opened)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5002" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:10:13 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8912954" type="Run" />
  <Command __id="5003" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:10:13 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8912956" type="Run" />
  <Command __id="5004" _type="ConsoleOutput" date="Mon Mar 28 11:10:13 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8913066" type="ConsoleOutput">
    <outputString><![CDATA[added server as a property change listener of client
Command processor scanner opened
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.9818831732936545 (O"), Diff(INSERT,"added server as a property change listener of client¶Command processor scanner o"), Diff(EQUAL,"pened"), Diff(DELETE,")"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5005" _type="ConsoleOutput" date="Mon Mar 28 11:10:13 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8913202" type="ConsoleOutput">
    <outputString><![CDATA[Client registered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"added server as a property change listener of client¶Command processor scanner open"), Diff(INSERT,"Client register"), Diff(EQUAL,"ed¶")]]]></diff>
  </Command>
  <Command __id="5006" _type="ConsoleOutput" date="Mon Mar 28 11:10:13 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="8913204" type="ConsoleOutput">
    <outputString><![CDATA[Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered"), Diff(INSERT,"Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5008" _type="PauseCommand" date="Mon Mar 28 11:10:19 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="8918556">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5352]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5007" _type="ShellCommand" date="Mon Mar 28 11:10:19 EDT 2022" starttimestamp="1648471300703" timestamp="8918556" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4882" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:05:26 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6970" docExpressionCount="667" docLength="7601" projectName="A5" starttimestamp="1648471300703" timestamp="8626187">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry("), Diff(INSERT,"GIPC_"), Diff(EQUAL,"SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4910" _type="Delete" date="Mon Mar 28 11:06:43 EDT 2022" docASTNodeCount="924" docActiveCodeLength="6942" docExpressionCount="665" docLength="7573" endLine="128" length="28" offset="4907" startLine="128" starttimestamp="1648471300703" timestamp="8702363">
    <text><![CDATA[(ServerRemoteInterfaceGIPC) ]]></text>
  </DocumentChange>
  <DocumentChange __id="4919" _type="Replace" date="Mon Mar 28 11:07:34 EDT 2022" docASTNodeCount="924" docActiveCodeLength="6934" docExpressionCount="665" docLength="7565" endLine="48" insertionLength="1" int_docASTNodeCount="924" int_docActiveCodeLength="6933" int_docExpressionCount="665" int_docLength="7564" length="9" offset="2140" startLine="48" starttimestamp="1648471300703" timestamp="8753849">
    <deletedText><![CDATA[Interface]]></deletedText>
    <insertedText><![CDATA[O]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4921" _type="Insert" date="Mon Mar 28 11:07:34 EDT 2022" docASTNodeCount="924" docActiveCodeLength="6939" docExpressionCount="665" docLength="7570" length="5" offset="2141" repeat="5" starttimestamp="1648471300703" timestamp="8754289" timestamp2="8754948">
    <text><![CDATA[bject]]></text>
  </DocumentChange>
  <DocumentChange __id="4945" _type="Delete" date="Mon Mar 28 11:07:53 EDT 2022" docASTNodeCount="916" docActiveCodeLength="6877" docExpressionCount="659" docLength="7508" endLine="128" length="62" offset="4904" startLine="128" starttimestamp="1648471300703" timestamp="8772700">
    <text><![CDATA[gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME)]]></text>
  </DocumentChange>
  <DocumentChange __id="4946" _type="Insert" date="Mon Mar 28 11:07:53 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6964" docExpressionCount="667" docLength="7595" length="87" offset="4904" repeat="2" starttimestamp="1648471300703" timestamp="8772705" timestamp2="8772707">
    <text><![CDATA[(ServerRemoteObjectGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME)]]></text>
  </DocumentChange>
  <DocumentChange __id="4974" _type="Insert" date="Mon Mar 28 11:09:58 EDT 2022" docASTNodeCount="914" docActiveCodeLength="6863" docExpressionCount="657" docLength="7597" length="2" offset="4891" repeat="2" starttimestamp="1648471300703" timestamp="8898287" timestamp2="8898380">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="4981" _type="Insert" date="Mon Mar 28 11:10:00 EDT 2022" docASTNodeCount="903" docActiveCodeLength="6761" docExpressionCount="648" docLength="7599" length="2" offset="4998" repeat="2" starttimestamp="1648471300703" timestamp="8900221" timestamp2="8900320">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="5010" _type="PauseCommand" date="Mon Mar 28 11:10:29 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="8928888">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10332]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5012" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:10:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="8943003" type="Run" />
  <Command __id="5015" _type="PauseCommand" date="Mon Mar 28 11:12:40 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="9059512">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[116509]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5014" _type="SelectTextCommand" caretOffset="5066" date="Mon Mar 28 11:12:40 EDT 2022" end="5135" start="5066" starttimestamp="1648471300703" timestamp="9059512" />
  <Command __id="5016" _type="SelectTextCommand" caretOffset="5066" date="Mon Mar 28 11:12:40 EDT 2022" end="5135" start="5066" starttimestamp="1648471300703" timestamp="9059512" />
  <Command __id="5018" _type="CutCommand" date="Mon Mar 28 11:12:41 EDT 2022" starttimestamp="1648471300703" timestamp="9060308" />
  <Command __id="5020" _type="PauseCommand" date="Mon Mar 28 11:13:04 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="9083833">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[23525]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5019" _type="MoveCaretCommand" caretOffset="6089" date="Mon Mar 28 11:13:04 EDT 2022" docOffset="6089" starttimestamp="1648471300703" timestamp="9083833" />
  <Command __id="5021" _type="MoveCaretCommand" caretOffset="6089" date="Mon Mar 28 11:13:04 EDT 2022" docOffset="6089" starttimestamp="1648471300703" timestamp="9083833" />
  <Command __id="5009" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:10:29 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5942" docExpressionCount="602" docLength="6400" projectName="A5" starttimestamp="1648471300703" timestamp="8928888">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="5017" _type="Delete" date="Mon Mar 28 11:12:40 EDT 2022" docASTNodeCount="819" docActiveCodeLength="5873" docExpressionCount="598" docLength="6331" endLine="153" length="69" offset="5066" startLine="153" starttimestamp="1648471300703" timestamp="9060287">
    <text><![CDATA[final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();]]></text>
  </DocumentChange>
  <Command __id="5023" _type="PauseCommand" date="Mon Mar 28 11:13:09 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9088939">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5106]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="5022" _type="Insert" date="Mon Mar 28 11:13:09 EDT 2022" docASTNodeCount="819" docActiveCodeLength="5881" docExpressionCount="598" docLength="6339" length="8" offset="6089" repeat="2" starttimestamp="1648471300703" timestamp="9088939" timestamp2="9089075">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <Command __id="5024" _type="InsertStringCommand" date="Mon Mar 28 11:13:09 EDT 2022" starttimestamp="1648471300703" timestamp="9088956" timestamp2="9088956">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5025" _type="InsertStringCommand" date="Mon Mar 28 11:13:09 EDT 2022" starttimestamp="1648471300703" timestamp="9088956" timestamp2="9088956">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5027" _type="InsertStringCommand" date="Mon Mar 28 11:13:09 EDT 2022" starttimestamp="1648471300703" timestamp="9089083" timestamp2="9089083">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5028" _type="InsertStringCommand" date="Mon Mar 28 11:13:09 EDT 2022" starttimestamp="1648471300703" timestamp="9089083" timestamp2="9089083">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5030" _type="PasteCommand" date="Mon Mar 28 11:13:10 EDT 2022" starttimestamp="1648471300703" timestamp="9089938" />
  <Command __id="5032" _type="PauseCommand" date="Mon Mar 28 11:13:13 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9092358">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2420]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5031" _type="SelectTextCommand" caretOffset="6202" date="Mon Mar 28 11:13:13 EDT 2022" end="6207" start="6202" starttimestamp="1648471300703" timestamp="9092358" />
  <Command __id="5033" _type="SelectTextCommand" caretOffset="6202" date="Mon Mar 28 11:13:13 EDT 2022" end="6207" start="6202" starttimestamp="1648471300703" timestamp="9092358" />
  <Command __id="5035" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:13:13 EDT 2022" starttimestamp="1648471300703" timestamp="9092932" />
  <Command __id="5036" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:13:13 EDT 2022" starttimestamp="1648471300703" timestamp="9092932" />
  <Command __id="5038" _type="InsertStringCommand" date="Mon Mar 28 11:13:13 EDT 2022" starttimestamp="1648471300703" timestamp="9093168" timestamp2="9093168">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5039" _type="InsertStringCommand" date="Mon Mar 28 11:13:13 EDT 2022" starttimestamp="1648471300703" timestamp="9093169" timestamp2="9093169">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5041" _type="InsertStringCommand" date="Mon Mar 28 11:13:14 EDT 2022" starttimestamp="1648471300703" timestamp="9093775" timestamp2="9093775">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5042" _type="InsertStringCommand" date="Mon Mar 28 11:13:14 EDT 2022" starttimestamp="1648471300703" timestamp="9093775" timestamp2="9093775">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5044" _type="InsertStringCommand" date="Mon Mar 28 11:13:14 EDT 2022" starttimestamp="1648471300703" timestamp="9093946" timestamp2="9093946">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5045" _type="InsertStringCommand" date="Mon Mar 28 11:13:14 EDT 2022" starttimestamp="1648471300703" timestamp="9093946" timestamp2="9093946">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5047" _type="InsertStringCommand" date="Mon Mar 28 11:13:14 EDT 2022" starttimestamp="1648471300703" timestamp="9094119" timestamp2="9094119">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5048" _type="InsertStringCommand" date="Mon Mar 28 11:13:14 EDT 2022" starttimestamp="1648471300703" timestamp="9094120" timestamp2="9094120">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5050" _type="InsertStringCommand" date="Mon Mar 28 11:13:15 EDT 2022" starttimestamp="1648471300703" timestamp="9094488" timestamp2="9094488">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5051" _type="InsertStringCommand" date="Mon Mar 28 11:13:15 EDT 2022" starttimestamp="1648471300703" timestamp="9094488" timestamp2="9094488">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5053" _type="InsertStringCommand" date="Mon Mar 28 11:13:15 EDT 2022" starttimestamp="1648471300703" timestamp="9094744" timestamp2="9094744">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5054" _type="InsertStringCommand" date="Mon Mar 28 11:13:15 EDT 2022" starttimestamp="1648471300703" timestamp="9094744" timestamp2="9094744">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5056" _type="InsertStringCommand" date="Mon Mar 28 11:13:15 EDT 2022" starttimestamp="1648471300703" timestamp="9094909" timestamp2="9094909">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5057" _type="InsertStringCommand" date="Mon Mar 28 11:13:15 EDT 2022" starttimestamp="1648471300703" timestamp="9094909" timestamp2="9094909">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5058" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:13:16 EDT 2022" starttimestamp="1648471300703" timestamp="9095880" />
  <Command __id="5059" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:13:16 EDT 2022" starttimestamp="1648471300703" timestamp="9095979" />
  <Command __id="5060" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:13:16 EDT 2022" starttimestamp="1648471300703" timestamp="9096007" />
  <Command __id="5062" _type="PauseCommand" date="Mon Mar 28 11:13:38 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="9117664">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[21656]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5061" _type="MoveCaretCommand" caretOffset="1532" date="Mon Mar 28 11:13:38 EDT 2022" docOffset="1532" starttimestamp="1648471300703" timestamp="9117663" />
  <Command __id="5063" _type="MoveCaretCommand" caretOffset="1532" date="Mon Mar 28 11:13:38 EDT 2022" docOffset="1532" starttimestamp="1648471300703" timestamp="9117664" />
  <Command __id="5065" _type="InsertStringCommand" date="Mon Mar 28 11:13:38 EDT 2022" starttimestamp="1648471300703" timestamp="9118293" timestamp2="9118293">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5066" _type="InsertStringCommand" date="Mon Mar 28 11:13:38 EDT 2022" starttimestamp="1648471300703" timestamp="9118293" timestamp2="9118293">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5068" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9118462" timestamp2="9118462">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5069" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9118462" timestamp2="9118462">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5071" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9118645" timestamp2="9118645">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5072" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9118645" timestamp2="9118645">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5074" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9118782" timestamp2="9118782">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5075" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9118782" timestamp2="9118782">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5077" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9118965" timestamp2="9118965">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5078" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9118965" timestamp2="9118965">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5080" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9119038" timestamp2="9119038">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5081" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9119038" timestamp2="9119038">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5083" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9119160" timestamp2="9119160">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5084" _type="InsertStringCommand" date="Mon Mar 28 11:13:39 EDT 2022" starttimestamp="1648471300703" timestamp="9119160" timestamp2="9119160">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5086" _type="InsertStringCommand" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9119321" timestamp2="9119321">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5087" _type="InsertStringCommand" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9119321" timestamp2="9119321">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5089" _type="InsertStringCommand" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9119482" timestamp2="9119482">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5090" _type="InsertStringCommand" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9119482" timestamp2="9119482">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5092" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9119912" />
  <Command __id="5093" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9119912" />
  <Command __id="5095" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9120055" />
  <Command __id="5096" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9120055" />
  <DocumentChange __id="5029" _type="Replace" date="Mon Mar 28 11:13:10 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5950" docExpressionCount="602" docLength="6408" endLine="197" insertionLength="71" int_docASTNodeCount="819" int_docActiveCodeLength="5879" int_docExpressionCount="598" int_docLength="6337" length="2" offset="6095" startLine="197" starttimestamp="1648471300703" timestamp="9089931">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5034" _type="Delete" date="Mon Mar 28 11:13:13 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5945" docExpressionCount="602" docLength="6403" endLine="198" length="5" offset="6202" startLine="198" starttimestamp="1648471300703" timestamp="9092926">
    <text><![CDATA[ this]]></text>
  </DocumentChange>
  <DocumentChange __id="5037" _type="Insert" date="Mon Mar 28 11:13:13 EDT 2022" docASTNodeCount="828" docActiveCodeLength="5952" docExpressionCount="602" docLength="6410" length="7" offset="6202" repeat="7" starttimestamp="1648471300703" timestamp="9093165" timestamp2="9094904">
    <text><![CDATA[ server]]></text>
  </DocumentChange>
  <DocumentChange __id="5064" _type="Insert" date="Mon Mar 28 11:13:38 EDT 2022" docASTNodeCount="830" docActiveCodeLength="5961" docExpressionCount="602" docLength="6419" length="9" offset="1532" repeat="9" starttimestamp="1648471300703" timestamp="9118284" timestamp2="9119475">
    <text><![CDATA[ implemtn]]></text>
  </DocumentChange>
  <DocumentChange __id="5091" _type="Delete" date="Mon Mar 28 11:13:40 EDT 2022" docASTNodeCount="830" docActiveCodeLength="5959" docExpressionCount="602" docLength="6417" endLine="36" length="2" offset="1539" repeat="2" startLine="36" starttimestamp="1648471300703" timestamp="9119909" timestamp2="9120053">
    <text><![CDATA[tn]]></text>
  </DocumentChange>
  <Command __id="5098" _type="InsertStringCommand" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9120152" timestamp2="9120152">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5099" _type="InsertStringCommand" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9120152" timestamp2="9120152">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5101" _type="InsertStringCommand" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9120274" timestamp2="9120274">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5102" _type="InsertStringCommand" date="Mon Mar 28 11:13:40 EDT 2022" starttimestamp="1648471300703" timestamp="9120274" timestamp2="9120274">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5104" _type="InsertStringCommand" date="Mon Mar 28 11:13:41 EDT 2022" starttimestamp="1648471300703" timestamp="9120356" timestamp2="9120356">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5105" _type="InsertStringCommand" date="Mon Mar 28 11:13:41 EDT 2022" starttimestamp="1648471300703" timestamp="9120356" timestamp2="9120356">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5107" _type="InsertStringCommand" date="Mon Mar 28 11:13:41 EDT 2022" starttimestamp="1648471300703" timestamp="9120532" timestamp2="9120532">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5108" _type="InsertStringCommand" date="Mon Mar 28 11:13:41 EDT 2022" starttimestamp="1648471300703" timestamp="9120532" timestamp2="9120532">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5110" _type="InsertStringCommand" date="Mon Mar 28 11:13:41 EDT 2022" starttimestamp="1648471300703" timestamp="9120650" timestamp2="9120650">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5111" _type="InsertStringCommand" date="Mon Mar 28 11:13:41 EDT 2022" starttimestamp="1648471300703" timestamp="9120650" timestamp2="9120650">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5114" _type="PauseCommand" date="Mon Mar 28 11:13:42 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9121686">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1036]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="5113" _type="InsertStringCommand" date="Mon Mar 28 11:13:42 EDT 2022" starttimestamp="1648471300703" timestamp="9121686" timestamp2="9121686">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5115" _type="InsertStringCommand" date="Mon Mar 28 11:13:42 EDT 2022" starttimestamp="1648471300703" timestamp="9121686" timestamp2="9121686">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5117" _type="InsertStringCommand" date="Mon Mar 28 11:13:42 EDT 2022" starttimestamp="1648471300703" timestamp="9121866" timestamp2="9121866">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5118" _type="InsertStringCommand" date="Mon Mar 28 11:13:42 EDT 2022" starttimestamp="1648471300703" timestamp="9121866" timestamp2="9121866">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5120" _type="InsertStringCommand" date="Mon Mar 28 11:13:42 EDT 2022" starttimestamp="1648471300703" timestamp="9121977" timestamp2="9121977">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5121" _type="InsertStringCommand" date="Mon Mar 28 11:13:42 EDT 2022" starttimestamp="1648471300703" timestamp="9121977" timestamp2="9121977">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5123" _type="InsertStringCommand" date="Mon Mar 28 11:13:42 EDT 2022" starttimestamp="1648471300703" timestamp="9122163" timestamp2="9122163">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5124" _type="InsertStringCommand" date="Mon Mar 28 11:13:42 EDT 2022" starttimestamp="1648471300703" timestamp="9122163" timestamp2="9122163">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5126" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9122301" timestamp2="9122301">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5127" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9122301" timestamp2="9122301">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5129" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9122402" timestamp2="9122402">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5130" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9122402" timestamp2="9122402">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5132" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9122718" timestamp2="9122718">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="5133" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9122718" timestamp2="9122718">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="5135" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9122899" timestamp2="9122899">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5136" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9122899" timestamp2="9122899">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5138" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9123037" timestamp2="9123037">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5139" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9123037" timestamp2="9123037">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5141" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9123112" timestamp2="9123112">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5142" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9123112" timestamp2="9123112">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5144" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9123172" timestamp2="9123172">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5145" _type="InsertStringCommand" date="Mon Mar 28 11:13:43 EDT 2022" starttimestamp="1648471300703" timestamp="9123172" timestamp2="9123172">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5147" _type="InsertStringCommand" date="Mon Mar 28 11:13:44 EDT 2022" starttimestamp="1648471300703" timestamp="9123319" timestamp2="9123319">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5148" _type="InsertStringCommand" date="Mon Mar 28 11:13:44 EDT 2022" starttimestamp="1648471300703" timestamp="9123319" timestamp2="9123319">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5151" _type="PauseCommand" date="Mon Mar 28 11:13:45 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9124389">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1070]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="5150" _type="InsertStringCommand" date="Mon Mar 28 11:13:45 EDT 2022" starttimestamp="1648471300703" timestamp="9124389" timestamp2="9124389">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5152" _type="InsertStringCommand" date="Mon Mar 28 11:13:45 EDT 2022" starttimestamp="1648471300703" timestamp="9124389" timestamp2="9124389">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5154" _type="InsertStringCommand" date="Mon Mar 28 11:13:45 EDT 2022" starttimestamp="1648471300703" timestamp="9124561" timestamp2="9124561">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5155" _type="InsertStringCommand" date="Mon Mar 28 11:13:45 EDT 2022" starttimestamp="1648471300703" timestamp="9124561" timestamp2="9124561">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5157" _type="InsertStringCommand" date="Mon Mar 28 11:13:45 EDT 2022" starttimestamp="1648471300703" timestamp="9124667" timestamp2="9124667">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5158" _type="InsertStringCommand" date="Mon Mar 28 11:13:45 EDT 2022" starttimestamp="1648471300703" timestamp="9124667" timestamp2="9124667">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5160" _type="InsertStringCommand" date="Mon Mar 28 11:13:45 EDT 2022" starttimestamp="1648471300703" timestamp="9124807" timestamp2="9124807">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5161" _type="InsertStringCommand" date="Mon Mar 28 11:13:45 EDT 2022" starttimestamp="1648471300703" timestamp="9124807" timestamp2="9124807">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5163" _type="InsertStringCommand" date="Mon Mar 28 11:13:45 EDT 2022" starttimestamp="1648471300703" timestamp="9125227" timestamp2="9125227">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5164" _type="InsertStringCommand" date="Mon Mar 28 11:13:45 EDT 2022" starttimestamp="1648471300703" timestamp="9125227" timestamp2="9125227">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5166" _type="InsertStringCommand" date="Mon Mar 28 11:13:46 EDT 2022" starttimestamp="1648471300703" timestamp="9125518" timestamp2="9125518">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5167" _type="InsertStringCommand" date="Mon Mar 28 11:13:46 EDT 2022" starttimestamp="1648471300703" timestamp="9125518" timestamp2="9125518">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5169" _type="InsertStringCommand" date="Mon Mar 28 11:13:46 EDT 2022" starttimestamp="1648471300703" timestamp="9125602" timestamp2="9125602">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5170" _type="InsertStringCommand" date="Mon Mar 28 11:13:46 EDT 2022" starttimestamp="1648471300703" timestamp="9125602" timestamp2="9125602">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5172" _type="InsertStringCommand" date="Mon Mar 28 11:13:46 EDT 2022" starttimestamp="1648471300703" timestamp="9125794" timestamp2="9125794">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5173" _type="InsertStringCommand" date="Mon Mar 28 11:13:46 EDT 2022" starttimestamp="1648471300703" timestamp="9125794" timestamp2="9125794">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5175" _type="InsertStringCommand" date="Mon Mar 28 11:13:46 EDT 2022" starttimestamp="1648471300703" timestamp="9125988" timestamp2="9125988">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5176" _type="InsertStringCommand" date="Mon Mar 28 11:13:46 EDT 2022" starttimestamp="1648471300703" timestamp="9125988" timestamp2="9125988">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5178" _type="InsertStringCommand" date="Mon Mar 28 11:13:47 EDT 2022" starttimestamp="1648471300703" timestamp="9126391" timestamp2="9126391">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="5179" _type="InsertStringCommand" date="Mon Mar 28 11:13:47 EDT 2022" starttimestamp="1648471300703" timestamp="9126391" timestamp2="9126391">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="5181" _type="InsertStringCommand" date="Mon Mar 28 11:13:47 EDT 2022" starttimestamp="1648471300703" timestamp="9126532" timestamp2="9126532">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5182" _type="InsertStringCommand" date="Mon Mar 28 11:13:47 EDT 2022" starttimestamp="1648471300703" timestamp="9126532" timestamp2="9126532">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5184" _type="InsertStringCommand" date="Mon Mar 28 11:13:47 EDT 2022" starttimestamp="1648471300703" timestamp="9126642" timestamp2="9126642">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="5185" _type="InsertStringCommand" date="Mon Mar 28 11:13:47 EDT 2022" starttimestamp="1648471300703" timestamp="9126642" timestamp2="9126642">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="5187" _type="InsertStringCommand" date="Mon Mar 28 11:13:47 EDT 2022" starttimestamp="1648471300703" timestamp="9126888" timestamp2="9126888">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="5188" _type="InsertStringCommand" date="Mon Mar 28 11:13:47 EDT 2022" starttimestamp="1648471300703" timestamp="9126888" timestamp2="9126888">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="5190" _type="PauseCommand" date="Mon Mar 28 11:13:48 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9128253">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1365]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5189" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:13:48 EDT 2022" starttimestamp="1648471300703" timestamp="9128253" />
  <Command __id="5191" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:13:49 EDT 2022" starttimestamp="1648471300703" timestamp="9128347" />
  <Command __id="5192" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:13:49 EDT 2022" starttimestamp="1648471300703" timestamp="9128399" />
  <DocumentChange __id="5097" _type="Insert" date="Mon Mar 28 11:13:40 EDT 2022" docASTNodeCount="830" docActiveCodeLength="5989" docExpressionCount="603" docLength="6447" length="30" offset="1539" repeat="30" starttimestamp="1648471300703" timestamp="9120147" timestamp2="9126883">
    <text><![CDATA[ents ServerRemoteInterfaceGIPC]]></text>
  </DocumentChange>
  <Command __id="5194" _type="PauseCommand" date="Mon Mar 28 11:13:50 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9130227">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1828]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5195" _type="MoveCaretCommand" caretOffset="545" date="Mon Mar 28 11:13:51 EDT 2022" docOffset="545" starttimestamp="1648471300703" timestamp="9130312" />
  <Command __id="5193" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:13:50 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="741" projectName="A5" starttimestamp="1648471300703" timestamp="9130227">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5197" _type="PauseCommand" date="Mon Mar 28 11:13:53 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9132983">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2671]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5198" _type="MoveCaretCommand" caretOffset="3452" date="Mon Mar 28 11:13:53 EDT 2022" docOffset="5000" starttimestamp="1648471300703" timestamp="9133066" />
  <Command __id="5200" _type="PauseCommand" date="Mon Mar 28 11:13:57 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9136431">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3365]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5199" _type="SelectTextCommand" caretOffset="592" date="Mon Mar 28 11:13:57 EDT 2022" end="598" start="592" starttimestamp="1648471300703" timestamp="9136431" />
  <Command __id="5202" _type="InsertStringCommand" date="Mon Mar 28 11:13:57 EDT 2022" starttimestamp="1648471300703" timestamp="9136834" timestamp2="9136834">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5204" _type="InsertStringCommand" date="Mon Mar 28 11:13:57 EDT 2022" starttimestamp="1648471300703" timestamp="9137027" timestamp2="9137027">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5206" _type="InsertStringCommand" date="Mon Mar 28 11:13:57 EDT 2022" starttimestamp="1648471300703" timestamp="9137111" timestamp2="9137111">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5208" _type="InsertStringCommand" date="Mon Mar 28 11:13:57 EDT 2022" starttimestamp="1648471300703" timestamp="9137256" timestamp2="9137256">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5210" _type="InsertStringCommand" date="Mon Mar 28 11:13:58 EDT 2022" starttimestamp="1648471300703" timestamp="9137615" timestamp2="9137615">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5212" _type="InsertStringCommand" date="Mon Mar 28 11:13:58 EDT 2022" starttimestamp="1648471300703" timestamp="9137953" timestamp2="9137953">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5214" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:13:58 EDT 2022" starttimestamp="1648471300703" timestamp="9138284" />
  <Command __id="5216" _type="InsertStringCommand" date="Mon Mar 28 11:13:59 EDT 2022" starttimestamp="1648471300703" timestamp="9138348" timestamp2="9138348">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5218" _type="InsertStringCommand" date="Mon Mar 28 11:13:59 EDT 2022" starttimestamp="1648471300703" timestamp="9138411" timestamp2="9138411">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5220" _type="InsertStringCommand" date="Mon Mar 28 11:13:59 EDT 2022" starttimestamp="1648471300703" timestamp="9138581" timestamp2="9138581">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5222" _type="InsertStringCommand" date="Mon Mar 28 11:13:59 EDT 2022" starttimestamp="1648471300703" timestamp="9138819" timestamp2="9138819">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5224" _type="InsertStringCommand" date="Mon Mar 28 11:13:59 EDT 2022" starttimestamp="1648471300703" timestamp="9139271" timestamp2="9139271">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5226" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:14:00 EDT 2022" starttimestamp="1648471300703" timestamp="9139833" />
  <Command __id="5228" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:14:00 EDT 2022" starttimestamp="1648471300703" timestamp="9139980" />
  <Command __id="5230" _type="InsertStringCommand" date="Mon Mar 28 11:14:01 EDT 2022" starttimestamp="1648471300703" timestamp="9140448" timestamp2="9140448">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5231" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:14:02 EDT 2022" starttimestamp="1648471300703" timestamp="9141319" />
  <Command __id="5232" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:14:02 EDT 2022" starttimestamp="1648471300703" timestamp="9141419" />
  <Command __id="5233" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:14:02 EDT 2022" starttimestamp="1648471300703" timestamp="9141462" />
  <Command __id="5235" _type="PauseCommand" date="Mon Mar 28 11:14:07 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9146782">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5320]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5234" _type="MoveCaretCommand" caretOffset="3347" date="Mon Mar 28 11:14:07 EDT 2022" docOffset="4895" starttimestamp="1648471300703" timestamp="9146782" />
  <Command __id="5236" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 11:14:08 EDT 2022" starttimestamp="1648471300703" timestamp="9147468" />
  <Command __id="5238" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:14:08 EDT 2022" starttimestamp="1648471300703" timestamp="9147794" />
  <Command __id="5240" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:14:08 EDT 2022" starttimestamp="1648471300703" timestamp="9147915" />
  <Command __id="5242" _type="PauseCommand" date="Mon Mar 28 11:14:11 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9150504">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2589]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5241" _type="MoveCaretCommand" caretOffset="3454" date="Mon Mar 28 11:14:11 EDT 2022" docOffset="5002" starttimestamp="1648471300703" timestamp="9150504" />
  <Command __id="5243" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:14:11 EDT 2022" starttimestamp="1648471300703" timestamp="9150896" />
  <Command __id="5245" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:14:11 EDT 2022" starttimestamp="1648471300703" timestamp="9151125" />
  <Command __id="5247" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:14:11 EDT 2022" starttimestamp="1648471300703" timestamp="9151263" />
  <Command __id="5249" _type="PauseCommand" date="Mon Mar 28 11:14:15 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9154961">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3698]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5289" _type="RunCommand" className="/A5/src/client/Client.java" date="Mon Mar 28 11:14:42 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="9181700" type="Run" />
  <Command __id="5291" _type="ConsoleOutput" date="Mon Mar 28 11:14:42 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="9182029" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.21074916653772047
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server proxy sent to RMI Registry"), Diff(INSERT,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.21074916653772047"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5292" _type="ShellCommand" date="Mon Mar 28 11:14:43 EDT 2022" starttimestamp="1648471300703" timestamp="9182834" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5294" _type="PauseCommand" date="Mon Mar 28 11:14:47 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9186300">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3466]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5298" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:14:50 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="9189704" type="Run" />
  <Command __id="5301" _type="PauseCommand" date="Mon Mar 28 11:14:52 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9191954">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2250]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5302" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:15:17 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="9216419" type="Run" />
  <Command __id="5305" _type="PauseCommand" date="Mon Mar 28 11:16:06 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="9265309">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[48890]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5196" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:13:53 EDT 2022" docASTNodeCount="903" docActiveCodeLength="6761" docExpressionCount="648" docLength="7599" projectName="A5" starttimestamp="1648471300703" timestamp="9132983">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemote"), Diff(DELETE,"Interface"), Diff(INSERT,"Object"), Diff(EQUAL,"GIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		"), Diff(INSERT,"//"), Diff(EQUAL,"serverGIPC = (ServerRemote"), Diff(DELETE,"Interface"), Diff(INSERT,"Object"), Diff(EQUAL,"GIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		"), Diff(INSERT,"//"), Diff(EQUAL,"GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	ServerRemoteObjectGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		//serverGIPC = (ServerRemoteObjectGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		//GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5201" _type="Replace" date="Mon Mar 28 11:13:57 EDT 2022" docASTNodeCount="903" docActiveCodeLength="6756" docExpressionCount="648" docLength="7594" endLine="48" insertionLength="1" int_docASTNodeCount="903" int_docActiveCodeLength="6755" int_docExpressionCount="648" int_docLength="7593" length="6" offset="2140" startLine="48" starttimestamp="1648471300703" timestamp="9136823">
    <deletedText><![CDATA[Object]]></deletedText>
    <insertedText><![CDATA[I]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5203" _type="Insert" date="Mon Mar 28 11:13:57 EDT 2022" docASTNodeCount="903" docActiveCodeLength="6761" docExpressionCount="648" docLength="7599" length="5" offset="2141" repeat="5" starttimestamp="1648471300703" timestamp="9137023" timestamp2="9137950">
    <text><![CDATA[ntera]]></text>
  </DocumentChange>
  <DocumentChange __id="5213" _type="Delete" date="Mon Mar 28 11:13:58 EDT 2022" docASTNodeCount="903" docActiveCodeLength="6760" docExpressionCount="648" docLength="7598" endLine="48" length="1" offset="2145" startLine="48" starttimestamp="1648471300703" timestamp="9138282">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="5215" _type="Insert" date="Mon Mar 28 11:13:59 EDT 2022" docASTNodeCount="903" docActiveCodeLength="6765" docExpressionCount="648" docLength="7603" length="5" offset="2145" repeat="5" starttimestamp="1648471300703" timestamp="9138342" timestamp2="9139267">
    <text><![CDATA[facee]]></text>
  </DocumentChange>
  <DocumentChange __id="5225" _type="Delete" date="Mon Mar 28 11:14:00 EDT 2022" docASTNodeCount="903" docActiveCodeLength="6763" docExpressionCount="648" docLength="7601" endLine="48" length="2" offset="2148" repeat="2" startLine="48" starttimestamp="1648471300703" timestamp="9139830" timestamp2="9139978">
    <text><![CDATA[ee]]></text>
  </DocumentChange>
  <DocumentChange __id="5229" _type="Insert" date="Mon Mar 28 11:14:01 EDT 2022" docASTNodeCount="903" docActiveCodeLength="6764" docExpressionCount="648" docLength="7602" length="1" offset="2148" starttimestamp="1648471300703" timestamp="9140443">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="5237" _type="Delete" date="Mon Mar 28 11:14:08 EDT 2022" docASTNodeCount="916" docActiveCodeLength="6865" docExpressionCount="658" docLength="7600" endLine="128" length="2" offset="4894" repeat="2" startLine="128" starttimestamp="1648471300703" timestamp="9147781" timestamp2="9147913">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5244" _type="Delete" date="Mon Mar 28 11:14:11 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6967" docExpressionCount="667" docLength="7598" endLine="129" length="2" offset="4999" repeat="2" startLine="129" starttimestamp="1648471300703" timestamp="9151116" timestamp2="9151260">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5250" _type="Replace" date="Mon Mar 28 11:14:16 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6962" docExpressionCount="667" docLength="7593" endLine="128" insertionLength="1" int_docASTNodeCount="927" int_docActiveCodeLength="6961" int_docExpressionCount="667" int_docLength="7592" length="6" offset="4920" startLine="128" starttimestamp="1648471300703" timestamp="9155316">
    <deletedText><![CDATA[Object]]></deletedText>
    <insertedText><![CDATA[I]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5252" _type="Insert" date="Mon Mar 28 11:14:16 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6970" docExpressionCount="667" docLength="7601" length="8" offset="4921" repeat="8" starttimestamp="1648471300703" timestamp="9155490" timestamp2="9156583">
    <text><![CDATA[nterface]]></text>
  </DocumentChange>
  <Command __id="5304" _type="MoveCaretCommand" caretOffset="3560" date="Mon Mar 28 11:16:06 EDT 2022" docOffset="5108" starttimestamp="1648471300703" timestamp="9265309" />
  <Command __id="5307" _type="InsertStringCommand" date="Mon Mar 28 11:16:06 EDT 2022" starttimestamp="1648471300703" timestamp="9266150" timestamp2="9266150">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5308" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Mar 28 11:16:07 EDT 2022" starttimestamp="1648471300703" timestamp="9266750" />
  <Command __id="5310" _type="InsertStringCommand" date="Mon Mar 28 11:16:08 EDT 2022" starttimestamp="1648471300703" timestamp="9267305" timestamp2="9267305">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5312" _type="InsertStringCommand" date="Mon Mar 28 11:16:08 EDT 2022" starttimestamp="1648471300703" timestamp="9267637" timestamp2="9267637">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5314" _type="InsertStringCommand" date="Mon Mar 28 11:16:08 EDT 2022" starttimestamp="1648471300703" timestamp="9267763" timestamp2="9267763">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5316" _type="InsertStringCommand" date="Mon Mar 28 11:16:08 EDT 2022" starttimestamp="1648471300703" timestamp="9267857" timestamp2="9267857">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5318" _type="InsertStringCommand" date="Mon Mar 28 11:16:08 EDT 2022" starttimestamp="1648471300703" timestamp="9268144" timestamp2="9268144">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5320" _type="InsertStringCommand" date="Mon Mar 28 11:16:09 EDT 2022" starttimestamp="1648471300703" timestamp="9268335" timestamp2="9268335">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5322" _type="InsertStringCommand" date="Mon Mar 28 11:16:09 EDT 2022" starttimestamp="1648471300703" timestamp="9268399" timestamp2="9268399">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5324" _type="InsertStringCommand" date="Mon Mar 28 11:16:09 EDT 2022" starttimestamp="1648471300703" timestamp="9269284" timestamp2="9269284">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="5326" _type="InsertStringCommand" date="Mon Mar 28 11:16:10 EDT 2022" starttimestamp="1648471300703" timestamp="9269412" timestamp2="9269412">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5328" _type="InsertStringCommand" date="Mon Mar 28 11:16:10 EDT 2022" starttimestamp="1648471300703" timestamp="9269492" timestamp2="9269492">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="5330" _type="InsertStringCommand" date="Mon Mar 28 11:16:10 EDT 2022" starttimestamp="1648471300703" timestamp="9269807" timestamp2="9269807">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="5332" _type="InsertStringCommand" date="Mon Mar 28 11:16:10 EDT 2022" starttimestamp="1648471300703" timestamp="9270202" timestamp2="9270202">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5333" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 11:16:10 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="9270206" />
  <Command __id="5337" _type="PauseCommand" date="Mon Mar 28 11:16:14 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9273562">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3356]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5336" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Mon Mar 28 11:16:14 EDT 2022" starttimestamp="1648471300703" timestamp="9273562" />
  <Command __id="5338" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 11:16:15 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="9274353" />
  <Command __id="5339" _type="MoveCaretCommand" caretOffset="3560" date="Mon Mar 28 11:16:15 EDT 2022" docOffset="5108" starttimestamp="1648471300703" timestamp="9274444" />
  <Command __id="5341" _type="PauseCommand" date="Mon Mar 28 11:16:16 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9276065">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1621]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5340" _type="SelectTextCommand" caretOffset="3564" date="Mon Mar 28 11:16:16 EDT 2022" end="3577" start="3564" starttimestamp="1648471300703" timestamp="9276065" />
  <Command __id="5343" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:16:17 EDT 2022" starttimestamp="1648471300703" timestamp="9276317" />
  <Command __id="5344" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:16:17 EDT 2022" starttimestamp="1648471300703" timestamp="9277286" />
  <Command __id="5345" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:16:18 EDT 2022" starttimestamp="1648471300703" timestamp="9277381" />
  <Command __id="5346" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:16:18 EDT 2022" starttimestamp="1648471300703" timestamp="9277413" />
  <Command __id="5348" _type="PauseCommand" date="Mon Mar 28 11:16:38 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="9298132">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[20719]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5347" _type="ShellCommand" date="Mon Mar 28 11:16:38 EDT 2022" starttimestamp="1648471300703" timestamp="9298132" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5350" _type="PauseCommand" date="Mon Mar 28 11:16:41 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9300915">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2783]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5349" _type="ShellCommand" date="Mon Mar 28 11:16:41 EDT 2022" starttimestamp="1648471300703" timestamp="9300915" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5352" _type="PauseCommand" date="Mon Mar 28 11:16:49 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9308985">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8070]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="5355" _type="ShellCommand" date="Mon Mar 28 11:17:00 EDT 2022" starttimestamp="1648471300703" timestamp="9320069" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5358" _type="PauseCommand" date="Mon Mar 28 11:17:02 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9322236">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2167]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5357" _type="ShellCommand" date="Mon Mar 28 11:17:02 EDT 2022" starttimestamp="1648471300703" timestamp="9322236" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="5306" _type="Insert" date="Mon Mar 28 11:16:06 EDT 2022" docASTNodeCount="932" docActiveCodeLength="6991" docExpressionCount="671" docLength="7622" length="21" offset="5108" repeat="15" starttimestamp="1648471300703" timestamp="9266143" timestamp2="9271956">
    <text><![CDATA[
		serverGIPC.re
		]]></text>
  </DocumentChange>
  <DocumentChange __id="5342" _type="Delete" date="Mon Mar 28 11:16:17 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6978" docExpressionCount="667" docLength="7609" endLine="131" length="13" offset="5112" startLine="131" starttimestamp="1648471300703" timestamp="9276314">
    <text><![CDATA[serverGIPC.re]]></text>
  </DocumentChange>
  <Command __id="5360" _type="PauseCommand" date="Mon Mar 28 11:17:13 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9332430">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10194]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5361" _type="MoveCaretCommand" caretOffset="1569" date="Mon Mar 28 11:17:13 EDT 2022" docOffset="1569" starttimestamp="1648471300703" timestamp="9332542" />
  <Command __id="5363" _type="PauseCommand" date="Mon Mar 28 11:17:25 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9345220">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12678]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5362" _type="SelectTextCommand" caretOffset="3126" date="Mon Mar 28 11:17:25 EDT 2022" end="3144" start="3126" starttimestamp="1648471300703" timestamp="9345220" />
  <Command __id="5364" _type="SelectTextCommand" caretOffset="3126" date="Mon Mar 28 11:17:25 EDT 2022" end="3144" start="3126" starttimestamp="1648471300703" timestamp="9345220" />
  <Command __id="5365" _type="CopyCommand" date="Mon Mar 28 11:17:26 EDT 2022" starttimestamp="1648471300703" timestamp="9345635" />
  <Command __id="5359" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:17:13 EDT 2022" docASTNodeCount="830" docActiveCodeLength="5989" docExpressionCount="603" docLength="6447" projectName="A5" starttimestamp="1648471300703" timestamp="9332430">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI"), Diff(INSERT," implements ServerRemoteInterfaceGIPC"), Diff(EQUAL,"{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			"), Diff(DELETE,"final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();"), Diff(EQUAL,"¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		"), Diff(INSERT,"¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		"), Diff(EQUAL,"gipcRegistry.rebind(SERVER_NAME, "), Diff(DELETE,"this"), Diff(INSERT,"server"), Diff(EQUAL,");	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{
	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();
	
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
		
	}
	
	
	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		
	}
	
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);	
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <Command __id="5367" _type="PauseCommand" date="Mon Mar 28 11:17:27 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9347044">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1409]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5368" _type="MoveCaretCommand" caretOffset="3564" date="Mon Mar 28 11:17:27 EDT 2022" docOffset="5112" starttimestamp="1648471300703" timestamp="9347129" />
  <Command __id="5366" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:17:27 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6978" docExpressionCount="667" docLength="7609" projectName="A5" starttimestamp="1648471300703" timestamp="9347044">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemote"), Diff(DELETE,"Object"), Diff(INSERT,"Interface"), Diff(EQUAL,"GIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		"), Diff(DELETE,"//"), Diff(EQUAL,"serverGIPC = (ServerRemote"), Diff(DELETE,"Object"), Diff(INSERT,"Interface"), Diff(EQUAL,"GIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		"), Diff(DELETE,"//"), Diff(EQUAL,"GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		"), Diff(INSERT,"¶		¶		"), Diff(EQUAL,"// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="5370" _type="PauseCommand" date="Mon Mar 28 11:17:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9350885">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3756]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="5369" _type="Insert" date="Mon Mar 28 11:17:31 EDT 2022" docASTNodeCount="930" docActiveCodeLength="6987" docExpressionCount="669" docLength="7618" length="9" offset="5112" repeat="9" starttimestamp="1648471300703" timestamp="9350885" timestamp2="9353185">
    <text><![CDATA[serverGip]]></text>
  </DocumentChange>
  <Command __id="5371" _type="InsertStringCommand" date="Mon Mar 28 11:17:31 EDT 2022" starttimestamp="1648471300703" timestamp="9350891" timestamp2="9350891">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5373" _type="InsertStringCommand" date="Mon Mar 28 11:17:31 EDT 2022" starttimestamp="1648471300703" timestamp="9351030" timestamp2="9351030">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5375" _type="InsertStringCommand" date="Mon Mar 28 11:17:31 EDT 2022" starttimestamp="1648471300703" timestamp="9351148" timestamp2="9351148">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5377" _type="InsertStringCommand" date="Mon Mar 28 11:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="9351415" timestamp2="9351415">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5379" _type="InsertStringCommand" date="Mon Mar 28 11:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="9351589" timestamp2="9351589">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5381" _type="InsertStringCommand" date="Mon Mar 28 11:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="9351723" timestamp2="9351723">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5383" _type="InsertStringCommand" date="Mon Mar 28 11:17:33 EDT 2022" starttimestamp="1648471300703" timestamp="9352682" timestamp2="9352682">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="5385" _type="InsertStringCommand" date="Mon Mar 28 11:17:33 EDT 2022" starttimestamp="1648471300703" timestamp="9353057" timestamp2="9353057">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5387" _type="InsertStringCommand" date="Mon Mar 28 11:17:33 EDT 2022" starttimestamp="1648471300703" timestamp="9353190" timestamp2="9353190">
    <data><![CDATA[p]]></data>
  </Command>
  <DocumentChange __id="5388" _type="Delete" date="Mon Mar 28 11:17:34 EDT 2022" docASTNodeCount="930" docActiveCodeLength="6985" docExpressionCount="669" docLength="7616" endLine="131" length="2" offset="5119" repeat="2" startLine="131" starttimestamp="1648471300703" timestamp="9353652" timestamp2="9353774">
    <text><![CDATA[ip]]></text>
  </DocumentChange>
  <Command __id="5389" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="9353656" />
  <Command __id="5391" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="9353778" />
  <DocumentChange __id="5392" _type="Insert" date="Mon Mar 28 11:17:34 EDT 2022" docASTNodeCount="932" docActiveCodeLength="6990" docExpressionCount="671" docLength="7621" length="5" offset="5119" repeat="5" starttimestamp="1648471300703" timestamp="9353968" timestamp2="9355368">
    <text><![CDATA[IPC.g]]></text>
  </DocumentChange>
  <Command __id="5393" _type="InsertStringCommand" date="Mon Mar 28 11:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="9353973" timestamp2="9353973">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5395" _type="InsertStringCommand" date="Mon Mar 28 11:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="9354020" timestamp2="9354020">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="5397" _type="InsertStringCommand" date="Mon Mar 28 11:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="9354213" timestamp2="9354213">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="5399" _type="InsertStringCommand" date="Mon Mar 28 11:17:35 EDT 2022" starttimestamp="1648471300703" timestamp="9354647" timestamp2="9354647">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5400" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 11:17:35 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="9354650" />
  <Command __id="5403" _type="PauseCommand" date="Mon Mar 28 11:17:36 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9355752">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1102]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="5402" _type="Delete" date="Mon Mar 28 11:17:36 EDT 2022" docASTNodeCount="929" docActiveCodeLength="6989" docExpressionCount="669" docLength="7620" endLine="131" length="1" offset="5123" startLine="131" starttimestamp="1648471300703" timestamp="9355752">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <Command __id="5405" _type="PasteCommand" date="Mon Mar 28 11:17:37 EDT 2022" starttimestamp="1648471300703" timestamp="9356455" />
  <Command __id="5406" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 11:17:37 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="9356463" />
  <Command __id="5409" _type="PauseCommand" date="Mon Mar 28 11:17:38 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9357650">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1187]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="5408" _type="InsertStringCommand" date="Mon Mar 28 11:17:38 EDT 2022" starttimestamp="1648471300703" timestamp="9357650" timestamp2="9357650">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5410" _type="InsertStringCommand" date="Mon Mar 28 11:17:38 EDT 2022" starttimestamp="1648471300703" timestamp="9357681" timestamp2="9357681">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="5412" _type="InsertStringCommand" date="Mon Mar 28 11:17:39 EDT 2022" starttimestamp="1648471300703" timestamp="9358447" timestamp2="9358447">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5414" _type="PauseCommand" date="Mon Mar 28 11:17:40 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9359651">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1204]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5413" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:40 EDT 2022" starttimestamp="1648471300703" timestamp="9359651" />
  <Command __id="5415" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:40 EDT 2022" starttimestamp="1648471300703" timestamp="9360151" />
  <Command __id="5416" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:40 EDT 2022" starttimestamp="1648471300703" timestamp="9360181" />
  <Command __id="5417" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:40 EDT 2022" starttimestamp="1648471300703" timestamp="9360214" />
  <Command __id="5418" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:40 EDT 2022" starttimestamp="1648471300703" timestamp="9360242" />
  <Command __id="5419" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:40 EDT 2022" starttimestamp="1648471300703" timestamp="9360277" />
  <Command __id="5420" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360307" />
  <Command __id="5421" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360341" />
  <Command __id="5422" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360370" />
  <Command __id="5423" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360402" />
  <Command __id="5424" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360432" />
  <Command __id="5425" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360464" />
  <Command __id="5426" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360491" />
  <Command __id="5427" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360521" />
  <Command __id="5428" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360552" />
  <Command __id="5429" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360582" />
  <Command __id="5430" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360612" />
  <Command __id="5431" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360644" />
  <Command __id="5432" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360672" />
  <Command __id="5433" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360704" />
  <Command __id="5434" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360733" />
  <Command __id="5435" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 11:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="9360944" />
  <Command __id="5437" _type="InsertStringCommand" date="Mon Mar 28 11:17:42 EDT 2022" starttimestamp="1648471300703" timestamp="9361781" timestamp2="9361781">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5439" _type="PauseCommand" date="Mon Mar 28 11:17:43 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9363132">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1351]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5438" _type="MoveCaretCommand" caretOffset="3574" date="Mon Mar 28 11:17:43 EDT 2022" docOffset="5122" starttimestamp="1648471300703" timestamp="9363132" />
  <Command __id="5441" _type="InsertStringCommand" date="Mon Mar 28 11:17:44 EDT 2022" starttimestamp="1648471300703" timestamp="9363702" timestamp2="9363702">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5442" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 11:17:44 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="9363706" />
  <DocumentChange __id="5404" _type="Insert" date="Mon Mar 28 11:17:37 EDT 2022" docASTNodeCount="931" docActiveCodeLength="7010" docExpressionCount="670" docLength="7641" length="21" offset="5123" repeat="3" starttimestamp="1648471300703" timestamp="9356450" timestamp2="9358433">
    <text><![CDATA[registerClientGIPC();]]></text>
  </DocumentChange>
  <DocumentChange __id="5436" _type="Insert" date="Mon Mar 28 11:17:42 EDT 2022" docASTNodeCount="933" docActiveCodeLength="7017" docExpressionCount="672" docLength="7648" length="7" offset="5122" repeat="4" starttimestamp="1648471300703" timestamp="9361771" timestamp2="9364000">
    <text><![CDATA[.re
		]]></text>
  </DocumentChange>
  <Command __id="5446" _type="PauseCommand" date="Mon Mar 28 11:17:52 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9371316">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[7610]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="5450" _type="PauseCommand" date="Mon Mar 28 11:17:53 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9372426">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[1110]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="5449" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 11:17:53 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="9372426" />
  <Command __id="5451" _type="MoveCaretCommand" caretOffset="3574" date="Mon Mar 28 11:17:53 EDT 2022" docOffset="5122" starttimestamp="1648471300703" timestamp="9372536" />
  <Command __id="5453" _type="PauseCommand" date="Mon Mar 28 11:17:54 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9373918">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1382]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5452" _type="SelectTextCommand" caretOffset="3578" date="Mon Mar 28 11:17:54 EDT 2022" end="3600" start="3578" starttimestamp="1648471300703" timestamp="9373918" />
  <Command __id="5455" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:17:54 EDT 2022" starttimestamp="1648471300703" timestamp="9374132" />
  <DocumentChange __id="5445" _type="Delete" date="Mon Mar 28 11:17:52 EDT 2022" docASTNodeCount="931" docActiveCodeLength="7014" docExpressionCount="670" docLength="7645" endLine="131" length="3" offset="5122" repeat="3" startLine="131" starttimestamp="1648471300703" timestamp="9371316" timestamp2="9371595">
    <text><![CDATA[.re]]></text>
  </DocumentChange>
  <DocumentChange __id="5454" _type="Delete" date="Mon Mar 28 11:17:54 EDT 2022" docASTNodeCount="930" docActiveCodeLength="6992" docExpressionCount="669" docLength="7623" endLine="132" length="22" offset="5126" startLine="132" starttimestamp="1648471300703" timestamp="9374128">
    <text><![CDATA[.registerClientGIPC();]]></text>
  </DocumentChange>
  <Command __id="5457" _type="PauseCommand" date="Mon Mar 28 11:17:56 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9376029">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1897]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5458" _type="SelectTextCommand" caretOffset="3126" date="Mon Mar 28 11:17:56 EDT 2022" end="3144" start="3126" starttimestamp="1648471300703" timestamp="9376119" />
  <Command __id="5460" _type="PauseCommand" date="Mon Mar 28 11:17:58 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9377804">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1685]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5459" _type="MoveCaretCommand" caretOffset="3144" date="Mon Mar 28 11:17:58 EDT 2022" docOffset="3144" starttimestamp="1648471300703" timestamp="9377804" />
  <Command __id="5461" _type="MoveCaretCommand" caretOffset="3144" date="Mon Mar 28 11:17:58 EDT 2022" docOffset="3144" starttimestamp="1648471300703" timestamp="9377804" />
  <Command __id="5463" _type="PauseCommand" date="Mon Mar 28 11:18:05 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9385269">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7465]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5462" _type="SelectTextCommand" caretOffset="3114" date="Mon Mar 28 11:18:05 EDT 2022" end="3179" start="3114" starttimestamp="1648471300703" timestamp="9385269" />
  <Command __id="5464" _type="SelectTextCommand" caretOffset="3114" date="Mon Mar 28 11:18:05 EDT 2022" end="3179" start="3114" starttimestamp="1648471300703" timestamp="9385269" />
  <Command __id="5465" _type="CopyCommand" date="Mon Mar 28 11:18:06 EDT 2022" starttimestamp="1648471300703" timestamp="9385599" />
  <Command __id="5456" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:17:56 EDT 2022" docASTNodeCount="830" docActiveCodeLength="5989" docExpressionCount="603" docLength="6447" projectName="A5" starttimestamp="1648471300703" timestamp="9376029">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5467" _type="PauseCommand" date="Mon Mar 28 11:18:10 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9389877">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[4278]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5468" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 11:18:10 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="9390053" />
  <Command __id="5470" _type="PauseCommand" date="Mon Mar 28 11:18:27 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9407132">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[17079]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5469" _type="MoveCaretCommand" caretOffset="502" date="Mon Mar 28 11:18:27 EDT 2022" docOffset="656" starttimestamp="1648471300703" timestamp="9407132" />
  <Command __id="5472" _type="InsertStringCommand" date="Mon Mar 28 11:18:28 EDT 2022" starttimestamp="1648471300703" timestamp="9407406" timestamp2="9407406">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5474" _type="InsertStringCommand" date="Mon Mar 28 11:18:28 EDT 2022" starttimestamp="1648471300703" timestamp="9407530" timestamp2="9407530">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5476" _type="PasteCommand" date="Mon Mar 28 11:18:28 EDT 2022" starttimestamp="1648471300703" timestamp="9407937" />
  <Command __id="5466" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:18:10 EDT 2022" docASTNodeCount="83" docActiveCodeLength="629" docExpressionCount="53" docLength="663" projectName="A5" starttimestamp="1648471300703" timestamp="9389877">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="5471" _type="Insert" date="Mon Mar 28 11:18:28 EDT 2022" docASTNodeCount="83" docActiveCodeLength="635" docExpressionCount="53" docLength="669" length="6" offset="656" repeat="2" starttimestamp="1648471300703" timestamp="9407388" timestamp2="9407525">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="5475" _type="Replace" date="Mon Mar 28 11:18:28 EDT 2022" docASTNodeCount="92" docActiveCodeLength="700" docExpressionCount="56" docLength="734" endLine="22" insertionLength="66" int_docASTNodeCount="83" int_docActiveCodeLength="634" int_docExpressionCount="53" int_docLength="668" length="1" offset="661" startLine="22" starttimestamp="1648471300703" timestamp="9407875">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient)]]></insertedText>
  </DocumentChange>
  <Command __id="5478" _type="PauseCommand" date="Mon Mar 28 11:18:29 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9409003">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1066]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="5479" _type="InsertStringCommand" date="Mon Mar 28 11:18:29 EDT 2022" starttimestamp="1648471300703" timestamp="9409011" timestamp2="9409011">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5481" _type="PauseCommand" date="Mon Mar 28 11:18:32 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9411809">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2798]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5480" _type="SelectTextCommand" caretOffset="508" date="Mon Mar 28 11:18:32 EDT 2022" end="520" start="508" starttimestamp="1648471300703" timestamp="9411809" />
  <Command __id="5483" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:18:33 EDT 2022" starttimestamp="1648471300703" timestamp="9412614" />
  <Command __id="5484" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:18:34 EDT 2022" starttimestamp="1648471300703" timestamp="9413479" />
  <Command __id="5485" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:18:34 EDT 2022" starttimestamp="1648471300703" timestamp="9413574" />
  <Command __id="5486" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:18:34 EDT 2022" starttimestamp="1648471300703" timestamp="9413591" />
  <Command __id="5488" _type="PauseCommand" date="Mon Mar 28 11:18:35 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9415064">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1473]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5487" _type="MoveCaretCommand" caretOffset="561" date="Mon Mar 28 11:18:35 EDT 2022" docOffset="715" starttimestamp="1648471300703" timestamp="9415064" />
  <Command __id="5490" _type="InsertStringCommand" date="Mon Mar 28 11:18:36 EDT 2022" starttimestamp="1648471300703" timestamp="9415505" timestamp2="9415505">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5492" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:18:36 EDT 2022" starttimestamp="1648471300703" timestamp="9415788" />
  <Command __id="5494" _type="InsertStringCommand" date="Mon Mar 28 11:18:36 EDT 2022" starttimestamp="1648471300703" timestamp="9415946" timestamp2="9415946">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5496" _type="InsertStringCommand" date="Mon Mar 28 11:18:36 EDT 2022" starttimestamp="1648471300703" timestamp="9416051" timestamp2="9416051">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5498" _type="InsertStringCommand" date="Mon Mar 28 11:18:36 EDT 2022" starttimestamp="1648471300703" timestamp="9416135" timestamp2="9416135">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5500" _type="InsertStringCommand" date="Mon Mar 28 11:18:36 EDT 2022" starttimestamp="1648471300703" timestamp="9416280" timestamp2="9416280">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5502" _type="InsertStringCommand" date="Mon Mar 28 11:18:37 EDT 2022" starttimestamp="1648471300703" timestamp="9416348" timestamp2="9416348">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5504" _type="InsertStringCommand" date="Mon Mar 28 11:18:37 EDT 2022" starttimestamp="1648471300703" timestamp="9416496" timestamp2="9416496">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="5506" _type="InsertStringCommand" date="Mon Mar 28 11:18:37 EDT 2022" starttimestamp="1648471300703" timestamp="9416707" timestamp2="9416707">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5508" _type="InsertStringCommand" date="Mon Mar 28 11:18:37 EDT 2022" starttimestamp="1648471300703" timestamp="9416816" timestamp2="9416816">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5510" _type="InsertStringCommand" date="Mon Mar 28 11:18:37 EDT 2022" starttimestamp="1648471300703" timestamp="9417131" timestamp2="9417131">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="5512" _type="InsertStringCommand" date="Mon Mar 28 11:18:38 EDT 2022" starttimestamp="1648471300703" timestamp="9417319" timestamp2="9417319">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5514" _type="InsertStringCommand" date="Mon Mar 28 11:18:38 EDT 2022" starttimestamp="1648471300703" timestamp="9417458" timestamp2="9417458">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5516" _type="InsertStringCommand" date="Mon Mar 28 11:18:38 EDT 2022" starttimestamp="1648471300703" timestamp="9417534" timestamp2="9417534">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5518" _type="InsertStringCommand" date="Mon Mar 28 11:18:38 EDT 2022" starttimestamp="1648471300703" timestamp="9417589" timestamp2="9417589">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5520" _type="InsertStringCommand" date="Mon Mar 28 11:18:38 EDT 2022" starttimestamp="1648471300703" timestamp="9417705" timestamp2="9417705">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5522" _type="InsertStringCommand" date="Mon Mar 28 11:18:38 EDT 2022" starttimestamp="1648471300703" timestamp="9418234" timestamp2="9418234">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5524" _type="InsertStringCommand" date="Mon Mar 28 11:18:39 EDT 2022" starttimestamp="1648471300703" timestamp="9418441" timestamp2="9418441">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5526" _type="InsertStringCommand" date="Mon Mar 28 11:18:39 EDT 2022" starttimestamp="1648471300703" timestamp="9418618" timestamp2="9418618">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5528" _type="InsertStringCommand" date="Mon Mar 28 11:18:39 EDT 2022" starttimestamp="1648471300703" timestamp="9418837" timestamp2="9418837">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5530" _type="InsertStringCommand" date="Mon Mar 28 11:18:39 EDT 2022" starttimestamp="1648471300703" timestamp="9418921" timestamp2="9418921">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5532" _type="InsertStringCommand" date="Mon Mar 28 11:18:39 EDT 2022" starttimestamp="1648471300703" timestamp="9419060" timestamp2="9419060">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5534" _type="InsertStringCommand" date="Mon Mar 28 11:18:39 EDT 2022" starttimestamp="1648471300703" timestamp="9419130" timestamp2="9419130">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5536" _type="InsertStringCommand" date="Mon Mar 28 11:18:39 EDT 2022" starttimestamp="1648471300703" timestamp="9419202" timestamp2="9419202">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5538" _type="InsertStringCommand" date="Mon Mar 28 11:18:39 EDT 2022" starttimestamp="1648471300703" timestamp="9419289" timestamp2="9419289">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5539" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:18:40 EDT 2022" starttimestamp="1648471300703" timestamp="9419802" />
  <Command __id="5540" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:18:40 EDT 2022" starttimestamp="1648471300703" timestamp="9419901" />
  <Command __id="5541" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:18:40 EDT 2022" starttimestamp="1648471300703" timestamp="9419919" />
  <Command __id="5543" _type="PauseCommand" date="Mon Mar 28 11:18:46 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9425385">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5466]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5542" _type="ShellCommand" date="Mon Mar 28 11:18:46 EDT 2022" starttimestamp="1648471300703" timestamp="9425385" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5544" _type="ShellCommand" date="Mon Mar 28 11:18:46 EDT 2022" starttimestamp="1648471300703" timestamp="9425474" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5548" _type="PauseCommand" date="Mon Mar 28 11:18:47 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9426503">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1016]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5547" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:18:47 EDT 2022" starttimestamp="1648471300703" timestamp="9426503" />
  <Command __id="5549" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:18:47 EDT 2022" starttimestamp="1648471300703" timestamp="9426606" />
  <Command __id="5550" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:18:47 EDT 2022" starttimestamp="1648471300703" timestamp="9426639" />
  <DocumentChange __id="5477" _type="Insert" date="Mon Mar 28 11:18:29 EDT 2022" docASTNodeCount="91" docActiveCodeLength="701" docExpressionCount="56" docLength="735" length="1" offset="727" starttimestamp="1648471300703" timestamp="9409003">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="5482" _type="Delete" date="Mon Mar 28 11:18:33 EDT 2022" docASTNodeCount="89" docActiveCodeLength="689" docExpressionCount="56" docLength="723" endLine="22" length="12" offset="662" startLine="22" starttimestamp="1648471300703" timestamp="9412608">
    <text><![CDATA[public void ]]></text>
  </DocumentChange>
  <DocumentChange __id="5489" _type="Insert" date="Mon Mar 28 11:18:36 EDT 2022" docASTNodeCount="90" docActiveCodeLength="690" docExpressionCount="56" docLength="724" length="1" offset="715" starttimestamp="1648471300703" timestamp="9415501">
    <text><![CDATA[t]]></text>
  </DocumentChange>
  <DocumentChange __id="5491" _type="Delete" date="Mon Mar 28 11:18:36 EDT 2022" docASTNodeCount="89" docActiveCodeLength="689" docExpressionCount="56" docLength="723" endLine="22" length="1" offset="715" startLine="22" starttimestamp="1648471300703" timestamp="9415786">
    <text><![CDATA[t]]></text>
  </DocumentChange>
  <DocumentChange __id="5493" _type="Insert" date="Mon Mar 28 11:18:36 EDT 2022" docASTNodeCount="90" docActiveCodeLength="712" docExpressionCount="57" docLength="746" length="23" offset="715" repeat="23" starttimestamp="1648471300703" timestamp="9415941" timestamp2="9419285">
    <text><![CDATA[ throws RemoteException]]></text>
  </DocumentChange>
  <DocumentChange __id="5545" _type="Insert" date="Mon Mar 28 11:18:46 EDT 2022" docASTNodeCount="91" docActiveCodeLength="717" docExpressionCount="57" docLength="751" length="5" offset="662" repeat="2" starttimestamp="1648471300703" timestamp="9425487" timestamp2="9425487">
    <text><![CDATA[void ]]></text>
  </DocumentChange>
  <Command __id="5552" _type="PauseCommand" date="Mon Mar 28 11:18:48 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9427991">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1352]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5553" _type="MoveCaretCommand" caretOffset="3578" date="Mon Mar 28 11:18:48 EDT 2022" docOffset="5126" starttimestamp="1648471300703" timestamp="9428104" />
  <Command __id="5551" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:18:48 EDT 2022" docASTNodeCount="930" docActiveCodeLength="6992" docExpressionCount="669" docLength="7623" projectName="A5" starttimestamp="1648471300703" timestamp="9427991">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		"), Diff(INSERT,"serverGIPC¶		"), Diff(EQUAL,"¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		serverGIPC
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="5555" _type="PauseCommand" date="Mon Mar 28 11:18:59 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9438484">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10380]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5556" _type="SelectTextCommand" caretOffset="3114" date="Mon Mar 28 11:18:59 EDT 2022" end="3179" start="3114" starttimestamp="1648471300703" timestamp="9438565" />
  <Command __id="5558" _type="PauseCommand" date="Mon Mar 28 11:19:00 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9439916">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1351]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5557" _type="MoveCaretCommand" caretOffset="3108" date="Mon Mar 28 11:19:00 EDT 2022" docOffset="3108" starttimestamp="1648471300703" timestamp="9439916" />
  <Command __id="5559" _type="MoveCaretCommand" caretOffset="3108" date="Mon Mar 28 11:19:00 EDT 2022" docOffset="3108" starttimestamp="1648471300703" timestamp="9439916" />
  <Command __id="5561" _type="InsertStringCommand" date="Mon Mar 28 11:19:00 EDT 2022" starttimestamp="1648471300703" timestamp="9440189" timestamp2="9440189">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5562" _type="InsertStringCommand" date="Mon Mar 28 11:19:00 EDT 2022" starttimestamp="1648471300703" timestamp="9440189" timestamp2="9440189">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5564" _type="InsertStringCommand" date="Mon Mar 28 11:19:01 EDT 2022" starttimestamp="1648471300703" timestamp="9440458" timestamp2="9440458">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5565" _type="InsertStringCommand" date="Mon Mar 28 11:19:01 EDT 2022" starttimestamp="1648471300703" timestamp="9440458" timestamp2="9440458">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5566" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Mar 28 11:19:01 EDT 2022" starttimestamp="1648471300703" timestamp="9441001" />
  <Command __id="5567" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Mar 28 11:19:01 EDT 2022" starttimestamp="1648471300703" timestamp="9441001" />
  <Command __id="5554" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:18:59 EDT 2022" docASTNodeCount="830" docActiveCodeLength="5989" docExpressionCount="603" docLength="6447" projectName="A5" starttimestamp="1648471300703" timestamp="9438484">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="5560" _type="Insert" date="Mon Mar 28 11:19:00 EDT 2022" docASTNodeCount="830" docActiveCodeLength="5995" docExpressionCount="603" docLength="6453" length="6" offset="3108" repeat="2" starttimestamp="1648471300703" timestamp="9440168" timestamp2="9440453">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <Command __id="5569" _type="PauseCommand" date="Mon Mar 28 11:19:04 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9443452">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2451]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="5568" _type="Insert" date="Mon Mar 28 11:19:04 EDT 2022" docASTNodeCount="832" docActiveCodeLength="6000" docExpressionCount="605" docLength="6458" length="5" offset="3117" repeat="5" starttimestamp="1648471300703" timestamp="9443452" timestamp2="9444407">
    <text><![CDATA[@Ovre]]></text>
  </DocumentChange>
  <Command __id="5570" _type="InsertStringCommand" date="Mon Mar 28 11:19:04 EDT 2022" starttimestamp="1648471300703" timestamp="9443458" timestamp2="9443458">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="5571" _type="InsertStringCommand" date="Mon Mar 28 11:19:04 EDT 2022" starttimestamp="1648471300703" timestamp="9443458" timestamp2="9443458">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="5573" _type="InsertStringCommand" date="Mon Mar 28 11:19:04 EDT 2022" starttimestamp="1648471300703" timestamp="9443908" timestamp2="9443908">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="5574" _type="InsertStringCommand" date="Mon Mar 28 11:19:04 EDT 2022" starttimestamp="1648471300703" timestamp="9443908" timestamp2="9443908">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="5576" _type="InsertStringCommand" date="Mon Mar 28 11:19:04 EDT 2022" starttimestamp="1648471300703" timestamp="9444122" timestamp2="9444122">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5577" _type="InsertStringCommand" date="Mon Mar 28 11:19:04 EDT 2022" starttimestamp="1648471300703" timestamp="9444122" timestamp2="9444122">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5579" _type="InsertStringCommand" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9444395" timestamp2="9444395">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5580" _type="InsertStringCommand" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9444395" timestamp2="9444395">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5582" _type="InsertStringCommand" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9444412" timestamp2="9444412">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5583" _type="InsertStringCommand" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9444412" timestamp2="9444412">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="5584" _type="Delete" date="Mon Mar 28 11:19:05 EDT 2022" docASTNodeCount="832" docActiveCodeLength="5998" docExpressionCount="605" docLength="6456" endLine="83" length="2" offset="3120" repeat="2" startLine="83" starttimestamp="1648471300703" timestamp="9445031" timestamp2="9445176">
    <text><![CDATA[re]]></text>
  </DocumentChange>
  <Command __id="5585" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9445035" />
  <Command __id="5586" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9445035" />
  <Command __id="5588" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9445178" />
  <Command __id="5589" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9445179" />
  <Command __id="5591" _type="InsertStringCommand" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9445214" timestamp2="9445214">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5592" _type="InsertStringCommand" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9445214" timestamp2="9445214">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5594" _type="InsertStringCommand" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9445287" timestamp2="9445287">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5595" _type="InsertStringCommand" date="Mon Mar 28 11:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="9445287" timestamp2="9445287">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5597" _type="InsertStringCommand" date="Mon Mar 28 11:19:06 EDT 2022" starttimestamp="1648471300703" timestamp="9445546" timestamp2="9445546">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5598" _type="InsertStringCommand" date="Mon Mar 28 11:19:06 EDT 2022" starttimestamp="1648471300703" timestamp="9445546" timestamp2="9445546">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5600" _type="InsertStringCommand" date="Mon Mar 28 11:19:06 EDT 2022" starttimestamp="1648471300703" timestamp="9445676" timestamp2="9445676">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5601" _type="InsertStringCommand" date="Mon Mar 28 11:19:06 EDT 2022" starttimestamp="1648471300703" timestamp="9445676" timestamp2="9445676">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5603" _type="InsertStringCommand" date="Mon Mar 28 11:19:06 EDT 2022" starttimestamp="1648471300703" timestamp="9445812" timestamp2="9445812">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5604" _type="InsertStringCommand" date="Mon Mar 28 11:19:06 EDT 2022" starttimestamp="1648471300703" timestamp="9445812" timestamp2="9445812">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5606" _type="InsertStringCommand" date="Mon Mar 28 11:19:06 EDT 2022" starttimestamp="1648471300703" timestamp="9446010" timestamp2="9446010">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5607" _type="InsertStringCommand" date="Mon Mar 28 11:19:06 EDT 2022" starttimestamp="1648471300703" timestamp="9446010" timestamp2="9446010">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5609" _type="PauseCommand" date="Mon Mar 28 11:19:08 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9447389">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1379]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5608" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:19:08 EDT 2022" starttimestamp="1648471300703" timestamp="9447389" />
  <Command __id="5610" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:19:08 EDT 2022" starttimestamp="1648471300703" timestamp="9447483" />
  <Command __id="5611" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:19:08 EDT 2022" starttimestamp="1648471300703" timestamp="9447509" />
  <DocumentChange __id="5590" _type="Insert" date="Mon Mar 28 11:19:05 EDT 2022" docASTNodeCount="832" docActiveCodeLength="6004" docExpressionCount="605" docLength="6462" length="6" offset="3120" repeat="6" starttimestamp="1648471300703" timestamp="9445208" timestamp2="9446005">
    <text><![CDATA[erride]]></text>
  </DocumentChange>
  <Command __id="5613" _type="PauseCommand" date="Mon Mar 28 11:19:19 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9458837">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11328]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5614" _type="SelectTextCommand" caretOffset="512" date="Mon Mar 28 11:19:19 EDT 2022" end="512" start="508" starttimestamp="1648471300703" timestamp="9458929" />
  <Command __id="5616" _type="PauseCommand" date="Mon Mar 28 11:19:22 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9462226">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3297]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5615" _type="SelectTextCommand" caretOffset="508" date="Mon Mar 28 11:19:22 EDT 2022" end="590" start="508" starttimestamp="1648471300703" timestamp="9462226" />
  <Command __id="5618" _type="CutCommand" date="Mon Mar 28 11:19:23 EDT 2022" starttimestamp="1648471300703" timestamp="9462590" />
  <Command __id="5612" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:19:19 EDT 2022" docASTNodeCount="91" docActiveCodeLength="717" docExpressionCount="57" docLength="751" projectName="A5" starttimestamp="1648471300703" timestamp="9458837">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;"), Diff(INSERT,"¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5617" _type="Delete" date="Mon Mar 28 11:19:23 EDT 2022" docASTNodeCount="83" docActiveCodeLength="635" docExpressionCount="53" docLength="669" endLine="22" length="82" offset="662" startLine="22" starttimestamp="1648471300703" timestamp="9462577">
    <text><![CDATA[void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;]]></text>
  </DocumentChange>
  <Command __id="5620" _type="PauseCommand" date="Mon Mar 28 11:19:26 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9465962">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[3372]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5621" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 11:19:26 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="9466167" />
  <Command __id="5623" _type="PauseCommand" date="Mon Mar 28 11:19:30 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9469632">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3465]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5639" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:19:34 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="9473466" type="Debug" />
  <Command __id="5641" _type="ProgramExecutionEvent" className="/A5/src/registry/TrickOrTreatRegistry.java" date="Mon Mar 28 11:19:34 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="9473466" type="Run" />
  <Command __id="5642" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:19:34 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="9473466" type="Debug" />
  <Command __id="5643" _type="ProgramExecutionEvent" className="/A5/src/registry/TrickOrTreatRegistry.java" date="Mon Mar 28 11:19:34 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="9473466" type="Run" />
  <Command __id="5644" _type="ShellCommand" date="Mon Mar 28 11:19:34 EDT 2022" starttimestamp="1648471300703" timestamp="9473486" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5619" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:19:26 EDT 2022" docASTNodeCount="115" docActiveCodeLength="848" docExpressionCount="68" docLength="848" projectName="A5" starttimestamp="1648471300703" timestamp="9465962">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ServerRemoteInterfaceGIPC  extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5624" _type="Insert" date="Mon Mar 28 11:19:30 EDT 2022" docASTNodeCount="115" docActiveCodeLength="854" docExpressionCount="68" docLength="854" length="6" offset="414" repeat="2" starttimestamp="1648471300703" timestamp="9469878" timestamp2="9469996">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="5628" _type="Replace" date="Mon Mar 28 11:19:31 EDT 2022" docASTNodeCount="123" docActiveCodeLength="936" docExpressionCount="72" docLength="936" endLine="13" insertionLength="83" int_docASTNodeCount="115" int_docActiveCodeLength="853" int_docExpressionCount="68" int_docLength="853" length="1" offset="419" startLine="13" starttimestamp="1648471300703" timestamp="9470306">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5629" _type="Delete" date="Mon Mar 28 11:19:31 EDT 2022" docASTNodeCount="123" docActiveCodeLength="932" docExpressionCount="72" docLength="932" endLine="5" length="4" offset="83" startLine="3" starttimestamp="1648471300703" timestamp="9470340">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="5630" _type="Insert" date="Mon Mar 28 11:19:31 EDT 2022" docASTNodeCount="127" docActiveCodeLength="978" docExpressionCount="75" docLength="978" length="46" offset="83" repeat="3" starttimestamp="1648471300703" timestamp="9470341" timestamp2="9470342">
    <text><![CDATA[

import client.ClientRemoteInterfaceGIPC;
]]></text>
  </DocumentChange>
  <Command __id="5646" _type="PauseCommand" date="Mon Mar 28 11:19:37 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9476375">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2889]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5647" _type="MoveCaretCommand" caretOffset="508" date="Mon Mar 28 11:19:37 EDT 2022" docOffset="662" starttimestamp="1648471300703" timestamp="9476461" />
  <Command __id="5645" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:19:37 EDT 2022" docASTNodeCount="83" docActiveCodeLength="635" docExpressionCount="53" docLength="669" projectName="A5" starttimestamp="1648471300703" timestamp="9476375">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶	¶	"), Diff(DELETE,"void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="5649" _type="PauseCommand" date="Mon Mar 28 11:19:38 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9477997">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1536]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5650" _type="MoveCaretCommand" caretOffset="3578" date="Mon Mar 28 11:19:38 EDT 2022" docOffset="5126" starttimestamp="1648471300703" timestamp="9478078" />
  <Command __id="5648" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:19:38 EDT 2022" docASTNodeCount="930" docActiveCodeLength="6992" docExpressionCount="669" docLength="7623" projectName="A5" starttimestamp="1648471300703" timestamp="9477997">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		serverGIPC¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5652" _type="PauseCommand" date="Mon Mar 28 11:19:40 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9480079">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2001]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5653" _type="MoveCaretCommand" caretOffset="3126" date="Mon Mar 28 11:19:40 EDT 2022" docOffset="3126" starttimestamp="1648471300703" timestamp="9480167" />
  <Command __id="5655" _type="PauseCommand" date="Mon Mar 28 11:19:54 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9494289">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14122]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5654" _type="MoveCaretCommand" caretOffset="3111" date="Mon Mar 28 11:19:54 EDT 2022" docOffset="3111" starttimestamp="1648471300703" timestamp="9494289" />
  <Command __id="5656" _type="MoveCaretCommand" caretOffset="3111" date="Mon Mar 28 11:19:54 EDT 2022" docOffset="3111" starttimestamp="1648471300703" timestamp="9494289" />
  <Command __id="5651" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:19:40 EDT 2022" docASTNodeCount="832" docActiveCodeLength="6004" docExpressionCount="605" docLength="6462" projectName="A5" starttimestamp="1648471300703" timestamp="9480079">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	"), Diff(INSERT,"¶	@Override¶	"), Diff(EQUAL,"public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{
	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();
	
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
		
	}
	
	
	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		
	}
	
	
	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);	
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <Command __id="5658" _type="PauseCommand" date="Mon Mar 28 11:19:58 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9497523">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3234]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5659" _type="MoveCaretCommand" caretOffset="3578" date="Mon Mar 28 11:19:58 EDT 2022" docOffset="5126" starttimestamp="1648471300703" timestamp="9497618" />
  <Command __id="5661" _type="PauseCommand" date="Mon Mar 28 11:19:59 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9498999">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1381]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5660" _type="MoveCaretCommand" caretOffset="3574" date="Mon Mar 28 11:19:59 EDT 2022" docOffset="5122" starttimestamp="1648471300703" timestamp="9498999" />
  <Command __id="5663" _type="InsertStringCommand" date="Mon Mar 28 11:20:00 EDT 2022" starttimestamp="1648471300703" timestamp="9499462" timestamp2="9499462">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5664" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 11:20:00 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="9499465" />
  <Command __id="5669" _type="PauseCommand" date="Mon Mar 28 11:20:03 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9502444">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2979]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="5668" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 11:20:03 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="9502444" />
  <Command __id="5671" _type="InsertStringCommand" date="Mon Mar 28 11:20:03 EDT 2022" starttimestamp="1648471300703" timestamp="9502497" timestamp2="9502497">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5672" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 11:20:04 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="9503357" />
  <Command __id="5657" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:19:58 EDT 2022" docASTNodeCount="930" docActiveCodeLength="6992" docExpressionCount="669" docLength="7623" projectName="A5" starttimestamp="1648471300703" timestamp="9497523">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		serverGIPC¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="5662" _type="Insert" date="Mon Mar 28 11:20:00 EDT 2022" docASTNodeCount="932" docActiveCodeLength="6996" docExpressionCount="671" docLength="7627" length="4" offset="5122" repeat="4" starttimestamp="1648471300703" timestamp="9499456" timestamp2="9500186">
    <text><![CDATA[.reg]]></text>
  </DocumentChange>
  <DocumentChange __id="5670" _type="Replace" date="Mon Mar 28 11:20:03 EDT 2022" docASTNodeCount="932" docActiveCodeLength="7021" docExpressionCount="671" docLength="7652" endLine="131" insertionLength="28" int_docASTNodeCount="929" int_docActiveCodeLength="6993" int_docExpressionCount="669" int_docLength="7624" length="3" offset="5123" startLine="131" starttimestamp="1648471300703" timestamp="9502447">
    <deletedText><![CDATA[reg]]></deletedText>
    <insertedText><![CDATA[registerClientGIPC(aClient);]]></insertedText>
  </DocumentChange>
  <Command __id="5674" _type="PauseCommand" date="Mon Mar 28 11:20:14 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9514157">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[10800]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="5673" _type="Replace" date="Mon Mar 28 11:20:14 EDT 2022" docASTNodeCount="932" docActiveCodeLength="7015" docExpressionCount="671" docLength="7646" endLine="131" insertionLength="1" int_docASTNodeCount="931" int_docActiveCodeLength="7014" int_docExpressionCount="670" int_docLength="7645" length="7" offset="5142" startLine="131" starttimestamp="1648471300703" timestamp="9514157">
    <deletedText><![CDATA[aClient]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <Command __id="5675" _type="InsertStringCommand" date="Mon Mar 28 11:20:14 EDT 2022" starttimestamp="1648471300703" timestamp="9514176" timestamp2="9514176">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5677" _type="InsertStringCommand" date="Mon Mar 28 11:20:14 EDT 2022" starttimestamp="1648471300703" timestamp="9514255" timestamp2="9514255">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5679" _type="InsertStringCommand" date="Mon Mar 28 11:20:15 EDT 2022" starttimestamp="1648471300703" timestamp="9514309" timestamp2="9514309">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5681" _type="InsertStringCommand" date="Mon Mar 28 11:20:15 EDT 2022" starttimestamp="1648471300703" timestamp="9514432" timestamp2="9514432">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5683" _type="PauseCommand" date="Mon Mar 28 11:20:16 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9515553">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1121]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5682" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:20:16 EDT 2022" starttimestamp="1648471300703" timestamp="9515553" />
  <Command __id="5684" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:20:16 EDT 2022" starttimestamp="1648471300703" timestamp="9515660" />
  <Command __id="5685" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:20:16 EDT 2022" starttimestamp="1648471300703" timestamp="9515689" />
  <DocumentChange __id="5676" _type="Insert" date="Mon Mar 28 11:20:14 EDT 2022" docASTNodeCount="932" docActiveCodeLength="7018" docExpressionCount="671" docLength="7649" length="3" offset="5143" repeat="3" starttimestamp="1648471300703" timestamp="9514252" timestamp2="9514430">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <Command __id="5687" _type="PauseCommand" date="Mon Mar 28 11:20:35 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9535163">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[19474]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5688" _type="MoveCaretCommand" caretOffset="359" date="Mon Mar 28 11:20:35 EDT 2022" docOffset="544" starttimestamp="1648471300703" timestamp="9535249" />
  <Command __id="5686" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:20:35 EDT 2022" docASTNodeCount="127" docActiveCodeLength="978" docExpressionCount="75" docLength="978" projectName="A5" starttimestamp="1648471300703" timestamp="9535163">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶"), Diff(INSERT,"import client.ClientRemoteInterfaceGIPC;¶"), Diff(EQUAL,"import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	"), Diff(INSERT,"¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	"), Diff(EQUAL,"public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ServerRemoteInterfaceGIPC  extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="5690" _type="PauseCommand" date="Mon Mar 28 11:20:40 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9539746">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4497]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5691" _type="MoveCaretCommand" caretOffset="508" date="Mon Mar 28 11:20:40 EDT 2022" docOffset="662" starttimestamp="1648471300703" timestamp="9539828" />
  <Command __id="5693" _type="PauseCommand" date="Mon Mar 28 11:20:43 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9542761">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2933]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5692" _type="ShellCommand" date="Mon Mar 28 11:20:43 EDT 2022" starttimestamp="1648471300703" timestamp="9542761" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5695" _type="PauseCommand" date="Mon Mar 28 11:20:45 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9544444">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1683]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5694" _type="ShellCommand" date="Mon Mar 28 11:20:45 EDT 2022" starttimestamp="1648471300703" timestamp="9544444" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5697" _type="MoveCaretCommand" caretOffset="359" date="Mon Mar 28 11:20:45 EDT 2022" docOffset="544" starttimestamp="1648471300703" timestamp="9544663" />
  <Command __id="5689" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:20:40 EDT 2022" docASTNodeCount="83" docActiveCodeLength="635" docExpressionCount="53" docLength="669" projectName="A5" starttimestamp="1648471300703" timestamp="9539746">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5696" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:20:45 EDT 2022" docASTNodeCount="127" docActiveCodeLength="978" docExpressionCount="75" docLength="978" projectName="A5" starttimestamp="1648471300703" timestamp="9544528">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5699" _type="PauseCommand" date="Mon Mar 28 11:20:46 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9545787">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1124]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5700" _type="MoveCaretCommand" caretOffset="3598" date="Mon Mar 28 11:20:46 EDT 2022" docOffset="5146" starttimestamp="1648471300703" timestamp="9545877" />
  <Command __id="5702" _type="PauseCommand" date="Mon Mar 28 11:21:22 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="9581908">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[36031]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5701" _type="SelectTextCommand" caretOffset="3564" date="Mon Mar 28 11:21:22 EDT 2022" end="3600" start="3564" starttimestamp="1648471300703" timestamp="9581908" />
  <Command __id="5698" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:20:46 EDT 2022" docASTNodeCount="932" docActiveCodeLength="7018" docExpressionCount="671" docLength="7649" projectName="A5" starttimestamp="1648471300703" timestamp="9545787">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		serverGIPC"), Diff(INSERT,".registerClientGIPC(this);"), Diff(EQUAL,"¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		serverGIPC.registerClientGIPC(this);
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="5704" _type="PauseCommand" date="Mon Mar 28 11:21:24 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9584038">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2130]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="5705" _type="CutCommand" date="Mon Mar 28 11:21:24 EDT 2022" starttimestamp="1648471300703" timestamp="9584054" />
  <Command __id="5707" _type="PauseCommand" date="Mon Mar 28 11:21:31 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9590981">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[6927]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5706" _type="MoveCaretCommand" caretOffset="4605" date="Mon Mar 28 11:21:31 EDT 2022" docOffset="6153" starttimestamp="1648471300703" timestamp="9590981" />
  <Command __id="5709" _type="InsertStringCommand" date="Mon Mar 28 11:21:32 EDT 2022" starttimestamp="1648471300703" timestamp="9591383" timestamp2="9591383">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5711" _type="InsertStringCommand" date="Mon Mar 28 11:21:32 EDT 2022" starttimestamp="1648471300703" timestamp="9591514" timestamp2="9591514">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5713" _type="PasteCommand" date="Mon Mar 28 11:21:32 EDT 2022" starttimestamp="1648471300703" timestamp="9591762" />
  <Command __id="5715" _type="PauseCommand" date="Mon Mar 28 11:21:45 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9605089">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[13327]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5714" _type="MoveCaretCommand" caretOffset="4575" date="Mon Mar 28 11:21:45 EDT 2022" docOffset="6123" starttimestamp="1648471300703" timestamp="9605089" />
  <Command __id="5717" _type="PauseCommand" date="Mon Mar 28 11:21:52 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9611682">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6593]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5716" _type="MoveCaretCommand" caretOffset="261" date="Mon Mar 28 11:21:52 EDT 2022" docOffset="1809" starttimestamp="1648471300703" timestamp="9611682" />
  <DocumentChange __id="5703" _type="Delete" date="Mon Mar 28 11:21:24 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6982" docExpressionCount="667" docLength="7613" endLine="131" length="36" offset="5112" startLine="131" starttimestamp="1648471300703" timestamp="9584038">
    <text><![CDATA[serverGIPC.registerClientGIPC(this);]]></text>
  </DocumentChange>
  <DocumentChange __id="5708" _type="Insert" date="Mon Mar 28 11:21:32 EDT 2022" docASTNodeCount="927" docActiveCodeLength="6990" docExpressionCount="667" docLength="7621" length="8" offset="6153" repeat="2" starttimestamp="1648471300703" timestamp="9591370" timestamp2="9591508">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="5712" _type="Replace" date="Mon Mar 28 11:21:32 EDT 2022" docASTNodeCount="932" docActiveCodeLength="7026" docExpressionCount="671" docLength="7657" endLine="171" insertionLength="38" int_docASTNodeCount="927" int_docActiveCodeLength="6988" int_docExpressionCount="667" int_docLength="7619" length="2" offset="6159" startLine="171" starttimestamp="1648471300703" timestamp="9591757">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		serverGIPC.registerClientGIPC(this);]]></insertedText>
  </DocumentChange>
  <Command __id="5719" _type="PauseCommand" date="Mon Mar 28 11:21:57 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9616480">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4798]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="5720" _type="InsertStringCommand" date="Mon Mar 28 11:21:57 EDT 2022" starttimestamp="1648471300703" timestamp="9616489" timestamp2="9616489">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5723" _type="PauseCommand" date="Mon Mar 28 11:21:58 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9617507">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1018]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="5722" _type="InsertStringCommand" date="Mon Mar 28 11:21:58 EDT 2022" starttimestamp="1648471300703" timestamp="9617507" timestamp2="9617507">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5725" _type="InsertStringCommand" date="Mon Mar 28 11:21:58 EDT 2022" starttimestamp="1648471300703" timestamp="9617698" timestamp2="9617698">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5727" _type="InsertStringCommand" date="Mon Mar 28 11:21:58 EDT 2022" starttimestamp="1648471300703" timestamp="9617853" timestamp2="9617853">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5729" _type="InsertStringCommand" date="Mon Mar 28 11:21:59 EDT 2022" starttimestamp="1648471300703" timestamp="9618326" timestamp2="9618326">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5731" _type="InsertStringCommand" date="Mon Mar 28 11:21:59 EDT 2022" starttimestamp="1648471300703" timestamp="9618635" timestamp2="9618635">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5733" _type="InsertStringCommand" date="Mon Mar 28 11:21:59 EDT 2022" starttimestamp="1648471300703" timestamp="9618845" timestamp2="9618845">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5735" _type="InsertStringCommand" date="Mon Mar 28 11:21:59 EDT 2022" starttimestamp="1648471300703" timestamp="9618960" timestamp2="9618960">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5737" _type="InsertStringCommand" date="Mon Mar 28 11:21:59 EDT 2022" starttimestamp="1648471300703" timestamp="9619056" timestamp2="9619056">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5739" _type="InsertStringCommand" date="Mon Mar 28 11:21:59 EDT 2022" starttimestamp="1648471300703" timestamp="9619173" timestamp2="9619173">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5741" _type="InsertStringCommand" date="Mon Mar 28 11:22:00 EDT 2022" starttimestamp="1648471300703" timestamp="9619403" timestamp2="9619403">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5743" _type="InsertStringCommand" date="Mon Mar 28 11:22:00 EDT 2022" starttimestamp="1648471300703" timestamp="9619661" timestamp2="9619661">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5745" _type="InsertStringCommand" date="Mon Mar 28 11:22:01 EDT 2022" starttimestamp="1648471300703" timestamp="9620532" timestamp2="9620532">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="5747" _type="InsertStringCommand" date="Mon Mar 28 11:22:01 EDT 2022" starttimestamp="1648471300703" timestamp="9620631" timestamp2="9620631">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5749" _type="InsertStringCommand" date="Mon Mar 28 11:22:01 EDT 2022" starttimestamp="1648471300703" timestamp="9620711" timestamp2="9620711">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5751" _type="InsertStringCommand" date="Mon Mar 28 11:22:01 EDT 2022" starttimestamp="1648471300703" timestamp="9620822" timestamp2="9620822">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5753" _type="InsertStringCommand" date="Mon Mar 28 11:22:01 EDT 2022" starttimestamp="1648471300703" timestamp="9620905" timestamp2="9620905">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5755" _type="InsertStringCommand" date="Mon Mar 28 11:22:01 EDT 2022" starttimestamp="1648471300703" timestamp="9621014" timestamp2="9621014">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5757" _type="InsertStringCommand" date="Mon Mar 28 11:22:02 EDT 2022" starttimestamp="1648471300703" timestamp="9621311" timestamp2="9621311">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="5759" _type="InsertStringCommand" date="Mon Mar 28 11:22:02 EDT 2022" starttimestamp="1648471300703" timestamp="9621477" timestamp2="9621477">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5761" _type="InsertStringCommand" date="Mon Mar 28 11:22:02 EDT 2022" starttimestamp="1648471300703" timestamp="9621628" timestamp2="9621628">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5763" _type="InsertStringCommand" date="Mon Mar 28 11:22:02 EDT 2022" starttimestamp="1648471300703" timestamp="9621706" timestamp2="9621706">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5765" _type="InsertStringCommand" date="Mon Mar 28 11:22:02 EDT 2022" starttimestamp="1648471300703" timestamp="9621766" timestamp2="9621766">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5767" _type="InsertStringCommand" date="Mon Mar 28 11:22:02 EDT 2022" starttimestamp="1648471300703" timestamp="9621899" timestamp2="9621899">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5769" _type="InsertStringCommand" date="Mon Mar 28 11:22:03 EDT 2022" starttimestamp="1648471300703" timestamp="9622526" timestamp2="9622526">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5771" _type="InsertStringCommand" date="Mon Mar 28 11:22:03 EDT 2022" starttimestamp="1648471300703" timestamp="9622724" timestamp2="9622724">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5773" _type="InsertStringCommand" date="Mon Mar 28 11:22:03 EDT 2022" starttimestamp="1648471300703" timestamp="9622802" timestamp2="9622802">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5775" _type="InsertStringCommand" date="Mon Mar 28 11:22:03 EDT 2022" starttimestamp="1648471300703" timestamp="9622983" timestamp2="9622983">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5777" _type="InsertStringCommand" date="Mon Mar 28 11:22:03 EDT 2022" starttimestamp="1648471300703" timestamp="9623032" timestamp2="9623032">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5779" _type="InsertStringCommand" date="Mon Mar 28 11:22:03 EDT 2022" starttimestamp="1648471300703" timestamp="9623247" timestamp2="9623247">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5781" _type="InsertStringCommand" date="Mon Mar 28 11:22:04 EDT 2022" starttimestamp="1648471300703" timestamp="9623315" timestamp2="9623315">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5783" _type="InsertStringCommand" date="Mon Mar 28 11:22:04 EDT 2022" starttimestamp="1648471300703" timestamp="9623523" timestamp2="9623523">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5785" _type="InsertStringCommand" date="Mon Mar 28 11:22:04 EDT 2022" starttimestamp="1648471300703" timestamp="9623696" timestamp2="9623696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5788" _type="PauseCommand" date="Mon Mar 28 11:22:05 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9624889">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1193]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="5787" _type="InsertStringCommand" date="Mon Mar 28 11:22:05 EDT 2022" starttimestamp="1648471300703" timestamp="9624889" timestamp2="9624889">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="5790" _type="InsertStringCommand" date="Mon Mar 28 11:22:05 EDT 2022" starttimestamp="1648471300703" timestamp="9625195" timestamp2="9625195">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5792" _type="InsertStringCommand" date="Mon Mar 28 11:22:05 EDT 2022" starttimestamp="1648471300703" timestamp="9625268" timestamp2="9625268">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="5794" _type="InsertStringCommand" date="Mon Mar 28 11:22:06 EDT 2022" starttimestamp="1648471300703" timestamp="9625369" timestamp2="9625369">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="5796" _type="PauseCommand" date="Mon Mar 28 11:22:07 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9626828">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1459]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5795" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:22:07 EDT 2022" starttimestamp="1648471300703" timestamp="9626828" />
  <Command __id="5797" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:22:07 EDT 2022" starttimestamp="1648471300703" timestamp="9626926" />
  <Command __id="5798" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:22:07 EDT 2022" starttimestamp="1648471300703" timestamp="9626957" />
  <Command __id="5800" _type="PauseCommand" date="Mon Mar 28 11:22:09 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9629042">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2085]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5799" _type="SelectTextCommand" caretOffset="261" date="Mon Mar 28 11:22:09 EDT 2022" end="273" start="261" starttimestamp="1648471300703" timestamp="9629042" />
  <Command __id="5802" _type="InsertStringCommand" date="Mon Mar 28 11:22:10 EDT 2022" starttimestamp="1648471300703" timestamp="9629458" timestamp2="9629458">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="5804" _type="InsertStringCommand" date="Mon Mar 28 11:22:10 EDT 2022" starttimestamp="1648471300703" timestamp="9629730" timestamp2="9629730">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5805" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:22:11 EDT 2022" starttimestamp="1648471300703" timestamp="9630623" />
  <Command __id="5806" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:22:11 EDT 2022" starttimestamp="1648471300703" timestamp="9630723" />
  <Command __id="5807" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:22:11 EDT 2022" starttimestamp="1648471300703" timestamp="9630769" />
  <Command __id="5809" _type="PauseCommand" date="Mon Mar 28 11:22:17 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9636603">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5834]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5808" _type="ShellCommand" date="Mon Mar 28 11:22:17 EDT 2022" starttimestamp="1648471300703" timestamp="9636603" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5810" _type="ShellCommand" date="Mon Mar 28 11:22:17 EDT 2022" starttimestamp="1648471300703" timestamp="9636793" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="5718" _type="Insert" date="Mon Mar 28 11:21:57 EDT 2022" docASTNodeCount="932" docActiveCodeLength="7063" docExpressionCount="671" docLength="7694" length="37" offset="1809" repeat="37" starttimestamp="1648471300703" timestamp="9616480" timestamp2="9625366">
    <text><![CDATA[ implements ClientRemoteInterfaceGIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="5801" _type="Replace" date="Mon Mar 28 11:22:10 EDT 2022" docASTNodeCount="934" docActiveCodeLength="7052" docExpressionCount="672" docLength="7683" endLine="41" insertionLength="1" int_docASTNodeCount="932" int_docActiveCodeLength="7051" int_docExpressionCount="671" int_docLength="7682" length="12" offset="1809" startLine="41" starttimestamp="1648471300703" timestamp="9629447">
    <deletedText><![CDATA[ implements ]]></deletedText>
    <insertedText><![CDATA[,]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5803" _type="Insert" date="Mon Mar 28 11:22:10 EDT 2022" docASTNodeCount="934" docActiveCodeLength="7053" docExpressionCount="672" docLength="7684" length="1" offset="1810" starttimestamp="1648471300703" timestamp="9629727">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="5811" _type="Insert" date="Mon Mar 28 11:22:17 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7172" docExpressionCount="678" docLength="7837" length="153" offset="7677" repeat="4" starttimestamp="1648471300703" timestamp="9636853" timestamp2="9636861">
    <text><![CDATA[

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="5816" _type="PauseCommand" date="Mon Mar 28 11:22:31 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9650543">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[13690]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5817" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 11:22:31 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="9650737" />
  <Command __id="5819" _type="PauseCommand" date="Mon Mar 28 11:22:36 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9656291">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5554]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5818" _type="SelectTextCommand" caretOffset="507" date="Mon Mar 28 11:22:36 EDT 2022" end="590" start="507" starttimestamp="1648471300703" timestamp="9656291" />
  <Command __id="5821" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:22:37 EDT 2022" starttimestamp="1648471300703" timestamp="9656483" />
  <Command __id="5823" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:22:37 EDT 2022" starttimestamp="1648471300703" timestamp="9656689" />
  <Command __id="5825" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:22:37 EDT 2022" starttimestamp="1648471300703" timestamp="9657229" />
  <Command __id="5827" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:22:38 EDT 2022" starttimestamp="1648471300703" timestamp="9657531" />
  <Command __id="5828" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:22:38 EDT 2022" starttimestamp="1648471300703" timestamp="9658146" />
  <Command __id="5829" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:22:38 EDT 2022" starttimestamp="1648471300703" timestamp="9658236" />
  <Command __id="5830" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:22:38 EDT 2022" starttimestamp="1648471300703" timestamp="9658282" />
  <Command __id="5815" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:22:31 EDT 2022" docASTNodeCount="91" docActiveCodeLength="717" docExpressionCount="57" docLength="751" projectName="A5" starttimestamp="1648471300703" timestamp="9650543">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶	¶	"), Diff(INSERT,"void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5820" _type="Delete" date="Mon Mar 28 11:22:37 EDT 2022" docASTNodeCount="83" docActiveCodeLength="629" docExpressionCount="53" docLength="663" endLine="22" length="88" offset="656" repeat="4" startLine="20" starttimestamp="1648471300703" timestamp="9656477" timestamp2="9657527">
    <text><![CDATA[
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;]]></text>
  </DocumentChange>
  <Command __id="5832" _type="PauseCommand" date="Mon Mar 28 11:22:40 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9659530">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1248]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5833" _type="MoveCaretCommand" caretOffset="263" date="Mon Mar 28 11:22:40 EDT 2022" docOffset="1811" starttimestamp="1648471300703" timestamp="9659646" />
  <Command __id="5835" _type="PauseCommand" date="Mon Mar 28 11:22:41 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9661045">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1399]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5834" _type="SelectTextCommand" caretOffset="6133" date="Mon Mar 28 11:22:41 EDT 2022" end="6282" start="6133" starttimestamp="1648471300703" timestamp="9661045" />
  <Command __id="5837" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:22:41 EDT 2022" starttimestamp="1648471300703" timestamp="9661294" />
  <Command __id="5839" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:22:42 EDT 2022" starttimestamp="1648471300703" timestamp="9661867" />
  <Command __id="5840" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:22:43 EDT 2022" starttimestamp="1648471300703" timestamp="9662535" />
  <Command __id="5841" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:22:43 EDT 2022" starttimestamp="1648471300703" timestamp="9662641" />
  <Command __id="5842" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:22:43 EDT 2022" starttimestamp="1648471300703" timestamp="9662666" />
  <Command __id="5844" _type="PauseCommand" date="Mon Mar 28 11:22:47 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9667174">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4508]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5843" _type="ShellCommand" date="Mon Mar 28 11:22:47 EDT 2022" starttimestamp="1648471300703" timestamp="9667174" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5845" _type="ShellCommand" date="Mon Mar 28 11:22:47 EDT 2022" starttimestamp="1648471300703" timestamp="9667259" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5857" _type="PauseCommand" date="Mon Mar 28 11:22:50 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9670109">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2826]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5856" _type="SelectTextCommand" caretOffset="4639" date="Mon Mar 28 11:22:50 EDT 2022" end="4788" start="4639" starttimestamp="1648471300703" timestamp="9670109" />
  <Command __id="5859" _type="CutCommand" date="Mon Mar 28 11:22:51 EDT 2022" starttimestamp="1648471300703" timestamp="9670446" />
  <Command __id="5861" _type="PauseCommand" date="Mon Mar 28 11:22:54 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9673630">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[3184]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5860" _type="MoveCaretCommand" caretOffset="3591" date="Mon Mar 28 11:22:54 EDT 2022" docOffset="5139" starttimestamp="1648471300703" timestamp="9673630" />
  <Command __id="5863" _type="PasteCommand" date="Mon Mar 28 11:22:54 EDT 2022" starttimestamp="1648471300703" timestamp="9674068" />
  <Command __id="5865" _type="PauseCommand" date="Mon Mar 28 11:22:55 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9675129">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1061]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5864" _type="MoveCaretCommand" caretOffset="3587" date="Mon Mar 28 11:22:55 EDT 2022" docOffset="5135" starttimestamp="1648471300703" timestamp="9675129" />
  <Command __id="5867" _type="InsertStringCommand" date="Mon Mar 28 11:22:56 EDT 2022" starttimestamp="1648471300703" timestamp="9675453" timestamp2="9675453">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5869" _type="InsertStringCommand" date="Mon Mar 28 11:22:56 EDT 2022" starttimestamp="1648471300703" timestamp="9676002" timestamp2="9676002">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="5871" _type="InsertStringCommand" date="Mon Mar 28 11:22:56 EDT 2022" starttimestamp="1648471300703" timestamp="9676125" timestamp2="9676125">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="5873" _type="InsertStringCommand" date="Mon Mar 28 11:22:57 EDT 2022" starttimestamp="1648471300703" timestamp="9676458" timestamp2="9676458">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="5875" _type="InsertStringCommand" date="Mon Mar 28 11:22:57 EDT 2022" starttimestamp="1648471300703" timestamp="9676608" timestamp2="9676608">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5877" _type="InsertStringCommand" date="Mon Mar 28 11:22:57 EDT 2022" starttimestamp="1648471300703" timestamp="9676791" timestamp2="9676791">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5879" _type="InsertStringCommand" date="Mon Mar 28 11:22:57 EDT 2022" starttimestamp="1648471300703" timestamp="9676900" timestamp2="9676900">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5881" _type="InsertStringCommand" date="Mon Mar 28 11:22:57 EDT 2022" starttimestamp="1648471300703" timestamp="9677293" timestamp2="9677293">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5883" _type="InsertStringCommand" date="Mon Mar 28 11:22:58 EDT 2022" starttimestamp="1648471300703" timestamp="9677550" timestamp2="9677550">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5885" _type="InsertStringCommand" date="Mon Mar 28 11:22:58 EDT 2022" starttimestamp="1648471300703" timestamp="9677774" timestamp2="9677774">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5887" _type="InsertStringCommand" date="Mon Mar 28 11:22:58 EDT 2022" starttimestamp="1648471300703" timestamp="9677863" timestamp2="9677863">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5889" _type="InsertStringCommand" date="Mon Mar 28 11:22:59 EDT 2022" starttimestamp="1648471300703" timestamp="9678456" timestamp2="9678456">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5891" _type="InsertStringCommand" date="Mon Mar 28 11:22:59 EDT 2022" starttimestamp="1648471300703" timestamp="9679055" timestamp2="9679055">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="5893" _type="InsertStringCommand" date="Mon Mar 28 11:22:59 EDT 2022" starttimestamp="1648471300703" timestamp="9679219" timestamp2="9679219">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5895" _type="InsertStringCommand" date="Mon Mar 28 11:22:59 EDT 2022" starttimestamp="1648471300703" timestamp="9679292" timestamp2="9679292">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5897" _type="InsertStringCommand" date="Mon Mar 28 11:23:00 EDT 2022" starttimestamp="1648471300703" timestamp="9679382" timestamp2="9679382">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5899" _type="InsertStringCommand" date="Mon Mar 28 11:23:00 EDT 2022" starttimestamp="1648471300703" timestamp="9679493" timestamp2="9679493">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5901" _type="InsertStringCommand" date="Mon Mar 28 11:23:00 EDT 2022" starttimestamp="1648471300703" timestamp="9679579" timestamp2="9679579">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5903" _type="InsertStringCommand" date="Mon Mar 28 11:23:00 EDT 2022" starttimestamp="1648471300703" timestamp="9679677" timestamp2="9679677">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5905" _type="InsertStringCommand" date="Mon Mar 28 11:23:00 EDT 2022" starttimestamp="1648471300703" timestamp="9679766" timestamp2="9679766">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="5907" _type="InsertStringCommand" date="Mon Mar 28 11:23:00 EDT 2022" starttimestamp="1648471300703" timestamp="9679857" timestamp2="9679857">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5909" _type="InsertStringCommand" date="Mon Mar 28 11:23:00 EDT 2022" starttimestamp="1648471300703" timestamp="9679943" timestamp2="9679943">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5911" _type="InsertStringCommand" date="Mon Mar 28 11:23:00 EDT 2022" starttimestamp="1648471300703" timestamp="9680025" timestamp2="9680025">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5913" _type="InsertStringCommand" date="Mon Mar 28 11:23:00 EDT 2022" starttimestamp="1648471300703" timestamp="9680145" timestamp2="9680145">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5915" _type="InsertStringCommand" date="Mon Mar 28 11:23:01 EDT 2022" starttimestamp="1648471300703" timestamp="9681024" timestamp2="9681024">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="5917" _type="InsertStringCommand" date="Mon Mar 28 11:23:01 EDT 2022" starttimestamp="1648471300703" timestamp="9681164" timestamp2="9681164">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5919" _type="InsertStringCommand" date="Mon Mar 28 11:23:01 EDT 2022" starttimestamp="1648471300703" timestamp="9681276" timestamp2="9681276">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="5921" _type="InsertStringCommand" date="Mon Mar 28 11:23:02 EDT 2022" starttimestamp="1648471300703" timestamp="9681626" timestamp2="9681626">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="5923" _type="InsertStringCommand" date="Mon Mar 28 11:23:02 EDT 2022" starttimestamp="1648471300703" timestamp="9681847" timestamp2="9681847">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5925" _type="InsertStringCommand" date="Mon Mar 28 11:23:02 EDT 2022" starttimestamp="1648471300703" timestamp="9682125" timestamp2="9682125">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="5927" _type="InsertStringCommand" date="Mon Mar 28 11:23:03 EDT 2022" starttimestamp="1648471300703" timestamp="9682298" timestamp2="9682298">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5929" _type="InsertStringCommand" date="Mon Mar 28 11:23:03 EDT 2022" starttimestamp="1648471300703" timestamp="9683008" timestamp2="9683008">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5931" _type="InsertStringCommand" date="Mon Mar 28 11:23:03 EDT 2022" starttimestamp="1648471300703" timestamp="9683119" timestamp2="9683119">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5933" _type="InsertStringCommand" date="Mon Mar 28 11:23:04 EDT 2022" starttimestamp="1648471300703" timestamp="9683457" timestamp2="9683457">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="5934" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:23:04 EDT 2022" starttimestamp="1648471300703" timestamp="9683962" />
  <Command __id="5935" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:23:04 EDT 2022" starttimestamp="1648471300703" timestamp="9684061" />
  <Command __id="5936" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:23:04 EDT 2022" starttimestamp="1648471300703" timestamp="9684087" />
  <Command __id="5831" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:22:40 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7172" docExpressionCount="678" docLength="7837" projectName="A5" starttimestamp="1648471300703" timestamp="9659530">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI"), Diff(INSERT,", ClientRemoteInterfaceGIPC"), Diff(EQUAL," {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		"), Diff(DELETE,"serverGIPC.registerClientGIPC(this);"), Diff(EQUAL,"¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}"), Diff(INSERT,"¶		¶		serverGIPC.registerClientGIPC(this);"), Diff(EQUAL,"¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶"), Diff(INSERT,"	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		serverGIPC.registerClientGIPC(this);

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5836" _type="Delete" date="Mon Mar 28 11:22:41 EDT 2022" docASTNodeCount="934" docActiveCodeLength="7055" docExpressionCount="672" docLength="7686" endLine="224" length="151" offset="7679" repeat="2" startLine="219" starttimestamp="1648471300703" timestamp="9661287" timestamp2="9661862">
    <text><![CDATA[
	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="5846" _type="Delete" date="Mon Mar 28 11:22:47 EDT 2022" docASTNodeCount="929" docActiveCodeLength="7019" docExpressionCount="668" docLength="7650" endLine="171" length="36" offset="6188" startLine="171" starttimestamp="1648471300703" timestamp="9667277">
    <text><![CDATA[serverGIPC.registerClientGIPC(this);]]></text>
  </DocumentChange>
  <DocumentChange __id="5847" _type="Insert" date="Mon Mar 28 11:22:47 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7133" docExpressionCount="677" docLength="7798" length="148" offset="6188" repeat="9" starttimestamp="1648471300703" timestamp="9667283" timestamp2="9667302">
    <text><![CDATA[try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="5858" _type="Delete" date="Mon Mar 28 11:22:51 EDT 2022" docASTNodeCount="929" docActiveCodeLength="7018" docExpressionCount="668" docLength="7649" endLine="176" length="149" offset="6187" startLine="171" starttimestamp="1648471300703" timestamp="9670434">
    <text><![CDATA[	try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="5862" _type="Replace" date="Mon Mar 28 11:22:54 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7132" docExpressionCount="677" docLength="7797" endLine="131" insertionLength="150" int_docASTNodeCount="929" int_docActiveCodeLength="7016" int_docExpressionCount="668" int_docLength="7647" length="2" offset="5137" startLine="131" starttimestamp="1648471300703" timestamp="9674060">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5866" _type="Insert" date="Mon Mar 28 11:22:56 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7136" docExpressionCount="677" docLength="7834" length="37" offset="5135" repeat="34" starttimestamp="1648471300703" timestamp="9675446" timestamp2="9683452">
    <text><![CDATA[
		//Register Client with GIPC Proxy]]></text>
  </DocumentChange>
  <Command __id="5938" _type="PauseCommand" date="Mon Mar 28 11:24:18 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="9758082">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[73995]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5939" _type="MoveCaretCommand" caretOffset="502" date="Mon Mar 28 11:24:18 EDT 2022" docOffset="656" starttimestamp="1648471300703" timestamp="9758166" />
  <Command __id="5937" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:24:18 EDT 2022" docASTNodeCount="83" docActiveCodeLength="629" docExpressionCount="53" docLength="663" projectName="A5" starttimestamp="1648471300703" timestamp="9758082">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;"), Diff(DELETE,"¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="5941" _type="PauseCommand" date="Mon Mar 28 11:24:19 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9759262">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1096]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5942" _type="MoveCaretCommand" caretOffset="359" date="Mon Mar 28 11:24:20 EDT 2022" docOffset="544" starttimestamp="1648471300703" timestamp="9759372" />
  <Command __id="5940" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:24:19 EDT 2022" docASTNodeCount="127" docActiveCodeLength="978" docExpressionCount="75" docLength="978" projectName="A5" starttimestamp="1648471300703" timestamp="9759262">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5944" _type="PauseCommand" date="Mon Mar 28 11:24:22 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9762140">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2768]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5945" _type="MoveCaretCommand" caretOffset="3624" date="Mon Mar 28 11:24:22 EDT 2022" docOffset="5172" starttimestamp="1648471300703" timestamp="9762261" />
  <Command __id="5943" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:24:22 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7136" docExpressionCount="677" docLength="7834" projectName="A5" starttimestamp="1648471300703" timestamp="9762140">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		"), Diff(INSERT,"//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}"), Diff(EQUAL,"¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	"), Diff(DELETE,"	serverGIPC.registerClientGIPC(this);"), Diff(EQUAL,"¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶"), Diff(DELETE,"	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶"), Diff(EQUAL,"¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
	

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}


}
]]></snapshot>
  </Command>
  <Command __id="5947" _type="PauseCommand" date="Mon Mar 28 11:24:23 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9763276">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1015]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5948" _type="MoveCaretCommand" caretOffset="3111" date="Mon Mar 28 11:24:24 EDT 2022" docOffset="3111" starttimestamp="1648471300703" timestamp="9763494" />
  <Command __id="5946" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:24:23 EDT 2022" docASTNodeCount="832" docActiveCodeLength="6004" docExpressionCount="605" docLength="6462" projectName="A5" starttimestamp="1648471300703" timestamp="9763276">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5950" _type="PauseCommand" date="Mon Mar 28 11:24:38 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9777557">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14063]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5951" _type="MoveCaretCommand" caretOffset="3624" date="Mon Mar 28 11:24:38 EDT 2022" docOffset="5172" starttimestamp="1648471300703" timestamp="9777719" />
  <Command __id="5949" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:24:38 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7136" docExpressionCount="677" docLength="7834" projectName="A5" starttimestamp="1648471300703" timestamp="9777557">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5953" _type="PauseCommand" date="Mon Mar 28 11:24:45 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9785191">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7472]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5954" _type="MoveCaretCommand" caretOffset="3111" date="Mon Mar 28 11:24:46 EDT 2022" docOffset="3111" starttimestamp="1648471300703" timestamp="9785347" />
  <Command __id="5952" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:24:45 EDT 2022" docASTNodeCount="832" docActiveCodeLength="6004" docExpressionCount="605" docLength="6462" projectName="A5" starttimestamp="1648471300703" timestamp="9785191">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5956" _type="PauseCommand" date="Mon Mar 28 11:24:47 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9786771">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1424]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5971" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:25:39 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="9838873" type="Run" />
  <Command __id="5973" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:25:39 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="9838873" type="Run" />
  <Command __id="5974" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:25:39 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="9838980" type="Run" />
  <Command __id="5975" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:25:39 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="9838998" type="Run" />
  <Command __id="5976" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:25:39 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="9839002" type="Run" />
  <Command __id="5978" _type="PauseCommand" date="Mon Mar 28 11:25:42 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9841363">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2361]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5979" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:25:44 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="9843926" type="Run" />
  <Command __id="5981" _type="ConsoleOutput" date="Mon Mar 28 11:25:44 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="9844036" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Mar 28 11:25:44 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:56257 remote=localhost/127.0.0.1:10000]:An existing connection was forcibly closed by the remote host"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Mar 28 11:25:44 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5983" _type="PauseCommand" date="Mon Mar 28 11:25:46 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9846280">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2244]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5982" _type="ConsoleOutput" date="Mon Mar 28 11:25:46 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="9846280" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:77
Running second pass checks Mon Mar 28 11:25:46 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Mar 28 11:25:46 EDT 2022
End O(n2) inter- and intra class method calls:Mon Mar 28 11:25:46 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:77¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":Mon Mar 28 11:25:44"), Diff(INSERT," Mon Mar 28 11:25:46 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Mar 28 11:25:46 EDT 2022¶End O(n2) inter- and intra class method calls:Mon Mar 28 11:25:46"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="5985" _type="PauseCommand" date="Mon Mar 28 11:25:48 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="9847516">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1236]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5984" _type="ConsoleOutput" date="Mon Mar 28 11:25:48 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="9847516" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Mar 28 11:25:48 EDT 2022
Generating checks:Mon Mar 28 11:25:48 EDT 2022
Finished Generating checks:Mon Mar 28 11:25:48 EDT 2022
Generating externals:Mon Mar 28 11:25:48 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:77¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Mar 28 11:25:4"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Mar 28 11:25:48 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Mar 28 11:25:4"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Mar 28 11:25:4"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="5986" _type="ConsoleOutput" date="Mon Mar 28 11:25:48 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="9847671" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Mar 28 11:25:48 EDT 2022
Test execution time (ms):3669
Test execution time (ms):13
A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2962962962962963

Test execution time (ms):12
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Mar 28 11:25:48 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Mar 28 11:25:48 EDT 2022¶Finished Generating checks:Mon Mar 28 11:25:48 EDT 2022¶Generating externals:Mon Mar 28 11:25:48 EDT 202"), Diff(INSERT,"Test execution time (ms):3669¶Test execution time (ms):13¶A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2962962962962963¶¶Test execution time (ms):1"), Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="5987" _type="ConsoleOutput" date="Mon Mar 28 11:25:48 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="9847797" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.36363636363636365

Test execution time (ms):7

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (20)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (229)
  |~ ClientOutCoupler.java (47)
  |~ ClientRemoteInterfaceGIPC.java (23)
  |~ ClientRemoteInterfaceRMI.java (23)
  |~ ClientRemoteObject.java (228)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (165)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (24)
   |~ ServerRemoteInterfaceRMI.java (21)
   |~ ServerRemoteObjectGIPC.java (206)
   |~ ServerRemoteObjectRMI.java (191)

Attempting to match to the structure:
|- .* (21)
 |- [a-z]?.*[Cc]lient.* (9)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (8)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Mar 28 11:25:48 EDT 2022¶Test execution time (ms):3669¶Test execution time (ms):13¶A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2962962962962963¶¶Test execution time (ms):12"), Diff(INSERT,"Test execution time (ms):5¶A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.36363636363636365¶¶Test execution time (ms):7¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (228)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (165)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (24)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObjectGIPC.java (206)¶   |~ ServerRemoteObjectRMI.java (191)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5989" _type="PauseCommand" date="Mon Mar 28 11:25:51 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9851050">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3253]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5988" _type="ConsoleOutput" date="Mon Mar 28 11:25:51 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="9851050" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment5.style.A5ExpectedSignatures@2c7ad74f . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):5¶A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.36363636363636365¶¶Test execution time (ms):7¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (228)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ Or"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment5.style.A5ExpectedS"), Diff(EQUAL,"ig"), Diff(DELETE,"i"), Diff(EQUAL,"na"), Diff(DELETE,"lSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (165)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (24)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObjectGIPC.java (206)¶   |~ ServerRemoteObjectRMI.java (191)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)"), Diff(INSERT,"tures@2c7ad74f . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5991" _type="PauseCommand" date="Mon Mar 28 11:25:58 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9857948">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6898]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5990" _type="ShellCommand" date="Mon Mar 28 11:25:58 EDT 2022" starttimestamp="1648471300703" timestamp="9857948" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5993" _type="PauseCommand" date="Mon Mar 28 11:26:21 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="9880402">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[22454]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5992" _type="ShellCommand" date="Mon Mar 28 11:26:21 EDT 2022" starttimestamp="1648471300703" timestamp="9880402" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5995" _type="PauseCommand" date="Mon Mar 28 11:26:23 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9882662">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2260]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5994" _type="ConsoleOutput" date="Mon Mar 28 11:26:23 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="9882662" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment5.style.A5ExpectedSignatures@2c7ad74f . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment5.style.A5ExpectedSignatures@2c7ad74f . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="5997" _type="PauseCommand" date="Mon Mar 28 11:26:30 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9889453">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6791]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5996" _type="ShellCommand" date="Mon Mar 28 11:26:30 EDT 2022" starttimestamp="1648471300703" timestamp="9889453" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5999" _type="PauseCommand" date="Mon Mar 28 11:26:41 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9900435">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10982]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5998" _type="ShellCommand" date="Mon Mar 28 11:26:41 EDT 2022" starttimestamp="1648471300703" timestamp="9900435" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6001" _type="PauseCommand" date="Mon Mar 28 11:26:43 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9902491">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2056]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6000" _type="ConsoleOutput" date="Mon Mar 28 11:26:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="9902491" type="ConsoleOutput">
    <outputString><![CDATA[A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):7
Test execution time (ms):9
A5PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.6666666666666666

Test execution time (ms):9
Test execution time (ms):10
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment5.style.A5ExpectedSignatures@2c7ad74f . Results may change."), Diff(INSERT,"A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):7¶Test execution time (ms):9¶A5PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.6666666666666666¶¶Test execution time (ms):9¶Test execution time (ms):10"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6002" _type="ConsoleOutput" date="Mon Mar 28 11:26:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="9902550" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9
Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):7¶Test execution time (ms):9¶A5PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.6666666666666666¶¶Test execution time (ms):9¶Test execution time (ms):10"), Diff(INSERT,"Test execution time (ms):9¶Test execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6004" _type="PauseCommand" date="Mon Mar 28 11:26:50 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9910278">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7728]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6003" _type="ConsoleOutput" date="Mon Mar 28 11:26:50 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="9910278" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment5.style.A5PublicMethodsOverride@6606fb2e . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):9¶Test execution time (ms):6"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment5.style.A5PublicMethodsOverride@6606fb2e . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6006" _type="PauseCommand" date="Mon Mar 28 11:26:59 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9918453">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8175]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6005" _type="ShellCommand" date="Mon Mar 28 11:26:59 EDT 2022" starttimestamp="1648471300703" timestamp="9918453" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5955" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:24:47 EDT 2022" docASTNodeCount="777" docActiveCodeLength="5624" docExpressionCount="568" docLength="6116" projectName="A5" starttimestamp="1648471300703" timestamp="9786771">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		gipcRegistry.rebind(SERVER_NAME, this);	
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <Command __id="6008" _type="PauseCommand" date="Mon Mar 28 11:27:23 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="9943143">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[24689]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6010" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:27:25 EDT 2022" starttimestamp="1648471300703" timestamp="9944451" />
  <Command __id="6012" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:27:25 EDT 2022" starttimestamp="1648471300703" timestamp="9944457" />
  <Command __id="6007" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:27:23 EDT 2022" docASTNodeCount="115" docActiveCodeLength="846" docExpressionCount="68" docLength="846" projectName="A5" starttimestamp="1648471300703" timestamp="9943142">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6014" _type="PauseCommand" date="Mon Mar 28 11:27:36 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9955874">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11417]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6015" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 11:27:36 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="9956032" />
  <Command __id="6017" _type="PauseCommand" date="Mon Mar 28 11:27:39 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="9958795">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2763]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6016" _type="SelectTextCommand" caretOffset="4501" date="Mon Mar 28 11:27:39 EDT 2022" end="4830" start="4501" starttimestamp="1648471300703" timestamp="9958795" />
  <Command __id="6019" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:27:39 EDT 2022" starttimestamp="1648471300703" timestamp="9959230" />
  <Command __id="6021" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:27:40 EDT 2022" starttimestamp="1648471300703" timestamp="9959373" />
  <Command __id="6023" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:27:40 EDT 2022" starttimestamp="1648471300703" timestamp="9960019" />
  <Command __id="6025" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:27:41 EDT 2022" starttimestamp="1648471300703" timestamp="9960372" />
  <Command __id="6026" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:27:41 EDT 2022" starttimestamp="1648471300703" timestamp="9961005" />
  <Command __id="6027" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:27:41 EDT 2022" starttimestamp="1648471300703" timestamp="9961097" />
  <Command __id="6028" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:27:41 EDT 2022" starttimestamp="1648471300703" timestamp="9961171" />
  <Command __id="6030" _type="PauseCommand" date="Mon Mar 28 11:27:51 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9970587">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9416]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6029" _type="SelectTextCommand" caretOffset="3309" date="Mon Mar 28 11:27:51 EDT 2022" end="3330" start="3309" starttimestamp="1648471300703" timestamp="9970587" />
  <Command __id="6032" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:27:51 EDT 2022" starttimestamp="1648471300703" timestamp="9970909" />
  <Command __id="6034" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:27:52 EDT 2022" starttimestamp="1648471300703" timestamp="9971672" />
  <Command __id="6036" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:27:52 EDT 2022" starttimestamp="1648471300703" timestamp="9972043" />
  <Command __id="6038" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:27:53 EDT 2022" starttimestamp="1648471300703" timestamp="9972332" />
  <Command __id="6039" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:27:53 EDT 2022" starttimestamp="1648471300703" timestamp="9973040" />
  <Command __id="6040" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:27:53 EDT 2022" starttimestamp="1648471300703" timestamp="9973135" />
  <Command __id="6041" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:27:53 EDT 2022" starttimestamp="1648471300703" timestamp="9973157" />
  <Command __id="6013" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:27:36 EDT 2022" docASTNodeCount="777" docActiveCodeLength="5624" docExpressionCount="568" docLength="6116" projectName="A5" starttimestamp="1648471300703" timestamp="9955874">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="6018" _type="Delete" date="Mon Mar 28 11:27:39 EDT 2022" docASTNodeCount="741" docActiveCodeLength="5290" docExpressionCount="541" docLength="5782" endLine="188" length="334" offset="5775" repeat="4" startLine="180" starttimestamp="1648471300703" timestamp="9959218" timestamp2="9960365">
    <text><![CDATA[
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		gipcRegistry.rebind(SERVER_NAME, this);	
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="6031" _type="Delete" date="Mon Mar 28 11:27:51 EDT 2022" docASTNodeCount="738" docActiveCodeLength="5265" docExpressionCount="539" docLength="5757" endLine="136" length="25" offset="4584" repeat="4" startLine="135" starttimestamp="1648471300703" timestamp="9970900" timestamp2="9972328">
    <text><![CDATA[
		createGIPCRegistry();]]></text>
  </DocumentChange>
  <Command __id="6043" _type="PauseCommand" date="Mon Mar 28 11:28:02 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9981824">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8667]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6044" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 11:28:02 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="9981910" />
  <Command __id="6042" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:28:02 EDT 2022" docASTNodeCount="115" docActiveCodeLength="846" docExpressionCount="68" docLength="846" projectName="A5" starttimestamp="1648471300703" timestamp="9981824">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6046" _type="PauseCommand" date="Mon Mar 28 11:28:12 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="9991984">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10074]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6047" _type="MoveCaretCommand" caretOffset="3111" date="Mon Mar 28 11:28:12 EDT 2022" docOffset="3111" starttimestamp="1648471300703" timestamp="9992084" />
  <Command __id="6049" _type="PauseCommand" date="Mon Mar 28 11:28:18 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="9997633">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5549]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6048" _type="SelectTextCommand" caretOffset="2928" date="Mon Mar 28 11:28:18 EDT 2022" end="3111" start="2928" starttimestamp="1648471300703" timestamp="9997633" />
  <Command __id="6050" _type="SelectTextCommand" caretOffset="2928" date="Mon Mar 28 11:28:18 EDT 2022" end="3111" start="2928" starttimestamp="1648471300703" timestamp="9997633" />
  <Command __id="6052" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:28:18 EDT 2022" starttimestamp="1648471300703" timestamp="9997886" />
  <Command __id="6053" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:28:18 EDT 2022" starttimestamp="1648471300703" timestamp="9997886" />
  <Command __id="6055" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 11:28:19 EDT 2022" starttimestamp="1648471300703" timestamp="9998513" />
  <Command __id="6057" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 11:28:19 EDT 2022" starttimestamp="1648471300703" timestamp="9998948" />
  <Command __id="6059" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Mar 28 11:28:20 EDT 2022" starttimestamp="1648471300703" timestamp="9999847" />
  <Command __id="6060" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:28:21 EDT 2022" starttimestamp="1648471300703" timestamp="10000566" />
  <Command __id="6061" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:28:21 EDT 2022" starttimestamp="1648471300703" timestamp="10000649" />
  <Command __id="6062" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:28:21 EDT 2022" starttimestamp="1648471300703" timestamp="10000699" />
  <Command __id="6064" _type="PauseCommand" date="Mon Mar 28 11:28:30 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10009969">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9270]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6063" _type="SelectTextCommand" caretOffset="1573" date="Mon Mar 28 11:28:30 EDT 2022" end="1662" start="1573" starttimestamp="1648471300703" timestamp="10009969" />
  <Command __id="6065" _type="SelectTextCommand" caretOffset="1573" date="Mon Mar 28 11:28:30 EDT 2022" end="1662" start="1573" starttimestamp="1648471300703" timestamp="10009970" />
  <Command __id="6067" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:28:31 EDT 2022" starttimestamp="1648471300703" timestamp="10010462" />
  <Command __id="6068" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:28:31 EDT 2022" starttimestamp="1648471300703" timestamp="10010462" />
  <Command __id="6070" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:28:31 EDT 2022" starttimestamp="1648471300703" timestamp="10010980" />
  <Command __id="6071" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:28:31 EDT 2022" starttimestamp="1648471300703" timestamp="10010980" />
  <Command __id="6073" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:28:32 EDT 2022" starttimestamp="1648471300703" timestamp="10011604" />
  <Command __id="6074" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:28:32 EDT 2022" starttimestamp="1648471300703" timestamp="10011604" />
  <Command __id="6075" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:28:32 EDT 2022" starttimestamp="1648471300703" timestamp="10012225" />
  <Command __id="6076" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:28:33 EDT 2022" starttimestamp="1648471300703" timestamp="10012327" />
  <Command __id="6077" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:28:33 EDT 2022" starttimestamp="1648471300703" timestamp="10012372" />
  <Command __id="6079" _type="PauseCommand" date="Mon Mar 28 11:28:36 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10015344">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2972]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6080" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:28:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="10016892" type="Debug" />
  <Command __id="6082" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:28:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="10016892" type="Debug" />
  <Command __id="6083" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:28:37 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="10016892" type="Run" />
  <Command __id="6085" _type="PauseCommand" date="Mon Mar 28 11:28:38 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10018163">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1271]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6086" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:28:41 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="10020616" type="Run" />
  <Command __id="6088" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:28:41 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="10020616" type="Run" />
  <Command __id="6090" _type="PauseCommand" date="Mon Mar 28 11:28:43 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10022693">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2077]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6089" _type="ShellCommand" date="Mon Mar 28 11:28:43 EDT 2022" starttimestamp="1648471300703" timestamp="10022693" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6092" _type="PauseCommand" date="Mon Mar 28 11:28:45 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10024892">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2199]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6091" _type="ConsoleOutput" date="Mon Mar 28 11:28:45 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10024892" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Mar 28 11:28:45 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment5.style.A5PublicMethodsOverride@6606fb2e . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Mar 28 11:28:45 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6094" _type="PauseCommand" date="Mon Mar 28 11:28:47 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10026797">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1905]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6093" _type="ConsoleOutput" date="Mon Mar 28 11:28:47 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10026797" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:77
Running second pass checks Mon Mar 28 11:28:47 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Mar 28 11:28:47 EDT 2022
End O(n2) inter- and intra class method calls:Mon Mar 28 11:28:47 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:77¶Running second pass checks Mon Mar 28 11:28:47 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Mar 28 11:28:47 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Mar 28 11:28:4"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="6095" _type="ConsoleOutput" date="Mon Mar 28 11:28:48 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10027646" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Mar 28 11:28:48 EDT 2022
Generating checks:Mon Mar 28 11:28:48 EDT 2022
Finished Generating checks:Mon Mar 28 11:28:48 EDT 2022
Generating externals:Mon Mar 28 11:28:48 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:77¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Mar 28 11:28:4"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Mar 28 11:28:48 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Mar 28 11:28:4"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Mar 28 11:28:4"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="6096" _type="ConsoleOutput" date="Mon Mar 28 11:28:48 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10027881" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Mar 28 11:28:48 EDT 2022

A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0
Test execution time (ms):3064
Test execution time (ms):12
A5PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.8333333333333334

Test execution time (ms):6
Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Mar 28 11:28:48 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Mar 28 11:28:48 EDT 2022¶Finished Generating checks:Mon Mar 28 11:28:48 EDT 2022¶Generating externals:Mon Mar 28 11:28:48 EDT 2022"), Diff(INSERT,"¶A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶Test execution time (ms):3064¶Test execution time (ms):12¶A5PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.8333333333333334¶¶Test execution time (ms):6¶Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6097" _type="ConsoleOutput" date="Mon Mar 28 11:28:48 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10027940" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Mar 28 11:28:48 EDT 2022¶¶A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"3064"), Diff(INSERT,"6"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"12¶A5PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.8333333333333334¶¶Test execution time (ms):6¶Test execution time (ms):5"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6099" _type="PauseCommand" date="Mon Mar 28 11:28:50 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10030242">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2302]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6098" _type="ConsoleOutput" date="Mon Mar 28 11:28:50 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10030242" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment5.style.A5PublicMethodsOverride@5c383172 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test execution time (ms):7"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment5.style.A5PublicMethodsOverride@5c383172 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6101" _type="PauseCommand" date="Mon Mar 28 11:28:53 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10032637">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2395]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6100" _type="ShellCommand" date="Mon Mar 28 11:28:53 EDT 2022" starttimestamp="1648471300703" timestamp="10032637" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6103" _type="PauseCommand" date="Mon Mar 28 11:29:01 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10041169">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8531]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6102" _type="ShellCommand" date="Mon Mar 28 11:29:01 EDT 2022" starttimestamp="1648471300703" timestamp="10041168" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6105" _type="PauseCommand" date="Mon Mar 28 11:29:05 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10044434">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3266]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6104" _type="ConsoleOutput" date="Mon Mar 28 11:29:05 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10044434" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test execution time (ms):4

A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2962962962962963
Test execution time (ms):5
Test execution time (ms):8
A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.36363636363636365

Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment5.style.A5PublicMethodsOverride@5c383172 . Results may change."), Diff(INSERT,"Test execution time (ms):4¶Test execution time (ms):4¶¶A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2962962962962963¶Test execution time (ms):5¶Test execution time (ms):8¶A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.36363636363636365¶¶Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6106" _type="ConsoleOutput" date="Mon Mar 28 11:29:05 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10044513" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (20)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (229)
  |~ ClientOutCoupler.java (47)
  |~ ClientRemoteInterfaceGIPC.java (23)
  |~ ClientRemoteInterfaceRMI.java (23)
  |~ ClientRemoteObject.java (228)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (165)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (24)
   |~ ServerRemoteInterfaceRMI.java (21)
   |~ ServerRemoteObjectGIPC.java (197)
   |~ ServerRemoteObjectRMI.java (182)

Attempting to match to the structure:
|- .* (21)
 |- [a-z]?.*[Cc]lient.* (9)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (8)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):4¶Test execution time (ms):4¶¶A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2962962962962963¶Test execution time (ms):5¶Test execution time (ms):8¶A5ExpectedSignatures did not pass completely:See consol"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (228)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (165)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (24)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObjectGIPC.java (197)¶   |~ ServerRemoteObjectRMI.java (182)¶¶Attempting to match to th"), Diff(EQUAL,"e "), Diff(INSERT,"s"), Diff(EQUAL,"tr"), Diff(DELETE,"ace about lines failing  this check%0.36363636363636365¶¶Test execution time (ms):4"), Diff(INSERT,"ucture:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6108" _type="PauseCommand" date="Mon Mar 28 11:29:11 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10051131">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6618]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6109" _type="ConsoleOutput" date="Mon Mar 28 11:29:29 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10068653" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):18794
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (228)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (165)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (24)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObjectGIPC.java (197)¶   |~ ServerRemoteObjectRMI.java (182)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)"), Diff(INSERT,"Test execution time (ms):18794"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6045" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:28:12 EDT 2022" docASTNodeCount="832" docActiveCodeLength="6004" docExpressionCount="605" docLength="6462" projectName="A5" starttimestamp="1648471300703" timestamp="9991984">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="6051" _type="Delete" date="Mon Mar 28 11:28:18 EDT 2022" docASTNodeCount="810" docActiveCodeLength="5816" docExpressionCount="591" docLength="6274" endLine="83" length="188" offset="2928" repeat="4" startLine="75" starttimestamp="1648471300703" timestamp="9997872" timestamp2="9999840">
    <text><![CDATA[	public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		
	}
	
	
]]></text>
  </DocumentChange>
  <DocumentChange __id="6066" _type="Delete" date="Mon Mar 28 11:28:31 EDT 2022" docASTNodeCount="796" docActiveCodeLength="5724" docExpressionCount="585" docLength="6182" endLine="37" length="92" offset="1570" repeat="3" startLine="36" starttimestamp="1648471300703" timestamp="10010453" timestamp2="10011594">
    <text><![CDATA[
	List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();]]></text>
  </DocumentChange>
  <Command __id="6112" _type="PauseCommand" date="Mon Mar 28 11:30:07 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="10107272">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[38619]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6113" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 11:30:08 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="10107387" />
  <Command __id="6111" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:30:07 EDT 2022" docASTNodeCount="115" docActiveCodeLength="846" docExpressionCount="68" docLength="846" projectName="A5" starttimestamp="1648471300703" timestamp="10107272">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6115" _type="PauseCommand" date="Mon Mar 28 11:30:10 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10110125">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2738]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6116" _type="MoveCaretCommand" caretOffset="1570" date="Mon Mar 28 11:30:10 EDT 2022" docOffset="1570" starttimestamp="1648471300703" timestamp="10110234" />
  <Command __id="6114" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:30:10 EDT 2022" docASTNodeCount="796" docActiveCodeLength="5724" docExpressionCount="585" docLength="6182" projectName="A5" starttimestamp="1648471300703" timestamp="10110125">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	"), Diff(DELETE,"List<ClientRemoteInterfaceRMI> clientListRMI = new ArrayList<ClientRemoteInterfaceRMI>();¶	"), Diff(EQUAL,"¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	"), Diff(DELETE,"public void registerClientRMI(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		¶	}¶	¶	¶	"), Diff(EQUAL,"@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{
	
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
		
	}
	
	
	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);	
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <Command __id="6118" _type="PauseCommand" date="Mon Mar 28 11:30:12 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10111439">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1205]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6119" _type="MoveCaretCommand" caretOffset="3305" date="Mon Mar 28 11:30:12 EDT 2022" docOffset="4584" starttimestamp="1648471300703" timestamp="10111555" />
  <Command __id="6120" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:30:12 EDT 2022" starttimestamp="1648471300703" timestamp="10111624" />
  <Command __id="6121" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:30:12 EDT 2022" starttimestamp="1648471300703" timestamp="10111628" />
  <Command __id="6117" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:30:12 EDT 2022" docASTNodeCount="738" docActiveCodeLength="5265" docExpressionCount="539" docLength="5757" projectName="A5" starttimestamp="1648471300703" timestamp="10111439">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		"), Diff(DELETE,"createGIPCRegistry();¶		"), Diff(EQUAL,"¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}"), Diff(DELETE,"¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		gipcRegistry.rebind(SERVER_NAME, this);	¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="6123" _type="PauseCommand" date="Mon Mar 28 11:30:13 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10112839">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1211]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6124" _type="MoveCaretCommand" caretOffset="1570" date="Mon Mar 28 11:30:13 EDT 2022" docOffset="1570" starttimestamp="1648471300703" timestamp="10112982" />
  <Command __id="6126" _type="PauseCommand" date="Mon Mar 28 11:30:16 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10115686">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2704]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6125" _type="MoveCaretCommand" caretOffset="5693" date="Mon Mar 28 11:30:16 EDT 2022" docOffset="5693" starttimestamp="1648471300703" timestamp="10115686" />
  <Command __id="6127" _type="InsertStringCommand" date="Mon Mar 28 11:30:16 EDT 2022" starttimestamp="1648471300703" timestamp="10116061" timestamp2="10116061">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6128" _type="InsertStringCommand" date="Mon Mar 28 11:30:17 EDT 2022" starttimestamp="1648471300703" timestamp="10116959" timestamp2="10116959">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="6129" _type="InsertStringCommand" date="Mon Mar 28 11:30:17 EDT 2022" starttimestamp="1648471300703" timestamp="10117274" timestamp2="10117274">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="6130" _type="InsertStringCommand" date="Mon Mar 28 11:30:18 EDT 2022" starttimestamp="1648471300703" timestamp="10117438" timestamp2="10117438">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="6131" _type="InsertStringCommand" date="Mon Mar 28 11:30:18 EDT 2022" starttimestamp="1648471300703" timestamp="10117622" timestamp2="10117622">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6132" _type="InsertStringCommand" date="Mon Mar 28 11:30:18 EDT 2022" starttimestamp="1648471300703" timestamp="10117742" timestamp2="10117742">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6133" _type="InsertStringCommand" date="Mon Mar 28 11:30:18 EDT 2022" starttimestamp="1648471300703" timestamp="10117935" timestamp2="10117935">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6134" _type="InsertStringCommand" date="Mon Mar 28 11:30:18 EDT 2022" starttimestamp="1648471300703" timestamp="10118042" timestamp2="10118042">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6135" _type="InsertStringCommand" date="Mon Mar 28 11:30:18 EDT 2022" starttimestamp="1648471300703" timestamp="10118210" timestamp2="10118210">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6136" _type="InsertStringCommand" date="Mon Mar 28 11:30:19 EDT 2022" starttimestamp="1648471300703" timestamp="10118358" timestamp2="10118358">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6138" _type="PauseCommand" date="Mon Mar 28 11:30:23 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10122770">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4412]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6137" _type="ShellCommand" date="Mon Mar 28 11:30:23 EDT 2022" starttimestamp="1648471300703" timestamp="10122770" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6139" _type="ShellCommand" date="Mon Mar 28 11:30:23 EDT 2022" starttimestamp="1648471300703" timestamp="10122930" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6143" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 11:30:24 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="10123305" />
  <Command __id="6145" _type="PauseCommand" date="Mon Mar 28 11:30:25 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10125292">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1987]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6144" _type="MoveCaretCommand" caretOffset="810" date="Mon Mar 28 11:30:25 EDT 2022" docOffset="995" starttimestamp="1648471300703" timestamp="10125292" />
  <Command __id="6147" _type="InsertStringCommand" date="Mon Mar 28 11:30:26 EDT 2022" starttimestamp="1648471300703" timestamp="10125819" timestamp2="10125819">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6149" _type="InsertStringCommand" date="Mon Mar 28 11:30:26 EDT 2022" starttimestamp="1648471300703" timestamp="10125974" timestamp2="10125974">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6151" _type="InsertStringCommand" date="Mon Mar 28 11:30:26 EDT 2022" starttimestamp="1648471300703" timestamp="10126076" timestamp2="10126076">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="6153" _type="InsertStringCommand" date="Mon Mar 28 11:30:26 EDT 2022" starttimestamp="1648471300703" timestamp="10126259" timestamp2="10126259">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6155" _type="InsertStringCommand" date="Mon Mar 28 11:30:27 EDT 2022" starttimestamp="1648471300703" timestamp="10126726" timestamp2="10126726">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6157" _type="InsertStringCommand" date="Mon Mar 28 11:30:27 EDT 2022" starttimestamp="1648471300703" timestamp="10126856" timestamp2="10126856">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="6159" _type="InsertStringCommand" date="Mon Mar 28 11:30:27 EDT 2022" starttimestamp="1648471300703" timestamp="10127101" timestamp2="10127101">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6160" _type="ConsoleOutput" date="Mon Mar 28 11:30:27 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10127234" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIOneClientConnection did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*%0.0

Test execution time (ms):58574
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GIPCRMIOneClientConnection did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*%0.0¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1879"), Diff(INSERT,"5857"), Diff(EQUAL,"4¶")]]]></diff>
  </Command>
  <Command __id="6162" _type="InsertStringCommand" date="Mon Mar 28 11:30:27 EDT 2022" starttimestamp="1648471300703" timestamp="10127250" timestamp2="10127250">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6164" _type="InsertStringCommand" date="Mon Mar 28 11:30:28 EDT 2022" starttimestamp="1648471300703" timestamp="10127635" timestamp2="10127635">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6166" _type="InsertStringCommand" date="Mon Mar 28 11:30:28 EDT 2022" starttimestamp="1648471300703" timestamp="10127805" timestamp2="10127805">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6168" _type="InsertStringCommand" date="Mon Mar 28 11:30:28 EDT 2022" starttimestamp="1648471300703" timestamp="10127957" timestamp2="10127957">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6170" _type="InsertStringCommand" date="Mon Mar 28 11:30:28 EDT 2022" starttimestamp="1648471300703" timestamp="10128026" timestamp2="10128026">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6172" _type="InsertStringCommand" date="Mon Mar 28 11:30:28 EDT 2022" starttimestamp="1648471300703" timestamp="10128091" timestamp2="10128091">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6174" _type="InsertStringCommand" date="Mon Mar 28 11:30:28 EDT 2022" starttimestamp="1648471300703" timestamp="10128229" timestamp2="10128229">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6176" _type="InsertStringCommand" date="Mon Mar 28 11:30:29 EDT 2022" starttimestamp="1648471300703" timestamp="10128528" timestamp2="10128528">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6178" _type="InsertStringCommand" date="Mon Mar 28 11:30:29 EDT 2022" starttimestamp="1648471300703" timestamp="10128758" timestamp2="10128758">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6180" _type="InsertStringCommand" date="Mon Mar 28 11:30:29 EDT 2022" starttimestamp="1648471300703" timestamp="10128934" timestamp2="10128934">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6182" _type="InsertStringCommand" date="Mon Mar 28 11:30:29 EDT 2022" starttimestamp="1648471300703" timestamp="10129280" timestamp2="10129280">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6184" _type="InsertStringCommand" date="Mon Mar 28 11:30:30 EDT 2022" starttimestamp="1648471300703" timestamp="10129481" timestamp2="10129481">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6186" _type="InsertStringCommand" date="Mon Mar 28 11:30:30 EDT 2022" starttimestamp="1648471300703" timestamp="10129617" timestamp2="10129617">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6188" _type="InsertStringCommand" date="Mon Mar 28 11:30:30 EDT 2022" starttimestamp="1648471300703" timestamp="10129716" timestamp2="10129716">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6190" _type="InsertStringCommand" date="Mon Mar 28 11:30:30 EDT 2022" starttimestamp="1648471300703" timestamp="10129771" timestamp2="10129771">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6192" _type="InsertStringCommand" date="Mon Mar 28 11:30:30 EDT 2022" starttimestamp="1648471300703" timestamp="10129865" timestamp2="10129865">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6193" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:30:31 EDT 2022" starttimestamp="1648471300703" timestamp="10130481" />
  <Command __id="6194" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:30:31 EDT 2022" starttimestamp="1648471300703" timestamp="10130580" />
  <Command __id="6195" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:30:31 EDT 2022" starttimestamp="1648471300703" timestamp="10130635" />
  <Command __id="6197" _type="PauseCommand" date="Mon Mar 28 11:30:36 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10136143">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5508]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6200" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Mar 28 11:30:42 EDT 2022" starttimestamp="1648471300703" timestamp="10141444" />
  <Command __id="6202" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:30:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="10141491" type="Debug" />
  <Command __id="6203" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:30:42 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="10141491" type="Run" />
  <Command __id="6204" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:30:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="10141491" type="Debug" />
  <Command __id="6205" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:30:42 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="10141491" type="Run" />
  <Command __id="6207" _type="PauseCommand" date="Mon Mar 28 11:30:46 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10146039">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4548]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6206" _type="ShellCommand" date="Mon Mar 28 11:30:46 EDT 2022" starttimestamp="1648471300703" timestamp="10146039" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6209" _type="PauseCommand" date="Mon Mar 28 11:30:48 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10148043">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2004]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6208" _type="ShellCommand" date="Mon Mar 28 11:30:48 EDT 2022" starttimestamp="1648471300703" timestamp="10148043" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6210" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:30:48 EDT 2022" starttimestamp="1648471300703" timestamp="10148162" />
  <Command __id="6211" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:30:48 EDT 2022" starttimestamp="1648471300703" timestamp="10148194" />
  <Command __id="6212" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:30:48 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="10148250" type="Run" />
  <Command __id="6213" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:30:48 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="10148250" type="Run" />
  <Command __id="6215" _type="PauseCommand" date="Mon Mar 28 11:30:51 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10150637">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2386]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6214" _type="ShellCommand" date="Mon Mar 28 11:30:51 EDT 2022" starttimestamp="1648471300703" timestamp="10150636" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6217" _type="PauseCommand" date="Mon Mar 28 11:30:53 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10152612">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1976]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6216" _type="ConsoleOutput" date="Mon Mar 28 11:30:53 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10152612" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Mar 28 11:30:53 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMIOneClientConnection did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*%0.0¶¶Test execution time (ms):58574"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Mar 28 11:30:53 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6219" _type="PauseCommand" date="Mon Mar 28 11:30:55 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10154556">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1944]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6218" _type="ConsoleOutput" date="Mon Mar 28 11:30:55 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10154556" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:77
Running second pass checks Mon Mar 28 11:30:55 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Mar 28 11:30:55 EDT 2022
End O(n2) inter- and intra class method calls:Mon Mar 28 11:30:55 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:77¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":Mon Mar 28 11:30:53"), Diff(INSERT," Mon Mar 28 11:30:55 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Mar 28 11:30:55 EDT 2022¶End O(n2) inter- and intra class method calls:Mon Mar 28 11:30:55"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="6220" _type="ConsoleOutput" date="Mon Mar 28 11:30:56 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10155397" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Mar 28 11:30:56 EDT 2022
Generating checks:Mon Mar 28 11:30:56 EDT 2022
Finished Generating checks:Mon Mar 28 11:30:56 EDT 2022
Generating externals:Mon Mar 28 11:30:56 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:77¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Mar 28 11:30:5"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Mar 28 11:30:56 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Mar 28 11:30:5"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Mar 28 11:30:5"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="6221" _type="ConsoleOutput" date="Mon Mar 28 11:30:56 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10155646" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Mar 28 11:30:56 EDT 2022

A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0
Test execution time (ms):3075
Test execution time (ms):23
Test execution time (ms):5
Test execution time (ms):7
Test execution time (ms):4
Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Mar 28 11:30:56 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Mar 28 11:30:56 EDT 2022¶Finished Generating checks:Mon Mar 28 11:30:56 EDT 2022¶Generating externals:Mon Mar 28 11:30:56 EDT 2022"), Diff(INSERT,"¶A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶Test execution time (ms):3075¶Test execution time (ms):23¶Test execution time (ms):5¶Test execution time (ms):7¶Test execution time (ms):4¶Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6223" _type="PauseCommand" date="Mon Mar 28 11:30:59 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10159056">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3410]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6222" _type="ConsoleOutput" date="Mon Mar 28 11:30:59 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10159056" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test execution time (ms):8
A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2962962962962963

Test execution time (ms):8
Test execution time (ms):7
A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.36363636363636365
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Mar 28 11:30:56 EDT 2022¶¶A5NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0"), Diff(INSERT,"Test execution time (ms):2¶Test execution time (ms):8¶A5ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2962962962962963¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"3075"), Diff(INSERT,"8"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"23¶Test execution time (ms):5¶Test execution time (ms):7¶Test execution time (ms):4¶Test execution time (ms):4"), Diff(INSERT,"7¶A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.36363636363636365"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6224" _type="ConsoleOutput" date="Mon Mar 28 11:30:59 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10159127" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (20)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (229)
  |~ ClientOutCoupler.java (47)
  |~ ClientRemoteInterfaceGIPC.java (23)
  |~ ClientRemoteInterfaceRMI.java (23)
  |~ ClientRemoteObject.java (228)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (165)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (26)
   |~ ServerRemoteInterfaceRMI.java (21)
   |~ ServerRemoteObjectGIPC.java (198)
   |~ ServerRemoteObjectRMI.java (182)

Attempting to match to the structure:
|- .* (21)
 |- [a-z]?.*[Cc]lient.* (9)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (8)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
  |- [a-z]?.*[Rr]emote.* (4)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"6"), Diff(EQUAL,"¶"), Diff(DELETE,"Test execution time (ms):8¶A5ExpectedCalls did no"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your projec"), Diff(EQUAL,"t "), Diff(DELETE,"p"), Diff(INSERT,"w"), Diff(EQUAL,"as"), Diff(DELETE,"s completely:See console trace about lines failing  this check%0.2962962962962963¶¶Test execution time (ms):8¶Test execution time (ms):7¶A5ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.36363636363636365"), Diff(INSERT," found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (228)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (165)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (26)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObjectGIPC.java (198)¶   |~ ServerRemoteObjectRMI.java (182)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6226" _type="PauseCommand" date="Mon Mar 28 11:31:22 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="10181945">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22818]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6225" _type="ConsoleOutput" date="Mon Mar 28 11:31:22 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10181945" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):18600
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"6¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5238095238095238¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (229)¶  |~ ClientOutCoupler.java (47)¶  |~ ClientRemoteInterfaceGIPC.java (23)¶  |~ ClientRemoteInterfaceRMI.java (23)¶  |~ ClientRemoteObject.java (228)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (165)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (26)¶   |~ ServerRemoteInterfaceRMI.java (21)¶   |~ ServerRemoteObjectGIPC.java (198)¶   |~ ServerRemoteObjectRMI.java (182)¶¶Attempting to match to the structure:¶|- .* (21)¶ |- [a-z]?.*[Cc]lient.* (9)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (8)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (4)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)"), Diff(INSERT,"18600"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6228" _type="PauseCommand" date="Mon Mar 28 11:32:06 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="10226141">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[44196]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6227" _type="ShellCommand" date="Mon Mar 28 11:32:06 EDT 2022" starttimestamp="1648471300703" timestamp="10226141" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6230" _type="MoveCaretCommand" caretOffset="3624" date="Mon Mar 28 11:32:07 EDT 2022" docOffset="5172" starttimestamp="1648471300703" timestamp="10226548" />
  <Command __id="6122" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:30:13 EDT 2022" docASTNodeCount="796" docActiveCodeLength="5724" docExpressionCount="585" docLength="6182" projectName="A5" starttimestamp="1648471300703" timestamp="10112839">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6140" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:30:23 EDT 2022" docASTNodeCount="127" docActiveCodeLength="978" docExpressionCount="75" docLength="978" projectName="A5" starttimestamp="1648471300703" timestamp="10123128">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="6141" _type="Insert" date="Mon Mar 28 11:30:23 EDT 2022" docASTNodeCount="130" docActiveCodeLength="1009" docExpressionCount="76" docLength="1009" length="31" offset="965" repeat="2" starttimestamp="1648471300703" timestamp="10123163" timestamp2="10123164">
    <text><![CDATA[

	void createGIPCRegistry();]]></text>
  </DocumentChange>
  <DocumentChange __id="6146" _type="Insert" date="Mon Mar 28 11:30:26 EDT 2022" docASTNodeCount="131" docActiveCodeLength="1032" docExpressionCount="77" docLength="1032" length="23" offset="995" repeat="23" starttimestamp="1648471300703" timestamp="10125813" timestamp2="10129860">
    <text><![CDATA[ throws RemoteException]]></text>
  </DocumentChange>
  <Command __id="6229" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:32:07 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7136" docExpressionCount="677" docLength="7834" projectName="A5" starttimestamp="1648471300703" timestamp="10226346">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6232" _type="PauseCommand" date="Mon Mar 28 11:32:08 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10228270">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1722]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6233" _type="MoveCaretCommand" caretOffset="5705" date="Mon Mar 28 11:32:09 EDT 2022" docOffset="5705" starttimestamp="1648471300703" timestamp="10228363" />
  <Command __id="6235" _type="PauseCommand" date="Mon Mar 28 11:32:21 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="10240509">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12146]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6234" _type="ConsoleOutput" date="Mon Mar 28 11:32:21 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10240509" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIOneClientConnection did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*%0.0

Test execution time (ms):58560
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GIPCRMIOneClientConnection did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*%0.0¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1860"), Diff(INSERT,"5856"), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="6231" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:32:08 EDT 2022" docASTNodeCount="798" docActiveCodeLength="5736" docExpressionCount="587" docLength="6194" projectName="A5" starttimestamp="1648471300703" timestamp="10228270">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	"), Diff(INSERT,"@Override¶	"), Diff(EQUAL,"public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{
	
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
		
	}
	
	
	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void createGIPCRegistry() {
		
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);	
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <Command __id="6237" _type="PauseCommand" date="Mon Mar 28 11:32:29 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10248629">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8120]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6238" _type="MoveCaretCommand" caretOffset="833" date="Mon Mar 28 11:32:29 EDT 2022" docOffset="1018" starttimestamp="1648471300703" timestamp="10248709" />
  <Command __id="6236" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:32:29 EDT 2022" docASTNodeCount="131" docActiveCodeLength="1032" docExpressionCount="77" docLength="1032" projectName="A5" starttimestamp="1648471300703" timestamp="10248629">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;"), Diff(INSERT,"¶¶	void createGIPCRegistry() throws RemoteException;"), Diff(EQUAL,"¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ServerRemoteInterfaceGIPC  extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="6240" _type="PauseCommand" date="Mon Mar 28 11:32:32 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10252229">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3520]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6241" _type="MoveCaretCommand" caretOffset="3624" date="Mon Mar 28 11:32:33 EDT 2022" docOffset="5172" starttimestamp="1648471300703" timestamp="10252334" />
  <Command __id="6239" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:32:32 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7136" docExpressionCount="677" docLength="7834" projectName="A5" starttimestamp="1648471300703" timestamp="10252229">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6243" _type="PauseCommand" date="Mon Mar 28 11:32:35 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10254323">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1989]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6244" _type="MoveCaretCommand" caretOffset="5705" date="Mon Mar 28 11:32:35 EDT 2022" docOffset="5705" starttimestamp="1648471300703" timestamp="10254409" />
  <Command __id="6246" _type="PauseCommand" date="Mon Mar 28 11:32:37 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10257134">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2725]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6245" _type="MoveCaretCommand" caretOffset="5693" date="Mon Mar 28 11:32:37 EDT 2022" docOffset="5693" starttimestamp="1648471300703" timestamp="10257134" />
  <Command __id="6247" _type="MoveCaretCommand" caretOffset="5693" date="Mon Mar 28 11:32:37 EDT 2022" docOffset="5693" starttimestamp="1648471300703" timestamp="10257134" />
  <Command __id="6249" _type="PauseCommand" date="Mon Mar 28 11:33:02 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="10281390">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[24256]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6248" _type="ShellCommand" date="Mon Mar 28 11:33:02 EDT 2022" starttimestamp="1648471300703" timestamp="10281390" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6251" _type="PauseCommand" date="Mon Mar 28 11:33:19 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="10299100">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17710]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6250" _type="ConsoleOutput" date="Mon Mar 28 11:33:19 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10299100" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIOneClientReadWriteNonAtomic did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*
GIPC is not checked because RMI failed%0.0

Test execution time (ms):58577
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMIOneClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*"), Diff(INSERT,"¶GIPC is not checked because RMI failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):585"), Diff(DELETE,"60"), Diff(INSERT,"77"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6253" _type="PauseCommand" date="Mon Mar 28 11:33:24 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10303718">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4618]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6252" _type="ConsoleOutput" date="Mon Mar 28 11:33:24 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10303718" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@3ca9fec . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMIOneClientReadWriteNonAtomic did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*¶GIPC is not checked because RMI failed%0.0¶¶Test execution time (ms):58577"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@3ca9fec . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6254" _type="ConsoleOutput" date="Mon Mar 28 11:33:25 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10304713" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@3ca9fec . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@3ca9fec . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="6256" _type="PauseCommand" date="Mon Mar 28 11:33:34 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10313297">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8584]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6255" _type="ConsoleOutput" date="Mon Mar 28 11:33:34 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10313297" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClientConnection@1a47e207 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMI"), Diff(DELETE,"StaticArguments@3ca9fec"), Diff(INSERT,"OneClientConnection@1a47e207"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="6258" _type="PauseCommand" date="Mon Mar 28 11:33:43 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10322392">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9095]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6257" _type="ConsoleOutput" date="Mon Mar 28 11:33:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10322392" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClientReadWriteNonAtomic@13cc8953 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClient"), Diff(DELETE,"Connection@1a47e207"), Diff(INSERT,"ReadWriteNonAtomic@13cc8953"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="6260" _type="PauseCommand" date="Mon Mar 28 11:33:59 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="10338417">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16025]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6259" _type="ShellCommand" date="Mon Mar 28 11:33:59 EDT 2022" starttimestamp="1648471300703" timestamp="10338417" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6261" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:33:59 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="10339078" type="Debug" />
  <Command __id="6262" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:33:59 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="10339078" type="Run" />
  <Command __id="6263" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:33:59 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="10339078" type="Debug" />
  <Command __id="6264" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:33:59 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="10339078" type="Run" />
  <Command __id="6266" _type="PauseCommand" date="Mon Mar 28 11:34:35 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="10374686">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[35608]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6265" _type="ShellCommand" date="Mon Mar 28 11:34:35 EDT 2022" starttimestamp="1648471300703" timestamp="10374686" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6268" _type="PauseCommand" date="Mon Mar 28 11:35:34 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="10433682">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[58996]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6276" _type="RunCommand" className="/A5/src/client/Client.java" date="Mon Mar 28 11:35:53 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="10452879" type="Run" />
  <Command __id="6278" _type="ConsoleOutput" date="Mon Mar 28 11:35:53 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10453212" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.2693901468374773
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server proxy sent to RMI Registry"), Diff(INSERT,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.2693901468374773"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6279" _type="ShellCommand" date="Mon Mar 28 11:35:54 EDT 2022" starttimestamp="1648471300703" timestamp="10454000" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6281" _type="PauseCommand" date="Mon Mar 28 11:35:58 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10457546">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3546]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6280" _type="ConsoleOutput" date="Mon Mar 28 11:35:58 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10457546" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.2693901468374773 (Opened)
Client registered GIPC
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.2693901468374773"), Diff(INSERT,"Server0<-->Generic Client:0.2693901468374773 (Opened)¶Client registered GIPC"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6282" _type="ConsoleOutput" date="Mon Mar 28 11:35:58 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10457714" type="ConsoleOutput">
    <outputString><![CDATA[Client registered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.2693901468374773 (Opened)¶"), Diff(EQUAL,"Client registered"), Diff(DELETE," GIPC"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6283" _type="ConsoleOutput" date="Mon Mar 28 11:35:58 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10457718" type="ConsoleOutput">
    <outputString><![CDATA[added server as a property change listener of client
Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered"), Diff(INSERT,"added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6285" _type="PauseCommand" date="Mon Mar 28 11:36:02 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10462175">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4457]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6284" _type="ShellCommand" date="Mon Mar 28 11:36:02 EDT 2022" starttimestamp="1648471300703" timestamp="10462175" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6287" _type="PauseCommand" date="Mon Mar 28 11:36:09 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10468915">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6740]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="6286" _type="ConsoleInput" date="Mon Mar 28 11:36:09 EDT 2022" starttimestamp="1648471300703" timestamp="10468915" type="Exception">
    <outputString><![CDATA[quit
]]></outputString>
  </Command>
  <Command __id="6288" _type="ConsoleOutput" date="Mon Mar 28 11:36:09 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10468972" type="ConsoleOutput">
    <outputString><![CDATA[Enter (prefixes of) print, quit or a method and its parameters separated by commas:
quit does not match a call to one of:[public default void assignments.util.inputParameters.SimulationParametersListener.trace(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.localProcessingOnly(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String), public default void assignments.util.inputParameters.SimulationParametersListener.quit(int), public default void assignments.util.inputParameters.SimulationParametersListener.rejectMetaStateChange(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.waitForIPCMechanismConsensus(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.waitForBroadcastConsensus(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.experimentInput(), public default void assignments.util.inputParameters.SimulationParametersListener.delaySends(int), public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism), public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.consensusAlgorithm(util.interactiveMethodInvocation.ConsensusAlgorithm), public default void assignments.util.inputParameters.SimulationParametersListener.atomicBroadcast(boolean)]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶quit does not match a call to one of:[public default void assignments.util.inputParameters.SimulationParametersListener.trace(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.localProcessingOnly(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String), public default void assignments.util.inputParameters.SimulationParametersListener.quit(int), public default void assignments.util.inputParameters.SimulationParametersListener.rejectMetaStateChange(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.waitForIPCMechanismConsensus(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.waitForBroadcastConsensus(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.experimentInput(), public default void assignments.util.inputParameters.SimulationParametersListener.delaySends(int), public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism), public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean), public default void assignments.util.inputParameters.SimulationParametersListener.consensusAlgorithm(util.interactiveMethodInvocation.ConsensusAlgorithm), public default void assignments.util.inputParameters.SimulationParametersListener.atomicBroadcast(boolean)]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6290" _type="PauseCommand" date="Mon Mar 28 11:36:12 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10471857">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2885]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="6302" _type="ConsoleOutput" date="Mon Mar 28 11:36:56 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10516234" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.6414778620019566 (Opened)
Client registered GIPC
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.6414778620019566"), Diff(INSERT,"Server0<-->Generic Client:0.6414778620019566 (Opened)¶Client registered GIPC"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6304" _type="ConsoleOutput" date="Mon Mar 28 11:36:57 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10516412" type="ConsoleOutput">
    <outputString><![CDATA[added server as a property change listener of client
Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.6414778620019566 (O"), Diff(INSERT,"added server as a property change listener of client¶Command processor scanner o"), Diff(EQUAL,"pened"), Diff(DELETE,")"), Diff(EQUAL,"¶"), Diff(DELETE,"Client registered GIPC"), Diff(INSERT,"Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6305" _type="ConsoleOutput" date="Mon Mar 28 11:36:57 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10516583" type="ConsoleOutput">
    <outputString><![CDATA[Client registered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Client registered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6307" _type="PauseCommand" date="Mon Mar 28 11:36:58 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10517960">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1377]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6306" _type="ShellCommand" date="Mon Mar 28 11:36:58 EDT 2022" starttimestamp="1648471300703" timestamp="10517960" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6309" _type="PauseCommand" date="Mon Mar 28 11:37:00 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10519692">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1732]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6308" _type="ShellCommand" date="Mon Mar 28 11:37:00 EDT 2022" starttimestamp="1648471300703" timestamp="10519692" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6311" _type="PauseCommand" date="Mon Mar 28 11:38:30 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="10609504">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[89812]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6310" _type="ShellCommand" date="Mon Mar 28 11:38:30 EDT 2022" starttimestamp="1648471300703" timestamp="10609504" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6313" _type="PauseCommand" date="Mon Mar 28 11:38:45 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="10624786">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15282]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="6312" _type="ConsoleInput" date="Mon Mar 28 11:38:45 EDT 2022" starttimestamp="1648471300703" timestamp="10624786" type="Exception">
    <outputString><![CDATA[s "move 50 -50"
]]></outputString>
  </Command>
  <Command __id="6314" _type="ConsoleOutput" date="Mon Mar 28 11:38:45 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10624840" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]
Command being sent from coupler:move 50 -50
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]¶Command being sent from coupler:move 50 -50"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6315" _type="ConsoleOutput" date="Mon Mar 28 11:38:45 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="10624883" type="ConsoleOutput">
    <outputString><![CDATA[Command recieved for broadcast: move 50 -50
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]¶Command being sent from coupler:"), Diff(INSERT,"Command recieved for broadcast: "), Diff(EQUAL,"move 50 -50¶")]]]></diff>
  </Command>
  <Command __id="6317" _type="PauseCommand" date="Mon Mar 28 11:38:47 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10626940">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2057]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="6316" _type="ExceptionCommand" date="Mon Mar 28 11:38:47 EDT 2022" starttimestamp="1648471300703" timestamp="10626940" type="Exception">
    <exceptionString><![CDATA[java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.ConnectException: Connection refused to host: 152.23.70.63; nested exception is: 
	java.net.ConnectException: Connection refused: connect
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:391)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:562)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:796)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:677)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:676)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
	at java.rmi/sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:303)
	at java.rmi/sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:279)
	at java.rmi/sun.rmi.server.UnicastRef.invoke(UnicastRef.java:164)
	at java.rmi/java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:217)
	at java.rmi/java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:162)
	at com.sun.proxy.$Proxy15.broadcast(Unknown Source)
	at client.ClientOutCoupler.propertyChange(ClientOutCoupler.java:39)
	at stringProcessors.AHalloweenCommandProcessor.notifyAllListeners(AHalloweenCommandProcessor.java:456)
	at stringProcessors.AHalloweenCommandProcessor.setInputString(AHalloweenCommandProcessor.java:523)
	at client.ClientRemoteObject.simulationCommand(ClientRemoteObject.java:207)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at assignments.util.inputParameters.ASimulationParametersController.callMethod(ASimulationParametersController.java:33)
	at util.interactiveMethodInvocation.ACommandToMethodCallTranslator.processCommands(ACommandToMethodCallTranslator.java:194)
	at assignments.util.inputParameters.ASimulationParametersController.processCommands(ASimulationParametersController.java:43)
	at coupledsims.AStandAloneTwoCoupledHalloweenSimulations.start(AStandAloneTwoCoupledHalloweenSimulations.java:99)
	at client.Client.main(Client.java:14)
Caused by: java.rmi.ConnectException: Connection refused to host: 152.23.70.63; nested exception is: 
	java.net.ConnectException: Connection refused: connect
	at java.rmi/sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:623)
	at java.rmi/sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:209)
	at java.rmi/sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:196)
	at java.rmi/sun.rmi.server.UnicastRef.invoke(UnicastRef.java:132)
	at java.rmi/java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:217)
	at java.rmi/java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:162)
	at com.sun.proxy.$Proxy2.inCoupler(Unknown Source)
	at server.remote.ServerRemoteObjectGIPC.broadcast(ServerRemoteObjectGIPC.java:102)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:359)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="6242" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:32:35 EDT 2022" docASTNodeCount="798" docActiveCodeLength="5736" docExpressionCount="587" docLength="6194" projectName="A5" starttimestamp="1648471300703" timestamp="10254323">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6319" _type="PauseCommand" date="Mon Mar 28 11:39:23 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="10662805">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[35865]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6320" _type="MoveCaretCommand" caretOffset="3624" date="Mon Mar 28 11:39:23 EDT 2022" docOffset="5172" starttimestamp="1648471300703" timestamp="10662919" />
  <Command __id="6318" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:39:23 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7136" docExpressionCount="677" docLength="7834" projectName="A5" starttimestamp="1648471300703" timestamp="10662805">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6322" _type="PauseCommand" date="Mon Mar 28 11:39:27 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10666959">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4040]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6321" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:39:27 EDT 2022" docASTNodeCount="667" docActiveCodeLength="4721" docExpressionCount="483" docLength="5201" projectName="A5" starttimestamp="1648471300703" timestamp="10666959">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceRMI;¶"), Diff(INSERT,"import server.remote.ServerRemoteObjectRMI;¶"), Diff(EQUAL,"import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObject"), Diff(INSERT,"RMI"), Diff(EQUAL,"();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//int aProposalNumber = 0;
	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="6323" _type="MoveCaretCommand" caretOffset="459" date="Mon Mar 28 11:39:27 EDT 2022" docOffset="459" starttimestamp="1648471300703" timestamp="10667050" />
  <Command __id="6325" _type="MoveCaretCommand" caretOffset="341" date="Mon Mar 28 11:39:28 EDT 2022" docOffset="341" starttimestamp="1648471300703" timestamp="10667899" />
  <Command __id="6324" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:39:28 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1530" docExpressionCount="137" docLength="1530" projectName="A5" starttimestamp="1648471300703" timestamp="10667803">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceRMI ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceRMI anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6327" _type="PauseCommand" date="Mon Mar 28 11:39:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10670569">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2670]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6328" _type="MoveCaretCommand" caretOffset="3624" date="Mon Mar 28 11:39:31 EDT 2022" docOffset="5172" starttimestamp="1648471300703" timestamp="10670658" />
  <Command __id="6326" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:39:31 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7136" docExpressionCount="677" docLength="7834" projectName="A5" starttimestamp="1648471300703" timestamp="10670569">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6330" _type="PauseCommand" date="Mon Mar 28 11:39:42 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="10681713">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11055]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6331" _type="MoveCaretCommand" caretOffset="341" date="Mon Mar 28 11:39:42 EDT 2022" docOffset="341" starttimestamp="1648471300703" timestamp="10681870" />
  <Command __id="6333" _type="PauseCommand" date="Mon Mar 28 11:40:45 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="10744356">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[62486]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6332" _type="MoveCaretCommand" caretOffset="725" date="Mon Mar 28 11:40:45 EDT 2022" docOffset="725" starttimestamp="1648471300703" timestamp="10744356" />
  <Command __id="6329" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:39:42 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1530" docExpressionCount="137" docLength="1530" projectName="A5" starttimestamp="1648471300703" timestamp="10681713">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceRMI ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceRMI anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6335" _type="PauseCommand" date="Mon Mar 28 11:40:47 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10747218">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2862]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="6334" _type="Delete" date="Mon Mar 28 11:40:47 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1527" docExpressionCount="137" docLength="1527" endLine="21" length="3" offset="722" repeat="3" startLine="21" starttimestamp="1648471300703" timestamp="10747218" timestamp2="10747561">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="6336" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:40:47 EDT 2022" starttimestamp="1648471300703" timestamp="10747226" />
  <Command __id="6338" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:40:48 EDT 2022" starttimestamp="1648471300703" timestamp="10747426" />
  <Command __id="6340" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:40:48 EDT 2022" starttimestamp="1648471300703" timestamp="10747563" />
  <Command __id="6342" _type="InsertStringCommand" date="Mon Mar 28 11:40:48 EDT 2022" starttimestamp="1648471300703" timestamp="10747938" timestamp2="10747938">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6344" _type="InsertStringCommand" date="Mon Mar 28 11:40:48 EDT 2022" starttimestamp="1648471300703" timestamp="10748115" timestamp2="10748115">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6346" _type="InsertStringCommand" date="Mon Mar 28 11:40:48 EDT 2022" starttimestamp="1648471300703" timestamp="10748252" timestamp2="10748252">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6348" _type="InsertStringCommand" date="Mon Mar 28 11:40:49 EDT 2022" starttimestamp="1648471300703" timestamp="10748439" timestamp2="10748439">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6350" _type="PauseCommand" date="Mon Mar 28 11:40:51 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10750318">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1879]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6368" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:40:54 EDT 2022" starttimestamp="1648471300703" timestamp="10753321" />
  <Command __id="6370" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:40:54 EDT 2022" starttimestamp="1648471300703" timestamp="10753327" />
  <Command __id="6372" _type="PauseCommand" date="Mon Mar 28 11:40:56 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10755934">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2607]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6371" _type="ShellCommand" date="Mon Mar 28 11:40:56 EDT 2022" starttimestamp="1648471300703" timestamp="10755934" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6373" _type="ShellCommand" date="Mon Mar 28 11:40:56 EDT 2022" starttimestamp="1648471300703" timestamp="10756053" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6379" _type="PauseCommand" date="Mon Mar 28 11:40:57 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10757182">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1112]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="6378" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:40:57 EDT 2022" starttimestamp="1648471300703" timestamp="10757182" />
  <Command __id="6380" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:40:57 EDT 2022" starttimestamp="1648471300703" timestamp="10757280" />
  <Command __id="6381" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:40:58 EDT 2022" starttimestamp="1648471300703" timestamp="10757324" />
  <Command __id="6383" _type="PauseCommand" date="Mon Mar 28 11:41:05 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10764801">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7477]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6382" _type="MoveCaretCommand" caretOffset="963" date="Mon Mar 28 11:41:05 EDT 2022" docOffset="963" starttimestamp="1648471300703" timestamp="10764801" />
  <DocumentChange __id="6341" _type="Insert" date="Mon Mar 28 11:40:48 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1531" docExpressionCount="137" docLength="1531" length="4" offset="722" repeat="4" starttimestamp="1648471300703" timestamp="10747934" timestamp2="10748435">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="6351" _type="Delete" date="Mon Mar 28 11:40:51 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1528" docExpressionCount="137" docLength="1528" endLine="15" length="3" offset="546" repeat="3" startLine="15" starttimestamp="1648471300703" timestamp="10750664" timestamp2="10750956">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="6357" _type="Insert" date="Mon Mar 28 11:40:51 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1532" docExpressionCount="137" docLength="1532" length="4" offset="546" repeat="4" starttimestamp="1648471300703" timestamp="10751152" timestamp2="10751519">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="6374" _type="Delete" date="Mon Mar 28 11:40:56 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1528" docExpressionCount="137" docLength="1528" endLine="11" length="4" offset="316" startLine="9" starttimestamp="1648471300703" timestamp="10756067">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="6375" _type="Insert" date="Mon Mar 28 11:40:56 EDT 2022" docASTNodeCount="204" docActiveCodeLength="1581" docExpressionCount="142" docLength="1581" length="53" offset="316" repeat="3" starttimestamp="1648471300703" timestamp="10756070" timestamp2="10756073">
    <text><![CDATA[

import server.remote.ServerRemoteInterfaceGIPC;
]]></text>
  </DocumentChange>
  <Command __id="6385" _type="PauseCommand" date="Mon Mar 28 11:41:12 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10771313">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6512]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6386" _type="MoveCaretCommand" caretOffset="3624" date="Mon Mar 28 11:41:12 EDT 2022" docOffset="5172" starttimestamp="1648471300703" timestamp="10771398" />
  <Command __id="6384" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:41:12 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7136" docExpressionCount="677" docLength="7834" projectName="A5" starttimestamp="1648471300703" timestamp="10771313">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6388" _type="PauseCommand" date="Mon Mar 28 11:41:33 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="10793292">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[21894]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6389" _type="MoveCaretCommand" caretOffset="833" date="Mon Mar 28 11:41:34 EDT 2022" docOffset="1018" starttimestamp="1648471300703" timestamp="10793369" />
  <Command __id="6387" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:41:33 EDT 2022" docASTNodeCount="131" docActiveCodeLength="1032" docExpressionCount="77" docLength="1032" projectName="A5" starttimestamp="1648471300703" timestamp="10793292">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6391" _type="PauseCommand" date="Mon Mar 28 11:41:39 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10798794">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5425]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6392" _type="MoveCaretCommand" caretOffset="963" date="Mon Mar 28 11:41:39 EDT 2022" docOffset="963" starttimestamp="1648471300703" timestamp="10798877" />
  <Command __id="6394" _type="PauseCommand" date="Mon Mar 28 11:41:40 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10799909">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1032]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6393" _type="MoveCaretCommand" caretOffset="959" date="Mon Mar 28 11:41:40 EDT 2022" docOffset="959" starttimestamp="1648471300703" timestamp="10799909" />
  <Command __id="6395" _type="BalloonCommand" date="Mon Mar 28 11:41:40 EDT 2022" message="*******************************************
Worked 53 minutes(fixed)/56 minutes(context based) from
Mon Mar 28 10:41:40 EDT 2022 to Mon Mar 28 11:41:40 EDT 2022
Edited 1 Projects: 
	A5
Edited 6 Files: 
	C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java
	C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java
	C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectRMI.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java
Number of insert: 1964
Number of delete: 1731
" starttimestamp="1648471300703" timestamp="10800175">
    <fineGrainedWorkTime><![CDATA[56]]></fineGrainedWorkTime>
    <insert><![CDATA[1964]]></insert>
    <startTime><![CDATA[1648478500868]]></startTime>
    <endTime><![CDATA[1648482100612]]></endTime>
    <workTime><![CDATA[53]]></workTime>
    <delete><![CDATA[1731]]></delete>
  </Command>
  <Command __id="6400" _type="UndoCommand" date="Mon Mar 28 11:41:41 EDT 2022" starttimestamp="1648471300703" timestamp="10800365" />
  <Command __id="6390" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:41:39 EDT 2022" docASTNodeCount="204" docActiveCodeLength="1581" docExpressionCount="142" docLength="1581" projectName="A5" starttimestamp="1648471300703" timestamp="10798794">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶"), Diff(INSERT,"import server.remote.ServerRemoteInterfaceGIPC;¶"), Diff(EQUAL,"import server.remote.ServerRemoteInterfaceRMI;¶"), Diff(DELETE,""), Diff(EQUAL,"¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterface"), Diff(DELETE,"RMI"), Diff(INSERT,"GIPC"), Diff(EQUAL," ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterface"), Diff(DELETE,"RMI"), Diff(INSERT,"GIPC"), Diff(EQUAL," anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientOutCoupler implements PropertyChangeListener{
	ServerRemoteInterfaceGIPC ObservingServer;
	ClientRemoteInterfaceRMI originalClient;
	String ORIGINAL_CLIENT_NAME;
	
	int aProposalNumber = 0;
	
	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {
		ObservingServer = anObservingServer;
		originalClient = aClient;
		ORIGINAL_CLIENT_NAME = aClientName;
		
		
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent anEvent) {
		if (!anEvent.getPropertyName().equals("InputString")) return;
		String newCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, newCommand);
		
		System.out.println("Command being sent from coupler:" + newCommand);
		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);
		try {
			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="6396" _type="Delete" date="Mon Mar 28 11:41:41 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1528" docExpressionCount="137" docLength="1528" endLine="12" length="53" offset="316" repeat="3" startLine="9" starttimestamp="1648471300703" timestamp="10800343" timestamp2="10800354">
    <text><![CDATA[

import server.remote.ServerRemoteInterfaceGIPC;
]]></text>
  </DocumentChange>
  <DocumentChange __id="6399" _type="Insert" date="Mon Mar 28 11:41:41 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1532" docExpressionCount="137" docLength="1532" length="4" offset="316" starttimestamp="1648471300703" timestamp="10800360">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <Command __id="6402" _type="PauseCommand" date="Mon Mar 28 11:41:42 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10801568">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1203]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="6403" _type="UndoCommand" date="Mon Mar 28 11:41:42 EDT 2022" starttimestamp="1648471300703" timestamp="10801581" />
  <DocumentChange __id="6401" _type="Delete" date="Mon Mar 28 11:41:42 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1528" docExpressionCount="137" docLength="1528" endLine="15" length="4" offset="546" startLine="15" starttimestamp="1648471300703" timestamp="10801568">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="6405" _type="PauseCommand" date="Mon Mar 28 11:41:45 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10804442">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2861]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="6404" _type="Insert" date="Mon Mar 28 11:41:45 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1531" docExpressionCount="137" docLength="1531" length="3" offset="546" starttimestamp="1648471300703" timestamp="10804442">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="6406" _type="UndoCommand" date="Mon Mar 28 11:41:45 EDT 2022" starttimestamp="1648471300703" timestamp="10804447" />
  <Command __id="6408" _type="UndoCommand" date="Mon Mar 28 11:41:45 EDT 2022" starttimestamp="1648471300703" timestamp="10804847" />
  <Command __id="6410" _type="PauseCommand" date="Mon Mar 28 11:41:47 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10806705">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1858]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="6409" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:41:47 EDT 2022" starttimestamp="1648471300703" timestamp="10806705" />
  <Command __id="6411" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:41:47 EDT 2022" starttimestamp="1648471300703" timestamp="10806809" />
  <Command __id="6412" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:41:47 EDT 2022" starttimestamp="1648471300703" timestamp="10806856" />
  <DocumentChange __id="6407" _type="Delete" date="Mon Mar 28 11:41:45 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1527" docExpressionCount="137" docLength="1527" endLine="21" length="4" offset="722" startLine="21" starttimestamp="1648471300703" timestamp="10804839">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="6414" _type="PauseCommand" date="Mon Mar 28 11:41:49 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10809116">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2260]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="6415" _type="InsertStringCommand" date="Mon Mar 28 11:41:49 EDT 2022" starttimestamp="1648471300703" timestamp="10809123" timestamp2="10809123">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6417" _type="InsertStringCommand" date="Mon Mar 28 11:41:49 EDT 2022" starttimestamp="1648471300703" timestamp="10809260" timestamp2="10809260">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="6419" _type="InsertStringCommand" date="Mon Mar 28 11:41:50 EDT 2022" starttimestamp="1648471300703" timestamp="10809391" timestamp2="10809391">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6421" _type="PauseCommand" date="Mon Mar 28 11:41:51 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10810477">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1086]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="6420" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:41:51 EDT 2022" starttimestamp="1648471300703" timestamp="10810477" />
  <Command __id="6422" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:41:51 EDT 2022" starttimestamp="1648471300703" timestamp="10810574" />
  <Command __id="6423" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:41:51 EDT 2022" starttimestamp="1648471300703" timestamp="10810618" />
  <DocumentChange __id="6413" _type="Insert" date="Mon Mar 28 11:41:49 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1530" docExpressionCount="137" docLength="1530" length="3" offset="722" repeat="3" starttimestamp="1648471300703" timestamp="10809116" timestamp2="10809386">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="6425" _type="PauseCommand" date="Mon Mar 28 11:41:54 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10813545">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2927]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6426" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 11:41:54 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="10813753" />
  <Command __id="6424" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:41:54 EDT 2022" docASTNodeCount="83" docActiveCodeLength="627" docExpressionCount="53" docLength="661" projectName="A5" starttimestamp="1648471300703" timestamp="10813545">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="6428" _type="PauseCommand" date="Mon Mar 28 11:42:00 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10819516">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5763]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6429" _type="MoveCaretCommand" caretOffset="725" date="Mon Mar 28 11:42:00 EDT 2022" docOffset="725" starttimestamp="1648471300703" timestamp="10819635" />
  <Command __id="6427" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:42:00 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1530" docExpressionCount="137" docLength="1530" projectName="A5" starttimestamp="1648471300703" timestamp="10819516">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶"), Diff(DELETE,"import server.remote.ServerRemoteInterfaceGIPC;¶"), Diff(EQUAL,"import server.remote.ServerRemoteInterfaceRMI;¶"), Diff(INSERT,""), Diff(EQUAL,"¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterface"), Diff(DELETE,"GIPC"), Diff(INSERT,"RMI"), Diff(EQUAL," ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterface"), Diff(DELETE,"GIPC"), Diff(INSERT,"RMI"), Diff(EQUAL," anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientOutCoupler implements PropertyChangeListener{
	ServerRemoteInterfaceRMI ObservingServer;
	ClientRemoteInterfaceRMI originalClient;
	String ORIGINAL_CLIENT_NAME;
	
	int aProposalNumber = 0;
	
	public ClientOutCoupler (ServerRemoteInterfaceRMI anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {
		ObservingServer = anObservingServer;
		originalClient = aClient;
		ORIGINAL_CLIENT_NAME = aClientName;
		
		
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent anEvent) {
		if (!anEvent.getPropertyName().equals("InputString")) return;
		String newCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, newCommand);
		
		System.out.println("Command being sent from coupler:" + newCommand);
		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);
		try {
			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}

}
]]></snapshot>
  </Command>
  <Command __id="6431" _type="PauseCommand" date="Mon Mar 28 11:42:04 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10824161">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4526]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6432" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 11:42:05 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="10824345" />
  <Command __id="6430" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:42:04 EDT 2022" docASTNodeCount="738" docActiveCodeLength="5265" docExpressionCount="539" docLength="5757" projectName="A5" starttimestamp="1648471300703" timestamp="10824161">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6434" _type="PauseCommand" date="Mon Mar 28 11:42:45 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="10864462">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[40117]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6435" _type="MoveCaretCommand" caretOffset="725" date="Mon Mar 28 11:42:45 EDT 2022" docOffset="725" starttimestamp="1648471300703" timestamp="10864573" />
  <Command __id="6433" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:42:45 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1530" docExpressionCount="137" docLength="1530" projectName="A5" starttimestamp="1648471300703" timestamp="10864462">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceRMI ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceRMI anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6437" _type="PauseCommand" date="Mon Mar 28 11:42:49 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="10868507">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3934]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6438" _type="MoveCaretCommand" caretOffset="545" date="Mon Mar 28 11:42:49 EDT 2022" docOffset="545" starttimestamp="1648471300703" timestamp="10868585" />
  <Command __id="6436" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:42:49 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="741" projectName="A5" starttimestamp="1648471300703" timestamp="10868507">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6440" _type="PauseCommand" date="Mon Mar 28 11:42:55 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10874492">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5907]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6441" _type="MoveCaretCommand" caretOffset="833" date="Mon Mar 28 11:42:55 EDT 2022" docOffset="1018" starttimestamp="1648471300703" timestamp="10874571" />
  <Command __id="6439" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:42:55 EDT 2022" docASTNodeCount="131" docActiveCodeLength="1032" docExpressionCount="77" docLength="1032" projectName="A5" starttimestamp="1648471300703" timestamp="10874492">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6443" _type="PauseCommand" date="Mon Mar 28 11:43:00 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10879667">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5096]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6444" _type="MoveCaretCommand" caretOffset="5693" date="Mon Mar 28 11:43:00 EDT 2022" docOffset="5693" starttimestamp="1648471300703" timestamp="10879846" />
  <Command __id="6442" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:43:00 EDT 2022" docASTNodeCount="798" docActiveCodeLength="5736" docExpressionCount="587" docLength="6194" projectName="A5" starttimestamp="1648471300703" timestamp="10879667">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6446" _type="PauseCommand" date="Mon Mar 28 11:44:13 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="10952337">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[72491]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6447" _type="MoveCaretCommand" caretOffset="725" date="Mon Mar 28 11:44:13 EDT 2022" docOffset="725" starttimestamp="1648471300703" timestamp="10952424" />
  <Command __id="6445" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:44:13 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1530" docExpressionCount="137" docLength="1530" projectName="A5" starttimestamp="1648471300703" timestamp="10952337">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceRMI ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceRMI anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6449" _type="PauseCommand" date="Mon Mar 28 11:44:32 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="10971892">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[19468]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6450" _type="MoveCaretCommand" caretOffset="3624" date="Mon Mar 28 11:44:32 EDT 2022" docOffset="5172" starttimestamp="1648471300703" timestamp="10971975" />
  <Command __id="6452" _type="PauseCommand" date="Mon Mar 28 11:44:42 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="10982186">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10211]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6451" _type="MoveCaretCommand" caretOffset="4167" date="Mon Mar 28 11:44:42 EDT 2022" docOffset="5715" starttimestamp="1648471300703" timestamp="10982186" />
  <Command __id="6453" _type="MoveCaretCommand" caretOffset="4167" date="Mon Mar 28 11:44:42 EDT 2022" docOffset="5715" starttimestamp="1648471300703" timestamp="10982186" />
  <Command __id="6455" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:43 EDT 2022" starttimestamp="1648471300703" timestamp="10982774" />
  <Command __id="6456" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:43 EDT 2022" starttimestamp="1648471300703" timestamp="10982774" />
  <Command __id="6458" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:43 EDT 2022" starttimestamp="1648471300703" timestamp="10983096" />
  <Command __id="6459" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:43 EDT 2022" starttimestamp="1648471300703" timestamp="10983096" />
  <Command __id="6461" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:44 EDT 2022" starttimestamp="1648471300703" timestamp="10983463" />
  <Command __id="6462" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:44 EDT 2022" starttimestamp="1648471300703" timestamp="10983463" />
  <Command __id="6464" _type="InsertStringCommand" date="Mon Mar 28 11:44:44 EDT 2022" starttimestamp="1648471300703" timestamp="10983958" timestamp2="10983958">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6465" _type="InsertStringCommand" date="Mon Mar 28 11:44:44 EDT 2022" starttimestamp="1648471300703" timestamp="10983959" timestamp2="10983959">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6467" _type="InsertStringCommand" date="Mon Mar 28 11:44:44 EDT 2022" starttimestamp="1648471300703" timestamp="10984196" timestamp2="10984196">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6468" _type="InsertStringCommand" date="Mon Mar 28 11:44:44 EDT 2022" starttimestamp="1648471300703" timestamp="10984196" timestamp2="10984196">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6470" _type="InsertStringCommand" date="Mon Mar 28 11:44:44 EDT 2022" starttimestamp="1648471300703" timestamp="10984254" timestamp2="10984254">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6471" _type="InsertStringCommand" date="Mon Mar 28 11:44:44 EDT 2022" starttimestamp="1648471300703" timestamp="10984255" timestamp2="10984255">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6473" _type="InsertStringCommand" date="Mon Mar 28 11:44:45 EDT 2022" starttimestamp="1648471300703" timestamp="10984428" timestamp2="10984428">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6474" _type="InsertStringCommand" date="Mon Mar 28 11:44:45 EDT 2022" starttimestamp="1648471300703" timestamp="10984428" timestamp2="10984428">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6476" _type="PauseCommand" date="Mon Mar 28 11:44:46 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="10985550">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1122]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="6475" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:44:46 EDT 2022" starttimestamp="1648471300703" timestamp="10985550" />
  <Command __id="6477" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:44:46 EDT 2022" starttimestamp="1648471300703" timestamp="10985648" />
  <Command __id="6478" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:44:46 EDT 2022" starttimestamp="1648471300703" timestamp="10985676" />
  <Command __id="6480" _type="PauseCommand" date="Mon Mar 28 11:44:51 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="10990944">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5268]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6479" _type="MoveCaretCommand" caretOffset="589" date="Mon Mar 28 11:44:51 EDT 2022" docOffset="2137" starttimestamp="1648471300703" timestamp="10990944" />
  <Command __id="6481" _type="MoveCaretCommand" caretOffset="589" date="Mon Mar 28 11:44:51 EDT 2022" docOffset="2137" starttimestamp="1648471300703" timestamp="10990945" />
  <Command __id="6483" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10991368" />
  <Command __id="6484" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10991368" />
  <Command __id="6486" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10991481" />
  <Command __id="6487" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10991481" />
  <Command __id="6489" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10991618" />
  <Command __id="6490" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10991618" />
  <Command __id="6492" _type="InsertStringCommand" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10991961" timestamp2="10991961">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6493" _type="InsertStringCommand" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10991961" timestamp2="10991961">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6495" _type="InsertStringCommand" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10992138" timestamp2="10992138">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6496" _type="InsertStringCommand" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10992138" timestamp2="10992138">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6498" _type="InsertStringCommand" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10992210" timestamp2="10992210">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6499" _type="InsertStringCommand" date="Mon Mar 28 11:44:52 EDT 2022" starttimestamp="1648471300703" timestamp="10992210" timestamp2="10992210">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6501" _type="InsertStringCommand" date="Mon Mar 28 11:44:53 EDT 2022" starttimestamp="1648471300703" timestamp="10992358" timestamp2="10992358">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6502" _type="InsertStringCommand" date="Mon Mar 28 11:44:53 EDT 2022" starttimestamp="1648471300703" timestamp="10992358" timestamp2="10992358">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6503" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:44:53 EDT 2022" starttimestamp="1648471300703" timestamp="10993030" />
  <Command __id="6504" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:44:53 EDT 2022" starttimestamp="1648471300703" timestamp="10993128" />
  <Command __id="6505" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:44:53 EDT 2022" starttimestamp="1648471300703" timestamp="10993177" />
  <Command __id="6448" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:44:32 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7136" docExpressionCount="677" docLength="7834" projectName="A5" starttimestamp="1648471300703" timestamp="10971892">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="6454" _type="Delete" date="Mon Mar 28 11:44:43 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7133" docExpressionCount="677" docLength="7831" endLine="151" length="3" offset="5712" repeat="3" startLine="151" starttimestamp="1648471300703" timestamp="10982769" timestamp2="10983461">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="6463" _type="Insert" date="Mon Mar 28 11:44:44 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7137" docExpressionCount="677" docLength="7835" length="4" offset="5712" repeat="4" starttimestamp="1648471300703" timestamp="10983953" timestamp2="10984425">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="6482" _type="Delete" date="Mon Mar 28 11:44:52 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7134" docExpressionCount="677" docLength="7832" endLine="47" length="3" offset="2134" repeat="3" startLine="47" starttimestamp="1648471300703" timestamp="10991359" timestamp2="10991616">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="6491" _type="Insert" date="Mon Mar 28 11:44:52 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7138" docExpressionCount="677" docLength="7836" length="4" offset="2134" repeat="4" starttimestamp="1648471300703" timestamp="10991957" timestamp2="10992354">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="6507" _type="PauseCommand" date="Mon Mar 28 11:45:03 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="11002791">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9614]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6508" _type="MoveCaretCommand" caretOffset="725" date="Mon Mar 28 11:45:03 EDT 2022" docOffset="725" starttimestamp="1648471300703" timestamp="11002876" />
  <Command __id="6506" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:45:03 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1530" docExpressionCount="137" docLength="1530" projectName="A5" starttimestamp="1648471300703" timestamp="11002791">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceRMI ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceRMI anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6510" _type="PauseCommand" date="Mon Mar 28 11:45:05 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11005096">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2220]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="6509" _type="Delete" date="Mon Mar 28 11:45:05 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1527" docExpressionCount="137" docLength="1527" endLine="21" length="3" offset="722" repeat="3" startLine="21" starttimestamp="1648471300703" timestamp="11005096" timestamp2="11005363">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="6511" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:05 EDT 2022" starttimestamp="1648471300703" timestamp="11005103" />
  <Command __id="6512" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:05 EDT 2022" starttimestamp="1648471300703" timestamp="11005104" />
  <Command __id="6514" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:05 EDT 2022" starttimestamp="1648471300703" timestamp="11005231" />
  <Command __id="6515" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:05 EDT 2022" starttimestamp="1648471300703" timestamp="11005231" />
  <Command __id="6517" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="11005365" />
  <Command __id="6518" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="11005365" />
  <Command __id="6520" _type="InsertStringCommand" date="Mon Mar 28 11:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="11005636" timestamp2="11005636">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6521" _type="InsertStringCommand" date="Mon Mar 28 11:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="11005636" timestamp2="11005636">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6523" _type="InsertStringCommand" date="Mon Mar 28 11:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="11005755" timestamp2="11005755">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6524" _type="InsertStringCommand" date="Mon Mar 28 11:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="11005755" timestamp2="11005755">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6526" _type="InsertStringCommand" date="Mon Mar 28 11:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="11005857" timestamp2="11005857">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6527" _type="InsertStringCommand" date="Mon Mar 28 11:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="11005857" timestamp2="11005857">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6529" _type="InsertStringCommand" date="Mon Mar 28 11:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="11006057" timestamp2="11006057">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6530" _type="InsertStringCommand" date="Mon Mar 28 11:45:06 EDT 2022" starttimestamp="1648471300703" timestamp="11006057" timestamp2="11006057">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6531" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:45:07 EDT 2022" starttimestamp="1648471300703" timestamp="11006747" />
  <Command __id="6532" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:45:07 EDT 2022" starttimestamp="1648471300703" timestamp="11006852" />
  <Command __id="6533" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:45:07 EDT 2022" starttimestamp="1648471300703" timestamp="11006894" />
  <Command __id="6535" _type="PauseCommand" date="Mon Mar 28 11:45:13 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="11012463">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5569]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6534" _type="ShellCommand" date="Mon Mar 28 11:45:13 EDT 2022" starttimestamp="1648471300703" timestamp="11012463" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6536" _type="ShellCommand" date="Mon Mar 28 11:45:14 EDT 2022" starttimestamp="1648471300703" timestamp="11013395" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6537" _type="MoveCaretCommand" caretOffset="609" date="Mon Mar 28 11:45:14 EDT 2022" docOffset="609" starttimestamp="1648471300703" timestamp="11013509" />
  <Command __id="6538" _type="MoveCaretCommand" caretOffset="609" date="Mon Mar 28 11:45:14 EDT 2022" docOffset="609" starttimestamp="1648471300703" timestamp="11013509" />
  <Command __id="6540" _type="PauseCommand" date="Mon Mar 28 11:45:15 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="11014713">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1204]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6539" _type="MoveCaretCommand" caretOffset="549" date="Mon Mar 28 11:45:15 EDT 2022" docOffset="549" starttimestamp="1648471300703" timestamp="11014713" />
  <Command __id="6541" _type="MoveCaretCommand" caretOffset="549" date="Mon Mar 28 11:45:15 EDT 2022" docOffset="549" starttimestamp="1648471300703" timestamp="11014714" />
  <Command __id="6543" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:15 EDT 2022" starttimestamp="1648471300703" timestamp="11015149" />
  <Command __id="6544" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:15 EDT 2022" starttimestamp="1648471300703" timestamp="11015149" />
  <Command __id="6546" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:15 EDT 2022" starttimestamp="1648471300703" timestamp="11015290" />
  <Command __id="6547" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:15 EDT 2022" starttimestamp="1648471300703" timestamp="11015290" />
  <Command __id="6549" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:16 EDT 2022" starttimestamp="1648471300703" timestamp="11015419" />
  <Command __id="6550" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 11:45:16 EDT 2022" starttimestamp="1648471300703" timestamp="11015419" />
  <Command __id="6552" _type="InsertStringCommand" date="Mon Mar 28 11:45:16 EDT 2022" starttimestamp="1648471300703" timestamp="11015727" timestamp2="11015727">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6553" _type="InsertStringCommand" date="Mon Mar 28 11:45:16 EDT 2022" starttimestamp="1648471300703" timestamp="11015727" timestamp2="11015727">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6555" _type="InsertStringCommand" date="Mon Mar 28 11:45:16 EDT 2022" starttimestamp="1648471300703" timestamp="11015813" timestamp2="11015813">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6556" _type="InsertStringCommand" date="Mon Mar 28 11:45:16 EDT 2022" starttimestamp="1648471300703" timestamp="11015813" timestamp2="11015813">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6558" _type="InsertStringCommand" date="Mon Mar 28 11:45:16 EDT 2022" starttimestamp="1648471300703" timestamp="11015906" timestamp2="11015906">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6559" _type="InsertStringCommand" date="Mon Mar 28 11:45:16 EDT 2022" starttimestamp="1648471300703" timestamp="11015906" timestamp2="11015906">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6561" _type="InsertStringCommand" date="Mon Mar 28 11:45:16 EDT 2022" starttimestamp="1648471300703" timestamp="11016075" timestamp2="11016075">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6562" _type="InsertStringCommand" date="Mon Mar 28 11:45:16 EDT 2022" starttimestamp="1648471300703" timestamp="11016075" timestamp2="11016075">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6563" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 11:45:17 EDT 2022" starttimestamp="1648471300703" timestamp="11016661" />
  <Command __id="6564" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:45:17 EDT 2022" starttimestamp="1648471300703" timestamp="11016763" />
  <Command __id="6565" _type="EclipseCommand" commandID="" date="Mon Mar 28 11:45:17 EDT 2022" starttimestamp="1648471300703" timestamp="11016806" />
  <Command __id="6567" _type="PauseCommand" date="Mon Mar 28 11:45:26 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="11025732">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8926]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6566" _type="ShellCommand" date="Mon Mar 28 11:45:26 EDT 2022" starttimestamp="1648471300703" timestamp="11025732" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6568" _type="ShellCommand" date="Mon Mar 28 11:45:26 EDT 2022" starttimestamp="1648471300703" timestamp="11025829" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6574" _type="PauseCommand" date="Mon Mar 28 11:45:28 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11027952">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2111]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="6584" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Mar 28 11:45:39 EDT 2022" starttimestamp="1648471300703" timestamp="11039283" />
  <Command __id="6586" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:45:40 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="11039299" type="Debug" />
  <Command __id="6587" _type="ProgramExecutionEvent" className="/A5/src/server/Server.java" date="Mon Mar 28 11:45:40 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11039299" type="Run" />
  <Command __id="6588" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:45:40 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="11039299" type="Debug" />
  <Command __id="6589" _type="ProgramExecutionEvent" className="/A5/src/server/Server.java" date="Mon Mar 28 11:45:40 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11039299" type="Run" />
  <DocumentChange __id="6519" _type="Insert" date="Mon Mar 28 11:45:06 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1531" docExpressionCount="137" docLength="1531" length="4" offset="722" repeat="4" starttimestamp="1648471300703" timestamp="11005630" timestamp2="11006054">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="6542" _type="Delete" date="Mon Mar 28 11:45:15 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1528" docExpressionCount="137" docLength="1528" endLine="15" length="3" offset="546" repeat="3" startLine="15" starttimestamp="1648471300703" timestamp="11015141" timestamp2="11015416">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="6551" _type="Insert" date="Mon Mar 28 11:45:16 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1532" docExpressionCount="137" docLength="1532" length="4" offset="546" repeat="4" starttimestamp="1648471300703" timestamp="11015724" timestamp2="11016071">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="6569" _type="Delete" date="Mon Mar 28 11:45:26 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1528" docExpressionCount="137" docLength="1528" endLine="11" length="4" offset="316" startLine="9" starttimestamp="1648471300703" timestamp="11025838">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="6570" _type="Insert" date="Mon Mar 28 11:45:26 EDT 2022" docASTNodeCount="204" docActiveCodeLength="1581" docExpressionCount="142" docLength="1581" length="53" offset="316" repeat="3" starttimestamp="1648471300703" timestamp="11025841" timestamp2="11025842">
    <text><![CDATA[

import server.remote.ServerRemoteInterfaceGIPC;
]]></text>
  </DocumentChange>
  <Command __id="6591" _type="PauseCommand" date="Mon Mar 28 11:45:43 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11042844">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3545]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6592" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 11:45:43 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="11043045" />
  <Command __id="6594" _type="PauseCommand" date="Mon Mar 28 11:46:09 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="11068459">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[25414]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6593" _type="ShellCommand" date="Mon Mar 28 11:46:09 EDT 2022" starttimestamp="1648471300703" timestamp="11068459" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6596" _type="PauseCommand" date="Mon Mar 28 11:46:10 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="11070218">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1759]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6595" _type="ShellCommand" date="Mon Mar 28 11:46:10 EDT 2022" starttimestamp="1648471300703" timestamp="11070218" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6597" _type="ProgramExecutionEvent" className="/A5/src/server/Server.java" date="Mon Mar 28 11:46:11 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11070300" type="Run" />
  <Command __id="6598" _type="RunCommand" className="/A5/src/server/Server.java" date="Mon Mar 28 11:46:11 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11070300" type="Run" />
  <Command __id="6599" _type="ConsoleOutput" date="Mon Mar 28 11:46:11 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11070690" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.7199976718835678
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Server0<-->Generic Client:0.6414778620019566 (Closed)¶Explanation: An existing connection was forcibly closed by the remote host"), Diff(INSERT,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.7199976718835678"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6600" _type="ConsoleOutput" date="Mon Mar 28 11:46:12 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11071311" type="ConsoleOutput">
    <outputString><![CDATA[Server proxy sent to RMI Registry
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.7199976718835678"), Diff(INSERT,"Server proxy sent to RMI Registry"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6602" _type="PauseCommand" date="Mon Mar 28 11:46:15 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11074949">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3638]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6601" _type="ShellCommand" date="Mon Mar 28 11:46:15 EDT 2022" starttimestamp="1648471300703" timestamp="11074949" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6604" _type="PauseCommand" date="Mon Mar 28 11:46:17 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="11076630">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1681]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6603" _type="ShellCommand" date="Mon Mar 28 11:46:17 EDT 2022" starttimestamp="1648471300703" timestamp="11076630" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6605" _type="RunCommand" className="/A5/src/client/Client.java" date="Mon Mar 28 11:46:17 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11076705" type="Run" />
  <Command __id="6606" _type="ConsoleOutput" date="Mon Mar 28 11:46:17 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11077090" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.8406056624212336
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server proxy sent to RMI Registry"), Diff(INSERT,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.8406056624212336"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6607" _type="ShellCommand" date="Mon Mar 28 11:46:18 EDT 2022" starttimestamp="1648471300703" timestamp="11077940" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6609" _type="PauseCommand" date="Mon Mar 28 11:46:22 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11081584">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3644]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6608" _type="ConsoleOutput" date="Mon Mar 28 11:46:22 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11081584" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.8406056624212336 (Opened)
Client registered GIPC
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.8406056624212336"), Diff(INSERT,"Server0<-->Generic Client:0.8406056624212336 (Opened)¶Client registered GIPC"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6610" _type="ConsoleOutput" date="Mon Mar 28 11:46:22 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11081773" type="ConsoleOutput">
    <outputString><![CDATA[added server as a property change listener of client
Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.8406056624212336 (O"), Diff(INSERT,"added server as a property change listener of client¶Command processor scanner o"), Diff(EQUAL,"pened"), Diff(DELETE,")"), Diff(EQUAL,"¶"), Diff(DELETE,"Client registered GIPC"), Diff(INSERT,"Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6611" _type="ConsoleOutput" date="Mon Mar 28 11:46:22 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11081774" type="ConsoleOutput">
    <outputString><![CDATA[Client registered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Client registered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6613" _type="PauseCommand" date="Mon Mar 28 11:46:23 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="11083021">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1247]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6612" _type="ShellCommand" date="Mon Mar 28 11:46:23 EDT 2022" starttimestamp="1648471300703" timestamp="11083021" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6615" _type="PauseCommand" date="Mon Mar 28 11:46:28 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11087935">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4914]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="6614" _type="ConsoleInput" date="Mon Mar 28 11:46:28 EDT 2022" starttimestamp="1648471300703" timestamp="11087935" type="Exception">
    <outputString><![CDATA[s "move 50 -50"
]]></outputString>
  </Command>
  <Command __id="6616" _type="ConsoleOutput" date="Mon Mar 28 11:46:28 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11087988" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]
Command being sent from coupler:move 50 -50
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]¶Command being sent from coupler:move 50 -50¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6617" _type="ConsoleOutput" date="Mon Mar 28 11:46:28 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11088025" type="ConsoleOutput">
    <outputString><![CDATA[Command recieved for broadcast: move 50 -50
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]¶Command being sent from coupler:move 50 -50¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Command recieved for broadcast: move 50 -50"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6619" _type="PauseCommand" date="Mon Mar 28 11:46:35 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="11094298">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6273]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6618" _type="ShellCommand" date="Mon Mar 28 11:46:35 EDT 2022" starttimestamp="1648471300703" timestamp="11094298" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6621" _type="PauseCommand" date="Mon Mar 28 11:46:37 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11096662">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2364]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6620" _type="ShellCommand" date="Mon Mar 28 11:46:37 EDT 2022" starttimestamp="1648471300703" timestamp="11096662" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6623" _type="PauseCommand" date="Mon Mar 28 11:46:54 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="11113329">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16667]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6622" _type="ShellCommand" date="Mon Mar 28 11:46:54 EDT 2022" starttimestamp="1648471300703" timestamp="11113329" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6625" _type="PauseCommand" date="Mon Mar 28 11:46:55 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="11114710">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1381]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6624" _type="ShellCommand" date="Mon Mar 28 11:46:55 EDT 2022" starttimestamp="1648471300703" timestamp="11114710" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6626" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:46:55 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11114782" type="Run" />
  <Command __id="6628" _type="PauseCommand" date="Mon Mar 28 11:46:57 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11116898">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2116]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6627" _type="ShellCommand" date="Mon Mar 28 11:46:57 EDT 2022" starttimestamp="1648471300703" timestamp="11116898" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6630" _type="PauseCommand" date="Mon Mar 28 11:47:19 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="11138553">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[21655]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6629" _type="ConsoleOutput" date="Mon Mar 28 11:47:19 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11138553" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):19424
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Command recieved for broadcast: move 50 -50"), Diff(INSERT,"Test execution time (ms):19424"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6632" _type="PauseCommand" date="Mon Mar 28 11:47:33 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="11152939">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14386]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6631" _type="ShellCommand" date="Mon Mar 28 11:47:33 EDT 2022" starttimestamp="1648471300703" timestamp="11152939" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6634" _type="MoveCaretCommand" caretOffset="459" date="Mon Mar 28 11:47:34 EDT 2022" docOffset="459" starttimestamp="1648471300703" timestamp="11153769" />
  <Command __id="6636" _type="MoveCaretCommand" caretOffset="833" date="Mon Mar 28 11:47:35 EDT 2022" docOffset="1018" starttimestamp="1648471300703" timestamp="11154753" />
  <Command __id="6590" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:45:43 EDT 2022" docASTNodeCount="906" docActiveCodeLength="6800" docExpressionCount="636" docLength="7687" projectName="A5" starttimestamp="1648471300703" timestamp="11042844">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			// TODO Auto-generated catch block¶			e3.printStackTrace();¶		}¶		// Get server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		//NOTE This is just a hacky way of satisfying tests¶		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();¶		clientOutCoupler = new ClientOutCoupler(server, aClient, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶	¶	¶	@Override	¶	public void trace(boolean newValue) {¶		super.trace(newValue);¶		Tracer.showInfo(isTrace());¶	}¶	¶	@Override¶	public void experimentInput() {¶		long aStartTime = System.currentTimeMillis();¶		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);¶		boolean anOldValue = isTrace();¶		this.trace(false);¶		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {¶			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);¶		¶		}¶		trace(anOldValue);¶		long anEndTime = System.currentTimeMillis();¶		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);¶		¶	}¶	¶	@Override¶	/*¶	 * This override is not really needed, provided here to show that this method¶	 * exists.¶	 */¶	public void delaySends(int aMillisecondDelay) {¶		// getDelay() can be used to determine the delay¶		// in other parts of the program¶		super.delaySends(aMillisecondDelay);¶	}¶	¶	@Override¶	/**¶	 * Relevant in consistency assignments only ¶	 */¶	public void atomicBroadcast(boolean newValue) {¶		super.atomicBroadcast(newValue);¶		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6633" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:47:33 EDT 2022" docASTNodeCount="667" docActiveCodeLength="4721" docExpressionCount="483" docLength="5201" projectName="A5" starttimestamp="1648471300703" timestamp="11153148">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6635" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:47:35 EDT 2022" docASTNodeCount="131" docActiveCodeLength="1032" docExpressionCount="77" docLength="1032" projectName="A5" starttimestamp="1648471300703" timestamp="11154475">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6638" _type="PauseCommand" date="Mon Mar 28 11:47:36 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="11155761">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1008]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6659" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Mar 28 11:48:11 EDT 2022" starttimestamp="1648471300703" timestamp="11191091" />
  <Command __id="6661" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:48:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="11191125" type="Debug" />
  <Command __id="6662" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:48:11 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11191125" type="Run" />
  <Command __id="6663" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:48:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="11191125" type="Debug" />
  <Command __id="6664" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:48:11 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11191125" type="Run" />
  <Command __id="6666" _type="PauseCommand" date="Mon Mar 28 11:48:16 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11195605">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4480]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6665" _type="ShellCommand" date="Mon Mar 28 11:48:16 EDT 2022" starttimestamp="1648471300703" timestamp="11195605" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6668" _type="PauseCommand" date="Mon Mar 28 11:48:17 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="11196940">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1335]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6667" _type="ShellCommand" date="Mon Mar 28 11:48:17 EDT 2022" starttimestamp="1648471300703" timestamp="11196940" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6669" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:48:17 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11197062" type="Run" />
  <Command __id="6670" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:48:17 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11197062" type="Run" />
  <Command __id="6672" _type="PauseCommand" date="Mon Mar 28 11:48:20 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11200057">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2995]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6671" _type="ShellCommand" date="Mon Mar 28 11:48:20 EDT 2022" starttimestamp="1648471300703" timestamp="11200057" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6674" _type="PauseCommand" date="Mon Mar 28 11:48:43 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="11222628">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[22571]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6673" _type="ConsoleOutput" date="Mon Mar 28 11:48:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11222628" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):19104
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:56712 remote=localhost/127.0.0.1:10000]:An existing conn"), Diff(INSERT,"Test ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"tion "), Diff(DELETE,"was forcibly closed by the remote host"), Diff(INSERT,"time (ms):19104"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6676" _type="PauseCommand" date="Mon Mar 28 11:49:29 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="11269186">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[46558]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6675" _type="ShellCommand" date="Mon Mar 28 11:49:29 EDT 2022" starttimestamp="1648471300703" timestamp="11269186" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6678" _type="MoveCaretCommand" caretOffset="599" date="Mon Mar 28 11:49:30 EDT 2022" docOffset="599" starttimestamp="1648471300703" timestamp="11269972" />
  <Command __id="6637" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:47:36 EDT 2022" docASTNodeCount="798" docActiveCodeLength="5736" docExpressionCount="587" docLength="6194" projectName="A5" starttimestamp="1648471300703" timestamp="11155761">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6677" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:49:30 EDT 2022" docASTNodeCount="204" docActiveCodeLength="1581" docExpressionCount="142" docLength="1581" projectName="A5" starttimestamp="1648471300703" timestamp="11269423">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶"), Diff(INSERT,"import server.remote.ServerRemoteInterfaceGIPC;¶"), Diff(EQUAL,"import server.remote.ServerRemoteInterfaceRMI;¶"), Diff(DELETE,""), Diff(EQUAL,"¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterface"), Diff(DELETE,"RMI"), Diff(INSERT,"GIPC"), Diff(EQUAL," ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterface"), Diff(DELETE,"RMI"), Diff(INSERT,"GIPC"), Diff(EQUAL," anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientOutCoupler implements PropertyChangeListener{
	ServerRemoteInterfaceGIPC ObservingServer;
	ClientRemoteInterfaceRMI originalClient;
	String ORIGINAL_CLIENT_NAME;
	
	int aProposalNumber = 0;
	
	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {
		ObservingServer = anObservingServer;
		originalClient = aClient;
		ORIGINAL_CLIENT_NAME = aClientName;
		
		
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent anEvent) {
		if (!anEvent.getPropertyName().equals("InputString")) return;
		String newCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, newCommand);
		
		System.out.println("Command being sent from coupler:" + newCommand);
		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);
		try {
			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}

}
]]></snapshot>
  </Command>
  <Command __id="6680" _type="PauseCommand" date="Mon Mar 28 11:49:38 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="11277546">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7574]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6681" _type="MoveCaretCommand" caretOffset="590" date="Mon Mar 28 11:49:38 EDT 2022" docOffset="2138" starttimestamp="1648471300703" timestamp="11277834" />
  <Command __id="6683" _type="PauseCommand" date="Mon Mar 28 11:49:41 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11281265">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3431]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6682" _type="ConsoleOutput" date="Mon Mar 28 11:49:41 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11281265" type="ConsoleOutput">
    <outputString><![CDATA[
GIPCRMIOneClientConnection did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*%0.0
Test execution time (ms):58611
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶GIPCRMIOneClientConnection did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*%0.0¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"19104"), Diff(INSERT,"58611"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6685" _type="PauseCommand" date="Mon Mar 28 11:49:58 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="11297944">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16679]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6684" _type="ShellCommand" date="Mon Mar 28 11:49:58 EDT 2022" starttimestamp="1648471300703" timestamp="11297944" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6687" _type="PauseCommand" date="Mon Mar 28 11:50:15 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="11315165">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17221]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6686" _type="ShellCommand" date="Mon Mar 28 11:50:15 EDT 2022" starttimestamp="1648471300703" timestamp="11315165" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6679" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:49:38 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7138" docExpressionCount="677" docLength="7836" projectName="A5" starttimestamp="1648471300703" timestamp="11277546">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterface"), Diff(DELETE,"RMI"), Diff(INSERT,"GIPC"), Diff(EQUAL," server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterface"), Diff(DELETE,"RMI"), Diff(INSERT,"GIPC"), Diff(EQUAL,") rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
	

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}


}
]]></snapshot>
  </Command>
  <Command __id="6689" _type="PauseCommand" date="Mon Mar 28 11:50:16 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="11316177">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1012]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6690" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 11:50:17 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="11316704" />
  <Command __id="6692" _type="PauseCommand" date="Mon Mar 28 11:50:21 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11320871">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4167]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6691" _type="ShellCommand" date="Mon Mar 28 11:50:21 EDT 2022" starttimestamp="1648471300703" timestamp="11320871" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6694" _type="PauseCommand" date="Mon Mar 28 11:50:40 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="11339846">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[18975]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6693" _type="ConsoleOutput" date="Mon Mar 28 11:50:40 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11339846" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIOneClientReadWriteNonAtomic did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*
GIPC is not checked because RMI failed%0.0

Test execution time (ms):58588
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"GIPCRMIOneClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*"), Diff(INSERT,"¶GIPC is not checked because RMI failed"), Diff(EQUAL,"%0.0¶"), Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):58"), Diff(DELETE,"611"), Diff(INSERT,"588"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6696" _type="PauseCommand" date="Mon Mar 28 11:50:44 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="11343748">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3902]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6695" _type="ConsoleOutput" date="Mon Mar 28 11:50:44 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="11343748" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClientConnection@19946668 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMIOneClientReadWriteNonAtomic did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*¶GIPC is not checked because RMI failed%0.0¶¶Test ex"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIOneClientConn"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"tion"), Diff(DELETE," time (ms):58588"), Diff(INSERT,"@19946668 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6698" _type="PauseCommand" date="Mon Mar 28 11:50:50 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="11349641">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5893]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6697" _type="ShellCommand" date="Mon Mar 28 11:50:50 EDT 2022" starttimestamp="1648471300703" timestamp="11349641" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6699" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:50:51 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="11350330" type="Debug" />
  <Command __id="6700" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:50:51 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11350330" type="Run" />
  <Command __id="6701" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 11:50:51 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="11350330" type="Debug" />
  <Command __id="6702" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 11:50:51 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="11350330" type="Run" />
  <Command __id="6704" _type="PauseCommand" date="Mon Mar 28 11:50:52 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="11351489">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1159]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6703" _type="ShellCommand" date="Mon Mar 28 11:50:52 EDT 2022" starttimestamp="1648471300703" timestamp="11351489" type="ECLIPSE_MINIMIZED" />
  <Command __id="6705" _type="ShellCommand" date="Mon Mar 28 11:50:52 EDT 2022" starttimestamp="1648471300703" timestamp="11351533" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6707" _type="PauseCommand" date="Mon Mar 28 12:15:32 EDT 2022" range="20m-30m" starttimestamp="1648471300703" timestamp="12831546">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1480013]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6706" _type="ShellCommand" date="Mon Mar 28 12:15:32 EDT 2022" starttimestamp="1648471300703" timestamp="12831546" type="ECLIPSE_MAXIMIZED" />
  <Command __id="6708" _type="ShellCommand" date="Mon Mar 28 12:15:32 EDT 2022" starttimestamp="1648471300703" timestamp="12831650" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6710" _type="PauseCommand" date="Mon Mar 28 12:16:02 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="12862170">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[30520]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="6709" _type="CopyCommand" date="Mon Mar 28 12:16:02 EDT 2022" starttimestamp="1648471300703" timestamp="12862170" />
  <Command __id="6688" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 11:50:16 EDT 2022" docASTNodeCount="83" docActiveCodeLength="629" docExpressionCount="53" docLength="663" projectName="A5" starttimestamp="1648471300703" timestamp="11316177">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6712" _type="PauseCommand" date="Mon Mar 28 12:16:16 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="12875694">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[13524]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6713" _type="MoveCaretCommand" caretOffset="590" date="Mon Mar 28 12:16:16 EDT 2022" docOffset="2138" starttimestamp="1648471300703" timestamp="12875912" />
  <Command __id="6711" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:16:16 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7138" docExpressionCount="677" docLength="7836" projectName="A5" starttimestamp="1648471300703" timestamp="12875694">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6715" _type="PauseCommand" date="Mon Mar 28 12:16:18 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="12877560">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1648]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6716" _type="MoveCaretCommand" caretOffset="833" date="Mon Mar 28 12:16:18 EDT 2022" docOffset="1018" starttimestamp="1648471300703" timestamp="12877748" />
  <Command __id="6714" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:16:18 EDT 2022" docASTNodeCount="131" docActiveCodeLength="1032" docExpressionCount="77" docLength="1032" projectName="A5" starttimestamp="1648471300703" timestamp="12877560">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6718" _type="PauseCommand" date="Mon Mar 28 12:16:21 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="12880581">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2833]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="6719" _type="MoveCaretCommand" caretOffset="5693" date="Mon Mar 28 12:16:21 EDT 2022" docOffset="5693" starttimestamp="1648471300703" timestamp="12880813" />
  <Command __id="6721" _type="PauseCommand" date="Mon Mar 28 12:16:55 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="12914893">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[34080]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6717" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:16:21 EDT 2022" docASTNodeCount="798" docActiveCodeLength="5736" docExpressionCount="587" docLength="6194" projectName="A5" starttimestamp="1648471300703" timestamp="12880581">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="6720" _type="MoveCaretCommand" caretOffset="5782" date="Mon Mar 28 12:16:55 EDT 2022" docOffset="5782" starttimestamp="1648471300703" timestamp="12914893" />
  <Command __id="6722" _type="MoveCaretCommand" caretOffset="5782" date="Mon Mar 28 12:16:55 EDT 2022" docOffset="5782" starttimestamp="1648471300703" timestamp="12914893" />
  <Command __id="6723" _type="MoveCaretCommand" caretOffset="5746" date="Mon Mar 28 12:16:56 EDT 2022" docOffset="5746" starttimestamp="1648471300703" timestamp="12915859" />
  <Command __id="6724" _type="MoveCaretCommand" caretOffset="5746" date="Mon Mar 28 12:16:56 EDT 2022" docOffset="5746" starttimestamp="1648471300703" timestamp="12915859" />
  <Command __id="6726" _type="InsertStringCommand" date="Mon Mar 28 12:16:56 EDT 2022" starttimestamp="1648471300703" timestamp="12916206" timestamp2="12916206">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6727" _type="InsertStringCommand" date="Mon Mar 28 12:16:56 EDT 2022" starttimestamp="1648471300703" timestamp="12916206" timestamp2="12916206">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6729" _type="InsertStringCommand" date="Mon Mar 28 12:16:57 EDT 2022" starttimestamp="1648471300703" timestamp="12916727" timestamp2="12916727">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6730" _type="InsertStringCommand" date="Mon Mar 28 12:16:57 EDT 2022" starttimestamp="1648471300703" timestamp="12916727" timestamp2="12916727">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6732" _type="InsertStringCommand" date="Mon Mar 28 12:16:57 EDT 2022" starttimestamp="1648471300703" timestamp="12916928" timestamp2="12916928">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="6733" _type="InsertStringCommand" date="Mon Mar 28 12:16:57 EDT 2022" starttimestamp="1648471300703" timestamp="12916928" timestamp2="12916928">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="6735" _type="InsertStringCommand" date="Mon Mar 28 12:16:57 EDT 2022" starttimestamp="1648471300703" timestamp="12916964" timestamp2="12916964">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6736" _type="InsertStringCommand" date="Mon Mar 28 12:16:57 EDT 2022" starttimestamp="1648471300703" timestamp="12916964" timestamp2="12916964">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6738" _type="InsertStringCommand" date="Mon Mar 28 12:16:57 EDT 2022" starttimestamp="1648471300703" timestamp="12917141" timestamp2="12917141">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6739" _type="InsertStringCommand" date="Mon Mar 28 12:16:57 EDT 2022" starttimestamp="1648471300703" timestamp="12917141" timestamp2="12917141">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6741" _type="InsertStringCommand" date="Mon Mar 28 12:16:57 EDT 2022" starttimestamp="1648471300703" timestamp="12917282" timestamp2="12917282">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6742" _type="InsertStringCommand" date="Mon Mar 28 12:16:57 EDT 2022" starttimestamp="1648471300703" timestamp="12917282" timestamp2="12917282">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6744" _type="InsertStringCommand" date="Mon Mar 28 12:16:58 EDT 2022" starttimestamp="1648471300703" timestamp="12917477" timestamp2="12917477">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6745" _type="InsertStringCommand" date="Mon Mar 28 12:16:58 EDT 2022" starttimestamp="1648471300703" timestamp="12917477" timestamp2="12917477">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6747" _type="InsertStringCommand" date="Mon Mar 28 12:16:58 EDT 2022" starttimestamp="1648471300703" timestamp="12918001" timestamp2="12918001">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6748" _type="InsertStringCommand" date="Mon Mar 28 12:16:58 EDT 2022" starttimestamp="1648471300703" timestamp="12918001" timestamp2="12918001">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6749" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 12:16:58 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="12918022" />
  <Command __id="6754" _type="PauseCommand" date="Mon Mar 28 12:17:01 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="12921277">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3255]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="6753" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 12:17:01 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="12921277" />
  <Command __id="6755" _type="InsertStringCommand" date="Mon Mar 28 12:17:01 EDT 2022" starttimestamp="1648471300703" timestamp="12921281" timestamp2="12921281">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6756" _type="InsertStringCommand" date="Mon Mar 28 12:17:01 EDT 2022" starttimestamp="1648471300703" timestamp="12921281" timestamp2="12921281">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6758" _type="InsertStringCommand" date="Mon Mar 28 12:17:02 EDT 2022" starttimestamp="1648471300703" timestamp="12922170" timestamp2="12922170">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6759" _type="InsertStringCommand" date="Mon Mar 28 12:17:02 EDT 2022" starttimestamp="1648471300703" timestamp="12922170" timestamp2="12922170">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6760" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 12:17:02 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="12922196" />
  <Command __id="6770" _type="PauseCommand" date="Mon Mar 28 12:17:04 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="12924001">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1805]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="6769" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 12:17:04 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="12924001" />
  <Command __id="6772" _type="InsertStringCommand" date="Mon Mar 28 12:17:05 EDT 2022" starttimestamp="1648471300703" timestamp="12924496" timestamp2="12924496">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="6773" _type="InsertStringCommand" date="Mon Mar 28 12:17:05 EDT 2022" starttimestamp="1648471300703" timestamp="12924496" timestamp2="12924496">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="6775" _type="InsertStringCommand" date="Mon Mar 28 12:17:05 EDT 2022" starttimestamp="1648471300703" timestamp="12924926" timestamp2="12924926">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6776" _type="InsertStringCommand" date="Mon Mar 28 12:17:05 EDT 2022" starttimestamp="1648471300703" timestamp="12924926" timestamp2="12924926">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6779" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:06 EDT 2022" starttimestamp="1648471300703" timestamp="12925835" />
  <Command __id="6780" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:06 EDT 2022" starttimestamp="1648471300703" timestamp="12925835" />
  <Command __id="6782" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:06 EDT 2022" starttimestamp="1648471300703" timestamp="12925952" />
  <Command __id="6783" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:06 EDT 2022" starttimestamp="1648471300703" timestamp="12925952" />
  <Command __id="6785" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:07 EDT 2022" starttimestamp="1648471300703" timestamp="12926378" />
  <Command __id="6786" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:07 EDT 2022" starttimestamp="1648471300703" timestamp="12926378" />
  <Command __id="6788" _type="InsertStringCommand" date="Mon Mar 28 12:17:08 EDT 2022" starttimestamp="1648471300703" timestamp="12927353" timestamp2="12927353">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6789" _type="InsertStringCommand" date="Mon Mar 28 12:17:08 EDT 2022" starttimestamp="1648471300703" timestamp="12927353" timestamp2="12927353">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6790" _type="InsertStringCommand" date="Mon Mar 28 12:17:08 EDT 2022" starttimestamp="1648471300703" timestamp="12927369" timestamp2="12927369">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6791" _type="InsertStringCommand" date="Mon Mar 28 12:17:08 EDT 2022" starttimestamp="1648471300703" timestamp="12927369" timestamp2="12927369">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6793" _type="InsertStringCommand" date="Mon Mar 28 12:17:08 EDT 2022" starttimestamp="1648471300703" timestamp="12927973" timestamp2="12927973">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="6794" _type="InsertStringCommand" date="Mon Mar 28 12:17:08 EDT 2022" starttimestamp="1648471300703" timestamp="12927973" timestamp2="12927973">
    <data><![CDATA[;]]></data>
  </Command>
  <DocumentChange __id="6725" _type="Insert" date="Mon Mar 28 12:16:56 EDT 2022" docASTNodeCount="802" docActiveCodeLength="5750" docExpressionCount="589" docLength="6208" length="14" offset="5746" repeat="11" starttimestamp="1648471300703" timestamp="12916178" timestamp2="12919879">
    <text><![CDATA[
		System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="6757" _type="Insert" date="Mon Mar 28 12:17:02 EDT 2022" docASTNodeCount="804" docActiveCodeLength="5762" docExpressionCount="593" docLength="6220" length="12" offset="5760" repeat="11" starttimestamp="1648471300703" timestamp="12922152" timestamp2="12924919">
    <text><![CDATA[.println*=()]]></text>
  </DocumentChange>
  <DocumentChange __id="6777" _type="Delete" date="Mon Mar 28 12:17:06 EDT 2022" docASTNodeCount="804" docActiveCodeLength="5758" docExpressionCount="591" docLength="6216" endLine="188" length="4" offset="5768" repeat="4" startLine="188" starttimestamp="1648471300703" timestamp="12925811" timestamp2="12926369">
    <text><![CDATA[*=()]]></text>
  </DocumentChange>
  <Command __id="6795" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:08 EDT 2022" starttimestamp="1648471300703" timestamp="12928221" />
  <Command __id="6796" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:08 EDT 2022" starttimestamp="1648471300703" timestamp="12928229" />
  <Command __id="6797" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:09 EDT 2022" starttimestamp="1648471300703" timestamp="12928383" />
  <Command __id="6798" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:09 EDT 2022" starttimestamp="1648471300703" timestamp="12928383" />
  <Command __id="6800" _type="InsertStringCommand" date="Mon Mar 28 12:17:09 EDT 2022" starttimestamp="1648471300703" timestamp="12928897" timestamp2="12928897">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="6801" _type="InsertStringCommand" date="Mon Mar 28 12:17:09 EDT 2022" starttimestamp="1648471300703" timestamp="12928897" timestamp2="12928897">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="6802" _type="InsertStringCommand" date="Mon Mar 28 12:17:09 EDT 2022" starttimestamp="1648471300703" timestamp="12929010" timestamp2="12929010">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="6803" _type="InsertStringCommand" date="Mon Mar 28 12:17:09 EDT 2022" starttimestamp="1648471300703" timestamp="12929010" timestamp2="12929010">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="6804" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:09 EDT 2022" starttimestamp="1648471300703" timestamp="12929211" />
  <Command __id="6805" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:09 EDT 2022" starttimestamp="1648471300703" timestamp="12929211" />
  <Command __id="6808" _type="PauseCommand" date="Mon Mar 28 12:17:10 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="12930224">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1013]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="6807" _type="InsertStringCommand" date="Mon Mar 28 12:17:10 EDT 2022" starttimestamp="1648471300703" timestamp="12930224" timestamp2="12930224">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6809" _type="InsertStringCommand" date="Mon Mar 28 12:17:10 EDT 2022" starttimestamp="1648471300703" timestamp="12930224" timestamp2="12930224">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6811" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:11 EDT 2022" starttimestamp="1648471300703" timestamp="12930493" />
  <Command __id="6812" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:11 EDT 2022" starttimestamp="1648471300703" timestamp="12930493" />
  <Command __id="6814" _type="InsertStringCommand" date="Mon Mar 28 12:17:11 EDT 2022" starttimestamp="1648471300703" timestamp="12930627" timestamp2="12930627">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6815" _type="InsertStringCommand" date="Mon Mar 28 12:17:11 EDT 2022" starttimestamp="1648471300703" timestamp="12930627" timestamp2="12930627">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6817" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:11 EDT 2022" starttimestamp="1648471300703" timestamp="12930910" />
  <Command __id="6818" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:11 EDT 2022" starttimestamp="1648471300703" timestamp="12930910" />
  <Command __id="6820" _type="InsertStringCommand" date="Mon Mar 28 12:17:11 EDT 2022" starttimestamp="1648471300703" timestamp="12931002" timestamp2="12931002">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6821" _type="InsertStringCommand" date="Mon Mar 28 12:17:11 EDT 2022" starttimestamp="1648471300703" timestamp="12931002" timestamp2="12931002">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6823" _type="InsertStringCommand" date="Mon Mar 28 12:17:11 EDT 2022" starttimestamp="1648471300703" timestamp="12931098" timestamp2="12931098">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6824" _type="InsertStringCommand" date="Mon Mar 28 12:17:11 EDT 2022" starttimestamp="1648471300703" timestamp="12931098" timestamp2="12931098">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6826" _type="InsertStringCommand" date="Mon Mar 28 12:17:12 EDT 2022" starttimestamp="1648471300703" timestamp="12931446" timestamp2="12931446">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6827" _type="InsertStringCommand" date="Mon Mar 28 12:17:12 EDT 2022" starttimestamp="1648471300703" timestamp="12931446" timestamp2="12931446">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6829" _type="InsertStringCommand" date="Mon Mar 28 12:17:12 EDT 2022" starttimestamp="1648471300703" timestamp="12931817" timestamp2="12931817">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6830" _type="InsertStringCommand" date="Mon Mar 28 12:17:12 EDT 2022" starttimestamp="1648471300703" timestamp="12931817" timestamp2="12931817">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6832" _type="InsertStringCommand" date="Mon Mar 28 12:17:12 EDT 2022" starttimestamp="1648471300703" timestamp="12932170" timestamp2="12932170">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6833" _type="InsertStringCommand" date="Mon Mar 28 12:17:12 EDT 2022" starttimestamp="1648471300703" timestamp="12932170" timestamp2="12932170">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6835" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12932310" timestamp2="12932310">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6836" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12932310" timestamp2="12932310">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6838" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12932451" timestamp2="12932451">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6839" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12932451" timestamp2="12932451">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6841" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12932607" timestamp2="12932607">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6842" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12932607" timestamp2="12932607">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6844" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12932794" timestamp2="12932794">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="6845" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12932794" timestamp2="12932794">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="6847" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12932969" timestamp2="12932969">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6848" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12932969" timestamp2="12932969">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6850" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12933076" timestamp2="12933076">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6851" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12933076" timestamp2="12933076">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6853" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12933210" timestamp2="12933210">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6854" _type="InsertStringCommand" date="Mon Mar 28 12:17:13 EDT 2022" starttimestamp="1648471300703" timestamp="12933210" timestamp2="12933210">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6856" _type="InsertStringCommand" date="Mon Mar 28 12:17:14 EDT 2022" starttimestamp="1648471300703" timestamp="12933312" timestamp2="12933312">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6857" _type="InsertStringCommand" date="Mon Mar 28 12:17:14 EDT 2022" starttimestamp="1648471300703" timestamp="12933312" timestamp2="12933312">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6859" _type="InsertStringCommand" date="Mon Mar 28 12:17:14 EDT 2022" starttimestamp="1648471300703" timestamp="12933443" timestamp2="12933443">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="6860" _type="InsertStringCommand" date="Mon Mar 28 12:17:14 EDT 2022" starttimestamp="1648471300703" timestamp="12933443" timestamp2="12933443">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="6862" _type="InsertStringCommand" date="Mon Mar 28 12:17:14 EDT 2022" starttimestamp="1648471300703" timestamp="12933481" timestamp2="12933481">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6863" _type="InsertStringCommand" date="Mon Mar 28 12:17:14 EDT 2022" starttimestamp="1648471300703" timestamp="12933481" timestamp2="12933481">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6865" _type="InsertStringCommand" date="Mon Mar 28 12:17:14 EDT 2022" starttimestamp="1648471300703" timestamp="12933690" timestamp2="12933690">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="6866" _type="InsertStringCommand" date="Mon Mar 28 12:17:14 EDT 2022" starttimestamp="1648471300703" timestamp="12933690" timestamp2="12933690">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="6868" _type="InsertStringCommand" date="Mon Mar 28 12:17:14 EDT 2022" starttimestamp="1648471300703" timestamp="12934020" timestamp2="12934020">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="6869" _type="InsertStringCommand" date="Mon Mar 28 12:17:14 EDT 2022" starttimestamp="1648471300703" timestamp="12934020" timestamp2="12934020">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="6870" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 12:17:15 EDT 2022" starttimestamp="1648471300703" timestamp="12934897" />
  <Command __id="6871" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 12:17:15 EDT 2022" starttimestamp="1648471300703" timestamp="12934897" />
  <Command __id="6873" _type="InsertStringCommand" date="Mon Mar 28 12:17:15 EDT 2022" starttimestamp="1648471300703" timestamp="12935236" timestamp2="12935236">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="6874" _type="InsertStringCommand" date="Mon Mar 28 12:17:15 EDT 2022" starttimestamp="1648471300703" timestamp="12935236" timestamp2="12935236">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="6876" _type="InsertStringCommand" date="Mon Mar 28 12:17:16 EDT 2022" starttimestamp="1648471300703" timestamp="12935393" timestamp2="12935393">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6877" _type="InsertStringCommand" date="Mon Mar 28 12:17:16 EDT 2022" starttimestamp="1648471300703" timestamp="12935393" timestamp2="12935393">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6879" _type="InsertStringCommand" date="Mon Mar 28 12:17:16 EDT 2022" starttimestamp="1648471300703" timestamp="12935823" timestamp2="12935823">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6880" _type="InsertStringCommand" date="Mon Mar 28 12:17:16 EDT 2022" starttimestamp="1648471300703" timestamp="12935823" timestamp2="12935823">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="6882" _type="InsertStringCommand" date="Mon Mar 28 12:17:16 EDT 2022" starttimestamp="1648471300703" timestamp="12935960" timestamp2="12935960">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6883" _type="InsertStringCommand" date="Mon Mar 28 12:17:16 EDT 2022" starttimestamp="1648471300703" timestamp="12935960" timestamp2="12935960">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="6885" _type="InsertStringCommand" date="Mon Mar 28 12:17:17 EDT 2022" starttimestamp="1648471300703" timestamp="12936387" timestamp2="12936387">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6886" _type="InsertStringCommand" date="Mon Mar 28 12:17:17 EDT 2022" starttimestamp="1648471300703" timestamp="12936387" timestamp2="12936387">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6888" _type="InsertStringCommand" date="Mon Mar 28 12:17:17 EDT 2022" starttimestamp="1648471300703" timestamp="12936922" timestamp2="12936922">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6889" _type="InsertStringCommand" date="Mon Mar 28 12:17:17 EDT 2022" starttimestamp="1648471300703" timestamp="12936922" timestamp2="12936922">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="6891" _type="InsertStringCommand" date="Mon Mar 28 12:17:17 EDT 2022" starttimestamp="1648471300703" timestamp="12937133" timestamp2="12937133">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="6892" _type="InsertStringCommand" date="Mon Mar 28 12:17:17 EDT 2022" starttimestamp="1648471300703" timestamp="12937133" timestamp2="12937133">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="6894" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12937355" timestamp2="12937355">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6895" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12937355" timestamp2="12937355">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6897" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12937467" timestamp2="12937467">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6898" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12937467" timestamp2="12937467">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6900" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12937579" timestamp2="12937579">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6901" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12937579" timestamp2="12937579">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6903" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12937835" timestamp2="12937835">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="6904" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12937835" timestamp2="12937835">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="6906" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12938134" timestamp2="12938134">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6907" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12938134" timestamp2="12938134">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6909" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12938152" timestamp2="12938152">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6910" _type="InsertStringCommand" date="Mon Mar 28 12:17:18 EDT 2022" starttimestamp="1648471300703" timestamp="12938152" timestamp2="12938152">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6912" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:19 EDT 2022" starttimestamp="1648471300703" timestamp="12938694" />
  <Command __id="6913" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:19 EDT 2022" starttimestamp="1648471300703" timestamp="12938694" />
  <Command __id="6915" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:19 EDT 2022" starttimestamp="1648471300703" timestamp="12938795" />
  <Command __id="6916" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:19 EDT 2022" starttimestamp="1648471300703" timestamp="12938795" />
  <Command __id="6918" _type="InsertStringCommand" date="Mon Mar 28 12:17:19 EDT 2022" starttimestamp="1648471300703" timestamp="12938869" timestamp2="12938869">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6919" _type="InsertStringCommand" date="Mon Mar 28 12:17:19 EDT 2022" starttimestamp="1648471300703" timestamp="12938869" timestamp2="12938869">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6921" _type="InsertStringCommand" date="Mon Mar 28 12:17:19 EDT 2022" starttimestamp="1648471300703" timestamp="12938942" timestamp2="12938942">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6922" _type="InsertStringCommand" date="Mon Mar 28 12:17:19 EDT 2022" starttimestamp="1648471300703" timestamp="12938942" timestamp2="12938942">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6924" _type="InsertStringCommand" date="Mon Mar 28 12:17:19 EDT 2022" starttimestamp="1648471300703" timestamp="12939144" timestamp2="12939144">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="6925" _type="InsertStringCommand" date="Mon Mar 28 12:17:19 EDT 2022" starttimestamp="1648471300703" timestamp="12939144" timestamp2="12939144">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="6927" _type="InsertStringCommand" date="Mon Mar 28 12:17:20 EDT 2022" starttimestamp="1648471300703" timestamp="12939435" timestamp2="12939435">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6928" _type="InsertStringCommand" date="Mon Mar 28 12:17:20 EDT 2022" starttimestamp="1648471300703" timestamp="12939435" timestamp2="12939435">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6930" _type="InsertStringCommand" date="Mon Mar 28 12:17:20 EDT 2022" starttimestamp="1648471300703" timestamp="12939552" timestamp2="12939552">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="6931" _type="InsertStringCommand" date="Mon Mar 28 12:17:20 EDT 2022" starttimestamp="1648471300703" timestamp="12939552" timestamp2="12939552">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="6933" _type="InsertStringCommand" date="Mon Mar 28 12:17:20 EDT 2022" starttimestamp="1648471300703" timestamp="12939636" timestamp2="12939636">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6934" _type="InsertStringCommand" date="Mon Mar 28 12:17:20 EDT 2022" starttimestamp="1648471300703" timestamp="12939636" timestamp2="12939636">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="6936" _type="InsertStringCommand" date="Mon Mar 28 12:17:20 EDT 2022" starttimestamp="1648471300703" timestamp="12939862" timestamp2="12939862">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="6937" _type="InsertStringCommand" date="Mon Mar 28 12:17:20 EDT 2022" starttimestamp="1648471300703" timestamp="12939862" timestamp2="12939862">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="6939" _type="PauseCommand" date="Mon Mar 28 12:17:21 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="12941151">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1289]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="6938" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 12:17:21 EDT 2022" starttimestamp="1648471300703" timestamp="12941151" />
  <Command __id="6940" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:17:21 EDT 2022" starttimestamp="1648471300703" timestamp="12941241" />
  <Command __id="6941" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:17:21 EDT 2022" starttimestamp="1648471300703" timestamp="12941280" />
  <Command __id="6943" _type="PauseCommand" date="Mon Mar 28 12:17:31 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="12950431">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9151]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6942" _type="MoveCaretCommand" caretOffset="5790" date="Mon Mar 28 12:17:31 EDT 2022" docOffset="5790" starttimestamp="1648471300703" timestamp="12950431" />
  <Command __id="6944" _type="MoveCaretCommand" caretOffset="5790" date="Mon Mar 28 12:17:31 EDT 2022" docOffset="5790" starttimestamp="1648471300703" timestamp="12950431" />
  <DocumentChange __id="6787" _type="Insert" date="Mon Mar 28 12:17:08 EDT 2022" docASTNodeCount="805" docActiveCodeLength="5764" docExpressionCount="593" docLength="6222" length="6" offset="5768" repeat="4" starttimestamp="1648471300703" timestamp="12927345" timestamp2="12930213">
    <text><![CDATA[("S");]]></text>
  </DocumentChange>
  <DocumentChange __id="6810" _type="Delete" date="Mon Mar 28 12:17:11 EDT 2022" docASTNodeCount="805" docActiveCodeLength="5763" docExpressionCount="593" docLength="6221" endLine="188" length="1" offset="5770" startLine="188" starttimestamp="1648471300703" timestamp="12930485">
    <text><![CDATA[S]]></text>
  </DocumentChange>
  <DocumentChange __id="6813" _type="Insert" date="Mon Mar 28 12:17:11 EDT 2022" docASTNodeCount="805" docActiveCodeLength="5764" docExpressionCount="593" docLength="6222" length="1" offset="5770" starttimestamp="1648471300703" timestamp="12930619">
    <text><![CDATA[C]]></text>
  </DocumentChange>
  <DocumentChange __id="6816" _type="Delete" date="Mon Mar 28 12:17:11 EDT 2022" docASTNodeCount="805" docActiveCodeLength="5763" docExpressionCount="593" docLength="6221" endLine="188" length="1" offset="5770" startLine="188" starttimestamp="1648471300703" timestamp="12930899">
    <text><![CDATA[C]]></text>
  </DocumentChange>
  <DocumentChange __id="6819" _type="Insert" date="Mon Mar 28 12:17:11 EDT 2022" docASTNodeCount="805" docActiveCodeLength="5780" docExpressionCount="593" docLength="6238" length="17" offset="5770" repeat="17" starttimestamp="1648471300703" timestamp="12930987" timestamp2="12934002">
    <text><![CDATA[GIPC SERVER PORT:]]></text>
  </DocumentChange>
  <DocumentChange __id="6872" _type="Insert" date="Mon Mar 28 12:17:15 EDT 2022" docASTNodeCount="806" docActiveCodeLength="5793" docExpressionCount="594" docLength="6251" length="13" offset="5788" repeat="13" starttimestamp="1648471300703" timestamp="12935219" timestamp2="12938142">
    <text><![CDATA[, GIPC_SERVRE]]></text>
  </DocumentChange>
  <DocumentChange __id="6911" _type="Delete" date="Mon Mar 28 12:17:19 EDT 2022" docASTNodeCount="806" docActiveCodeLength="5791" docExpressionCount="594" docLength="6249" endLine="188" length="2" offset="5799" repeat="2" startLine="188" starttimestamp="1648471300703" timestamp="12938685" timestamp2="12938787">
    <text><![CDATA[RE]]></text>
  </DocumentChange>
  <DocumentChange __id="6917" _type="Insert" date="Mon Mar 28 12:17:19 EDT 2022" docASTNodeCount="806" docActiveCodeLength="5798" docExpressionCount="594" docLength="6256" length="7" offset="5799" repeat="7" starttimestamp="1648471300703" timestamp="12938860" timestamp2="12939851">
    <text><![CDATA[ER_PORT]]></text>
  </DocumentChange>
  <Command __id="6946" _type="PauseCommand" date="Mon Mar 28 12:17:32 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="12951486">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1055]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="6947" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12951502" timestamp2="12951502">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6948" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12951502" timestamp2="12951502">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6950" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12951710" timestamp2="12951710">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6951" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12951710" timestamp2="12951710">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6953" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12952024" timestamp2="12952024">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6954" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12952024" timestamp2="12952024">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6956" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12952092" timestamp2="12952092">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6957" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12952092" timestamp2="12952092">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6959" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12952162" timestamp2="12952162">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6960" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12952170" timestamp2="12952170">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6962" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12952277" timestamp2="12952277">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6963" _type="InsertStringCommand" date="Mon Mar 28 12:17:32 EDT 2022" starttimestamp="1648471300703" timestamp="12952277" timestamp2="12952277">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6965" _type="InsertStringCommand" date="Mon Mar 28 12:17:33 EDT 2022" starttimestamp="1648471300703" timestamp="12953117" timestamp2="12953117">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6966" _type="InsertStringCommand" date="Mon Mar 28 12:17:33 EDT 2022" starttimestamp="1648471300703" timestamp="12953117" timestamp2="12953117">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6968" _type="InsertStringCommand" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12953468" timestamp2="12953468">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6969" _type="InsertStringCommand" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12953468" timestamp2="12953468">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6970" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12953632" />
  <Command __id="6971" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12953632" />
  <Command __id="6972" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12953823" />
  <Command __id="6973" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12953823" />
  <Command __id="6974" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12953968" />
  <Command __id="6975" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12953968" />
  <Command __id="6976" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12954110" />
  <Command __id="6977" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12954110" />
  <Command __id="6978" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12954267" />
  <Command __id="6979" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:34 EDT 2022" starttimestamp="1648471300703" timestamp="12954267" />
  <Command __id="6980" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:35 EDT 2022" starttimestamp="1648471300703" timestamp="12954445" />
  <Command __id="6981" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:35 EDT 2022" starttimestamp="1648471300703" timestamp="12954445" />
  <Command __id="6982" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:35 EDT 2022" starttimestamp="1648471300703" timestamp="12954610" />
  <Command __id="6983" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:35 EDT 2022" starttimestamp="1648471300703" timestamp="12954610" />
  <Command __id="6984" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:35 EDT 2022" starttimestamp="1648471300703" timestamp="12954834" />
  <Command __id="6985" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:17:35 EDT 2022" starttimestamp="1648471300703" timestamp="12954834" />
  <Command __id="6987" _type="InsertStringCommand" date="Mon Mar 28 12:17:36 EDT 2022" starttimestamp="1648471300703" timestamp="12955382" timestamp2="12955382">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6988" _type="InsertStringCommand" date="Mon Mar 28 12:17:36 EDT 2022" starttimestamp="1648471300703" timestamp="12955382" timestamp2="12955382">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6989" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 12:17:36 EDT 2022" starttimestamp="1648471300703" timestamp="12955794" />
  <Command __id="6990" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 12:17:36 EDT 2022" starttimestamp="1648471300703" timestamp="12955794" />
  <Command __id="6992" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:36 EDT 2022" starttimestamp="1648471300703" timestamp="12956127" />
  <Command __id="6993" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:17:36 EDT 2022" starttimestamp="1648471300703" timestamp="12956127" />
  <Command __id="6995" _type="InsertStringCommand" date="Mon Mar 28 12:17:37 EDT 2022" starttimestamp="1648471300703" timestamp="12956367" timestamp2="12956367">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6996" _type="InsertStringCommand" date="Mon Mar 28 12:17:37 EDT 2022" starttimestamp="1648471300703" timestamp="12956367" timestamp2="12956367">
    <data><![CDATA[S]]></data>
  </Command>
  <DocumentChange __id="6945" _type="Insert" date="Mon Mar 28 12:17:32 EDT 2022" docASTNodeCount="809" docActiveCodeLength="5807" docExpressionCount="596" docLength="6265" length="9" offset="5790" repeat="9" starttimestamp="1648471300703" timestamp="12951486" timestamp2="12955355">
    <text><![CDATA[(string) ]]></text>
  </DocumentChange>
  <DocumentChange __id="6991" _type="Delete" date="Mon Mar 28 12:17:36 EDT 2022" docASTNodeCount="809" docActiveCodeLength="5806" docExpressionCount="596" docLength="6264" endLine="188" length="1" offset="5791" startLine="188" starttimestamp="1648471300703" timestamp="12956118">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="6994" _type="Insert" date="Mon Mar 28 12:17:37 EDT 2022" docASTNodeCount="809" docActiveCodeLength="5807" docExpressionCount="596" docLength="6265" length="1" offset="5791" starttimestamp="1648471300703" timestamp="12956347">
    <text><![CDATA[S]]></text>
  </DocumentChange>
  <Command __id="6998" _type="PauseCommand" date="Mon Mar 28 12:17:39 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="12958685">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2318]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="6997" _type="Delete" date="Mon Mar 28 12:17:39 EDT 2022" docASTNodeCount="809" docActiveCodeLength="5806" docExpressionCount="596" docLength="6264" endLine="188" length="1" offset="5791" startLine="188" starttimestamp="1648471300703" timestamp="12958685">
    <text><![CDATA[S]]></text>
  </DocumentChange>
  <Command __id="6999" _type="UndoCommand" date="Mon Mar 28 12:17:39 EDT 2022" starttimestamp="1648471300703" timestamp="12958710" />
  <DocumentChange __id="7000" _type="Insert" date="Mon Mar 28 12:17:39 EDT 2022" docASTNodeCount="809" docActiveCodeLength="5807" docExpressionCount="596" docLength="6265" length="1" offset="5791" starttimestamp="1648471300703" timestamp="12959151">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <Command __id="7001" _type="UndoCommand" date="Mon Mar 28 12:17:39 EDT 2022" starttimestamp="1648471300703" timestamp="12959175" />
  <Command __id="7003" _type="UndoCommand" date="Mon Mar 28 12:17:40 EDT 2022" starttimestamp="1648471300703" timestamp="12959812" />
  <Command __id="7005" _type="UndoCommand" date="Mon Mar 28 12:17:41 EDT 2022" starttimestamp="1648471300703" timestamp="12960318" />
  <Command __id="7007" _type="PauseCommand" date="Mon Mar 28 12:17:52 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="12971836">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[11518]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7006" _type="ShellCommand" date="Mon Mar 28 12:17:52 EDT 2022" starttimestamp="1648471300703" timestamp="12971836" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7008" _type="ShellCommand" date="Mon Mar 28 12:17:52 EDT 2022" starttimestamp="1648471300703" timestamp="12972021" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7012" _type="PauseCommand" date="Mon Mar 28 12:17:55 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="12974619">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[2571]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7011" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 12:17:55 EDT 2022" starttimestamp="1648471300703" timestamp="12974619" />
  <Command __id="7013" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:17:55 EDT 2022" starttimestamp="1648471300703" timestamp="12974700" />
  <Command __id="7014" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:17:55 EDT 2022" starttimestamp="1648471300703" timestamp="12974732" />
  <Command __id="7016" _type="PauseCommand" date="Mon Mar 28 12:17:58 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="12978117">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3385]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7015" _type="SelectTextCommand" caretOffset="5750" date="Mon Mar 28 12:17:58 EDT 2022" end="5787" start="5750" starttimestamp="1648471300703" timestamp="12978117" />
  <Command __id="7017" _type="SelectTextCommand" caretOffset="5750" date="Mon Mar 28 12:17:58 EDT 2022" end="5787" start="5750" starttimestamp="1648471300703" timestamp="12978117" />
  <Command __id="7018" _type="CopyCommand" date="Mon Mar 28 12:17:59 EDT 2022" starttimestamp="1648471300703" timestamp="12978387" />
  <Command __id="7019" _type="MoveCaretCommand" caretOffset="5746" date="Mon Mar 28 12:18:00 EDT 2022" docOffset="5746" starttimestamp="1648471300703" timestamp="12979351" />
  <Command __id="7020" _type="MoveCaretCommand" caretOffset="5746" date="Mon Mar 28 12:18:00 EDT 2022" docOffset="5746" starttimestamp="1648471300703" timestamp="12979351" />
  <Command __id="7022" _type="PasteCommand" date="Mon Mar 28 12:18:00 EDT 2022" starttimestamp="1648471300703" timestamp="12979919" />
  <Command __id="7024" _type="PauseCommand" date="Mon Mar 28 12:18:02 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="12981380">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1461]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7023" _type="MoveCaretCommand" caretOffset="5765" date="Mon Mar 28 12:18:02 EDT 2022" docOffset="5765" starttimestamp="1648471300703" timestamp="12981380" />
  <Command __id="7025" _type="MoveCaretCommand" caretOffset="5765" date="Mon Mar 28 12:18:02 EDT 2022" docOffset="5765" starttimestamp="1648471300703" timestamp="12981380" />
  <Command __id="7027" _type="InsertStringCommand" date="Mon Mar 28 12:18:02 EDT 2022" starttimestamp="1648471300703" timestamp="12981975" timestamp2="12981975">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="7028" _type="InsertStringCommand" date="Mon Mar 28 12:18:02 EDT 2022" starttimestamp="1648471300703" timestamp="12981975" timestamp2="12981975">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="7030" _type="PauseCommand" date="Mon Mar 28 12:18:03 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="12983287">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1312]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7029" _type="MoveCaretCommand" caretOffset="5782" date="Mon Mar 28 12:18:03 EDT 2022" docOffset="5782" starttimestamp="1648471300703" timestamp="12983287" />
  <Command __id="7031" _type="MoveCaretCommand" caretOffset="5782" date="Mon Mar 28 12:18:03 EDT 2022" docOffset="5782" starttimestamp="1648471300703" timestamp="12983287" />
  <Command __id="7033" _type="InsertStringCommand" date="Mon Mar 28 12:18:04 EDT 2022" starttimestamp="1648471300703" timestamp="12983909" timestamp2="12983909">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="7034" _type="InsertStringCommand" date="Mon Mar 28 12:18:04 EDT 2022" starttimestamp="1648471300703" timestamp="12983909" timestamp2="12983909">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="7035" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 12:18:05 EDT 2022" starttimestamp="1648471300703" timestamp="12984389" />
  <Command __id="7036" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:18:05 EDT 2022" starttimestamp="1648471300703" timestamp="12984472" />
  <Command __id="7037" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:18:05 EDT 2022" starttimestamp="1648471300703" timestamp="12984501" />
  <Command __id="7038" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:18:05 EDT 2022" starttimestamp="1648471300703" timestamp="12985217" />
  <Command __id="7039" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:18:05 EDT 2022" starttimestamp="1648471300703" timestamp="12985217" />
  <Command __id="7041" _type="InsertStringCommand" date="Mon Mar 28 12:18:06 EDT 2022" starttimestamp="1648471300703" timestamp="12985909" timestamp2="12985909">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="7042" _type="InsertStringCommand" date="Mon Mar 28 12:18:06 EDT 2022" starttimestamp="1648471300703" timestamp="12985909" timestamp2="12985909">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="7043" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 12:18:07 EDT 2022" starttimestamp="1648471300703" timestamp="12986403" />
  <Command __id="7044" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:18:07 EDT 2022" starttimestamp="1648471300703" timestamp="12986488" />
  <Command __id="7045" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:18:07 EDT 2022" starttimestamp="1648471300703" timestamp="12986531" />
  <Command __id="7047" _type="InsertStringCommand" date="Mon Mar 28 12:18:07 EDT 2022" starttimestamp="1648471300703" timestamp="12986810" timestamp2="12986810">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7048" _type="InsertStringCommand" date="Mon Mar 28 12:18:07 EDT 2022" starttimestamp="1648471300703" timestamp="12986810" timestamp2="12986810">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7049" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 12:18:08 EDT 2022" starttimestamp="1648471300703" timestamp="12987351" />
  <Command __id="7050" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:18:08 EDT 2022" starttimestamp="1648471300703" timestamp="12987547" />
  <Command __id="7051" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:18:08 EDT 2022" starttimestamp="1648471300703" timestamp="12987584" />
  <Command __id="7053" _type="PauseCommand" date="Mon Mar 28 12:18:13 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="12992303">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4719]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7052" _type="ShellCommand" date="Mon Mar 28 12:18:13 EDT 2022" starttimestamp="1648471300703" timestamp="12992303" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7055" _type="PauseCommand" date="Mon Mar 28 12:18:14 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="12993668">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1365]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7054" _type="ShellCommand" date="Mon Mar 28 12:18:14 EDT 2022" starttimestamp="1648471300703" timestamp="12993668" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7056" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 12:18:14 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="12993781" type="Run" />
  <Command __id="7057" _type="RunCommand" className="/A5/src/checks/Checks.java" date="Mon Mar 28 12:18:14 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="12993781" type="Run" />
  <Command __id="7058" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:18:14 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="12994001" type="Run" />
  <Command __id="7059" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:18:14 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="12994025" type="Run" />
  <Command __id="7060" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:18:14 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="12994026" type="Run" />
  <Command __id="7062" _type="PauseCommand" date="Mon Mar 28 12:18:18 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="12997637">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3611]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7071" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:18:29 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13009007" type="Run" />
  <Command __id="7073" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:18:29 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13009015" type="Run" />
  <Command __id="7075" _type="PauseCommand" date="Mon Mar 28 12:18:36 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="13015339">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[6324]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7083" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:18:44 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13023319" type="Run" />
  <Command __id="7085" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:18:44 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13023321" type="Run" />
  <Command __id="7087" _type="PauseCommand" date="Mon Mar 28 12:18:57 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="13036819">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[13498]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="7086" _type="CopyCommand" date="Mon Mar 28 12:18:57 EDT 2022" starttimestamp="1648471300703" timestamp="13036819" />
  <Command __id="7088" _type="ShellCommand" date="Mon Mar 28 12:18:58 EDT 2022" starttimestamp="1648471300703" timestamp="13037757" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7090" _type="PauseCommand" date="Mon Mar 28 12:19:23 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="13063003">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[25246]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7098" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:19:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13081935" type="Run" />
  <Command __id="7100" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:19:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13081939" type="Run" />
  <Command __id="7102" _type="PauseCommand" date="Mon Mar 28 12:20:39 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="13139016">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[57077]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="7101" _type="ConsoleOutput" date="Mon Mar 28 12:20:39 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="13139016" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMIOneClientReadWriteNonAtomic did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*
GIPC is not checked because RMI failed%0.0

Test execution time (ms):58606
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMIOneClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*"), Diff(INSERT,"¶GIPC is not checked because RMI failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):58"), Diff(DELETE,"595"), Diff(INSERT,"606"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7104" _type="PauseCommand" date="Mon Mar 28 12:20:46 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="13145874">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6858]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7103" _type="ShellCommand" date="Mon Mar 28 12:20:46 EDT 2022" starttimestamp="1648471300703" timestamp="13145874" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7106" _type="PauseCommand" date="Mon Mar 28 12:21:09 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="13169203">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[23329]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7105" _type="ShellCommand" date="Mon Mar 28 12:21:09 EDT 2022" starttimestamp="1648471300703" timestamp="13169203" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7108" _type="PauseCommand" date="Mon Mar 28 12:21:23 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="13183268">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14065]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7107" _type="ShellCommand" date="Mon Mar 28 12:21:23 EDT 2022" starttimestamp="1648471300703" timestamp="13183268" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7110" _type="PauseCommand" date="Mon Mar 28 12:21:25 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="13185273">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2005]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="7109" _type="ConsoleOutput" date="Mon Mar 28 12:21:25 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="13185273" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@2bb44384 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMIOneClientReadWriteNonAtomic did not pass completely:In Server enabling GIPC, no line found matching regex: .*?\{main\}.*?ListenableAcceptsEnabled.*¶GIPC is not checked because RMI failed%0.0¶¶Test execution time (ms):58606"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@2bb44384 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7112" _type="PauseCommand" date="Mon Mar 28 12:21:27 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="13186917">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1644]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="7111" _type="ConsoleOutput" date="Mon Mar 28 12:21:27 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="13186917" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@2bb44384 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment5.testcases.GIPCRMIStaticArguments@2bb44384 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="7114" _type="PauseCommand" date="Mon Mar 28 12:21:34 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="13193663">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6746]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7113" _type="ShellCommand" date="Mon Mar 28 12:21:34 EDT 2022" starttimestamp="1648471300703" timestamp="13193663" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7115" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:21:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13194335" type="Debug" />
  <Command __id="7116" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:21:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13194335" type="Debug" />
  <Command __id="7117" _type="ProgramExecutionEvent" className="/A5/src/checks/Checks.java" date="Mon Mar 28 12:21:35 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="13194335" type="Run" />
  <DocumentChange __id="7002" _type="Delete" date="Mon Mar 28 12:17:40 EDT 2022" docASTNodeCount="806" docActiveCodeLength="5798" docExpressionCount="594" docLength="6256" endLine="188" length="9" offset="5790" repeat="2" startLine="188" starttimestamp="1648471300703" timestamp="12959796" timestamp2="12960295">
    <text><![CDATA[(string) ]]></text>
  </DocumentChange>
  <DocumentChange __id="7009" _type="Delete" date="Mon Mar 28 12:17:52 EDT 2022" docASTNodeCount="805" docActiveCodeLength="5777" docExpressionCount="593" docLength="6235" endLine="188" length="21" offset="5769" repeat="2" startLine="188" starttimestamp="1648471300703" timestamp="12972048" timestamp2="12972048">
    <text><![CDATA["GIPC SERVER PORT:", ]]></text>
  </DocumentChange>
  <DocumentChange __id="7021" _type="Replace" date="Mon Mar 28 12:18:00 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5814" docExpressionCount="599" docLength="6272" endLine="187" insertionLength="39" int_docASTNodeCount="805" int_docActiveCodeLength="5775" int_docExpressionCount="593" int_docLength="6233" length="2" offset="5744" startLine="187" starttimestamp="1648471300703" timestamp="12979901">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println(GIPC_SERVER_PORT);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7026" _type="Insert" date="Mon Mar 28 12:18:02 EDT 2022" docASTNodeCount="750" docActiveCodeLength="5815" docExpressionCount="550" docLength="6273" length="1" offset="5765" starttimestamp="1648471300703" timestamp="12981946">
    <text><![CDATA["]]></text>
  </DocumentChange>
  <DocumentChange __id="7032" _type="Insert" date="Mon Mar 28 12:18:04 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5816" docExpressionCount="599" docLength="6274" length="1" offset="5782" starttimestamp="1648471300703" timestamp="12983869">
    <text><![CDATA["]]></text>
  </DocumentChange>
  <DocumentChange __id="7040" _type="Insert" date="Mon Mar 28 12:18:06 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5818" docExpressionCount="599" docLength="6276" length="2" offset="5782" repeat="2" starttimestamp="1648471300703" timestamp="12985899" timestamp2="12986810">
    <text><![CDATA[: ]]></text>
  </DocumentChange>
  <Command __id="7119" _type="PauseCommand" date="Mon Mar 28 12:21:39 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="13198525">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4190]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7120" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 12:21:39 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="13199065" />
  <Command __id="7122" _type="PauseCommand" date="Mon Mar 28 12:21:57 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="13216750">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[17685]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7129" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:21:59 EDT 2022" starttimestamp="1648471300703" timestamp="13219144" />
  <Command __id="7131" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:21:59 EDT 2022" starttimestamp="1648471300703" timestamp="13219194" />
  <Command __id="7132" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 12:21:59 EDT 2022" starttimestamp="1648471300703" timestamp="13219280" />
  <Command __id="7118" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:21:39 EDT 2022" docASTNodeCount="906" docActiveCodeLength="6800" docExpressionCount="636" docLength="7687" projectName="A5" starttimestamp="1648471300703" timestamp="13198525">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			// TODO Auto-generated catch block¶			e3.printStackTrace();¶		}¶		// Get server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		//NOTE This is just a hacky way of satisfying tests¶		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();¶		clientOutCoupler = new ClientOutCoupler(server, aClient, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶	¶	¶	@Override	¶	public void trace(boolean newValue) {¶		super.trace(newValue);¶		Tracer.showInfo(isTrace());¶	}¶	¶	@Override¶	public void experimentInput() {¶		long aStartTime = System.currentTimeMillis();¶		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);¶		boolean anOldValue = isTrace();¶		this.trace(false);¶		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {¶			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);¶		¶		}¶		trace(anOldValue);¶		long anEndTime = System.currentTimeMillis();¶		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);¶		¶	}¶	¶	@Override¶	/*¶	 * This override is not really needed, provided here to show that this method¶	 * exists.¶	 */¶	public void delaySends(int aMillisecondDelay) {¶		// getDelay() can be used to determine the delay¶		// in other parts of the program¶		super.delaySends(aMillisecondDelay);¶	}¶	¶	@Override¶	/**¶	 * Relevant in consistency assignments only ¶	 */¶	public void atomicBroadcast(boolean newValue) {¶		super.atomicBroadcast(newValue);¶		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="7124" _type="Delete" date="Mon Mar 28 12:21:57 EDT 2022" docASTNodeCount="905" docActiveCodeLength="6794" docExpressionCount="635" docLength="7681" endLine="137" length="6" offset="5058" startLine="137" starttimestamp="1648471300703" timestamp="13216907">
    <text><![CDATA[server]]></text>
  </DocumentChange>
  <DocumentChange __id="7125" _type="Insert" date="Mon Mar 28 12:21:57 EDT 2022" docASTNodeCount="909" docActiveCodeLength="6828" docExpressionCount="638" docLength="7715" length="34" offset="5058" repeat="2" starttimestamp="1648471300703" timestamp="13216907" timestamp2="13216915">
    <text><![CDATA[(ServerRemoteInterfaceGIPC) server]]></text>
  </DocumentChange>
  <DocumentChange __id="7127" _type="Insert" date="Mon Mar 28 12:21:57 EDT 2022" docASTNodeCount="915" docActiveCodeLength="6877" docExpressionCount="643" docLength="7764" length="49" offset="511" repeat="2" starttimestamp="1648471300703" timestamp="13216915" timestamp2="13216915">
    <text><![CDATA[
import server.remote.ServerRemoteInterfaceGIPC;]]></text>
  </DocumentChange>
  <Command __id="7134" _type="PauseCommand" date="Mon Mar 28 12:24:24 EDT 2022" range="2m-5m" starttimestamp="1648471300703" timestamp="13364052">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[144772]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7135" _type="MoveCaretCommand" caretOffset="590" date="Mon Mar 28 12:24:25 EDT 2022" docOffset="2138" starttimestamp="1648471300703" timestamp="13364345" />
  <Command __id="7133" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:24:24 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7138" docExpressionCount="677" docLength="7836" projectName="A5" starttimestamp="1648471300703" timestamp="13364052">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="7137" _type="PauseCommand" date="Mon Mar 28 12:24:33 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="13372763">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8418]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7154" _type="RunCommand" className="/A5/src/client/Client.java" date="Mon Mar 28 12:26:27 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="13486953" type="Run" />
  <Command __id="7156" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:26:28 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13487317" type="Run" />
  <Command __id="7157" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:26:28 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13487329" type="Run" />
  <Command __id="7158" _type="ConsoleOutput" date="Mon Mar 28 12:26:28 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="13487688" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.24717929954115203
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server proxy sent to RMI Registry"), Diff(INSERT,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.24717929954115203"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7160" _type="PauseCommand" date="Mon Mar 28 12:26:29 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="13488962">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1274]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7191" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:26:53 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13512361" type="Run" />
  <Command __id="7194" _type="PauseCommand" date="Mon Mar 28 12:26:59 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="13519259">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[6898]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="7201" _type="ShellCommand" date="Mon Mar 28 12:27:11 EDT 2022" starttimestamp="1648471300703" timestamp="13531096" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7204" _type="PauseCommand" date="Mon Mar 28 12:27:14 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="13533715">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2619]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7209" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:27:23 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13542313" type="Run" />
  <Command __id="7212" _type="PauseCommand" date="Mon Mar 28 12:27:25 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="13544735">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2422]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="7221" _type="ShellCommand" date="Mon Mar 28 12:27:32 EDT 2022" starttimestamp="1648471300703" timestamp="13551551" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7224" _type="PauseCommand" date="Mon Mar 28 12:27:35 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="13555072">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3521]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7225" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:27:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13560587" type="Run" />
  <Command __id="7227" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:27:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="13560606" type="Run" />
  <Command __id="7136" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:24:33 EDT 2022" docASTNodeCount="204" docActiveCodeLength="1581" docExpressionCount="142" docLength="1581" projectName="A5" starttimestamp="1648471300703" timestamp="13372763">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceGIPC ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="7229" _type="PauseCommand" date="Mon Mar 28 12:28:11 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="13590810">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[30204]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7230" _type="MoveCaretCommand" caretOffset="459" date="Mon Mar 28 12:28:11 EDT 2022" docOffset="459" starttimestamp="1648471300703" timestamp="13591099" />
  <Command __id="7228" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:28:11 EDT 2022" docASTNodeCount="667" docActiveCodeLength="4721" docExpressionCount="483" docLength="5201" projectName="A5" starttimestamp="1648471300703" timestamp="13590810">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//int aProposalNumber = 0;¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="7232" _type="PauseCommand" date="Mon Mar 28 12:28:13 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="13592561">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1462]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7233" _type="MoveCaretCommand" caretOffset="599" date="Mon Mar 28 12:28:13 EDT 2022" docOffset="599" starttimestamp="1648471300703" timestamp="13592870" />
  <Command __id="7235" _type="PauseCommand" date="Mon Mar 28 12:29:01 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="13641068">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[48198]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7234" _type="ShellCommand" date="Mon Mar 28 12:29:01 EDT 2022" starttimestamp="1648471300703" timestamp="13641068" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7237" _type="PauseCommand" date="Mon Mar 28 12:29:16 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="13655638">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14570]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7236" _type="ShellCommand" date="Mon Mar 28 12:29:16 EDT 2022" starttimestamp="1648471300703" timestamp="13655638" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7239" _type="PauseCommand" date="Mon Mar 28 12:29:20 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="13659525">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3887]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="7267" _type="ShellCommand" date="Mon Mar 28 12:34:27 EDT 2022" starttimestamp="1648471300703" timestamp="13966901" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7270" _type="PauseCommand" date="Mon Mar 28 12:35:17 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="14017246">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[50345]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7269" _type="ShellCommand" date="Mon Mar 28 12:35:17 EDT 2022" starttimestamp="1648471300703" timestamp="14017246" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7272" _type="PauseCommand" date="Mon Mar 28 12:35:30 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="14030148">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12902]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7271" _type="ShellCommand" date="Mon Mar 28 12:35:30 EDT 2022" starttimestamp="1648471300703" timestamp="14030148" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7231" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:28:13 EDT 2022" docASTNodeCount="204" docActiveCodeLength="1581" docExpressionCount="142" docLength="1581" projectName="A5" starttimestamp="1648471300703" timestamp="13592561">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceGIPC ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="7274" _type="PauseCommand" date="Mon Mar 28 12:35:34 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="14033445">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3297]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7275" _type="MoveCaretCommand" caretOffset="590" date="Mon Mar 28 12:35:34 EDT 2022" docOffset="2138" starttimestamp="1648471300703" timestamp="14033950" />
  <Command __id="7277" _type="PauseCommand" date="Mon Mar 28 12:35:59 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="14059240">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[25290]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7276" _type="ShellCommand" date="Mon Mar 28 12:35:59 EDT 2022" starttimestamp="1648471300703" timestamp="14059240" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7279" _type="PauseCommand" date="Mon Mar 28 12:36:18 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="14077873">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[18633]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7292" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:36:53 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14112310" type="Run" />
  <Command __id="7294" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:36:53 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14112367" type="Run" />
  <Command __id="7296" _type="PauseCommand" date="Mon Mar 28 12:36:56 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="14116129">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3762]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="7297" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:37:02 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14121897" type="Run" />
  <Command __id="7299" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:37:02 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14121986" type="Run" />
  <Command __id="7301" _type="PauseCommand" date="Mon Mar 28 12:37:03 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14123035">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1049]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7300" _type="MoveCaretCommand" caretOffset="390" date="Mon Mar 28 12:37:03 EDT 2022" docOffset="390" starttimestamp="1648471300703" timestamp="14123035" />
  <Command __id="7302" _type="MoveCaretCommand" caretOffset="390" date="Mon Mar 28 12:37:03 EDT 2022" docOffset="390" starttimestamp="1648471300703" timestamp="14123035" />
  <Command __id="7304" _type="InsertStringCommand" date="Mon Mar 28 12:37:04 EDT 2022" starttimestamp="1648471300703" timestamp="14123405" timestamp2="14123405">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7305" _type="InsertStringCommand" date="Mon Mar 28 12:37:04 EDT 2022" starttimestamp="1648471300703" timestamp="14123405" timestamp2="14123405">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7307" _type="InsertStringCommand" date="Mon Mar 28 12:37:04 EDT 2022" starttimestamp="1648471300703" timestamp="14123554" timestamp2="14123554">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7308" _type="InsertStringCommand" date="Mon Mar 28 12:37:04 EDT 2022" starttimestamp="1648471300703" timestamp="14123554" timestamp2="14123554">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7310" _type="PasteCommand" date="Mon Mar 28 12:37:04 EDT 2022" starttimestamp="1648471300703" timestamp="14123807" />
  <Command __id="7311" _type="MoveCaretCommand" caretOffset="390" date="Mon Mar 28 12:37:04 EDT 2022" docOffset="390" starttimestamp="1648471300703" timestamp="14124274" />
  <Command __id="7312" _type="MoveCaretCommand" caretOffset="390" date="Mon Mar 28 12:37:04 EDT 2022" docOffset="390" starttimestamp="1648471300703" timestamp="14124274" />
  <Command __id="7314" _type="PauseCommand" date="Mon Mar 28 12:37:06 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14125449">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1175]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7273" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:35:34 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7138" docExpressionCount="677" docLength="7836" projectName="A5" starttimestamp="1648471300703" timestamp="14033445">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="7303" _type="Insert" date="Mon Mar 28 12:37:04 EDT 2022" docASTNodeCount="946" docActiveCodeLength="7222" docExpressionCount="677" docLength="7920" length="84" offset="390" repeat="3" starttimestamp="1648471300703" timestamp="14123382" timestamp2="14123799">
    <text><![CDATA[

assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState]]></text>
  </DocumentChange>
  <Command __id="7313" _type="MoveCaretCommand" caretOffset="394" date="Mon Mar 28 12:37:06 EDT 2022" docOffset="394" starttimestamp="1648471300703" timestamp="14125449" />
  <Command __id="7315" _type="MoveCaretCommand" caretOffset="394" date="Mon Mar 28 12:37:06 EDT 2022" docOffset="394" starttimestamp="1648471300703" timestamp="14125449" />
  <Command __id="7317" _type="InsertStringCommand" date="Mon Mar 28 12:37:06 EDT 2022" starttimestamp="1648471300703" timestamp="14125867" timestamp2="14125867">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7318" _type="InsertStringCommand" date="Mon Mar 28 12:37:06 EDT 2022" starttimestamp="1648471300703" timestamp="14125867" timestamp2="14125867">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7321" _type="PauseCommand" date="Mon Mar 28 12:37:07 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14126954">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1087]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="7320" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14126954" timestamp2="14126954">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7322" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14126954" timestamp2="14126954">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7324" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14126988" timestamp2="14126988">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7325" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14126988" timestamp2="14126988">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7327" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14127012" timestamp2="14127012">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7328" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14127012" timestamp2="14127012">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7330" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14127045" timestamp2="14127045">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7331" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14127045" timestamp2="14127045">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7333" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14127082" timestamp2="14127082">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7334" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14127082" timestamp2="14127082">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7336" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14127117" timestamp2="14127117">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7337" _type="InsertStringCommand" date="Mon Mar 28 12:37:07 EDT 2022" starttimestamp="1648471300703" timestamp="14127117" timestamp2="14127117">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7339" _type="PauseCommand" date="Mon Mar 28 12:37:09 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14128503">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1386]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7344" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:37:11 EDT 2022" starttimestamp="1648471300703" timestamp="14130330" />
  <Command __id="7346" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:37:11 EDT 2022" starttimestamp="1648471300703" timestamp="14130381" />
  <Command __id="7347" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 12:37:11 EDT 2022" starttimestamp="1648471300703" timestamp="14130468" />
  <Command __id="7348" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:37:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14130616" type="Run" />
  <Command __id="7349" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:37:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14130616" type="Run" />
  <Command __id="7351" _type="PauseCommand" date="Mon Mar 28 12:37:20 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="14139707">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[9091]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7350" _type="SelectTextCommand" caretOffset="462" date="Mon Mar 28 12:37:20 EDT 2022" end="482" start="462" starttimestamp="1648471300703" timestamp="14139707" />
  <Command __id="7352" _type="SelectTextCommand" caretOffset="462" date="Mon Mar 28 12:37:20 EDT 2022" end="482" start="462" starttimestamp="1648471300703" timestamp="14139707" />
  <Command __id="7354" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:37:20 EDT 2022" starttimestamp="1648471300703" timestamp="14140124" />
  <Command __id="7355" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:37:20 EDT 2022" starttimestamp="1648471300703" timestamp="14140124" />
  <DocumentChange __id="7316" _type="Insert" date="Mon Mar 28 12:37:06 EDT 2022" docASTNodeCount="956" docActiveCodeLength="7229" docExpressionCount="686" docLength="7927" length="7" offset="394" repeat="7" starttimestamp="1648471300703" timestamp="14125852" timestamp2="14127106">
    <text><![CDATA[import ]]></text>
  </DocumentChange>
  <DocumentChange __id="7341" _type="Insert" date="Mon Mar 28 12:37:09 EDT 2022" docASTNodeCount="956" docActiveCodeLength="7230" docExpressionCount="686" docLength="7928" length="1" offset="481" starttimestamp="1648471300703" timestamp="14128867">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="7353" _type="Delete" date="Mon Mar 28 12:37:20 EDT 2022" docASTNodeCount="954" docActiveCodeLength="7210" docExpressionCount="684" docLength="7908" endLine="15" length="20" offset="462" startLine="15" starttimestamp="1648471300703" timestamp="14140101">
    <text><![CDATA[.broadcastMetaState;]]></text>
  </DocumentChange>
  <Command __id="7357" _type="PauseCommand" date="Mon Mar 28 12:37:22 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14141914">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1790]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="7360" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:37:25 EDT 2022" starttimestamp="1648471300703" timestamp="14144668" />
  <Command __id="7362" _type="EclipseCommand" commandID="" date="Mon Mar 28 12:37:25 EDT 2022" starttimestamp="1648471300703" timestamp="14144721" />
  <Command __id="7363" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 12:37:25 EDT 2022" starttimestamp="1648471300703" timestamp="14144812" />
  <Command __id="7364" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:37:25 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14144924" type="Run" />
  <Command __id="7365" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:37:25 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14144924" type="Run" />
  <Command __id="7367" _type="PauseCommand" date="Mon Mar 28 12:37:30 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="14149980">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[5048]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="7366" _type="CopyCommand" date="Mon Mar 28 12:37:30 EDT 2022" starttimestamp="1648471300703" timestamp="14149972" />
  <Command __id="7369" _type="PauseCommand" date="Mon Mar 28 12:37:34 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="14153647">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3675]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7368" _type="MoveCaretCommand" caretOffset="7900" date="Mon Mar 28 12:37:34 EDT 2022" docOffset="7900" starttimestamp="1648471300703" timestamp="14153647" />
  <Command __id="7370" _type="MoveCaretCommand" caretOffset="7900" date="Mon Mar 28 12:37:34 EDT 2022" docOffset="7900" starttimestamp="1648471300703" timestamp="14153647" />
  <Command __id="7372" _type="InsertStringCommand" date="Mon Mar 28 12:37:34 EDT 2022" starttimestamp="1648471300703" timestamp="14153912" timestamp2="14153912">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7373" _type="InsertStringCommand" date="Mon Mar 28 12:37:34 EDT 2022" starttimestamp="1648471300703" timestamp="14153912" timestamp2="14153912">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7375" _type="InsertStringCommand" date="Mon Mar 28 12:37:34 EDT 2022" starttimestamp="1648471300703" timestamp="14154062" timestamp2="14154062">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7376" _type="InsertStringCommand" date="Mon Mar 28 12:37:34 EDT 2022" starttimestamp="1648471300703" timestamp="14154062" timestamp2="14154062">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7378" _type="InsertStringCommand" date="Mon Mar 28 12:37:35 EDT 2022" starttimestamp="1648471300703" timestamp="14154694" timestamp2="14154694">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="7379" _type="InsertStringCommand" date="Mon Mar 28 12:37:35 EDT 2022" starttimestamp="1648471300703" timestamp="14154694" timestamp2="14154694">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="7381" _type="InsertStringCommand" date="Mon Mar 28 12:37:35 EDT 2022" starttimestamp="1648471300703" timestamp="14154997" timestamp2="14154997">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="7382" _type="InsertStringCommand" date="Mon Mar 28 12:37:35 EDT 2022" starttimestamp="1648471300703" timestamp="14154997" timestamp2="14154997">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="7384" _type="InsertStringCommand" date="Mon Mar 28 12:37:35 EDT 2022" starttimestamp="1648471300703" timestamp="14155160" timestamp2="14155160">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7385" _type="InsertStringCommand" date="Mon Mar 28 12:37:35 EDT 2022" starttimestamp="1648471300703" timestamp="14155160" timestamp2="14155160">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7387" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14155334" timestamp2="14155334">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7388" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14155335" timestamp2="14155335">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7390" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14155490" timestamp2="14155490">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7391" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14155490" timestamp2="14155490">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7393" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14155634" timestamp2="14155634">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7394" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14155634" timestamp2="14155634">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7396" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14155791" timestamp2="14155791">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7397" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14155791" timestamp2="14155791">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7399" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14155921" timestamp2="14155921">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7400" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14155921" timestamp2="14155921">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7402" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14156069" timestamp2="14156069">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7403" _type="InsertStringCommand" date="Mon Mar 28 12:37:36 EDT 2022" starttimestamp="1648471300703" timestamp="14156069" timestamp2="14156069">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7405" _type="InsertStringCommand" date="Mon Mar 28 12:37:37 EDT 2022" starttimestamp="1648471300703" timestamp="14156364" timestamp2="14156364">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7406" _type="InsertStringCommand" date="Mon Mar 28 12:37:37 EDT 2022" starttimestamp="1648471300703" timestamp="14156372" timestamp2="14156372">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7408" _type="PasteCommand" date="Mon Mar 28 12:37:37 EDT 2022" starttimestamp="1648471300703" timestamp="14156943" />
  <Command __id="7410" _type="PauseCommand" date="Mon Mar 28 12:37:41 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="14160889">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3946]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7409" _type="SelectTextCommand" caretOffset="7938" date="Mon Mar 28 12:37:41 EDT 2022" end="8000" start="7938" starttimestamp="1648471300703" timestamp="14160889" />
  <Command __id="7411" _type="SelectTextCommand" caretOffset="7938" date="Mon Mar 28 12:37:41 EDT 2022" end="8000" start="7938" starttimestamp="1648471300703" timestamp="14160889" />
  <Command __id="7413" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:37:41 EDT 2022" starttimestamp="1648471300703" timestamp="14161203" />
  <Command __id="7414" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:37:41 EDT 2022" starttimestamp="1648471300703" timestamp="14161203" />
  <Command __id="7416" _type="PauseCommand" date="Mon Mar 28 12:37:42 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14162287">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1084]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7415" _type="MoveCaretCommand" caretOffset="7956" date="Mon Mar 28 12:37:42 EDT 2022" docOffset="7956" starttimestamp="1648471300703" timestamp="14162287" />
  <Command __id="7417" _type="MoveCaretCommand" caretOffset="7956" date="Mon Mar 28 12:37:42 EDT 2022" docOffset="7956" starttimestamp="1648471300703" timestamp="14162287" />
  <Command __id="7419" _type="InsertStringCommand" date="Mon Mar 28 12:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="14162789" timestamp2="14162789">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="7420" _type="InsertStringCommand" date="Mon Mar 28 12:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="14162797" timestamp2="14162797">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="7421" _type="InsertStringCommand" date="Mon Mar 28 12:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="14162817" timestamp2="14162817">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="7422" _type="InsertStringCommand" date="Mon Mar 28 12:37:43 EDT 2022" starttimestamp="1648471300703" timestamp="14162817" timestamp2="14162817">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="7424" _type="InsertStringCommand" date="Mon Mar 28 12:37:44 EDT 2022" starttimestamp="1648471300703" timestamp="14163558" timestamp2="14163558">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="7425" _type="InsertStringCommand" date="Mon Mar 28 12:37:44 EDT 2022" starttimestamp="1648471300703" timestamp="14163558" timestamp2="14163558">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="7427" _type="InsertStringCommand" date="Mon Mar 28 12:37:44 EDT 2022" starttimestamp="1648471300703" timestamp="14163597" timestamp2="14163597">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="7428" _type="InsertStringCommand" date="Mon Mar 28 12:37:44 EDT 2022" starttimestamp="1648471300703" timestamp="14163597" timestamp2="14163597">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="7429" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:37:44 EDT 2022" starttimestamp="1648471300703" timestamp="14163910" />
  <Command __id="7430" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:37:44 EDT 2022" starttimestamp="1648471300703" timestamp="14163910" />
  <Command __id="7432" _type="InsertStringCommand" date="Mon Mar 28 12:37:44 EDT 2022" starttimestamp="1648471300703" timestamp="14164117" timestamp2="14164117">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7433" _type="InsertStringCommand" date="Mon Mar 28 12:37:44 EDT 2022" starttimestamp="1648471300703" timestamp="14164117" timestamp2="14164117">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7435" _type="PauseCommand" date="Mon Mar 28 12:37:46 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14165863">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1746]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7434" _type="MoveCaretCommand" caretOffset="7957" date="Mon Mar 28 12:37:46 EDT 2022" docOffset="7957" starttimestamp="1648471300703" timestamp="14165863" />
  <Command __id="7436" _type="MoveCaretCommand" caretOffset="7957" date="Mon Mar 28 12:37:46 EDT 2022" docOffset="7957" starttimestamp="1648471300703" timestamp="14165863" />
  <Command __id="7438" _type="PauseCommand" date="Mon Mar 28 12:37:51 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="14171116">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5253]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7437" _type="SelectTextCommand" caretOffset="7906" date="Mon Mar 28 12:37:51 EDT 2022" end="7915" start="7906" starttimestamp="1648471300703" timestamp="14171116" />
  <Command __id="7439" _type="SelectTextCommand" caretOffset="7906" date="Mon Mar 28 12:37:51 EDT 2022" end="7915" start="7906" starttimestamp="1648471300703" timestamp="14171116" />
  <Command __id="7441" _type="PauseCommand" date="Mon Mar 28 12:38:00 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="14179365">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[8249]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7440" _type="ShellCommand" date="Mon Mar 28 12:38:00 EDT 2022" starttimestamp="1648471300703" timestamp="14179365" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7442" _type="ShellCommand" date="Mon Mar 28 12:38:00 EDT 2022" starttimestamp="1648471300703" timestamp="14179570" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7446" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 12:38:00 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="14180162" />
  <Command __id="7448" _type="PauseCommand" date="Mon Mar 28 12:38:02 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="14182252">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2090]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7456" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:38:05 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14184825" type="Debug" />
  <Command __id="7458" _type="ProgramExecutionEvent" className="/A5/src/registry/TrickOrTreatRegistry.java" date="Mon Mar 28 12:38:05 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="14184825" type="Run" />
  <Command __id="7459" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:38:05 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14184825" type="Debug" />
  <Command __id="7460" _type="ProgramExecutionEvent" className="/A5/src/registry/TrickOrTreatRegistry.java" date="Mon Mar 28 12:38:05 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="14184825" type="Run" />
  <Command __id="7461" _type="ShellCommand" date="Mon Mar 28 12:38:05 EDT 2022" starttimestamp="1648471300703" timestamp="14184897" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="7356" _type="Insert" date="Mon Mar 28 12:37:22 EDT 2022" docASTNodeCount="954" docActiveCodeLength="7211" docExpressionCount="684" docLength="7909" length="1" offset="462" starttimestamp="1648471300703" timestamp="14141914">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="7371" _type="Insert" date="Mon Mar 28 12:37:34 EDT 2022" docASTNodeCount="954" docActiveCodeLength="7229" docExpressionCount="684" docLength="7927" length="18" offset="7900" repeat="12" starttimestamp="1648471300703" timestamp="14153899" timestamp2="14156347">
    <text><![CDATA[
	
	@Override
	]]></text>
  </DocumentChange>
  <DocumentChange __id="7407" _type="Replace" date="Mon Mar 28 12:37:37 EDT 2022" docASTNodeCount="962" docActiveCodeLength="7329" docExpressionCount="687" docLength="8027" endLine="229" insertionLength="101" int_docASTNodeCount="954" int_docActiveCodeLength="7228" int_docExpressionCount="684" int_docLength="7926" length="1" offset="7917" startLine="229" starttimestamp="1648471300703" timestamp="14156926">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7412" _type="Delete" date="Mon Mar 28 12:37:41 EDT 2022" docASTNodeCount="954" docActiveCodeLength="7267" docExpressionCount="684" docLength="7965" endLine="229" length="62" offset="7938" startLine="229" starttimestamp="1648471300703" timestamp="14161195">
    <text><![CDATA[assignments.util.inputParameters.SimulationParametersListener.]]></text>
  </DocumentChange>
  <DocumentChange __id="7418" _type="Insert" date="Mon Mar 28 12:37:43 EDT 2022" docASTNodeCount="962" docActiveCodeLength="7279" docExpressionCount="687" docLength="7977" length="12" offset="7956" repeat="4" starttimestamp="1648471300703" timestamp="14162788" timestamp2="14164104">
    <text><![CDATA[() {
		
	}]]></text>
  </DocumentChange>
  <Command __id="7443" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:38:00 EDT 2022" docASTNodeCount="83" docActiveCodeLength="629" docExpressionCount="53" docLength="663" projectName="A5" starttimestamp="1648471300703" timestamp="14179737">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="7444" _type="Insert" date="Mon Mar 28 12:38:00 EDT 2022" docASTNodeCount="86" docActiveCodeLength="660" docExpressionCount="54" docLength="694" length="31" offset="656" repeat="2" starttimestamp="1648471300703" timestamp="14179761" timestamp2="14179762">
    <text><![CDATA[

	void broadcastMetaState();]]></text>
  </DocumentChange>
  <Command __id="7463" _type="PauseCommand" date="Mon Mar 28 12:38:07 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14186688">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1791]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7464" _type="SelectTextCommand" caretOffset="7906" date="Mon Mar 28 12:38:07 EDT 2022" end="7915" start="7906" starttimestamp="1648471300703" timestamp="14186985" />
  <Command __id="7466" _type="PauseCommand" date="Mon Mar 28 12:38:09 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14188364">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1379]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7465" _type="MoveCaretCommand" caretOffset="7957" date="Mon Mar 28 12:38:09 EDT 2022" docOffset="7957" starttimestamp="1648471300703" timestamp="14188364" />
  <Command __id="7467" _type="MoveCaretCommand" caretOffset="7957" date="Mon Mar 28 12:38:09 EDT 2022" docOffset="7957" starttimestamp="1648471300703" timestamp="14188365" />
  <Command __id="7469" _type="InsertStringCommand" date="Mon Mar 28 12:38:09 EDT 2022" starttimestamp="1648471300703" timestamp="14189171" timestamp2="14189171">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7470" _type="InsertStringCommand" date="Mon Mar 28 12:38:09 EDT 2022" starttimestamp="1648471300703" timestamp="14189171" timestamp2="14189171">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7472" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189309" timestamp2="14189309">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7473" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189309" timestamp2="14189309">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7475" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189441" timestamp2="14189441">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7476" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189441" timestamp2="14189441">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7478" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189633" timestamp2="14189633">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7479" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189633" timestamp2="14189633">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7481" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189738" timestamp2="14189738">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7482" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189738" timestamp2="14189738">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7484" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189832" timestamp2="14189832">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7485" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189832" timestamp2="14189832">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7487" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189911" timestamp2="14189911">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7488" _type="InsertStringCommand" date="Mon Mar 28 12:38:10 EDT 2022" starttimestamp="1648471300703" timestamp="14189911" timestamp2="14189911">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7462" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:38:07 EDT 2022" docASTNodeCount="962" docActiveCodeLength="7279" docExpressionCount="687" docLength="7977" projectName="A5" starttimestamp="1648471300703" timestamp="14186688">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶"), Diff(INSERT,"¶import assignments.util.inputParameters.SimulationParametersListener;¶"), Diff(EQUAL,"import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶"), Diff(INSERT,"	¶	@Override¶	public default void broadcastMetaState() {¶		¶	}¶"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.inputParameters.SimulationParametersListener;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
	

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public default void broadcastMetaState() {
		
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="7468" _type="Insert" date="Mon Mar 28 12:38:09 EDT 2022" docASTNodeCount="962" docActiveCodeLength="7286" docExpressionCount="687" docLength="7984" length="7" offset="7957" repeat="7" starttimestamp="1648471300703" timestamp="14189162" timestamp2="14189901">
    <text><![CDATA[boolen ]]></text>
  </DocumentChange>
  <Command __id="7490" _type="PauseCommand" date="Mon Mar 28 12:38:13 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="14192512">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2601]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="7489" _type="Insert" date="Mon Mar 28 12:38:13 EDT 2022" docASTNodeCount="966" docActiveCodeLength="7287" docExpressionCount="689" docLength="7985" length="1" offset="7964" starttimestamp="1648471300703" timestamp="14192512">
    <text><![CDATA[f]]></text>
  </DocumentChange>
  <Command __id="7491" _type="InsertStringCommand" date="Mon Mar 28 12:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="14192525" timestamp2="14192525">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7492" _type="InsertStringCommand" date="Mon Mar 28 12:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="14192525" timestamp2="14192525">
    <data><![CDATA[f]]></data>
  </Command>
  <DocumentChange __id="7493" _type="Delete" date="Mon Mar 28 12:38:13 EDT 2022" docASTNodeCount="962" docActiveCodeLength="7286" docExpressionCount="687" docLength="7984" endLine="229" length="1" offset="7964" startLine="229" starttimestamp="1648471300703" timestamp="14192918">
    <text><![CDATA[f]]></text>
  </DocumentChange>
  <Command __id="7494" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="14192927" />
  <Command __id="7495" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="14192927" />
  <Command __id="7497" _type="InsertStringCommand" date="Mon Mar 28 12:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="14193025" timestamp2="14193025">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7498" _type="InsertStringCommand" date="Mon Mar 28 12:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="14193025" timestamp2="14193025">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7500" _type="InsertStringCommand" date="Mon Mar 28 12:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="14193131" timestamp2="14193131">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7501" _type="InsertStringCommand" date="Mon Mar 28 12:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="14193131" timestamp2="14193131">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7503" _type="InsertStringCommand" date="Mon Mar 28 12:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="14193266" timestamp2="14193266">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7504" _type="InsertStringCommand" date="Mon Mar 28 12:38:13 EDT 2022" starttimestamp="1648471300703" timestamp="14193266" timestamp2="14193266">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7506" _type="InsertStringCommand" date="Mon Mar 28 12:38:14 EDT 2022" starttimestamp="1648471300703" timestamp="14193512" timestamp2="14193512">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7507" _type="InsertStringCommand" date="Mon Mar 28 12:38:14 EDT 2022" starttimestamp="1648471300703" timestamp="14193512" timestamp2="14193512">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7509" _type="PauseCommand" date="Mon Mar 28 12:38:16 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="14195879">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2367]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7508" _type="MoveCaretCommand" caretOffset="7962" date="Mon Mar 28 12:38:16 EDT 2022" docOffset="7962" starttimestamp="1648471300703" timestamp="14195879" />
  <Command __id="7510" _type="MoveCaretCommand" caretOffset="7962" date="Mon Mar 28 12:38:16 EDT 2022" docOffset="7962" starttimestamp="1648471300703" timestamp="14195879" />
  <Command __id="7512" _type="InsertStringCommand" date="Mon Mar 28 12:38:16 EDT 2022" starttimestamp="1648471300703" timestamp="14195966" timestamp2="14195966">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7513" _type="InsertStringCommand" date="Mon Mar 28 12:38:16 EDT 2022" starttimestamp="1648471300703" timestamp="14195966" timestamp2="14195966">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7515" _type="PauseCommand" date="Mon Mar 28 12:38:17 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14197067">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1101]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7519" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:38:19 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14199141" type="Debug" />
  <Command __id="7521" _type="ProgramExecutionEvent" className="/A5/src/client/Client.java" date="Mon Mar 28 12:38:19 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="14199141" type="Run" />
  <Command __id="7522" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:38:19 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14199141" type="Debug" />
  <Command __id="7523" _type="ProgramExecutionEvent" className="/A5/src/client/Client.java" date="Mon Mar 28 12:38:19 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="14199141" type="Run" />
  <Command __id="7524" _type="ShellCommand" date="Mon Mar 28 12:38:19 EDT 2022" starttimestamp="1648471300703" timestamp="14199153" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7525" _type="ConsoleOutput" date="Mon Mar 28 12:38:19 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="14199262" type="ConsoleOutput">
    <outputString><![CDATA[AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:57064]:An existing connection was forcibly closed by the remote host
Server0<-->Generic Client:0.24717929954115203 (Closed)
Explanation: An existing connection was forcibly closed by the remote host
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:57064]:An existing connection was forcibly closed by the remote host¶Server0<-->Generic Client:0.24717929954115203 (Closed)¶Explanation: An existing connection was forcibly closed by the remote host"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7527" _type="PauseCommand" date="Mon Mar 28 12:38:29 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="14208324">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9062]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7537" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:38:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14215656" type="Debug" />
  <Command __id="7539" _type="ProgramExecutionEvent" className="/A5/src/client/Client.java" date="Mon Mar 28 12:38:36 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="14215656" type="Run" />
  <Command __id="7540" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:38:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14215656" type="Debug" />
  <Command __id="7541" _type="ProgramExecutionEvent" className="/A5/src/client/Client.java" date="Mon Mar 28 12:38:36 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="14215656" type="Run" />
  <Command __id="7542" _type="ShellCommand" date="Mon Mar 28 12:38:36 EDT 2022" starttimestamp="1648471300703" timestamp="14215664" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7543" _type="ConsoleOutput" date="Mon Mar 28 12:38:36 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="14215988" type="ConsoleOutput">
    <outputString><![CDATA[AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:57072]:An existing connection was forcibly closed by the remote host
Server0<-->Generic Client:0.8418174840536408 (Closed)
Explanation: An existing connection was forcibly closed by the remote host
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:570"), Diff(DELETE,"64"), Diff(INSERT,"72"), Diff(EQUAL,"]:An existing connection was forcibly closed by the remote host¶Server0<-->Generic Client:0."), Diff(DELETE,"24717929954115203"), Diff(INSERT,"8418174840536408"), Diff(EQUAL," (Closed)¶Explanation: An existing connection was forcibly closed by the remote host¶")]]]></diff>
  </Command>
  <DocumentChange __id="7496" _type="Insert" date="Mon Mar 28 12:38:13 EDT 2022" docASTNodeCount="966" docActiveCodeLength="7290" docExpressionCount="689" docLength="7988" length="4" offset="7964" repeat="4" starttimestamp="1648471300703" timestamp="14193009" timestamp2="14193495">
    <text><![CDATA[bool]]></text>
  </DocumentChange>
  <DocumentChange __id="7511" _type="Insert" date="Mon Mar 28 12:38:16 EDT 2022" docASTNodeCount="965" docActiveCodeLength="7291" docExpressionCount="688" docLength="7989" length="1" offset="7962" starttimestamp="1648471300703" timestamp="14195950">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="7529" _type="Delete" date="Mon Mar 28 12:38:29 EDT 2022" docASTNodeCount="964" docActiveCodeLength="7283" docExpressionCount="688" docLength="7981" endLine="229" length="8" offset="7925" startLine="229" starttimestamp="1648471300703" timestamp="14208702">
    <text><![CDATA[default ]]></text>
  </DocumentChange>
  <Command __id="7545" _type="PauseCommand" date="Mon Mar 28 12:38:43 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="14222319">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6331]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7546" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 12:38:43 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="14222754" />
  <Command __id="7548" _type="PauseCommand" date="Mon Mar 28 12:38:44 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14224001">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1247]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7544" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:38:43 EDT 2022" docASTNodeCount="86" docActiveCodeLength="660" docExpressionCount="54" docLength="694" projectName="A5" starttimestamp="1648471300703" timestamp="14222319">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶"), Diff(INSERT,"	void broadcastMetaState();¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void broadcastMetaState();

}
]]></snapshot>
  </Command>
  <Command __id="7547" _type="MoveCaretCommand" caretOffset="531" date="Mon Mar 28 12:38:44 EDT 2022" docOffset="685" starttimestamp="1648471300703" timestamp="14224001" />
  <DocumentChange __id="7549" _type="Insert" date="Mon Mar 28 12:38:45 EDT 2022" docASTNodeCount="89" docActiveCodeLength="671" docExpressionCount="55" docLength="705" length="11" offset="685" repeat="11" starttimestamp="1648471300703" timestamp="14224425" timestamp2="14227970">
    <text><![CDATA[boolean bol]]></text>
  </DocumentChange>
  <Command __id="7550" _type="InsertStringCommand" date="Mon Mar 28 12:38:45 EDT 2022" starttimestamp="1648471300703" timestamp="14224433" timestamp2="14224433">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7552" _type="InsertStringCommand" date="Mon Mar 28 12:38:45 EDT 2022" starttimestamp="1648471300703" timestamp="14224699" timestamp2="14224699">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7554" _type="InsertStringCommand" date="Mon Mar 28 12:38:45 EDT 2022" starttimestamp="1648471300703" timestamp="14224871" timestamp2="14224871">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7556" _type="InsertStringCommand" date="Mon Mar 28 12:38:45 EDT 2022" starttimestamp="1648471300703" timestamp="14225094" timestamp2="14225094">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7558" _type="InsertStringCommand" date="Mon Mar 28 12:38:46 EDT 2022" starttimestamp="1648471300703" timestamp="14225949" timestamp2="14225949">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7560" _type="InsertStringCommand" date="Mon Mar 28 12:38:46 EDT 2022" starttimestamp="1648471300703" timestamp="14226043" timestamp2="14226043">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7562" _type="InsertStringCommand" date="Mon Mar 28 12:38:46 EDT 2022" starttimestamp="1648471300703" timestamp="14226180" timestamp2="14226180">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7564" _type="InsertStringCommand" date="Mon Mar 28 12:38:46 EDT 2022" starttimestamp="1648471300703" timestamp="14226255" timestamp2="14226255">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7567" _type="PauseCommand" date="Mon Mar 28 12:38:48 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14227549">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1294]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="7566" _type="InsertStringCommand" date="Mon Mar 28 12:38:48 EDT 2022" starttimestamp="1648471300703" timestamp="14227549" timestamp2="14227549">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7569" _type="InsertStringCommand" date="Mon Mar 28 12:38:48 EDT 2022" starttimestamp="1648471300703" timestamp="14227695" timestamp2="14227695">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7571" _type="InsertStringCommand" date="Mon Mar 28 12:38:48 EDT 2022" starttimestamp="1648471300703" timestamp="14227984" timestamp2="14227984">
    <data><![CDATA[l]]></data>
  </Command>
  <DocumentChange __id="7572" _type="Delete" date="Mon Mar 28 12:38:48 EDT 2022" docASTNodeCount="89" docActiveCodeLength="670" docExpressionCount="55" docLength="704" endLine="22" length="1" offset="695" startLine="22" starttimestamp="1648471300703" timestamp="14228286">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="7573" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 12:38:48 EDT 2022" starttimestamp="1648471300703" timestamp="14228295" />
  <Command __id="7575" _type="InsertStringCommand" date="Mon Mar 28 12:38:49 EDT 2022" starttimestamp="1648471300703" timestamp="14228463" timestamp2="14228463">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7577" _type="InsertStringCommand" date="Mon Mar 28 12:38:49 EDT 2022" starttimestamp="1648471300703" timestamp="14228651" timestamp2="14228651">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7579" _type="PauseCommand" date="Mon Mar 28 12:38:50 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14229770">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1119]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7578" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 12:38:50 EDT 2022" starttimestamp="1648471300703" timestamp="14229770" />
  <Command __id="7581" _type="InsertStringCommand" date="Mon Mar 28 12:38:50 EDT 2022" starttimestamp="1648471300703" timestamp="14230245" timestamp2="14230245">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7583" _type="InsertStringCommand" date="Mon Mar 28 12:38:51 EDT 2022" starttimestamp="1648471300703" timestamp="14230765" timestamp2="14230765">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7585" _type="InsertStringCommand" date="Mon Mar 28 12:38:51 EDT 2022" starttimestamp="1648471300703" timestamp="14230921" timestamp2="14230921">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="7587" _type="InsertStringCommand" date="Mon Mar 28 12:38:51 EDT 2022" starttimestamp="1648471300703" timestamp="14231052" timestamp2="14231052">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7589" _type="InsertStringCommand" date="Mon Mar 28 12:38:51 EDT 2022" starttimestamp="1648471300703" timestamp="14231195" timestamp2="14231195">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7591" _type="InsertStringCommand" date="Mon Mar 28 12:38:51 EDT 2022" starttimestamp="1648471300703" timestamp="14231253" timestamp2="14231253">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="7593" _type="InsertStringCommand" date="Mon Mar 28 12:38:52 EDT 2022" starttimestamp="1648471300703" timestamp="14231499" timestamp2="14231499">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7595" _type="InsertStringCommand" date="Mon Mar 28 12:38:52 EDT 2022" starttimestamp="1648471300703" timestamp="14231625" timestamp2="14231625">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7597" _type="InsertStringCommand" date="Mon Mar 28 12:38:52 EDT 2022" starttimestamp="1648471300703" timestamp="14232163" timestamp2="14232163">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="7599" _type="InsertStringCommand" date="Mon Mar 28 12:38:53 EDT 2022" starttimestamp="1648471300703" timestamp="14232341" timestamp2="14232341">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7601" _type="InsertStringCommand" date="Mon Mar 28 12:38:53 EDT 2022" starttimestamp="1648471300703" timestamp="14232498" timestamp2="14232498">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7603" _type="InsertStringCommand" date="Mon Mar 28 12:38:53 EDT 2022" starttimestamp="1648471300703" timestamp="14232552" timestamp2="14232552">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7605" _type="InsertStringCommand" date="Mon Mar 28 12:38:53 EDT 2022" starttimestamp="1648471300703" timestamp="14232621" timestamp2="14232621">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7607" _type="InsertStringCommand" date="Mon Mar 28 12:38:53 EDT 2022" starttimestamp="1648471300703" timestamp="14232787" timestamp2="14232787">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7609" _type="InsertStringCommand" date="Mon Mar 28 12:38:53 EDT 2022" starttimestamp="1648471300703" timestamp="14233149" timestamp2="14233149">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="7611" _type="InsertStringCommand" date="Mon Mar 28 12:38:54 EDT 2022" starttimestamp="1648471300703" timestamp="14233391" timestamp2="14233391">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="7613" _type="InsertStringCommand" date="Mon Mar 28 12:38:54 EDT 2022" starttimestamp="1648471300703" timestamp="14233516" timestamp2="14233516">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7615" _type="InsertStringCommand" date="Mon Mar 28 12:38:54 EDT 2022" starttimestamp="1648471300703" timestamp="14233701" timestamp2="14233701">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7617" _type="InsertStringCommand" date="Mon Mar 28 12:38:54 EDT 2022" starttimestamp="1648471300703" timestamp="14233823" timestamp2="14233823">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7619" _type="InsertStringCommand" date="Mon Mar 28 12:38:54 EDT 2022" starttimestamp="1648471300703" timestamp="14233937" timestamp2="14233937">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7621" _type="InsertStringCommand" date="Mon Mar 28 12:38:54 EDT 2022" starttimestamp="1648471300703" timestamp="14234018" timestamp2="14234018">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7623" _type="InsertStringCommand" date="Mon Mar 28 12:38:54 EDT 2022" starttimestamp="1648471300703" timestamp="14234096" timestamp2="14234096">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7625" _type="InsertStringCommand" date="Mon Mar 28 12:38:54 EDT 2022" starttimestamp="1648471300703" timestamp="14234280" timestamp2="14234280">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7642" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:38:59 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14238648" type="Debug" />
  <Command __id="7644" _type="ProgramExecutionEvent" className="/A5/src/server/Server.java" date="Mon Mar 28 12:38:59 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="14238649" type="Run" />
  <Command __id="7645" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:38:59 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14238649" type="Debug" />
  <Command __id="7646" _type="ProgramExecutionEvent" className="/A5/src/server/Server.java" date="Mon Mar 28 12:38:59 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="14238649" type="Run" />
  <Command __id="7647" _type="ShellCommand" date="Mon Mar 28 12:38:59 EDT 2022" starttimestamp="1648471300703" timestamp="14238692" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="7574" _type="Insert" date="Mon Mar 28 12:38:49 EDT 2022" docASTNodeCount="89" docActiveCodeLength="672" docExpressionCount="55" docLength="706" length="2" offset="695" repeat="2" starttimestamp="1648471300703" timestamp="14228446" timestamp2="14228635">
    <text><![CDATA[ol]]></text>
  </DocumentChange>
  <DocumentChange __id="7580" _type="Insert" date="Mon Mar 28 12:38:50 EDT 2022" docASTNodeCount="90" docActiveCodeLength="695" docExpressionCount="56" docLength="729" length="23" offset="698" repeat="23" starttimestamp="1648471300703" timestamp="14230226" timestamp2="14234269">
    <text><![CDATA[ throws RemoteExceptoin]]></text>
  </DocumentChange>
  <DocumentChange __id="7626" _type="Delete" date="Mon Mar 28 12:38:55 EDT 2022" docASTNodeCount="90" docActiveCodeLength="692" docExpressionCount="56" docLength="726" endLine="22" length="3" offset="718" repeat="3" startLine="22" starttimestamp="1648471300703" timestamp="14234878" timestamp2="14235185">
    <text><![CDATA[oin]]></text>
  </DocumentChange>
  <DocumentChange __id="7632" _type="Insert" date="Mon Mar 28 12:38:56 EDT 2022" docASTNodeCount="90" docActiveCodeLength="695" docExpressionCount="56" docLength="729" length="3" offset="718" repeat="3" starttimestamp="1648471300703" timestamp="14235373" timestamp2="14235501">
    <text><![CDATA[ion]]></text>
  </DocumentChange>
  <Command __id="7649" _type="PauseCommand" date="Mon Mar 28 12:39:02 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="14241394">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2702]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7650" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 12:39:02 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="14241653" />
  <Command __id="7648" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:39:02 EDT 2022" docASTNodeCount="915" docActiveCodeLength="6877" docExpressionCount="643" docLength="7764" projectName="A5" starttimestamp="1648471300703" timestamp="14241394">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶"), Diff(INSERT,"import server.remote.ServerRemoteInterfaceGIPC;¶"), Diff(EQUAL,"import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			// TODO Auto-generated catch block¶			e3.printStackTrace();¶		}¶		// Get server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		//NOTE This is just a hacky way of satisfying tests¶		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();¶		clientOutCoupler = new ClientOutCoupler("), Diff(INSERT,"(ServerRemoteInterfaceGIPC) "), Diff(EQUAL,"server, aClient, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶	¶	¶	@Override	¶	public void trace(boolean newValue) {¶		super.trace(newValue);¶		Tracer.showInfo(isTrace());¶	}¶	¶	@Override¶	public void experimentInput() {¶		long aStartTime = System.currentTimeMillis();¶		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);¶		boolean anOldValue = isTrace();¶		this.trace(false);¶		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {¶			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);¶		¶		}¶		trace(anOldValue);¶		long anEndTime = System.currentTimeMillis();¶		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);¶		¶	}¶	¶	@Override¶	/*¶	 * This override is not really needed, provided here to show that this method¶	 * exists.¶	 */¶	public void delaySends(int aMillisecondDelay) {¶		// getDelay() can be used to determine the delay¶		// in other parts of the program¶		super.delaySends(aMillisecondDelay);¶	}¶	¶	@Override¶	/**¶	 * Relevant in consistency assignments only ¶	 */¶	public void atomicBroadcast(boolean newValue) {¶		super.atomicBroadcast(newValue);¶		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceRMI server = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);
	}
	
	@Override
	protected void setTracing() {
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);

		// Locate Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			// TODO Auto-generated catch block
			e3.printStackTrace();
		}
		// Get server here
		
		try {
			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		//NOTE This is just a hacky way of satisfying tests
		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();
		clientOutCoupler = new ClientOutCoupler((ServerRemoteInterfaceGIPC) server, aClient, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}
	
	
	@Override	
	public void trace(boolean newValue) {
		super.trace(newValue);
		Tracer.showInfo(isTrace());
	}
	
	@Override
	public void experimentInput() {
		long aStartTime = System.currentTimeMillis();
		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);
		boolean anOldValue = isTrace();
		this.trace(false);
		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {
			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);
		
		}
		trace(anOldValue);
		long anEndTime = System.currentTimeMillis();
		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);
		
	}
	
	@Override
	/*
	 * This override is not really needed, provided here to show that this method
	 * exists.
	 */
	public void delaySends(int aMillisecondDelay) {
		// getDelay() can be used to determine the delay
		// in other parts of the program
		super.delaySends(aMillisecondDelay);
	}
	
	@Override
	/**
	 * Relevant in consistency assignments only 
	 */
	public void atomicBroadcast(boolean newValue) {
		super.atomicBroadcast(newValue);
		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}


}
]]></snapshot>
  </Command>
  <Command __id="7652" _type="PauseCommand" date="Mon Mar 28 12:39:07 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="14247229">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5576]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7653" _type="MoveCaretCommand" caretOffset="7925" date="Mon Mar 28 12:39:08 EDT 2022" docOffset="7925" starttimestamp="1648471300703" timestamp="14247522" />
  <Command __id="7655" _type="PauseCommand" date="Mon Mar 28 12:39:12 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="14252038">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4516]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7654" _type="MoveCaretCommand" caretOffset="7968" date="Mon Mar 28 12:39:12 EDT 2022" docOffset="7968" starttimestamp="1648471300703" timestamp="14252038" />
  <Command __id="7656" _type="MoveCaretCommand" caretOffset="7968" date="Mon Mar 28 12:39:12 EDT 2022" docOffset="7968" starttimestamp="1648471300703" timestamp="14252038" />
  <Command __id="7658" _type="InsertStringCommand" date="Mon Mar 28 12:39:13 EDT 2022" starttimestamp="1648471300703" timestamp="14252691" timestamp2="14252691">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7659" _type="InsertStringCommand" date="Mon Mar 28 12:39:13 EDT 2022" starttimestamp="1648471300703" timestamp="14252692" timestamp2="14252692">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7661" _type="InsertStringCommand" date="Mon Mar 28 12:39:13 EDT 2022" starttimestamp="1648471300703" timestamp="14252868" timestamp2="14252868">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="7662" _type="InsertStringCommand" date="Mon Mar 28 12:39:13 EDT 2022" starttimestamp="1648471300703" timestamp="14252868" timestamp2="14252868">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="7664" _type="InsertStringCommand" date="Mon Mar 28 12:39:13 EDT 2022" starttimestamp="1648471300703" timestamp="14252910" timestamp2="14252910">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7665" _type="InsertStringCommand" date="Mon Mar 28 12:39:13 EDT 2022" starttimestamp="1648471300703" timestamp="14252911" timestamp2="14252911">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7667" _type="InsertStringCommand" date="Mon Mar 28 12:39:13 EDT 2022" starttimestamp="1648471300703" timestamp="14253086" timestamp2="14253086">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7668" _type="InsertStringCommand" date="Mon Mar 28 12:39:13 EDT 2022" starttimestamp="1648471300703" timestamp="14253086" timestamp2="14253086">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7670" _type="InsertStringCommand" date="Mon Mar 28 12:39:13 EDT 2022" starttimestamp="1648471300703" timestamp="14253152" timestamp2="14253152">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7671" _type="InsertStringCommand" date="Mon Mar 28 12:39:13 EDT 2022" starttimestamp="1648471300703" timestamp="14253152" timestamp2="14253152">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7673" _type="InsertStringCommand" date="Mon Mar 28 12:39:14 EDT 2022" starttimestamp="1648471300703" timestamp="14253302" timestamp2="14253302">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7674" _type="InsertStringCommand" date="Mon Mar 28 12:39:14 EDT 2022" starttimestamp="1648471300703" timestamp="14253302" timestamp2="14253302">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7676" _type="InsertStringCommand" date="Mon Mar 28 12:39:14 EDT 2022" starttimestamp="1648471300703" timestamp="14253517" timestamp2="14253517">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7677" _type="InsertStringCommand" date="Mon Mar 28 12:39:14 EDT 2022" starttimestamp="1648471300703" timestamp="14253517" timestamp2="14253517">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7678" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 12:39:14 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="14253534" />
  <Command __id="7683" _type="PauseCommand" date="Mon Mar 28 12:39:16 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14255440">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1906]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="7682" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 12:39:16 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="14255440" />
  <Command __id="7685" _type="InsertStringCommand" date="Mon Mar 28 12:39:16 EDT 2022" starttimestamp="1648471300703" timestamp="14255472" timestamp2="14255472">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7686" _type="InsertStringCommand" date="Mon Mar 28 12:39:16 EDT 2022" starttimestamp="1648471300703" timestamp="14255472" timestamp2="14255472">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7651" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 12:39:07 EDT 2022" docASTNodeCount="964" docActiveCodeLength="7283" docExpressionCount="688" docLength="7981" projectName="A5" starttimestamp="1648471300703" timestamp="14247229">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.inputParameters.SimulationParametersListener;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public "), Diff(DELETE,"default "), Diff(EQUAL,"void broadcastMetaState("), Diff(INSERT,"boolean bool"), Diff(EQUAL,") {¶		¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.inputParameters.SimulationParametersListener;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
	

		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean bool) {
		
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="7657" _type="Insert" date="Mon Mar 28 12:39:13 EDT 2022" docASTNodeCount="968" docActiveCodeLength="7293" docExpressionCount="691" docLength="7991" length="10" offset="7968" repeat="10" starttimestamp="1648471300703" timestamp="14252685" timestamp2="14254014">
    <text><![CDATA[system.out]]></text>
  </DocumentChange>
  <DocumentChange __id="7684" _type="Replace" date="Mon Mar 28 12:39:16 EDT 2022" docASTNodeCount="968" docActiveCodeLength="7293" docExpressionCount="691" docLength="7991" endLine="230" insertionLength="6" int_docASTNodeCount="964" int_docActiveCodeLength="7287" int_docExpressionCount="688" int_docLength="7985" length="6" offset="7968" startLine="230" starttimestamp="1648471300703" timestamp="14255459">
    <deletedText><![CDATA[system]]></deletedText>
    <insertedText><![CDATA[System]]></insertedText>
  </DocumentChange>
  <Command __id="7688" _type="PauseCommand" date="Mon Mar 28 12:39:17 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14256889">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1417]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="7687" _type="Insert" date="Mon Mar 28 12:39:17 EDT 2022" docASTNodeCount="970" docActiveCodeLength="7295" docExpressionCount="693" docLength="7993" length="2" offset="7978" repeat="2" starttimestamp="1648471300703" timestamp="14256889" timestamp2="14257816">
    <text><![CDATA[.p]]></text>
  </DocumentChange>
  <Command __id="7689" _type="InsertStringCommand" date="Mon Mar 28 12:39:17 EDT 2022" starttimestamp="1648471300703" timestamp="14256908" timestamp2="14256908">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7690" _type="InsertStringCommand" date="Mon Mar 28 12:39:17 EDT 2022" starttimestamp="1648471300703" timestamp="14256908" timestamp2="14256908">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7691" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 12:39:17 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="14256918" />
  <Command __id="7694" _type="PauseCommand" date="Mon Mar 28 12:39:19 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14258703">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1785]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="7693" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 12:39:19 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="14258703" />
  <DocumentChange __id="7695" _type="Replace" date="Mon Mar 28 12:39:19 EDT 2022" docASTNodeCount="971" docActiveCodeLength="7303" docExpressionCount="694" docLength="8001" endLine="230" insertionLength="9" int_docASTNodeCount="968" int_docActiveCodeLength="7294" int_docExpressionCount="691" int_docLength="7992" length="1" offset="7979" startLine="230" starttimestamp="1648471300703" timestamp="14258711">
    <deletedText><![CDATA[p]]></deletedText>
    <insertedText><![CDATA[print(b);]]></insertedText>
  </DocumentChange>
  <Command __id="7696" _type="InsertStringCommand" date="Mon Mar 28 12:39:19 EDT 2022" starttimestamp="1648471300703" timestamp="14258914" timestamp2="14258914">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7697" _type="InsertStringCommand" date="Mon Mar 28 12:39:19 EDT 2022" starttimestamp="1648471300703" timestamp="14258914" timestamp2="14258914">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="7698" _type="Replace" date="Mon Mar 28 12:39:20 EDT 2022" docASTNodeCount="964" docActiveCodeLength="7303" docExpressionCount="688" docLength="8001" endLine="230" insertionLength="1" int_docASTNodeCount="970" int_docActiveCodeLength="7302" int_docExpressionCount="693" int_docLength="8000" length="1" offset="7985" startLine="230" starttimestamp="1648471300703" timestamp="14259880">
    <deletedText><![CDATA[b]]></deletedText>
    <insertedText><![CDATA["]]></insertedText>
  </DocumentChange>
  <Command __id="7699" _type="InsertStringCommand" date="Mon Mar 28 12:39:20 EDT 2022" starttimestamp="1648471300703" timestamp="14259899" timestamp2="14259899">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="7700" _type="InsertStringCommand" date="Mon Mar 28 12:39:20 EDT 2022" starttimestamp="1648471300703" timestamp="14259899" timestamp2="14259899">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="7702" _type="InsertStringCommand" date="Mon Mar 28 12:39:21 EDT 2022" starttimestamp="1648471300703" timestamp="14260302" timestamp2="14260302">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="7703" _type="InsertStringCommand" date="Mon Mar 28 12:39:21 EDT 2022" starttimestamp="1648471300703" timestamp="14260302" timestamp2="14260302">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="7705" _type="InsertStringCommand" date="Mon Mar 28 12:39:21 EDT 2022" starttimestamp="1648471300703" timestamp="14260423" timestamp2="14260423">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="7706" _type="InsertStringCommand" date="Mon Mar 28 12:39:21 EDT 2022" starttimestamp="1648471300703" timestamp="14260423" timestamp2="14260423">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="7708" _type="InsertStringCommand" date="Mon Mar 28 12:39:21 EDT 2022" starttimestamp="1648471300703" timestamp="14260514" timestamp2="14260514">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="7709" _type="InsertStringCommand" date="Mon Mar 28 12:39:21 EDT 2022" starttimestamp="1648471300703" timestamp="14260516" timestamp2="14260516">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="7711" _type="InsertStringCommand" date="Mon Mar 28 12:39:21 EDT 2022" starttimestamp="1648471300703" timestamp="14260647" timestamp2="14260647">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="7712" _type="InsertStringCommand" date="Mon Mar 28 12:39:21 EDT 2022" starttimestamp="1648471300703" timestamp="14260647" timestamp2="14260647">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="7714" _type="InsertStringCommand" date="Mon Mar 28 12:39:21 EDT 2022" starttimestamp="1648471300703" timestamp="14261215" timestamp2="14261215">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="7715" _type="InsertStringCommand" date="Mon Mar 28 12:39:21 EDT 2022" starttimestamp="1648471300703" timestamp="14261215" timestamp2="14261215">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="7716" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:39:22 EDT 2022" starttimestamp="1648471300703" timestamp="14261695" />
  <Command __id="7717" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Mar 28 12:39:22 EDT 2022" starttimestamp="1648471300703" timestamp="14261695" />
  <Command __id="7719" _type="InsertStringCommand" date="Mon Mar 28 12:39:22 EDT 2022" starttimestamp="1648471300703" timestamp="14262156" timestamp2="14262156">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7720" _type="InsertStringCommand" date="Mon Mar 28 12:39:22 EDT 2022" starttimestamp="1648471300703" timestamp="14262156" timestamp2="14262156">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7722" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262318" timestamp2="14262318">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7723" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262318" timestamp2="14262318">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7725" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262426" timestamp2="14262426">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7726" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262426" timestamp2="14262426">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7728" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262490" timestamp2="14262490">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7729" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262490" timestamp2="14262490">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7731" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262719" timestamp2="14262719">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7732" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262719" timestamp2="14262719">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7734" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262919" timestamp2="14262919">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7735" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262919" timestamp2="14262919">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7737" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262976" timestamp2="14262976">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7738" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14262978" timestamp2="14262978">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7740" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14263074" timestamp2="14263074">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7741" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14263075" timestamp2="14263075">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7743" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14263283" timestamp2="14263283">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7744" _type="InsertStringCommand" date="Mon Mar 28 12:39:23 EDT 2022" starttimestamp="1648471300703" timestamp="14263283" timestamp2="14263283">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7746" _type="InsertStringCommand" date="Mon Mar 28 12:39:24 EDT 2022" starttimestamp="1648471300703" timestamp="14264147" timestamp2="14264147">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7747" _type="InsertStringCommand" date="Mon Mar 28 12:39:24 EDT 2022" starttimestamp="1648471300703" timestamp="14264147" timestamp2="14264147">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7749" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14264365" timestamp2="14264365">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7750" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14264365" timestamp2="14264365">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7752" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14264434" timestamp2="14264434">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7753" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14264434" timestamp2="14264434">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7755" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14264515" timestamp2="14264515">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7756" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14264515" timestamp2="14264515">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7758" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14264720" timestamp2="14264720">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7759" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14264720" timestamp2="14264720">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7761" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14265034" timestamp2="14265034">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7762" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14265034" timestamp2="14265034">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7764" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14265131" timestamp2="14265131">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7765" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14265131" timestamp2="14265131">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7767" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14265289" timestamp2="14265289">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7768" _type="InsertStringCommand" date="Mon Mar 28 12:39:25 EDT 2022" starttimestamp="1648471300703" timestamp="14265289" timestamp2="14265289">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7770" _type="InsertStringCommand" date="Mon Mar 28 12:39:26 EDT 2022" starttimestamp="1648471300703" timestamp="14265470" timestamp2="14265470">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7771" _type="InsertStringCommand" date="Mon Mar 28 12:39:26 EDT 2022" starttimestamp="1648471300703" timestamp="14265470" timestamp2="14265470">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7812" _type="RunCommand" className="/A5/src/client/Client.java" date="Mon Mar 28 12:39:46 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="14285587" type="Run" />
  <Command __id="7814" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:39:46 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14285834" type="Run" />
  <Command __id="7815" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:39:46 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14285837" type="Run" />
  <Command __id="7816" _type="ConsoleOutput" date="Mon Mar 28 12:39:46 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="14286239" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.4855095837229424
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server proxy sent to RMI Registry"), Diff(INSERT,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.4855095837229424"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7818" _type="PauseCommand" date="Mon Mar 28 12:39:48 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14287788">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1549]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7830" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:39:58 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14297964" type="Run" />
  <Command __id="7832" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:39:58 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14297977" type="Run" />
  <Command __id="7833" _type="ShellCommand" date="Mon Mar 28 12:39:59 EDT 2022" starttimestamp="1648471300703" timestamp="14298462" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7835" _type="PauseCommand" date="Mon Mar 28 12:40:01 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="14300962">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2500]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="7836" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:40:10 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14310288" type="Run" />
  <Command __id="7839" _type="PauseCommand" date="Mon Mar 28 12:40:13 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="14312644">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2356]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="7841" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:40:25 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14325191" type="Run" />
  <Command __id="7843" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:40:25 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14325220" type="Run" />
  <Command __id="7845" _type="PauseCommand" date="Mon Mar 28 12:40:34 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="14333458">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[8238]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7844" _type="ShellCommand" date="Mon Mar 28 12:40:34 EDT 2022" starttimestamp="1648471300703" timestamp="14333458" type="ECLIPSE_MINIMIZED" />
  <Command __id="7846" _type="ShellCommand" date="Mon Mar 28 12:40:34 EDT 2022" starttimestamp="1648471300703" timestamp="14333482" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7848" _type="PauseCommand" date="Mon Mar 28 12:41:40 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="14400177">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[66695]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="7847" _type="BalloonCommand" date="Mon Mar 28 12:41:40 EDT 2022" message="*******************************************
Worked 24 minutes(fixed)/30 minutes(context based) from
Mon Mar 28 11:41:40 EDT 2022 to Mon Mar 28 12:40:34 EDT 2022
Edited 1 Projects: 
	A5
Edited 5 Files: 
	C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteInterfaceGIPC.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientConfigure.java
	C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java
Number of insert: 495
Number of delete: 218
" starttimestamp="1648471300703" timestamp="14400177">
    <fineGrainedWorkTime><![CDATA[30]]></fineGrainedWorkTime>
    <insert><![CDATA[495]]></insert>
    <startTime><![CDATA[1648482100878]]></startTime>
    <endTime><![CDATA[1648485634185]]></endTime>
    <workTime><![CDATA[24]]></workTime>
    <delete><![CDATA[218]]></delete>
  </Command>
  <Command __id="7850" _type="PauseCommand" date="Mon Mar 28 12:41:52 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="14412079">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[11902]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7849" _type="ShellCommand" date="Mon Mar 28 12:41:52 EDT 2022" starttimestamp="1648471300703" timestamp="14412079" type="ECLIPSE_MAXIMIZED" />
  <Command __id="7851" _type="ShellCommand" date="Mon Mar 28 12:41:52 EDT 2022" starttimestamp="1648471300703" timestamp="14412247" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7853" _type="PauseCommand" date="Mon Mar 28 12:42:03 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="14422891">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10644]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7872" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:50:10 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14910245" type="Run" />
  <Command __id="7874" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:50:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="14910302" type="Run" />
  <Command __id="7876" _type="PauseCommand" date="Mon Mar 28 12:50:56 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="14955854">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[45552]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7875" _type="ShellCommand" date="Mon Mar 28 12:50:56 EDT 2022" starttimestamp="1648471300703" timestamp="14955854" type="ECLIPSE_MAXIMIZED" />
  <Command __id="7877" _type="ShellCommand" date="Mon Mar 28 12:50:56 EDT 2022" starttimestamp="1648471300703" timestamp="14956109" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7879" _type="PauseCommand" date="Mon Mar 28 12:51:29 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="14989118">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[33009]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7878" _type="MoveCaretCommand" caretOffset="8022" date="Mon Mar 28 12:51:29 EDT 2022" docOffset="8022" starttimestamp="1648471300703" timestamp="14989118" />
  <Command __id="7880" _type="MoveCaretCommand" caretOffset="8022" date="Mon Mar 28 12:51:29 EDT 2022" docOffset="8022" starttimestamp="1648471300703" timestamp="14989118" />
  <Command __id="7882" _type="PauseCommand" date="Mon Mar 28 12:51:30 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14990183">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1065]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7881" _type="MoveCaretCommand" caretOffset="8018" date="Mon Mar 28 12:51:30 EDT 2022" docOffset="8018" starttimestamp="1648471300703" timestamp="14990183" />
  <Command __id="7883" _type="MoveCaretCommand" caretOffset="8018" date="Mon Mar 28 12:51:30 EDT 2022" docOffset="8018" starttimestamp="1648471300703" timestamp="14990183" />
  <Command __id="7885" _type="InsertStringCommand" date="Mon Mar 28 12:51:31 EDT 2022" starttimestamp="1648471300703" timestamp="14990508" timestamp2="14990508">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7886" _type="InsertStringCommand" date="Mon Mar 28 12:51:31 EDT 2022" starttimestamp="1648471300703" timestamp="14990508" timestamp2="14990508">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7888" _type="InsertStringCommand" date="Mon Mar 28 12:51:31 EDT 2022" starttimestamp="1648471300703" timestamp="14991072" timestamp2="14991072">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7889" _type="InsertStringCommand" date="Mon Mar 28 12:51:31 EDT 2022" starttimestamp="1648471300703" timestamp="14991072" timestamp2="14991072">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7891" _type="InsertStringCommand" date="Mon Mar 28 12:51:31 EDT 2022" starttimestamp="1648471300703" timestamp="14991185" timestamp2="14991185">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7892" _type="InsertStringCommand" date="Mon Mar 28 12:51:31 EDT 2022" starttimestamp="1648471300703" timestamp="14991185" timestamp2="14991185">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7894" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14991427" timestamp2="14991427">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="7895" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14991427" timestamp2="14991427">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="7897" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14991639" timestamp2="14991639">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7898" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14991639" timestamp2="14991639">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7900" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14991737" timestamp2="14991737">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7901" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14991737" timestamp2="14991737">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7903" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14991839" timestamp2="14991839">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7904" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14991839" timestamp2="14991839">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7906" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14992004" timestamp2="14992004">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7907" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14992004" timestamp2="14992004">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7909" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14992287" timestamp2="14992287">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7910" _type="InsertStringCommand" date="Mon Mar 28 12:51:32 EDT 2022" starttimestamp="1648471300703" timestamp="14992287" timestamp2="14992287">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7912" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14992423" timestamp2="14992423">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7913" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14992423" timestamp2="14992423">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7915" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14992482" timestamp2="14992482">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7916" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14992482" timestamp2="14992482">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7918" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14992793" timestamp2="14992793">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7919" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14992793" timestamp2="14992793">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7921" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14992945" timestamp2="14992945">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7922" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14992945" timestamp2="14992945">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7924" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14993214" timestamp2="14993214">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7925" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14993214" timestamp2="14993214">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7927" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14993285" timestamp2="14993285">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7928" _type="InsertStringCommand" date="Mon Mar 28 12:51:33 EDT 2022" starttimestamp="1648471300703" timestamp="14993285" timestamp2="14993285">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7930" _type="InsertStringCommand" date="Mon Mar 28 12:51:34 EDT 2022" starttimestamp="1648471300703" timestamp="14993318" timestamp2="14993318">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7931" _type="InsertStringCommand" date="Mon Mar 28 12:51:34 EDT 2022" starttimestamp="1648471300703" timestamp="14993318" timestamp2="14993318">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7933" _type="InsertStringCommand" date="Mon Mar 28 12:51:34 EDT 2022" starttimestamp="1648471300703" timestamp="14993471" timestamp2="14993471">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7934" _type="InsertStringCommand" date="Mon Mar 28 12:51:34 EDT 2022" starttimestamp="1648471300703" timestamp="14993471" timestamp2="14993471">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7936" _type="InsertStringCommand" date="Mon Mar 28 12:51:34 EDT 2022" starttimestamp="1648471300703" timestamp="14994015" timestamp2="14994015">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="7937" _type="InsertStringCommand" date="Mon Mar 28 12:51:34 EDT 2022" starttimestamp="1648471300703" timestamp="14994015" timestamp2="14994015">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="7939" _type="InsertStringCommand" date="Mon Mar 28 12:51:34 EDT 2022" starttimestamp="1648471300703" timestamp="14994190" timestamp2="14994190">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="7940" _type="InsertStringCommand" date="Mon Mar 28 12:51:34 EDT 2022" starttimestamp="1648471300703" timestamp="14994190" timestamp2="14994190">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="7942" _type="InsertStringCommand" date="Mon Mar 28 12:51:35 EDT 2022" starttimestamp="1648471300703" timestamp="14994320" timestamp2="14994320">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="7943" _type="InsertStringCommand" date="Mon Mar 28 12:51:35 EDT 2022" starttimestamp="1648471300703" timestamp="14994320" timestamp2="14994320">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="7945" _type="InsertStringCommand" date="Mon Mar 28 12:51:35 EDT 2022" starttimestamp="1648471300703" timestamp="14994812" timestamp2="14994812">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7946" _type="InsertStringCommand" date="Mon Mar 28 12:51:35 EDT 2022" starttimestamp="1648471300703" timestamp="14994812" timestamp2="14994812">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7948" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14995512" timestamp2="14995512">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7949" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14995512" timestamp2="14995512">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7951" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14995616" timestamp2="14995616">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7952" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14995616" timestamp2="14995616">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7954" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14995808" timestamp2="14995808">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="7955" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14995808" timestamp2="14995808">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="7957" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14995938" timestamp2="14995938">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7958" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14995938" timestamp2="14995938">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7960" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14996023" timestamp2="14996023">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="7961" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14996023" timestamp2="14996023">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="7963" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14996151" timestamp2="14996151">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7964" _type="InsertStringCommand" date="Mon Mar 28 12:51:36 EDT 2022" starttimestamp="1648471300703" timestamp="14996151" timestamp2="14996151">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7966" _type="PauseCommand" date="Mon Mar 28 12:51:38 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="14997568">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1417]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7965" _type="MoveCaretCommand" caretOffset="8033" date="Mon Mar 28 12:51:38 EDT 2022" docOffset="8033" starttimestamp="1648471300703" timestamp="14997568" />
  <Command __id="7967" _type="MoveCaretCommand" caretOffset="8033" date="Mon Mar 28 12:51:38 EDT 2022" docOffset="8033" starttimestamp="1648471300703" timestamp="14997568" />
  <Command __id="7969" _type="InsertStringCommand" date="Mon Mar 28 12:51:38 EDT 2022" starttimestamp="1648471300703" timestamp="14998053" timestamp2="14998053">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7970" _type="InsertStringCommand" date="Mon Mar 28 12:51:38 EDT 2022" starttimestamp="1648471300703" timestamp="14998053" timestamp2="14998053">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7972" _type="InsertStringCommand" date="Mon Mar 28 12:51:39 EDT 2022" starttimestamp="1648471300703" timestamp="14998476" timestamp2="14998476">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7973" _type="InsertStringCommand" date="Mon Mar 28 12:51:39 EDT 2022" starttimestamp="1648471300703" timestamp="14998476" timestamp2="14998476">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7975" _type="InsertStringCommand" date="Mon Mar 28 12:51:39 EDT 2022" starttimestamp="1648471300703" timestamp="14998536" timestamp2="14998536">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7976" _type="InsertStringCommand" date="Mon Mar 28 12:51:39 EDT 2022" starttimestamp="1648471300703" timestamp="14998536" timestamp2="14998536">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7978" _type="InsertStringCommand" date="Mon Mar 28 12:51:39 EDT 2022" starttimestamp="1648471300703" timestamp="14998727" timestamp2="14998727">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7979" _type="InsertStringCommand" date="Mon Mar 28 12:51:39 EDT 2022" starttimestamp="1648471300703" timestamp="14998727" timestamp2="14998727">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7981" _type="InsertStringCommand" date="Mon Mar 28 12:51:39 EDT 2022" starttimestamp="1648471300703" timestamp="14998847" timestamp2="14998847">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7982" _type="InsertStringCommand" date="Mon Mar 28 12:51:39 EDT 2022" starttimestamp="1648471300703" timestamp="14998848" timestamp2="14998848">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7984" _type="InsertStringCommand" date="Mon Mar 28 12:51:39 EDT 2022" starttimestamp="1648471300703" timestamp="14999174" timestamp2="14999174">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7985" _type="InsertStringCommand" date="Mon Mar 28 12:51:39 EDT 2022" starttimestamp="1648471300703" timestamp="14999175" timestamp2="14999175">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7987" _type="InsertStringCommand" date="Mon Mar 28 12:51:40 EDT 2022" starttimestamp="1648471300703" timestamp="14999507" timestamp2="14999507">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="7988" _type="InsertStringCommand" date="Mon Mar 28 12:51:40 EDT 2022" starttimestamp="1648471300703" timestamp="14999507" timestamp2="14999507">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="7990" _type="InsertStringCommand" date="Mon Mar 28 12:51:40 EDT 2022" starttimestamp="1648471300703" timestamp="14999714" timestamp2="14999714">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7991" _type="InsertStringCommand" date="Mon Mar 28 12:51:40 EDT 2022" starttimestamp="1648471300703" timestamp="14999714" timestamp2="14999714">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7993" _type="InsertStringCommand" date="Mon Mar 28 12:51:40 EDT 2022" starttimestamp="1648471300703" timestamp="14999752" timestamp2="14999752">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7994" _type="InsertStringCommand" date="Mon Mar 28 12:51:40 EDT 2022" starttimestamp="1648471300703" timestamp="14999752" timestamp2="14999752">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7996" _type="InsertStringCommand" date="Mon Mar 28 12:51:40 EDT 2022" starttimestamp="1648471300703" timestamp="14999889" timestamp2="14999889">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7997" _type="InsertStringCommand" date="Mon Mar 28 12:51:40 EDT 2022" starttimestamp="1648471300703" timestamp="14999889" timestamp2="14999889">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7999" _type="InsertStringCommand" date="Mon Mar 28 12:51:40 EDT 2022" starttimestamp="1648471300703" timestamp="15000022" timestamp2="15000022">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8000" _type="InsertStringCommand" date="Mon Mar 28 12:51:40 EDT 2022" starttimestamp="1648471300703" timestamp="15000023" timestamp2="15000023">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8002" _type="PauseCommand" date="Mon Mar 28 12:51:42 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="15001492">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1469]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8001" _type="MoveCaretCommand" caretOffset="7958" date="Mon Mar 28 12:51:42 EDT 2022" docOffset="7958" starttimestamp="1648471300703" timestamp="15001492" />
  <Command __id="8003" _type="MoveCaretCommand" caretOffset="7958" date="Mon Mar 28 12:51:42 EDT 2022" docOffset="7958" starttimestamp="1648471300703" timestamp="15001493" />
  <Command __id="8005" _type="PauseCommand" date="Mon Mar 28 12:54:31 EDT 2022" range="2m-5m" starttimestamp="1648471300703" timestamp="15170802">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[169309]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8013" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:55:10 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="15210253" type="Run" />
  <Command __id="8015" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:55:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="15210302" type="Run" />
  <Command __id="8017" _type="PauseCommand" date="Mon Mar 28 12:55:14 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="15213419">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3117]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8016" _type="ShellCommand" date="Mon Mar 28 12:55:14 EDT 2022" starttimestamp="1648471300703" timestamp="15213419" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8018" _type="MoveCaretCommand" caretOffset="4546" date="Mon Mar 28 12:55:14 EDT 2022" docOffset="4546" starttimestamp="1648471300703" timestamp="15213453" />
  <Command __id="8019" _type="MoveCaretCommand" caretOffset="4546" date="Mon Mar 28 12:55:14 EDT 2022" docOffset="4546" starttimestamp="1648471300703" timestamp="15213453" />
  <Command __id="8021" _type="PauseCommand" date="Mon Mar 28 12:58:04 EDT 2022" range="2m-5m" starttimestamp="1648471300703" timestamp="15383820">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[170367]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="8026" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:58:19 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="15398923" type="Run" />
  <Command __id="8029" _type="PauseCommand" date="Mon Mar 28 12:58:27 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="15407184">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[8261]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8030" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 12:59:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="15482930" type="Run" />
  <Command __id="8033" _type="PauseCommand" date="Mon Mar 28 12:59:44 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="15484124">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1194]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8039" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:00:10 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="15510256" type="Run" />
  <Command __id="8041" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:00:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="15510319" type="Run" />
  <Command __id="8043" _type="PauseCommand" date="Mon Mar 28 13:01:06 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="15566242">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[55923]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8042" _type="ShellCommand" date="Mon Mar 28 13:01:06 EDT 2022" starttimestamp="1648471300703" timestamp="15566242" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8045" _type="PauseCommand" date="Mon Mar 28 13:01:12 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="15571490">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5248]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8044" _type="ShellCommand" date="Mon Mar 28 13:01:12 EDT 2022" starttimestamp="1648471300703" timestamp="15571490" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8047" _type="PauseCommand" date="Mon Mar 28 13:01:22 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="15581802">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10312]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8046" _type="ShellCommand" date="Mon Mar 28 13:01:22 EDT 2022" starttimestamp="1648471300703" timestamp="15581802" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8049" _type="PauseCommand" date="Mon Mar 28 13:02:09 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="15628926">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[47124]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8048" _type="ShellCommand" date="Mon Mar 28 13:02:09 EDT 2022" starttimestamp="1648471300703" timestamp="15628926" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8051" _type="PauseCommand" date="Mon Mar 28 13:02:18 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="15638209">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9283]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8050" _type="ShellCommand" date="Mon Mar 28 13:02:18 EDT 2022" starttimestamp="1648471300703" timestamp="15638209" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8053" _type="PauseCommand" date="Mon Mar 28 13:02:26 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="15645433">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7224]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8052" _type="ShellCommand" date="Mon Mar 28 13:02:26 EDT 2022" starttimestamp="1648471300703" timestamp="15645433" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8055" _type="PauseCommand" date="Mon Mar 28 13:02:32 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="15651896">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6463]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8054" _type="ShellCommand" date="Mon Mar 28 13:02:32 EDT 2022" starttimestamp="1648471300703" timestamp="15651896" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8057" _type="PauseCommand" date="Mon Mar 28 13:03:20 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="15699941">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[48045]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8056" _type="ShellCommand" date="Mon Mar 28 13:03:20 EDT 2022" starttimestamp="1648471300703" timestamp="15699941" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8059" _type="PauseCommand" date="Mon Mar 28 13:04:39 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="15778747">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[78806]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8077" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:10:10 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16110276" type="Run" />
  <Command __id="8079" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:10:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16110326" type="Run" />
  <Command __id="8081" _type="PauseCommand" date="Mon Mar 28 13:11:12 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="16171432">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[61106]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8080" _type="ShellCommand" date="Mon Mar 28 13:11:12 EDT 2022" starttimestamp="1648471300703" timestamp="16171432" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8083" _type="PauseCommand" date="Mon Mar 28 13:11:17 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="16176751">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5319]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8082" _type="ShellCommand" date="Mon Mar 28 13:11:17 EDT 2022" starttimestamp="1648471300703" timestamp="16176751" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8085" _type="PauseCommand" date="Mon Mar 28 13:13:52 EDT 2022" range="2m-5m" starttimestamp="1648471300703" timestamp="16331954">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[155203]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8084" _type="ShellCommand" date="Mon Mar 28 13:13:52 EDT 2022" starttimestamp="1648471300703" timestamp="16331954" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8087" _type="PauseCommand" date="Mon Mar 28 13:14:09 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="16348356">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16402]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8086" _type="ShellCommand" date="Mon Mar 28 13:14:09 EDT 2022" starttimestamp="1648471300703" timestamp="16348356" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8089" _type="PauseCommand" date="Mon Mar 28 13:15:49 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="16448979">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[100623]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8088" _type="ShellCommand" date="Mon Mar 28 13:15:49 EDT 2022" starttimestamp="1648471300703" timestamp="16448979" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8091" _type="PauseCommand" date="Mon Mar 28 13:15:53 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="16452509">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3530]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="8090" _type="ConsoleInput" date="Mon Mar 28 13:15:53 EDT 2022" starttimestamp="1648471300703" timestamp="16452509" type="Exception">
    <outputString><![CDATA[i GIPC
]]></outputString>
  </Command>
  <Command __id="8092" _type="ConsoleOutput" date="Mon Mar 28 13:15:53 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="16452610" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[GIPC]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Command recieved for broadcast: move 50 -50"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[GIPC]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8094" _type="PauseCommand" date="Mon Mar 28 13:16:14 EDT 2022" range="20s-30s" starttimestamp="1648471300703" timestamp="16474035">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[21425]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8102" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:17:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16556712" type="Run" />
  <Command __id="8104" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:17:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16556777" type="Run" />
  <Command __id="8106" _type="PauseCommand" date="Mon Mar 28 13:18:19 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="16599296">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[42519]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8105" _type="ShellCommand" date="Mon Mar 28 13:18:19 EDT 2022" starttimestamp="1648471300703" timestamp="16599296" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8108" _type="PauseCommand" date="Mon Mar 28 13:18:33 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="16612408">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13112]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8107" _type="SelectTextCommand" caretOffset="6453" date="Mon Mar 28 13:18:33 EDT 2022" end="6520" start="6453" starttimestamp="1648471300703" timestamp="16612408" />
  <Command __id="8109" _type="SelectTextCommand" caretOffset="6453" date="Mon Mar 28 13:18:33 EDT 2022" end="6520" start="6453" starttimestamp="1648471300703" timestamp="16612408" />
  <Command __id="8110" _type="CopyCommand" date="Mon Mar 28 13:18:33 EDT 2022" starttimestamp="1648471300703" timestamp="16612697" />
  <Command __id="8112" _type="PauseCommand" date="Mon Mar 28 13:18:34 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="16613791">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1094]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8111" _type="MoveCaretCommand" caretOffset="6520" date="Mon Mar 28 13:18:34 EDT 2022" docOffset="6520" starttimestamp="1648471300703" timestamp="16613791" />
  <Command __id="8113" _type="MoveCaretCommand" caretOffset="6520" date="Mon Mar 28 13:18:34 EDT 2022" docOffset="6520" starttimestamp="1648471300703" timestamp="16613791" />
  <Command __id="8115" _type="InsertStringCommand" date="Mon Mar 28 13:18:34 EDT 2022" starttimestamp="1648471300703" timestamp="16614069" timestamp2="16614069">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8116" _type="InsertStringCommand" date="Mon Mar 28 13:18:34 EDT 2022" starttimestamp="1648471300703" timestamp="16614069" timestamp2="16614069">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="7701" _type="Insert" date="Mon Mar 28 12:39:20 EDT 2022" docASTNodeCount="971" docActiveCodeLength="7333" docExpressionCount="694" docLength="8031" length="30" offset="7986" repeat="30" starttimestamp="1648471300703" timestamp="14260294" timestamp2="14266969">
    <text><![CDATA[HERE in broadcase meta method"]]></text>
  </DocumentChange>
  <DocumentChange __id="7884" _type="Insert" date="Mon Mar 28 12:51:31 EDT 2022" docASTNodeCount="971" docActiveCodeLength="7337" docExpressionCount="694" docLength="8072" length="41" offset="8018" repeat="38" starttimestamp="1648471300703" timestamp="14990484" timestamp2="15000006">
    <text><![CDATA[
		//Broadcast meta State via RMI always]]></text>
  </DocumentChange>
  <DocumentChange __id="8114" _type="Insert" date="Mon Mar 28 13:18:34 EDT 2022" docASTNodeCount="971" docActiveCodeLength="7341" docExpressionCount="694" docLength="8076" length="4" offset="6520" starttimestamp="1648471300703" timestamp="16614045">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="8118" _type="PauseCommand" date="Mon Mar 28 13:18:37 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="16616668">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2599]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="8119" _type="PasteCommand" date="Mon Mar 28 13:18:37 EDT 2022" starttimestamp="1648471300703" timestamp="16616685" />
  <Command __id="8121" _type="PauseCommand" date="Mon Mar 28 13:18:40 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="16619411">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2726]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="8120" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 13:18:40 EDT 2022" starttimestamp="1648471300703" timestamp="16619411" />
  <Command __id="8122" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:18:40 EDT 2022" starttimestamp="1648471300703" timestamp="16619506" />
  <Command __id="8123" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:18:40 EDT 2022" starttimestamp="1648471300703" timestamp="16619551" />
  <Command __id="8124" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:18:40 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16619689" type="Run" />
  <Command __id="8126" _type="PauseCommand" date="Mon Mar 28 13:18:59 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="16639080">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[19391]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8125" _type="MoveCaretCommand" caretOffset="6453" date="Mon Mar 28 13:18:59 EDT 2022" docOffset="6453" starttimestamp="1648471300703" timestamp="16639080" />
  <Command __id="8127" _type="MoveCaretCommand" caretOffset="6453" date="Mon Mar 28 13:18:59 EDT 2022" docOffset="6453" starttimestamp="1648471300703" timestamp="16639080" />
  <Command __id="8129" _type="InsertStringCommand" date="Mon Mar 28 13:19:00 EDT 2022" starttimestamp="1648471300703" timestamp="16639651" timestamp2="16639651">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8130" _type="InsertStringCommand" date="Mon Mar 28 13:19:00 EDT 2022" starttimestamp="1648471300703" timestamp="16639651" timestamp2="16639651">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8132" _type="InsertStringCommand" date="Mon Mar 28 13:19:00 EDT 2022" starttimestamp="1648471300703" timestamp="16639753" timestamp2="16639753">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8133" _type="InsertStringCommand" date="Mon Mar 28 13:19:00 EDT 2022" starttimestamp="1648471300703" timestamp="16639753" timestamp2="16639753">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8135" _type="PauseCommand" date="Mon Mar 28 13:19:02 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="16641591">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1838]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8149" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="16644381" />
  <Command __id="8151" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="16644432" />
  <Command __id="8152" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 13:19:05 EDT 2022" starttimestamp="1648471300703" timestamp="16644522" />
  <Command __id="8153" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:19:05 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16644527" type="Run" />
  <Command __id="8155" _type="PauseCommand" date="Mon Mar 28 13:19:08 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="16647911">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3384]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="8173" _type="RunCommand" className="/A5/src/client/Client.java" date="Mon Mar 28 13:19:28 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="16668067" type="Run" />
  <Command __id="8175" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:19:29 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16668312" type="Run" />
  <Command __id="8176" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:19:29 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16668318" type="Run" />
  <Command __id="8177" _type="ConsoleOutput" date="Mon Mar 28 13:19:29 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="16668680" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.881191365451442
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server proxy sent to RMI Registry"), Diff(INSERT,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.881191365451442"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8179" _type="PauseCommand" date="Mon Mar 28 13:19:30 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="16670039">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1359]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8180" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:19:33 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16673011" type="Run" />
  <Command __id="8183" _type="PauseCommand" date="Mon Mar 28 13:19:35 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="16675249">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2238]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8191" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:19:38 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16678157" type="Run" />
  <Command __id="8194" _type="PauseCommand" date="Mon Mar 28 13:19:40 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="16679862">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1705]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8193" _type="ShellCommand" date="Mon Mar 28 13:19:40 EDT 2022" starttimestamp="1648471300703" timestamp="16679862" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8196" _type="PauseCommand" date="Mon Mar 28 13:19:48 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="16687437">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7575]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="8197" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:19:52 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16691736" type="Run" />
  <Command __id="8200" _type="PauseCommand" date="Mon Mar 28 13:20:01 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="16700696">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[8960]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8199" _type="ShellCommand" date="Mon Mar 28 13:20:01 EDT 2022" starttimestamp="1648471300703" timestamp="16700696" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8202" _type="PauseCommand" date="Mon Mar 28 13:20:06 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="16705414">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4718]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8201" _type="ShellCommand" date="Mon Mar 28 13:20:06 EDT 2022" starttimestamp="1648471300703" timestamp="16705414" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8204" _type="PauseCommand" date="Mon Mar 28 13:20:07 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="16706487">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1073]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8203" _type="ShellCommand" date="Mon Mar 28 13:20:07 EDT 2022" starttimestamp="1648471300703" timestamp="16706487" type="ECLIPSE_MINIMIZED" />
  <Command __id="8205" _type="ShellCommand" date="Mon Mar 28 13:20:07 EDT 2022" starttimestamp="1648471300703" timestamp="16706524" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8206" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:20:07 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16706638" type="Run" />
  <Command __id="8207" _type="ShellCommand" date="Mon Mar 28 13:20:08 EDT 2022" starttimestamp="1648471300703" timestamp="16707509" type="ECLIPSE_MAXIMIZED" />
  <Command __id="8208" _type="ShellCommand" date="Mon Mar 28 13:20:08 EDT 2022" starttimestamp="1648471300703" timestamp="16707578" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8210" _type="PauseCommand" date="Mon Mar 28 13:20:23 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="16722945">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15367]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="8209" _type="ConsoleInput" date="Mon Mar 28 13:20:23 EDT 2022" starttimestamp="1648471300703" timestamp="16722945" type="Exception">
    <outputString><![CDATA[s "move 50 -50"
]]></outputString>
  </Command>
  <Command __id="8211" _type="ConsoleOutput" date="Mon Mar 28 13:20:23 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="16723000" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8212" _type="ConsoleOutput" date="Mon Mar 28 13:20:24 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="16723475" type="ConsoleOutput">
    <outputString><![CDATA[Command being sent from coupler:move 50 -50
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]"), Diff(INSERT,"Command being sent from coupler:move 50 -50¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8213" _type="ExceptionCommand" date="Mon Mar 28 13:20:24 EDT 2022" starttimestamp="1648471300703" timestamp="16723475" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalArgumentException: argument type mismatch
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at inputport.rpc.AnAbstractReceivedCallInvoker.invokeMethod(AnAbstractReceivedCallInvoker.java:36)
	at inputport.rpc.duplex.ADuplexReceivedCallInvoker.invokeMethod(ADuplexReceivedCallInvoker.java:34)
	at inputport.rpc.AnAbstractReceivedCallInvoker.messageReceived(AnAbstractReceivedCallInvoker.java:53)
	at inputport.rpc.duplex.AnAsynchronousSingleThreadDuplexReceivedCallInvoker.run(AnAsynchronousSingleThreadDuplexReceivedCallInvoker.java:97)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="8215" _type="PauseCommand" date="Mon Mar 28 13:20:59 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="16759149">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[35666]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="8214" _type="CopyCommand" date="Mon Mar 28 13:20:59 EDT 2022" starttimestamp="1648471300703" timestamp="16759141" />
  <Command __id="8217" _type="PauseCommand" date="Mon Mar 28 13:21:00 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="16760202">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1061]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8216" _type="ShellCommand" date="Mon Mar 28 13:21:00 EDT 2022" starttimestamp="1648471300703" timestamp="16760202" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8219" _type="PauseCommand" date="Mon Mar 28 13:22:08 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="16827555">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[67353]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8218" _type="ShellCommand" date="Mon Mar 28 13:22:08 EDT 2022" starttimestamp="1648471300703" timestamp="16827555" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8221" _type="PauseCommand" date="Mon Mar 28 13:22:18 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="16837529">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9974]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8220" _type="ShellCommand" date="Mon Mar 28 13:22:18 EDT 2022" starttimestamp="1648471300703" timestamp="16837529" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8223" _type="PauseCommand" date="Mon Mar 28 13:22:26 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="16845459">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7930]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8222" _type="ShellCommand" date="Mon Mar 28 13:22:26 EDT 2022" starttimestamp="1648471300703" timestamp="16845459" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="8117" _type="Replace" date="Mon Mar 28 13:18:37 EDT 2022" docASTNodeCount="980" docActiveCodeLength="7408" docExpressionCount="701" docLength="8143" endLine="182" insertionLength="69" int_docASTNodeCount="971" int_docActiveCodeLength="7339" int_docExpressionCount="694" int_docLength="8074" length="2" offset="6522" startLine="182" starttimestamp="1648471300703" timestamp="16616668">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8128" _type="Insert" date="Mon Mar 28 13:19:00 EDT 2022" docASTNodeCount="971" docActiveCodeLength="7341" docExpressionCount="694" docLength="8145" length="2" offset="6453" repeat="2" starttimestamp="1648471300703" timestamp="16639639" timestamp2="16639737">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="8137" _type="Insert" date="Mon Mar 28 13:19:02 EDT 2022" docASTNodeCount="971" docActiveCodeLength="7345" docExpressionCount="694" docLength="8149" length="4" offset="6572" repeat="4" starttimestamp="1648471300703" timestamp="16642108" timestamp2="16642579">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="8225" _type="PauseCommand" date="Mon Mar 28 13:23:10 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="16889870">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[44411]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="8226" _type="MoveCaretCommand" caretOffset="599" date="Mon Mar 28 13:23:11 EDT 2022" docOffset="599" starttimestamp="1648471300703" timestamp="16890376" />
  <Command __id="8228" _type="PauseCommand" date="Mon Mar 28 13:23:46 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="16925833">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[35457]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8227" _type="MoveCaretCommand" caretOffset="1106" date="Mon Mar 28 13:23:46 EDT 2022" docOffset="1106" starttimestamp="1648471300703" timestamp="16925833" />
  <Command __id="8229" _type="MoveCaretCommand" caretOffset="1106" date="Mon Mar 28 13:23:46 EDT 2022" docOffset="1106" starttimestamp="1648471300703" timestamp="16925833" />
  <Command __id="8231" _type="PauseCommand" date="Mon Mar 28 13:23:47 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="16927058">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1225]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8230" _type="MoveCaretCommand" caretOffset="1046" date="Mon Mar 28 13:23:47 EDT 2022" docOffset="1046" starttimestamp="1648471300703" timestamp="16927058" />
  <Command __id="8232" _type="MoveCaretCommand" caretOffset="1046" date="Mon Mar 28 13:23:47 EDT 2022" docOffset="1046" starttimestamp="1648471300703" timestamp="16927058" />
  <Command __id="8224" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 13:23:10 EDT 2022" docASTNodeCount="204" docActiveCodeLength="1581" docExpressionCount="142" docLength="1581" projectName="A5" starttimestamp="1648471300703" timestamp="16889870">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceGIPC ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="8234" _type="PauseCommand" date="Mon Mar 28 13:23:50 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="16929840">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2782]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="8235" _type="InsertStringCommand" date="Mon Mar 28 13:23:50 EDT 2022" starttimestamp="1648471300703" timestamp="16929862" timestamp2="16929862">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8236" _type="InsertStringCommand" date="Mon Mar 28 13:23:50 EDT 2022" starttimestamp="1648471300703" timestamp="16929862" timestamp2="16929862">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8239" _type="PauseCommand" date="Mon Mar 28 13:23:51 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="16931150">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1288]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="8238" _type="InsertStringCommand" date="Mon Mar 28 13:23:51 EDT 2022" starttimestamp="1648471300703" timestamp="16931150" timestamp2="16931150">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="8240" _type="InsertStringCommand" date="Mon Mar 28 13:23:51 EDT 2022" starttimestamp="1648471300703" timestamp="16931150" timestamp2="16931150">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="8242" _type="InsertStringCommand" date="Mon Mar 28 13:23:51 EDT 2022" starttimestamp="1648471300703" timestamp="16931280" timestamp2="16931280">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="8243" _type="InsertStringCommand" date="Mon Mar 28 13:23:51 EDT 2022" starttimestamp="1648471300703" timestamp="16931280" timestamp2="16931280">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="8245" _type="InsertStringCommand" date="Mon Mar 28 13:23:52 EDT 2022" starttimestamp="1648471300703" timestamp="16931458" timestamp2="16931458">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8246" _type="InsertStringCommand" date="Mon Mar 28 13:23:52 EDT 2022" starttimestamp="1648471300703" timestamp="16931458" timestamp2="16931458">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8248" _type="InsertStringCommand" date="Mon Mar 28 13:23:52 EDT 2022" starttimestamp="1648471300703" timestamp="16931669" timestamp2="16931669">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8249" _type="InsertStringCommand" date="Mon Mar 28 13:23:52 EDT 2022" starttimestamp="1648471300703" timestamp="16931669" timestamp2="16931669">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8251" _type="InsertStringCommand" date="Mon Mar 28 13:23:53 EDT 2022" starttimestamp="1648471300703" timestamp="16932470" timestamp2="16932470">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8252" _type="InsertStringCommand" date="Mon Mar 28 13:23:53 EDT 2022" starttimestamp="1648471300703" timestamp="16932470" timestamp2="16932470">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8254" _type="InsertStringCommand" date="Mon Mar 28 13:23:53 EDT 2022" starttimestamp="1648471300703" timestamp="16932641" timestamp2="16932641">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="8255" _type="InsertStringCommand" date="Mon Mar 28 13:23:53 EDT 2022" starttimestamp="1648471300703" timestamp="16932641" timestamp2="16932641">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="8257" _type="InsertStringCommand" date="Mon Mar 28 13:23:53 EDT 2022" starttimestamp="1648471300703" timestamp="16932766" timestamp2="16932766">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8258" _type="InsertStringCommand" date="Mon Mar 28 13:23:53 EDT 2022" starttimestamp="1648471300703" timestamp="16932766" timestamp2="16932766">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8259" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 13:23:53 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="16932771" />
  <Command __id="8264" _type="PauseCommand" date="Mon Mar 28 13:23:54 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="16933976">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1205]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="8263" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 13:23:54 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="16933976" />
  <Command __id="8265" _type="InsertStringCommand" date="Mon Mar 28 13:23:54 EDT 2022" starttimestamp="1648471300703" timestamp="16933983" timestamp2="16933983">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8266" _type="InsertStringCommand" date="Mon Mar 28 13:23:54 EDT 2022" starttimestamp="1648471300703" timestamp="16933983" timestamp2="16933983">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8268" _type="InsertStringCommand" date="Mon Mar 28 13:23:54 EDT 2022" starttimestamp="1648471300703" timestamp="16934053" timestamp2="16934053">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8269" _type="InsertStringCommand" date="Mon Mar 28 13:23:54 EDT 2022" starttimestamp="1648471300703" timestamp="16934053" timestamp2="16934053">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8270" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Mar 28 13:23:54 EDT 2022" start_end="START" starttimestamp="1648471300703" timestamp="16934059" />
  <DocumentChange __id="8233" _type="Insert" date="Mon Mar 28 13:23:50 EDT 2022" docASTNodeCount="210" docActiveCodeLength="1600" docExpressionCount="147" docLength="1600" length="19" offset="1046" repeat="16" starttimestamp="1648471300703" timestamp="16929840" timestamp2="16935043">
    <text><![CDATA[
		System.out.prin]]></text>
  </DocumentChange>
  <Command __id="8276" _type="PauseCommand" date="Mon Mar 28 13:23:58 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="16937911">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3852]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="8282" _type="PauseCommand" date="Mon Mar 28 13:24:01 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="16940738">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2827]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="8281" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Mar 28 13:24:01 EDT 2022" start_end="END" starttimestamp="1648471300703" timestamp="16940738" />
  <Command __id="8284" _type="InsertStringCommand" date="Mon Mar 28 13:24:02 EDT 2022" starttimestamp="1648471300703" timestamp="16941653" timestamp2="16941653">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8285" _type="InsertStringCommand" date="Mon Mar 28 13:24:02 EDT 2022" starttimestamp="1648471300703" timestamp="16941653" timestamp2="16941653">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8287" _type="InsertStringCommand" date="Mon Mar 28 13:24:02 EDT 2022" starttimestamp="1648471300703" timestamp="16941756" timestamp2="16941756">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="8288" _type="InsertStringCommand" date="Mon Mar 28 13:24:02 EDT 2022" starttimestamp="1648471300703" timestamp="16941756" timestamp2="16941756">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="8290" _type="InsertStringCommand" date="Mon Mar 28 13:24:02 EDT 2022" starttimestamp="1648471300703" timestamp="16941892" timestamp2="16941892">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="8291" _type="InsertStringCommand" date="Mon Mar 28 13:24:02 EDT 2022" starttimestamp="1648471300703" timestamp="16941892" timestamp2="16941892">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="8293" _type="InsertStringCommand" date="Mon Mar 28 13:24:02 EDT 2022" starttimestamp="1648471300703" timestamp="16942169" timestamp2="16942169">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8294" _type="InsertStringCommand" date="Mon Mar 28 13:24:02 EDT 2022" starttimestamp="1648471300703" timestamp="16942169" timestamp2="16942169">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8296" _type="InsertStringCommand" date="Mon Mar 28 13:24:02 EDT 2022" starttimestamp="1648471300703" timestamp="16942272" timestamp2="16942272">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="8297" _type="InsertStringCommand" date="Mon Mar 28 13:24:02 EDT 2022" starttimestamp="1648471300703" timestamp="16942272" timestamp2="16942272">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="8299" _type="InsertStringCommand" date="Mon Mar 28 13:24:03 EDT 2022" starttimestamp="1648471300703" timestamp="16942337" timestamp2="16942337">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="8300" _type="InsertStringCommand" date="Mon Mar 28 13:24:03 EDT 2022" starttimestamp="1648471300703" timestamp="16942337" timestamp2="16942337">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="8302" _type="InsertStringCommand" date="Mon Mar 28 13:24:03 EDT 2022" starttimestamp="1648471300703" timestamp="16942556" timestamp2="16942556">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8303" _type="InsertStringCommand" date="Mon Mar 28 13:24:03 EDT 2022" starttimestamp="1648471300703" timestamp="16942556" timestamp2="16942556">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8305" _type="InsertStringCommand" date="Mon Mar 28 13:24:03 EDT 2022" starttimestamp="1648471300703" timestamp="16942624" timestamp2="16942624">
    <data><![CDATA[Y]]></data>
  </Command>
  <Command __id="8306" _type="InsertStringCommand" date="Mon Mar 28 13:24:03 EDT 2022" starttimestamp="1648471300703" timestamp="16942624" timestamp2="16942624">
    <data><![CDATA[Y]]></data>
  </Command>
  <Command __id="8308" _type="InsertStringCommand" date="Mon Mar 28 13:24:03 EDT 2022" starttimestamp="1648471300703" timestamp="16942725" timestamp2="16942725">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8309" _type="InsertStringCommand" date="Mon Mar 28 13:24:03 EDT 2022" starttimestamp="1648471300703" timestamp="16942725" timestamp2="16942725">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8311" _type="InsertStringCommand" date="Mon Mar 28 13:24:03 EDT 2022" starttimestamp="1648471300703" timestamp="16942885" timestamp2="16942885">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8312" _type="InsertStringCommand" date="Mon Mar 28 13:24:03 EDT 2022" starttimestamp="1648471300703" timestamp="16942885" timestamp2="16942885">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8314" _type="InsertStringCommand" date="Mon Mar 28 13:24:04 EDT 2022" starttimestamp="1648471300703" timestamp="16943369" timestamp2="16943369">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="8315" _type="InsertStringCommand" date="Mon Mar 28 13:24:04 EDT 2022" starttimestamp="1648471300703" timestamp="16943370" timestamp2="16943370">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="8317" _type="InsertStringCommand" date="Mon Mar 28 13:24:04 EDT 2022" starttimestamp="1648471300703" timestamp="16943516" timestamp2="16943516">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="8318" _type="InsertStringCommand" date="Mon Mar 28 13:24:04 EDT 2022" starttimestamp="1648471300703" timestamp="16943517" timestamp2="16943517">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="8320" _type="InsertStringCommand" date="Mon Mar 28 13:24:04 EDT 2022" starttimestamp="1648471300703" timestamp="16943605" timestamp2="16943605">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="8321" _type="InsertStringCommand" date="Mon Mar 28 13:24:04 EDT 2022" starttimestamp="1648471300703" timestamp="16943605" timestamp2="16943605">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="8323" _type="InsertStringCommand" date="Mon Mar 28 13:24:04 EDT 2022" starttimestamp="1648471300703" timestamp="16943742" timestamp2="16943742">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="8324" _type="InsertStringCommand" date="Mon Mar 28 13:24:04 EDT 2022" starttimestamp="1648471300703" timestamp="16943742" timestamp2="16943742">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="8326" _type="InsertStringCommand" date="Mon Mar 28 13:24:04 EDT 2022" starttimestamp="1648471300703" timestamp="16943833" timestamp2="16943833">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="8327" _type="InsertStringCommand" date="Mon Mar 28 13:24:04 EDT 2022" starttimestamp="1648471300703" timestamp="16943833" timestamp2="16943833">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="8329" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16944332" />
  <Command __id="8330" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16944332" />
  <Command __id="8332" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16944454" />
  <Command __id="8333" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16944454" />
  <Command __id="8335" _type="InsertStringCommand" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16944506" timestamp2="16944506">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="8336" _type="InsertStringCommand" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16944507" timestamp2="16944507">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="8338" _type="InsertStringCommand" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16944603" timestamp2="16944603">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="8339" _type="InsertStringCommand" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16944603" timestamp2="16944603">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="8340" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16944943" />
  <Command __id="8341" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16944943" />
  <Command __id="8342" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16945085" />
  <Command __id="8343" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Mar 28 13:24:05 EDT 2022" starttimestamp="1648471300703" timestamp="16945085" />
  <Command __id="8345" _type="InsertStringCommand" date="Mon Mar 28 13:24:06 EDT 2022" starttimestamp="1648471300703" timestamp="16945553" timestamp2="16945553">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="8346" _type="InsertStringCommand" date="Mon Mar 28 13:24:06 EDT 2022" starttimestamp="1648471300703" timestamp="16945553" timestamp2="16945553">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="8347" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:24:06 EDT 2022" starttimestamp="1648471300703" timestamp="16946031" />
  <Command __id="8348" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:24:06 EDT 2022" starttimestamp="1648471300703" timestamp="16946090" />
  <Command __id="8349" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 13:24:06 EDT 2022" starttimestamp="1648471300703" timestamp="16946165" />
  <Command __id="8350" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:24:06 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16946188" type="Run" />
  <Command __id="8352" _type="PauseCommand" date="Mon Mar 28 13:24:10 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="16949605">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3417]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="8358" _type="ProgramExecutionEvent" className="/A5/src/client/Client.java" date="Mon Mar 28 13:24:15 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="16955243" type="Run" />
  <Command __id="8360" _type="RunCommand" className="/A5/src/client/Client.java" date="Mon Mar 28 13:24:15 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="16955243" type="Run" />
  <Command __id="8361" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:24:16 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16955460" type="Run" />
  <Command __id="8362" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:24:16 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16955491" type="Run" />
  <Command __id="8363" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:24:16 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16955495" type="Run" />
  <Command __id="8364" _type="ConsoleOutput" date="Mon Mar 28 13:24:16 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="16955990" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.9115031060566817
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A"), Diff(EQUAL,"Re"), Diff(DELETE,"adCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:57753]:An existing connection was forcibly closed by the remote host¶Server0<-->Generic Client:0.881191365451442 (Closed)¶Explanation: An existing connection was forcibly closed by the remote host"), Diff(INSERT,"gistry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.9115031060566817"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8366" _type="PauseCommand" date="Mon Mar 28 13:24:18 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="16957637">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1647]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8369" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:24:25 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16964915" type="Run" />
  <Command __id="8371" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:24:25 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16965224" type="Run" />
  <Command __id="8372" _type="ConsoleOutput" date="Mon Mar 28 13:24:25 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="16965289" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.9115031060566817 (Opened)
Client registered GIPC
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.9115031060566817"), Diff(INSERT,"Server0<-->Generic Client:0.9115031060566817 (Opened)¶Client registered GIPC"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8373" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:24:26 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16965320" type="Run" />
  <Command __id="8374" _type="ConsoleOutput" date="Mon Mar 28 13:24:26 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="16965653" type="ConsoleOutput">
    <outputString><![CDATA[added server as a property change listener of client
Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.9115031060566817 (O"), Diff(INSERT,"added server as a property change listener of client¶Command processor scanner o"), Diff(EQUAL,"pened"), Diff(DELETE,")"), Diff(EQUAL,"¶"), Diff(DELETE,"Client registered GIPC"), Diff(INSERT,"Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8375" _type="ConsoleOutput" date="Mon Mar 28 13:24:26 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="16965660" type="ConsoleOutput">
    <outputString><![CDATA[Client registered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Client registered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8377" _type="PauseCommand" date="Mon Mar 28 13:24:33 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="16972675">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7015]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8380" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:24:55 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="16995264" type="Run" />
  <Command __id="8383" _type="PauseCommand" date="Mon Mar 28 13:25:01 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="17001284">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[6020]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="8382" _type="ConsoleInput" date="Mon Mar 28 13:25:01 EDT 2022" starttimestamp="1648471300703" timestamp="17001284" type="Exception">
    <outputString><![CDATA[s "move 50 -50"
]]></outputString>
  </Command>
  <Command __id="8384" _type="ConsoleOutput" date="Mon Mar 28 13:25:02 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="17001351" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]
PROPERTY CHANGE
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]¶PROPERTY CHANGE"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8385" _type="ConsoleOutput" date="Mon Mar 28 13:25:02 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="17001632" type="ConsoleOutput">
    <outputString><![CDATA[PROPERTY CHANGE
Command being sent from coupler:move 50 -50
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[move 50 -50]¶PROPERTY CHANGE"), Diff(INSERT,"PROPERTY CHANGE¶Command being sent from coupler:move 50 -50¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8386" _type="ExceptionCommand" date="Mon Mar 28 13:25:02 EDT 2022" starttimestamp="1648471300703" timestamp="17001642" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalArgumentException: argument type mismatch
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at inputport.rpc.AnAbstractReceivedCallInvoker.invokeMethod(AnAbstractReceivedCallInvoker.java:36)
	at inputport.rpc.duplex.ADuplexReceivedCallInvoker.invokeMethod(ADuplexReceivedCallInvoker.java:34)
	at inputport.rpc.AnAbstractReceivedCallInvoker.messageReceived(AnAbstractReceivedCallInvoker.java:53)
	at inputport.rpc.duplex.AnAsynchronousSingleThreadDuplexReceivedCallInvoker.run(AnAsynchronousSingleThreadDuplexReceivedCallInvoker.java:97)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <DocumentChange __id="8275" _type="Insert" date="Mon Mar 28 13:23:58 EDT 2022" docASTNodeCount="211" docActiveCodeLength="1622" docExpressionCount="148" docLength="1622" length="22" offset="1065" repeat="20" starttimestamp="1648471300703" timestamp="16937911" timestamp2="16943827">
    <text><![CDATA[tln("PROPERTY CHANFE")]]></text>
  </DocumentChange>
  <DocumentChange __id="8328" _type="Delete" date="Mon Mar 28 13:24:05 EDT 2022" docASTNodeCount="211" docActiveCodeLength="1620" docExpressionCount="148" docLength="1620" endLine="32" length="2" offset="1083" repeat="2" startLine="32" starttimestamp="1648471300703" timestamp="16944323" timestamp2="16944445">
    <text><![CDATA[FE]]></text>
  </DocumentChange>
  <DocumentChange __id="8334" _type="Insert" date="Mon Mar 28 13:24:05 EDT 2022" docASTNodeCount="211" docActiveCodeLength="1622" docExpressionCount="148" docLength="1622" length="2" offset="1083" repeat="2" starttimestamp="1648471300703" timestamp="16944502" timestamp2="16944597">
    <text><![CDATA[GE]]></text>
  </DocumentChange>
  <DocumentChange __id="8344" _type="Insert" date="Mon Mar 28 13:24:06 EDT 2022" docASTNodeCount="211" docActiveCodeLength="1623" docExpressionCount="148" docLength="1623" length="1" offset="1087" starttimestamp="1648471300703" timestamp="16945538">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="8388" _type="PauseCommand" date="Mon Mar 28 13:26:31 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="17090586">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[88944]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="8389" _type="MoveCaretCommand" caretOffset="833" date="Mon Mar 28 13:26:31 EDT 2022" docOffset="1018" starttimestamp="1648471300703" timestamp="17090954" />
  <Command __id="8391" _type="PauseCommand" date="Mon Mar 28 13:26:36 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17095786">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4832]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8412" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:26:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17101141" type="Debug" />
  <Command __id="8414" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:26:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17101141" type="Debug" />
  <Command __id="8415" _type="ProgramExecutionEvent" className="/A5/src/registry/TrickOrTreatRegistry.java" date="Mon Mar 28 13:26:41 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="17101142" type="Run" />
  <Command __id="8416" _type="ShellCommand" date="Mon Mar 28 13:26:41 EDT 2022" starttimestamp="1648471300703" timestamp="17101172" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8387" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 13:26:31 EDT 2022" docASTNodeCount="131" docActiveCodeLength="1032" docExpressionCount="77" docLength="1032" projectName="A5" starttimestamp="1648471300703" timestamp="17090586">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="8392" _type="Delete" date="Mon Mar 28 13:26:36 EDT 2022" docASTNodeCount="131" docActiveCodeLength="1029" docExpressionCount="77" docLength="1029" endLine="15" length="3" offset="610" repeat="3" startLine="15" starttimestamp="1648471300703" timestamp="17096252" timestamp2="17096554">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="8398" _type="Insert" date="Mon Mar 28 13:26:37 EDT 2022" docASTNodeCount="131" docActiveCodeLength="1033" docExpressionCount="77" docLength="1033" length="4" offset="610" repeat="4" starttimestamp="1648471300703" timestamp="17096798" timestamp2="17097522">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="8418" _type="PauseCommand" date="Mon Mar 28 13:26:44 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17104050">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2878]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="8419" _type="MoveCaretCommand" caretOffset="6576" date="Mon Mar 28 13:26:45 EDT 2022" docOffset="6576" starttimestamp="1648471300703" timestamp="17104397" />
  <Command __id="8417" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 13:26:44 EDT 2022" docASTNodeCount="971" docActiveCodeLength="7345" docExpressionCount="694" docLength="8149" projectName="A5" starttimestamp="1648471300703" timestamp="17104050">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.inputParameters.SimulationParametersListener;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶	¶¶		"), Diff(INSERT,"//"), Diff(EQUAL,"clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		"), Diff(INSERT,"clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		"), Diff(EQUAL,"// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean bool) {¶		"), Diff(INSERT,"System.out.print("HERE in broadcase meta method");¶		//Broadcast meta State via RMI always"), Diff(EQUAL,"¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.inputParameters.SimulationParametersListener;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClient(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
	

		//clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean bool) {
		System.out.print("HERE in broadcase meta method");
		//Broadcast meta State via RMI always
	}


}
]]></snapshot>
  </Command>
  <Command __id="8421" _type="PauseCommand" date="Mon Mar 28 13:26:58 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="17117833">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13436]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="8422" _type="MoveCaretCommand" caretOffset="5784" date="Mon Mar 28 13:26:58 EDT 2022" docOffset="5784" starttimestamp="1648471300703" timestamp="17118121" />
  <Command __id="8424" _type="PauseCommand" date="Mon Mar 28 13:27:10 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="17129945">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11823]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8423" _type="MoveCaretCommand" caretOffset="3084" date="Mon Mar 28 13:27:10 EDT 2022" docOffset="3084" starttimestamp="1648471300703" timestamp="17129944" />
  <Command __id="8425" _type="MoveCaretCommand" caretOffset="3084" date="Mon Mar 28 13:27:10 EDT 2022" docOffset="3084" starttimestamp="1648471300703" timestamp="17129945" />
  <Command __id="8427" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:11 EDT 2022" starttimestamp="1648471300703" timestamp="17130807" />
  <Command __id="8428" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:11 EDT 2022" starttimestamp="1648471300703" timestamp="17130807" />
  <Command __id="8430" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:11 EDT 2022" starttimestamp="1648471300703" timestamp="17131009" />
  <Command __id="8431" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:11 EDT 2022" starttimestamp="1648471300703" timestamp="17131009" />
  <Command __id="8433" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:11 EDT 2022" starttimestamp="1648471300703" timestamp="17131169" />
  <Command __id="8434" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:11 EDT 2022" starttimestamp="1648471300703" timestamp="17131169" />
  <Command __id="8436" _type="InsertStringCommand" date="Mon Mar 28 13:27:12 EDT 2022" starttimestamp="1648471300703" timestamp="17131757" timestamp2="17131757">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="8437" _type="InsertStringCommand" date="Mon Mar 28 13:27:12 EDT 2022" starttimestamp="1648471300703" timestamp="17131757" timestamp2="17131757">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="8439" _type="InsertStringCommand" date="Mon Mar 28 13:27:12 EDT 2022" starttimestamp="1648471300703" timestamp="17131837" timestamp2="17131837">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="8440" _type="InsertStringCommand" date="Mon Mar 28 13:27:12 EDT 2022" starttimestamp="1648471300703" timestamp="17131837" timestamp2="17131837">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="8442" _type="InsertStringCommand" date="Mon Mar 28 13:27:12 EDT 2022" starttimestamp="1648471300703" timestamp="17131924" timestamp2="17131924">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8443" _type="InsertStringCommand" date="Mon Mar 28 13:27:12 EDT 2022" starttimestamp="1648471300703" timestamp="17131924" timestamp2="17131924">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8445" _type="InsertStringCommand" date="Mon Mar 28 13:27:12 EDT 2022" starttimestamp="1648471300703" timestamp="17132105" timestamp2="17132105">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8446" _type="InsertStringCommand" date="Mon Mar 28 13:27:12 EDT 2022" starttimestamp="1648471300703" timestamp="17132105" timestamp2="17132105">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8448" _type="PauseCommand" date="Mon Mar 28 13:27:14 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="17133467">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1362]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="8447" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 13:27:14 EDT 2022" starttimestamp="1648471300703" timestamp="17133467" />
  <Command __id="8449" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:27:14 EDT 2022" starttimestamp="1648471300703" timestamp="17133553" />
  <Command __id="8450" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:27:14 EDT 2022" starttimestamp="1648471300703" timestamp="17133658" />
  <Command __id="8451" _type="ShellCommand" date="Mon Mar 28 13:27:14 EDT 2022" starttimestamp="1648471300703" timestamp="17133834" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8453" _type="PauseCommand" date="Mon Mar 28 13:27:16 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="17135611">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1777]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8452" _type="ShellCommand" date="Mon Mar 28 13:27:16 EDT 2022" starttimestamp="1648471300703" timestamp="17135611" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8454" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:27:16 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17135617" type="Debug" />
  <Command __id="8455" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:27:16 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17135617" type="Debug" />
  <Command __id="8456" _type="ProgramExecutionEvent" className="/A5/src/client/Client.java" date="Mon Mar 28 13:27:16 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="17135617" type="Run" />
  <Command __id="8457" _type="ConsoleOutput" date="Mon Mar 28 13:27:16 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="17135707" type="ConsoleOutput">
    <outputString><![CDATA[AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:57837]:An existing connection was forcibly closed by the remote host
Server0<-->Generic Client:0.9115031060566817 (Closed)
Explanation: An existing connection was forcibly closed by the remote host
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"PROPERTY CHANGE¶Command being sent from coupler:move 50 -50¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:57837]:An existing connection was forcibly closed by the remote host¶Server0<-->Generic Client:0.9115031060566817 (Closed)¶Explanation: An existing connection was forcibly closed by the remote host"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8459" _type="PauseCommand" date="Mon Mar 28 13:27:34 EDT 2022" range="10s-20s" starttimestamp="1648471300703" timestamp="17153925">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[18218]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8458" _type="MoveCaretCommand" caretOffset="3492" date="Mon Mar 28 13:27:34 EDT 2022" docOffset="3492" starttimestamp="1648471300703" timestamp="17153925" />
  <Command __id="8460" _type="MoveCaretCommand" caretOffset="3492" date="Mon Mar 28 13:27:34 EDT 2022" docOffset="3492" starttimestamp="1648471300703" timestamp="17153925" />
  <Command __id="8462" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:34 EDT 2022" starttimestamp="1648471300703" timestamp="17154293" />
  <Command __id="8463" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:34 EDT 2022" starttimestamp="1648471300703" timestamp="17154293" />
  <Command __id="8465" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:35 EDT 2022" starttimestamp="1648471300703" timestamp="17154416" />
  <Command __id="8466" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:35 EDT 2022" starttimestamp="1648471300703" timestamp="17154416" />
  <Command __id="8468" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:35 EDT 2022" starttimestamp="1648471300703" timestamp="17154786" />
  <Command __id="8469" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:27:35 EDT 2022" starttimestamp="1648471300703" timestamp="17154786" />
  <Command __id="8471" _type="InsertStringCommand" date="Mon Mar 28 13:27:35 EDT 2022" starttimestamp="1648471300703" timestamp="17155040" timestamp2="17155040">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="8472" _type="InsertStringCommand" date="Mon Mar 28 13:27:35 EDT 2022" starttimestamp="1648471300703" timestamp="17155040" timestamp2="17155040">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="8474" _type="InsertStringCommand" date="Mon Mar 28 13:27:35 EDT 2022" starttimestamp="1648471300703" timestamp="17155153" timestamp2="17155153">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="8475" _type="InsertStringCommand" date="Mon Mar 28 13:27:35 EDT 2022" starttimestamp="1648471300703" timestamp="17155153" timestamp2="17155153">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="8477" _type="InsertStringCommand" date="Mon Mar 28 13:27:35 EDT 2022" starttimestamp="1648471300703" timestamp="17155278" timestamp2="17155278">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8478" _type="InsertStringCommand" date="Mon Mar 28 13:27:35 EDT 2022" starttimestamp="1648471300703" timestamp="17155278" timestamp2="17155278">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8480" _type="InsertStringCommand" date="Mon Mar 28 13:27:36 EDT 2022" starttimestamp="1648471300703" timestamp="17155488" timestamp2="17155488">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8481" _type="InsertStringCommand" date="Mon Mar 28 13:27:36 EDT 2022" starttimestamp="1648471300703" timestamp="17155488" timestamp2="17155488">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8483" _type="PauseCommand" date="Mon Mar 28 13:27:38 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17157736">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2248]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8482" _type="MoveCaretCommand" caretOffset="3513" date="Mon Mar 28 13:27:38 EDT 2022" docOffset="3513" starttimestamp="1648471300703" timestamp="17157736" />
  <Command __id="8484" _type="MoveCaretCommand" caretOffset="3513" date="Mon Mar 28 13:27:38 EDT 2022" docOffset="3513" starttimestamp="1648471300703" timestamp="17157737" />
  <Command __id="8420" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 13:26:58 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5818" docExpressionCount="599" docLength="6276" projectName="A5" starttimestamp="1648471300703" timestamp="17117833">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{¶	¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶		¶	}¶	¶	¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		"), Diff(INSERT,"System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);"), Diff(EQUAL,"¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶		¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);	¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC{
	
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
		
	}
	
	
	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		createGIPCRegistry();
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);
		
		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);	
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="8426" _type="Delete" date="Mon Mar 28 13:27:11 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5815" docExpressionCount="599" docLength="6273" endLine="81" length="3" offset="3081" repeat="3" startLine="81" starttimestamp="1648471300703" timestamp="17130794" timestamp2="17131159">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="8435" _type="Insert" date="Mon Mar 28 13:27:12 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5819" docExpressionCount="599" docLength="6277" length="4" offset="3081" repeat="4" starttimestamp="1648471300703" timestamp="17131742" timestamp2="17132094">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="8461" _type="Delete" date="Mon Mar 28 13:27:34 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5816" docExpressionCount="599" docLength="6274" endLine="92" length="3" offset="3489" repeat="3" startLine="92" starttimestamp="1648471300703" timestamp="17154279" timestamp2="17154780">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="8470" _type="Insert" date="Mon Mar 28 13:27:35 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5820" docExpressionCount="599" docLength="6278" length="4" offset="3489" repeat="4" starttimestamp="1648471300703" timestamp="17155037" timestamp2="17155477">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="8486" _type="PauseCommand" date="Mon Mar 28 13:27:42 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17161839">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4102]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="8498" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:27:44 EDT 2022" starttimestamp="1648471300703" timestamp="17163737" />
  <Command __id="8500" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:27:44 EDT 2022" starttimestamp="1648471300703" timestamp="17163784" />
  <Command __id="8501" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 13:27:44 EDT 2022" starttimestamp="1648471300703" timestamp="17163885" />
  <Command __id="8503" _type="PauseCommand" date="Mon Mar 28 13:27:45 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="17165052">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1167]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8502" _type="MoveCaretCommand" caretOffset="3622" date="Mon Mar 28 13:27:45 EDT 2022" docOffset="3622" starttimestamp="1648471300703" timestamp="17165052" />
  <Command __id="8504" _type="MoveCaretCommand" caretOffset="3622" date="Mon Mar 28 13:27:45 EDT 2022" docOffset="3622" starttimestamp="1648471300703" timestamp="17165053" />
  <DocumentChange __id="8485" _type="Insert" date="Mon Mar 28 13:27:42 EDT 2022" docASTNodeCount="812" docActiveCodeLength="5824" docExpressionCount="599" docLength="6282" length="4" offset="3513" repeat="4" starttimestamp="1648471300703" timestamp="17161839" timestamp2="17162290">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="8506" _type="PauseCommand" date="Mon Mar 28 13:28:44 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="17223916">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[58863]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="8507" _type="MoveCaretCommand" caretOffset="1088" date="Mon Mar 28 13:28:44 EDT 2022" docOffset="1088" starttimestamp="1648471300703" timestamp="17224198" />
  <Command __id="8509" _type="PauseCommand" date="Mon Mar 28 13:28:52 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="17231662">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7464]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8508" _type="MoveCaretCommand" caretOffset="1493" date="Mon Mar 28 13:28:52 EDT 2022" docOffset="1493" starttimestamp="1648471300703" timestamp="17231662" />
  <Command __id="8510" _type="MoveCaretCommand" caretOffset="1493" date="Mon Mar 28 13:28:52 EDT 2022" docOffset="1493" starttimestamp="1648471300703" timestamp="17231662" />
  <Command __id="8512" _type="PauseCommand" date="Mon Mar 28 13:28:58 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="17238170">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6508]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8511" _type="MoveCaretCommand" caretOffset="643" date="Mon Mar 28 13:28:58 EDT 2022" docOffset="643" starttimestamp="1648471300703" timestamp="17238170" />
  <Command __id="8513" _type="MoveCaretCommand" caretOffset="643" date="Mon Mar 28 13:28:58 EDT 2022" docOffset="643" starttimestamp="1648471300703" timestamp="17238170" />
  <Command __id="8505" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 13:28:44 EDT 2022" docASTNodeCount="211" docActiveCodeLength="1623" docExpressionCount="148" docLength="1623" projectName="A5" starttimestamp="1648471300703" timestamp="17223916">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceGIPC ObservingServer;¶	ClientRemoteInterfaceRMI originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		"), Diff(INSERT,"System.out.println("PROPERTY CHANGE");¶		"), Diff(EQUAL,"if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientOutCoupler implements PropertyChangeListener{
	ServerRemoteInterfaceGIPC ObservingServer;
	ClientRemoteInterfaceRMI originalClient;
	String ORIGINAL_CLIENT_NAME;
	
	int aProposalNumber = 0;
	
	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceRMI aClient, String aClientName) {
		ObservingServer = anObservingServer;
		originalClient = aClient;
		ORIGINAL_CLIENT_NAME = aClientName;
		
		
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent anEvent) {
		System.out.println("PROPERTY CHANGE");
		if (!anEvent.getPropertyName().equals("InputString")) return;
		String newCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, newCommand);
		
		System.out.println("Command being sent from coupler:" + newCommand);
		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);
		try {
			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}

}
]]></snapshot>
  </Command>
  <Command __id="8515" _type="PauseCommand" date="Mon Mar 28 13:29:01 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17240302">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2132]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="8514" _type="Delete" date="Mon Mar 28 13:29:01 EDT 2022" docASTNodeCount="211" docActiveCodeLength="1620" docExpressionCount="148" docLength="1620" endLine="17" length="3" offset="640" repeat="3" startLine="17" starttimestamp="1648471300703" timestamp="17240302" timestamp2="17240620">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="8516" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:01 EDT 2022" starttimestamp="1648471300703" timestamp="17240312" />
  <Command __id="8517" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:01 EDT 2022" starttimestamp="1648471300703" timestamp="17240312" />
  <Command __id="8519" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:01 EDT 2022" starttimestamp="1648471300703" timestamp="17240461" />
  <Command __id="8520" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:01 EDT 2022" starttimestamp="1648471300703" timestamp="17240461" />
  <Command __id="8522" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:01 EDT 2022" starttimestamp="1648471300703" timestamp="17240628" />
  <Command __id="8523" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:01 EDT 2022" starttimestamp="1648471300703" timestamp="17240628" />
  <Command __id="8525" _type="InsertStringCommand" date="Mon Mar 28 13:29:01 EDT 2022" starttimestamp="1648471300703" timestamp="17241246" timestamp2="17241246">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="8526" _type="InsertStringCommand" date="Mon Mar 28 13:29:01 EDT 2022" starttimestamp="1648471300703" timestamp="17241247" timestamp2="17241247">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="8528" _type="InsertStringCommand" date="Mon Mar 28 13:29:02 EDT 2022" starttimestamp="1648471300703" timestamp="17241321" timestamp2="17241321">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="8529" _type="InsertStringCommand" date="Mon Mar 28 13:29:02 EDT 2022" starttimestamp="1648471300703" timestamp="17241321" timestamp2="17241321">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="8531" _type="InsertStringCommand" date="Mon Mar 28 13:29:02 EDT 2022" starttimestamp="1648471300703" timestamp="17241422" timestamp2="17241422">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8532" _type="InsertStringCommand" date="Mon Mar 28 13:29:02 EDT 2022" starttimestamp="1648471300703" timestamp="17241422" timestamp2="17241422">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8534" _type="InsertStringCommand" date="Mon Mar 28 13:29:02 EDT 2022" starttimestamp="1648471300703" timestamp="17241621" timestamp2="17241621">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8535" _type="InsertStringCommand" date="Mon Mar 28 13:29:02 EDT 2022" starttimestamp="1648471300703" timestamp="17241621" timestamp2="17241621">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8536" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:29:03 EDT 2022" starttimestamp="1648471300703" timestamp="17242602" />
  <Command __id="8537" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:29:03 EDT 2022" starttimestamp="1648471300703" timestamp="17242713" />
  <Command __id="8538" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 13:29:03 EDT 2022" starttimestamp="1648471300703" timestamp="17242763" />
  <Command __id="8540" _type="PauseCommand" date="Mon Mar 28 13:29:11 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="17251181">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8418]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8539" _type="MoveCaretCommand" caretOffset="821" date="Mon Mar 28 13:29:11 EDT 2022" docOffset="821" starttimestamp="1648471300703" timestamp="17251181" />
  <Command __id="8541" _type="MoveCaretCommand" caretOffset="821" date="Mon Mar 28 13:29:11 EDT 2022" docOffset="821" starttimestamp="1648471300703" timestamp="17251181" />
  <Command __id="8543" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:12 EDT 2022" starttimestamp="1648471300703" timestamp="17251653" />
  <Command __id="8544" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:12 EDT 2022" starttimestamp="1648471300703" timestamp="17251653" />
  <Command __id="8546" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:12 EDT 2022" starttimestamp="1648471300703" timestamp="17251793" />
  <Command __id="8547" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:12 EDT 2022" starttimestamp="1648471300703" timestamp="17251793" />
  <Command __id="8549" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:12 EDT 2022" starttimestamp="1648471300703" timestamp="17251927" />
  <Command __id="8550" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:12 EDT 2022" starttimestamp="1648471300703" timestamp="17251927" />
  <Command __id="8552" _type="InsertStringCommand" date="Mon Mar 28 13:29:12 EDT 2022" starttimestamp="1648471300703" timestamp="17252120" timestamp2="17252120">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="8553" _type="InsertStringCommand" date="Mon Mar 28 13:29:12 EDT 2022" starttimestamp="1648471300703" timestamp="17252120" timestamp2="17252120">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="8555" _type="InsertStringCommand" date="Mon Mar 28 13:29:12 EDT 2022" starttimestamp="1648471300703" timestamp="17252227" timestamp2="17252227">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="8556" _type="InsertStringCommand" date="Mon Mar 28 13:29:12 EDT 2022" starttimestamp="1648471300703" timestamp="17252227" timestamp2="17252227">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="8558" _type="InsertStringCommand" date="Mon Mar 28 13:29:13 EDT 2022" starttimestamp="1648471300703" timestamp="17252353" timestamp2="17252353">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8559" _type="InsertStringCommand" date="Mon Mar 28 13:29:13 EDT 2022" starttimestamp="1648471300703" timestamp="17252353" timestamp2="17252353">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8561" _type="InsertStringCommand" date="Mon Mar 28 13:29:13 EDT 2022" starttimestamp="1648471300703" timestamp="17252542" timestamp2="17252542">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8562" _type="InsertStringCommand" date="Mon Mar 28 13:29:13 EDT 2022" starttimestamp="1648471300703" timestamp="17252542" timestamp2="17252542">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8563" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Mar 28 13:29:14 EDT 2022" starttimestamp="1648471300703" timestamp="17253334" />
  <Command __id="8564" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:29:14 EDT 2022" starttimestamp="1648471300703" timestamp="17253411" />
  <Command __id="8565" _type="EclipseCommand" commandID="" date="Mon Mar 28 13:29:14 EDT 2022" starttimestamp="1648471300703" timestamp="17253494" />
  <Command __id="8567" _type="PauseCommand" date="Mon Mar 28 13:29:19 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17258432">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4938]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="8566" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Mar 28 13:29:19 EDT 2022" starttimestamp="1648471300703" timestamp="17258432" />
  <Command __id="8568" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:29:19 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17258470" type="Debug" />
  <Command __id="8569" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:29:19 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17258470" type="Debug" />
  <Command __id="8570" _type="ProgramExecutionEvent" className="/A5/src/server/Server.java" date="Mon Mar 28 13:29:19 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="17258470" type="Run" />
  <Command __id="8572" _type="PauseCommand" date="Mon Mar 28 13:29:27 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="17266354">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[7884]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8571" _type="ShellCommand" date="Mon Mar 28 13:29:27 EDT 2022" starttimestamp="1648471300703" timestamp="17266354" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8574" _type="PauseCommand" date="Mon Mar 28 13:29:31 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17270395">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4041]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8573" _type="ShellCommand" date="Mon Mar 28 13:29:31 EDT 2022" starttimestamp="1648471300703" timestamp="17270395" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="8524" _type="Insert" date="Mon Mar 28 13:29:01 EDT 2022" docASTNodeCount="211" docActiveCodeLength="1624" docExpressionCount="148" docLength="1624" length="4" offset="640" repeat="4" starttimestamp="1648471300703" timestamp="17241234" timestamp2="17241609">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <DocumentChange __id="8542" _type="Delete" date="Mon Mar 28 13:29:12 EDT 2022" docASTNodeCount="211" docActiveCodeLength="1621" docExpressionCount="148" docLength="1621" endLine="22" length="3" offset="818" repeat="3" startLine="22" starttimestamp="1648471300703" timestamp="17251645" timestamp2="17251917">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="8551" _type="Insert" date="Mon Mar 28 13:29:12 EDT 2022" docASTNodeCount="211" docActiveCodeLength="1625" docExpressionCount="148" docLength="1625" length="4" offset="818" repeat="4" starttimestamp="1648471300703" timestamp="17252118" timestamp2="17252532">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="8576" _type="PauseCommand" date="Mon Mar 28 13:29:33 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17273116">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2721]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="8577" _type="MoveCaretCommand" caretOffset="0" date="Mon Mar 28 13:29:34 EDT 2022" docOffset="0" starttimestamp="1648471300703" timestamp="17273528" />
  <Command __id="8579" _type="PauseCommand" date="Mon Mar 28 13:29:42 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="17282036">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8508]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8578" _type="MoveCaretCommand" caretOffset="3675" date="Mon Mar 28 13:29:42 EDT 2022" docOffset="5027" starttimestamp="1648471300703" timestamp="17282036" />
  <Command __id="8581" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:43 EDT 2022" starttimestamp="1648471300703" timestamp="17282520" />
  <Command __id="8583" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:43 EDT 2022" starttimestamp="1648471300703" timestamp="17282666" />
  <Command __id="8585" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Mar 28 13:29:43 EDT 2022" starttimestamp="1648471300703" timestamp="17283077" />
  <Command __id="8587" _type="InsertStringCommand" date="Mon Mar 28 13:29:44 EDT 2022" starttimestamp="1648471300703" timestamp="17283826" timestamp2="17283826">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="8589" _type="InsertStringCommand" date="Mon Mar 28 13:29:44 EDT 2022" starttimestamp="1648471300703" timestamp="17283927" timestamp2="17283927">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="8591" _type="InsertStringCommand" date="Mon Mar 28 13:29:44 EDT 2022" starttimestamp="1648471300703" timestamp="17284064" timestamp2="17284064">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="8593" _type="InsertStringCommand" date="Mon Mar 28 13:29:45 EDT 2022" starttimestamp="1648471300703" timestamp="17284323" timestamp2="17284323">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8595" _type="PauseCommand" date="Mon Mar 28 13:29:46 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="17285685">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1362]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="8613" _type="RunCommand" className="/A5/src/client/Client.java" date="Mon Mar 28 13:30:10 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="17309332" type="Run" />
  <Command __id="8615" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:30:10 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17309585" type="Run" />
  <Command __id="8616" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:30:10 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17309597" type="Run" />
  <Command __id="8617" _type="ConsoleOutput" date="Mon Mar 28 13:30:10 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="17309972" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.29608761904442404
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server proxy sent to RMI Registry"), Diff(INSERT,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.29608761904442404"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8619" _type="PauseCommand" date="Mon Mar 28 13:30:12 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="17311427">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1455]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8631" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:30:20 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17319962" type="Run" />
  <Command __id="8633" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:30:20 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17319962" type="Run" />
  <Command __id="8635" _type="PauseCommand" date="Mon Mar 28 13:30:22 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="17321605">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1643]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8634" _type="ShellCommand" date="Mon Mar 28 13:30:22 EDT 2022" starttimestamp="1648471300703" timestamp="17321605" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8637" _type="PauseCommand" date="Mon Mar 28 13:30:28 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="17327435">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5830]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="8643" _type="ShellCommand" date="Mon Mar 28 13:30:35 EDT 2022" starttimestamp="1648471300703" timestamp="17335137" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8646" _type="PauseCommand" date="Mon Mar 28 13:30:38 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17337477">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2340]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8647" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:30:48 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17347759" type="Run" />
  <Command __id="8649" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:30:48 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17347782" type="Run" />
  <Command __id="8651" _type="PauseCommand" date="Mon Mar 28 13:30:51 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17350849">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3067]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="8650" _type="ConsoleInput" date="Mon Mar 28 13:30:51 EDT 2022" starttimestamp="1648471300703" timestamp="17350849" type="Exception">
    <outputString><![CDATA[s "take 3"
]]></outputString>
  </Command>
  <Command __id="8652" _type="ConsoleOutput" date="Mon Mar 28 13:30:51 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="17350931" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[take 3]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Command recieved for broadcast: move 50 -50"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[take 3]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8653" _type="ConsoleOutput" date="Mon Mar 28 13:30:51 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="17351250" type="ConsoleOutput">
    <outputString><![CDATA[PROPERTY CHANGE
PROPERTY CHANGE
Command being sent from coupler:take 3
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[take 3]"), Diff(INSERT,"PROPERTY CHANGE¶PROPERTY CHANGE¶Command being sent from coupler:take 3¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8654" _type="ConsoleOutput" date="Mon Mar 28 13:30:51 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="17351293" type="ConsoleOutput">
    <outputString><![CDATA[Command recieved for broadcast: take 3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"PROPERTY CHANGE¶PROPERTY CHANGE¶Command being sent from coupler:take 3¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Command recieved for broadcast: take 3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8656" _type="PauseCommand" date="Mon Mar 28 13:30:55 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17354820">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3527]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8655" _type="ShellCommand" date="Mon Mar 28 13:30:55 EDT 2022" starttimestamp="1648471300703" timestamp="17354820" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8658" _type="PauseCommand" date="Mon Mar 28 13:30:56 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="17355872">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1052]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8657" _type="ShellCommand" date="Mon Mar 28 13:30:56 EDT 2022" starttimestamp="1648471300703" timestamp="17355872" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8575" _type="DiffBasedFileOpenCommand" date="Mon Mar 28 13:29:33 EDT 2022" docASTNodeCount="915" docActiveCodeLength="6877" docExpressionCount="643" docLength="7764" projectName="A5" starttimestamp="1648471300703" timestamp="17273116">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceRMI server = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶	}¶	¶	@Override¶	protected void setTracing() {¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶¶		// Locate Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			// TODO Auto-generated catch block¶			e3.printStackTrace();¶		}¶		// Get server here¶		¶		try {¶			server = (ServerRemoteInterfaceRMI) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClient(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		//NOTE This is just a hacky way of satisfying tests¶		ClientRemoteInterfaceRMI aClient = new ClientRemoteObject();¶		clientOutCoupler = new ClientOutCoupler((ServerRemoteInterfaceGIPC) server, aClient, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶	¶	¶	@Override	¶	public void trace(boolean newValue) {¶		super.trace(newValue);¶		Tracer.showInfo(isTrace());¶	}¶	¶	@Override¶	public void experimentInput() {¶		long aStartTime = System.currentTimeMillis();¶		PerformanceExperimentStarted.newCase(this, aStartTime, NUM_EXPERIMENT_COMMANDS);¶		boolean anOldValue = isTrace();¶		this.trace(false);¶		for (int i = 0; i < NUM_EXPERIMENT_COMMANDS; i++) {¶			commandProcessor.setInputString(EXPERIMENT_COMMAND_1);¶		¶		}¶		trace(anOldValue);¶		long anEndTime = System.currentTimeMillis();¶		PerformanceExperimentEnded.newCase(this, aStartTime, anEndTime, anEndTime - aStartTime, NUM_EXPERIMENT_COMMANDS);¶		¶	}¶	¶	@Override¶	/*¶	 * This override is not really needed, provided here to show that this method¶	 * exists.¶	 */¶	public void delaySends(int aMillisecondDelay) {¶		// getDelay() can be used to determine the delay¶		// in other parts of the program¶		super.delaySends(aMillisecondDelay);¶	}¶	¶	@Override¶	/**¶	 * Relevant in consistency assignments only ¶	 */¶	public void atomicBroadcast(boolean newValue) {¶		super.atomicBroadcast(newValue);¶		commandProcessor.setConnectedToSimulation(!isAtomicBroadcast());¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="8580" _type="Delete" date="Mon Mar 28 13:29:43 EDT 2022" docASTNodeCount="915" docActiveCodeLength="6874" docExpressionCount="643" docLength="7761" endLine="137" length="3" offset="5024" repeat="3" startLine="137" starttimestamp="1648471300703" timestamp="17282504" timestamp2="17283069">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <DocumentChange __id="8586" _type="Insert" date="Mon Mar 28 13:29:44 EDT 2022" docASTNodeCount="915" docActiveCodeLength="6878" docExpressionCount="643" docLength="7765" length="4" offset="5024" repeat="4" starttimestamp="1648471300703" timestamp="17283814" timestamp2="17284307">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="8660" _type="PauseCommand" date="Mon Mar 28 13:31:06 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="17365571">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9699]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="8661" _type="MoveCaretCommand" caretOffset="6576" date="Mon Mar 28 13:31:06 EDT 2022" docOffset="6576" starttimestamp="1648471300703" timestamp="17365955" />
  <Command __id="8663" _type="PauseCommand" date="Mon Mar 28 13:32:21 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="17440697">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[74742]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8690" _type="ProgramExecutionEvent" className="/A5/src/client/Client.java" date="Mon Mar 28 13:32:36 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="17455687" type="Run" />
  <Command __id="8692" _type="RunCommand" className="/A5/src/client/Client.java" date="Mon Mar 28 13:32:36 EDT 2022" kind="HitBreakPoint" projectName="A5" starttimestamp="1648471300703" timestamp="17455687" type="Run" />
  <Command __id="8693" _type="ConsoleOutput" date="Mon Mar 28 13:32:36 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="17456293" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.9740671531409686
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A"), Diff(EQUAL,"Re"), Diff(DELETE,"adCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:57914]:An existing connection was forcibly closed by the remote host¶Server0<-->Generic Client:0.29608761904442404 (Closed)¶Explanation: An existing connection was forcibly closed by the remote host"), Diff(INSERT,"gistry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.9740671531409686"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8695" _type="PauseCommand" date="Mon Mar 28 13:32:38 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="17457708">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1415]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8696" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:32:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17462600" type="Run" />
  <Command __id="8698" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:32:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17462600" type="Run" />
  <Command __id="8699" _type="ConsoleOutput" date="Mon Mar 28 13:32:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="17462635" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.9740671531409686 (Opened)
Client registered GIPC
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.9740671531409686"), Diff(INSERT,"Server0<-->Generic Client:0.9740671531409686 (Opened)¶Client registered GIPC"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8700" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:32:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17462637" type="Run" />
  <Command __id="8701" _type="ConsoleOutput" date="Mon Mar 28 13:32:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="17463167" type="ConsoleOutput">
    <outputString><![CDATA[added server as a property change listener of client
Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.9740671531409686 (O"), Diff(INSERT,"added server as a property change listener of client¶Command processor scanner o"), Diff(EQUAL,"pened"), Diff(DELETE,")"), Diff(EQUAL,"¶"), Diff(DELETE,"Client registered GIPC"), Diff(INSERT,"Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8702" _type="ConsoleOutput" date="Mon Mar 28 13:32:43 EDT 2022" overflow="false" starttimestamp="1648471300703" timestamp="17463168" type="ConsoleOutput">
    <outputString><![CDATA[Client registered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Client registered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8704" _type="PauseCommand" date="Mon Mar 28 13:32:45 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="17465024">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1856]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8703" _type="ShellCommand" date="Mon Mar 28 13:32:45 EDT 2022" starttimestamp="1648471300703" timestamp="17465024" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8706" _type="PauseCommand" date="Mon Mar 28 13:32:54 EDT 2022" range="5s-10s" starttimestamp="1648471300703" timestamp="17473464">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8440]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="8707" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:33:13 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17492636" type="Run" />
  <Command __id="8709" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:33:13 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17492668" type="Run" />
  <Command __id="8711" _type="PauseCommand" date="Mon Mar 28 13:33:16 EDT 2022" range="2s-5s" starttimestamp="1648471300703" timestamp="17496065">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3396]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="8716" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:33:31 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17511156" type="Run" />
  <Command __id="8719" _type="PauseCommand" date="Mon Mar 28 13:33:33 EDT 2022" range="1s-2s" starttimestamp="1648471300703" timestamp="17512456">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1300]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8724" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:35:20 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17619920" type="Run" />
  <Command __id="8727" _type="PauseCommand" date="Mon Mar 28 13:37:02 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="17721763">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[101843]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8730" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:37:58 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17777662" type="Run" />
  <Command __id="8733" _type="PauseCommand" date="Mon Mar 28 13:38:37 EDT 2022" range="30s-1m" starttimestamp="1648471300703" timestamp="17817118">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[39456]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8736" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Mar 28 13:40:20 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1648471300703" timestamp="17919936" type="Run" />
  <Command __id="8739" _type="PauseCommand" date="Mon Mar 28 13:41:40 EDT 2022" range="1m-2m" starttimestamp="1648471300703" timestamp="18000187">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[80251]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
