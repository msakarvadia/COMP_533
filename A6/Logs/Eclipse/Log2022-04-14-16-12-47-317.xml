<Events startTimestamp="1649967167317" logVersion="1.0.0.202111260825">
  <Command __id="47" _type="EclipseCommand" commandID="" date="Thu Apr 14 16:14:24 EDT 2022" starttimestamp="1649967167317" timestamp="97368" />
  <Command __id="49" _type="PauseCommand" date="Thu Apr 14 16:14:34 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="106972">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9604]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="51" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Thu Apr 14 16:14:40 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="113605" type="Run" />
  <Command __id="53" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Thu Apr 14 16:14:40 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="113606" type="Run" />
  <Command __id="54" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:14:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113820" type="Run" />
  <Command __id="55" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:14:41 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113842" type="Run" />
  <Command __id="56" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:14:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113847" type="Run" />
  <Command __id="58" _type="PauseCommand" date="Thu Apr 14 16:14:44 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="117259">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3412]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="69" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:14:55 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="128063" type="Run" />
  <Command __id="71" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:14:55 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="128065" type="Run" />
  <Command __id="73" _type="PauseCommand" date="Thu Apr 14 16:15:08 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="140885">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[12820]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="79" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Thu Apr 14 16:15:15 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="148677" type="Run" />
  <Command __id="81" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Thu Apr 14 16:15:15 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="148678" type="Run" />
  <Command __id="82" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:15:16 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="148888" type="Run" />
  <Command __id="83" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:15:16 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="148917" type="Run" />
  <Command __id="84" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:15:16 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="148921" type="Run" />
  <Command __id="86" _type="PauseCommand" date="Thu Apr 14 16:15:19 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="151744">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2823]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="115" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:15:57 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="190672" type="Run" />
  <Command __id="117" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:15:57 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="190674" type="Run" />
  <Command __id="119" _type="PauseCommand" date="Thu Apr 14 16:16:55 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="247792">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[57118]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="118" _type="ConsoleOutput" date="Thu Apr 14 16:16:55 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="247792" type="ConsoleOutput">
    <outputString><![CDATA[
GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*
GIPC is not checked because RMI failed%0.16666666666666666
Test execution time (ms):58561
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.16666666666666666¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"13566"), Diff(INSERT,"58561"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="121" _type="PauseCommand" date="Thu Apr 14 16:17:03 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="255906">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8114]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="196" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:23:01 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="613755" type="Run" />
  <Command __id="198" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 16:23:01 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="613757" type="Run" />
  <Command __id="200" _type="PauseCommand" date="Thu Apr 14 16:24:41 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="713893">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[100136]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="199" _type="ConsoleOutput" date="Thu Apr 14 16:24:41 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="713893" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOServerMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i rmi' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i gipc' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification%0.0

Test execution time (ms):107627
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GIPCRMINIOServerMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i rmi' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i gipc' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification%0.0¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"22586"), Diff(INSERT,"107627"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="202" _type="PauseCommand" date="Thu Apr 14 16:25:12 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="745075">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[31182]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="201" _type="ConsoleOutput" date="Thu Apr 14 16:25:12 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="745075" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Thu Apr 14 16:25:12 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOServerMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i rmi' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i gipc' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification%0.0¶¶Test execution time (ms):107627"), Diff(INSERT,"Building symbol table and running first pass checks:Thu Apr 14 16:25:12 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="204" _type="PauseCommand" date="Thu Apr 14 16:25:15 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="748608">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3533]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="203" _type="ConsoleOutput" date="Thu Apr 14 16:25:15 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="748608" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:124
Running second pass checks Thu Apr 14 16:25:15 EDT 2022
Start O(n2) inter- and intra class method calls:Thu Apr 14 16:25:15 EDT 2022
End O(n2) inter- and intra class method calls:Thu Apr 14 16:25:15 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:124¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":Thu Apr 14 16:25:12"), Diff(INSERT," Thu Apr 14 16:25:15 EDT 2022¶Start O(n2) inter- and intra class method calls:Thu Apr 14 16:25:15 EDT 2022¶End O(n2) inter- and intra class method calls:Thu Apr 14 16:25:15"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="206" _type="PauseCommand" date="Thu Apr 14 16:25:17 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="750596">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1988]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="205" _type="ConsoleOutput" date="Thu Apr 14 16:25:17 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="750596" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Thu Apr 14 16:25:17 EDT 2022
Generating checks:Thu Apr 14 16:25:17 EDT 2022
Finished Generating checks:Thu Apr 14 16:25:17 EDT 2022
Generating externals:Thu Apr 14 16:25:17 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:124¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Thu Apr 14 16:25:1"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating check"), Diff(EQUAL,"s:Thu Apr 14 16:25:1"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished Generating checks:Thu Apr 14 16:25:17 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Thu Apr 14 16:25:1"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="207" _type="ConsoleOutput" date="Thu Apr 14 16:25:18 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="751277" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Thu Apr 14 16:25:18 EDT 2022

A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0
Test execution time (ms):6269
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Thu Apr 14 16:25:17 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Thu Apr 14 16:25:1"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Thu Apr 14 16:25:17 EDT 2022¶Generating externals:Thu Apr 14 16:25:17 EDT 2022"), Diff(INSERT,"¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶Test execution time (ms):6269"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="208" _type="ConsoleOutput" date="Thu Apr 14 16:25:18 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="751392" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):31
A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286

Test execution time (ms):25

A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298
Test execution time (ms):27
A6MnemonicNames did not pass completely:See console trace about lines failing  this check%0.9967266775777414

Test execution time (ms):19
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Thu Apr 14 16:25:18 EDT 2022¶¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0"), Diff(INSERT,"Test execution time (ms):31¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286¶¶Test execution time (ms):25¶¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298¶Test execution time (ms):27¶A6MnemonicNames did not pass completely:See console trace about lines failing  this check%0.9967266775777414¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"626"), Diff(INSERT,"1"), Diff(EQUAL,"9¶")]]]></diff>
  </Command>
  <Command __id="209" _type="ConsoleOutput" date="Thu Apr 14 16:25:18 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="751399" type="ConsoleOutput">
    <outputString><![CDATA[A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.26666666666666666

Test execution time (ms):28
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):31¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286¶¶Test execution time (ms):25¶¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298¶Test execution time (ms):27¶A6MnemonicNames"), Diff(INSERT,"A6AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9967266775777414"), Diff(INSERT,"26666666666666666"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"19"), Diff(INSERT,"28"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="211" _type="PauseCommand" date="Thu Apr 14 16:25:21 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="754190">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2791]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="210" _type="ConsoleOutput" date="Thu Apr 14 16:25:21 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="754190" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@9c1206c . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.26666666666666666¶¶Test execution time (ms):28"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@9c1206c . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="213" _type="PauseCommand" date="Thu Apr 14 16:25:37 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="770673">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16483]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="212" _type="ConsoleOutput" date="Thu Apr 14 16:25:37 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="770673" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5

Test execution time (ms):19

A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2413793103448276
Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@9c1206c . Results may change."), Diff(INSERT,"Test execution time (ms):0¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):19¶¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2413793103448276¶Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="214" _type="ConsoleOutput" date="Thu Apr 14 16:25:38 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="770728" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4

Test execution time (ms):35
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):19¶¶A6ExpectedCall"), Diff(INSERT,"A6ExpectedSignature"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"2413793103448276"), Diff(INSERT,"4¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"24"), Diff(INSERT,"35"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="215" _type="ConsoleOutput" date="Thu Apr 14 16:25:38 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="770867" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (36)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (284)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (293)
  |~ ClientRemoteObjectNIO.java (165)
 |- nioExample (7)
  |~ AnNIOManagerPrintClient.java (124)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (66)
  |~ exampleServerReadThread.java (70)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (81)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (76)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (330)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (334)
   |~ ServerRemoteObjectNIO.java (159)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4¶¶Test execution time (ms):35"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (36)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (284)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (293)¶  |~ ClientRemoteObjectNIO.java (165)¶ |- nioExample (7)¶  |~ AnNIOManagerPrintClient.java (124)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (66)¶  |~ exampleServerReadThread.java (70)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (81)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (330)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (334)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="217" _type="PauseCommand" date="Thu Apr 14 16:26:17 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="809695">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[38828]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="216" _type="ShellCommand" date="Thu Apr 14 16:26:17 EDT 2022" starttimestamp="1649967167317" timestamp="809695" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="218" _type="EclipseCommand" commandID="" date="Thu Apr 14 16:26:17 EDT 2022" starttimestamp="1649967167317" timestamp="810542" />
  <Command __id="219" _type="EclipseCommand" commandID="" date="Thu Apr 14 16:26:17 EDT 2022" starttimestamp="1649967167317" timestamp="810557" />
  <Command __id="220" _type="EclipseCommand" commandID="" date="Thu Apr 14 16:26:17 EDT 2022" starttimestamp="1649967167317" timestamp="810557" />
  <Command __id="221" _type="EclipseCommand" commandID="" date="Thu Apr 14 16:26:17 EDT 2022" starttimestamp="1649967167317" timestamp="810563" />
  <Command __id="222" _type="ShellCommand" date="Thu Apr 14 16:26:18 EDT 2022" starttimestamp="1649967167317" timestamp="810820" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="224" _type="PauseCommand" date="Thu Apr 14 16:26:22 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="815160">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4340]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="223" _type="ShellCommand" date="Thu Apr 14 16:26:22 EDT 2022" starttimestamp="1649967167317" timestamp="815160" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="226" _type="PauseCommand" date="Thu Apr 14 16:26:25 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="818524">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3364]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="225" _type="ShellCommand" date="Thu Apr 14 16:26:25 EDT 2022" starttimestamp="1649967167317" timestamp="818524" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="228" _type="PauseCommand" date="Thu Apr 14 16:27:15 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="868135">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[49611]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="227" _type="ShellCommand" date="Thu Apr 14 16:27:15 EDT 2022" starttimestamp="1649967167317" timestamp="868135" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="229" _type="ShellCommand" date="Thu Apr 14 16:27:16 EDT 2022" starttimestamp="1649967167317" timestamp="868768" type="ECLIPSE_MINIMIZED" />
  <Command __id="230" _type="ShellCommand" date="Thu Apr 14 16:27:16 EDT 2022" starttimestamp="1649967167317" timestamp="868783" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="232" _type="PauseCommand" date="Thu Apr 14 21:18:45 EDT 2022" range=">1h" starttimestamp="1649967167317" timestamp="18358575">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17489792]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="231" _type="ShellCommand" date="Thu Apr 14 21:18:45 EDT 2022" starttimestamp="1649967167317" timestamp="18358575" type="ECLIPSE_MAXIMIZED" />
  <Command __id="233" _type="ShellCommand" date="Thu Apr 14 21:18:45 EDT 2022" starttimestamp="1649967167317" timestamp="18358650" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="234" _type="ShellCommand" date="Thu Apr 14 21:18:46 EDT 2022" starttimestamp="1649967167317" timestamp="18359296" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="236" _type="PauseCommand" date="Thu Apr 14 21:19:00 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="18373148">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13852]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="235" _type="ConsoleOutput" date="Thu Apr 14 21:19:00 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="18373148" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@9c1206c . Results may change.
Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (36)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (284)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (293)¶  |~ ClientRemoteObjectNIO.java (165)¶ |- nioExample (7)¶  |~ AnNIOManagerPrintClient.java (124)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (66)¶  |~ exampleServerReadThread.java (70)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (81)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (330)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (334)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@9c1206c . Results may change.¶Error sending logs:¶us-south.functions.appdomain.cloud"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="238" _type="PauseCommand" date="Thu Apr 14 21:19:05 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="18378156">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5008]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="237" _type="ConsoleOutput" date="Thu Apr 14 21:19:05 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="18378156" type="ConsoleOutput">
    <outputString><![CDATA[Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@9c1206c . Results may change.¶"), Diff(EQUAL,"Error sending logs:¶us-south.functions.appdomain.cloud¶")]]]></diff>
  </Command>
  <Command __id="240" _type="PauseCommand" date="Thu Apr 14 21:19:31 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="18404131">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[25975]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="239" _type="ConsoleOutput" date="Thu Apr 14 21:19:31 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="18404131" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@5bd8ee8 . Results may change.
Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@5bd8ee8 . Results may change.¶"), Diff(EQUAL,"Error sending logs:¶us-south.functions.appdomain.cloud¶")]]]></diff>
  </Command>
  <Command __id="242" _type="PauseCommand" date="Thu Apr 14 21:19:36 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="18409148">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5017]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="241" _type="ConsoleOutput" date="Thu Apr 14 21:19:36 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="18409148" type="ConsoleOutput">
    <outputString><![CDATA[Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@5bd8ee8 . Results may change.¶"), Diff(EQUAL,"Error sending logs:¶us-south.functions.appdomain.cloud¶")]]]></diff>
  </Command>
  <Command __id="244" _type="PauseCommand" date="Thu Apr 14 21:19:49 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="18422158">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13010]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="243" _type="ConsoleOutput" date="Thu Apr 14 21:19:49 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="18422158" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@9c1206c . Results may change.
Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@9c1206c . Results may change.¶"), Diff(EQUAL,"Error sending logs:¶us-south.functions.appdomain.cloud¶")]]]></diff>
  </Command>
  <Command __id="246" _type="PauseCommand" date="Thu Apr 14 21:19:54 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="18427181">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5023]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="245" _type="ConsoleOutput" date="Thu Apr 14 21:19:54 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="18427181" type="ConsoleOutput">
    <outputString><![CDATA[Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@9c1206c . Results may change.¶"), Diff(EQUAL,"Error sending logs:¶us-south.functions.appdomain.cloud¶")]]]></diff>
  </Command>
  <Command __id="248" _type="PauseCommand" date="Thu Apr 14 21:21:48 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="18541001">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[113820]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="247" _type="ShellCommand" date="Thu Apr 14 21:21:48 EDT 2022" starttimestamp="1649967167317" timestamp="18541001" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="249" _type="EclipseCommand" commandID="" date="Thu Apr 14 21:21:49 EDT 2022" starttimestamp="1649967167317" timestamp="18541842" />
  <Command __id="250" _type="EclipseCommand" commandID="" date="Thu Apr 14 21:21:49 EDT 2022" starttimestamp="1649967167317" timestamp="18541847" />
  <Command __id="252" _type="PauseCommand" date="Thu Apr 14 21:21:50 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="18542907">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1060]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="251" _type="ShellCommand" date="Thu Apr 14 21:21:50 EDT 2022" starttimestamp="1649967167317" timestamp="18542907" type="ECLIPSE_MINIMIZED" />
  <Command __id="253" _type="ShellCommand" date="Thu Apr 14 21:21:50 EDT 2022" starttimestamp="1649967167317" timestamp="18542948" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="255" _type="PauseCommand" date="Thu Apr 14 21:21:52 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="18545266">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2318]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="254" _type="ConsoleOutput" date="Thu Apr 14 21:21:52 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="18545266" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOServerMetaStateBroadcast@4c9eed95 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Error sending logs:¶us-south.functions.appdomain.cloud"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOServerMetaStateBroadcast@4c9eed95 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="257" _type="PauseCommand" date="Thu Apr 14 21:22:31 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="18584427">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[39160]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="256" _type="ShellCommand" date="Thu Apr 14 21:22:31 EDT 2022" starttimestamp="1649967167317" timestamp="18584426" type="ECLIPSE_MAXIMIZED" />
  <Command __id="258" _type="ShellCommand" date="Thu Apr 14 21:22:31 EDT 2022" starttimestamp="1649967167317" timestamp="18584486" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="260" _type="PauseCommand" date="Thu Apr 14 21:22:46 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="18599641">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15155]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="259" _type="BalloonCommand" date="Thu Apr 14 21:22:46 EDT 2022" message="*******************************************
Worked 1 minutes(fixed)/14 minutes(context based) from
Thu Apr 14 16:13:06 EDT 2022 to Thu Apr 14 21:22:31 EDT 2022
Edited 0 Projects: 
Edited 0 Files: 
Number of insert: 0
Number of delete: 0
" starttimestamp="1649967167317" timestamp="18599641">
    <fineGrainedWorkTime><![CDATA[14]]></fineGrainedWorkTime>
    <insert><![CDATA[0]]></insert>
    <startTime><![CDATA[1649967186684]]></startTime>
    <endTime><![CDATA[1649985751803]]></endTime>
    <workTime><![CDATA[1]]></workTime>
    <delete><![CDATA[0]]></delete>
  </Command>
  <Command __id="48" _type="DiffBasedFileOpenCommand" date="Thu Apr 14 16:14:34 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" projectName="A6" starttimestamp="1649967167317" timestamp="106972">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\checks\Checks.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package checks;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp533s22.assignment6.S22Assignment6Suite;
import trace.grader.basics.GraderBasicsTraceUtility;
import util.trace.Tracer;

public class Checks {
	public static void main(final String[] args) {
		Tracer.showInfo(true);
		GraderBasicsTraceUtility.setBufferTracedMessages(false);
		final int traces = 8000;
		Tracer.setMaxTraces(traces);
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		
		GraderBasicsTraceUtility.setBufferTracedMessages(false);
		// Change this number if a test trace gets longer than 600 and is clipped
		
		final int length = 600;
		GraderBasicsTraceUtility.setMaxPrintedTraces(length);
		// Change this number if all traces together are longer than 600
		
		final int time = 4000;
		GraderBasicsTraceUtility.setMaxTraces(time);
		// Change this number if your process times out prematurely
		
		final int timer = 50;
		BasicProjectExecution.setProcessTimeOut(timer);
		// You need to always call such a method
		S22Assignment6Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="262" _type="PauseCommand" date="Thu Apr 14 21:23:00 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="18613281">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[13640]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="263" _type="MoveCaretCommand" caretOffset="1713" date="Thu Apr 14 21:23:01 EDT 2022" docOffset="1713" starttimestamp="1649967167317" timestamp="18613699" />
  <Command __id="265" _type="PauseCommand" date="Thu Apr 14 21:24:39 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="18711798">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[98099]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="264" _type="ShellCommand" date="Thu Apr 14 21:24:39 EDT 2022" starttimestamp="1649967167317" timestamp="18711798" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="267" _type="PauseCommand" date="Thu Apr 14 21:25:09 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="18742619">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[30821]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="266" _type="ShellCommand" date="Thu Apr 14 21:25:09 EDT 2022" starttimestamp="1649967167317" timestamp="18742619" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="269" _type="PauseCommand" date="Thu Apr 14 21:25:11 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="18744119">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1500]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="268" _type="ShellCommand" date="Thu Apr 14 21:25:11 EDT 2022" starttimestamp="1649967167317" timestamp="18744119" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="271" _type="PauseCommand" date="Thu Apr 14 21:26:43 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="18835757">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[91638]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="270" _type="ShellCommand" date="Thu Apr 14 21:26:43 EDT 2022" starttimestamp="1649967167317" timestamp="18835757" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="273" _type="PauseCommand" date="Thu Apr 14 21:26:44 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="18837614">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1857]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="272" _type="ShellCommand" date="Thu Apr 14 21:26:44 EDT 2022" starttimestamp="1649967167317" timestamp="18837614" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="275" _type="PauseCommand" date="Thu Apr 14 21:26:49 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="18842330">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4716]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="274" _type="ShellCommand" date="Thu Apr 14 21:26:49 EDT 2022" starttimestamp="1649967167317" timestamp="18842330" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="277" _type="PauseCommand" date="Thu Apr 14 21:26:52 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="18844774">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2444]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="276" _type="ShellCommand" date="Thu Apr 14 21:26:52 EDT 2022" starttimestamp="1649967167317" timestamp="18844774" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="279" _type="PauseCommand" date="Thu Apr 14 21:28:31 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="18943989">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[99215]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="278" _type="ShellCommand" date="Thu Apr 14 21:28:31 EDT 2022" starttimestamp="1649967167317" timestamp="18943989" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="261" _type="DiffBasedFileOpenCommand" date="Thu Apr 14 21:23:00 EDT 2022" docASTNodeCount="1255" docActiveCodeLength="9119" docExpressionCount="884" docLength="10235" projectName="A6" starttimestamp="1649967167317" timestamp="18613281">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientOutCoupler;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {

	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static int NIO_SERVER_PORT;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		

		// Make sure you set this property when processing args
		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));
		

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);
		// ClientArgsProcessor.getServerHost(args);
		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);
		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);
		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);
		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);
		

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			System.out.println("Broadcasting IPC mechanism: "+mechanism);
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
		System.out.println("ADDED CONNECTION LISTENER");
	}

	

}
]]></snapshot>
  </Command>
  <Command __id="281" _type="PauseCommand" date="Thu Apr 14 21:28:35 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="18948136">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4147]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="282" _type="MoveCaretCommand" caretOffset="0" date="Thu Apr 14 21:28:35 EDT 2022" docOffset="0" starttimestamp="1649967167317" timestamp="18948446" />
  <Command __id="280" _type="DiffBasedFileOpenCommand" date="Thu Apr 14 21:28:35 EDT 2022" docASTNodeCount="230" docActiveCodeLength="1859" docExpressionCount="161" docLength="2071" projectName="A6" starttimestamp="1649967167317" timestamp="18948136">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientOutCoupler implements PropertyChangeListener{
	ServerRemoteInterfaceGIPC ObservingServer;
	ClientRemoteInterfaceGIPC originalClient;
	String ORIGINAL_CLIENT_NAME;
	
	int aProposalNumber = 0;
	
	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceGIPC aClient, String aClientName) {
		ObservingServer = anObservingServer;
		originalClient = aClient;
		ORIGINAL_CLIENT_NAME = aClientName;
		
		
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent anEvent) {
		System.out.println("PROPERTY CHANGE");
		if (!anEvent.getPropertyName().equals("InputString")) return;
		String newCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, newCommand);
		
		//////This is fake just for passing tests
		AStandAloneTwoCoupledHalloweenSimulations fake = new AStandAloneTwoCoupledHalloweenSimulations();
		fake.getIPCMechanism();
		//////
		
		System.out.println("Command being sent from coupler:" + newCommand);
		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);
		try {
			//TODO need the client type to be that of a simulationParameterBean
			//ObservingServer.broadcastIPCMechanism(IPCMechanism, originalClient, aProposalNumber, broadcast);
			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}

}
]]></snapshot>
  </Command>
  <Command __id="284" _type="PauseCommand" date="Thu Apr 14 21:29:23 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="18996317">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[47871]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="290" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Thu Apr 14 21:31:29 EDT 2022" starttimestamp="1649967167317" timestamp="19121908" />
  <Command __id="292" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:31:29 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19122017" type="Debug" />
  <Command __id="293" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:31:29 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19122018" type="Debug" />
  <Command __id="294" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Thu Apr 14 21:31:29 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="19122018" type="Run" />
  <Command __id="283" _type="DiffBasedFileOpenCommand" date="Thu Apr 14 21:29:23 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9273" docExpressionCount="855" docLength="10161" projectName="A6" starttimestamp="1649967167317" timestamp="18996317">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}



}
]]></snapshot>
  </Command>
  <Command __id="296" _type="PauseCommand" date="Thu Apr 14 21:31:38 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="19130954">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[8936]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="297" _type="MoveCaretCommand" caretOffset="158" date="Thu Apr 14 21:31:38 EDT 2022" docOffset="1399" starttimestamp="1649967167317" timestamp="19131268" />
  <Command __id="295" _type="DiffBasedFileOpenCommand" date="Thu Apr 14 21:31:38 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4545" docExpressionCount="438" docLength="5208" projectName="A6" starttimestamp="1649967167317" timestamp="19130954">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: "+ mechanism.toString());

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}
		
		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		nioManager.write(socketChannel, bufferCommand, this);

		
		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {
			
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}
		


}
]]></snapshot>
  </Command>
  <Command __id="299" _type="PauseCommand" date="Thu Apr 14 21:31:56 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="19149662">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[18394]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="300" _type="SelectTextCommand" caretOffset="142" date="Thu Apr 14 21:31:57 EDT 2022" end="142" start="52" starttimestamp="1649967167317" timestamp="19149952" />
  <Command __id="302" _type="PauseCommand" date="Thu Apr 14 21:34:02 EDT 2022" range="2m-5m" starttimestamp="1649967167317" timestamp="19274887">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[124935]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="301" _type="MoveCaretCommand" caretOffset="7217" date="Thu Apr 14 21:34:02 EDT 2022" docOffset="8892" starttimestamp="1649967167317" timestamp="19274887" />
  <Command __id="304" _type="PauseCommand" date="Thu Apr 14 21:34:08 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="19281011">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6124]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="303" _type="ShellCommand" date="Thu Apr 14 21:34:08 EDT 2022" starttimestamp="1649967167317" timestamp="19281011" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="306" _type="PauseCommand" date="Thu Apr 14 21:35:11 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="19344430">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[63418]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="305" _type="ShellCommand" date="Thu Apr 14 21:35:11 EDT 2022" starttimestamp="1649967167317" timestamp="19344429" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="298" _type="DiffBasedFileOpenCommand" date="Thu Apr 14 21:31:56 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9273" docExpressionCount="855" docLength="10161" projectName="A6" starttimestamp="1649967167317" timestamp="19149662">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="308" _type="PauseCommand" date="Thu Apr 14 21:35:18 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="19351495">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7066]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="310" _type="ProgramExecutionEvent" className="/A6/src/server/Server.java" date="Thu Apr 14 21:36:39 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="19432420" type="Run" />
  <Command __id="312" _type="RunCommand" className="/A6/src/server/Server.java" date="Thu Apr 14 21:36:39 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="19432420" type="Run" />
  <Command __id="313" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:36:39 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19432628" type="Run" />
  <Command __id="314" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:36:39 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19432654" type="Run" />
  <Command __id="315" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:36:39 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19432660" type="Run" />
  <Command __id="316" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:36:40 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19433257" type="Run" />
  <Command __id="317" _type="ConsoleOutput" date="Thu Apr 14 21:36:40 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="19433364" type="ConsoleOutput">
    <outputString><![CDATA[RMI_SERVER_HOST_NAME: localhost
RMI_SERVER_PORT: 1099
GIPC_SERVER_PORT: 10000
NIO_SERVER_PORT: 9000
GIPC_SERVER_PORT: 
10000
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"R"), Diff(DELETE,"e-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOServerMetaStateBroadcast@4c9eed95 . Results may change."), Diff(INSERT,"MI_SERVER_HOST_NAME: localhost¶RMI_SERVER_PORT: 1099¶GIPC_SERVER_PORT: 10000¶NIO_SERVER_PORT: 9000¶GIPC_SERVER_PORT: ¶10000"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="318" _type="ConsoleOutput" date="Thu Apr 14 21:36:40 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="19433454" type="ConsoleOutput">
    <outputString><![CDATA[ADDED CONNECTION LISTENER
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"RMI_SERVER_HOST_NAME: localhost¶RMI_SERVER_PORT: 1099¶GIPC_SERVER_PORT: 10000¶NIO_SERVER_PORT: 9000¶GIPC_SERVER_PORT: ¶10000"), Diff(INSERT,"ADDED CONNECTION LISTENER"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="320" _type="PauseCommand" date="Thu Apr 14 21:36:43 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="19435793">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2339]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="341" _type="RunCommand" className="/A6/src/client/Client.java" date="Thu Apr 14 21:36:55 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="19448446" type="Run" />
  <Command __id="343" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:36:56 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19448691" type="Run" />
  <Command __id="344" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:36:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19448697" type="Run" />
  <Command __id="345" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:36:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19449467" type="Run" />
  <Command __id="346" _type="ConsoleOutput" date="Thu Apr 14 21:36:56 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="19449619" type="ConsoleOutput">
    <outputString><![CDATA[NIO SERVER PORT: 9000
Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.9248341682730815
New Client connected to server!!!
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server proxy sent to RMI Registry¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"NIO SERVER PORT: 9000¶Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.9248341682730815¶New Client connected to server!!!"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="347" _type="RunCommand" className="/A6/src/client/Client.java" date="Thu Apr 14 21:36:56 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="19449664" type="Run" />
  <Command __id="348" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:36:57 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19449892" type="Run" />
  <Command __id="349" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:36:57 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19449897" type="Run" />
  <Command __id="350" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:36:58 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19450801" type="Run" />
  <Command __id="351" _type="ShellCommand" date="Thu Apr 14 21:36:58 EDT 2022" starttimestamp="1649967167317" timestamp="19451064" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="352" _type="ConsoleOutput" date="Thu Apr 14 21:36:58 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="19451141" type="ConsoleOutput">
    <outputString><![CDATA[NIO SERVER PORT: 9000
Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.41520769506710387
New Client connected to server!!!
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIO SERVER PORT: 9000¶Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0."), Diff(DELETE,"9248341682730815"), Diff(INSERT,"41520769506710387"), Diff(EQUAL,"¶New Client connected to server!!!¶")]]]></diff>
  </Command>
  <Command __id="354" _type="PauseCommand" date="Thu Apr 14 21:37:00 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="19453450">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2309]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="378" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:37:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19494213" type="Run" />
  <Command __id="380" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:37:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19494357" type="Run" />
  <Command __id="381" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:37:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19494706" type="Run" />
  <Command __id="382" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:37:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19494738" type="Run" />
  <Command __id="384" _type="PauseCommand" date="Thu Apr 14 21:39:15 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="19588428">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[93690]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="383" _type="ShellCommand" date="Thu Apr 14 21:39:15 EDT 2022" starttimestamp="1649967167317" timestamp="19588428" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="386" _type="PauseCommand" date="Thu Apr 14 21:39:36 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="19609071">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[20643]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="385" _type="ShellCommand" date="Thu Apr 14 21:39:36 EDT 2022" starttimestamp="1649967167317" timestamp="19609071" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="388" _type="PauseCommand" date="Thu Apr 14 21:39:37 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="19610164">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1093]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="387" _type="ShellCommand" date="Thu Apr 14 21:39:37 EDT 2022" starttimestamp="1649967167317" timestamp="19610164" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="390" _type="PauseCommand" date="Thu Apr 14 21:39:39 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="19611808">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1644]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="389" _type="ConsoleInput" date="Thu Apr 14 21:39:39 EDT 2022" starttimestamp="1649967167317" timestamp="19611808" type="Exception">
    <outputString><![CDATA[b true
]]></outputString>
  </Command>
  <Command __id="391" _type="ConsoleOutput" date="Thu Apr 14 21:39:39 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="19611866" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51465](remote),objID:[3ec2526a:1802addf8b1:-7ffe, -9071544118570067927]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51460](remote),objID:[-67eeade3:1802addf616:-7ffe, -156392061114762365]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51465](remote),objID:[3ec2526a:1802addf8b1:-7ffe, -9071544118570067927]]]]]]"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="393" _type="PauseCommand" date="Thu Apr 14 21:39:44 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="19617072">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5206]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="392" _type="ConsoleInput" date="Thu Apr 14 21:39:44 EDT 2022" starttimestamp="1649967167317" timestamp="19617072" type="Exception">
    <outputString><![CDATA[i RMI
]]></outputString>
  </Command>
  <Command __id="394" _type="ConsoleOutput" date="Thu Apr 14 21:39:44 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="19617127" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[RMI]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"public default void assignments.util.inputParameters.SimulationParametersListener."), Diff(DELETE,"broadcastMetaState(boolean)[true"), Diff(INSERT,"ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[RMI"), Diff(EQUAL,"]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶")]]]></diff>
  </Command>
  <Command __id="396" _type="PauseCommand" date="Thu Apr 14 21:40:17 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="19650369">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[33242]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="395" _type="ShellCommand" date="Thu Apr 14 21:40:17 EDT 2022" starttimestamp="1649967167317" timestamp="19650369" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="398" _type="PauseCommand" date="Thu Apr 14 21:41:35 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="19727891">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[77522]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="397" _type="ShellCommand" date="Thu Apr 14 21:41:35 EDT 2022" starttimestamp="1649967167317" timestamp="19727891" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="400" _type="PauseCommand" date="Thu Apr 14 21:41:42 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="19735434">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7543]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="411" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:42:26 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19779275" type="Run" />
  <Command __id="413" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:42:26 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19779528" type="Run" />
  <Command __id="414" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:42:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19779750" type="Run" />
  <Command __id="415" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:42:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="19779800" type="Run" />
  <Command __id="307" _type="DiffBasedFileOpenCommand" date="Thu Apr 14 21:35:18 EDT 2022" docASTNodeCount="1255" docActiveCodeLength="9119" docExpressionCount="884" docLength="10235" projectName="A6" starttimestamp="1649967167317" timestamp="19351495">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static int NIO_SERVER_PORT;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		¶¶		// Make sure you set this property when processing args¶		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶		¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);¶		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);¶		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);¶		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);¶		¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			System.out.println("Broadcasting IPC mechanism: "+mechanism);¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶		System.out.println("ADDED CONNECTION LISTENER");¶	}¶¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="417" _type="PauseCommand" date="Thu Apr 14 21:42:28 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="19781528">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1727]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="418" _type="MoveCaretCommand" caretOffset="7217" date="Thu Apr 14 21:42:29 EDT 2022" docOffset="8892" starttimestamp="1649967167317" timestamp="19781883" />
  <Command __id="419" _type="MoveCaretCommand" caretOffset="7332" date="Thu Apr 14 21:42:29 EDT 2022" docOffset="9007" starttimestamp="1649967167317" timestamp="19782635" />
  <Command __id="422" _type="PauseCommand" date="Thu Apr 14 21:42:31 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="19783887">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1252]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="421" _type="ShellCommand" date="Thu Apr 14 21:42:31 EDT 2022" starttimestamp="1649967167317" timestamp="19783887" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="424" _type="PauseCommand" date="Thu Apr 14 21:42:33 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="19786217">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2330]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="423" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:42:33 EDT 2022" forward="true" matchWord="false" offset="9007" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="19786217" wrapSearch="false">
    <searchString><![CDATA[processIn]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="426" _type="PauseCommand" date="Thu Apr 14 21:42:36 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="19788986">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2769]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="425" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:42:36 EDT 2022" forward="true" matchWord="false" offset="3653" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="19788986" wrapSearch="false">
    <searchString><![CDATA[processIn]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="428" _type="PauseCommand" date="Thu Apr 14 21:42:37 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="19790419">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1433]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="427" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:42:37 EDT 2022" forward="true" matchWord="false" offset="9432" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="19790419" wrapSearch="false">
    <searchString><![CDATA[processIn]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="429" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:42:38 EDT 2022" forward="true" matchWord="false" offset="3653" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="19791075" wrapSearch="false">
    <searchString><![CDATA[processIn]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="431" _type="PauseCommand" date="Thu Apr 14 21:42:43 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="19796270">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[5195]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="430" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:42:43 EDT 2022" forward="true" matchWord="false" offset="9432" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="19796270" wrapSearch="false">
    <searchString><![CDATA[processInpu]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="433" _type="PauseCommand" date="Thu Apr 14 21:42:45 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="19798217">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1947]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="432" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:42:45 EDT 2022" forward="false" matchWord="false" offset="9432" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="19798217" wrapSearch="false">
    <searchString><![CDATA[processInpu]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="434" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:42:46 EDT 2022" forward="false" matchWord="false" offset="9432" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="19798700" wrapSearch="false">
    <searchString><![CDATA[processInpu]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="435" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:42:46 EDT 2022" forward="false" matchWord="false" offset="9432" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="19799220" wrapSearch="false">
    <searchString><![CDATA[processInpu]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="437" _type="PauseCommand" date="Thu Apr 14 21:42:48 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="19801461">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2241]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="436" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:42:48 EDT 2022" forward="true" matchWord="false" offset="9432" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="19801461" wrapSearch="false">
    <searchString><![CDATA[processInpu]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="439" _type="PauseCommand" date="Thu Apr 14 21:42:49 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="19802604">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1143]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="438" _type="ShellCommand" date="Thu Apr 14 21:42:49 EDT 2022" starttimestamp="1649967167317" timestamp="19802604" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="441" _type="PauseCommand" date="Thu Apr 14 21:44:06 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="19879003">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[76399]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="483" _type="PauseCommand" date="Thu Apr 14 21:49:13 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="20185779">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[105979]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="485" _type="SelectTextCommand" caretOffset="7757" date="Thu Apr 14 21:49:13 EDT 2022" end="7757" start="7748" starttimestamp="1649967167317" timestamp="20186523" />
  <Command __id="482" _type="DiffBasedFileOpenCommand" date="Thu Apr 14 21:49:13 EDT 2022" projectName="null" starttimestamp="1649967167317" timestamp="20185779">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="484" _type="DiffBasedFileOpenCommand" date="Thu Apr 14 21:49:13 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9273" docExpressionCount="855" docLength="10161" projectName="A6" starttimestamp="1649967167317" timestamp="20185985">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="487" _type="PauseCommand" date="Thu Apr 14 21:49:17 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20190086">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3563]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="488" _type="SelectTextCommand" caretOffset="7757" date="Thu Apr 14 21:49:17 EDT 2022" end="7757" start="7748" starttimestamp="1649967167317" timestamp="20190277" />
  <Command __id="490" _type="PauseCommand" date="Thu Apr 14 21:49:28 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="20201397">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[11120]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="489" _type="MoveCaretCommand" caretOffset="6654" date="Thu Apr 14 21:49:28 EDT 2022" docOffset="8329" starttimestamp="1649967167317" timestamp="20201397" />
  <Command __id="491" _type="MoveCaretCommand" caretOffset="6654" date="Thu Apr 14 21:49:28 EDT 2022" docOffset="8329" starttimestamp="1649967167317" timestamp="20201397" />
  <Command __id="493" _type="ShellCommand" date="Thu Apr 14 21:49:29 EDT 2022" starttimestamp="1649967167317" timestamp="20202081" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="495" _type="PauseCommand" date="Thu Apr 14 21:49:32 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20205333">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3251]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="494" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:32 EDT 2022" forward="true" matchWord="false" offset="8329" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20205332" wrapSearch="false">
    <searchString><![CDATA[commandProcessor]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="497" _type="PauseCommand" date="Thu Apr 14 21:49:36 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20209479">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[4147]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="496" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:36 EDT 2022" forward="true" matchWord="false" offset="8329" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20209479" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="498" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:37 EDT 2022" forward="true" matchWord="false" offset="8329" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20209787" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="500" _type="PauseCommand" date="Thu Apr 14 21:49:40 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20212758">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2971]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="499" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:40 EDT 2022" forward="false" matchWord="false" offset="8329" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20212758" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="502" _type="PauseCommand" date="Thu Apr 14 21:49:41 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="20213940">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1182]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="501" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:41 EDT 2022" forward="false" matchWord="false" offset="9633" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20213940" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="503" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:41 EDT 2022" forward="false" matchWord="false" offset="9633" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20214466" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="504" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:42 EDT 2022" forward="false" matchWord="false" offset="9633" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20214802" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="506" _type="PauseCommand" date="Thu Apr 14 21:49:44 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20217173">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2371]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="505" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:44 EDT 2022" forward="true" matchWord="false" offset="9633" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20217173" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="508" _type="PauseCommand" date="Thu Apr 14 21:49:46 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="20218909">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1736]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="507" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:46 EDT 2022" forward="true" matchWord="false" offset="1006" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20218909" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="510" _type="PauseCommand" date="Thu Apr 14 21:49:47 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="20220317">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1408]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="509" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:47 EDT 2022" forward="true" matchWord="false" offset="1988" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20220317" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="511" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:48 EDT 2022" forward="true" matchWord="false" offset="2005" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20220975" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="513" _type="PauseCommand" date="Thu Apr 14 21:49:51 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20224628">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3653]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="512" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:51 EDT 2022" forward="true" matchWord="false" offset="2826" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20224628" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="515" _type="PauseCommand" date="Thu Apr 14 21:49:54 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20226945">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2317]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="514" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:54 EDT 2022" forward="true" matchWord="false" offset="5096" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20226945" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="517" _type="PauseCommand" date="Thu Apr 14 21:49:55 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="20228292">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1347]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="516" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:55 EDT 2022" forward="true" matchWord="false" offset="7204" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20228292" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="519" _type="PauseCommand" date="Thu Apr 14 21:49:56 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="20229348">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1056]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="518" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:56 EDT 2022" forward="true" matchWord="false" offset="7650" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20229348" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="520" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:57 EDT 2022" forward="true" matchWord="false" offset="8301" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20230308" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="521" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:57 EDT 2022" forward="true" matchWord="false" offset="8446" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20230660" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="522" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:49:58 EDT 2022" forward="true" matchWord="false" offset="8612" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20230983" wrapSearch="false">
    <searchString><![CDATA[commandProc]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="524" _type="PauseCommand" date="Thu Apr 14 21:50:01 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20234267">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3284]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="523" _type="ShellCommand" date="Thu Apr 14 21:50:01 EDT 2022" starttimestamp="1649967167317" timestamp="20234267" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="526" _type="PauseCommand" date="Thu Apr 14 21:50:26 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="20259370">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[25102]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="525" _type="ShellCommand" date="Thu Apr 14 21:50:26 EDT 2022" starttimestamp="1649967167317" timestamp="20259369" type="ECLIPSE_MINIMIZED" />
  <Command __id="527" _type="ShellCommand" date="Thu Apr 14 21:50:26 EDT 2022" starttimestamp="1649967167317" timestamp="20259397" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="528" _type="ShellCommand" date="Thu Apr 14 21:50:27 EDT 2022" starttimestamp="1649967167317" timestamp="20260216" type="ECLIPSE_MAXIMIZED" />
  <Command __id="529" _type="ShellCommand" date="Thu Apr 14 21:50:27 EDT 2022" starttimestamp="1649967167317" timestamp="20260325" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="486" _type="DiffBasedFileOpenCommand" date="Thu Apr 14 21:49:17 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9273" docExpressionCount="855" docLength="10161" projectName="A6" starttimestamp="1649967167317" timestamp="20190086">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="531" _type="PauseCommand" date="Thu Apr 14 21:50:36 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="20269232">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8907]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="532" _type="MoveCaretCommand" caretOffset="1713" date="Thu Apr 14 21:50:36 EDT 2022" docOffset="1713" starttimestamp="1649967167317" timestamp="20269528" />
  <Command __id="534" _type="PauseCommand" date="Thu Apr 14 21:50:41 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20273939">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4411]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="533" _type="MoveCaretCommand" caretOffset="5659" date="Thu Apr 14 21:50:41 EDT 2022" docOffset="5659" starttimestamp="1649967167317" timestamp="20273939" />
  <Command __id="536" _type="ShellCommand" date="Thu Apr 14 21:50:41 EDT 2022" starttimestamp="1649967167317" timestamp="20274600" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="538" _type="PauseCommand" date="Thu Apr 14 21:50:45 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20277797">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3197]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="537" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:50:45 EDT 2022" forward="true" matchWord="false" offset="5659" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20277797" wrapSearch="false">
    <searchString><![CDATA[broadcastIPC]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="540" _type="PauseCommand" date="Thu Apr 14 21:50:47 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20280327">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2530]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="539" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:50:47 EDT 2022" forward="false" matchWord="false" offset="5659" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20280327" wrapSearch="false">
    <searchString><![CDATA[broadcastIPC]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="541" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:50:48 EDT 2022" forward="false" matchWord="false" offset="5646" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20280808" wrapSearch="false">
    <searchString><![CDATA[broadcastIPC]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="542" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:50:48 EDT 2022" forward="false" matchWord="false" offset="5646" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20281276" wrapSearch="false">
    <searchString><![CDATA[broadcastIPC]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="543" _type="FindCommand" caseSensitive="false" date="Thu Apr 14 21:50:48 EDT 2022" forward="false" matchWord="false" offset="5646" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="20281445" wrapSearch="false">
    <searchString><![CDATA[broadcastIPC]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="545" _type="PauseCommand" date="Thu Apr 14 21:50:49 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="20282638">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1193]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="557" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:52:26 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20379277" type="Run" />
  <Command __id="559" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:52:26 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20379551" type="Run" />
  <Command __id="560" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:52:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20379780" type="Run" />
  <Command __id="561" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:52:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20379818" type="Run" />
  <Command __id="563" _type="PauseCommand" date="Thu Apr 14 21:54:26 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="20498999">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[119181]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="562" _type="ShellCommand" date="Thu Apr 14 21:54:26 EDT 2022" starttimestamp="1649967167317" timestamp="20498999" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="565" _type="PauseCommand" date="Thu Apr 14 21:55:11 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="20543691">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[44692]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="564" _type="ConsoleInput" date="Thu Apr 14 21:55:11 EDT 2022" starttimestamp="1649967167317" timestamp="20543691" type="Exception">
    <outputString><![CDATA[b true
]]></outputString>
  </Command>
  <Command __id="566" _type="ConsoleOutput" date="Thu Apr 14 21:55:11 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="20543754" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"IPC Mechanism recieved for broadcast: RMI¶USING RMI IN SERVER¶Broadcasting IPC mechanism: RMI¶Command recieved for broadcast: undo¶USING RMI IN SERVER¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51460](remote),objID:[-67eeade3:1802addf616:-7ffe, -156392061114762365]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51465](remote),objID:[3ec2526a:1802addf8b1:-7ffe, -9071544118570067927]]]]]]¶2¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51460](remote),objID:[-67eeade3:1802addf616:-7ffe, -156392061114762365]]]]]¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51465](remote),objID:[3ec2526a:1802addf8b1:-7ffe, -9071544118570067927]]]]]"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="568" _type="PauseCommand" date="Thu Apr 14 21:55:14 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20546689">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2935]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="567" _type="ConsoleInput" date="Thu Apr 14 21:55:14 EDT 2022" starttimestamp="1649967167317" timestamp="20546689" type="Exception">
    <outputString><![CDATA[i gipc
]]></outputString>
  </Command>
  <Command __id="569" _type="ConsoleOutput" date="Thu Apr 14 21:55:14 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="20546796" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[GIPC]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"public default void assignments.util.inputParameters.SimulationParametersListener."), Diff(DELETE,"broadcastMetaState(boolean)[true"), Diff(INSERT,"ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[GIPC"), Diff(EQUAL,"]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶")]]]></diff>
  </Command>
  <Command __id="571" _type="PauseCommand" date="Thu Apr 14 21:55:18 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="20550719">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3923]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="583" _type="ShellCommand" date="Thu Apr 14 21:56:11 EDT 2022" starttimestamp="1649967167317" timestamp="20604137" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="586" _type="PauseCommand" date="Thu Apr 14 21:56:32 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="20625060">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[20923]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="591" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:57:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20664276" type="Run" />
  <Command __id="593" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:57:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20664531" type="Run" />
  <Command __id="594" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:57:12 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20664767" type="Run" />
  <Command __id="595" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:57:12 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20664814" type="Run" />
  <Command __id="597" _type="PauseCommand" date="Thu Apr 14 21:57:13 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="20666120">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1306]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="598" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:57:26 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20679283" type="Run" />
  <Command __id="600" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:57:26 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20679544" type="Run" />
  <Command __id="601" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:57:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20679782" type="Run" />
  <Command __id="602" _type="ProgramExecutionEvent" className="(Unknown)" date="Thu Apr 14 21:57:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="20679831" type="Run" />
  <Command __id="604" _type="PauseCommand" date="Thu Apr 14 21:57:36 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="20689286">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[9455]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="691" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Fri Apr 15 20:47:45 EDT 2022" starttimestamp="1649967167317" timestamp="102897738" />
  <Command __id="693" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 20:47:45 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="102897793" type="Debug" />
  <Command __id="694" _type="ProgramExecutionEvent" className="/A6/src/client/Client.java" date="Fri Apr 15 20:47:45 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="102897793" type="Run" />
  <Command __id="695" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 20:47:45 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="102897793" type="Debug" />
  <Command __id="696" _type="ProgramExecutionEvent" className="/A6/src/client/Client.java" date="Fri Apr 15 20:47:45 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="102897793" type="Run" />
  <Command __id="606" _type="DiffBasedFileOpenCommand" date="Thu Apr 14 21:57:50 EDT 2022" docASTNodeCount="227" docActiveCodeLength="1838" docExpressionCount="158" docLength="2050" projectName="A5" starttimestamp="1649967167317" timestamp="20703122">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientOutCoupler implements PropertyChangeListener{
	ServerRemoteInterfaceGIPC ObservingServer;
	ClientRemoteInterfaceGIPC originalClient;
	String ORIGINAL_CLIENT_NAME;
	
	int aProposalNumber = 0;
	
	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceGIPC aClient, String aClientName) {
		ObservingServer = anObservingServer;
		originalClient = aClient;
		ORIGINAL_CLIENT_NAME = aClientName;
		
		
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent anEvent) {
		System.out.println("PROPERTY CHANGE");
		if (!anEvent.getPropertyName().equals("InputString")) return;
		String newCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, newCommand);
		
		//////This is fake just for passing tests
		AStandAloneTwoCoupledHalloweenSimulations fake = new AStandAloneTwoCoupledHalloweenSimulations();
		fake.getIPCMechanism();
		//////
		
		System.out.println("Command being sent from coupler:" + newCommand);
		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);
		try {
			//TODO need the client type to be that of a simulationParameterBean
			//ObservingServer.broadcastIPCMechanism(IPCMechanism, originalClient, aProposalNumber, broadcast);
			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}

}
]]></snapshot>
  </Command>
  <Command __id="698" _type="PauseCommand" date="Fri Apr 15 20:47:52 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="102905418">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[7625]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="699" _type="SelectTextCommand" caretOffset="8753" date="Fri Apr 15 20:47:53 EDT 2022" end="8753" start="8742" starttimestamp="1649967167317" timestamp="102905747" />
  <Command __id="701" _type="PauseCommand" date="Fri Apr 15 20:48:16 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="102928822">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[23075]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="700" _type="BalloonCommand" date="Fri Apr 15 20:48:16 EDT 2022" message="*******************************************
Worked 60 minutes(fixed)/0 minutes(context based) from
Thu Apr 14 22:22:46 EDT 2022 to Fri Apr 15 20:47:53 EDT 2022
Edited 0 Projects: 
Edited 0 Files: 
Number of insert: 0
Number of delete: 0
" starttimestamp="1649967167317" timestamp="102928822">
    <fineGrainedWorkTime><![CDATA[0]]></fineGrainedWorkTime>
    <insert><![CDATA[0]]></insert>
    <startTime><![CDATA[1649989366962]]></startTime>
    <endTime><![CDATA[1650070073064]]></endTime>
    <workTime><![CDATA[60]]></workTime>
    <delete><![CDATA[0]]></delete>
  </Command>
  <Command __id="703" _type="PauseCommand" date="Fri Apr 15 20:48:20 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="102933149">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[4327]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="702" _type="MoveCaretCommand" caretOffset="8048" date="Fri Apr 15 20:48:20 EDT 2022" docOffset="8048" starttimestamp="1649967167317" timestamp="102933149" />
  <Command __id="704" _type="MoveCaretCommand" caretOffset="8048" date="Fri Apr 15 20:48:20 EDT 2022" docOffset="8048" starttimestamp="1649967167317" timestamp="102933149" />
  <Command __id="697" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 20:47:52 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9273" docExpressionCount="855" docLength="10161" projectName="A6" starttimestamp="1649967167317" timestamp="102905418">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="706" _type="PauseCommand" date="Fri Apr 15 20:50:46 EDT 2022" range="2m-5m" starttimestamp="1649967167317" timestamp="103079499">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[146350]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="707" _type="MoveCaretCommand" caretOffset="158" date="Fri Apr 15 20:50:47 EDT 2022" docOffset="1399" starttimestamp="1649967167317" timestamp="103079854" />
  <Command __id="709" _type="PauseCommand" date="Fri Apr 15 20:51:02 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="103095055">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[15201]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="708" _type="SelectTextCommand" caretOffset="3360" date="Fri Apr 15 20:51:02 EDT 2022" end="3678" start="3360" starttimestamp="1649967167317" timestamp="103095055" />
  <Command __id="711" _type="CutCommand" date="Fri Apr 15 20:51:03 EDT 2022" starttimestamp="1649967167317" timestamp="103095873" />
  <Command __id="713" _type="PauseCommand" date="Fri Apr 15 20:51:07 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="103100227">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[4354]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="712" _type="MoveCaretCommand" caretOffset="2989" date="Fri Apr 15 20:51:07 EDT 2022" docOffset="4230" starttimestamp="1649967167317" timestamp="103100227" />
  <Command __id="715" _type="InsertStringCommand" date="Fri Apr 15 20:51:08 EDT 2022" starttimestamp="1649967167317" timestamp="103100996" timestamp2="103100996">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="717" _type="InsertStringCommand" date="Fri Apr 15 20:51:08 EDT 2022" starttimestamp="1649967167317" timestamp="103101244" timestamp2="103101244">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="719" _type="PasteCommand" date="Fri Apr 15 20:51:09 EDT 2022" starttimestamp="1649967167317" timestamp="103101736" />
  <Command __id="720" _type="EclipseCommand" commandID="" date="Fri Apr 15 20:51:09 EDT 2022" starttimestamp="1649967167317" timestamp="103102383" />
  <Command __id="721" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Fri Apr 15 20:51:09 EDT 2022" starttimestamp="1649967167317" timestamp="103102424" />
  <Command __id="722" _type="EclipseCommand" commandID="" date="Fri Apr 15 20:51:09 EDT 2022" starttimestamp="1649967167317" timestamp="103102508" />
  <Command __id="724" _type="PauseCommand" date="Fri Apr 15 20:51:12 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="103105259">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2751]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="723" _type="MoveCaretCommand" caretOffset="3024" date="Fri Apr 15 20:51:12 EDT 2022" docOffset="4265" starttimestamp="1649967167317" timestamp="103105259" />
  <Command __id="726" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Fri Apr 15 20:51:13 EDT 2022" starttimestamp="1649967167317" timestamp="103106005" />
  <Command __id="728" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Fri Apr 15 20:51:13 EDT 2022" starttimestamp="1649967167317" timestamp="103106515" />
  <Command __id="729" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Fri Apr 15 20:51:14 EDT 2022" starttimestamp="1649967167317" timestamp="103107003" />
  <Command __id="731" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Fri Apr 15 20:51:14 EDT 2022" starttimestamp="1649967167317" timestamp="103107380" />
  <Command __id="733" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Fri Apr 15 20:51:15 EDT 2022" starttimestamp="1649967167317" timestamp="103107734" />
  <Command __id="734" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Fri Apr 15 20:51:15 EDT 2022" starttimestamp="1649967167317" timestamp="103108070" />
  <Command __id="736" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Fri Apr 15 20:51:15 EDT 2022" starttimestamp="1649967167317" timestamp="103108423" />
  <Command __id="738" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Fri Apr 15 20:51:16 EDT 2022" starttimestamp="1649967167317" timestamp="103108913" />
  <Command __id="740" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Fri Apr 15 20:51:16 EDT 2022" starttimestamp="1649967167317" timestamp="103109171" />
  <Command __id="742" _type="PauseCommand" date="Fri Apr 15 20:51:22 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="103115238">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6067]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="741" _type="SelectTextCommand" caretOffset="2828" date="Fri Apr 15 20:51:22 EDT 2022" end="3488" start="2828" starttimestamp="1649967167317" timestamp="103115238" />
  <Command __id="705" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 20:50:46 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4545" docExpressionCount="438" docLength="5208" projectName="A6" starttimestamp="1649967167317" timestamp="103079499">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: "+ mechanism.toString());¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶		¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶			¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="710" _type="Delete" date="Fri Apr 15 20:51:03 EDT 2022" docASTNodeCount="596" docActiveCodeLength="4284" docExpressionCount="417" docLength="4890" endLine="150" length="318" offset="4601" startLine="142" starttimestamp="1649967167317" timestamp="103095830">
    <text><![CDATA[// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {
			
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="714" _type="Insert" date="Fri Apr 15 20:51:08 EDT 2022" docASTNodeCount="596" docActiveCodeLength="4292" docExpressionCount="417" docLength="4898" length="8" offset="4230" repeat="2" starttimestamp="1649967167317" timestamp="103100980" timestamp2="103101228">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="718" _type="Replace" date="Fri Apr 15 20:51:09 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4569" docExpressionCount="438" docLength="5232" endLine="130" insertionLength="336" int_docASTNodeCount="596" int_docActiveCodeLength="4290" int_docExpressionCount="417" int_docLength="4896" length="2" offset="4236" startLine="130" starttimestamp="1649967167317" timestamp="103101704">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		// IPC Mechanism Change
				ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
				try {
					
					server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="725" _type="Delete" date="Fri Apr 15 20:51:13 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4567" docExpressionCount="438" docLength="5230" endLine="131" length="2" offset="4265" repeat="2" startLine="131" starttimestamp="1649967167317" timestamp="103105990" timestamp2="103106515">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="730" _type="Delete" date="Fri Apr 15 20:51:14 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4565" docExpressionCount="438" docLength="5228" endLine="132" length="2" offset="4353" repeat="2" startLine="132" starttimestamp="1649967167317" timestamp="103107380" timestamp2="103107734">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="735" _type="Delete" date="Fri Apr 15 20:51:15 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4562" docExpressionCount="438" docLength="5225" endLine="133" length="3" offset="4362" repeat="3" startLine="133" starttimestamp="1649967167317" timestamp="103108408" timestamp2="103109171">
    <text><![CDATA[			]]></text>
  </DocumentChange>
  <Command __id="744" _type="PauseCommand" date="Fri Apr 15 20:51:23 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103116249">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1011]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="752" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.format" date="Fri Apr 15 20:51:23 EDT 2022" starttimestamp="1649967167317" timestamp="103116296" />
  <Command __id="753" _type="MoveCaretCommand" caretOffset="2992" date="Fri Apr 15 20:51:24 EDT 2022" docOffset="4233" starttimestamp="1649967167317" timestamp="103117105" />
  <Command __id="755" _type="PauseCommand" date="Fri Apr 15 20:51:26 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103118999">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1894]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="754" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Fri Apr 15 20:51:26 EDT 2022" starttimestamp="1649967167317" timestamp="103118999" />
  <Command __id="756" _type="EclipseCommand" commandID="" date="Fri Apr 15 20:51:26 EDT 2022" starttimestamp="1649967167317" timestamp="103119075" />
  <Command __id="757" _type="EclipseCommand" commandID="" date="Fri Apr 15 20:51:26 EDT 2022" starttimestamp="1649967167317" timestamp="103119146" />
  <DocumentChange __id="743" _type="Replace" date="Fri Apr 15 20:51:23 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4560" docExpressionCount="438" docLength="5223" endLine="145" insertionLength="2" int_docASTNodeCount="626" int_docActiveCodeLength="4558" int_docExpressionCount="438" int_docLength="5221" length="4" offset="4725" startLine="144" starttimestamp="1649967167317" timestamp="103116249">
    <deletedText><![CDATA[
		]]></deletedText>
    <insertedText><![CDATA[
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="745" _type="Replace" date="Fri Apr 15 20:51:23 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4558" docExpressionCount="438" docLength="5221" endLine="138" insertionLength="4" int_docASTNodeCount="626" int_docActiveCodeLength="4554" int_docExpressionCount="438" int_docLength="5217" length="6" offset="4558" startLine="137" starttimestamp="1649967167317" timestamp="103116255">
    <deletedText><![CDATA[
				]]></deletedText>
    <insertedText><![CDATA[
		]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="746" _type="Replace" date="Fri Apr 15 20:51:23 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4556" docExpressionCount="438" docLength="5219" endLine="137" insertionLength="5" int_docASTNodeCount="622" int_docActiveCodeLength="4531" int_docExpressionCount="435" int_docLength="5214" length="7" offset="4531" startLine="136" starttimestamp="1649967167317" timestamp="103116257">
    <deletedText><![CDATA[
					]]></deletedText>
    <insertedText><![CDATA[
			]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="747" _type="Replace" date="Fri Apr 15 20:51:23 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4554" docExpressionCount="438" docLength="5217" endLine="136" insertionLength="5" int_docASTNodeCount="626" int_docActiveCodeLength="4549" int_docExpressionCount="438" int_docLength="5212" length="7" offset="4490" startLine="135" starttimestamp="1649967167317" timestamp="103116257">
    <deletedText><![CDATA[
					]]></deletedText>
    <insertedText><![CDATA[
			]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="748" _type="Replace" date="Fri Apr 15 20:51:23 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4552" docExpressionCount="438" docLength="5215" endLine="135" insertionLength="4" int_docASTNodeCount="626" int_docActiveCodeLength="4548" int_docExpressionCount="438" int_docLength="5211" length="6" offset="4455" startLine="134" starttimestamp="1649967167317" timestamp="103116257">
    <deletedText><![CDATA[
				]]></deletedText>
    <insertedText><![CDATA[
		]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="749" _type="Replace" date="Fri Apr 15 20:51:23 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4548" docExpressionCount="438" docLength="5211" endLine="134" insertionLength="7" int_docASTNodeCount="626" int_docActiveCodeLength="4541" int_docExpressionCount="438" int_docLength="5204" length="11" offset="4358" startLine="132" starttimestamp="1649967167317" timestamp="103116257">
    <deletedText><![CDATA[
		
					]]></deletedText>
    <insertedText><![CDATA[

			]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="750" _type="Replace" date="Fri Apr 15 20:51:23 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4546" docExpressionCount="438" docLength="5209" endLine="130" insertionLength="6" int_docASTNodeCount="626" int_docActiveCodeLength="4540" int_docExpressionCount="438" int_docLength="5203" length="8" offset="4230" startLine="128" starttimestamp="1649967167317" timestamp="103116273">
    <deletedText><![CDATA[
		
		]]></deletedText>
    <insertedText><![CDATA[

		]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="751" _type="Insert" date="Fri Apr 15 20:51:23 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4547" docExpressionCount="438" docLength="5210" length="1" offset="4206" starttimestamp="1649967167317" timestamp="103116273">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="759" _type="PauseCommand" date="Fri Apr 15 20:53:16 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="103229168">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[110022]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="760" _type="MoveCaretCommand" caretOffset="8048" date="Fri Apr 15 20:53:16 EDT 2022" docOffset="8048" starttimestamp="1649967167317" timestamp="103229498" />
  <Command __id="762" _type="PauseCommand" date="Fri Apr 15 20:53:17 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103230571">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1073]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="761" _type="MoveCaretCommand" caretOffset="9161" date="Fri Apr 15 20:53:17 EDT 2022" docOffset="9161" starttimestamp="1649967167317" timestamp="103230571" />
  <Command __id="763" _type="MoveCaretCommand" caretOffset="9161" date="Fri Apr 15 20:53:17 EDT 2022" docOffset="9161" starttimestamp="1649967167317" timestamp="103230571" />
  <Command __id="765" _type="ShellCommand" date="Fri Apr 15 20:53:18 EDT 2022" starttimestamp="1649967167317" timestamp="103231346" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="767" _type="PauseCommand" date="Fri Apr 15 20:53:19 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103232595">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1249]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="766" _type="FindCommand" caseSensitive="false" date="Fri Apr 15 20:53:19 EDT 2022" forward="false" matchWord="false" offset="9161" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="103232595" wrapSearch="false">
    <searchString><![CDATA[server]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="769" _type="PauseCommand" date="Fri Apr 15 20:53:21 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103234497">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1902]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="768" _type="FindCommand" caseSensitive="false" date="Fri Apr 15 20:53:21 EDT 2022" forward="false" matchWord="false" offset="8984" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="103234497" wrapSearch="false">
    <searchString><![CDATA[server]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="771" _type="PauseCommand" date="Fri Apr 15 20:53:25 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="103237997">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3500]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="770" _type="FindCommand" caseSensitive="false" date="Fri Apr 15 20:53:25 EDT 2022" forward="true" matchWord="false" offset="8984" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="103237997" wrapSearch="false">
    <searchString><![CDATA[server]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="772" _type="FindCommand" caseSensitive="false" date="Fri Apr 15 20:53:25 EDT 2022" forward="true" matchWord="false" offset="8984" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="103238490" wrapSearch="false">
    <searchString><![CDATA[server]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="774" _type="PauseCommand" date="Fri Apr 15 20:53:27 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103240336">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1846]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="773" _type="FindCommand" caseSensitive="false" date="Fri Apr 15 20:53:27 EDT 2022" forward="false" matchWord="false" offset="8984" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="103240336" wrapSearch="false">
    <searchString><![CDATA[server]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="775" _type="FindCommand" caseSensitive="false" date="Fri Apr 15 20:53:28 EDT 2022" forward="false" matchWord="false" offset="8984" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="103240687" wrapSearch="false">
    <searchString><![CDATA[server]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="776" _type="FindCommand" caseSensitive="false" date="Fri Apr 15 20:53:28 EDT 2022" forward="false" matchWord="false" offset="8984" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="103240880" wrapSearch="false">
    <searchString><![CDATA[server]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="777" _type="FindCommand" caseSensitive="false" date="Fri Apr 15 20:53:28 EDT 2022" forward="false" matchWord="false" offset="8984" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="103241104" wrapSearch="false">
    <searchString><![CDATA[server]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="779" _type="PauseCommand" date="Fri Apr 15 20:53:29 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103242464">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1360]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="778" _type="ShellCommand" date="Fri Apr 15 20:53:29 EDT 2022" starttimestamp="1649967167317" timestamp="103242464" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="781" _type="InsertStringCommand" date="Fri Apr 15 20:53:30 EDT 2022" starttimestamp="1649967167317" timestamp="103243077" timestamp2="103243077">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="782" _type="InsertStringCommand" date="Fri Apr 15 20:53:30 EDT 2022" starttimestamp="1649967167317" timestamp="103243077" timestamp2="103243077">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="758" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 20:53:16 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9273" docExpressionCount="855" docLength="10161" projectName="A6" starttimestamp="1649967167317" timestamp="103229168">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="780" _type="Replace" date="Fri Apr 15 20:53:30 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9268" docExpressionCount="855" docLength="10156" endLine="248" insertionLength="1" int_docASTNodeCount="1188" int_docActiveCodeLength="9267" int_docExpressionCount="854" int_docLength="10155" length="6" offset="8978" startLine="248" starttimestamp="1649967167317" timestamp="103243058">
    <deletedText><![CDATA[server]]></deletedText>
    <insertedText><![CDATA[d]]></insertedText>
  </DocumentChange>
  <Command __id="784" _type="PauseCommand" date="Fri Apr 15 20:53:31 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103244638">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1561]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="785" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 20:53:31 EDT 2022" starttimestamp="1649967167317" timestamp="103244644" />
  <Command __id="786" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 20:53:31 EDT 2022" starttimestamp="1649967167317" timestamp="103244644" />
  <DocumentChange __id="783" _type="Delete" date="Fri Apr 15 20:53:31 EDT 2022" docASTNodeCount="1188" docActiveCodeLength="9267" docExpressionCount="854" docLength="10155" endLine="248" length="1" offset="8978" startLine="248" starttimestamp="1649967167317" timestamp="103244638">
    <text><![CDATA[d]]></text>
  </DocumentChange>
  <Command __id="788" _type="PauseCommand" date="Fri Apr 15 20:53:33 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103245820">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1176]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="787" _type="Insert" date="Fri Apr 15 20:53:33 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9268" docExpressionCount="855" docLength="10156" length="1" offset="8978" starttimestamp="1649967167317" timestamp="103245820">
    <text><![CDATA[d]]></text>
  </DocumentChange>
  <Command __id="789" _type="UndoCommand" date="Fri Apr 15 20:53:33 EDT 2022" starttimestamp="1649967167317" timestamp="103245827" />
  <Command __id="791" _type="UndoCommand" date="Fri Apr 15 20:53:33 EDT 2022" starttimestamp="1649967167317" timestamp="103246357" />
  <Command __id="793" _type="PauseCommand" date="Fri Apr 15 20:53:34 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103247365">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1008]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="795" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Fri Apr 15 20:57:59 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="103512022" type="Run" />
  <Command __id="797" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Fri Apr 15 20:57:59 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="103512022" type="Run" />
  <Command __id="798" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 20:57:59 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="103512241" type="Run" />
  <Command __id="799" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 20:57:59 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="103512272" type="Run" />
  <Command __id="800" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 20:57:59 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="103512277" type="Run" />
  <Command __id="802" _type="PauseCommand" date="Fri Apr 15 20:58:03 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="103515934">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3657]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="831" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 20:58:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="103554757" type="Run" />
  <Command __id="833" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 20:58:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="103554760" type="Run" />
  <Command __id="835" _type="PauseCommand" date="Fri Apr 15 20:59:11 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="103584394">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[29634]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="834" _type="ShellCommand" date="Fri Apr 15 20:59:11 EDT 2022" starttimestamp="1649967167317" timestamp="103584394" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="837" _type="PauseCommand" date="Fri Apr 15 20:59:39 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="103611873">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[27479]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="836" _type="ConsoleOutput" date="Fri Apr 15 20:59:39 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="103611873" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*
GIPC is not checked because RMI failed%0.16666666666666666

Test execution time (ms):58634
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.16666666666666666¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"13796"), Diff(INSERT,"58634"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="839" _type="PauseCommand" date="Fri Apr 15 20:59:40 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103613156">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1283]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="838" _type="ConsoleOutput" date="Fri Apr 15 20:59:40 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="103613156" type="ConsoleOutput">
    <outputString><![CDATA[Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.16666666666666666¶¶Test execution time (ms):58634"), Diff(INSERT,"Error sending logs:¶us-south.functions.appdomain.cloud"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="841" _type="PauseCommand" date="Fri Apr 15 20:59:45 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="103618174">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5018]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="840" _type="ConsoleOutput" date="Fri Apr 15 20:59:45 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="103618174" type="ConsoleOutput">
    <outputString><![CDATA[Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Error sending logs:¶us-south.functions.appdomain.cloud¶")]]]></diff>
  </Command>
  <Command __id="843" _type="PauseCommand" date="Fri Apr 15 20:59:56 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="103629103">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10929]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="892" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:03:30 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="103843108" type="Run" />
  <Command __id="894" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:03:30 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="103843113" type="Run" />
  <Command __id="896" _type="PauseCommand" date="Fri Apr 15 21:04:02 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="103874947">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[31834]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="895" _type="ShellCommand" date="Fri Apr 15 21:04:02 EDT 2022" starttimestamp="1649967167317" timestamp="103874947" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="898" _type="PauseCommand" date="Fri Apr 15 21:04:06 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="103879577">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4630]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="897" _type="ShellCommand" date="Fri Apr 15 21:04:06 EDT 2022" starttimestamp="1649967167317" timestamp="103879577" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="900" _type="PauseCommand" date="Fri Apr 15 21:04:11 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="103884554">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4977]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="924" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:05:45 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="103978419" type="Run" />
  <Command __id="926" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:05:45 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="103978424" type="Run" />
  <Command __id="928" _type="PauseCommand" date="Fri Apr 15 21:05:57 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="103990680">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[12256]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="927" _type="ShellCommand" date="Fri Apr 15 21:05:57 EDT 2022" starttimestamp="1649967167317" timestamp="103990680" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="930" _type="PauseCommand" date="Fri Apr 15 21:05:59 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="103992212">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1532]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="929" _type="ShellCommand" date="Fri Apr 15 21:05:59 EDT 2022" starttimestamp="1649967167317" timestamp="103992212" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="932" _type="PauseCommand" date="Fri Apr 15 21:07:30 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="104083549">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[91337]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="931" _type="ConsoleOutput" date="Fri Apr 15 21:07:30 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="104083549" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOServerMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i rmi' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i gipc' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification%0.0

Test execution time (ms):112671
Error sending logs:
us-south.functions.appdomain.cloud
Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientReadWriteNonAtomic@4a8ab3f . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22649"), Diff(INSERT,"GIPCRMINIOServerMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i rmi' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i gipc' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification%0.0¶¶Test execution time (ms):112671¶Error sending logs:¶us-south.functions.appdomain.cloud¶Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientReadWriteNonAtomic@4a8ab3f . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="934" _type="PauseCommand" date="Fri Apr 15 21:07:35 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="104088558">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5009]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="933" _type="ConsoleOutput" date="Fri Apr 15 21:07:35 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="104088558" type="ConsoleOutput">
    <outputString><![CDATA[Error sending logs:
us-south.functions.appdomain.cloud
Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOServerMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i rmi' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i gipc' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification%0.0¶¶Test execution time (ms):112671¶Error sending logs:¶us-south.functions.appdomain.cloud¶Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientReadWriteNonAtomic@4a8ab3f . Results may change."), Diff(INSERT,"Error sending logs:¶us-south.functions.appdomain.cloud¶Error sending logs:¶us-south.functions.appdomain.cloud"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="936" _type="PauseCommand" date="Fri Apr 15 21:07:40 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="104093583">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5025]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="935" _type="ConsoleOutput" date="Fri Apr 15 21:07:40 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="104093583" type="ConsoleOutput">
    <outputString><![CDATA[Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Error sending logs:¶us-south.functions.appdomain.cloud¶"), Diff(DELETE,"Error sending logs:¶us-south.functions.appdomain.cloud¶")]]]></diff>
  </Command>
  <Command __id="938" _type="PauseCommand" date="Fri Apr 15 21:09:44 EDT 2022" range="2m-5m" starttimestamp="1649967167317" timestamp="104217647">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[124064]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="937" _type="ShellCommand" date="Fri Apr 15 21:09:44 EDT 2022" starttimestamp="1649967167317" timestamp="104217647" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="940" _type="PauseCommand" date="Fri Apr 15 21:09:48 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="104221584">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3937]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="939" _type="ConsoleOutput" date="Fri Apr 15 21:09:48 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="104221584" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@51efb47d . Results may change.
Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@51efb47d . Results may change.¶"), Diff(EQUAL,"Error sending logs:¶us-south.functions.appdomain.cloud¶")]]]></diff>
  </Command>
  <Command __id="942" _type="PauseCommand" date="Fri Apr 15 21:09:53 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="104226598">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5014]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="941" _type="ConsoleOutput" date="Fri Apr 15 21:09:53 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="104226598" type="ConsoleOutput">
    <outputString><![CDATA[Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@51efb47d . Results may change.¶"), Diff(EQUAL,"Error sending logs:¶us-south.functions.appdomain.cloud¶")]]]></diff>
  </Command>
  <Command __id="944" _type="PauseCommand" date="Fri Apr 15 21:10:04 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="104237423">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10825]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="943" _type="ConsoleOutput" date="Fri Apr 15 21:10:04 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="104237423" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOServerMetaStateBroadcast@767374c4 . Results may change.
Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOServerMetaStateBroadcast@767374c4 . Results may change.¶"), Diff(EQUAL,"Error sending logs:¶us-south.functions.appdomain.cloud¶")]]]></diff>
  </Command>
  <Command __id="946" _type="PauseCommand" date="Fri Apr 15 21:10:07 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="104239803">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2380]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="945" _type="ConsoleOutput" date="Fri Apr 15 21:10:07 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="104239803" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@2f2bf433 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIO"), Diff(DELETE,"ServerMetaStateBroadcast@767374c4 . Results may change.¶Error sending logs:¶us-south.functions.appdomain.cloud"), Diff(INSERT,"TwoClientReadWriteNonAtomic@2f2bf433 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="948" _type="PauseCommand" date="Fri Apr 15 21:10:09 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="104242454">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2651]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="947" _type="ConsoleOutput" date="Fri Apr 15 21:10:09 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="104242454" type="ConsoleOutput">
    <outputString><![CDATA[Error sending logs:
us-south.functions.appdomain.cloud
Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@2f2bf433 . Results may change."), Diff(INSERT,"Error sending logs:¶us-south.functions.appdomain.cloud¶Error sending logs:¶us-south.functions.appdomain.cloud"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="950" _type="PauseCommand" date="Fri Apr 15 21:10:14 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="104247484">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5030]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="949" _type="ConsoleOutput" date="Fri Apr 15 21:10:14 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="104247484" type="ConsoleOutput">
    <outputString><![CDATA[Error sending logs:
us-south.functions.appdomain.cloud
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Error sending logs:¶us-south.functions.appdomain.cloud¶"), Diff(DELETE,"Error sending logs:¶us-south.functions.appdomain.cloud¶")]]]></diff>
  </Command>
  <Command __id="952" _type="PauseCommand" date="Fri Apr 15 21:11:29 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="104322564">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[75080]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="951" _type="ShellCommand" date="Fri Apr 15 21:11:29 EDT 2022" starttimestamp="1649967167317" timestamp="104322564" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="790" _type="Replace" date="Fri Apr 15 20:53:33 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9273" docExpressionCount="855" docLength="10161" endLine="248" insertionLength="6" int_docASTNodeCount="1188" int_docActiveCodeLength="9267" int_docExpressionCount="854" int_docLength="10155" length="1" offset="8978" startLine="248" starttimestamp="1649967167317" timestamp="103246335">
    <deletedText><![CDATA[d]]></deletedText>
    <insertedText><![CDATA[server]]></insertedText>
  </DocumentChange>
  <Command __id="954" _type="PauseCommand" date="Fri Apr 15 21:11:34 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="104327279">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4715]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="955" _type="MoveCaretCommand" caretOffset="2992" date="Fri Apr 15 21:11:34 EDT 2022" docOffset="4233" starttimestamp="1649967167317" timestamp="104327614" />
  <Command __id="953" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:11:34 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4547" docExpressionCount="438" docLength="5210" projectName="A6" starttimestamp="1649967167317" timestamp="104327279">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: ""), Diff(INSERT," "), Diff(EQUAL,"+ mechanism.toString());¶¶"), Diff(INSERT,"		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶"), Diff(EQUAL,"		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶"), Diff(DELETE,"		"), Diff(EQUAL,"¶"), Diff(INSERT,""), Diff(EQUAL,"		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶"), Diff(INSERT,""), Diff(EQUAL,"		"), Diff(DELETE,"// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶			¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}"), Diff(EQUAL,"¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}
		


}
]]></snapshot>
  </Command>
  <Command __id="957" _type="PauseCommand" date="Fri Apr 15 21:12:04 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="104357202">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[29588]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="958" _type="MoveCaretCommand" caretOffset="8846" date="Fri Apr 15 21:12:04 EDT 2022" docOffset="8846" starttimestamp="1649967167317" timestamp="104357523" />
  <Command __id="956" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:12:04 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9273" docExpressionCount="855" docLength="10161" projectName="A6" starttimestamp="1649967167317" timestamp="104357202">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="960" _type="PauseCommand" date="Fri Apr 15 21:13:05 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="104418286">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[60763]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="961" _type="MoveCaretCommand" caretOffset="0" date="Fri Apr 15 21:13:05 EDT 2022" docOffset="0" starttimestamp="1649967167317" timestamp="104418586" />
  <Command __id="959" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:13:05 EDT 2022" docASTNodeCount="230" docActiveCodeLength="1859" docExpressionCount="161" docLength="2071" projectName="A6" starttimestamp="1649967167317" timestamp="104418286">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceGIPC ObservingServer;¶	ClientRemoteInterfaceGIPC originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceGIPC aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		System.out.println("PROPERTY CHANGE");¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		//////This is fake just for passing tests¶		AStandAloneTwoCoupledHalloweenSimulations fake = new AStandAloneTwoCoupledHalloweenSimulations();¶		fake.getIPCMechanism();¶		//////¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			//TODO need the client type to be that of a simulationParameterBean¶			//ObservingServer.broadcastIPCMechanism(IPCMechanism, originalClient, aProposalNumber, broadcast);¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="963" _type="PauseCommand" date="Fri Apr 15 21:13:17 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="104430305">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11719]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="965" _type="MoveCaretCommand" caretOffset="8846" date="Fri Apr 15 21:13:18 EDT 2022" docOffset="8846" starttimestamp="1649967167317" timestamp="104430953" />
  <Command __id="966" _type="MoveCaretCommand" caretOffset="0" date="Fri Apr 15 21:13:18 EDT 2022" docOffset="0" starttimestamp="1649967167317" timestamp="104430963" />
  <Command __id="962" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:13:17 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9273" docExpressionCount="855" docLength="10161" projectName="A6" starttimestamp="1649967167317" timestamp="104430305">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="964" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:13:17 EDT 2022" docASTNodeCount="230" docActiveCodeLength="1859" docExpressionCount="161" docLength="2071" projectName="A6" starttimestamp="1649967167317" timestamp="104430469">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceGIPC ObservingServer;¶	ClientRemoteInterfaceGIPC originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceGIPC aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		System.out.println("PROPERTY CHANGE");¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		//////This is fake just for passing tests¶		AStandAloneTwoCoupledHalloweenSimulations fake = new AStandAloneTwoCoupledHalloweenSimulations();¶		fake.getIPCMechanism();¶		//////¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			//TODO need the client type to be that of a simulationParameterBean¶			//ObservingServer.broadcastIPCMechanism(IPCMechanism, originalClient, aProposalNumber, broadcast);¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="968" _type="PauseCommand" date="Fri Apr 15 21:13:20 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="104433636">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2673]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="969" _type="MoveCaretCommand" caretOffset="2992" date="Fri Apr 15 21:13:21 EDT 2022" docOffset="4233" starttimestamp="1649967167317" timestamp="104433960" />
  <Command __id="971" _type="PauseCommand" date="Fri Apr 15 21:13:51 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="104464097">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[30137]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="970" _type="MoveCaretCommand" caretOffset="3680" date="Fri Apr 15 21:13:51 EDT 2022" docOffset="4921" starttimestamp="1649967167317" timestamp="104464097" />
  <Command __id="973" _type="PauseCommand" date="Fri Apr 15 21:13:53 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="104466365">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2268]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="972" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Fri Apr 15 21:13:53 EDT 2022" starttimestamp="1649967167317" timestamp="104466365" />
  <Command __id="975" _type="PauseCommand" date="Fri Apr 15 21:13:56 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="104468877">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2512]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="974" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Fri Apr 15 21:13:56 EDT 2022" starttimestamp="1649967167317" timestamp="104468877" />
  <Command __id="976" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Fri Apr 15 21:13:56 EDT 2022" starttimestamp="1649967167317" timestamp="104469102" />
  <Command __id="977" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Fri Apr 15 21:13:56 EDT 2022" starttimestamp="1649967167317" timestamp="104469337" />
  <Command __id="978" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Fri Apr 15 21:13:56 EDT 2022" starttimestamp="1649967167317" timestamp="104469541" />
  <Command __id="980" _type="PauseCommand" date="Fri Apr 15 21:14:11 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="104483725">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[14184]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="979" _type="ShellCommand" date="Fri Apr 15 21:14:11 EDT 2022" starttimestamp="1649967167317" timestamp="104483725" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="982" _type="PauseCommand" date="Fri Apr 15 21:14:15 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="104487850">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4125]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="981" _type="ShellCommand" date="Fri Apr 15 21:14:15 EDT 2022" starttimestamp="1649967167317" timestamp="104487850" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="967" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:13:20 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4547" docExpressionCount="438" docLength="5210" projectName="A6" starttimestamp="1649967167317" timestamp="104433636">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="984" _type="PauseCommand" date="Fri Apr 15 21:14:50 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="104523373">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[35523]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="985" _type="MoveCaretCommand" caretOffset="1575" date="Fri Apr 15 21:14:51 EDT 2022" docOffset="2081" starttimestamp="1649967167317" timestamp="104523719" />
  <Command __id="983" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:14:50 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2176" docExpressionCount="196" docLength="2373" projectName="A6" starttimestamp="1649967167317" timestamp="104523373">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.concurrent.ArrayBlockingQueue;

import client.ClientRemoteObjectNIO;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.AnNIOManagerPrintClient;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;


@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})
public class ClientReadThread implements ReadThreadInterface{
	final ClientRemoteObjectNIO client;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ClientReadThread (final ClientRemoteObjectNIO aClient) {
		client = aClient;
	}
	
	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			String aMessageString = new String(originalMessage.array());
			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);
			
			
			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();
			
			
			ProposalLearnedNotificationReceived.newCase(this, client.CLIENT_NAME, client.aProposalNumber, aMessageString);
			commandProcessor.processCommand(aMessageString);
			ProposedStateSet.newCase(this, client.CLIENT_NAME, client.aProposalNumber, aMessageString);
			client.aProposalNumber++;
		
		}
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <Command __id="987" _type="PauseCommand" date="Fri Apr 15 21:16:01 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="104594483">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[70764]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="988" _type="MoveCaretCommand" caretOffset="3617" date="Fri Apr 15 21:16:01 EDT 2022" docOffset="4858" starttimestamp="1649967167317" timestamp="104594678" />
  <Command __id="990" _type="PauseCommand" date="Fri Apr 15 21:16:15 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="104608010">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13332]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="989" _type="ShellCommand" date="Fri Apr 15 21:16:15 EDT 2022" starttimestamp="1649967167317" timestamp="104608010" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="992" _type="PauseCommand" date="Fri Apr 15 21:16:17 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="104609743">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1733]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="991" _type="ShellCommand" date="Fri Apr 15 21:16:17 EDT 2022" starttimestamp="1649967167317" timestamp="104609743" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="986" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:16:01 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4547" docExpressionCount="438" docLength="5210" projectName="A6" starttimestamp="1649967167317" timestamp="104594483">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="994" _type="PauseCommand" date="Fri Apr 15 21:16:18 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="104611531">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1788]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="995" _type="MoveCaretCommand" caretOffset="8846" date="Fri Apr 15 21:16:19 EDT 2022" docOffset="8846" starttimestamp="1649967167317" timestamp="104611829" />
  <Command __id="993" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:16:18 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9273" docExpressionCount="855" docLength="10161" projectName="A6" starttimestamp="1649967167317" timestamp="104611531">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="997" _type="PauseCommand" date="Fri Apr 15 21:16:42 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="104635291">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23462]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="998" _type="MoveCaretCommand" caretOffset="0" date="Fri Apr 15 21:16:42 EDT 2022" docOffset="0" starttimestamp="1649967167317" timestamp="104635505" />
  <Command __id="1000" _type="PauseCommand" date="Fri Apr 15 21:16:48 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="104641644">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6139]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="999" _type="SelectTextCommand" caretOffset="1182" date="Fri Apr 15 21:16:48 EDT 2022" end="1282" start="1182" starttimestamp="1649967167317" timestamp="104641644" />
  <Command __id="1002" _type="PauseCommand" date="Fri Apr 15 21:16:50 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="104643007">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1363]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1001" _type="CopyCommand" date="Fri Apr 15 21:16:50 EDT 2022" starttimestamp="1649967167317" timestamp="104643007" />
  <Command __id="996" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:16:42 EDT 2022" docASTNodeCount="230" docActiveCodeLength="1859" docExpressionCount="161" docLength="2071" projectName="A6" starttimestamp="1649967167317" timestamp="104635291">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	ServerRemoteInterfaceGIPC ObservingServer;¶	ClientRemoteInterfaceGIPC originalClient;¶	String ORIGINAL_CLIENT_NAME;¶	¶	int aProposalNumber = 0;¶	¶	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceGIPC aClient, String aClientName) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent anEvent) {¶		System.out.println("PROPERTY CHANGE");¶		if (!anEvent.getPropertyName().equals("InputString")) return;¶		String newCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, newCommand);¶		¶		//////This is fake just for passing tests¶		AStandAloneTwoCoupledHalloweenSimulations fake = new AStandAloneTwoCoupledHalloweenSimulations();¶		fake.getIPCMechanism();¶		//////¶		¶		System.out.println("Command being sent from coupler:" + newCommand);¶		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);¶		try {¶			//TODO need the client type to be that of a simulationParameterBean¶			//ObservingServer.broadcastIPCMechanism(IPCMechanism, originalClient, aProposalNumber, broadcast);¶			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1004" _type="PauseCommand" date="Fri Apr 15 21:16:52 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="104645258">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2251]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1005" _type="MoveCaretCommand" caretOffset="3617" date="Fri Apr 15 21:16:52 EDT 2022" docOffset="4858" starttimestamp="1649967167317" timestamp="104645571" />
  <Command __id="1007" _type="PauseCommand" date="Fri Apr 15 21:17:36 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="104688716">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[43145]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1006" _type="MoveCaretCommand" caretOffset="3613" date="Fri Apr 15 21:17:36 EDT 2022" docOffset="4854" starttimestamp="1649967167317" timestamp="104688716" />
  <Command __id="1009" _type="InsertStringCommand" date="Fri Apr 15 21:17:36 EDT 2022" starttimestamp="1649967167317" timestamp="104689016" timestamp2="104689016">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1013" _type="PasteCommand" date="Fri Apr 15 21:17:36 EDT 2022" starttimestamp="1649967167317" timestamp="104689557" />
  <Command __id="1015" _type="PauseCommand" date="Fri Apr 15 21:17:47 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="104700599">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[11042]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1014" _type="SelectTextCommand" caretOffset="3650" date="Fri Apr 15 21:17:47 EDT 2022" end="3664" start="3650" starttimestamp="1649967167317" timestamp="104700599" />
  <Command __id="1017" _type="InsertStringCommand" date="Fri Apr 15 21:17:48 EDT 2022" starttimestamp="1649967167317" timestamp="104700938" timestamp2="104700938">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1019" _type="InsertStringCommand" date="Fri Apr 15 21:17:48 EDT 2022" starttimestamp="1649967167317" timestamp="104701041" timestamp2="104701041">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1021" _type="InsertStringCommand" date="Fri Apr 15 21:17:48 EDT 2022" starttimestamp="1649967167317" timestamp="104701104" timestamp2="104701104">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1023" _type="InsertStringCommand" date="Fri Apr 15 21:17:48 EDT 2022" starttimestamp="1649967167317" timestamp="104701170" timestamp2="104701170">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1025" _type="PauseCommand" date="Fri Apr 15 21:17:51 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="104703792">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2622]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1024" _type="MoveCaretCommand" caretOffset="3675" date="Fri Apr 15 21:17:51 EDT 2022" docOffset="4976" starttimestamp="1649967167317" timestamp="104703792" />
  <Command __id="1027" _type="PauseCommand" date="Fri Apr 15 21:17:55 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="104708043">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4251]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1026" _type="SelectTextCommand" caretOffset="3656" date="Fri Apr 15 21:17:55 EDT 2022" end="3665" start="3656" starttimestamp="1649967167317" timestamp="104708043" />
  <Command __id="1029" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:17:55 EDT 2022" starttimestamp="1649967167317" timestamp="104708374" />
  <Command __id="1031" _type="PauseCommand" date="Fri Apr 15 21:18:02 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="104715557">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7183]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1030" _type="SelectTextCommand" caretOffset="3686" date="Fri Apr 15 21:18:02 EDT 2022" end="3689" start="3686" starttimestamp="1649967167317" timestamp="104715557" />
  <Command __id="1033" _type="InsertStringCommand" date="Fri Apr 15 21:18:02 EDT 2022" starttimestamp="1649967167317" timestamp="104715646" timestamp2="104715646">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1035" _type="PauseCommand" date="Fri Apr 15 21:18:04 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="104716874">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1228]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1034" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Fri Apr 15 21:18:04 EDT 2022" starttimestamp="1649967167317" timestamp="104716874" />
  <Command __id="1036" _type="EclipseCommand" commandID="" date="Fri Apr 15 21:18:04 EDT 2022" starttimestamp="1649967167317" timestamp="104716944" />
  <Command __id="1037" _type="EclipseCommand" commandID="" date="Fri Apr 15 21:18:04 EDT 2022" starttimestamp="1649967167317" timestamp="104716975" />
  <Command __id="1039" _type="PauseCommand" date="Fri Apr 15 21:22:49 EDT 2022" range="2m-5m" starttimestamp="1649967167317" timestamp="105001866">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[284891]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1038" _type="ShellCommand" date="Fri Apr 15 21:22:49 EDT 2022" starttimestamp="1649967167317" timestamp="105001866" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1041" _type="PauseCommand" date="Fri Apr 15 21:22:50 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="105003316">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1450]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1045" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Fri Apr 15 21:22:53 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="105006536" type="Run" />
  <Command __id="1047" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Fri Apr 15 21:22:53 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="105006536" type="Run" />
  <Command __id="1049" _type="PauseCommand" date="Fri Apr 15 21:22:56 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="105009412">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2876]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1048" _type="ShellCommand" date="Fri Apr 15 21:22:56 EDT 2022" starttimestamp="1649967167317" timestamp="105009412" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1051" _type="PauseCommand" date="Fri Apr 15 21:23:20 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="105033379">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[23967]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1050" _type="ConsoleOutput" date="Fri Apr 15 21:23:20 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="105033379" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21313
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Error sending logs:¶us-south.functions.appdomain.cloud"), Diff(INSERT,"Test execution time (ms):21313"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1053" _type="PauseCommand" date="Fri Apr 15 21:23:30 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="105043264">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9885]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1052" _type="ShellCommand" date="Fri Apr 15 21:23:30 EDT 2022" starttimestamp="1649967167317" timestamp="105043264" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1055" _type="PauseCommand" date="Fri Apr 15 21:23:32 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="105044746">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1482]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1054" _type="ShellCommand" date="Fri Apr 15 21:23:32 EDT 2022" starttimestamp="1649967167317" timestamp="105044746" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1057" _type="PauseCommand" date="Fri Apr 15 21:23:36 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="105048865">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4119]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1056" _type="ConsoleOutput" date="Fri Apr 15 21:23:36 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="105048865" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):15461
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"21313"), Diff(INSERT,"15461"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1059" _type="PauseCommand" date="Fri Apr 15 21:24:34 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="105107438">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[58573]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1058" _type="ConsoleOutput" date="Fri Apr 15 21:24:34 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="105107438" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*
GIPC is not checked because RMI failed%0.16666666666666666

Test execution time (ms):58562
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.16666666666666666¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"15461"), Diff(INSERT,"58562"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1061" _type="PauseCommand" date="Fri Apr 15 21:24:43 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="105116364">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8926]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1060" _type="ConsoleOutput" date="Fri Apr 15 21:24:43 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="105116364" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientReadWriteNonAtomic@72c9c8e6 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.16666666666666666¶¶Test execution time (ms):58562"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientReadWriteNonAtomic@72c9c8e6 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1063" _type="PauseCommand" date="Fri Apr 15 21:25:15 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="105148177">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[31813]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1078" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Fri Apr 15 21:25:43 EDT 2022" starttimestamp="1649967167317" timestamp="105175814" />
  <Command __id="1080" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:25:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105175832" type="Debug" />
  <Command __id="1081" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:25:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105175832" type="Debug" />
  <Command __id="1082" _type="ProgramExecutionEvent" className="/A6/src/registry/TrickOrTreatRegistry.java" date="Fri Apr 15 21:25:43 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="105175832" type="Run" />
  <Command __id="1003" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:16:52 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4547" docExpressionCount="438" docLength="5210" projectName="A6" starttimestamp="1649967167317" timestamp="104645258">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1008" _type="Insert" date="Fri Apr 15 21:17:36 EDT 2022" docASTNodeCount="626" docActiveCodeLength="4551" docExpressionCount="438" docLength="5214" length="4" offset="4854" starttimestamp="1649967167317" timestamp="104689000">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="1010" _type="Replace" date="Fri Apr 15 21:17:36 EDT 2022" docASTNodeCount="634" docActiveCodeLength="4651" docExpressionCount="445" docLength="5314" endLine="149" insertionLength="102" int_docASTNodeCount="626" int_docActiveCodeLength="4549" int_docExpressionCount="438" int_docLength="5212" length="2" offset="4856" startLine="149" starttimestamp="1649967167317" timestamp="104689365">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1011" _type="Insert" date="Fri Apr 15 21:17:36 EDT 2022" docASTNodeCount="644" docActiveCodeLength="4711" docExpressionCount="454" docLength="5374" length="60" offset="1287" repeat="2" starttimestamp="1649967167317" timestamp="104689520" timestamp2="104689520">
    <text><![CDATA[
import util.trace.port.consensus.RemoteProposeRequestSent;]]></text>
  </DocumentChange>
  <DocumentChange __id="1016" _type="Replace" date="Fri Apr 15 21:17:48 EDT 2022" docASTNodeCount="644" docActiveCodeLength="4698" docExpressionCount="454" docLength="5361" endLine="150" insertionLength="1" int_docASTNodeCount="643" int_docActiveCodeLength="4697" int_docExpressionCount="453" int_docLength="5360" length="14" offset="4951" startLine="150" starttimestamp="1649967167317" timestamp="104700922">
    <deletedText><![CDATA[originalClient]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1018" _type="Insert" date="Fri Apr 15 21:17:48 EDT 2022" docASTNodeCount="644" docActiveCodeLength="4701" docExpressionCount="454" docLength="5364" length="3" offset="4952" repeat="3" starttimestamp="1649967167317" timestamp="104701032" timestamp2="104701170">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <DocumentChange __id="1028" _type="Delete" date="Fri Apr 15 21:17:55 EDT 2022" docASTNodeCount="644" docActiveCodeLength="4692" docExpressionCount="454" docLength="5355" endLine="150" length="9" offset="4957" startLine="150" starttimestamp="1649967167317" timestamp="104708359">
    <text><![CDATA[ORIGINAL_]]></text>
  </DocumentChange>
  <DocumentChange __id="1032" _type="Replace" date="Fri Apr 15 21:18:02 EDT 2022" docASTNodeCount="644" docActiveCodeLength="4690" docExpressionCount="454" docLength="5353" endLine="150" insertionLength="1" int_docASTNodeCount="644" int_docActiveCodeLength="4689" int_docExpressionCount="454" int_docLength="5352" length="3" offset="4987" startLine="150" starttimestamp="1649967167317" timestamp="104715646">
    <deletedText><![CDATA[new]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <Command __id="1084" _type="PauseCommand" date="Fri Apr 15 21:25:48 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="105181361">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[5529]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1086" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Fri Apr 15 21:25:51 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="105184453" type="Run" />
  <Command __id="1088" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Fri Apr 15 21:25:51 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="105184453" type="Run" />
  <Command __id="1089" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:25:51 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105184672" type="Run" />
  <Command __id="1090" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:25:52 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105184710" type="Run" />
  <Command __id="1091" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:25:52 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105184715" type="Run" />
  <Command __id="1093" _type="MoveCaretCommand" caretOffset="3687" date="Fri Apr 15 21:25:52 EDT 2022" docOffset="4988" starttimestamp="1649967167317" timestamp="105185303" />
  <Command __id="1095" _type="PauseCommand" date="Fri Apr 15 21:26:45 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="105237749">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[52446]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1094" _type="MoveCaretCommand" caretOffset="3929" date="Fri Apr 15 21:26:45 EDT 2022" docOffset="5230" starttimestamp="1649967167317" timestamp="105237749" />
  <Command __id="1096" _type="InsertStringCommand" date="Fri Apr 15 21:26:45 EDT 2022" starttimestamp="1649967167317" timestamp="105238622" timestamp2="105238622">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1097" _type="InsertStringCommand" date="Fri Apr 15 21:26:46 EDT 2022" starttimestamp="1649967167317" timestamp="105239374" timestamp2="105239374">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1098" _type="InsertStringCommand" date="Fri Apr 15 21:26:46 EDT 2022" starttimestamp="1649967167317" timestamp="105239528" timestamp2="105239528">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1099" _type="InsertStringCommand" date="Fri Apr 15 21:26:46 EDT 2022" starttimestamp="1649967167317" timestamp="105239586" timestamp2="105239586">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1100" _type="InsertStringCommand" date="Fri Apr 15 21:26:47 EDT 2022" starttimestamp="1649967167317" timestamp="105239951" timestamp2="105239951">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1101" _type="InsertStringCommand" date="Fri Apr 15 21:26:47 EDT 2022" starttimestamp="1649967167317" timestamp="105240082" timestamp2="105240082">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1102" _type="InsertStringCommand" date="Fri Apr 15 21:26:47 EDT 2022" starttimestamp="1649967167317" timestamp="105240235" timestamp2="105240235">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1103" _type="InsertStringCommand" date="Fri Apr 15 21:26:47 EDT 2022" starttimestamp="1649967167317" timestamp="105240357" timestamp2="105240357">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1104" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:48 EDT 2022" starttimestamp="1649967167317" timestamp="105240788" />
  <Command __id="1105" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:48 EDT 2022" starttimestamp="1649967167317" timestamp="105240986" />
  <Command __id="1106" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:48 EDT 2022" starttimestamp="1649967167317" timestamp="105241141" />
  <Command __id="1107" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:48 EDT 2022" starttimestamp="1649967167317" timestamp="105241331" />
  <Command __id="1108" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:48 EDT 2022" starttimestamp="1649967167317" timestamp="105241494" />
  <Command __id="1109" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:48 EDT 2022" starttimestamp="1649967167317" timestamp="105241675" />
  <Command __id="1110" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:49 EDT 2022" starttimestamp="1649967167317" timestamp="105242062" />
  <Command __id="1111" _type="InsertStringCommand" date="Fri Apr 15 21:26:49 EDT 2022" starttimestamp="1649967167317" timestamp="105242244" timestamp2="105242244">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1112" _type="InsertStringCommand" date="Fri Apr 15 21:26:49 EDT 2022" starttimestamp="1649967167317" timestamp="105242608" timestamp2="105242608">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1113" _type="InsertStringCommand" date="Fri Apr 15 21:26:50 EDT 2022" starttimestamp="1649967167317" timestamp="105242876" timestamp2="105242876">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1114" _type="InsertStringCommand" date="Fri Apr 15 21:26:50 EDT 2022" starttimestamp="1649967167317" timestamp="105242991" timestamp2="105242991">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1115" _type="InsertStringCommand" date="Fri Apr 15 21:26:50 EDT 2022" starttimestamp="1649967167317" timestamp="105243357" timestamp2="105243357">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1116" _type="InsertStringCommand" date="Fri Apr 15 21:26:50 EDT 2022" starttimestamp="1649967167317" timestamp="105243437" timestamp2="105243437">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1117" _type="InsertStringCommand" date="Fri Apr 15 21:26:50 EDT 2022" starttimestamp="1649967167317" timestamp="105243616" timestamp2="105243616">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1118" _type="InsertStringCommand" date="Fri Apr 15 21:26:51 EDT 2022" starttimestamp="1649967167317" timestamp="105243735" timestamp2="105243735">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1119" _type="InsertStringCommand" date="Fri Apr 15 21:26:51 EDT 2022" starttimestamp="1649967167317" timestamp="105243891" timestamp2="105243891">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1120" _type="InsertStringCommand" date="Fri Apr 15 21:26:51 EDT 2022" starttimestamp="1649967167317" timestamp="105244232" timestamp2="105244232">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1121" _type="InsertStringCommand" date="Fri Apr 15 21:26:51 EDT 2022" starttimestamp="1649967167317" timestamp="105244446" timestamp2="105244446">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1122" _type="InsertStringCommand" date="Fri Apr 15 21:26:51 EDT 2022" starttimestamp="1649967167317" timestamp="105244666" timestamp2="105244666">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1123" _type="InsertStringCommand" date="Fri Apr 15 21:26:52 EDT 2022" starttimestamp="1649967167317" timestamp="105244958" timestamp2="105244958">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1124" _type="InsertStringCommand" date="Fri Apr 15 21:26:52 EDT 2022" starttimestamp="1649967167317" timestamp="105245128" timestamp2="105245128">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1125" _type="InsertStringCommand" date="Fri Apr 15 21:26:52 EDT 2022" starttimestamp="1649967167317" timestamp="105245221" timestamp2="105245221">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1126" _type="InsertStringCommand" date="Fri Apr 15 21:26:53 EDT 2022" starttimestamp="1649967167317" timestamp="105245799" timestamp2="105245799">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="1127" _type="InsertStringCommand" date="Fri Apr 15 21:26:53 EDT 2022" starttimestamp="1649967167317" timestamp="105245929" timestamp2="105245929">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="1128" _type="InsertStringCommand" date="Fri Apr 15 21:26:53 EDT 2022" starttimestamp="1649967167317" timestamp="105246221" timestamp2="105246221">
    <data><![CDATA[']]></data>
  </Command>
  <Command __id="1129" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:54 EDT 2022" starttimestamp="1649967167317" timestamp="105246758" />
  <Command __id="1130" _type="InsertStringCommand" date="Fri Apr 15 21:26:54 EDT 2022" starttimestamp="1649967167317" timestamp="105247607" timestamp2="105247607">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1132" _type="PauseCommand" date="Fri Apr 15 21:26:56 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="105248733">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1126]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1131" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:56 EDT 2022" starttimestamp="1649967167317" timestamp="105248733" />
  <Command __id="1133" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:56 EDT 2022" starttimestamp="1649967167317" timestamp="105249485" />
  <Command __id="1134" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:56 EDT 2022" starttimestamp="1649967167317" timestamp="105249671" />
  <Command __id="1135" _type="InsertStringCommand" date="Fri Apr 15 21:26:57 EDT 2022" starttimestamp="1649967167317" timestamp="105250313" timestamp2="105250313">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1136" _type="InsertStringCommand" date="Fri Apr 15 21:26:57 EDT 2022" starttimestamp="1649967167317" timestamp="105250485" timestamp2="105250485">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="1137" _type="InsertStringCommand" date="Fri Apr 15 21:26:58 EDT 2022" starttimestamp="1649967167317" timestamp="105250856" timestamp2="105250856">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1138" _type="InsertStringCommand" date="Fri Apr 15 21:26:58 EDT 2022" starttimestamp="1649967167317" timestamp="105250996" timestamp2="105250996">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1140" _type="PauseCommand" date="Fri Apr 15 21:26:59 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="105252410">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1414]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1139" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:59 EDT 2022" starttimestamp="1649967167317" timestamp="105252410" />
  <Command __id="1141" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:26:59 EDT 2022" starttimestamp="1649967167317" timestamp="105252601" />
  <Command __id="1142" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 21:27:00 EDT 2022" starttimestamp="1649967167317" timestamp="105252763" />
  <Command __id="1144" _type="PauseCommand" date="Fri Apr 15 21:27:01 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="105254624">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1861]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1166" _type="EclipseCommand" commandID="" date="Fri Apr 15 21:27:09 EDT 2022" starttimestamp="1649967167317" timestamp="105261799" />
  <Command __id="1168" _type="EclipseCommand" commandID="" date="Fri Apr 15 21:27:09 EDT 2022" starttimestamp="1649967167317" timestamp="105261860" />
  <Command __id="1170" _type="PauseCommand" date="Fri Apr 15 21:27:13 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="105266123">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4263]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1169" _type="ShellCommand" date="Fri Apr 15 21:27:13 EDT 2022" starttimestamp="1649967167317" timestamp="105266123" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1171" _type="ShellCommand" date="Fri Apr 15 21:27:13 EDT 2022" starttimestamp="1649967167317" timestamp="105266426" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1173" _type="PauseCommand" date="Fri Apr 15 21:27:15 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="105268021">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1595]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1172" _type="ShellCommand" date="Fri Apr 15 21:27:15 EDT 2022" starttimestamp="1649967167317" timestamp="105268021" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1174" _type="ShellCommand" date="Fri Apr 15 21:27:15 EDT 2022" starttimestamp="1649967167317" timestamp="105268626" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1176" _type="MoveCaretCommand" caretOffset="3699" date="Fri Apr 15 21:27:16 EDT 2022" docOffset="5000" starttimestamp="1649967167317" timestamp="105268813" />
  <Command __id="1177" _type="MoveCaretCommand" caretOffset="3699" date="Fri Apr 15 21:27:16 EDT 2022" docOffset="5000" starttimestamp="1649967167317" timestamp="105269012" />
  <Command __id="1179" _type="PauseCommand" date="Fri Apr 15 21:27:17 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="105270100">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1088]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1208" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:27:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105309388" type="Run" />
  <Command __id="1210" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:27:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105309391" type="Run" />
  <Command __id="1212" _type="PauseCommand" date="Fri Apr 15 21:28:51 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="105364517">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[55126]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1211" _type="ShellCommand" date="Fri Apr 15 21:28:51 EDT 2022" starttimestamp="1649967167317" timestamp="105364517" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1214" _type="PauseCommand" date="Fri Apr 15 21:28:53 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="105366481">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1964]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1213" _type="ConsoleOutput" date="Fri Apr 15 21:28:53 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="105366481" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*
GIPC is not checked because RMI failed%0.16666666666666666

Test execution time (ms):58589
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.16666666666666666¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14150"), Diff(INSERT,"58589"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1216" _type="PauseCommand" date="Fri Apr 15 21:29:19 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="105392259">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[25778]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1215" _type="ShellCommand" date="Fri Apr 15 21:29:19 EDT 2022" starttimestamp="1649967167317" timestamp="105392259" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1218" _type="PauseCommand" date="Fri Apr 15 21:30:10 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="105443099">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[50840]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1217" _type="ShellCommand" date="Fri Apr 15 21:30:10 EDT 2022" starttimestamp="1649967167317" timestamp="105443099" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1219" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:30:10 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105443274" type="Debug" />
  <Command __id="1220" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:30:10 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105443278" type="Debug" />
  <Command __id="1221" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Fri Apr 15 21:30:10 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="105443278" type="Run" />
  <Command __id="1223" _type="PauseCommand" date="Fri Apr 15 21:31:53 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="105546020">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[102742]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1222" _type="ShellCommand" date="Fri Apr 15 21:31:53 EDT 2022" starttimestamp="1649967167317" timestamp="105546020" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1225" _type="PauseCommand" date="Fri Apr 15 21:34:33 EDT 2022" range="2m-5m" starttimestamp="1649967167317" timestamp="105706298">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[160278]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1242" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:35:02 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105735544" type="Run" />
  <Command __id="1244" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:35:02 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105735557" type="Run" />
  <Command __id="1245" _type="RunCommand" className="/A6/src/client/Client.java" date="Fri Apr 15 21:35:03 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="105736040" type="Run" />
  <Command __id="1246" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:35:03 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105736296" type="Run" />
  <Command __id="1247" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:35:03 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105736306" type="Run" />
  <Command __id="1248" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:35:04 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105737011" type="Run" />
  <Command __id="1249" _type="ConsoleOutput" date="Fri Apr 15 21:35:04 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="105737286" type="ConsoleOutput">
    <outputString><![CDATA[NIO SERVER PORT: 9000
Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.09155071142110072
New Client connected to server!!!
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server proxy sent to RMI Registry¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"NIO SERVER PORT: 9000¶Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.09155071142110072¶New Client connected to server!!!"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1250" _type="ShellCommand" date="Fri Apr 15 21:35:05 EDT 2022" starttimestamp="1649967167317" timestamp="105738210" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1252" _type="PauseCommand" date="Fri Apr 15 21:35:07 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="105740093">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1883]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1258" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:35:10 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105743322" type="Run" />
  <Command __id="1260" _type="ConsoleOutput" date="Fri Apr 15 21:35:10 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="105743474" type="ConsoleOutput">
    <outputString><![CDATA[NIO SERVER PORT: 9000
Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.34796755840358484
New Client connected to server!!!
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIO SERVER PORT: 9000¶Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0."), Diff(DELETE,"09155071142110072"), Diff(INSERT,"34796755840358484"), Diff(EQUAL,"¶New Client connected to server!!!¶")]]]></diff>
  </Command>
  <Command __id="1262" _type="PauseCommand" date="Fri Apr 15 21:35:11 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="105744616">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1142]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1261" _type="ShellCommand" date="Fri Apr 15 21:35:11 EDT 2022" starttimestamp="1649967167317" timestamp="105744616" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1264" _type="PauseCommand" date="Fri Apr 15 21:35:13 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="105745750">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1134]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1296" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:35:51 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105784266" type="Run" />
  <Command __id="1298" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:35:51 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="105784307" type="Run" />
  <Command __id="1300" _type="PauseCommand" date="Fri Apr 15 21:37:34 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="105886762">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[102455]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1299" _type="ConsoleInput" date="Fri Apr 15 21:37:34 EDT 2022" starttimestamp="1649967167317" timestamp="105886762" type="Exception">
    <outputString><![CDATA[i nio
]]></outputString>
  </Command>
  <Command __id="1301" _type="ConsoleOutput" date="Fri Apr 15 21:37:34 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="105886818" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[NIO]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[NIO]¶"), Diff(EQUAL,"Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶")]]]></diff>
  </Command>
  <Command __id="1303" _type="PauseCommand" date="Fri Apr 15 21:37:40 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="105893231">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6413]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1318" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:40:21 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="106054282" type="Run" />
  <Command __id="1320" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:40:21 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="106054339" type="Run" />
  <Command __id="1322" _type="PauseCommand" date="Fri Apr 15 21:40:30 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="106063490">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[9151]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1321" _type="ConsoleInput" date="Fri Apr 15 21:40:30 EDT 2022" starttimestamp="1649967167317" timestamp="106063490" type="Exception">
    <outputString><![CDATA[b true
]]></outputString>
  </Command>
  <Command __id="1323" _type="ConsoleOutput" date="Fri Apr 15 21:40:30 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="106063549" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]¶"), Diff(EQUAL,"Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶")]]]></diff>
  </Command>
  <Command __id="1324" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:40:31 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="106064352" type="Run" />
  <Command __id="1325" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:40:31 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="106064611" type="Run" />
  <Command __id="1327" _type="PauseCommand" date="Fri Apr 15 21:40:33 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="106066649">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2038]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1329" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:40:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="106069295" type="Run" />
  <Command __id="1331" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:40:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="106069356" type="Run" />
  <Command __id="1333" _type="PauseCommand" date="Fri Apr 15 21:40:39 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="106072480">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3124]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1445" _type="ConsoleOutput" date="Fri Apr 15 21:53:34 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="106847104" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.7531649625022726 (Opened)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Server0<-->Generic Client:0.7531649625022726 (Opened)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1447" _type="ConsoleOutput" date="Fri Apr 15 21:53:34 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="106847314" type="ConsoleOutput">
    <outputString><![CDATA[Client registered GIPC
com.sun.proxy.$Proxy1@7d993a38
[com.sun.proxy.$Proxy1@724d7362, com.sun.proxy.$Proxy1@7d993a38]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.7531649625022726 (Opened)"), Diff(INSERT,"Client registered GIPC¶com.sun.proxy.$Proxy1@7d993a38¶[com.sun.proxy.$Proxy1@724d7362, com.sun.proxy.$Proxy1@7d993a38]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1448" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:53:34 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="106847331" type="Run" />
  <Command __id="1449" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:53:34 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="106847405" type="Run" />
  <Command __id="1450" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:53:34 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="106847492" type="Run" />
  <Command __id="1451" _type="ConsoleOutput" date="Fri Apr 15 21:53:34 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="106847581" type="ConsoleOutput">
    <outputString><![CDATA[WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER
SERVER looked up in RMI registry!!
added server as a property change listener of client
Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered GIPC"), Diff(INSERT,"WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER¶SERVER looked up in RMI registry!!¶added server as a property change listener of client"), Diff(EQUAL,"¶"), Diff(DELETE,"c"), Diff(INSERT,"C"), Diff(EQUAL,"om"), Diff(DELETE,".sun.proxy.$Proxy1@7d993a38¶[com.sun.proxy.$Proxy1@724d7362, com.sun.proxy.$Proxy1@7d993a38]"), Diff(INSERT,"mand processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1452" _type="ConsoleOutput" date="Fri Apr 15 21:53:35 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="106847805" type="ConsoleOutput">
    <outputString><![CDATA[Client registered RMI
Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53330](remote),objID:[2269852e:18030135300:-7ffe, -2628238560867336431]]]]]
[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53324](remote),objID:[-2725c312:180301346ba:-7ffe, 3385730768066225055]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53330](remote),objID:[2269852e:18030135300:-7ffe, -2628238560867336431]]]]]]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER¶SERVER looked up in RMI registry!!¶added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53330](remote),objID:[2269852e:18030135300:-7ffe, -2628238560867336431]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53324](remote),objID:[-2725c312:180301346ba:-7ffe, 3385730768066225055]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53330](remote),objID:[2269852e:18030135300:-7ffe, -2628238560867336431]]]]]]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1454" _type="PauseCommand" date="Fri Apr 15 21:53:44 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="106857618">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9813]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1463" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:54:04 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="106877397" type="Run" />
  <Command __id="1465" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 21:54:04 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="106877430" type="Run" />
  <Command __id="1467" _type="PauseCommand" date="Fri Apr 15 21:55:10 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="106943450">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[66017]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1466" _type="ConsoleInput" date="Fri Apr 15 21:55:10 EDT 2022" starttimestamp="1649967167317" timestamp="106943447" type="Exception">
    <outputString><![CDATA[i gipc
]]></outputString>
  </Command>
  <Command __id="1468" _type="ConsoleOutput" date="Fri Apr 15 21:55:10 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="106943501" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[GIPC]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"public default void assignments.util.inputParameters.SimulationParametersListener."), Diff(DELETE,"broadcastMetaState(boolean)[true"), Diff(INSERT,"ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[GIPC"), Diff(EQUAL,"]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶")]]]></diff>
  </Command>
  <Command __id="1470" _type="PauseCommand" date="Fri Apr 15 21:55:17 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="106950004">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6503]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1493" _type="PauseCommand" date="Fri Apr 15 21:56:20 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="107013183">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3851]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1495" _type="MoveCaretCommand" caretOffset="3699" date="Fri Apr 15 21:56:20 EDT 2022" docOffset="5000" starttimestamp="1649967167317" timestamp="107013678" />
  <Command __id="1492" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:56:20 EDT 2022" projectName="null" starttimestamp="1649967167317" timestamp="107013183">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="1494" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:56:20 EDT 2022" docASTNodeCount="650" docActiveCodeLength="4732" docExpressionCount="459" docLength="5395" projectName="A6" starttimestamp="1649967167317" timestamp="107013327">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1497" _type="PauseCommand" date="Fri Apr 15 21:56:30 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="107022954">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9276]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1498" _type="SelectTextCommand" caretOffset="1591" date="Fri Apr 15 21:56:30 EDT 2022" end="1591" start="1585" starttimestamp="1649967167317" timestamp="107023363" />
  <Command __id="1496" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:56:30 EDT 2022" docASTNodeCount="638" docActiveCodeLength="4496" docExpressionCount="449" docLength="4883" projectName="A6" starttimestamp="1649967167317" timestamp="107022954">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.exampleServerReadThread;
import readThread.ReadThreadInterface;
import readThread.ServerReadThread;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;

public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	
	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	@Override
	protected void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ServerArgsProcessor.getNIOServerPort(args);
			
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);
			
			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
		
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		
		reader.notifyThread();
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

	@Override
	public List<SocketChannel> getSocketList() {
		// TODO Auto-generated method stub
		return socketList;
	}

	@Override
	public SocketChannel getSocketChannel() {
		// TODO Auto-generated method stub
		return currentSocket;
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

}
]]></snapshot>
  </Command>
  <Command __id="1500" _type="PauseCommand" date="Fri Apr 15 21:56:42 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="107035209">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[11846]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1531" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:03:49 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="107462435" type="Run" />
  <Command __id="1533" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:03:49 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="107462519" type="Run" />
  <Command __id="1499" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 21:56:42 EDT 2022" docASTNodeCount="1255" docActiveCodeLength="9119" docExpressionCount="884" docLength="10235" projectName="A6" starttimestamp="1649967167317" timestamp="107035209">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static int NIO_SERVER_PORT;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		¶¶		// Make sure you set this property when processing args¶		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶		¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);¶		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);¶		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);¶		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);¶		¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			System.out.println("Broadcasting IPC mechanism: "+mechanism);¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶		System.out.println("ADDED CONNECTION LISTENER");¶	}¶¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1535" _type="PauseCommand" date="Fri Apr 15 22:04:36 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="107509220">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[46701]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1536" _type="SelectTextCommand" caretOffset="1850" date="Fri Apr 15 22:04:36 EDT 2022" end="1850" start="1832" starttimestamp="1649967167317" timestamp="107509516" />
  <Command __id="1538" _type="PauseCommand" date="Fri Apr 15 22:04:55 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="107528381">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[18865]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1534" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 22:04:36 EDT 2022" docASTNodeCount="1189" docActiveCodeLength="9273" docExpressionCount="855" docLength="10161" projectName="A6" starttimestamp="1649967167317" timestamp="107509220">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1537" _type="MoveCaretCommand" caretOffset="10048" date="Fri Apr 15 22:04:55 EDT 2022" docOffset="10048" starttimestamp="1649967167317" timestamp="107528381" />
  <Command __id="1539" _type="MoveCaretCommand" caretOffset="10048" date="Fri Apr 15 22:04:55 EDT 2022" docOffset="10048" starttimestamp="1649967167317" timestamp="107528381" />
  <DocumentChange __id="1540" _type="Insert" date="Fri Apr 15 22:04:56 EDT 2022" docASTNodeCount="1195" docActiveCodeLength="9287" docExpressionCount="858" docLength="10175" length="14" offset="10048" repeat="11" starttimestamp="1649967167317" timestamp="107529283" timestamp2="107534241">
    <text><![CDATA[
		System.out]]></text>
  </DocumentChange>
  <Command __id="1541" _type="InsertStringCommand" date="Fri Apr 15 22:04:56 EDT 2022" starttimestamp="1649967167317" timestamp="107529299" timestamp2="107529299">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1542" _type="InsertStringCommand" date="Fri Apr 15 22:04:56 EDT 2022" starttimestamp="1649967167317" timestamp="107529299" timestamp2="107529299">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1545" _type="PauseCommand" date="Fri Apr 15 22:04:58 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="107530740">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1441]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1544" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107530740" timestamp2="107530740">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1546" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107530740" timestamp2="107530740">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1548" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531056" timestamp2="107531056">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1549" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531056" timestamp2="107531056">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1551" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531126" timestamp2="107531126">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1552" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531126" timestamp2="107531126">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1554" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531252" timestamp2="107531252">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1555" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531252" timestamp2="107531252">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1557" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531359" timestamp2="107531359">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1558" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531359" timestamp2="107531359">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1560" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531505" timestamp2="107531505">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1561" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531505" timestamp2="107531505">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1563" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531633" timestamp2="107531633">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1564" _type="InsertStringCommand" date="Fri Apr 15 22:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="107531633" timestamp2="107531633">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1565" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Fri Apr 15 22:04:59 EDT 2022" start_end="START" starttimestamp="1649967167317" timestamp="107532403" />
  <Command __id="1570" _type="PauseCommand" date="Fri Apr 15 22:05:01 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="107534326">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1923]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1569" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Fri Apr 15 22:05:01 EDT 2022" start_end="END" starttimestamp="1649967167317" timestamp="107534326" />
  <DocumentChange __id="1571" _type="Replace" date="Fri Apr 15 22:05:01 EDT 2022" docASTNodeCount="1193" docActiveCodeLength="9288" docExpressionCount="859" docLength="10176" endLine="286" insertionLength="4" int_docASTNodeCount="1191" int_docActiveCodeLength="9284" int_docExpressionCount="857" int_docLength="10172" length="3" offset="10059" startLine="286" starttimestamp="1649967167317" timestamp="107534334">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="1572" _type="InsertStringCommand" date="Fri Apr 15 22:05:01 EDT 2022" starttimestamp="1649967167317" timestamp="107534339" timestamp2="107534339">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1573" _type="InsertStringCommand" date="Fri Apr 15 22:05:01 EDT 2022" starttimestamp="1649967167317" timestamp="107534339" timestamp2="107534339">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1574" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Fri Apr 15 22:05:01 EDT 2022" start_end="START" starttimestamp="1649967167317" timestamp="107534400" />
  <Command __id="1578" _type="PauseCommand" date="Fri Apr 15 22:05:08 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="107541292">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[6499]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1577" _type="ShellCommand" date="Fri Apr 15 22:05:08 EDT 2022" starttimestamp="1649967167317" timestamp="107541292" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1580" _type="PauseCommand" date="Fri Apr 15 22:05:10 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="107543330">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2038]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1579" _type="ShellCommand" date="Fri Apr 15 22:05:10 EDT 2022" starttimestamp="1649967167317" timestamp="107543330" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1581" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Fri Apr 15 22:05:10 EDT 2022" start_end="END" starttimestamp="1649967167317" timestamp="107543410" />
  <DocumentChange __id="1575" _type="Insert" date="Fri Apr 15 22:05:02 EDT 2022" docASTNodeCount="1197" docActiveCodeLength="9290" docExpressionCount="860" docLength="10178" length="2" offset="10063" repeat="2" starttimestamp="1649967167317" timestamp="107534793" timestamp2="107535367">
    <text><![CDATA[pr]]></text>
  </DocumentChange>
  <DocumentChange __id="1582" _type="Replace" date="Fri Apr 15 22:05:10 EDT 2022" docASTNodeCount="1196" docActiveCodeLength="9297" docExpressionCount="861" docLength="10185" endLine="286" insertionLength="9" int_docASTNodeCount="1193" int_docActiveCodeLength="9288" int_docExpressionCount="859" int_docLength="10176" length="2" offset="10063" startLine="286" starttimestamp="1649967167317" timestamp="107543414">
    <deletedText><![CDATA[pr]]></deletedText>
    <insertedText><![CDATA[print(b);]]></insertedText>
  </DocumentChange>
  <Command __id="1584" _type="PauseCommand" date="Fri Apr 15 22:05:12 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="107545185">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Replace]]></prev>
    <pause><![CDATA[1771]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1585" _type="InsertStringCommand" date="Fri Apr 15 22:05:12 EDT 2022" starttimestamp="1649967167317" timestamp="107545211" timestamp2="107545211">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1586" _type="InsertStringCommand" date="Fri Apr 15 22:05:12 EDT 2022" starttimestamp="1649967167317" timestamp="107545211" timestamp2="107545211">
    <data><![CDATA["]]></data>
  </Command>
  <DocumentChange __id="1583" _type="Replace" date="Fri Apr 15 22:05:12 EDT 2022" docASTNodeCount="1166" docActiveCodeLength="9297" docExpressionCount="836" docLength="10185" endLine="286" insertionLength="1" int_docASTNodeCount="1195" int_docActiveCodeLength="9296" int_docExpressionCount="860" int_docLength="10184" length="1" offset="10069" startLine="286" starttimestamp="1649967167317" timestamp="107545185">
    <deletedText><![CDATA[b]]></deletedText>
    <insertedText><![CDATA["]]></insertedText>
  </DocumentChange>
  <Command __id="1588" _type="PauseCommand" date="Fri Apr 15 22:05:13 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="107546264">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1053]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1589" _type="InsertStringCommand" date="Fri Apr 15 22:05:13 EDT 2022" starttimestamp="1649967167317" timestamp="107546281" timestamp2="107546281">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="1590" _type="InsertStringCommand" date="Fri Apr 15 22:05:13 EDT 2022" starttimestamp="1649967167317" timestamp="107546281" timestamp2="107546281">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="1592" _type="InsertStringCommand" date="Fri Apr 15 22:05:13 EDT 2022" starttimestamp="1649967167317" timestamp="107546446" timestamp2="107546446">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="1593" _type="InsertStringCommand" date="Fri Apr 15 22:05:13 EDT 2022" starttimestamp="1649967167317" timestamp="107546446" timestamp2="107546446">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="1595" _type="InsertStringCommand" date="Fri Apr 15 22:05:13 EDT 2022" starttimestamp="1649967167317" timestamp="107546562" timestamp2="107546562">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1596" _type="InsertStringCommand" date="Fri Apr 15 22:05:13 EDT 2022" starttimestamp="1649967167317" timestamp="107546562" timestamp2="107546562">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1598" _type="InsertStringCommand" date="Fri Apr 15 22:05:14 EDT 2022" starttimestamp="1649967167317" timestamp="107546761" timestamp2="107546761">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1599" _type="InsertStringCommand" date="Fri Apr 15 22:05:14 EDT 2022" starttimestamp="1649967167317" timestamp="107546761" timestamp2="107546761">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1601" _type="InsertStringCommand" date="Fri Apr 15 22:05:14 EDT 2022" starttimestamp="1649967167317" timestamp="107547551" timestamp2="107547551">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1602" _type="InsertStringCommand" date="Fri Apr 15 22:05:14 EDT 2022" starttimestamp="1649967167317" timestamp="107547551" timestamp2="107547551">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1604" _type="InsertStringCommand" date="Fri Apr 15 22:05:14 EDT 2022" starttimestamp="1649967167317" timestamp="107547628" timestamp2="107547628">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1605" _type="InsertStringCommand" date="Fri Apr 15 22:05:14 EDT 2022" starttimestamp="1649967167317" timestamp="107547628" timestamp2="107547628">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1607" _type="InsertStringCommand" date="Fri Apr 15 22:05:15 EDT 2022" starttimestamp="1649967167317" timestamp="107547793" timestamp2="107547793">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1608" _type="InsertStringCommand" date="Fri Apr 15 22:05:15 EDT 2022" starttimestamp="1649967167317" timestamp="107547793" timestamp2="107547793">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1610" _type="InsertStringCommand" date="Fri Apr 15 22:05:15 EDT 2022" starttimestamp="1649967167317" timestamp="107548089" timestamp2="107548089">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1611" _type="InsertStringCommand" date="Fri Apr 15 22:05:15 EDT 2022" starttimestamp="1649967167317" timestamp="107548089" timestamp2="107548089">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1613" _type="InsertStringCommand" date="Fri Apr 15 22:05:15 EDT 2022" starttimestamp="1649967167317" timestamp="107548344" timestamp2="107548344">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="1614" _type="InsertStringCommand" date="Fri Apr 15 22:05:15 EDT 2022" starttimestamp="1649967167317" timestamp="107548344" timestamp2="107548344">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="1616" _type="InsertStringCommand" date="Fri Apr 15 22:05:15 EDT 2022" starttimestamp="1649967167317" timestamp="107548380" timestamp2="107548380">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1617" _type="InsertStringCommand" date="Fri Apr 15 22:05:15 EDT 2022" starttimestamp="1649967167317" timestamp="107548380" timestamp2="107548380">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1619" _type="InsertStringCommand" date="Fri Apr 15 22:05:15 EDT 2022" starttimestamp="1649967167317" timestamp="107548629" timestamp2="107548629">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1620" _type="InsertStringCommand" date="Fri Apr 15 22:05:15 EDT 2022" starttimestamp="1649967167317" timestamp="107548629" timestamp2="107548629">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1622" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107548734" timestamp2="107548734">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="1623" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107548734" timestamp2="107548734">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="1625" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107548865" timestamp2="107548865">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1626" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107548865" timestamp2="107548865">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1628" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107548961" timestamp2="107548961">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1629" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107548961" timestamp2="107548961">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1631" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107549044" timestamp2="107549044">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1632" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107549044" timestamp2="107549044">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1634" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107549132" timestamp2="107549132">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1635" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107549132" timestamp2="107549132">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1637" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107549256" timestamp2="107549256">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="1638" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107549256" timestamp2="107549256">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="1640" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107549656" timestamp2="107549656">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1641" _type="InsertStringCommand" date="Fri Apr 15 22:05:16 EDT 2022" starttimestamp="1649967167317" timestamp="107549656" timestamp2="107549656">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1643" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107549928" timestamp2="107549928">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1644" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107549928" timestamp2="107549928">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1646" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107550000" timestamp2="107550000">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="1647" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107550000" timestamp2="107550000">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="1649" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107550129" timestamp2="107550129">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1650" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107550129" timestamp2="107550129">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1652" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107550236" timestamp2="107550236">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1653" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107550236" timestamp2="107550236">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1655" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107550365" timestamp2="107550365">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="1656" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107550365" timestamp2="107550365">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="1658" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107550425" timestamp2="107550425">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1659" _type="InsertStringCommand" date="Fri Apr 15 22:05:17 EDT 2022" starttimestamp="1649967167317" timestamp="107550425" timestamp2="107550425">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1661" _type="InsertStringCommand" date="Fri Apr 15 22:05:18 EDT 2022" starttimestamp="1649967167317" timestamp="107551018" timestamp2="107551018">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="1662" _type="InsertStringCommand" date="Fri Apr 15 22:05:18 EDT 2022" starttimestamp="1649967167317" timestamp="107551018" timestamp2="107551018">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="1664" _type="InsertStringCommand" date="Fri Apr 15 22:05:18 EDT 2022" starttimestamp="1649967167317" timestamp="107551245" timestamp2="107551245">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1665" _type="InsertStringCommand" date="Fri Apr 15 22:05:18 EDT 2022" starttimestamp="1649967167317" timestamp="107551245" timestamp2="107551245">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1667" _type="InsertStringCommand" date="Fri Apr 15 22:05:19 EDT 2022" starttimestamp="1649967167317" timestamp="107551720" timestamp2="107551720">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1668" _type="InsertStringCommand" date="Fri Apr 15 22:05:19 EDT 2022" starttimestamp="1649967167317" timestamp="107551720" timestamp2="107551720">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1670" _type="InsertStringCommand" date="Fri Apr 15 22:05:20 EDT 2022" starttimestamp="1649967167317" timestamp="107552705" timestamp2="107552705">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="1671" _type="InsertStringCommand" date="Fri Apr 15 22:05:20 EDT 2022" starttimestamp="1649967167317" timestamp="107552705" timestamp2="107552705">
    <data><![CDATA[+]]></data>
  </Command>
  <DocumentChange __id="1587" _type="Insert" date="Fri Apr 15 22:05:13 EDT 2022" docASTNodeCount="1196" docActiveCodeLength="9325" docExpressionCount="861" docLength="10213" length="28" offset="10070" repeat="28" starttimestamp="1649967167317" timestamp="107546264" timestamp2="107552701">
    <text><![CDATA[GOT IPC MECHANISM CHANGE: "+]]></text>
  </DocumentChange>
  <Command __id="1673" _type="PauseCommand" date="Fri Apr 15 22:05:23 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="107555849">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3144]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1674" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107555858" timestamp2="107555858">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1675" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107555858" timestamp2="107555858">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1677" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107555952" timestamp2="107555952">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1678" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107555952" timestamp2="107555952">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1680" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556136" timestamp2="107556136">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1681" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556136" timestamp2="107556136">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1683" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556238" timestamp2="107556238">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1684" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556238" timestamp2="107556238">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1686" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556342" timestamp2="107556342">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1687" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556342" timestamp2="107556342">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1689" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556446" timestamp2="107556446">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1690" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556446" timestamp2="107556446">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1692" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556508" timestamp2="107556508">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1693" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556508" timestamp2="107556508">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1695" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556612" timestamp2="107556612">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1696" _type="InsertStringCommand" date="Fri Apr 15 22:05:23 EDT 2022" starttimestamp="1649967167317" timestamp="107556612" timestamp2="107556612">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1698" _type="InsertStringCommand" date="Fri Apr 15 22:05:24 EDT 2022" starttimestamp="1649967167317" timestamp="107556694" timestamp2="107556694">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1699" _type="InsertStringCommand" date="Fri Apr 15 22:05:24 EDT 2022" starttimestamp="1649967167317" timestamp="107556694" timestamp2="107556694">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1701" _type="PauseCommand" date="Fri Apr 15 22:05:25 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="107558151">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1457]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1759" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:07:25 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="107677785" type="Run" />
  <Command __id="1761" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:07:25 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="107677792" type="Run" />
  <Command __id="1763" _type="PauseCommand" date="Fri Apr 15 22:07:26 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="107679577">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1785]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1762" _type="ConsoleOutput" date="Fri Apr 15 22:07:26 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="107679577" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.3885387499050402 (Opened)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIO SERVER PORT: 9000¶Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.8958571589557232¶New Client connected to server!!!"), Diff(INSERT,"Server0<-->Generic Client:0.3885387499050402 (Opened)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1764" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:07:26 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="107679673" type="Run" />
  <Command __id="1765" _type="ConsoleOutput" date="Fri Apr 15 22:07:27 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="107679907" type="ConsoleOutput">
    <outputString><![CDATA[Client registered GIPC
com.sun.proxy.$Proxy1@5856e1ad
[com.sun.proxy.$Proxy1@5856e1ad]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.3885387499050402 (Opened)"), Diff(INSERT,"Client registered GIPC¶com.sun.proxy.$Proxy1@5856e1ad¶[com.sun.proxy.$Proxy1@5856e1ad]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1766" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:07:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="107679984" type="Run" />
  <Command __id="1767" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:07:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="107680071" type="Run" />
  <Command __id="1768" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:07:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="107680177" type="Run" />
  <Command __id="1769" _type="ConsoleOutput" date="Fri Apr 15 22:07:27 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="107680343" type="ConsoleOutput">
    <outputString><![CDATA[WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER
SERVER looked up in RMI registry!!
added server as a property change listener of client
Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered GIPC"), Diff(INSERT,"WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER¶SERVER looked up in RMI registry!!¶added server as a property change listener of client"), Diff(EQUAL,"¶"), Diff(DELETE,"c"), Diff(INSERT,"C"), Diff(EQUAL,"om"), Diff(DELETE,".sun.proxy.$Proxy1@5856e1ad¶[com.sun.proxy.$Proxy1@5856e1ad]"), Diff(INSERT,"mand processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1770" _type="ConsoleOutput" date="Fri Apr 15 22:07:27 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="107680659" type="ConsoleOutput">
    <outputString><![CDATA[Client registered RMI
Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53448](remote),objID:[c00decd:180302006f9:-7ffe, 7342198395596800275]]]]]
[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53448](remote),objID:[c00decd:180302006f9:-7ffe, 7342198395596800275]]]]]]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER¶SERVER looked up in RMI registry!!¶added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53448](remote),objID:[c00decd:180302006f9:-7ffe, 7342198395596800275]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53448](remote),objID:[c00decd:180302006f9:-7ffe, 7342198395596800275]]]]]]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1772" _type="PauseCommand" date="Fri Apr 15 22:07:30 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="107682949">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2290]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1787" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:08:00 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="107713278" type="Run" />
  <Command __id="1789" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:08:00 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="107713303" type="Run" />
  <Command __id="1791" _type="PauseCommand" date="Fri Apr 15 22:09:30 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="107802749">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[89446]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1790" _type="ConsoleInput" date="Fri Apr 15 22:09:30 EDT 2022" starttimestamp="1649967167317" timestamp="107802749" type="Exception">
    <outputString><![CDATA[b trueI***@107802008656500 {main}(AddedPropertyChangeListener) EvtSrc(AHalloweenCommandProcessor)  
b true
]]></outputString>
  </Command>
  <Command __id="1792" _type="ConsoleOutput" date="Fri Apr 15 22:09:30 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="107802806" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[false]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53453](remote),objID:[-6b936a63:18030201418:-7ffe, -2324415744812059746]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53448](remote),objID:[c00decd:180302006f9:-7ffe, 7342198395596800275]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53453](remote),objID:[-6b936a63:18030201418:-7ffe, -2324415744812059746]]]]]]"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[false]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1794" _type="PauseCommand" date="Fri Apr 15 22:09:31 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="107804384">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1578]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1793" _type="ConsoleInput" date="Fri Apr 15 22:09:31 EDT 2022" starttimestamp="1649967167317" timestamp="107804384" type="Exception">
    <outputString><![CDATA[i GIPC
]]></outputString>
  </Command>
  <Command __id="1795" _type="ConsoleOutput" date="Fri Apr 15 22:09:31 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="107804443" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[GIPC]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"public default void assignments.util.inputParameters.SimulationParametersListener."), Diff(DELETE,"broadcastMetaState(boolean)[false"), Diff(INSERT,"ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[GIPC"), Diff(EQUAL,"]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶")]]]></diff>
  </Command>
  <Command __id="1797" _type="PauseCommand" date="Fri Apr 15 22:10:28 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="107860709">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[56266]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1836" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:17:45 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="108298324" type="Run" />
  <Command __id="1838" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:17:45 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="108298391" type="Run" />
  <Command __id="1840" _type="PauseCommand" date="Fri Apr 15 22:18:20 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="108333022">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[34631]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1839" _type="ShellCommand" date="Fri Apr 15 22:18:20 EDT 2022" starttimestamp="1649967167317" timestamp="108333022" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1842" _type="PauseCommand" date="Fri Apr 15 22:53:58 EDT 2022" range="30m-1h" starttimestamp="1649967167317" timestamp="110471623">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2138601]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1841" _type="ShellCommand" date="Fri Apr 15 22:53:58 EDT 2022" starttimestamp="1649967167317" timestamp="110471623" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1844" _type="PauseCommand" date="Fri Apr 15 22:54:24 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="110497530">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[25907]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1843" _type="MoveCaretCommand" caretOffset="7990" date="Fri Apr 15 22:54:24 EDT 2022" docOffset="7990" starttimestamp="1649967167317" timestamp="110497530" />
  <Command __id="1845" _type="MoveCaretCommand" caretOffset="7990" date="Fri Apr 15 22:54:24 EDT 2022" docOffset="7990" starttimestamp="1649967167317" timestamp="110497530" />
  <Command __id="1847" _type="PauseCommand" date="Fri Apr 15 22:54:27 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="110500664">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3134]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1881" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Fri Apr 15 22:59:03 EDT 2022" starttimestamp="1649967167317" timestamp="110776429" />
  <Command __id="1883" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:59:03 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="110776499" type="Debug" />
  <Command __id="1884" _type="ProgramExecutionEvent" className="/A6/src/client/Client.java" date="Fri Apr 15 22:59:03 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="110776499" type="Run" />
  <Command __id="1885" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 22:59:03 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="110776499" type="Debug" />
  <Command __id="1886" _type="ProgramExecutionEvent" className="/A6/src/client/Client.java" date="Fri Apr 15 22:59:03 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="110776499" type="Run" />
  <DocumentChange __id="1672" _type="Insert" date="Fri Apr 15 22:05:23 EDT 2022" docASTNodeCount="1198" docActiveCodeLength="9334" docExpressionCount="863" docLength="10222" length="9" offset="10098" repeat="9" starttimestamp="1649967167317" timestamp="107555849" timestamp2="107556686">
    <text><![CDATA[mechanism]]></text>
  </DocumentChange>
  <Command __id="1888" _type="PauseCommand" date="Fri Apr 15 23:03:46 EDT 2022" range="2m-5m" starttimestamp="1649967167317" timestamp="111058972">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[282473]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1889" _type="MoveCaretCommand" caretOffset="2734" date="Fri Apr 15 23:03:46 EDT 2022" docOffset="2734" starttimestamp="1649967167317" timestamp="111059249" />
  <Command __id="1887" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 23:03:46 EDT 2022" docASTNodeCount="1255" docActiveCodeLength="9119" docExpressionCount="884" docLength="10235" projectName="A6" starttimestamp="1649967167317" timestamp="111058972">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static int NIO_SERVER_PORT;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		¶¶		// Make sure you set this property when processing args¶		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶		¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);¶		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);¶		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);¶		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);¶		¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			System.out.println("Broadcasting IPC mechanism: "+mechanism);¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶		System.out.println("ADDED CONNECTION LISTENER");¶	}¶¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1891" _type="PauseCommand" date="Fri Apr 15 23:04:15 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="111088347">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[29098]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1892" _type="MoveCaretCommand" caretOffset="3699" date="Fri Apr 15 23:04:16 EDT 2022" docOffset="5000" starttimestamp="1649967167317" timestamp="111088763" />
  <Command __id="1894" _type="PauseCommand" date="Fri Apr 15 23:09:16 EDT 2022" range="5m-10m" starttimestamp="1649967167317" timestamp="111388980">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[300217]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1893" _type="ShellCommand" date="Fri Apr 15 23:09:16 EDT 2022" starttimestamp="1649967167317" timestamp="111388980" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1896" _type="PauseCommand" date="Fri Apr 15 23:11:54 EDT 2022" range="2m-5m" starttimestamp="1649967167317" timestamp="111546803">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[157823]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1895" _type="ShellCommand" date="Fri Apr 15 23:11:54 EDT 2022" starttimestamp="1649967167317" timestamp="111546803" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1890" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 23:04:15 EDT 2022" docASTNodeCount="650" docActiveCodeLength="4732" docExpressionCount="459" docLength="5395" projectName="A6" starttimestamp="1649967167317" timestamp="111088347">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1898" _type="PauseCommand" date="Fri Apr 15 23:17:43 EDT 2022" range="5m-10m" starttimestamp="1649967167317" timestamp="111896290">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[349487]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1899" _type="MoveCaretCommand" caretOffset="2734" date="Fri Apr 15 23:17:44 EDT 2022" docOffset="2734" starttimestamp="1649967167317" timestamp="111896778" />
  <Command __id="1901" _type="PauseCommand" date="Fri Apr 15 23:18:28 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="111940843">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[44065]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1900" _type="MoveCaretCommand" caretOffset="6687" date="Fri Apr 15 23:18:28 EDT 2022" docOffset="6687" starttimestamp="1649967167317" timestamp="111940843" />
  <Command __id="1903" _type="InsertStringCommand" date="Fri Apr 15 23:18:28 EDT 2022" starttimestamp="1649967167317" timestamp="111941155" timestamp2="111941155">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1897" _type="DiffBasedFileOpenCommand" date="Fri Apr 15 23:17:43 EDT 2022" docASTNodeCount="1255" docActiveCodeLength="9119" docExpressionCount="884" docLength="10235" projectName="A6" starttimestamp="1649967167317" timestamp="111896290">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static int NIO_SERVER_PORT;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		¶¶		// Make sure you set this property when processing args¶		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶		¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);¶		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);¶		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);¶		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);¶		¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			System.out.println("Broadcasting IPC mechanism: "+mechanism);¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶		System.out.println("ADDED CONNECTION LISTENER");¶	}¶¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1902" _type="Insert" date="Fri Apr 15 23:18:28 EDT 2022" docASTNodeCount="1255" docActiveCodeLength="9126" docExpressionCount="884" docLength="10242" length="7" offset="6687" starttimestamp="1649967167317" timestamp="111941146">
    <text><![CDATA[
					]]></text>
  </DocumentChange>
  <Command __id="1905" _type="PauseCommand" date="Fri Apr 15 23:18:30 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="111943224">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2069]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="1904" _type="Insert" date="Fri Apr 15 23:18:30 EDT 2022" docASTNodeCount="1259" docActiveCodeLength="9136" docExpressionCount="887" docLength="10252" length="10" offset="6694" repeat="10" starttimestamp="1649967167317" timestamp="111943224" timestamp2="111944932">
    <text><![CDATA[System.out]]></text>
  </DocumentChange>
  <Command __id="1906" _type="InsertStringCommand" date="Fri Apr 15 23:18:30 EDT 2022" starttimestamp="1649967167317" timestamp="111943236" timestamp2="111943236">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1908" _type="InsertStringCommand" date="Fri Apr 15 23:18:30 EDT 2022" starttimestamp="1649967167317" timestamp="111943445" timestamp2="111943445">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1910" _type="InsertStringCommand" date="Fri Apr 15 23:18:30 EDT 2022" starttimestamp="1649967167317" timestamp="111943552" timestamp2="111943552">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1912" _type="InsertStringCommand" date="Fri Apr 15 23:18:31 EDT 2022" starttimestamp="1649967167317" timestamp="111943711" timestamp2="111943711">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1914" _type="InsertStringCommand" date="Fri Apr 15 23:18:31 EDT 2022" starttimestamp="1649967167317" timestamp="111943852" timestamp2="111943852">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1916" _type="InsertStringCommand" date="Fri Apr 15 23:18:31 EDT 2022" starttimestamp="1649967167317" timestamp="111944068" timestamp2="111944068">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1918" _type="InsertStringCommand" date="Fri Apr 15 23:18:31 EDT 2022" starttimestamp="1649967167317" timestamp="111944449" timestamp2="111944449">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1919" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Fri Apr 15 23:18:31 EDT 2022" start_end="START" starttimestamp="1649967167317" timestamp="111944449" />
  <Command __id="1923" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Fri Apr 15 23:18:32 EDT 2022" start_end="END" starttimestamp="1649967167317" timestamp="111945086" />
  <DocumentChange __id="1924" _type="Replace" date="Fri Apr 15 23:18:32 EDT 2022" docASTNodeCount="1255" docActiveCodeLength="9137" docExpressionCount="884" docLength="10253" endLine="205" insertionLength="4" int_docASTNodeCount="1255" int_docActiveCodeLength="9133" int_docExpressionCount="884" int_docLength="10249" length="3" offset="6701" startLine="205" starttimestamp="1649967167317" timestamp="111945086">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="1925" _type="InsertStringCommand" date="Fri Apr 15 23:18:32 EDT 2022" starttimestamp="1649967167317" timestamp="111945098" timestamp2="111945098">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1926" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Fri Apr 15 23:18:32 EDT 2022" start_end="START" starttimestamp="1649967167317" timestamp="111945120" />
  <DocumentChange __id="1927" _type="Insert" date="Fri Apr 15 23:18:32 EDT 2022" docASTNodeCount="1262" docActiveCodeLength="9155" docExpressionCount="890" docLength="10271" length="18" offset="6705" repeat="16" starttimestamp="1649967167317" timestamp="111945519" timestamp2="111948844">
    <text><![CDATA[println("Broaded")]]></text>
  </DocumentChange>
  <Command __id="1937" _type="PauseCommand" date="Fri Apr 15 23:18:34 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="111947260">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1741]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1936" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Fri Apr 15 23:18:34 EDT 2022" start_end="END" starttimestamp="1649967167317" timestamp="111947260" />
  <Command __id="1939" _type="InsertStringCommand" date="Fri Apr 15 23:18:35 EDT 2022" starttimestamp="1649967167317" timestamp="111947810" timestamp2="111947810">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="1941" _type="InsertStringCommand" date="Fri Apr 15 23:18:35 EDT 2022" starttimestamp="1649967167317" timestamp="111948091" timestamp2="111948091">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1943" _type="InsertStringCommand" date="Fri Apr 15 23:18:35 EDT 2022" starttimestamp="1649967167317" timestamp="111948232" timestamp2="111948232">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1945" _type="InsertStringCommand" date="Fri Apr 15 23:18:35 EDT 2022" starttimestamp="1649967167317" timestamp="111948319" timestamp2="111948319">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1947" _type="InsertStringCommand" date="Fri Apr 15 23:18:35 EDT 2022" starttimestamp="1649967167317" timestamp="111948517" timestamp2="111948517">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1949" _type="InsertStringCommand" date="Fri Apr 15 23:18:35 EDT 2022" starttimestamp="1649967167317" timestamp="111948679" timestamp2="111948679">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1951" _type="InsertStringCommand" date="Fri Apr 15 23:18:36 EDT 2022" starttimestamp="1649967167317" timestamp="111948845" timestamp2="111948845">
    <data><![CDATA[d]]></data>
  </Command>
  <DocumentChange __id="1952" _type="Delete" date="Fri Apr 15 23:18:36 EDT 2022" docASTNodeCount="1262" docActiveCodeLength="9148" docExpressionCount="890" docLength="10264" endLine="205" length="7" offset="6714" repeat="7" startLine="205" starttimestamp="1649967167317" timestamp="111949548" timestamp2="111950707">
    <text><![CDATA[Broaded]]></text>
  </DocumentChange>
  <Command __id="1953" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 23:18:36 EDT 2022" starttimestamp="1649967167317" timestamp="111949548" />
  <Command __id="1955" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 23:18:37 EDT 2022" starttimestamp="1649967167317" timestamp="111950055" />
  <Command __id="1957" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 23:18:37 EDT 2022" starttimestamp="1649967167317" timestamp="111950079" />
  <Command __id="1959" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 23:18:37 EDT 2022" starttimestamp="1649967167317" timestamp="111950110" />
  <Command __id="1961" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 23:18:37 EDT 2022" starttimestamp="1649967167317" timestamp="111950335" />
  <Command __id="1963" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 23:18:37 EDT 2022" starttimestamp="1649967167317" timestamp="111950490" />
  <Command __id="1965" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Apr 15 23:18:38 EDT 2022" starttimestamp="1649967167317" timestamp="111950715" />
  <Command __id="1967" _type="InsertStringCommand" date="Fri Apr 15 23:18:38 EDT 2022" starttimestamp="1649967167317" timestamp="111951003" timestamp2="111951003">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1969" _type="InsertStringCommand" date="Fri Apr 15 23:18:38 EDT 2022" starttimestamp="1649967167317" timestamp="111951224" timestamp2="111951224">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1971" _type="InsertStringCommand" date="Fri Apr 15 23:18:38 EDT 2022" starttimestamp="1649967167317" timestamp="111951363" timestamp2="111951363">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1973" _type="InsertStringCommand" date="Fri Apr 15 23:18:38 EDT 2022" starttimestamp="1649967167317" timestamp="111951498" timestamp2="111951498">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="1975" _type="InsertStringCommand" date="Fri Apr 15 23:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="111951766" timestamp2="111951766">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1977" _type="InsertStringCommand" date="Fri Apr 15 23:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="111952000" timestamp2="111952000">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1979" _type="InsertStringCommand" date="Fri Apr 15 23:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="111952084" timestamp2="111952084">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1981" _type="InsertStringCommand" date="Fri Apr 15 23:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="111952399" timestamp2="111952399">
    <data><![CDATA[W]]></data>
  </Command>
  <Command __id="1983" _type="InsertStringCommand" date="Fri Apr 15 23:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="111952575" timestamp2="111952575">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1985" _type="InsertStringCommand" date="Fri Apr 15 23:18:40 EDT 2022" starttimestamp="1649967167317" timestamp="111952755" timestamp2="111952755">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="1987" _type="InsertStringCommand" date="Fri Apr 15 23:18:40 EDT 2022" starttimestamp="1649967167317" timestamp="111952839" timestamp2="111952839">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1989" _type="InsertStringCommand" date="Fri Apr 15 23:18:40 EDT 2022" starttimestamp="1649967167317" timestamp="111953106" timestamp2="111953106">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1992" _type="PauseCommand" date="Fri Apr 15 23:18:41 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="111954132">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1026]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1991" _type="InsertStringCommand" date="Fri Apr 15 23:18:41 EDT 2022" starttimestamp="1649967167317" timestamp="111954132" timestamp2="111954132">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="1994" _type="InsertStringCommand" date="Fri Apr 15 23:18:41 EDT 2022" starttimestamp="1649967167317" timestamp="111954564" timestamp2="111954564">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1996" _type="InsertStringCommand" date="Fri Apr 15 23:18:42 EDT 2022" starttimestamp="1649967167317" timestamp="111954808" timestamp2="111954808">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1998" _type="InsertStringCommand" date="Fri Apr 15 23:18:42 EDT 2022" starttimestamp="1649967167317" timestamp="111954925" timestamp2="111954925">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="2000" _type="InsertStringCommand" date="Fri Apr 15 23:18:42 EDT 2022" starttimestamp="1649967167317" timestamp="111955051" timestamp2="111955051">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2002" _type="InsertStringCommand" date="Fri Apr 15 23:18:42 EDT 2022" starttimestamp="1649967167317" timestamp="111955163" timestamp2="111955163">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="2004" _type="InsertStringCommand" date="Fri Apr 15 23:18:42 EDT 2022" starttimestamp="1649967167317" timestamp="111955266" timestamp2="111955266">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2006" _type="InsertStringCommand" date="Fri Apr 15 23:18:42 EDT 2022" starttimestamp="1649967167317" timestamp="111955389" timestamp2="111955389">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="2008" _type="InsertStringCommand" date="Fri Apr 15 23:18:42 EDT 2022" starttimestamp="1649967167317" timestamp="111955493" timestamp2="111955493">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="2010" _type="InsertStringCommand" date="Fri Apr 15 23:18:42 EDT 2022" starttimestamp="1649967167317" timestamp="111955548" timestamp2="111955548">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2012" _type="InsertStringCommand" date="Fri Apr 15 23:18:42 EDT 2022" starttimestamp="1649967167317" timestamp="111955664" timestamp2="111955664">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="2014" _type="InsertStringCommand" date="Fri Apr 15 23:18:43 EDT 2022" starttimestamp="1649967167317" timestamp="111955789" timestamp2="111955789">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2016" _type="InsertStringCommand" date="Fri Apr 15 23:18:43 EDT 2022" starttimestamp="1649967167317" timestamp="111956079" timestamp2="111956079">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="2018" _type="InsertStringCommand" date="Fri Apr 15 23:18:43 EDT 2022" starttimestamp="1649967167317" timestamp="111956444" timestamp2="111956444">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="2020" _type="InsertStringCommand" date="Fri Apr 15 23:18:43 EDT 2022" starttimestamp="1649967167317" timestamp="111956537" timestamp2="111956537">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="2022" _type="InsertStringCommand" date="Fri Apr 15 23:18:43 EDT 2022" starttimestamp="1649967167317" timestamp="111956655" timestamp2="111956655">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2024" _type="InsertStringCommand" date="Fri Apr 15 23:18:44 EDT 2022" starttimestamp="1649967167317" timestamp="111956802" timestamp2="111956802">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="2026" _type="InsertStringCommand" date="Fri Apr 15 23:18:44 EDT 2022" starttimestamp="1649967167317" timestamp="111956906" timestamp2="111956906">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="2029" _type="PauseCommand" date="Fri Apr 15 23:18:45 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="111957963">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1057]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2028" _type="InsertStringCommand" date="Fri Apr 15 23:18:45 EDT 2022" starttimestamp="1649967167317" timestamp="111957963" timestamp2="111957963">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2031" _type="InsertStringCommand" date="Fri Apr 15 23:18:45 EDT 2022" starttimestamp="1649967167317" timestamp="111958121" timestamp2="111958121">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="2033" _type="InsertStringCommand" date="Fri Apr 15 23:18:45 EDT 2022" starttimestamp="1649967167317" timestamp="111958322" timestamp2="111958322">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="2035" _type="InsertStringCommand" date="Fri Apr 15 23:18:45 EDT 2022" starttimestamp="1649967167317" timestamp="111958394" timestamp2="111958394">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="2037" _type="InsertStringCommand" date="Fri Apr 15 23:18:45 EDT 2022" starttimestamp="1649967167317" timestamp="111958492" timestamp2="111958492">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="2039" _type="InsertStringCommand" date="Fri Apr 15 23:18:45 EDT 2022" starttimestamp="1649967167317" timestamp="111958572" timestamp2="111958572">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2041" _type="InsertStringCommand" date="Fri Apr 15 23:18:46 EDT 2022" starttimestamp="1649967167317" timestamp="111958771" timestamp2="111958771">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2043" _type="InsertStringCommand" date="Fri Apr 15 23:18:46 EDT 2022" starttimestamp="1649967167317" timestamp="111958874" timestamp2="111958874">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2045" _type="InsertStringCommand" date="Fri Apr 15 23:18:46 EDT 2022" starttimestamp="1649967167317" timestamp="111958983" timestamp2="111958983">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="2047" _type="InsertStringCommand" date="Fri Apr 15 23:18:46 EDT 2022" starttimestamp="1649967167317" timestamp="111959521" timestamp2="111959521">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="2049" _type="InsertStringCommand" date="Fri Apr 15 23:18:47 EDT 2022" starttimestamp="1649967167317" timestamp="111959691" timestamp2="111959691">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2051" _type="InsertStringCommand" date="Fri Apr 15 23:18:47 EDT 2022" starttimestamp="1649967167317" timestamp="111959828" timestamp2="111959828">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="2053" _type="PauseCommand" date="Fri Apr 15 23:18:48 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="111961247">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1419]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2052" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Fri Apr 15 23:18:48 EDT 2022" starttimestamp="1649967167317" timestamp="111961247" />
  <Command __id="2054" _type="EclipseCommand" commandID="" date="Fri Apr 15 23:18:48 EDT 2022" starttimestamp="1649967167317" timestamp="111961333" />
  <Command __id="2055" _type="EclipseCommand" commandID="" date="Fri Apr 15 23:18:48 EDT 2022" starttimestamp="1649967167317" timestamp="111961412" />
  <Command __id="2057" _type="PauseCommand" date="Fri Apr 15 23:18:49 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="111962483">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1071]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2110" _type="ConsoleOutput" date="Fri Apr 15 23:19:21 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="111994259" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.5267236653918527 (Opened)
Client registered GIPC
com.sun.proxy.$Proxy1@6a9a0393
[com.sun.proxy.$Proxy1@6eef5314, com.sun.proxy.$Proxy1@6a9a0393]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"added server as a property change listener of client¶Command processor scanner o"), Diff(INSERT,"Server0<-->Generic Client:0.5267236653918527 (O"), Diff(EQUAL,"pened"), Diff(INSERT,")"), Diff(EQUAL,"¶"), Diff(DELETE,"Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Client registered GIPC¶com.sun.proxy.$Proxy1@6a9a0393¶[com.sun.proxy.$Proxy1@6eef5314, com.sun.proxy.$Proxy1@6a9a0393]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2112" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:19:21 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="111994400" type="Run" />
  <Command __id="2113" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:19:21 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="111994466" type="Run" />
  <Command __id="2114" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:19:21 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="111994544" type="Run" />
  <Command __id="2115" _type="ConsoleOutput" date="Fri Apr 15 23:19:21 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="111994558" type="ConsoleOutput">
    <outputString><![CDATA[WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER
SERVER looked up in RMI registry!!
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.5267236653918527 (Opened)¶Client registered GIPC¶com.sun.proxy.$Proxy1@6a9a0393¶[com.sun.proxy.$Proxy1@6eef5314, com.sun.proxy.$Proxy1@6a9a0393]"), Diff(INSERT,"WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER¶SERVER looked up in RMI registry!!"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2116" _type="ConsoleOutput" date="Fri Apr 15 23:19:22 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="111994797" type="ConsoleOutput">
    <outputString><![CDATA[Client registered RMI
Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53847](remote),objID:[-7826bd85:1803061dc84:-7ffe, -4029812931849753668]]]]]
[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53842](remote),objID:[772802c4:1803061d346:-7ffe, 7032081538581702077]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53847](remote),objID:[-7826bd85:1803061dc84:-7ffe, -4029812931849753668]]]]]]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER¶SERVER looked up in RMI registry!!"), Diff(INSERT,"Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53847](remote),objID:[-7826bd85:1803061dc84:-7ffe, -4029812931849753668]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53842](remote),objID:[772802c4:1803061d346:-7ffe, 7032081538581702077]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53847](remote),objID:[-7826bd85:1803061dc84:-7ffe, -4029812931849753668]]]]]]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2117" _type="ConsoleOutput" date="Fri Apr 15 23:19:22 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="111994835" type="ConsoleOutput">
    <outputString><![CDATA[added server as a property change listener of client
Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRe"), Diff(INSERT,"added server as a property change listener o"), Diff(EQUAL,"f "), Diff(DELETE,"["), Diff(INSERT,"c"), Diff(EQUAL,"li"), Diff(DELETE,"veRef: [endpoint:[172.16.0.161:53847](remote),objID:[-7826bd85:1803061dc84:-7ffe, -4029812931849753668]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53842](remote),objID:[772802c4:1803061d346:-7ffe, 7032081538581702077]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[172.16.0.161:53847](remote),objID:[-7826bd85:1803061dc84:-7ffe, -4029812931849753668]]]]]]"), Diff(INSERT,"ent¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2119" _type="PauseCommand" date="Fri Apr 15 23:19:29 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="112001796">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6961]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="2123" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:19:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="112009568" type="Run" />
  <Command __id="2126" _type="PauseCommand" date="Fri Apr 15 23:19:40 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="112013306">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3738]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="2125" _type="ConsoleInput" date="Fri Apr 15 23:19:40 EDT 2022" starttimestamp="1649967167317" timestamp="112013306" type="Exception">
    <outputString><![CDATA[i GIPC
]]></outputString>
  </Command>
  <Command __id="2127" _type="ConsoleOutput" date="Fri Apr 15 23:19:40 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="112013363" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[GIPC]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"public default void assignments.util.inputParameters.SimulationParametersListener."), Diff(DELETE,"broadcastMetaState(boolean)[true"), Diff(INSERT,"ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[GIPC"), Diff(EQUAL,"]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶")]]]></diff>
  </Command>
  <Command __id="2129" _type="PauseCommand" date="Fri Apr 15 23:19:46 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="112019031">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5668]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="2147" _type="ShellCommand" date="Fri Apr 15 23:21:21 EDT 2022" starttimestamp="1649967167317" timestamp="112114134" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2150" _type="PauseCommand" date="Fri Apr 15 23:21:28 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="112121143">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7009]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2213" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:39:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113209511" type="Run" />
  <Command __id="2215" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:39:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113209571" type="Run" />
  <Command __id="2217" _type="PauseCommand" date="Fri Apr 15 23:40:11 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="113243788">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[34217]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2216" _type="ShellCommand" date="Fri Apr 15 23:40:11 EDT 2022" starttimestamp="1649967167317" timestamp="113243788" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2219" _type="PauseCommand" date="Fri Apr 15 23:40:18 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="113250857">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7069]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="2218" _type="ConsoleInput" date="Fri Apr 15 23:40:18 EDT 2022" starttimestamp="1649967167317" timestamp="113250857" type="Exception">
    <outputString><![CDATA[q 0
]]></outputString>
  </Command>
  <Command __id="2220" _type="ConsoleOutput" date="Fri Apr 15 23:40:18 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113250912" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.quit(int)[0]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"recieved broadcased command: move 50 -50¶PROPERTY CHANGE¶executed command"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.quit(int)[0]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2221" _type="ConsoleOutput" date="Fri Apr 15 23:40:18 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113251678" type="ConsoleOutput">
    <outputString><![CDATA[AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:53831]:An existing connection was forcibly closed by the remote host
AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:53839]:An existing connection was forcibly closed by the remote host
Server0<-->Generic Client:0.673101335446924 (Closed)
Explanation: An existing connection was forcibly closed by the remote host
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"public default void assignments.util.inputParameters.SimulationParametersListener.quit(int)[0]"), Diff(INSERT,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:53831]:An existing connection was forcibly closed by the remote host¶AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:53839]:An existing connection was forcibly closed by the remote host¶Server0<-->Generic Client:0.673101335446924 (Closed)¶Explanation: An existing connection was forcibly closed by the remote host"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2222" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:40:19 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113251684" type="Debug" />
  <Command __id="2223" _type="ProgramExecutionEvent" className="/A6/src/client/Client.java" date="Fri Apr 15 23:40:19 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="113251684" type="Run" />
  <Command __id="2224" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:40:19 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113251684" type="Debug" />
  <Command __id="2225" _type="ProgramExecutionEvent" className="/A6/src/client/Client.java" date="Fri Apr 15 23:40:19 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="113251684" type="Run" />
  <Command __id="2227" _type="PauseCommand" date="Fri Apr 15 23:40:32 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="113265008">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[13324]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="2226" _type="ConsoleInput" date="Fri Apr 15 23:40:32 EDT 2022" starttimestamp="1649967167317" timestamp="113265008" type="Exception">
    <outputString><![CDATA[s "quit"
]]></outputString>
  </Command>
  <Command __id="2228" _type="ConsoleOutput" date="Fri Apr 15 23:40:32 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113265070" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[quit]
IPC Mechanism: GIPC
IPC Mechanism is GIPC or RMI
IPC Mechanism gotten from old GIPC simiulation command method
GIPC
using gipc proxy server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:53831]:An existing connection was forcibly closed by the remote host¶AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:10000 remote=/127.0.0.1:53839]:An existing connection was forcibly closed by the remote host¶Server0<-->Generic Client:0.673101335446924 (Closed)¶Explanation: An existing connection was forcibly closed by the remote host"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[quit]¶IPC Mechanism: GIPC¶IPC Mechanism is GIPC or RMI¶IPC Mechanism gotten from old GIPC simiulation command method¶GIPC¶using gipc proxy server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2229" _type="ConsoleOutput" date="Fri Apr 15 23:40:32 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113265085" type="ConsoleOutput">
    <outputString><![CDATA[IPC Mechanism recieved for broadcast: GIPC
USING RMI IN SERVER
IPC Mechanism recieved for broadcast: GIPC
USING RMI IN SERVER
Broadcasting IPC mechanism: GIPC
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"public default void assignments.util.inputParameters.SimulationParametersListener.simulationCommand(java.lang.String)[quit]¶IPC Mechanism: GIPC¶IPC Mechanism is GIPC or RMI"), Diff(INSERT,"IPC Mechanism recieved for broadcast: GIPC¶USING RMI IN SERVER"), Diff(EQUAL,"¶IPC Mechanism "), Diff(DELETE,"gotten from old GIPC simiulation command method¶GIPC¶using gipc proxy server"), Diff(INSERT,"recieved for broadcast: GIPC¶USING RMI IN SERVER¶Broadcasting IPC mechanism: GIPC"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2231" _type="PauseCommand" date="Fri Apr 15 23:40:34 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="113267112">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2027]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2230" _type="ConsoleOutput" date="Fri Apr 15 23:40:34 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113267112" type="ConsoleOutput">
    <outputString><![CDATA[ >>>> No valid commands entered.
PROPERTY CHANGE
PROPERTY CHANGE
Command being sent from coupler:quit
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"IPC Mechanism recieved for broadcast: GIPC¶USING RMI IN SERVER¶IPC Mechanism recieved for broadcast: GIPC¶USING RMI IN SERVER¶Broadcasting IPC mechanism: GIPC"), Diff(INSERT," >>>> No valid commands entered.¶PROPERTY CHANGE¶PROPERTY CHANGE¶Command being sent from coupler:quit¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2232" _type="ExceptionCommand" date="Fri Apr 15 23:40:34 EDT 2022" starttimestamp="1649967167317" timestamp="113267126" type="Exception">
    <exceptionString><![CDATA[java.rmi.ConnectException: Connection refused to host: 172.16.0.161; nested exception is: 
	java.net.ConnectException: Connection refused: connect
	at java.rmi/sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:623)
	at java.rmi/sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:209)
	at java.rmi/sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:196)
	at java.rmi/sun.rmi.server.UnicastRef.invoke(UnicastRef.java:132)
	at java.rmi/java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:217)
	at java.rmi/java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:162)
	at com.sun.proxy.$Proxy2.changeIPCMechanism(Unknown Source)
	at server.remote.ServerRemoteObjectGIPC.broadcastIPCMechanism(ServerRemoteObjectGIPC.java:205)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:359)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:562)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:796)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:677)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:676)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at java.base/java.net.Socket.connect(Socket.java:557)
	at java.base/java.net.Socket.<init>(Socket.java:453)
	at java.base/java.net.Socket.<init>(Socket.java:230)
	at java.rmi/sun.rmi.transport.tcp.TCPDirectSocketFactory.createSocket(TCPDirectSocketFactory.java:40)
	at java.rmi/sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:617)
	... 24 more
Command recieved for broadcast: quit
USING GIPC IN SERVER
[com.sun.proxy.$Proxy1@6eef5314, com.sun.proxy.$Proxy1@6a9a0393]
2
com.sun.proxy.$Proxy1@6eef5314
inputport.datacomm.SendToUnconnectedPortException: Ignoring attempt to send java.nio.HeapByteBuffer[pos=0 lim=584 cap=848] to Generic Client:0.673101335446924 before connection completely established or after other end disconnected
	at inputport.datacomm.duplex.buffer.AGenericDuplexBufferServerInputPort.send(AGenericDuplexBufferServerInputPort.java:100)
	at inputport.datacomm.duplex.buffer.AGenericDuplexBufferServerInputPort.send(AGenericDuplexBufferServerInputPort.java:1)
	at inputport.datacomm.simplex.object.ASerializingForwarder.sendBuffer(ASerializingForwarder.java:45)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2233" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:40:34 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113267137" type="Run" />
  <Command __id="2234" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:40:34 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113267137" type="Run" />
  <Command __id="2235" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:40:34 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113267152" type="Run" />
  <Command __id="2236" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:40:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113267697" type="Debug" />
  <Command __id="2237" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:40:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113267697" type="Debug" />
  <Command __id="2238" _type="ProgramExecutionEvent" className="/A6/src/server/Server.java" date="Fri Apr 15 23:40:35 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="113267697" type="Run" />
  <Command __id="2239" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:40:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113267963" type="Debug" />
  <Command __id="2240" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:40:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113267963" type="Debug" />
  <Command __id="2241" _type="ProgramExecutionEvent" className="/A6/src/client/Client.java" date="Fri Apr 15 23:40:35 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="113267968" type="Run" />
  <Command __id="2243" _type="PauseCommand" date="Fri Apr 15 23:40:40 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="113272713">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4745]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2242" _type="ShellCommand" date="Fri Apr 15 23:40:40 EDT 2022" starttimestamp="1649967167317" timestamp="113272713" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2245" _type="PauseCommand" date="Fri Apr 15 23:44:00 EDT 2022" range="2m-5m" starttimestamp="1649967167317" timestamp="113472935">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[200222]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2251" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Fri Apr 15 23:44:08 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="113481639" type="Run" />
  <Command __id="2253" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Fri Apr 15 23:44:08 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="113481639" type="Run" />
  <Command __id="2254" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:44:09 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113481857" type="Run" />
  <Command __id="2255" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:44:09 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113481880" type="Run" />
  <Command __id="2256" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:44:09 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113481888" type="Run" />
  <Command __id="2258" _type="PauseCommand" date="Fri Apr 15 23:44:12 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="113485528">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3640]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2287" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:44:52 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113525201" type="Run" />
  <Command __id="2289" _type="ProgramExecutionEvent" className="(Unknown)" date="Fri Apr 15 23:44:52 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="113525202" type="Run" />
  <Command __id="2291" _type="PauseCommand" date="Fri Apr 15 23:45:03 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="113536419">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[11217]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2290" _type="ShellCommand" date="Fri Apr 15 23:45:03 EDT 2022" starttimestamp="1649967167317" timestamp="113536419" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2293" _type="PauseCommand" date="Fri Apr 15 23:45:05 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="113538181">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1762]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2292" _type="ShellCommand" date="Fri Apr 15 23:45:05 EDT 2022" starttimestamp="1649967167317" timestamp="113538181" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2295" _type="PauseCommand" date="Fri Apr 15 23:45:29 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="113561932">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[23751]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2294" _type="ShellCommand" date="Fri Apr 15 23:45:29 EDT 2022" starttimestamp="1649967167317" timestamp="113561932" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2297" _type="PauseCommand" date="Fri Apr 15 23:45:30 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="113563000">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1068]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2296" _type="ShellCommand" date="Fri Apr 15 23:45:30 EDT 2022" starttimestamp="1649967167317" timestamp="113563000" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2299" _type="PauseCommand" date="Fri Apr 15 23:45:32 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="113564743">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1743]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2298" _type="ShellCommand" date="Fri Apr 15 23:45:32 EDT 2022" starttimestamp="1649967167317" timestamp="113564743" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2300" _type="ShellCommand" date="Fri Apr 15 23:45:32 EDT 2022" starttimestamp="1649967167317" timestamp="113564811" type="ECLIPSE_MINIMIZED" />
  <Command __id="2301" _type="ShellCommand" date="Fri Apr 15 23:45:32 EDT 2022" starttimestamp="1649967167317" timestamp="113564853" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2303" _type="PauseCommand" date="Fri Apr 15 23:45:39 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="113572115">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7262]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2302" _type="ShellCommand" date="Fri Apr 15 23:45:39 EDT 2022" starttimestamp="1649967167317" timestamp="113572115" type="ECLIPSE_MAXIMIZED" />
  <Command __id="2304" _type="ShellCommand" date="Fri Apr 15 23:45:39 EDT 2022" starttimestamp="1649967167317" timestamp="113572192" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2306" _type="PauseCommand" date="Fri Apr 15 23:45:43 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="113575717">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3525]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2305" _type="ShellCommand" date="Fri Apr 15 23:45:43 EDT 2022" starttimestamp="1649967167317" timestamp="113575717" type="ECLIPSE_MINIMIZED" />
  <Command __id="2307" _type="ShellCommand" date="Fri Apr 15 23:45:43 EDT 2022" starttimestamp="1649967167317" timestamp="113575752" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2309" _type="PauseCommand" date="Fri Apr 15 23:45:49 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="113582284">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6532]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2308" _type="ConsoleOutput" date="Fri Apr 15 23:45:49 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113582284" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*
GIPC is not checked because RMI failed%0.16666666666666666

Test execution time (ms):58595
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.16666666666666666¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14316"), Diff(INSERT,"58595"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2311" _type="PauseCommand" date="Fri Apr 15 23:46:05 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="113598538">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16254]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2310" _type="ConsoleOutput" date="Fri Apr 15 23:46:05 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113598538" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@6ac2e3fc . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Client writing to server via NIO, no line found matching regex: .*?\{main\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.16666666666666666¶¶Test execution time (ms):58595"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@6ac2e3fc . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2313" _type="PauseCommand" date="Fri Apr 15 23:46:07 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="113600020">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1482]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2312" _type="ConsoleOutput" date="Fri Apr 15 23:46:07 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113600020" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@6ac2e3fc . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@6ac2e3fc . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2315" _type="PauseCommand" date="Fri Apr 15 23:46:08 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="113601348">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1328]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2314" _type="ConsoleOutput" date="Fri Apr 15 23:46:08 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113601348" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@6ac2e3fc . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@6ac2e3fc . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2317" _type="PauseCommand" date="Fri Apr 15 23:46:10 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="113603038">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1690]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2316" _type="ConsoleOutput" date="Fri Apr 15 23:46:10 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113603038" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientReadWriteNonAtomic@66dd14b5 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClient"), Diff(DELETE,"Connection@6ac2e3fc"), Diff(INSERT,"ReadWriteNonAtomic@66dd14b5"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2319" _type="PauseCommand" date="Fri Apr 15 23:46:13 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="113606335">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3297]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2318" _type="ConsoleOutput" date="Fri Apr 15 23:46:13 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113606335" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientReadWriteNonAtomic@66dd14b5 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientReadWriteNonAtomic@66dd14b5 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2321" _type="PauseCommand" date="Fri Apr 15 23:46:16 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="113609357">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3022]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2320" _type="ConsoleOutput" date="Fri Apr 15 23:46:16 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113609357" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Fri Apr 15 23:46:16 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientReadWriteNonAtomic@66dd14b5 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Fri Apr 15 23:46:16 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2323" _type="PauseCommand" date="Fri Apr 15 23:46:20 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="113613413">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4056]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2322" _type="ConsoleOutput" date="Fri Apr 15 23:46:20 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113613413" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:124
Running second pass checks Fri Apr 15 23:46:20 EDT 2022
Start O(n2) inter- and intra class method calls:Fri Apr 15 23:46:20 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:124¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Fri Apr 15 23:46:"), Diff(DELETE,"16"), Diff(INSERT,"20 EDT 2022¶Start O(n2) inter- and intra class method calls:Fri Apr 15 23:46:20"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2324" _type="ConsoleOutput" date="Fri Apr 15 23:46:20 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113613510" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Fri Apr 15 23:46:20 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:124¶Running second pass checks Fri Apr 15 23:46:20 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Fri Apr 15 23:46:20 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2326" _type="PauseCommand" date="Fri Apr 15 23:46:22 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="113615561">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2051]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2325" _type="ConsoleOutput" date="Fri Apr 15 23:46:22 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113615561" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Fri Apr 15 23:46:22 EDT 2022
Generating checks:Fri Apr 15 23:46:22 EDT 2022
Finished Generating checks:Fri Apr 15 23:46:22 EDT 2022
Generating externals:Fri Apr 15 23:46:22 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Fri Apr 15 23:46:22 EDT 2022¶Generating checks:Fri Apr 15 23:46:22 EDT 2022¶Finished Generating checks:Fri Apr 15 23:46:22 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Fri Apr 15 23:46:2"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2327" _type="ConsoleOutput" date="Fri Apr 15 23:46:23 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113616251" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Fri Apr 15 23:46:23 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):6929
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Fri Apr 15 23:46:2"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating checks:Fri Apr 15 23:46:22 EDT 2022¶Finished Generat"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found "), Diff(EQUAL,"in"), Diff(DELETE,"g"), Diff(EQUAL," checks"), Diff(DELETE,":Fri Apr 15 23:46:22 EDT 2022¶Generating externals:Fri Apr 15 23:46:22 EDT 2022"), Diff(INSERT,"tyle text, see traced console output%0.0¶¶Test execution time (ms):6929"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2328" _type="ConsoleOutput" date="Fri Apr 15 23:46:23 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113616315" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32

A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286
Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Fri Apr 15 23:46:23 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶"), Diff(INSERT,"Test execution time (ms):32¶¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(INSERT,"2"), Diff(EQUAL,"6"), Diff(DELETE,"929"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2329" _type="ConsoleOutput" date="Fri Apr 15 23:46:23 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113616400" type="ConsoleOutput">
    <outputString><![CDATA[A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298

Test execution time (ms):37
A6MnemonicNames did not pass completely:See console trace about lines failing  this check%0.9967266775777414

Test execution time (ms):31
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298¶¶"), Diff(EQUAL,"Test execution time (ms):3"), Diff(DELETE,"2¶"), Diff(INSERT,"7"), Diff(EQUAL,"¶A6"), Diff(DELETE,"PublicMethodsOverride"), Diff(INSERT,"MnemonicNames"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0.9"), Diff(DELETE,"285714285714286"), Diff(INSERT,"967266775777414¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"26"), Diff(INSERT,"31"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2330" _type="ConsoleOutput" date="Fri Apr 15 23:46:23 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113616516" type="ConsoleOutput">
    <outputString><![CDATA[A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.2857142857142857

Test execution time (ms):29
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A6"), Diff(DELETE,"InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298¶¶Test execution time (ms):37¶A6MnemonicNames"), Diff(INSERT,"AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9967266775777414"), Diff(INSERT,"2857142857142857"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"31"), Diff(INSERT,"29"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2332" _type="PauseCommand" date="Fri Apr 15 23:46:43 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="113636590">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[20074]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2331" _type="ConsoleOutput" date="Fri Apr 15 23:46:43 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113636590" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5

Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6AccessModifiersMatched"), Diff(INSERT,"Test execution time (ms):0¶A6ExpectedInterfaces"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"2857142857142857"), Diff(INSERT,"5"), Diff(EQUAL,"¶¶Test execution time (ms):2"), Diff(DELETE,"9"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2333" _type="ConsoleOutput" date="Fri Apr 15 23:46:43 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113636649" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2413793103448276

Test execution time (ms):25
A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4

Test execution time (ms):20
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2413793103448276¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"25"), Diff(EQUAL,"¶A6Expected"), Diff(DELETE,"Interfac"), Diff(INSERT,"Signatur"), Diff(EQUAL,"es did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"5"), Diff(INSERT,"4"), Diff(EQUAL,"¶¶Test execution time (ms):2"), Diff(DELETE,"6"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2334" _type="ConsoleOutput" date="Fri Apr 15 23:46:44 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113636708" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (36)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (284)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (294)
  |~ ClientRemoteObjectNIO.java (170)
 |- nioExample (7)
  |~ AnNIOManagerPrintClient.java (124)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (66)
  |~ exampleServerReadThread.java (70)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (81)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (76)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (330)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (335)
   |~ ServerRemoteObjectNIO.java (159)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2413793103448276¶¶Test execution time (ms):25¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4¶¶Test execution time (ms):20"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (36)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (284)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (294)¶  |~ ClientRemoteObjectNIO.java (170)¶ |- nioExample (7)¶  |~ AnNIOManagerPrintClient.java (124)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (66)¶  |~ exampleServerReadThread.java (70)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (81)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (330)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2335" _type="ConsoleOutput" date="Fri Apr 15 23:46:44 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="113636775" type="ConsoleOutput">
    <outputString><![CDATA[A6ProjectOrganization did not pass completely:View console for more information%0.0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (36)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (284)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (294)¶  |~ ClientRemoteObjectNIO.java (170)¶ |- nioExample (7)¶  |~ AnNIOManagerPrintClient.java (124)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (66)¶  |~ exampleServerReadThread.java (70)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (81)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (330)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)"), Diff(INSERT,"A6ProjectOrganization did not pass completely:View console for more information%0.0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2337" _type="PauseCommand" date="Fri Apr 15 23:46:59 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="113651924">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15149]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2336" _type="ShellCommand" date="Fri Apr 15 23:46:59 EDT 2022" starttimestamp="1649967167317" timestamp="113651924" type="ECLIPSE_MAXIMIZED" />
  <Command __id="2338" _type="ShellCommand" date="Fri Apr 15 23:46:59 EDT 2022" starttimestamp="1649967167317" timestamp="113651987" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2340" _type="PauseCommand" date="Fri Apr 15 23:47:01 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="113653986">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1999]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2339" _type="ShellCommand" date="Fri Apr 15 23:47:01 EDT 2022" starttimestamp="1649967167317" timestamp="113653986" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2342" _type="PauseCommand" date="Fri Apr 15 23:58:44 EDT 2022" range="10m-20m" starttimestamp="1649967167317" timestamp="114357000">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[703014]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="2391" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 00:09:47 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="115020089" type="Run" />
  <Command __id="2393" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 00:09:47 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="115020094" type="Run" />
  <Command __id="2395" _type="PauseCommand" date="Sat Apr 16 09:03:20 EDT 2022" range=">1h" starttimestamp="1649967167317" timestamp="147033483">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[32013389]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2401" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:03:27 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="147040177" type="Run" />
  <Command __id="2403" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:03:27 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="147040177" type="Run" />
  <Command __id="2404" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:03:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147040401" type="Run" />
  <Command __id="2405" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:03:27 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147040441" type="Run" />
  <Command __id="2406" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:03:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147040441" type="Run" />
  <Command __id="2408" _type="PauseCommand" date="Sat Apr 16 09:03:31 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147044300">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3859]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2409" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:03:54 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147067201" type="Run" />
  <Command __id="2411" _type="ConsoleOutput" date="Sat Apr 16 09:03:54 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147067336" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sat Apr 16 09:03:54 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):2260"), Diff(INSERT,"Building symbol table and running first pass checks:Sat Apr 16 09:03:54 EDT 202"), Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="2413" _type="PauseCommand" date="Sat Apr 16 09:03:58 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147071388">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4052]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2412" _type="ConsoleOutput" date="Sat Apr 16 09:03:58 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147071388" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:124
Running second pass checks Sat Apr 16 09:03:58 EDT 2022
Start O(n2) inter- and intra class method calls:Sat Apr 16 09:03:58 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:124¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Sat Apr 16 09:03:58 EDT 2022¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Sat Apr 16 09:03:5"), Diff(DELETE,"4"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2414" _type="ConsoleOutput" date="Sat Apr 16 09:03:58 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147071548" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sat Apr 16 09:03:58 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:124¶Running second pass checks Sat Apr 16 09:03:58 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sat Apr 16 09:03:58 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2416" _type="PauseCommand" date="Sat Apr 16 09:04:01 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147073862">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2314]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2415" _type="ConsoleOutput" date="Sat Apr 16 09:04:01 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147073862" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sat Apr 16 09:04:01 EDT 2022
Generating checks:Sat Apr 16 09:04:01 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method call"), Diff(INSERT,"Finished second pass checks:Sat Apr 16 09:04:01 EDT 2022¶Generating check"), Diff(EQUAL,"s:Sat Apr 16 09:0"), Diff(DELETE,"3:58"), Diff(INSERT,"4:01"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2417" _type="ConsoleOutput" date="Sat Apr 16 09:04:01 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147073934" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating checks:Sat Apr 16 09:04:01 EDT 2022
Generating externals:Sat Apr 16 09:04:01 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass"), Diff(INSERT,"Generating"), Diff(EQUAL," checks:Sat Apr 16 09:04:01 EDT 2022¶Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Sat Apr 16 09:04:01 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2418" _type="ConsoleOutput" date="Sat Apr 16 09:04:01 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147074587" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sat Apr 16 09:04:01 EDT 2022

A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0
Test execution time (ms):7298
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Sat Apr 16 09:04:01 EDT 2022¶"), Diff(DELETE,"Generating externals:Sat Apr 16 09:04:01 EDT 2022"), Diff(INSERT,"¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶Test execution time (ms):7298"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2419" _type="ConsoleOutput" date="Sat Apr 16 09:04:01 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147074675" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):48
A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286

Test execution time (ms):16
A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298

Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sat Apr 16 09:04:01 EDT 2022¶¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0"), Diff(INSERT,"Test execution time (ms):48¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286¶¶Test execution time (ms):16¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"7298"), Diff(INSERT,"24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2420" _type="ConsoleOutput" date="Sat Apr 16 09:04:02 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147074763" type="ConsoleOutput">
    <outputString><![CDATA[
A6MnemonicNames did not pass completely:See console trace about lines failing  this check%0.9967266775777414
Test execution time (ms):24

A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.26666666666666666
Test execution time (ms):16
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):48¶A6PublicMethodsOverride"), Diff(INSERT,"¶A6MnemonicNames"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0.9"), Diff(DELETE,"285714285714286¶"), Diff(INSERT,"967266775777414"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"16¶A6InterfaceAsType"), Diff(INSERT,"24¶¶A6AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9104477611940298¶"), Diff(INSERT,"26666666666666666"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"24"), Diff(INSERT,"16"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2422" _type="PauseCommand" date="Sat Apr 16 09:04:04 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147076887">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2124]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2421" _type="ConsoleOutput" date="Sat Apr 16 09:04:04 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147076887" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@54542b66 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶A6MnemonicNames did not pass completely:See console trace about lines failing  this check%0.9967266775777414¶Test execution time (ms):24¶¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.26666666666666666¶Test execution time (ms):16"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@54542b66 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2424" _type="PauseCommand" date="Sat Apr 16 09:04:14 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="147087032">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10145]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2423" _type="ShellCommand" date="Sat Apr 16 09:04:14 EDT 2022" starttimestamp="1649967167317" timestamp="147087032" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1966" _type="Insert" date="Fri Apr 15 23:18:38 EDT 2022" docASTNodeCount="1262" docActiveCodeLength="9190" docExpressionCount="890" docLength="10306" length="42" offset="6714" repeat="42" starttimestamp="1649967167317" timestamp="111951000" timestamp2="111959807">
    <text><![CDATA[SEND NEW MECHANISM TO A CLIENT FROM SERVER]]></text>
  </DocumentChange>
  <DocumentChange __id="2059" _type="Insert" date="Fri Apr 15 23:18:50 EDT 2022" docASTNodeCount="1262" docActiveCodeLength="9191" docExpressionCount="890" docLength="10307" length="1" offset="6758" starttimestamp="1649967167317" timestamp="111963490">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="2426" _type="PauseCommand" date="Sat Apr 16 09:04:57 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="147129850">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[42818]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2428" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="147131148" />
  <Command __id="2430" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:04:58 EDT 2022" starttimestamp="1649967167317" timestamp="147131156" />
  <Command __id="2432" _type="PauseCommand" date="Sat Apr 16 09:04:59 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147132319">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1163]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2431" _type="ShellCommand" date="Sat Apr 16 09:04:59 EDT 2022" starttimestamp="1649967167317" timestamp="147132319" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2434" _type="PauseCommand" date="Sat Apr 16 09:05:07 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="147140325">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8005]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2433" _type="ShellCommand" date="Sat Apr 16 09:05:07 EDT 2022" starttimestamp="1649967167317" timestamp="147140324" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2436" _type="PauseCommand" date="Sat Apr 16 09:05:41 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="147174579">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[34255]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2435" _type="MoveCaretCommand" caretOffset="2795" date="Sat Apr 16 09:05:41 EDT 2022" docOffset="4087" starttimestamp="1649967167317" timestamp="147174579" />
  <Command __id="2438" _type="ShellCommand" date="Sat Apr 16 09:05:42 EDT 2022" starttimestamp="1649967167317" timestamp="147175575" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2440" _type="PauseCommand" date="Sat Apr 16 09:05:46 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147179582">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4007]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2439" _type="FindCommand" caseSensitive="false" date="Sat Apr 16 09:05:46 EDT 2022" forward="false" matchWord="false" offset="4087" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="147179582" wrapSearch="false">
    <searchString><![CDATA[e ]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2442" _type="PauseCommand" date="Sat Apr 16 09:05:47 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147180645">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1063]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2441" _type="FindCommand" caseSensitive="false" date="Sat Apr 16 09:05:47 EDT 2022" forward="false" matchWord="false" offset="3166" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="147180645" wrapSearch="false">
    <searchString><![CDATA[e ]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2443" _type="FindCommand" caseSensitive="false" date="Sat Apr 16 09:05:48 EDT 2022" forward="false" matchWord="false" offset="3166" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="147181518" wrapSearch="false">
    <searchString><![CDATA[e ]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2445" _type="PauseCommand" date="Sat Apr 16 09:05:50 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147183521">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2003]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2444" _type="FindCommand" caseSensitive="false" date="Sat Apr 16 09:05:50 EDT 2022" forward="true" matchWord="false" offset="3166" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="147183521" wrapSearch="false">
    <searchString><![CDATA[e ]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2446" _type="FindCommand" caseSensitive="false" date="Sat Apr 16 09:05:51 EDT 2022" forward="true" matchWord="false" offset="8" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="147184421" wrapSearch="false">
    <searchString><![CDATA[e ]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2447" _type="FindCommand" caseSensitive="false" date="Sat Apr 16 09:05:52 EDT 2022" forward="true" matchWord="false" offset="1789" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="147185283" wrapSearch="false">
    <searchString><![CDATA[e ]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2448" _type="FindCommand" caseSensitive="false" date="Sat Apr 16 09:05:53 EDT 2022" forward="true" matchWord="false" offset="3166" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="147186160" wrapSearch="false">
    <searchString><![CDATA[e ]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2450" _type="PauseCommand" date="Sat Apr 16 09:05:54 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147187559">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1399]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2449" _type="ShellCommand" date="Sat Apr 16 09:05:54 EDT 2022" starttimestamp="1649967167317" timestamp="147187559" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2452" _type="PauseCommand" date="Sat Apr 16 09:05:59 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147192420">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4861]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2451" _type="MoveCaretCommand" caretOffset="1645" date="Sat Apr 16 09:05:59 EDT 2022" docOffset="2937" starttimestamp="1649967167317" timestamp="147192420" />
  <Command __id="2425" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:04:57 EDT 2022" docASTNodeCount="551" docActiveCodeLength="3777" docExpressionCount="382" docLength="4121" projectName="A6" starttimestamp="1649967167317" timestamp="147129850">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new exampleClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception e) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {
		System.out.println("client channel has written");
	}

	@Override
	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
				
	}

	
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

}]]></snapshot>
  </Command>
  <Command __id="2454" _type="PauseCommand" date="Sat Apr 16 09:06:01 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147194204">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1784]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2455" _type="InsertStringCommand" date="Sat Apr 16 09:06:01 EDT 2022" starttimestamp="1649967167317" timestamp="147194209" timestamp2="147194209">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2457" _type="InsertStringCommand" date="Sat Apr 16 09:06:01 EDT 2022" starttimestamp="1649967167317" timestamp="147194534" timestamp2="147194534">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2459" _type="InsertStringCommand" date="Sat Apr 16 09:06:02 EDT 2022" starttimestamp="1649967167317" timestamp="147194785" timestamp2="147194785">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2462" _type="PauseCommand" date="Sat Apr 16 09:06:03 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147195965">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1180]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2461" _type="InsertStringCommand" date="Sat Apr 16 09:06:03 EDT 2022" starttimestamp="1649967167317" timestamp="147195965" timestamp2="147195965">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2464" _type="InsertStringCommand" date="Sat Apr 16 09:06:03 EDT 2022" starttimestamp="1649967167317" timestamp="147196168" timestamp2="147196168">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2466" _type="InsertStringCommand" date="Sat Apr 16 09:06:03 EDT 2022" starttimestamp="1649967167317" timestamp="147196250" timestamp2="147196250">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2468" _type="InsertStringCommand" date="Sat Apr 16 09:06:03 EDT 2022" starttimestamp="1649967167317" timestamp="147196323" timestamp2="147196323">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2470" _type="InsertStringCommand" date="Sat Apr 16 09:06:03 EDT 2022" starttimestamp="1649967167317" timestamp="147196387" timestamp2="147196387">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2472" _type="PauseCommand" date="Sat Apr 16 09:06:07 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147199683">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3296]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2471" _type="MoveCaretCommand" caretOffset="1647" date="Sat Apr 16 09:06:07 EDT 2022" docOffset="2939" starttimestamp="1649967167317" timestamp="147199683" />
  <Command __id="2474" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:06:07 EDT 2022" starttimestamp="1649967167317" timestamp="147200438" />
  <Command __id="2475" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sat Apr 16 09:06:08 EDT 2022" starttimestamp="1649967167317" timestamp="147200818" />
  <Command __id="2477" _type="InsertStringCommand" date="Sat Apr 16 09:06:08 EDT 2022" starttimestamp="1649967167317" timestamp="147201028" timestamp2="147201028">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2479" _type="PauseCommand" date="Sat Apr 16 09:06:10 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147202702">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1674]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2478" _type="MoveCaretCommand" caretOffset="1662" date="Sat Apr 16 09:06:10 EDT 2022" docOffset="2954" starttimestamp="1649967167317" timestamp="147202702" />
  <Command __id="2481" _type="InsertStringCommand" date="Sat Apr 16 09:06:10 EDT 2022" starttimestamp="1649967167317" timestamp="147203223" timestamp2="147203223">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2483" _type="InsertStringCommand" date="Sat Apr 16 09:06:11 EDT 2022" starttimestamp="1649967167317" timestamp="147203869" timestamp2="147203869">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2485" _type="InsertStringCommand" date="Sat Apr 16 09:06:11 EDT 2022" starttimestamp="1649967167317" timestamp="147204102" timestamp2="147204102">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2487" _type="InsertStringCommand" date="Sat Apr 16 09:06:11 EDT 2022" starttimestamp="1649967167317" timestamp="147204264" timestamp2="147204264">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2489" _type="InsertStringCommand" date="Sat Apr 16 09:06:11 EDT 2022" starttimestamp="1649967167317" timestamp="147204438" timestamp2="147204438">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2491" _type="InsertStringCommand" date="Sat Apr 16 09:06:11 EDT 2022" starttimestamp="1649967167317" timestamp="147204528" timestamp2="147204528">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2493" _type="InsertStringCommand" date="Sat Apr 16 09:06:11 EDT 2022" starttimestamp="1649967167317" timestamp="147204564" timestamp2="147204564">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2495" _type="InsertStringCommand" date="Sat Apr 16 09:06:11 EDT 2022" starttimestamp="1649967167317" timestamp="147204655" timestamp2="147204655">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2497" _type="PauseCommand" date="Sat Apr 16 09:06:13 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147205987">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1332]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2496" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:06:13 EDT 2022" starttimestamp="1649967167317" timestamp="147205987" />
  <Command __id="2498" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:06:13 EDT 2022" starttimestamp="1649967167317" timestamp="147206090" />
  <Command __id="2499" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:06:13 EDT 2022" starttimestamp="1649967167317" timestamp="147206131" />
  <Command __id="2501" _type="PauseCommand" date="Sat Apr 16 09:06:18 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147210808">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4677]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2500" _type="ShellCommand" date="Sat Apr 16 09:06:18 EDT 2022" starttimestamp="1649967167317" timestamp="147210808" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2503" _type="PauseCommand" date="Sat Apr 16 09:06:19 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147212183">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1375]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2507" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:06:22 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="147215264" type="Run" />
  <Command __id="2509" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:06:22 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="147215264" type="Run" />
  <Command __id="2510" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:06:22 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147215477" type="Run" />
  <Command __id="2511" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:06:22 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147215488" type="Run" />
  <Command __id="2512" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:06:22 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147215491" type="Run" />
  <Command __id="2514" _type="PauseCommand" date="Sat Apr 16 09:06:26 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147218683">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3192]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2515" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:06:27 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147220528" type="Run" />
  <Command __id="2517" _type="ConsoleOutput" date="Sat Apr 16 09:06:27 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147220643" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sat Apr 16 09:06:27 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@54542b66 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Sat Apr 16 09:06:27 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2519" _type="PauseCommand" date="Sat Apr 16 09:06:31 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147224469">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3826]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2518" _type="ConsoleOutput" date="Sat Apr 16 09:06:31 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147224469" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:124
Running second pass checks Sat Apr 16 09:06:31 EDT 2022
Start O(n2) inter- and intra class method calls:Sat Apr 16 09:06:31 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:124¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Sat Apr 16 09:06:"), Diff(DELETE,"27"), Diff(INSERT,"31 EDT 2022¶Start O(n2) inter- and intra class method calls:Sat Apr 16 09:06:31"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2520" _type="ConsoleOutput" date="Sat Apr 16 09:06:31 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147224567" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sat Apr 16 09:06:31 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:124¶Running second pass checks Sat Apr 16 09:06:31 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sat Apr 16 09:06:31 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2522" _type="PauseCommand" date="Sat Apr 16 09:06:34 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147226876">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2309]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2521" _type="ConsoleOutput" date="Sat Apr 16 09:06:34 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147226876" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sat Apr 16 09:06:34 EDT 2022
Generating checks:Sat Apr 16 09:06:34 EDT 2022
Finished Generating checks:Sat Apr 16 09:06:34 EDT 2022
Generating externals:Sat Apr 16 09:06:34 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Sat Apr 16 09:06:34 EDT 2022¶Generating checks:Sat Apr 16 09:06:34 EDT 2022¶Finished Generating checks:Sat Apr 16 09:06:34 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Sat Apr 16 09:06:3"), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2523" _type="ConsoleOutput" date="Sat Apr 16 09:06:34 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147227534" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sat Apr 16 09:06:34 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):6944
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Sat Apr 16 09:06:34 EDT 2022¶"), Diff(DELETE,"Generating checks:Sat Apr 16 09:06:34 EDT 2022¶Finished Generat"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found "), Diff(EQUAL,"in"), Diff(DELETE,"g"), Diff(EQUAL," checks"), Diff(DELETE,":Sat Apr 16 09:06:34 EDT 2022¶Generating externals:Sat Apr 16 09:06:34 EDT 2022"), Diff(INSERT,"tyle text, see traced console output%0.0¶¶Test execution time (ms):6944"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2524" _type="ConsoleOutput" date="Sat Apr 16 09:06:34 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147227614" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):40

A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286
Test execution time (ms):21
A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298

Test execution time (ms):18
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sat Apr 16 09:06:34 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warn"), Diff(INSERT,"Test execution time (ms):40¶¶A6PublicMethodsOverride did not pass completely:See console trace about l"), Diff(EQUAL,"in"), Diff(DELETE,"g"), Diff(INSERT,"e"), Diff(EQUAL,"s f"), Diff(DELETE,"ound in checkstyle text, see traced console output%0.0"), Diff(INSERT,"ailing  this check%0.9285714285714286¶Test execution time (ms):21¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"6944"), Diff(INSERT,"18"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2525" _type="ConsoleOutput" date="Sat Apr 16 09:06:35 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147227747" type="ConsoleOutput">
    <outputString><![CDATA[A6MnemonicNames did not pass completely:See console trace about lines failing  this check%0.9967266775777414

Test execution time (ms):15
A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.26666666666666666

Test execution time (ms):12
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):40¶¶A6PublicMethodsOverride"), Diff(INSERT,"A6MnemonicNames"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0.9"), Diff(DELETE,"285714285714286"), Diff(INSERT,"967266775777414¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"2"), Diff(EQUAL,"1"), Diff(INSERT,"5"), Diff(EQUAL,"¶A6"), Diff(DELETE,"InterfaceAsType"), Diff(INSERT,"AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9104477611940298"), Diff(INSERT,"26666666666666666"), Diff(EQUAL,"¶¶Test execution time (ms):1"), Diff(DELETE,"8"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2527" _type="PauseCommand" date="Sat Apr 16 09:06:36 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147229630">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1883]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2526" _type="ConsoleOutput" date="Sat Apr 16 09:06:36 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147229630" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6MnemonicNames@12360fda . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6MnemonicNames did not pass completely:See console trace about lines failing  this check%0.9967266775777414¶¶Test execution time (ms):15¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.26666666666666666¶¶Test execution time (ms):12"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6MnemonicNames@12360fda . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2529" _type="PauseCommand" date="Sat Apr 16 09:06:39 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147232640">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3010]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="2530" _type="ShellCommand" date="Sat Apr 16 09:06:44 EDT 2022" starttimestamp="1649967167317" timestamp="147236840" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2533" _type="PauseCommand" date="Sat Apr 16 09:06:55 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="147247994">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11154]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2532" _type="MoveCaretCommand" caretOffset="1735" date="Sat Apr 16 09:06:55 EDT 2022" docOffset="3027" starttimestamp="1649967167317" timestamp="147247994" />
  <Command __id="2535" _type="PauseCommand" date="Sat Apr 16 09:08:19 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="147332192">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[84198]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2559" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:08:23 EDT 2022" starttimestamp="1649967167317" timestamp="147336538" />
  <Command __id="2561" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:08:23 EDT 2022" starttimestamp="1649967167317" timestamp="147336543" />
  <Command __id="2563" _type="PauseCommand" date="Sat Apr 16 09:08:26 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147339110">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2567]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2562" _type="MoveCaretCommand" caretOffset="2080" date="Sat Apr 16 09:08:26 EDT 2022" docOffset="2080" starttimestamp="1649967167317" timestamp="147339110" />
  <Command __id="2565" _type="PauseCommand" date="Sat Apr 16 09:10:23 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="147455703">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[116593]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2564" _type="MoveCaretCommand" caretOffset="2082" date="Sat Apr 16 09:10:23 EDT 2022" docOffset="2082" starttimestamp="1649967167317" timestamp="147455703" />
  <Command __id="2567" _type="PauseCommand" date="Sat Apr 16 09:10:29 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="147462262">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6559]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2568" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:10:45 EDT 2022" starttimestamp="1649967167317" timestamp="147478034" />
  <Command __id="2570" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:10:45 EDT 2022" starttimestamp="1649967167317" timestamp="147478057" />
  <Command __id="2571" _type="ShellCommand" date="Sat Apr 16 09:10:45 EDT 2022" starttimestamp="1649967167317" timestamp="147478066" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2573" _type="MoveCaretCommand" caretOffset="0" date="Sat Apr 16 09:10:45 EDT 2022" docOffset="0" starttimestamp="1649967167317" timestamp="147478635" />
  <Command __id="2575" _type="PauseCommand" date="Sat Apr 16 09:10:50 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147483432">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4797]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2574" _type="SelectTextCommand" caretOffset="40" date="Sat Apr 16 09:10:50 EDT 2022" end="59" start="40" starttimestamp="1649967167317" timestamp="147483432" />
  <Command __id="2576" _type="CopyCommand" date="Sat Apr 16 09:10:50 EDT 2022" starttimestamp="1649967167317" timestamp="147483643" />
  <Command __id="2578" _type="MoveCaretCommand" caretOffset="2082" date="Sat Apr 16 09:10:51 EDT 2022" docOffset="2082" starttimestamp="1649967167317" timestamp="147484581" />
  <Command __id="2580" _type="PauseCommand" date="Sat Apr 16 09:10:59 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="147492104">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7523]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2579" _type="MoveCaretCommand" caretOffset="1507" date="Sat Apr 16 09:10:59 EDT 2022" docOffset="1507" starttimestamp="1649967167317" timestamp="147492104" />
  <Command __id="2582" _type="InsertStringCommand" date="Sat Apr 16 09:10:59 EDT 2022" starttimestamp="1649967167317" timestamp="147492586" timestamp2="147492586">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2584" _type="InsertStringCommand" date="Sat Apr 16 09:11:00 EDT 2022" starttimestamp="1649967167317" timestamp="147492746" timestamp2="147492746">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2586" _type="PasteCommand" date="Sat Apr 16 09:11:00 EDT 2022" starttimestamp="1649967167317" timestamp="147492966" />
  <Command __id="2587" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:11:01 EDT 2022" starttimestamp="1649967167317" timestamp="147493824" />
  <Command __id="2588" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:11:01 EDT 2022" starttimestamp="1649967167317" timestamp="147493921" />
  <Command __id="2589" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:11:01 EDT 2022" starttimestamp="1649967167317" timestamp="147493982" />
  <Command __id="2591" _type="PauseCommand" date="Sat Apr 16 09:11:05 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147498651">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4669]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2590" _type="ShellCommand" date="Sat Apr 16 09:11:05 EDT 2022" starttimestamp="1649967167317" timestamp="147498651" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2592" _type="ShellCommand" date="Sat Apr 16 09:11:06 EDT 2022" starttimestamp="1649967167317" timestamp="147498793" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2596" _type="SelectTextCommand" caretOffset="40" date="Sat Apr 16 09:11:06 EDT 2022" end="59" start="40" starttimestamp="1649967167317" timestamp="147498974" />
  <Command __id="2598" _type="PauseCommand" date="Sat Apr 16 09:11:07 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147500281">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1307]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2597" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:11:07 EDT 2022" starttimestamp="1649967167317" timestamp="147500281" />
  <Command __id="2599" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:11:07 EDT 2022" starttimestamp="1649967167317" timestamp="147500381" />
  <Command __id="2600" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:11:07 EDT 2022" starttimestamp="1649967167317" timestamp="147500414" />
  <DocumentChange __id="2453" _type="Insert" date="Sat Apr 16 09:06:01 EDT 2022" docASTNodeCount="551" docActiveCodeLength="3785" docExpressionCount="382" docLength="4129" length="8" offset="2937" repeat="8" starttimestamp="1649967167317" timestamp="147194204" timestamp2="147196381">
    <text><![CDATA[xecption]]></text>
  </DocumentChange>
  <DocumentChange __id="2473" _type="Delete" date="Sat Apr 16 09:06:07 EDT 2022" docASTNodeCount="551" docActiveCodeLength="3784" docExpressionCount="382" docLength="4128" endLine="74" length="1" offset="2938" startLine="74" starttimestamp="1649967167317" timestamp="147200434">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="2476" _type="Insert" date="Sat Apr 16 09:06:08 EDT 2022" docASTNodeCount="551" docActiveCodeLength="3785" docExpressionCount="382" docLength="4129" length="1" offset="2939" starttimestamp="1649967167317" timestamp="147201024">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="2480" _type="Insert" date="Sat Apr 16 09:06:10 EDT 2022" docASTNodeCount="551" docActiveCodeLength="3793" docExpressionCount="382" docLength="4137" length="8" offset="2954" repeat="8" starttimestamp="1649967167317" timestamp="147203218" timestamp2="147204651">
    <text><![CDATA[xception]]></text>
  </DocumentChange>
  <DocumentChange __id="2536" _type="Insert" date="Sat Apr 16 09:08:19 EDT 2022" docASTNodeCount="553" docActiveCodeLength="3805" docExpressionCount="384" docLength="4149" length="12" offset="2082" repeat="10" starttimestamp="1649967167317" timestamp="147332534" timestamp2="147334566">
    <text><![CDATA[
	@Override]]></text>
  </DocumentChange>
  <Command __id="2572" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:10:45 EDT 2022" docASTNodeCount="6" docActiveCodeLength="68" docExpressionCount="2" docLength="68" projectName="A6" starttimestamp="1649967167317" timestamp="147478346">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\FakeClientInterface.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

public interface FakeClientInterface {

}
]]></snapshot>
  </Command>
  <Command __id="2577" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:10:51 EDT 2022" docASTNodeCount="553" docActiveCodeLength="3805" docExpressionCount="384" docLength="4149" projectName="A6" starttimestamp="1649967167317" timestamp="147484503">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶"), Diff(INSERT,"	@Override¶"), Diff(EQUAL,"	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e"), Diff(INSERT,"xception"), Diff(EQUAL,") {¶			e"), Diff(INSERT,"xception"), Diff(EQUAL,".printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new exampleClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶				¶	}¶¶	¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	@Override
	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException exception) {
			exception.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new exampleClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception e) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {
		System.out.println("client channel has written");
	}

	@Override
	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
				
	}

	
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

}]]></snapshot>
  </Command>
  <DocumentChange __id="2581" _type="Insert" date="Sat Apr 16 09:10:59 EDT 2022" docASTNodeCount="555" docActiveCodeLength="3826" docExpressionCount="385" docLength="4170" length="21" offset="1507" repeat="3" starttimestamp="1649967167317" timestamp="147492580" timestamp2="147492958">
    <text><![CDATA[, FakeClientInterface]]></text>
  </DocumentChange>
  <Command __id="2593" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:11:06 EDT 2022" docASTNodeCount="6" docActiveCodeLength="68" docExpressionCount="2" docLength="68" projectName="A6" starttimestamp="1649967167317" timestamp="147498842">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\FakeClientInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶public interface FakeClientInterface {¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2594" _type="Insert" date="Sat Apr 16 09:11:06 EDT 2022" docASTNodeCount="9" docActiveCodeLength="93" docExpressionCount="3" docLength="93" length="25" offset="61" repeat="2" starttimestamp="1649967167317" timestamp="147498880" timestamp2="147498881">
    <text><![CDATA[

	void processInput();]]></text>
  </DocumentChange>
  <Command __id="2602" _type="PauseCommand" date="Sat Apr 16 09:11:09 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147501697">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1283]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2603" _type="MoveCaretCommand" caretOffset="1528" date="Sat Apr 16 09:11:09 EDT 2022" docOffset="1528" starttimestamp="1649967167317" timestamp="147501785" />
  <Command __id="2605" _type="PauseCommand" date="Sat Apr 16 09:14:47 EDT 2022" range="2m-5m" starttimestamp="1649967167317" timestamp="147720465">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[218680]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2604" _type="MoveCaretCommand" caretOffset="2304" date="Sat Apr 16 09:14:47 EDT 2022" docOffset="2304" starttimestamp="1649967167317" timestamp="147720465" />
  <Command __id="2607" _type="PauseCommand" date="Sat Apr 16 09:14:54 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="147727142">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6677]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2606" _type="MoveCaretCommand" caretOffset="3440" date="Sat Apr 16 09:14:54 EDT 2022" docOffset="3440" starttimestamp="1649967167317" timestamp="147727142" />
  <Command __id="2609" _type="PauseCommand" date="Sat Apr 16 09:14:58 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147730882">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3740]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2608" _type="MoveCaretCommand" caretOffset="3511" date="Sat Apr 16 09:14:58 EDT 2022" docOffset="3511" starttimestamp="1649967167317" timestamp="147730882" />
  <Command __id="2611" _type="InsertStringCommand" date="Sat Apr 16 09:14:58 EDT 2022" starttimestamp="1649967167317" timestamp="147731517" timestamp2="147731517">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2613" _type="InsertStringCommand" date="Sat Apr 16 09:14:59 EDT 2022" starttimestamp="1649967167317" timestamp="147731791" timestamp2="147731791">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2615" _type="InsertStringCommand" date="Sat Apr 16 09:14:59 EDT 2022" starttimestamp="1649967167317" timestamp="147732004" timestamp2="147732004">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2617" _type="InsertStringCommand" date="Sat Apr 16 09:14:59 EDT 2022" starttimestamp="1649967167317" timestamp="147732114" timestamp2="147732114">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2619" _type="InsertStringCommand" date="Sat Apr 16 09:14:59 EDT 2022" starttimestamp="1649967167317" timestamp="147732273" timestamp2="147732273">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2621" _type="InsertStringCommand" date="Sat Apr 16 09:14:59 EDT 2022" starttimestamp="1649967167317" timestamp="147732360" timestamp2="147732360">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2623" _type="InsertStringCommand" date="Sat Apr 16 09:14:59 EDT 2022" starttimestamp="1649967167317" timestamp="147732425" timestamp2="147732425">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2625" _type="InsertStringCommand" date="Sat Apr 16 09:14:59 EDT 2022" starttimestamp="1649967167317" timestamp="147732526" timestamp2="147732526">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2626" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:15:00 EDT 2022" starttimestamp="1649967167317" timestamp="147733117" />
  <Command __id="2627" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:15:00 EDT 2022" starttimestamp="1649967167317" timestamp="147733271" />
  <Command __id="2628" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:15:00 EDT 2022" starttimestamp="1649967167317" timestamp="147733307" />
  <Command __id="2630" _type="PauseCommand" date="Sat Apr 16 09:15:31 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="147764159">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[30852]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2629" _type="ShellCommand" date="Sat Apr 16 09:15:31 EDT 2022" starttimestamp="1649967167317" timestamp="147764159" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2632" _type="PauseCommand" date="Sat Apr 16 09:15:32 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147765435">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1276]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2636" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:15:35 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="147767781" type="Run" />
  <Command __id="2638" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:15:35 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="147767781" type="Run" />
  <Command __id="2639" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:15:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147767892" type="Run" />
  <Command __id="2640" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:15:35 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147767906" type="Run" />
  <Command __id="2641" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:15:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147767908" type="Run" />
  <Command __id="2643" _type="PauseCommand" date="Sat Apr 16 09:15:37 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147770178">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2270]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2644" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:15:39 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147772255" type="Run" />
  <Command __id="2646" _type="ConsoleOutput" date="Sat Apr 16 09:15:39 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147772354" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sat Apr 16 09:15:39 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6MnemonicNames@12360fda . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Sat Apr 16 09:15:39 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2648" _type="PauseCommand" date="Sat Apr 16 09:15:42 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147775120">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2766]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2647" _type="ConsoleOutput" date="Sat Apr 16 09:15:42 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147775120" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:125
Running second pass checks Sat Apr 16 09:15:42 EDT 2022
Start O(n2) inter- and intra class method calls:Sat Apr 16 09:15:42 EDT 2022
End O(n2) inter- and intra class method calls:Sat Apr 16 09:15:42 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:125¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":Sat Apr 16 09:15:39"), Diff(INSERT," Sat Apr 16 09:15:42 EDT 2022¶Start O(n2) inter- and intra class method calls:Sat Apr 16 09:15:42 EDT 2022¶End O(n2) inter- and intra class method calls:Sat Apr 16 09:15:42"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2650" _type="PauseCommand" date="Sat Apr 16 09:15:44 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147776745">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1625]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2649" _type="ConsoleOutput" date="Sat Apr 16 09:15:44 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147776745" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sat Apr 16 09:15:43 EDT 2022
Generating checks:Sat Apr 16 09:15:43 EDT 2022
Finished Generating checks:Sat Apr 16 09:15:43 EDT 2022
Generating externals:Sat Apr 16 09:15:43 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:125¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Sat Apr 16 09:15:4"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating check"), Diff(EQUAL,"s:Sat Apr 16 09:15:4"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished Generating checks:Sat Apr 16 09:15:43 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Sat Apr 16 09:15:4"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2651" _type="ConsoleOutput" date="Sat Apr 16 09:15:44 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147777201" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sat Apr 16 09:15:44 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):4887
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Sat Apr 16 09:15:4"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating checks:Sat Apr 16 09:15:43 EDT 2022¶Finished Generat"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found "), Diff(EQUAL,"in"), Diff(DELETE,"g"), Diff(EQUAL," checks"), Diff(DELETE,":Sat Apr 16 09:15:43 EDT 2022¶Generating externals:Sat Apr 16 09:15:43 EDT 2022"), Diff(INSERT,"tyle text, see traced console output%0.0¶¶Test execution time (ms):4887"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2652" _type="ConsoleOutput" date="Sat Apr 16 09:15:44 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147777261" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21
A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286

Test execution time (ms):14
A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298

Test execution time (ms):11
Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sat Apr 16 09:15:44 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):4887"), Diff(INSERT,"Test execution time (ms):21¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286¶¶Test execution time (ms):14¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298¶¶Test execution time (ms):11¶Test execution time (ms):9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2653" _type="ConsoleOutput" date="Sat Apr 16 09:15:44 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147777336" type="ConsoleOutput">
    <outputString><![CDATA[
A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.2857142857142857
Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):21¶A6PublicMethodsOverride"), Diff(INSERT,"¶A6AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9"), Diff(EQUAL,"28571428571428"), Diff(DELETE,"6¶¶Test execution time (ms):14¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298¶"), Diff(INSERT,"57"), Diff(EQUAL,"¶Test execution time (ms):11¶"), Diff(DELETE,"Test execution time (ms):9¶")]]]></diff>
  </Command>
  <Command __id="2655" _type="PauseCommand" date="Sat Apr 16 09:15:49 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="147782395">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5059]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2654" _type="ConsoleOutput" date="Sat Apr 16 09:15:49 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147782395" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@7374fa65 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.2857142857142857¶Test execution time (ms):11"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@7374fa65 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2657" _type="PauseCommand" date="Sat Apr 16 09:16:03 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="147795816">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13421]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2656" _type="ShellCommand" date="Sat Apr 16 09:16:03 EDT 2022" starttimestamp="1649967167317" timestamp="147795816" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2659" _type="PauseCommand" date="Sat Apr 16 09:16:11 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="147804519">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8703]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2658" _type="MoveCaretCommand" caretOffset="4045" date="Sat Apr 16 09:16:11 EDT 2022" docOffset="4045" starttimestamp="1649967167317" timestamp="147804519" />
  <Command __id="2661" _type="InsertStringCommand" date="Sat Apr 16 09:16:12 EDT 2022" starttimestamp="1649967167317" timestamp="147805255" timestamp2="147805255">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2663" _type="InsertStringCommand" date="Sat Apr 16 09:16:12 EDT 2022" starttimestamp="1649967167317" timestamp="147805556" timestamp2="147805556">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="2665" _type="InsertStringCommand" date="Sat Apr 16 09:16:13 EDT 2022" starttimestamp="1649967167317" timestamp="147805710" timestamp2="147805710">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2667" _type="InsertStringCommand" date="Sat Apr 16 09:16:13 EDT 2022" starttimestamp="1649967167317" timestamp="147805861" timestamp2="147805861">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2669" _type="InsertStringCommand" date="Sat Apr 16 09:16:13 EDT 2022" starttimestamp="1649967167317" timestamp="147805983" timestamp2="147805983">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2671" _type="InsertStringCommand" date="Sat Apr 16 09:16:13 EDT 2022" starttimestamp="1649967167317" timestamp="147806148" timestamp2="147806148">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2673" _type="InsertStringCommand" date="Sat Apr 16 09:16:13 EDT 2022" starttimestamp="1649967167317" timestamp="147806271" timestamp2="147806271">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2675" _type="InsertStringCommand" date="Sat Apr 16 09:16:13 EDT 2022" starttimestamp="1649967167317" timestamp="147806377" timestamp2="147806377">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2677" _type="InsertStringCommand" date="Sat Apr 16 09:16:13 EDT 2022" starttimestamp="1649967167317" timestamp="147806531" timestamp2="147806531">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2679" _type="PauseCommand" date="Sat Apr 16 09:16:16 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147809657">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3126]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2678" _type="ShellCommand" date="Sat Apr 16 09:16:16 EDT 2022" starttimestamp="1649967167317" timestamp="147809657" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2680" _type="ShellCommand" date="Sat Apr 16 09:16:17 EDT 2022" starttimestamp="1649967167317" timestamp="147809790" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2690" _type="SelectTextCommand" caretOffset="139" date="Sat Apr 16 09:16:17 EDT 2022" end="139" start="120" starttimestamp="1649967167317" timestamp="147809984" />
  <Command __id="2692" _type="PauseCommand" date="Sat Apr 16 09:16:18 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147811496">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1512]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2691" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:16:18 EDT 2022" starttimestamp="1649967167317" timestamp="147811496" />
  <Command __id="2693" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:16:18 EDT 2022" starttimestamp="1649967167317" timestamp="147811590" />
  <Command __id="2694" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:16:18 EDT 2022" starttimestamp="1649967167317" timestamp="147811617" />
  <Command __id="2696" _type="MoveCaretCommand" caretOffset="4054" date="Sat Apr 16 09:16:19 EDT 2022" docOffset="4054" starttimestamp="1649967167317" timestamp="147812412" />
  <Command __id="2697" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:16:19 EDT 2022" starttimestamp="1649967167317" timestamp="147812636" />
  <Command __id="2698" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:16:19 EDT 2022" starttimestamp="1649967167317" timestamp="147812640" />
  <Command __id="2699" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:16:20 EDT 2022" starttimestamp="1649967167317" timestamp="147812922" />
  <Command __id="2700" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:16:20 EDT 2022" starttimestamp="1649967167317" timestamp="147813652" />
  <Command __id="2701" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:16:21 EDT 2022" starttimestamp="1649967167317" timestamp="147813695" />
  <Command __id="2703" _type="PauseCommand" date="Sat Apr 16 09:16:25 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147817874">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4179]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2702" _type="ShellCommand" date="Sat Apr 16 09:16:25 EDT 2022" starttimestamp="1649967167317" timestamp="147817874" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2705" _type="PauseCommand" date="Sat Apr 16 09:16:29 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147821704">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3830]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2704" _type="ConsoleOutput" date="Sat Apr 16 09:16:29 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147821704" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@23f4f71 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6"), Diff(DELETE,"InterfaceAsType@7374fa65"), Diff(INSERT,"PublicMethodsOverride@23f4f71"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2707" _type="PauseCommand" date="Sat Apr 16 09:16:30 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147823314">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1610]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2711" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:16:32 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="147825337" type="Run" />
  <Command __id="2713" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:16:32 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="147825337" type="Run" />
  <Command __id="2714" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:16:32 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147825442" type="Run" />
  <Command __id="2715" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:16:32 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147825456" type="Run" />
  <Command __id="2716" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:16:32 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147825459" type="Run" />
  <Command __id="2718" _type="PauseCommand" date="Sat Apr 16 09:16:35 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147827962">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2503]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2719" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:16:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="147829791" type="Run" />
  <Command __id="2721" _type="ConsoleOutput" date="Sat Apr 16 09:16:37 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147829903" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sat Apr 16 09:16:37 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@23f4f71 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Sat Apr 16 09:16:37 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2723" _type="PauseCommand" date="Sat Apr 16 09:16:40 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147832751">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2848]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2722" _type="ConsoleOutput" date="Sat Apr 16 09:16:40 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147832751" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:125
Running second pass checks Sat Apr 16 09:16:39 EDT 2022
Start O(n2) inter- and intra class method calls:Sat Apr 16 09:16:39 EDT 2022
End O(n2) inter- and intra class method calls:Sat Apr 16 09:16:40 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:125¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":Sat Apr 16 09:16:37"), Diff(INSERT," Sat Apr 16 09:16:39 EDT 2022¶Start O(n2) inter- and intra class method calls:Sat Apr 16 09:16:39 EDT 2022¶End O(n2) inter- and intra class method calls:Sat Apr 16 09:16:40"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2725" _type="PauseCommand" date="Sat Apr 16 09:16:42 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147834693">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1942]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2724" _type="ConsoleOutput" date="Sat Apr 16 09:16:42 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147834693" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sat Apr 16 09:16:41 EDT 2022
Generating checks:Sat Apr 16 09:16:41 EDT 2022
Finished Generating checks:Sat Apr 16 09:16:41 EDT 2022
Generating externals:Sat Apr 16 09:16:41 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:125¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Sat Apr 16 09:16:"), Diff(DELETE,"39"), Diff(INSERT,"41"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating check"), Diff(EQUAL,"s:Sat Apr 16 09:16:"), Diff(DELETE,"39"), Diff(INSERT,"41"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished Generating checks:Sat Apr 16 09:16:41 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Sat Apr 16 09:16:4"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2726" _type="ConsoleOutput" date="Sat Apr 16 09:16:42 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147835204" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sat Apr 16 09:16:42 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):5352
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Sat Apr 16 09:16:4"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating checks:Sat Apr 16 09:16:41 EDT 2022¶Finished Generat"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found "), Diff(EQUAL,"in"), Diff(DELETE,"g"), Diff(EQUAL," checks"), Diff(DELETE,":Sat Apr 16 09:16:41 EDT 2022¶Generating externals:Sat Apr 16 09:16:41 EDT 202"), Diff(INSERT,"tyle text, see traced console output%0.0¶¶Test execution time (ms):535"), Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="2727" _type="ConsoleOutput" date="Sat Apr 16 09:16:42 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147835262" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
Test execution time (ms):19

A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298
Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sat Apr 16 09:16:42 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶"), Diff(INSERT,"Test execution time (ms):24¶Test execution time (ms):19¶¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9104477611940298"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"5352"), Diff(INSERT,"11"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2728" _type="ConsoleOutput" date="Sat Apr 16 09:16:42 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147835338" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8

A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.2857142857142857
Test execution time (ms):12
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"24¶Test execution time (ms):19¶¶A6InterfaceAsType"), Diff(INSERT,"8¶¶A6AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9104477611940298"), Diff(INSERT,"2857142857142857"), Diff(EQUAL,"¶Test execution time (ms):1"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2730" _type="PauseCommand" date="Sat Apr 16 09:16:46 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147839381">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4043]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2729" _type="ConsoleOutput" date="Sat Apr 16 09:16:46 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="147839381" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@76d75fe5 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):8¶¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.2857142857142857¶Test execution time (ms):12"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@76d75fe5 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2732" _type="PauseCommand" date="Sat Apr 16 09:16:53 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="147846068">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6687]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2731" _type="ShellCommand" date="Sat Apr 16 09:16:53 EDT 2022" starttimestamp="1649967167317" timestamp="147846068" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2601" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:11:09 EDT 2022" docASTNodeCount="555" docActiveCodeLength="3826" docExpressionCount="385" docLength="4170" projectName="A6" starttimestamp="1649967167317" timestamp="147501697">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener"), Diff(INSERT,", FakeClientInterface"), Diff(EQUAL,"{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	@Override¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException exception) {¶			exception.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new exampleClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶				¶	}¶¶	¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener, FakeClientInterface{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	@Override
	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException exception) {
			exception.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new exampleClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception e) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {
		System.out.println("client channel has written");
	}

	@Override
	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
				
	}

	
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

}]]></snapshot>
  </Command>
  <DocumentChange __id="2610" _type="Insert" date="Sat Apr 16 09:14:58 EDT 2022" docASTNodeCount="555" docActiveCodeLength="3834" docExpressionCount="385" docLength="4178" length="8" offset="3511" repeat="8" starttimestamp="1649967167317" timestamp="147731509" timestamp2="147732521">
    <text><![CDATA[xception]]></text>
  </DocumentChange>
  <DocumentChange __id="2660" _type="Insert" date="Sat Apr 16 09:16:12 EDT 2022" docASTNodeCount="557" docActiveCodeLength="3843" docExpressionCount="387" docLength="4187" length="9" offset="4045" repeat="9" starttimestamp="1649967167317" timestamp="147805252" timestamp2="147806527">
    <text><![CDATA[@Override]]></text>
  </DocumentChange>
  <Command __id="2681" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:16:17 EDT 2022" docASTNodeCount="9" docActiveCodeLength="93" docExpressionCount="3" docLength="93" projectName="A6" starttimestamp="1649967167317" timestamp="147809836">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\FakeClientInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶public interface FakeClientInterface {¶¶"), Diff(INSERT,"	void processInput();¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

public interface FakeClientInterface {

	void processInput();

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2682" _type="Insert" date="Sat Apr 16 09:16:17 EDT 2022" docASTNodeCount="16" docActiveCodeLength="148" docExpressionCount="6" docLength="148" length="55" offset="86" repeat="2" starttimestamp="1649967167317" timestamp="147809855" timestamp2="147809855">
    <text><![CDATA[

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();]]></text>
  </DocumentChange>
  <DocumentChange __id="2684" _type="Delete" date="Sat Apr 16 09:16:17 EDT 2022" docASTNodeCount="16" docActiveCodeLength="144" docExpressionCount="6" docLength="144" endLine="2" length="4" offset="19" startLine="0" starttimestamp="1649967167317" timestamp="147809855">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="2685" _type="Insert" date="Sat Apr 16 09:16:17 EDT 2022" docASTNodeCount="30" docActiveCodeLength="228" docExpressionCount="18" docLength="228" length="84" offset="19" repeat="5" starttimestamp="1649967167317" timestamp="147809856" timestamp2="147809858">
    <text><![CDATA[

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

]]></text>
  </DocumentChange>
  <Command __id="2695" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:16:19 EDT 2022" docASTNodeCount="557" docActiveCodeLength="3843" docExpressionCount="387" docLength="4187" projectName="A6" starttimestamp="1649967167317" timestamp="147812271">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener, FakeClientInterface{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	@Override¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException exception) {¶			exception.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new exampleClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e"), Diff(INSERT,"xception"), Diff(EQUAL,") {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶				¶	}¶¶	"), Diff(INSERT,"@Override"), Diff(EQUAL,"¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener, FakeClientInterface{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	@Override
	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException exception) {
			exception.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new exampleClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception exception) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {
		System.out.println("client channel has written");
	}

	@Override
	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
				
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

}]]></snapshot>
  </Command>
  <Command __id="2734" _type="PauseCommand" date="Sat Apr 16 09:17:02 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="147854721">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8653]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2735" _type="MoveCaretCommand" caretOffset="1575" date="Sat Apr 16 09:17:02 EDT 2022" docOffset="2081" starttimestamp="1649967167317" timestamp="147854891" />
  <Command __id="2733" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:17:02 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2176" docExpressionCount="196" docLength="2373" projectName="A6" starttimestamp="1649967167317" timestamp="147854721">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import client.ClientRemoteObjectNIO;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.AnNIOManagerPrintClient;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})¶public class ClientReadThread implements ReadThreadInterface{¶	final ClientRemoteObjectNIO client;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ClientReadThread (final ClientRemoteObjectNIO aClient) {¶		client = aClient;¶	}¶	¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			String aMessageString = new String(originalMessage.array());¶			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);¶			¶			¶			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();¶			¶			¶			ProposalLearnedNotificationReceived.newCase(this, client.CLIENT_NAME, client.aProposalNumber, aMessageString);¶			commandProcessor.processCommand(aMessageString);¶			ProposedStateSet.newCase(this, client.CLIENT_NAME, client.aProposalNumber, aMessageString);¶			client.aProposalNumber++;¶		¶		}¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2737" _type="PauseCommand" date="Sat Apr 16 09:17:39 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="147892008">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[37116]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2739" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:17:40 EDT 2022" starttimestamp="1649967167317" timestamp="147893358" />
  <Command __id="2741" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:17:40 EDT 2022" starttimestamp="1649967167317" timestamp="147893364" />
  <Command __id="2743" _type="PauseCommand" date="Sat Apr 16 09:17:55 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="147907766">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[14402]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2742" _type="SelectTextCommand" caretOffset="131" date="Sat Apr 16 09:17:55 EDT 2022" end="154" start="131" starttimestamp="1649967167317" timestamp="147907766" />
  <Command __id="2745" _type="PauseCommand" date="Sat Apr 16 09:17:57 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147909793">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2027]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2744" _type="MoveCaretCommand" caretOffset="125" date="Sat Apr 16 09:17:57 EDT 2022" docOffset="372" starttimestamp="1649967167317" timestamp="147909793" />
  <Command __id="2736" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:17:39 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1478" docExpressionCount="123" docLength="1675" projectName="A6" starttimestamp="1649967167317" timestamp="147892007">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleClientReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import readThread.ReadThreadInterface;

public class exampleClientReadThread implements ReadThreadInterface{
	final AnNIOManagerPrintClient client;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public exampleClientReadThread (final AnNIOManagerPrintClient aClient) {
		client = aClient;
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			String aMessageString = new String(originalMessage.array());
			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);
			
		
		}
		
	}
	
	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <Command __id="2747" _type="PauseCommand" date="Sat Apr 16 09:17:58 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147910998">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1205]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2748" _type="InsertStringCommand" date="Sat Apr 16 09:17:58 EDT 2022" starttimestamp="1649967167317" timestamp="147911003" timestamp2="147911003">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2750" _type="InsertStringCommand" date="Sat Apr 16 09:17:58 EDT 2022" starttimestamp="1649967167317" timestamp="147911123" timestamp2="147911123">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2752" _type="PauseCommand" date="Sat Apr 16 09:17:59 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147912397">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1274]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2751" _type="MoveCaretCommand" caretOffset="164" date="Sat Apr 16 09:17:59 EDT 2022" docOffset="411" starttimestamp="1649967167317" timestamp="147912397" />
  <Command __id="2754" _type="InsertStringCommand" date="Sat Apr 16 09:17:59 EDT 2022" starttimestamp="1649967167317" timestamp="147912597" timestamp2="147912597">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2756" _type="InsertStringCommand" date="Sat Apr 16 09:18:00 EDT 2022" starttimestamp="1649967167317" timestamp="147912791" timestamp2="147912791">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2758" _type="InsertStringCommand" date="Sat Apr 16 09:18:00 EDT 2022" starttimestamp="1649967167317" timestamp="147912944" timestamp2="147912944">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2760" _type="InsertStringCommand" date="Sat Apr 16 09:18:00 EDT 2022" starttimestamp="1649967167317" timestamp="147913082" timestamp2="147913082">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2762" _type="InsertStringCommand" date="Sat Apr 16 09:18:00 EDT 2022" starttimestamp="1649967167317" timestamp="147913123" timestamp2="147913123">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2764" _type="InsertStringCommand" date="Sat Apr 16 09:18:00 EDT 2022" starttimestamp="1649967167317" timestamp="147913225" timestamp2="147913225">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2766" _type="InsertStringCommand" date="Sat Apr 16 09:18:00 EDT 2022" starttimestamp="1649967167317" timestamp="147913314" timestamp2="147913314">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2768" _type="InsertStringCommand" date="Sat Apr 16 09:18:00 EDT 2022" starttimestamp="1649967167317" timestamp="147913480" timestamp2="147913480">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2770" _type="InsertStringCommand" date="Sat Apr 16 09:18:00 EDT 2022" starttimestamp="1649967167317" timestamp="147913573" timestamp2="147913573">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2772" _type="InsertStringCommand" date="Sat Apr 16 09:18:01 EDT 2022" starttimestamp="1649967167317" timestamp="147913683" timestamp2="147913683">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="2774" _type="InsertStringCommand" date="Sat Apr 16 09:18:01 EDT 2022" starttimestamp="1649967167317" timestamp="147913809" timestamp2="147913809">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2776" _type="InsertStringCommand" date="Sat Apr 16 09:18:01 EDT 2022" starttimestamp="1649967167317" timestamp="147913919" timestamp2="147913919">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2778" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:18:02 EDT 2022" starttimestamp="1649967167317" timestamp="147914919" />
  <Command __id="2780" _type="InsertStringCommand" date="Sat Apr 16 09:18:02 EDT 2022" starttimestamp="1649967167317" timestamp="147915149" timestamp2="147915149">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="2782" _type="InsertStringCommand" date="Sat Apr 16 09:18:02 EDT 2022" starttimestamp="1649967167317" timestamp="147915305" timestamp2="147915305">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2784" _type="InsertStringCommand" date="Sat Apr 16 09:18:02 EDT 2022" starttimestamp="1649967167317" timestamp="147915379" timestamp2="147915379">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2786" _type="InsertStringCommand" date="Sat Apr 16 09:18:02 EDT 2022" starttimestamp="1649967167317" timestamp="147915464" timestamp2="147915464">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2788" _type="InsertStringCommand" date="Sat Apr 16 09:18:02 EDT 2022" starttimestamp="1649967167317" timestamp="147915586" timestamp2="147915586">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2790" _type="InsertStringCommand" date="Sat Apr 16 09:18:02 EDT 2022" starttimestamp="1649967167317" timestamp="147915676" timestamp2="147915676">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2792" _type="InsertStringCommand" date="Sat Apr 16 09:18:03 EDT 2022" starttimestamp="1649967167317" timestamp="147915968" timestamp2="147915968">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="2794" _type="InsertStringCommand" date="Sat Apr 16 09:18:03 EDT 2022" starttimestamp="1649967167317" timestamp="147916142" timestamp2="147916142">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2796" _type="InsertStringCommand" date="Sat Apr 16 09:18:03 EDT 2022" starttimestamp="1649967167317" timestamp="147916204" timestamp2="147916204">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2798" _type="InsertStringCommand" date="Sat Apr 16 09:18:03 EDT 2022" starttimestamp="1649967167317" timestamp="147916380" timestamp2="147916380">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2800" _type="InsertStringCommand" date="Sat Apr 16 09:18:03 EDT 2022" starttimestamp="1649967167317" timestamp="147916435" timestamp2="147916435">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2802" _type="InsertStringCommand" date="Sat Apr 16 09:18:03 EDT 2022" starttimestamp="1649967167317" timestamp="147916608" timestamp2="147916608">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2804" _type="InsertStringCommand" date="Sat Apr 16 09:18:03 EDT 2022" starttimestamp="1649967167317" timestamp="147916669" timestamp2="147916669">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2806" _type="InsertStringCommand" date="Sat Apr 16 09:18:04 EDT 2022" starttimestamp="1649967167317" timestamp="147916868" timestamp2="147916868">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2808" _type="InsertStringCommand" date="Sat Apr 16 09:18:04 EDT 2022" starttimestamp="1649967167317" timestamp="147917039" timestamp2="147917039">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2810" _type="InsertStringCommand" date="Sat Apr 16 09:18:04 EDT 2022" starttimestamp="1649967167317" timestamp="147917356" timestamp2="147917356">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2812" _type="InsertStringCommand" date="Sat Apr 16 09:18:04 EDT 2022" starttimestamp="1649967167317" timestamp="147917604" timestamp2="147917604">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2814" _type="InsertStringCommand" date="Sat Apr 16 09:18:05 EDT 2022" starttimestamp="1649967167317" timestamp="147917737" timestamp2="147917737">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2816" _type="InsertStringCommand" date="Sat Apr 16 09:18:05 EDT 2022" starttimestamp="1649967167317" timestamp="147917793" timestamp2="147917793">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2818" _type="InsertStringCommand" date="Sat Apr 16 09:18:05 EDT 2022" starttimestamp="1649967167317" timestamp="147917910" timestamp2="147917910">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2820" _type="InsertStringCommand" date="Sat Apr 16 09:18:05 EDT 2022" starttimestamp="1649967167317" timestamp="147917988" timestamp2="147917988">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2822" _type="InsertStringCommand" date="Sat Apr 16 09:18:05 EDT 2022" starttimestamp="1649967167317" timestamp="147918114" timestamp2="147918114">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2824" _type="InsertStringCommand" date="Sat Apr 16 09:18:05 EDT 2022" starttimestamp="1649967167317" timestamp="147918516" timestamp2="147918516">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2825" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:18:06 EDT 2022" starttimestamp="1649967167317" timestamp="147919106" />
  <Command __id="2826" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:18:06 EDT 2022" starttimestamp="1649967167317" timestamp="147919211" />
  <Command __id="2827" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:18:06 EDT 2022" starttimestamp="1649967167317" timestamp="147919277" />
  <Command __id="2829" _type="PauseCommand" date="Sat Apr 16 09:18:17 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="147929942">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10665]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2828" _type="ShellCommand" date="Sat Apr 16 09:18:17 EDT 2022" starttimestamp="1649967167317" timestamp="147929942" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2830" _type="ShellCommand" date="Sat Apr 16 09:18:17 EDT 2022" starttimestamp="1649967167317" timestamp="147930101" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2746" _type="Insert" date="Sat Apr 16 09:17:58 EDT 2022" docASTNodeCount="199" docActiveCodeLength="1441" docExpressionCount="121" docLength="1677" length="2" offset="372" repeat="2" starttimestamp="1649967167317" timestamp="147910998" timestamp2="147911113">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2753" _type="Insert" date="Sat Apr 16 09:17:59 EDT 2022" docASTNodeCount="199" docActiveCodeLength="1455" docExpressionCount="121" docLength="1691" length="14" offset="411" repeat="12" starttimestamp="1649967167317" timestamp="147912588" timestamp2="147913913">
    <text><![CDATA[
	final fake ]]></text>
  </DocumentChange>
  <DocumentChange __id="2777" _type="Delete" date="Sat Apr 16 09:18:02 EDT 2022" docASTNodeCount="199" docActiveCodeLength="1454" docExpressionCount="121" docLength="1690" endLine="13" length="1" offset="424" startLine="13" starttimestamp="1649967167317" timestamp="147914917">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="2779" _type="Insert" date="Sat Apr 16 09:18:02 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1477" docExpressionCount="123" docLength="1713" length="23" offset="424" repeat="23" starttimestamp="1649967167317" timestamp="147915144" timestamp2="147918512">
    <text><![CDATA[ClientInterface client;]]></text>
  </DocumentChange>
  <DocumentChange __id="2831" _type="Delete" date="Sat Apr 16 09:18:17 EDT 2022" docASTNodeCount="199" docActiveCodeLength="1458" docExpressionCount="121" docLength="1694" endLine="13" length="19" offset="420" startLine="13" starttimestamp="1649967167317" timestamp="147930115">
    <text><![CDATA[fakeClientInterface]]></text>
  </DocumentChange>
  <DocumentChange __id="2832" _type="Insert" date="Sat Apr 16 09:18:17 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1477" docExpressionCount="123" docLength="1713" length="19" offset="420" starttimestamp="1649967167317" timestamp="147930118">
    <text><![CDATA[FakeClientInterface]]></text>
  </DocumentChange>
  <Command __id="2834" _type="PauseCommand" date="Sat Apr 16 09:18:19 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147932149">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2031]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2835" _type="InsertStringCommand" date="Sat Apr 16 09:18:19 EDT 2022" starttimestamp="1649967167317" timestamp="147932154" timestamp2="147932154">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="2833" _type="Insert" date="Sat Apr 16 09:18:19 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1478" docExpressionCount="123" docLength="1714" length="1" offset="447" starttimestamp="1649967167317" timestamp="147932149">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <Command __id="2837" _type="PauseCommand" date="Sat Apr 16 09:18:21 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147934604">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2450]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="2836" _type="Insert" date="Sat Apr 16 09:18:21 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1479" docExpressionCount="123" docLength="1715" length="1" offset="448" starttimestamp="1649967167317" timestamp="147934604">
    <text><![CDATA[]]]></text>
  </DocumentChange>
  <Command __id="2838" _type="InsertStringCommand" date="Sat Apr 16 09:18:21 EDT 2022" starttimestamp="1649967167317" timestamp="147934608" timestamp2="147934608">
    <data><![CDATA[]]]></data>
  </Command>
  <Command __id="2840" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:18:22 EDT 2022" starttimestamp="1649967167317" timestamp="147934903" />
  <Command __id="2842" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:18:22 EDT 2022" starttimestamp="1649967167317" timestamp="147935041" />
  <Command __id="2843" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:18:22 EDT 2022" starttimestamp="1649967167317" timestamp="147935339" />
  <Command __id="2844" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:18:22 EDT 2022" starttimestamp="1649967167317" timestamp="147935433" />
  <Command __id="2845" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:18:22 EDT 2022" starttimestamp="1649967167317" timestamp="147935494" />
  <Command __id="2847" _type="PauseCommand" date="Sat Apr 16 09:18:38 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="147951240">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[15746]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2846" _type="SelectTextCommand" caretOffset="314" date="Sat Apr 16 09:18:38 EDT 2022" end="337" start="314" starttimestamp="1649967167317" timestamp="147951240" />
  <Command __id="2849" _type="InsertStringCommand" date="Sat Apr 16 09:18:38 EDT 2022" starttimestamp="1649967167317" timestamp="147951306" timestamp2="147951306">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2851" _type="InsertStringCommand" date="Sat Apr 16 09:18:38 EDT 2022" starttimestamp="1649967167317" timestamp="147951436" timestamp2="147951436">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2853" _type="InsertStringCommand" date="Sat Apr 16 09:18:38 EDT 2022" starttimestamp="1649967167317" timestamp="147951620" timestamp2="147951620">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="2855" _type="InsertStringCommand" date="Sat Apr 16 09:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="147951739" timestamp2="147951739">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2857" _type="InsertStringCommand" date="Sat Apr 16 09:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="147952052" timestamp2="147952052">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="2859" _type="InsertStringCommand" date="Sat Apr 16 09:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="147952194" timestamp2="147952194">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2861" _type="InsertStringCommand" date="Sat Apr 16 09:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="147952282" timestamp2="147952282">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2863" _type="InsertStringCommand" date="Sat Apr 16 09:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="147952377" timestamp2="147952377">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2865" _type="InsertStringCommand" date="Sat Apr 16 09:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="147952487" timestamp2="147952487">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2867" _type="InsertStringCommand" date="Sat Apr 16 09:18:39 EDT 2022" starttimestamp="1649967167317" timestamp="147952572" timestamp2="147952572">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2869" _type="InsertStringCommand" date="Sat Apr 16 09:18:40 EDT 2022" starttimestamp="1649967167317" timestamp="147952895" timestamp2="147952895">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="2871" _type="InsertStringCommand" date="Sat Apr 16 09:18:40 EDT 2022" starttimestamp="1649967167317" timestamp="147953067" timestamp2="147953067">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2873" _type="InsertStringCommand" date="Sat Apr 16 09:18:40 EDT 2022" starttimestamp="1649967167317" timestamp="147953180" timestamp2="147953180">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2875" _type="InsertStringCommand" date="Sat Apr 16 09:18:40 EDT 2022" starttimestamp="1649967167317" timestamp="147953329" timestamp2="147953329">
    <data><![CDATA[d]]></data>
  </Command>
  <DocumentChange __id="2839" _type="Delete" date="Sat Apr 16 09:18:22 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1477" docExpressionCount="123" docLength="1713" endLine="13" length="2" offset="447" repeat="2" startLine="13" starttimestamp="1649967167317" timestamp="147934900" timestamp2="147935038">
    <text><![CDATA[s]]]></text>
  </DocumentChange>
  <DocumentChange __id="2848" _type="Replace" date="Sat Apr 16 09:18:38 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1455" docExpressionCount="123" docLength="1691" endLine="16" insertionLength="1" int_docASTNodeCount="203" int_docActiveCodeLength="1454" int_docExpressionCount="121" int_docLength="1690" length="23" offset="561" startLine="16" starttimestamp="1649967167317" timestamp="147951298">
    <deletedText><![CDATA[AnNIOManagerPrintClient]]></deletedText>
    <insertedText><![CDATA[f]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2850" _type="Insert" date="Sat Apr 16 09:18:38 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1468" docExpressionCount="123" docLength="1704" length="13" offset="562" repeat="13" starttimestamp="1649967167317" timestamp="147951432" timestamp2="147953325">
    <text><![CDATA[akeClientRead]]></text>
  </DocumentChange>
  <Command __id="2877" _type="PauseCommand" date="Sat Apr 16 09:18:42 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147955566">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2237]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="2876" _type="Delete" date="Sat Apr 16 09:18:42 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1464" docExpressionCount="123" docLength="1700" endLine="16" length="4" offset="571" repeat="4" startLine="16" starttimestamp="1649967167317" timestamp="147955566" timestamp2="147956099">
    <text><![CDATA[Read]]></text>
  </DocumentChange>
  <Command __id="2878" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:18:42 EDT 2022" starttimestamp="1649967167317" timestamp="147955567" />
  <Command __id="2880" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:18:43 EDT 2022" starttimestamp="1649967167317" timestamp="147955756" />
  <Command __id="2882" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:18:43 EDT 2022" starttimestamp="1649967167317" timestamp="147955912" />
  <Command __id="2884" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:18:43 EDT 2022" starttimestamp="1649967167317" timestamp="147956102" />
  <Command __id="2886" _type="InsertStringCommand" date="Sat Apr 16 09:18:43 EDT 2022" starttimestamp="1649967167317" timestamp="147956552" timestamp2="147956552">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="2888" _type="InsertStringCommand" date="Sat Apr 16 09:18:44 EDT 2022" starttimestamp="1649967167317" timestamp="147956736" timestamp2="147956736">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2890" _type="InsertStringCommand" date="Sat Apr 16 09:18:44 EDT 2022" starttimestamp="1649967167317" timestamp="147956810" timestamp2="147956810">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2892" _type="InsertStringCommand" date="Sat Apr 16 09:18:44 EDT 2022" starttimestamp="1649967167317" timestamp="147956993" timestamp2="147956993">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2894" _type="InsertStringCommand" date="Sat Apr 16 09:18:44 EDT 2022" starttimestamp="1649967167317" timestamp="147957069" timestamp2="147957069">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2896" _type="InsertStringCommand" date="Sat Apr 16 09:18:44 EDT 2022" starttimestamp="1649967167317" timestamp="147957249" timestamp2="147957249">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2898" _type="InsertStringCommand" date="Sat Apr 16 09:18:44 EDT 2022" starttimestamp="1649967167317" timestamp="147957277" timestamp2="147957277">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2900" _type="InsertStringCommand" date="Sat Apr 16 09:18:44 EDT 2022" starttimestamp="1649967167317" timestamp="147957468" timestamp2="147957468">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2902" _type="InsertStringCommand" date="Sat Apr 16 09:18:44 EDT 2022" starttimestamp="1649967167317" timestamp="147957627" timestamp2="147957627">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2903" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:18:45 EDT 2022" starttimestamp="1649967167317" timestamp="147958494" />
  <Command __id="2904" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:18:45 EDT 2022" starttimestamp="1649967167317" timestamp="147958595" />
  <Command __id="2905" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:18:45 EDT 2022" starttimestamp="1649967167317" timestamp="147958654" />
  <Command __id="2907" _type="PauseCommand" date="Sat Apr 16 09:18:50 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="147963452">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4798]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2906" _type="ShellCommand" date="Sat Apr 16 09:18:50 EDT 2022" starttimestamp="1649967167317" timestamp="147963452" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2908" _type="ShellCommand" date="Sat Apr 16 09:18:50 EDT 2022" starttimestamp="1649967167317" timestamp="147963603" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2912" _type="PauseCommand" date="Sat Apr 16 09:18:52 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="147964842">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1219]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2911" _type="MoveCaretCommand" caretOffset="273" date="Sat Apr 16 09:18:52 EDT 2022" docOffset="520" starttimestamp="1649967167317" timestamp="147964842" />
  <Command __id="2914" _type="PauseCommand" date="Sat Apr 16 09:19:09 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="147982291">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[17449]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2913" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:19:09 EDT 2022" starttimestamp="1649967167317" timestamp="147982291" />
  <Command __id="2915" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:19:09 EDT 2022" starttimestamp="1649967167317" timestamp="147982390" />
  <Command __id="2916" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:19:09 EDT 2022" starttimestamp="1649967167317" timestamp="147982440" />
  <DocumentChange __id="2885" _type="Insert" date="Sat Apr 16 09:18:43 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1473" docExpressionCount="123" docLength="1709" length="9" offset="571" repeat="9" starttimestamp="1649967167317" timestamp="147956540" timestamp2="147957623">
    <text><![CDATA[Interface]]></text>
  </DocumentChange>
  <DocumentChange __id="2909" _type="Delete" date="Sat Apr 16 09:18:50 EDT 2022" docASTNodeCount="203" docActiveCodeLength="1454" docExpressionCount="121" docLength="1690" endLine="16" length="19" offset="561" startLine="16" starttimestamp="1649967167317" timestamp="147963619">
    <text><![CDATA[fakeClientInterface]]></text>
  </DocumentChange>
  <DocumentChange __id="2910" _type="Insert" date="Sat Apr 16 09:18:50 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1473" docExpressionCount="123" docLength="1709" length="19" offset="561" starttimestamp="1649967167317" timestamp="147963623">
    <text><![CDATA[FakeClientInterface]]></text>
  </DocumentChange>
  <Command __id="2918" _type="PauseCommand" date="Sat Apr 16 09:21:22 EDT 2022" range="2m-5m" starttimestamp="1649967167317" timestamp="148115194">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[132754]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2919" _type="MoveCaretCommand" caretOffset="2081" date="Sat Apr 16 09:21:22 EDT 2022" docOffset="2081" starttimestamp="1649967167317" timestamp="148115373" />
  <Command __id="2921" _type="PauseCommand" date="Sat Apr 16 09:21:36 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="148128791">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13418]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2920" _type="MoveCaretCommand" caretOffset="692" date="Sat Apr 16 09:21:36 EDT 2022" docOffset="692" starttimestamp="1649967167317" timestamp="148128791" />
  <Command __id="2923" _type="InsertStringCommand" date="Sat Apr 16 09:21:36 EDT 2022" starttimestamp="1649967167317" timestamp="148129457" timestamp2="148129457">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2925" _type="InsertStringCommand" date="Sat Apr 16 09:21:36 EDT 2022" starttimestamp="1649967167317" timestamp="148129578" timestamp2="148129578">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2927" _type="PauseCommand" date="Sat Apr 16 09:21:39 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="148131765">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2187]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2926" _type="SelectTextCommand" caretOffset="694" date="Sat Apr 16 09:21:39 EDT 2022" end="729" start="694" starttimestamp="1649967167317" timestamp="148131765" />
  <Command __id="2928" _type="CopyCommand" date="Sat Apr 16 09:21:39 EDT 2022" starttimestamp="1649967167317" timestamp="148132052" />
  <Command __id="2930" _type="PauseCommand" date="Sat Apr 16 09:21:40 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="148133127">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1075]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2929" _type="MoveCaretCommand" caretOffset="729" date="Sat Apr 16 09:21:40 EDT 2022" docOffset="729" starttimestamp="1649967167317" timestamp="148133127" />
  <Command __id="2932" _type="InsertStringCommand" date="Sat Apr 16 09:21:40 EDT 2022" starttimestamp="1649967167317" timestamp="148133408" timestamp2="148133408">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2934" _type="PasteCommand" date="Sat Apr 16 09:21:40 EDT 2022" starttimestamp="1649967167317" timestamp="148133642" />
  <Command __id="2936" _type="PauseCommand" date="Sat Apr 16 09:21:44 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="148136720">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3078]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2935" _type="SelectTextCommand" caretOffset="750" date="Sat Apr 16 09:21:44 EDT 2022" end="756" start="750" starttimestamp="1649967167317" timestamp="148136720" />
  <Command __id="2938" _type="InsertStringCommand" date="Sat Apr 16 09:21:44 EDT 2022" starttimestamp="1649967167317" timestamp="148137146" timestamp2="148137146">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="2940" _type="InsertStringCommand" date="Sat Apr 16 09:21:44 EDT 2022" starttimestamp="1649967167317" timestamp="148137306" timestamp2="148137306">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2942" _type="InsertStringCommand" date="Sat Apr 16 09:21:44 EDT 2022" starttimestamp="1649967167317" timestamp="148137396" timestamp2="148137396">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2944" _type="InsertStringCommand" date="Sat Apr 16 09:21:44 EDT 2022" starttimestamp="1649967167317" timestamp="148137568" timestamp2="148137568">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2946" _type="InsertStringCommand" date="Sat Apr 16 09:21:45 EDT 2022" starttimestamp="1649967167317" timestamp="148137815" timestamp2="148137815">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2948" _type="InsertStringCommand" date="Sat Apr 16 09:21:45 EDT 2022" starttimestamp="1649967167317" timestamp="148138043" timestamp2="148138043">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2950" _type="InsertStringCommand" date="Sat Apr 16 09:21:45 EDT 2022" starttimestamp="1649967167317" timestamp="148138267" timestamp2="148138267">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2952" _type="InsertStringCommand" date="Sat Apr 16 09:21:45 EDT 2022" starttimestamp="1649967167317" timestamp="148138456" timestamp2="148138456">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2954" _type="PauseCommand" date="Sat Apr 16 09:21:46 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="148139514">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1058]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2953" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:21:46 EDT 2022" starttimestamp="1649967167317" timestamp="148139514" />
  <Command __id="2955" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:21:46 EDT 2022" starttimestamp="1649967167317" timestamp="148139601" />
  <Command __id="2956" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:21:46 EDT 2022" starttimestamp="1649967167317" timestamp="148139660" />
  <Command __id="2958" _type="PauseCommand" date="Sat Apr 16 09:21:52 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="148145449">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5789]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2957" _type="ShellCommand" date="Sat Apr 16 09:21:52 EDT 2022" starttimestamp="1649967167317" timestamp="148145449" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2959" _type="ShellCommand" date="Sat Apr 16 09:21:52 EDT 2022" starttimestamp="1649967167317" timestamp="148145616" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2967" _type="PauseCommand" date="Sat Apr 16 09:21:54 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="148147139">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1505]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2966" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:21:54 EDT 2022" starttimestamp="1649967167317" timestamp="148147139" />
  <Command __id="2968" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:21:54 EDT 2022" starttimestamp="1649967167317" timestamp="148147291" />
  <Command __id="2969" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:21:54 EDT 2022" starttimestamp="1649967167317" timestamp="148147348" />
  <Command __id="2971" _type="PauseCommand" date="Sat Apr 16 09:21:56 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="148148790">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1442]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2970" _type="MoveCaretCommand" caretOffset="803" date="Sat Apr 16 09:21:56 EDT 2022" docOffset="803" starttimestamp="1649967167317" timestamp="148148790" />
  <Command __id="2973" _type="PauseCommand" date="Sat Apr 16 09:21:58 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="148150838">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2048]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2972" _type="SelectTextCommand" caretOffset="773" date="Sat Apr 16 09:21:58 EDT 2022" end="803" start="773" starttimestamp="1649967167317" timestamp="148150838" />
  <Command __id="2974" _type="CopyCommand" date="Sat Apr 16 09:21:58 EDT 2022" starttimestamp="1649967167317" timestamp="148151107" />
  <Command __id="2976" _type="PauseCommand" date="Sat Apr 16 09:22:03 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="148156031">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[4924]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2975" _type="SelectTextCommand" caretOffset="912" date="Sat Apr 16 09:22:03 EDT 2022" end="940" start="912" starttimestamp="1649967167317" timestamp="148156031" />
  <Command __id="2978" _type="PasteCommand" date="Sat Apr 16 09:22:03 EDT 2022" starttimestamp="1649967167317" timestamp="148156284" />
  <Command __id="2979" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:22:04 EDT 2022" starttimestamp="1649967167317" timestamp="148156732" />
  <Command __id="2980" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:22:04 EDT 2022" starttimestamp="1649967167317" timestamp="148156834" />
  <Command __id="2981" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:22:04 EDT 2022" starttimestamp="1649967167317" timestamp="148156873" />
  <Command __id="2983" _type="InsertStringCommand" date="Sat Apr 16 09:22:05 EDT 2022" starttimestamp="1649967167317" timestamp="148157780" timestamp2="148157780">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2984" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:22:05 EDT 2022" starttimestamp="1649967167317" timestamp="148158425" />
  <Command __id="2985" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:22:05 EDT 2022" starttimestamp="1649967167317" timestamp="148158527" />
  <Command __id="2986" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:22:05 EDT 2022" starttimestamp="1649967167317" timestamp="148158569" />
  <Command __id="2988" _type="PauseCommand" date="Sat Apr 16 09:22:25 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="148178184">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[19615]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2987" _type="MoveCaretCommand" caretOffset="1935" date="Sat Apr 16 09:22:25 EDT 2022" docOffset="1935" starttimestamp="1649967167317" timestamp="148178184" />
  <Command __id="2990" _type="InsertStringCommand" date="Sat Apr 16 09:22:26 EDT 2022" starttimestamp="1649967167317" timestamp="148179125" timestamp2="148179125">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2991" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sat Apr 16 09:22:26 EDT 2022" start_end="START" starttimestamp="1649967167317" timestamp="148179136" />
  <Command __id="2994" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sat Apr 16 09:22:26 EDT 2022" start_end="END" starttimestamp="1649967167317" timestamp="148179402" />
  <Command __id="2996" _type="InsertStringCommand" date="Sat Apr 16 09:22:26 EDT 2022" starttimestamp="1649967167317" timestamp="148179510" timestamp2="148179510">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2998" _type="InsertStringCommand" date="Sat Apr 16 09:22:26 EDT 2022" starttimestamp="1649967167317" timestamp="148179620" timestamp2="148179620">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3000" _type="InsertStringCommand" date="Sat Apr 16 09:22:27 EDT 2022" starttimestamp="1649967167317" timestamp="148179716" timestamp2="148179716">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3002" _type="PauseCommand" date="Sat Apr 16 09:22:28 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="148181209">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1493]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3001" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:22:28 EDT 2022" starttimestamp="1649967167317" timestamp="148181209" />
  <Command __id="3003" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:22:28 EDT 2022" starttimestamp="1649967167317" timestamp="148181308" />
  <Command __id="3004" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:22:28 EDT 2022" starttimestamp="1649967167317" timestamp="148181345" />
  <Command __id="3006" _type="PauseCommand" date="Sat Apr 16 09:22:37 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="148190250">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8905]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3005" _type="MoveCaretCommand" caretOffset="1874" date="Sat Apr 16 09:22:37 EDT 2022" docOffset="1874" starttimestamp="1649967167317" timestamp="148190250" />
  <Command __id="2917" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:21:22 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2176" docExpressionCount="196" docLength="2373" projectName="A6" starttimestamp="1649967167317" timestamp="148115194">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import client.ClientRemoteObjectNIO;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.AnNIOManagerPrintClient;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})¶public class ClientReadThread implements ReadThreadInterface{¶	final ClientRemoteObjectNIO client;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ClientReadThread (final ClientRemoteObjectNIO aClient) {¶		client = aClient;¶	}¶	¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			String aMessageString = new String(originalMessage.array());¶			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);¶			¶			¶			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();¶			¶			¶			ProposalLearnedNotificationReceived.newCase(this, client.CLIENT_NAME, client.aProposalNumber, aMessageString);¶			commandProcessor.processCommand(aMessageString);¶			ProposedStateSet.newCase(this, client.CLIENT_NAME, client.aProposalNumber, aMessageString);¶			client.aProposalNumber++;¶		¶		}¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2922" _type="Insert" date="Sat Apr 16 09:21:36 EDT 2022" docASTNodeCount="284" docActiveCodeLength="2141" docExpressionCount="194" docLength="2375" length="2" offset="692" repeat="2" starttimestamp="1649967167317" timestamp="148129453" timestamp2="148129569">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2931" _type="Insert" date="Sat Apr 16 09:21:40 EDT 2022" docASTNodeCount="284" docActiveCodeLength="2144" docExpressionCount="194" docLength="2378" length="3" offset="729" starttimestamp="1649967167317" timestamp="148133395">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2933" _type="Replace" date="Sat Apr 16 09:21:40 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2179" docExpressionCount="196" docLength="2413" endLine="20" insertionLength="36" int_docASTNodeCount="284" int_docActiveCodeLength="2143" int_docExpressionCount="194" int_docLength="2377" length="1" offset="731" startLine="20" starttimestamp="1649967167317" timestamp="148133637">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	final ClientRemoteObjectNIO client;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2937" _type="Replace" date="Sat Apr 16 09:21:44 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2174" docExpressionCount="196" docLength="2408" endLine="20" insertionLength="1" int_docASTNodeCount="290" int_docActiveCodeLength="2173" int_docExpressionCount="196" int_docLength="2407" length="6" offset="750" startLine="20" starttimestamp="1649967167317" timestamp="148137140">
    <deletedText><![CDATA[Object]]></deletedText>
    <insertedText><![CDATA[I]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2939" _type="Insert" date="Sat Apr 16 09:21:44 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2181" docExpressionCount="196" docLength="2415" length="7" offset="751" repeat="7" starttimestamp="1649967167317" timestamp="148137301" timestamp2="148138452">
    <text><![CDATA[nteface]]></text>
  </DocumentChange>
  <DocumentChange __id="2960" _type="Delete" date="Sat Apr 16 09:21:52 EDT 2022" docASTNodeCount="284" docActiveCodeLength="2158" docExpressionCount="194" docLength="2392" endLine="20" length="23" offset="738" startLine="20" starttimestamp="1649967167317" timestamp="148145629">
    <text><![CDATA[ClientRemoteIntefaceNIO]]></text>
  </DocumentChange>
  <DocumentChange __id="2961" _type="Insert" date="Sat Apr 16 09:21:52 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2182" docExpressionCount="196" docLength="2416" length="24" offset="738" starttimestamp="1649967167317" timestamp="148145633">
    <text><![CDATA[ClientRemoteInterfaceNIO]]></text>
  </DocumentChange>
  <DocumentChange __id="2962" _type="Delete" date="Sat Apr 16 09:21:52 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2178" docExpressionCount="196" docLength="2412" endLine="6" length="4" offset="140" startLine="4" starttimestamp="1649967167317" timestamp="148145634">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="2963" _type="Insert" date="Sat Apr 16 09:21:52 EDT 2022" docASTNodeCount="294" docActiveCodeLength="2223" docExpressionCount="199" docLength="2457" length="45" offset="140" repeat="3" starttimestamp="1649967167317" timestamp="148145634" timestamp2="148145636">
    <text><![CDATA[

import client.ClientRemoteInterfaceNIO;
]]></text>
  </DocumentChange>
  <DocumentChange __id="2977" _type="Replace" date="Sat Apr 16 09:22:03 EDT 2022" docASTNodeCount="292" docActiveCodeLength="2225" docExpressionCount="197" docLength="2459" endLine="24" insertionLength="30" int_docASTNodeCount="289" int_docActiveCodeLength="2195" int_docExpressionCount="197" int_docLength="2429" length="28" offset="912" startLine="24" starttimestamp="1649967167317" timestamp="148156277">
    <deletedText><![CDATA[final ClientRemoteObjectNIO ]]></deletedText>
    <insertedText><![CDATA[final ClientRemoteInterfaceNIO]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2982" _type="Insert" date="Sat Apr 16 09:22:05 EDT 2022" docASTNodeCount="294" docActiveCodeLength="2226" docExpressionCount="199" docLength="2460" length="1" offset="942" starttimestamp="1649967167317" timestamp="148157776">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="2989" _type="Insert" date="Sat Apr 16 09:22:26 EDT 2022" docASTNodeCount="294" docActiveCodeLength="2232" docExpressionCount="199" docLength="2466" length="6" offset="1935" repeat="6" starttimestamp="1649967167317" timestamp="148179121" timestamp2="148179709">
    <text><![CDATA[.super]]></text>
  </DocumentChange>
  <Command __id="3008" _type="PauseCommand" date="Sat Apr 16 09:23:14 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="148227293">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[37043]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="3007" _type="Delete" date="Sat Apr 16 09:23:14 EDT 2022" docASTNodeCount="294" docActiveCodeLength="2226" docExpressionCount="199" docLength="2460" endLine="61" length="6" offset="1935" startLine="61" starttimestamp="1649967167317" timestamp="148227293">
    <text><![CDATA[.super]]></text>
  </DocumentChange>
  <Command __id="3009" _type="UndoCommand" date="Sat Apr 16 09:23:14 EDT 2022" starttimestamp="1649967167317" timestamp="148227315" />
  <Command __id="3011" _type="UndoCommand" date="Sat Apr 16 09:23:15 EDT 2022" starttimestamp="1649967167317" timestamp="148228253" />
  <DocumentChange __id="3010" _type="Delete" date="Sat Apr 16 09:23:15 EDT 2022" docASTNodeCount="292" docActiveCodeLength="2225" docExpressionCount="197" docLength="2459" endLine="24" length="1" offset="942" startLine="24" starttimestamp="1649967167317" timestamp="148228246">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="3013" _type="PauseCommand" date="Sat Apr 16 09:23:16 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="148229530">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1277]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3014" _type="UndoCommand" date="Sat Apr 16 09:23:16 EDT 2022" starttimestamp="1649967167317" timestamp="148229539" />
  <DocumentChange __id="3012" _type="Replace" date="Sat Apr 16 09:23:16 EDT 2022" docASTNodeCount="294" docActiveCodeLength="2223" docExpressionCount="199" docLength="2457" endLine="24" insertionLength="28" int_docASTNodeCount="289" int_docActiveCodeLength="2195" int_docExpressionCount="197" int_docLength="2429" length="30" offset="912" startLine="24" starttimestamp="1649967167317" timestamp="148229530">
    <deletedText><![CDATA[final ClientRemoteInterfaceNIO]]></deletedText>
    <insertedText><![CDATA[final ClientRemoteObjectNIO ]]></insertedText>
  </DocumentChange>
  <Command __id="3016" _type="PauseCommand" date="Sat Apr 16 09:23:18 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="148230746">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1207]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3022" _type="UndoCommand" date="Sat Apr 16 09:23:18 EDT 2022" starttimestamp="1649967167317" timestamp="148230777" />
  <DocumentChange __id="3015" _type="Delete" date="Sat Apr 16 09:23:18 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2178" docExpressionCount="196" docLength="2412" endLine="7" length="45" offset="140" repeat="3" startLine="4" starttimestamp="1649967167317" timestamp="148230746" timestamp2="148230755">
    <text><![CDATA[

import client.ClientRemoteInterfaceNIO;
]]></text>
  </DocumentChange>
  <DocumentChange __id="3019" _type="Insert" date="Sat Apr 16 09:23:18 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2182" docExpressionCount="196" docLength="2416" length="4" offset="140" starttimestamp="1649967167317" timestamp="148230763">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="3020" _type="Delete" date="Sat Apr 16 09:23:18 EDT 2022" docASTNodeCount="284" docActiveCodeLength="2158" docExpressionCount="194" docLength="2392" endLine="20" length="24" offset="738" startLine="20" starttimestamp="1649967167317" timestamp="148230765">
    <text><![CDATA[ClientRemoteInterfaceNIO]]></text>
  </DocumentChange>
  <DocumentChange __id="3021" _type="Insert" date="Sat Apr 16 09:23:18 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2181" docExpressionCount="196" docLength="2415" length="23" offset="738" starttimestamp="1649967167317" timestamp="148230771">
    <text><![CDATA[ClientRemoteIntefaceNIO]]></text>
  </DocumentChange>
  <Command __id="3024" _type="PauseCommand" date="Sat Apr 16 09:23:20 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="148233121">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2344]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="3023" _type="Delete" date="Sat Apr 16 09:23:20 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2174" docExpressionCount="196" docLength="2408" endLine="20" length="7" offset="751" startLine="20" starttimestamp="1649967167317" timestamp="148233121">
    <text><![CDATA[nteface]]></text>
  </DocumentChange>
  <Command __id="3025" _type="UndoCommand" date="Sat Apr 16 09:23:20 EDT 2022" starttimestamp="1649967167317" timestamp="148233141" />
  <Command __id="3027" _type="UndoCommand" date="Sat Apr 16 09:23:21 EDT 2022" starttimestamp="1649967167317" timestamp="148233864" />
  <Command __id="3028" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:23:22 EDT 2022" starttimestamp="1649967167317" timestamp="148234746" />
  <Command __id="3029" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:23:22 EDT 2022" starttimestamp="1649967167317" timestamp="148234835" />
  <Command __id="3030" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:23:22 EDT 2022" starttimestamp="1649967167317" timestamp="148234895" />
  <Command __id="3031" _type="MoveCaretCommand" caretOffset="927" date="Sat Apr 16 09:23:23 EDT 2022" docOffset="927" starttimestamp="1649967167317" timestamp="148235799" />
  <Command __id="3033" _type="PauseCommand" date="Sat Apr 16 09:23:45 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="148257762">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[21963]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3032" _type="ShellCommand" date="Sat Apr 16 09:23:45 EDT 2022" starttimestamp="1649967167317" timestamp="148257762" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3035" _type="PauseCommand" date="Sat Apr 16 09:23:47 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="148259986">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2224]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3039" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:23:54 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="148267376" type="Run" />
  <Command __id="3041" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:23:54 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="148267376" type="Run" />
  <Command __id="3042" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:23:54 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="148267591" type="Run" />
  <Command __id="3043" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:23:54 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="148267600" type="Run" />
  <Command __id="3044" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:23:54 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="148267604" type="Run" />
  <Command __id="3046" _type="PauseCommand" date="Sat Apr 16 09:23:57 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="148270213">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2609]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3047" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:23:59 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="148271961" type="Run" />
  <Command __id="3049" _type="ConsoleOutput" date="Sat Apr 16 09:23:59 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148272075" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sat Apr 16 09:23:59 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@76d75fe5 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Sat Apr 16 09:23:59 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3051" _type="PauseCommand" date="Sat Apr 16 09:24:02 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="148275023">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2948]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3050" _type="ConsoleOutput" date="Sat Apr 16 09:24:02 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148275023" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:125
Running second pass checks Sat Apr 16 09:24:02 EDT 2022
Start O(n2) inter- and intra class method calls:Sat Apr 16 09:24:02 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:125¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Sat Apr 16 09:2"), Diff(DELETE,"3:59"), Diff(INSERT,"4:02 EDT 2022¶Start O(n2) inter- and intra class method calls:Sat Apr 16 09:24:02"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3052" _type="ConsoleOutput" date="Sat Apr 16 09:24:02 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148275114" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sat Apr 16 09:24:02 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:125¶Running second pass checks Sat Apr 16 09:24:02 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sat Apr 16 09:24:02 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3054" _type="PauseCommand" date="Sat Apr 16 09:24:04 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="148276791">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1677]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3053" _type="ConsoleOutput" date="Sat Apr 16 09:24:04 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148276791" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sat Apr 16 09:24:04 EDT 2022
Generating checks:Sat Apr 16 09:24:04 EDT 2022
Finished Generating checks:Sat Apr 16 09:24:04 EDT 2022
Generating externals:Sat Apr 16 09:24:04 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Sat Apr 16 09:24:04 EDT 2022¶Generating checks:Sat Apr 16 09:24:04 EDT 2022¶Finished Generating checks:Sat Apr 16 09:24:04 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Sat Apr 16 09:24:0"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3055" _type="ConsoleOutput" date="Sat Apr 16 09:24:04 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148277338" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sat Apr 16 09:24:04 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):5310
Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Sat Apr 16 09:24:04 EDT 2022¶"), Diff(DELETE,"Generating checks:Sat Apr 16 09:24:04 EDT 2022¶Finished Generat"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found "), Diff(EQUAL,"in"), Diff(DELETE,"g"), Diff(EQUAL," checks"), Diff(DELETE,":Sat Apr 16 09:24:04 EDT 2022¶Generating externals:Sat Apr 16 09:24:04 EDT 2022"), Diff(INSERT,"tyle text, see traced console output%0.0¶¶Test execution time (ms):5310¶Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3056" _type="ConsoleOutput" date="Sat Apr 16 09:24:04 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148277415" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):11
A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9402985074626866

Test execution time (ms):12
Test execution time (ms):13
A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.2857142857142857

Test execution time (ms):13
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sat Apr 16 09:24:04 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0"), Diff(INSERT,"Test execution time (ms):11¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9402985074626866"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"5310"), Diff(INSERT,"12"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"25"), Diff(INSERT,"13¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.2857142857142857¶¶Test execution time (ms):13"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3058" _type="PauseCommand" date="Sat Apr 16 09:24:07 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="148279838">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2423]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3057" _type="ConsoleOutput" date="Sat Apr 16 09:24:07 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148279838" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@145b0911 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):11¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9402985074626866¶¶Test execution time (ms):12¶Test execution time (ms):13¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.2857142857142857¶¶Test execution time (ms):13"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@145b0911 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3060" _type="PauseCommand" date="Sat Apr 16 09:24:09 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="148281818">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1980]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3059" _type="ConsoleOutput" date="Sat Apr 16 09:24:09 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148281818" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@145b0911 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@145b0911 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3062" _type="PauseCommand" date="Sat Apr 16 09:24:10 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="148283047">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1229]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3061" _type="ConsoleOutput" date="Sat Apr 16 09:24:10 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148283047" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6AccessModifiersMatched@64546cc3 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6"), Diff(DELETE,"InterfaceAsType@145b0911"), Diff(INSERT,"AccessModifiersMatched@64546cc3"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3064" _type="PauseCommand" date="Sat Apr 16 09:24:46 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="148319240">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[36193]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3063" _type="ShellCommand" date="Sat Apr 16 09:24:46 EDT 2022" starttimestamp="1649967167317" timestamp="148319240" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3066" _type="PauseCommand" date="Sat Apr 16 09:24:59 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="148332018">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12778]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3065" _type="ShellCommand" date="Sat Apr 16 09:24:59 EDT 2022" starttimestamp="1649967167317" timestamp="148332018" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3068" _type="PauseCommand" date="Sat Apr 16 09:25:09 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="148341765">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9747]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3067" _type="ConsoleOutput" date="Sat Apr 16 09:25:09 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148341765" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5

Test execution time (ms):15
A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2413793103448276

Test execution time (ms):14
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6AccessModifiersMatched@64546cc3 . Results may change."), Diff(INSERT,"Test execution time (ms):4¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):15¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.2413793103448276¶¶Test execution time (ms):14"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3069" _type="ConsoleOutput" date="Sat Apr 16 09:25:09 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148341768" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4

Test execution time (ms):12
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):4¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):15¶A6ExpectedCall"), Diff(INSERT,"A6ExpectedSignature"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"2413793103448276"), Diff(INSERT,"4"), Diff(EQUAL,"¶¶Test execution time (ms):1"), Diff(DELETE,"4"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3070" _type="ConsoleOutput" date="Sat Apr 16 09:25:09 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148341829" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (284)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (294)
  |~ ClientRemoteObjectNIO.java (170)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (82)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (76)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (330)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (335)
   |~ ServerRemoteObjectNIO.java (159)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4¶¶Test execution time (ms):12"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (284)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (294)¶  |~ ClientRemoteObjectNIO.java (170)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (82)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (330)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3072" _type="PauseCommand" date="Sat Apr 16 09:25:14 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="148347184">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5355]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3071" _type="ConsoleOutput" date="Sat Apr 16 09:25:14 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="148347184" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@65e83bac . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (284)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (294)¶  |~ ClientRemoteObjectNIO.java (170)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (82)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (330)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@65e83bac . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3074" _type="PauseCommand" date="Sat Apr 16 09:25:17 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="148350445">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3261]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3073" _type="ShellCommand" date="Sat Apr 16 09:25:17 EDT 2022" starttimestamp="1649967167317" timestamp="148350445" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3076" _type="PauseCommand" date="Sat Apr 16 09:30:46 EDT 2022" range="5m-10m" starttimestamp="1649967167317" timestamp="148679000">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[328555]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3075" _type="ShellCommand" date="Sat Apr 16 09:30:46 EDT 2022" starttimestamp="1649967167317" timestamp="148679000" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3078" _type="PauseCommand" date="Sat Apr 16 09:30:56 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="148689181">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10181]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3077" _type="ShellCommand" date="Sat Apr 16 09:30:56 EDT 2022" starttimestamp="1649967167317" timestamp="148689181" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="3026" _type="Replace" date="Sat Apr 16 09:23:21 EDT 2022" docASTNodeCount="290" docActiveCodeLength="2179" docExpressionCount="196" docLength="2413" endLine="20" insertionLength="6" int_docASTNodeCount="290" int_docActiveCodeLength="2173" int_docExpressionCount="196" int_docLength="2407" length="1" offset="750" startLine="20" starttimestamp="1649967167317" timestamp="148233859">
    <deletedText><![CDATA[I]]></deletedText>
    <insertedText><![CDATA[Object]]></insertedText>
  </DocumentChange>
  <Command __id="3080" _type="PauseCommand" date="Sat Apr 16 09:34:29 EDT 2022" range="2m-5m" starttimestamp="1649967167317" timestamp="148902088">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[212907]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3082" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:34:30 EDT 2022" starttimestamp="1649967167317" timestamp="148903425" />
  <Command __id="3084" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:34:30 EDT 2022" starttimestamp="1649967167317" timestamp="148903429" />
  <Command __id="3079" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:34:29 EDT 2022" docASTNodeCount="86" docActiveCodeLength="731" docExpressionCount="63" docLength="731" projectName="A6" starttimestamp="1649967167317" timestamp="148902088">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import stringProcessors.HalloweenCommandProcessor;

public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	HalloweenCommandProcessor getCommandProcessor();

	void setFactories();

}
]]></snapshot>
  </Command>
  <Command __id="3086" _type="PauseCommand" date="Sat Apr 16 09:34:47 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="148920524">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[17095]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3087" _type="MoveCaretCommand" caretOffset="0" date="Sat Apr 16 09:34:48 EDT 2022" docOffset="0" starttimestamp="1649967167317" timestamp="148920700" />
  <Command __id="3085" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:34:47 EDT 2022" docASTNodeCount="1200" docActiveCodeLength="9207" docExpressionCount="857" docLength="10076" projectName="A6" starttimestamp="1649967167317" timestamp="148920524">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	public void atomicBroadcast(boolean fake) {
		return;
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}

}
]]></snapshot>
  </Command>
  <Command __id="3089" _type="PauseCommand" date="Sat Apr 16 09:35:54 EDT 2022" range="1m-2m" starttimestamp="1649967167317" timestamp="148987657">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[66957]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3090" _type="SelectTextCommand" caretOffset="1850" date="Sat Apr 16 09:35:55 EDT 2022" end="1850" start="1832" starttimestamp="1649967167317" timestamp="148987882" />
  <Command __id="3088" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:35:54 EDT 2022" docASTNodeCount="1198" docActiveCodeLength="9334" docExpressionCount="863" docLength="10222" projectName="A6" starttimestamp="1649967167317" timestamp="148987657">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		"), Diff(INSERT,"System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		"), Diff(EQUAL,"ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}



}
]]></snapshot>
  </Command>
  <Command __id="3092" _type="PauseCommand" date="Sat Apr 16 09:36:00 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="148993452">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5570]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3093" _type="MoveCaretCommand" caretOffset="3699" date="Sat Apr 16 09:36:00 EDT 2022" docOffset="5000" starttimestamp="1649967167317" timestamp="148993616" />
  <Command __id="3095" _type="PauseCommand" date="Sat Apr 16 09:36:32 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="149024859">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[31243]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3094" _type="SelectTextCommand" caretOffset="198" date="Sat Apr 16 09:36:32 EDT 2022" end="260" start="198" starttimestamp="1649967167317" timestamp="149024859" />
  <Command __id="3096" _type="SelectTextCommand" caretOffset="198" date="Sat Apr 16 09:36:32 EDT 2022" end="260" start="198" starttimestamp="1649967167317" timestamp="149024859" />
  <Command __id="3097" _type="CopyCommand" date="Sat Apr 16 09:36:32 EDT 2022" starttimestamp="1649967167317" timestamp="149025372" />
  <Command __id="3091" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:36:00 EDT 2022" docASTNodeCount="650" docActiveCodeLength="4732" docExpressionCount="459" docLength="5395" projectName="A6" starttimestamp="1649967167317" timestamp="148993452">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3099" _type="PauseCommand" date="Sat Apr 16 09:36:34 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149027613">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2241]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3100" _type="MoveCaretCommand" caretOffset="0" date="Sat Apr 16 09:36:35 EDT 2022" docOffset="0" starttimestamp="1649967167317" timestamp="149027794" />
  <Command __id="3102" _type="PauseCommand" date="Sat Apr 16 09:36:42 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149034706">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6912]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3101" _type="SelectTextCommand" caretOffset="252" date="Sat Apr 16 09:36:42 EDT 2022" end="287" start="252" starttimestamp="1649967167317" timestamp="149034706" />
  <Command __id="3104" _type="PasteCommand" date="Sat Apr 16 09:36:42 EDT 2022" starttimestamp="1649967167317" timestamp="149035495" />
  <Command __id="3105" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:36:43 EDT 2022" starttimestamp="1649967167317" timestamp="149036098" />
  <Command __id="3106" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:36:43 EDT 2022" starttimestamp="1649967167317" timestamp="149036478" />
  <Command __id="3107" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:36:43 EDT 2022" starttimestamp="1649967167317" timestamp="149036510" />
  <Command __id="3109" _type="PauseCommand" date="Sat Apr 16 09:36:52 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149045148">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8638]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3108" _type="SelectTextCommand" caretOffset="251" date="Sat Apr 16 09:36:52 EDT 2022" end="260" start="251" starttimestamp="1649967167317" timestamp="149045148" />
  <Command __id="3111" _type="InsertStringCommand" date="Sat Apr 16 09:36:52 EDT 2022" starttimestamp="1649967167317" timestamp="149045668" timestamp2="149045668">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3113" _type="InsertStringCommand" date="Sat Apr 16 09:36:53 EDT 2022" starttimestamp="1649967167317" timestamp="149046192" timestamp2="149046192">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3114" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:36:54 EDT 2022" starttimestamp="1649967167317" timestamp="149046948" />
  <Command __id="3115" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:36:54 EDT 2022" starttimestamp="1649967167317" timestamp="149047051" />
  <Command __id="3116" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:36:54 EDT 2022" starttimestamp="1649967167317" timestamp="149047088" />
  <Command __id="3098" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:36:34 EDT 2022" docASTNodeCount="1200" docActiveCodeLength="9207" docExpressionCount="857" docLength="10076" projectName="A6" starttimestamp="1649967167317" timestamp="149027613">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	public void atomicBroadcast(boolean fake) {¶		return;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3103" _type="Replace" date="Sat Apr 16 09:36:42 EDT 2022" docASTNodeCount="1198" docActiveCodeLength="9234" docExpressionCount="856" docLength="10103" endLine="46" insertionLength="62" int_docASTNodeCount="1198" int_docActiveCodeLength="9172" int_docExpressionCount="856" int_docLength="10041" length="35" offset="2056" startLine="46" starttimestamp="1649967167317" timestamp="149035371">
    <deletedText><![CDATA[implements ClientRemoteInterfaceRMI]]></deletedText>
    <insertedText><![CDATA[extends ClientRemoteObject implements ClientRemoteInterfaceNIO]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3110" _type="Replace" date="Sat Apr 16 09:36:52 EDT 2022" docASTNodeCount="1198" docActiveCodeLength="9226" docExpressionCount="856" docLength="10095" endLine="46" insertionLength="1" int_docASTNodeCount="1200" int_docActiveCodeLength="9225" int_docExpressionCount="857" int_docLength="10094" length="9" offset="2055" startLine="46" starttimestamp="1649967167317" timestamp="149045660">
    <deletedText><![CDATA[ extends ]]></deletedText>
    <insertedText><![CDATA[,]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3112" _type="Insert" date="Sat Apr 16 09:36:53 EDT 2022" docASTNodeCount="1198" docActiveCodeLength="9227" docExpressionCount="856" docLength="10096" length="1" offset="2056" starttimestamp="1649967167317" timestamp="149046186">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="3118" _type="PauseCommand" date="Sat Apr 16 09:36:59 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149052098">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5010]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="3117" _type="Delete" date="Sat Apr 16 09:36:59 EDT 2022" docASTNodeCount="1198" docActiveCodeLength="9226" docExpressionCount="856" docLength="10095" endLine="46" length="1" offset="2056" startLine="46" starttimestamp="1649967167317" timestamp="149052098">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="3119" _type="UndoCommand" date="Sat Apr 16 09:36:59 EDT 2022" starttimestamp="1649967167317" timestamp="149052112" />
  <Command __id="3121" _type="UndoCommand" date="Sat Apr 16 09:36:59 EDT 2022" starttimestamp="1649967167317" timestamp="149052583" />
  <Command __id="3123" _type="PauseCommand" date="Sat Apr 16 09:37:06 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149058849">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[6266]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3122" _type="SelectTextCommand" caretOffset="252" date="Sat Apr 16 09:37:06 EDT 2022" end="279" start="252" starttimestamp="1649967167317" timestamp="149058849" />
  <Command __id="3125" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:37:06 EDT 2022" starttimestamp="1649967167317" timestamp="149059270" />
  <DocumentChange __id="3120" _type="Replace" date="Sat Apr 16 09:36:59 EDT 2022" docASTNodeCount="1198" docActiveCodeLength="9234" docExpressionCount="856" docLength="10103" endLine="46" insertionLength="9" int_docASTNodeCount="1200" int_docActiveCodeLength="9225" int_docExpressionCount="857" int_docLength="10094" length="1" offset="2055" startLine="46" starttimestamp="1649967167317" timestamp="149052574">
    <deletedText><![CDATA[,]]></deletedText>
    <insertedText><![CDATA[ extends ]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3124" _type="Delete" date="Sat Apr 16 09:37:06 EDT 2022" docASTNodeCount="1200" docActiveCodeLength="9207" docExpressionCount="857" docLength="10076" endLine="46" length="27" offset="2056" startLine="46" starttimestamp="1649967167317" timestamp="149059267">
    <text><![CDATA[extends ClientRemoteObject ]]></text>
  </DocumentChange>
  <Command __id="3127" _type="PauseCommand" date="Sat Apr 16 09:37:08 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149060975">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1705]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3128" _type="UndoCommand" date="Sat Apr 16 09:37:08 EDT 2022" starttimestamp="1649967167317" timestamp="149060980" />
  <Command __id="3130" _type="PauseCommand" date="Sat Apr 16 09:37:09 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149062184">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1204]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3129" _type="MoveCaretCommand" caretOffset="252" date="Sat Apr 16 09:37:09 EDT 2022" docOffset="2056" starttimestamp="1649967167317" timestamp="149062184" />
  <Command __id="3132" _type="PauseCommand" date="Sat Apr 16 09:37:11 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149063856">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1672]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3131" _type="SelectTextCommand" caretOffset="202" date="Sat Apr 16 09:37:11 EDT 2022" end="252" start="202" starttimestamp="1649967167317" timestamp="149063856" />
  <Command __id="3134" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:37:11 EDT 2022" starttimestamp="1649967167317" timestamp="149064178" />
  <Command __id="3136" _type="PauseCommand" date="Sat Apr 16 09:37:13 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149065842">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1664]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3135" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:37:13 EDT 2022" starttimestamp="1649967167317" timestamp="149065842" />
  <Command __id="3137" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:37:13 EDT 2022" starttimestamp="1649967167317" timestamp="149065949" />
  <Command __id="3138" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:37:13 EDT 2022" starttimestamp="1649967167317" timestamp="149065978" />
  <Command __id="3140" _type="PauseCommand" date="Sat Apr 16 09:37:16 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149069351">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3373]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3139" _type="ShellCommand" date="Sat Apr 16 09:37:16 EDT 2022" starttimestamp="1649967167317" timestamp="149069351" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3141" _type="ShellCommand" date="Sat Apr 16 09:37:16 EDT 2022" starttimestamp="1649967167317" timestamp="149069495" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3179" _type="PauseCommand" date="Sat Apr 16 09:37:18 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149071203">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1554]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3178" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:37:18 EDT 2022" starttimestamp="1649967167317" timestamp="149071202" />
  <Command __id="3180" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:37:18 EDT 2022" starttimestamp="1649967167317" timestamp="149071308" />
  <Command __id="3181" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:37:18 EDT 2022" starttimestamp="1649967167317" timestamp="149071347" />
  <Command __id="3218" _type="UndoCommand" date="Sat Apr 16 09:37:19 EDT 2022" starttimestamp="1649967167317" timestamp="149072395" />
  <Command __id="3220" _type="PauseCommand" date="Sat Apr 16 09:37:21 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149074187">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1792]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3219" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:37:21 EDT 2022" starttimestamp="1649967167317" timestamp="149074187" />
  <Command __id="3221" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:37:21 EDT 2022" starttimestamp="1649967167317" timestamp="149074287" />
  <Command __id="3222" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:37:21 EDT 2022" starttimestamp="1649967167317" timestamp="149074327" />
  <DocumentChange __id="3126" _type="Insert" date="Sat Apr 16 09:37:08 EDT 2022" docASTNodeCount="1198" docActiveCodeLength="9234" docExpressionCount="856" docLength="10103" length="27" offset="2056" starttimestamp="1649967167317" timestamp="149060975">
    <text><![CDATA[extends ClientRemoteObject ]]></text>
  </DocumentChange>
  <DocumentChange __id="3133" _type="Delete" date="Sat Apr 16 09:37:11 EDT 2022" docASTNodeCount="1200" docActiveCodeLength="9184" docExpressionCount="857" docLength="10053" endLine="46" length="50" offset="2006" startLine="46" starttimestamp="1649967167317" timestamp="149064175">
    <text><![CDATA[extends AStandAloneTwoCoupledHalloweenSimulations ]]></text>
  </DocumentChange>
  <DocumentChange __id="3142" _type="Insert" date="Sat Apr 16 09:37:16 EDT 2022" docASTNodeCount="1307" docActiveCodeLength="9914" docExpressionCount="906" docLength="11055" length="1002" offset="10046" repeat="32" starttimestamp="1649967167317" timestamp="149069581" timestamp2="149069642">
    <text><![CDATA[

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setFactories() {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="3174" _type="Insert" date="Sat Apr 16 09:37:16 EDT 2022" docASTNodeCount="1315" docActiveCodeLength="9963" docExpressionCount="913" docLength="11104" length="49" offset="357" repeat="2" starttimestamp="1649967167317" timestamp="149069644" timestamp2="149069646">
    <text><![CDATA[
import java.util.concurrent.ArrayBlockingQueue;]]></text>
  </DocumentChange>
  <DocumentChange __id="3176" _type="Insert" date="Sat Apr 16 09:37:16 EDT 2022" docASTNodeCount="1323" docActiveCodeLength="10010" docExpressionCount="920" docLength="11151" length="47" offset="89" repeat="2" starttimestamp="1649967167317" timestamp="149069648" timestamp2="149069650">
    <text><![CDATA[
import java.nio.channels.ServerSocketChannel;]]></text>
  </DocumentChange>
  <DocumentChange __id="3182" _type="Delete" date="Sat Apr 16 09:37:19 EDT 2022" docASTNodeCount="1315" docActiveCodeLength="9963" docExpressionCount="913" docLength="11104" endLine="4" length="47" offset="89" repeat="2" startLine="3" starttimestamp="1649967167317" timestamp="149072200" timestamp2="149072205">
    <text><![CDATA[
import java.nio.channels.ServerSocketChannel;]]></text>
  </DocumentChange>
  <DocumentChange __id="3184" _type="Delete" date="Sat Apr 16 09:37:19 EDT 2022" docASTNodeCount="1307" docActiveCodeLength="9914" docExpressionCount="906" docLength="11055" endLine="11" length="49" offset="357" repeat="2" startLine="10" starttimestamp="1649967167317" timestamp="149072208" timestamp2="149072210">
    <text><![CDATA[
import java.util.concurrent.ArrayBlockingQueue;]]></text>
  </DocumentChange>
  <DocumentChange __id="3186" _type="Delete" date="Sat Apr 16 09:37:19 EDT 2022" docASTNodeCount="1200" docActiveCodeLength="9184" docExpressionCount="857" docLength="10053" endLine="329" length="1002" offset="10046" repeat="32" startLine="281" starttimestamp="1649967167317" timestamp="149072213" timestamp2="149072390">
    <text><![CDATA[

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setFactories() {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="3224" _type="PauseCommand" date="Sat Apr 16 09:37:24 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149077526">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3199]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3225" _type="SelectTextCommand" caretOffset="198" date="Sat Apr 16 09:37:25 EDT 2022" end="260" start="198" starttimestamp="1649967167317" timestamp="149077725" />
  <Command __id="3227" _type="PauseCommand" date="Sat Apr 16 09:37:44 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="149097060">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[19335]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3226" _type="SelectTextCommand" caretOffset="4081" date="Sat Apr 16 09:37:44 EDT 2022" end="4081" start="264" starttimestamp="1649967167317" timestamp="149097060" />
  <Command __id="3228" _type="SelectTextCommand" caretOffset="4081" date="Sat Apr 16 09:37:44 EDT 2022" end="4081" start="264" starttimestamp="1649967167317" timestamp="149097060" />
  <Command __id="3229" _type="CopyCommand" date="Sat Apr 16 09:37:44 EDT 2022" starttimestamp="1649967167317" timestamp="149097590" />
  <Command __id="3223" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:37:24 EDT 2022" docASTNodeCount="650" docActiveCodeLength="4732" docExpressionCount="459" docLength="5395" projectName="A6" starttimestamp="1649967167317" timestamp="149077526">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3231" _type="PauseCommand" date="Sat Apr 16 09:37:46 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149099277">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1687]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3232" _type="MoveCaretCommand" caretOffset="202" date="Sat Apr 16 09:37:46 EDT 2022" docOffset="2006" starttimestamp="1649967167317" timestamp="149099435" />
  <Command __id="3234" _type="PauseCommand" date="Sat Apr 16 09:37:50 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149103151">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3716]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3233" _type="MoveCaretCommand" caretOffset="8242" date="Sat Apr 16 09:37:50 EDT 2022" docOffset="10046" starttimestamp="1649967167317" timestamp="149103151" />
  <Command __id="3236" _type="InsertStringCommand" date="Sat Apr 16 09:37:50 EDT 2022" starttimestamp="1649967167317" timestamp="149103448" timestamp2="149103448">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3238" _type="InsertStringCommand" date="Sat Apr 16 09:37:50 EDT 2022" starttimestamp="1649967167317" timestamp="149103600" timestamp2="149103600">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3268" _type="PasteCommand" date="Sat Apr 16 09:37:51 EDT 2022" starttimestamp="1649967167317" timestamp="149103954" />
  <Command __id="3269" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:37:52 EDT 2022" starttimestamp="1649967167317" timestamp="149104807" />
  <Command __id="3270" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:37:52 EDT 2022" starttimestamp="1649967167317" timestamp="149104910" />
  <Command __id="3271" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:37:52 EDT 2022" starttimestamp="1649967167317" timestamp="149104943" />
  <Command __id="3273" _type="PauseCommand" date="Sat Apr 16 09:38:04 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="149116952">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[12009]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3272" _type="MoveCaretCommand" caretOffset="11609" date="Sat Apr 16 09:38:04 EDT 2022" docOffset="11609" starttimestamp="1649967167317" timestamp="149116952" />
  <Command __id="3230" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:37:46 EDT 2022" docASTNodeCount="1200" docActiveCodeLength="9184" docExpressionCount="857" docLength="10053" projectName="A6" starttimestamp="1649967167317" timestamp="149099277">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends "), Diff(DELETE,"AStandAloneTwoCoupledHalloweenSimulations"), Diff(INSERT,"ClientRemoteObject"), Diff(EQUAL," implements ClientRemoteInterface"), Diff(DELETE,"RMI"), Diff(INSERT,"NIO"), Diff(EQUAL," {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	public void atomicBroadcast(boolean fake) {¶		return;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	public void atomicBroadcast(boolean fake) {
		return;
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3235" _type="Insert" date="Sat Apr 16 09:37:50 EDT 2022" docASTNodeCount="1200" docActiveCodeLength="9190" docExpressionCount="857" docLength="10059" length="6" offset="10046" repeat="2" starttimestamp="1649967167317" timestamp="149103442" timestamp2="149103595">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="3239" _type="Replace" date="Sat Apr 16 09:37:51 EDT 2022" docASTNodeCount="1619" docActiveCodeLength="12344" docExpressionCount="1118" docLength="13876" endLine="283" insertionLength="3818" int_docASTNodeCount="1200" int_docActiveCodeLength="9189" int_docExpressionCount="857" int_docLength="10058" length="1" offset="10051" startLine="283" starttimestamp="1649967167317" timestamp="149103839">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3240" _type="Insert" date="Sat Apr 16 09:37:51 EDT 2022" docASTNodeCount="1629" docActiveCodeLength="12404" docExpressionCount="1127" docLength="13936" length="60" offset="1506" repeat="2" starttimestamp="1649967167317" timestamp="149103878" timestamp2="149103881">
    <text><![CDATA[
import util.trace.port.consensus.RemoteProposeRequestSent;]]></text>
  </DocumentChange>
  <DocumentChange __id="3242" _type="Insert" date="Sat Apr 16 09:37:51 EDT 2022" docASTNodeCount="1637" docActiveCodeLength="12481" docExpressionCount="1133" docLength="14013" length="77" offset="659" repeat="4" starttimestamp="1649967167317" timestamp="149103882" timestamp2="149103887">
    <text><![CDATA[
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;]]></text>
  </DocumentChange>
  <DocumentChange __id="3246" _type="Insert" date="Sat Apr 16 09:37:51 EDT 2022" docASTNodeCount="1677" docActiveCodeLength="12725" docExpressionCount="1169" docLength="14257" length="244" offset="542" repeat="8" starttimestamp="1649967167317" timestamp="149103888" timestamp2="149103902">
    <text><![CDATA[
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;]]></text>
  </DocumentChange>
  <DocumentChange __id="3254" _type="Delete" date="Sat Apr 16 09:37:51 EDT 2022" docASTNodeCount="1677" docActiveCodeLength="12721" docExpressionCount="1169" docLength="14253" endLine="12" length="4" offset="357" startLine="10" starttimestamp="1649967167317" timestamp="149103903">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="3255" _type="Insert" date="Sat Apr 16 09:37:51 EDT 2022" docASTNodeCount="1691" docActiveCodeLength="12820" docExpressionCount="1181" docLength="14352" length="99" offset="357" repeat="5" starttimestamp="1649967167317" timestamp="149103905" timestamp2="149103912">
    <text><![CDATA[
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
]]></text>
  </DocumentChange>
  <DocumentChange __id="3260" _type="Insert" date="Sat Apr 16 09:37:51 EDT 2022" docASTNodeCount="1707" docActiveCodeLength="12907" docExpressionCount="1195" docLength="14439" length="87" offset="89" repeat="4" starttimestamp="1649967167317" timestamp="149103913" timestamp2="149103919">
    <text><![CDATA[
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;]]></text>
  </DocumentChange>
  <DocumentChange __id="3264" _type="Insert" date="Sat Apr 16 09:37:51 EDT 2022" docASTNodeCount="1719" docActiveCodeLength="12966" docExpressionCount="1205" docLength="14498" length="59" offset="60" repeat="4" starttimestamp="1649967167317" timestamp="149103920" timestamp2="149103926">
    <text><![CDATA[
import java.io.IOException;
import java.net.InetAddress;]]></text>
  </DocumentChange>
  <Command __id="3275" _type="PauseCommand" date="Sat Apr 16 09:38:05 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149118530">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1578]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3276" _type="InsertStringCommand" date="Sat Apr 16 09:38:05 EDT 2022" starttimestamp="1649967167317" timestamp="149118534" timestamp2="149118534">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3278" _type="InsertStringCommand" date="Sat Apr 16 09:38:05 EDT 2022" starttimestamp="1649967167317" timestamp="149118655" timestamp2="149118655">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3280" _type="PauseCommand" date="Sat Apr 16 09:38:08 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149121276">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2621]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3279" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:38:08 EDT 2022" starttimestamp="1649967167317" timestamp="149121276" />
  <Command __id="3281" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:08 EDT 2022" starttimestamp="1649967167317" timestamp="149121368" />
  <Command __id="3282" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:08 EDT 2022" starttimestamp="1649967167317" timestamp="149121409" />
  <Command __id="3284" _type="PauseCommand" date="Sat Apr 16 09:38:14 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149127375">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5966]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3283" _type="MoveCaretCommand" caretOffset="11044" date="Sat Apr 16 09:38:14 EDT 2022" docOffset="11044" starttimestamp="1649967167317" timestamp="149127375" />
  <DocumentChange __id="3274" _type="Insert" date="Sat Apr 16 09:38:05 EDT 2022" docASTNodeCount="1712" docActiveCodeLength="12930" docExpressionCount="1200" docLength="14500" length="2" offset="11609" repeat="2" starttimestamp="1649967167317" timestamp="149118530" timestamp2="149118651">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="3286" _type="PauseCommand" date="Sat Apr 16 09:38:16 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149128689">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1314]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3287" _type="InsertStringCommand" date="Sat Apr 16 09:38:16 EDT 2022" starttimestamp="1649967167317" timestamp="149128694" timestamp2="149128694">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3289" _type="InsertStringCommand" date="Sat Apr 16 09:38:16 EDT 2022" starttimestamp="1649967167317" timestamp="149129091" timestamp2="149129091">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="3291" _type="InsertStringCommand" date="Sat Apr 16 09:38:16 EDT 2022" starttimestamp="1649967167317" timestamp="149129271" timestamp2="149129271">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3293" _type="InsertStringCommand" date="Sat Apr 16 09:38:16 EDT 2022" starttimestamp="1649967167317" timestamp="149129394" timestamp2="149129394">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="3295" _type="InsertStringCommand" date="Sat Apr 16 09:38:16 EDT 2022" starttimestamp="1649967167317" timestamp="149129494" timestamp2="149129494">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3297" _type="InsertStringCommand" date="Sat Apr 16 09:38:17 EDT 2022" starttimestamp="1649967167317" timestamp="149130012" timestamp2="149130012">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="3299" _type="InsertStringCommand" date="Sat Apr 16 09:38:17 EDT 2022" starttimestamp="1649967167317" timestamp="149130636" timestamp2="149130636">
    <data><![CDATA[2]]></data>
  </Command>
  <DocumentChange __id="3285" _type="Insert" date="Sat Apr 16 09:38:16 EDT 2022" docASTNodeCount="1712" docActiveCodeLength="12937" docExpressionCount="1200" docLength="14507" length="7" offset="11044" repeat="7" starttimestamp="1649967167317" timestamp="149128689" timestamp2="149130629">
    <text><![CDATA[_Fake_2]]></text>
  </DocumentChange>
  <Command __id="3301" _type="PauseCommand" date="Sat Apr 16 09:38:20 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149133015">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2379]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="3300" _type="Delete" date="Sat Apr 16 09:38:20 EDT 2022" docASTNodeCount="1712" docActiveCodeLength="12930" docExpressionCount="1200" docLength="14500" endLine="306" length="7" offset="11044" repeat="7" startLine="306" starttimestamp="1649967167317" timestamp="149133015" timestamp2="149134324">
    <text><![CDATA[_Fake_2]]></text>
  </DocumentChange>
  <Command __id="3302" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:38:20 EDT 2022" starttimestamp="1649967167317" timestamp="149133018" />
  <Command __id="3304" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:38:20 EDT 2022" starttimestamp="1649967167317" timestamp="149133517" />
  <Command __id="3306" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:38:21 EDT 2022" starttimestamp="1649967167317" timestamp="149133696" />
  <Command __id="3308" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:38:21 EDT 2022" starttimestamp="1649967167317" timestamp="149133853" />
  <Command __id="3310" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:38:21 EDT 2022" starttimestamp="1649967167317" timestamp="149134011" />
  <Command __id="3312" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:38:21 EDT 2022" starttimestamp="1649967167317" timestamp="149134179" />
  <Command __id="3314" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:38:21 EDT 2022" starttimestamp="1649967167317" timestamp="149134327" />
  <Command __id="3316" _type="InsertStringCommand" date="Sat Apr 16 09:38:22 EDT 2022" starttimestamp="1649967167317" timestamp="149134761" timestamp2="149134761">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="3318" _type="InsertStringCommand" date="Sat Apr 16 09:38:22 EDT 2022" starttimestamp="1649967167317" timestamp="149134966" timestamp2="149134966">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3320" _type="InsertStringCommand" date="Sat Apr 16 09:38:22 EDT 2022" starttimestamp="1649967167317" timestamp="149135092" timestamp2="149135092">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="3322" _type="InsertStringCommand" date="Sat Apr 16 09:38:22 EDT 2022" starttimestamp="1649967167317" timestamp="149135226" timestamp2="149135226">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3324" _type="InsertStringCommand" date="Sat Apr 16 09:38:22 EDT 2022" starttimestamp="1649967167317" timestamp="149135656" timestamp2="149135656">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3326" _type="InsertStringCommand" date="Sat Apr 16 09:38:23 EDT 2022" starttimestamp="1649967167317" timestamp="149135850" timestamp2="149135850">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3328" _type="InsertStringCommand" date="Sat Apr 16 09:38:23 EDT 2022" starttimestamp="1649967167317" timestamp="149135955" timestamp2="149135955">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3329" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:38:24 EDT 2022" starttimestamp="1649967167317" timestamp="149136833" />
  <Command __id="3330" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:24 EDT 2022" starttimestamp="1649967167317" timestamp="149136924" />
  <Command __id="3331" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:24 EDT 2022" starttimestamp="1649967167317" timestamp="149136956" />
  <Command __id="3333" _type="PauseCommand" date="Sat Apr 16 09:38:30 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149143613">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6657]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3332" _type="MoveCaretCommand" caretOffset="11016" date="Sat Apr 16 09:38:30 EDT 2022" docOffset="11016" starttimestamp="1649967167317" timestamp="149143613" />
  <Command __id="3335" _type="InsertStringCommand" date="Sat Apr 16 09:38:31 EDT 2022" starttimestamp="1649967167317" timestamp="149144151" timestamp2="149144151">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3337" _type="InsertStringCommand" date="Sat Apr 16 09:38:31 EDT 2022" starttimestamp="1649967167317" timestamp="149144284" timestamp2="149144284">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3339" _type="PauseCommand" date="Sat Apr 16 09:38:32 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149145470">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1186]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3338" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:38:32 EDT 2022" starttimestamp="1649967167317" timestamp="149145470" />
  <Command __id="3340" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:32 EDT 2022" starttimestamp="1649967167317" timestamp="149145569" />
  <Command __id="3341" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:32 EDT 2022" starttimestamp="1649967167317" timestamp="149145613" />
  <Command __id="3343" _type="PauseCommand" date="Sat Apr 16 09:38:36 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149149680">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4067]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3342" _type="ShellCommand" date="Sat Apr 16 09:38:36 EDT 2022" starttimestamp="1649967167317" timestamp="149149680" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3344" _type="ShellCommand" date="Sat Apr 16 09:38:37 EDT 2022" starttimestamp="1649967167317" timestamp="149149822" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3347" _type="PauseCommand" date="Sat Apr 16 09:38:39 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149152142">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Replace]]></prev>
    <pause><![CDATA[2303]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3346" _type="MoveCaretCommand" caretOffset="10845" date="Sat Apr 16 09:38:39 EDT 2022" docOffset="10845" starttimestamp="1649967167317" timestamp="149152142" />
  <Command __id="3348" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:38:40 EDT 2022" starttimestamp="1649967167317" timestamp="149152727" />
  <Command __id="3349" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:40 EDT 2022" starttimestamp="1649967167317" timestamp="149152834" />
  <Command __id="3350" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:40 EDT 2022" starttimestamp="1649967167317" timestamp="149152864" />
  <Command __id="3352" _type="PauseCommand" date="Sat Apr 16 09:38:46 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149159275">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6410]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3351" _type="ShellCommand" date="Sat Apr 16 09:38:46 EDT 2022" starttimestamp="1649967167317" timestamp="149159274" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3353" _type="ShellCommand" date="Sat Apr 16 09:38:46 EDT 2022" starttimestamp="1649967167317" timestamp="149159418" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3356" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:38:47 EDT 2022" starttimestamp="1649967167317" timestamp="149160083" />
  <Command __id="3357" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:47 EDT 2022" starttimestamp="1649967167317" timestamp="149160168" />
  <Command __id="3358" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:47 EDT 2022" starttimestamp="1649967167317" timestamp="149160213" />
  <Command __id="3360" _type="PauseCommand" date="Sat Apr 16 09:38:49 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149162124">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1911]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3359" _type="MoveCaretCommand" caretOffset="8299" date="Sat Apr 16 09:38:49 EDT 2022" docOffset="8299" starttimestamp="1649967167317" timestamp="149162124" />
  <Command __id="3362" _type="InsertStringCommand" date="Sat Apr 16 09:38:49 EDT 2022" starttimestamp="1649967167317" timestamp="149162571" timestamp2="149162571">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3364" _type="InsertStringCommand" date="Sat Apr 16 09:38:50 EDT 2022" starttimestamp="1649967167317" timestamp="149162697" timestamp2="149162697">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3366" _type="PauseCommand" date="Sat Apr 16 09:38:51 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149163934">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1237]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3365" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:38:51 EDT 2022" starttimestamp="1649967167317" timestamp="149163934" />
  <Command __id="3367" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:51 EDT 2022" starttimestamp="1649967167317" timestamp="149164038" />
  <Command __id="3368" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:38:51 EDT 2022" starttimestamp="1649967167317" timestamp="149164076" />
  <Command __id="3370" _type="PauseCommand" date="Sat Apr 16 09:39:19 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="149191977">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[27901]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3369" _type="ShellCommand" date="Sat Apr 16 09:39:19 EDT 2022" starttimestamp="1649967167317" timestamp="149191977" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3371" _type="ShellCommand" date="Sat Apr 16 09:39:19 EDT 2022" starttimestamp="1649967167317" timestamp="149192089" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3374" _type="PauseCommand" date="Sat Apr 16 09:39:20 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149193184">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Replace]]></prev>
    <pause><![CDATA[1079]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3381" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:39:36 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="149208859" type="Run" />
  <Command __id="3383" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:39:36 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="149208859" type="Run" />
  <Command __id="3384" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:39:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149208974" type="Run" />
  <Command __id="3385" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:39:36 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149208988" type="Run" />
  <Command __id="3386" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:39:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149208990" type="Run" />
  <Command __id="3388" _type="PauseCommand" date="Sat Apr 16 09:39:38 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149211285">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2295]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3389" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:39:40 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149213505" type="Run" />
  <Command __id="3391" _type="ConsoleOutput" date="Sat Apr 16 09:39:40 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149213603" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sat Apr 16 09:39:40 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@65e83bac . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Sat Apr 16 09:39:40 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3393" _type="PauseCommand" date="Sat Apr 16 09:39:43 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149216386">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2783]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3392" _type="ConsoleOutput" date="Sat Apr 16 09:39:43 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149216386" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:125
Running second pass checks Sat Apr 16 09:39:43 EDT 2022
Start O(n2) inter- and intra class method calls:Sat Apr 16 09:39:43 EDT 2022
End O(n2) inter- and intra class method calls:Sat Apr 16 09:39:43 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:125¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":Sat Apr 16 09:39:40"), Diff(INSERT," Sat Apr 16 09:39:43 EDT 2022¶Start O(n2) inter- and intra class method calls:Sat Apr 16 09:39:43 EDT 2022¶End O(n2) inter- and intra class method calls:Sat Apr 16 09:39:43"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3395" _type="PauseCommand" date="Sat Apr 16 09:39:45 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149218060">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1674]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3394" _type="ConsoleOutput" date="Sat Apr 16 09:39:45 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149218060" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sat Apr 16 09:39:45 EDT 2022
Generating checks:Sat Apr 16 09:39:45 EDT 2022
Finished Generating checks:Sat Apr 16 09:39:45 EDT 2022
Generating externals:Sat Apr 16 09:39:45 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:125¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Sat Apr 16 09:39:4"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating check"), Diff(EQUAL,"s:Sat Apr 16 09:39:4"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished Generating checks:Sat Apr 16 09:39:45 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Sat Apr 16 09:39:4"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3396" _type="ConsoleOutput" date="Sat Apr 16 09:39:45 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149218638" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sat Apr 16 09:39:45 EDT 2022
Test execution time (ms):5060
A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.75

Test execution time (ms):27
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Sat Apr 16 09:39:45 EDT 2022¶"), Diff(DELETE,"Generating checks:Sat Apr 16 09:39:45 EDT 2022¶Finished Generating checks:Sat Apr 16 09:39:45 EDT 2022¶Generating externals:Sat Apr 16 09:39:45 EDT 2022"), Diff(INSERT,"Test execution time (ms):5060¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.75¶¶Test execution time (ms):27"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3397" _type="ConsoleOutput" date="Sat Apr 16 09:39:46 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149218723" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.4827586206896552

Test execution time (ms):12

A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.7
Test execution time (ms):15

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (431)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (294)
  |~ ClientRemoteObjectNIO.java (170)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (82)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (76)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (330)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (335)
   |~ ServerRemoteObjectNIO.java (159)
   |~ ServerRemoteObjectRMI.java (245)

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sat Apr 16 09:39:45 EDT 2022"), Diff(INSERT,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.4827586206896552¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"5060"), Diff(INSERT,"12¶"), Diff(EQUAL,"¶A6Expected"), Diff(DELETE,"Interfac"), Diff(INSERT,"Signatur"), Diff(EQUAL,"es did not pass completely:See console trace about lines failing  this check%0.7"), Diff(DELETE,"5¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"27"), Diff(INSERT,"15¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (431)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (294)¶  |~ ClientRemoteObjectNIO.java (170)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (82)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (330)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3399" _type="PauseCommand" date="Sat Apr 16 09:39:52 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149225616">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6892]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3398" _type="ConsoleOutput" date="Sat Apr 16 09:39:52 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149225615" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@49d3e856 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ExpectedCalls did not pass completely:See console trace about lines fail"), Diff(INSERT,"Re-runn"), Diff(EQUAL,"ing "), Diff(DELETE," "), Diff(EQUAL,"t"), Diff(DELETE,"his check%0.4827586206896552¶¶Test execution time (ms):12¶¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.7¶Test execution time (ms):15¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (431)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (294)¶  |~ ClientRemoteObjectNIO.java (170)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (82)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (330)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶"), Diff(INSERT,"est gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@49d3e856 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3401" _type="PauseCommand" date="Sat Apr 16 09:39:55 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149228250">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2635]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3400" _type="ConsoleOutput" date="Sat Apr 16 09:39:55 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149228250" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedSignatures@51dfc38a . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6Expected"), Diff(DELETE,"Calls@49d3e856"), Diff(INSERT,"Signatures@51dfc38a"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3403" _type="PauseCommand" date="Sat Apr 16 09:40:02 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149234789">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6538]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3402" _type="ShellCommand" date="Sat Apr 16 09:40:02 EDT 2022" starttimestamp="1649967167317" timestamp="149234788" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3405" _type="PauseCommand" date="Sat Apr 16 09:40:49 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="149282312">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[47524]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3404" _type="MoveCaretCommand" caretOffset="14415" date="Sat Apr 16 09:40:49 EDT 2022" docOffset="14415" starttimestamp="1649967167317" timestamp="149282312" />
  <Command __id="3407" _type="PauseCommand" date="Sat Apr 16 09:40:52 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149285150">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2838]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3406" _type="MoveCaretCommand" caretOffset="14403" date="Sat Apr 16 09:40:52 EDT 2022" docOffset="14403" starttimestamp="1649967167317" timestamp="149285150" />
  <Command __id="3409" _type="ShellCommand" date="Sat Apr 16 09:40:53 EDT 2022" starttimestamp="1649967167317" timestamp="149285689" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3410" _type="FindCommand" caseSensitive="false" date="Sat Apr 16 09:40:53 EDT 2022" forward="true" matchWord="false" offset="14403" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="149286417" wrapSearch="false">
    <searchString><![CDATA[fake]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3412" _type="PauseCommand" date="Sat Apr 16 09:40:56 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149288817">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2400]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3411" _type="FindCommand" caseSensitive="false" date="Sat Apr 16 09:40:56 EDT 2022" forward="false" matchWord="false" offset="14403" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649967167317" timestamp="149288817" wrapSearch="false">
    <searchString><![CDATA[fake]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3414" _type="PauseCommand" date="Sat Apr 16 09:40:58 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149290685">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1868]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3413" _type="ShellCommand" date="Sat Apr 16 09:40:58 EDT 2022" starttimestamp="1649967167317" timestamp="149290685" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3415" _type="MoveCaretCommand" caretOffset="11091" date="Sat Apr 16 09:40:58 EDT 2022" docOffset="11091" starttimestamp="1649967167317" timestamp="149290756" />
  <Command __id="3417" _type="PauseCommand" date="Sat Apr 16 09:41:00 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149292945">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2189]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3462" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:41:06 EDT 2022" starttimestamp="1649967167317" timestamp="149298849" />
  <Command __id="3464" _type="PauseCommand" date="Sat Apr 16 09:41:07 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149299910">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1061]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3463" _type="ShellCommand" date="Sat Apr 16 09:41:07 EDT 2022" starttimestamp="1649967167317" timestamp="149299910" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3465" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:41:07 EDT 2022" starttimestamp="1649967167317" timestamp="149299973" />
  <Command __id="3466" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:41:07 EDT 2022" starttimestamp="1649967167317" timestamp="149299977" />
  <Command __id="3467" _type="ShellCommand" date="Sat Apr 16 09:41:07 EDT 2022" starttimestamp="1649967167317" timestamp="149300003" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3469" _type="PauseCommand" date="Sat Apr 16 09:41:30 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="149323494">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[23491]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3468" _type="ShellCommand" date="Sat Apr 16 09:41:30 EDT 2022" starttimestamp="1649967167317" timestamp="149323494" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3471" _type="PauseCommand" date="Sat Apr 16 09:41:32 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149325331">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1836]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3475" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:41:35 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="149328666" type="Run" />
  <Command __id="3477" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:41:35 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="149328666" type="Run" />
  <Command __id="3478" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:41:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149328891" type="Run" />
  <Command __id="3479" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:41:36 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149328903" type="Run" />
  <Command __id="3480" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:41:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149328906" type="Run" />
  <Command __id="3482" _type="PauseCommand" date="Sat Apr 16 09:41:38 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149331305">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2399]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3483" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:41:40 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149333612" type="Run" />
  <Command __id="3485" _type="ConsoleOutput" date="Sat Apr 16 09:41:41 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149333712" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sat Apr 16 09:41:40 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedSignatures@51dfc38a . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Sat Apr 16 09:41:40 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3487" _type="PauseCommand" date="Sat Apr 16 09:41:43 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149336635">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2923]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3486" _type="ConsoleOutput" date="Sat Apr 16 09:41:43 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149336635" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:125
Running second pass checks Sat Apr 16 09:41:43 EDT 2022
Start O(n2) inter- and intra class method calls:Sat Apr 16 09:41:43 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:125¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Sat Apr 16 09:41:4"), Diff(DELETE,"0"), Diff(INSERT,"3 EDT 2022¶Start O(n2) inter- and intra class method calls:Sat Apr 16 09:41:43"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3488" _type="ConsoleOutput" date="Sat Apr 16 09:41:44 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149336722" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sat Apr 16 09:41:43 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:125¶Running second pass checks Sat Apr 16 09:41:43 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sat Apr 16 09:41:43 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3490" _type="PauseCommand" date="Sat Apr 16 09:41:45 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149338346">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1624]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3489" _type="ConsoleOutput" date="Sat Apr 16 09:41:45 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149338346" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sat Apr 16 09:41:45 EDT 2022
Generating checks:Sat Apr 16 09:41:45 EDT 2022
Finished Generating checks:Sat Apr 16 09:41:45 EDT 2022
Generating externals:Sat Apr 16 09:41:45 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Sat Apr 16 09:41:45 EDT 2022¶Generating checks:Sat Apr 16 09:41:45 EDT 2022¶Finished Generating checks:Sat Apr 16 09:41:45 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Sat Apr 16 09:41:4"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3491" _type="ConsoleOutput" date="Sat Apr 16 09:41:46 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149338939" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sat Apr 16 09:41:46 EDT 2022
Test execution time (ms):5252

A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.75
Test execution time (ms):33
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Sat Apr 16 09:41:4"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating checks:Sat Apr 16 09:41:45 EDT 2022¶Finished Generating checks:Sat Apr 16 09:41:45 EDT 2022¶Generating externals:Sat Apr 16 09:41:45 EDT 2022"), Diff(INSERT,"Test execution time (ms):5252¶¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.75¶Test execution time (ms):33"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3492" _type="ConsoleOutput" date="Sat Apr 16 09:41:46 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149339023" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.4827586206896552

Test execution time (ms):12
A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.8

Test execution time (ms):10
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sat Apr 16 09:41:46 EDT 2022"), Diff(INSERT,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.4827586206896552¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"5252¶"), Diff(INSERT,"12"), Diff(EQUAL,"¶A6Expected"), Diff(DELETE,"Interfac"), Diff(INSERT,"Signatur"), Diff(EQUAL,"es did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"75"), Diff(INSERT,"8¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"33"), Diff(INSERT,"10"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3493" _type="ConsoleOutput" date="Sat Apr 16 09:41:46 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149339107" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (431)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (294)
  |~ ClientRemoteObjectNIO.java (170)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (82)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (76)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (330)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (335)
   |~ ServerRemoteObjectNIO.java (159)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.4827586206896552¶¶Test execution time (ms):12¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.8¶¶Test execution time (ms):10"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (431)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (294)¶  |~ ClientRemoteObjectNIO.java (170)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (82)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (330)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3495" _type="PauseCommand" date="Sat Apr 16 09:41:48 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149341015">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1908]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3494" _type="ConsoleOutput" date="Sat Apr 16 09:41:48 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149341015" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3a3390b8 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (431)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (294)¶  |~ ClientRemoteObjectNIO.java (170)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (82)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (330)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3a3390b8 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3497" _type="PauseCommand" date="Sat Apr 16 09:41:53 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149345813">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4798]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3496" _type="ConsoleOutput" date="Sat Apr 16 09:41:53 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149345813" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3a3390b8 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3a3390b8 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3499" _type="PauseCommand" date="Sat Apr 16 09:41:54 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149347094">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1281]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3498" _type="ConsoleOutput" date="Sat Apr 16 09:41:54 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149347094" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@2f5bbe25 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6Expected"), Diff(DELETE,"Interfaces@3a3390b8"), Diff(INSERT,"Calls@2f5bbe25"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3501" _type="PauseCommand" date="Sat Apr 16 09:41:56 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149349028">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1934]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3500" _type="ConsoleOutput" date="Sat Apr 16 09:41:56 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149349028" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@2f5bbe25 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@2f5bbe25 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3503" _type="PauseCommand" date="Sat Apr 16 09:41:57 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149350353">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1325]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3502" _type="ConsoleOutput" date="Sat Apr 16 09:41:57 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149350353" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedSignatures@57f1605d . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6Expected"), Diff(DELETE,"Calls@2f5bbe25"), Diff(INSERT,"Signatures@57f1605d"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3505" _type="PauseCommand" date="Sat Apr 16 09:41:59 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149351721">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1368]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3504" _type="ConsoleOutput" date="Sat Apr 16 09:41:59 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149351721" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedSignatures@57f1605d . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedSignatures@57f1605d . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3507" _type="PauseCommand" date="Sat Apr 16 09:42:09 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="149362396">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10675]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3506" _type="ShellCommand" date="Sat Apr 16 09:42:09 EDT 2022" starttimestamp="1649967167317" timestamp="149362396" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3508" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:42:10 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149363071" type="Debug" />
  <Command __id="3509" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:42:10 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149363071" type="Debug" />
  <Command __id="3510" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:42:10 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="149363071" type="Run" />
  <DocumentChange __id="3315" _type="Insert" date="Sat Apr 16 09:38:22 EDT 2022" docASTNodeCount="1712" docActiveCodeLength="12937" docExpressionCount="1200" docLength="14507" length="7" offset="11044" repeat="7" starttimestamp="1649967167317" timestamp="149134756" timestamp2="149135951">
    <text><![CDATA[FakeTwo]]></text>
  </DocumentChange>
  <DocumentChange __id="3334" _type="Insert" date="Sat Apr 16 09:38:31 EDT 2022" docASTNodeCount="1710" docActiveCodeLength="12928" docExpressionCount="1198" docLength="14509" length="2" offset="11016" repeat="2" starttimestamp="1649967167317" timestamp="149144146" timestamp2="149144278">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3345" _type="Replace" date="Sat Apr 16 09:38:37 EDT 2022" docASTNodeCount="1710" docActiveCodeLength="12929" docExpressionCount="1198" docLength="14510" endLine="299" insertionLength="22" int_docASTNodeCount="1704" int_docActiveCodeLength="12907" int_docExpressionCount="1196" int_docLength="14488" length="21" offset="10822" startLine="299" starttimestamp="1649967167317" timestamp="149149839">
    <deletedText><![CDATA[broadcastIPCMechanism]]></deletedText>
    <insertedText><![CDATA[broadcastIPCMechanism1]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3354" _type="Replace" date="Sat Apr 16 09:38:46 EDT 2022" docASTNodeCount="1710" docActiveCodeLength="12930" docExpressionCount="1198" docLength="14511" endLine="227" insertionLength="18" int_docASTNodeCount="1709" int_docActiveCodeLength="12912" int_docExpressionCount="1197" int_docLength="14493" length="17" offset="8403" startLine="227" starttimestamp="1649967167317" timestamp="149159436">
    <deletedText><![CDATA[simulationCommand]]></deletedText>
    <insertedText><![CDATA[simulationCommand1]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3355" _type="Replace" date="Sat Apr 16 09:38:46 EDT 2022" docASTNodeCount="1710" docActiveCodeLength="12931" docExpressionCount="1198" docLength="14512" endLine="406" insertionLength="18" int_docASTNodeCount="1710" int_docActiveCodeLength="12913" int_docExpressionCount="1198" int_docLength="14494" length="17" offset="13849" startLine="406" starttimestamp="1649967167317" timestamp="149159448">
    <deletedText><![CDATA[simulationCommand]]></deletedText>
    <insertedText><![CDATA[simulationCommand1]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3361" _type="Insert" date="Sat Apr 16 09:38:49 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12922" docExpressionCount="1196" docLength="14514" length="2" offset="8299" repeat="2" starttimestamp="1649967167317" timestamp="149162567" timestamp2="149162691">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3372" _type="Replace" date="Sat Apr 16 09:39:19 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12921" docExpressionCount="1196" docLength="14513" endLine="406" insertionLength="17" int_docASTNodeCount="1708" int_docActiveCodeLength="12904" int_docExpressionCount="1196" int_docLength="14496" length="18" offset="13851" startLine="406" starttimestamp="1649967167317" timestamp="149192104">
    <deletedText><![CDATA[simulationCommand1]]></deletedText>
    <insertedText><![CDATA[simulationCommand]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3418" _type="Replace" date="Sat Apr 16 09:41:00 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12911" docExpressionCount="1196" docLength="14503" endLine="306" insertionLength="1" int_docASTNodeCount="1706" int_docActiveCodeLength="12910" int_docExpressionCount="1195" int_docLength="14502" length="11" offset="11046" startLine="306" starttimestamp="1649967167317" timestamp="149293370">
    <deletedText><![CDATA[initFakeTwo]]></deletedText>
    <insertedText><![CDATA[n]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3420" _type="Insert" date="Sat Apr 16 09:41:00 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12912" docExpressionCount="1196" docLength="14504" length="1" offset="11047" starttimestamp="1649967167317" timestamp="149293488">
    <text><![CDATA[o]]></text>
  </DocumentChange>
  <DocumentChange __id="3422" _type="Delete" date="Sat Apr 16 09:41:01 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12911" docExpressionCount="1196" docLength="14503" endLine="306" length="1" offset="11047" startLine="306" starttimestamp="1649967167317" timestamp="149294013">
    <text><![CDATA[o]]></text>
  </DocumentChange>
  <DocumentChange __id="3424" _type="Insert" date="Sat Apr 16 09:41:01 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12913" docExpressionCount="1196" docLength="14505" length="2" offset="11047" repeat="2" starttimestamp="1649967167317" timestamp="149294216" timestamp2="149294242">
    <text><![CDATA[oi]]></text>
  </DocumentChange>
  <DocumentChange __id="3428" _type="Delete" date="Sat Apr 16 09:41:02 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12911" docExpressionCount="1196" docLength="14503" endLine="306" length="2" offset="11047" repeat="2" startLine="306" starttimestamp="1649967167317" timestamp="149294906" timestamp2="149295044">
    <text><![CDATA[oi]]></text>
  </DocumentChange>
  <DocumentChange __id="3432" _type="Insert" date="Sat Apr 16 09:41:02 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12916" docExpressionCount="1196" docLength="14508" length="5" offset="11047" repeat="5" starttimestamp="1649967167317" timestamp="149295238" timestamp2="149296090">
    <text><![CDATA[ioINI]]></text>
  </DocumentChange>
  <DocumentChange __id="3442" _type="Delete" date="Sat Apr 16 09:41:03 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12914" docExpressionCount="1196" docLength="14506" endLine="306" length="2" offset="11050" repeat="2" startLine="306" starttimestamp="1649967167317" timestamp="149296501" timestamp2="149296635">
    <text><![CDATA[NI]]></text>
  </DocumentChange>
  <DocumentChange __id="3446" _type="Insert" date="Sat Apr 16 09:41:04 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12916" docExpressionCount="1196" docLength="14508" length="2" offset="11050" repeat="2" starttimestamp="1649967167317" timestamp="149296826" timestamp2="149296938">
    <text><![CDATA[it]]></text>
  </DocumentChange>
  <DocumentChange __id="3450" _type="Delete" date="Sat Apr 16 09:41:04 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12914" docExpressionCount="1196" docLength="14506" endLine="306" length="2" offset="11050" repeat="2" startLine="306" starttimestamp="1649967167317" timestamp="149297580" timestamp2="149297726">
    <text><![CDATA[it]]></text>
  </DocumentChange>
  <DocumentChange __id="3454" _type="Insert" date="Sat Apr 16 09:41:05 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12917" docExpressionCount="1196" docLength="14509" length="3" offset="11050" repeat="3" starttimestamp="1649967167317" timestamp="149297886" timestamp2="149298118">
    <text><![CDATA[nit]]></text>
  </DocumentChange>
  <Command __id="3512" _type="PauseCommand" date="Sat Apr 16 09:42:17 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149369798">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[6727]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3514" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:42:18 EDT 2022" starttimestamp="1649967167317" timestamp="149371261" />
  <Command __id="3516" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:42:18 EDT 2022" starttimestamp="1649967167317" timestamp="149371265" />
  <Command __id="3511" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:42:17 EDT 2022" docASTNodeCount="1271" docActiveCodeLength="9271" docExpressionCount="895" docLength="10370" projectName="A6" starttimestamp="1649967167317" timestamp="149369798">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}


}
]]></snapshot>
  </Command>
  <Command __id="3518" _type="PauseCommand" date="Sat Apr 16 09:42:21 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149374230">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2965]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3519" _type="SelectTextCommand" caretOffset="1591" date="Sat Apr 16 09:42:21 EDT 2022" end="1591" start="1585" starttimestamp="1649967167317" timestamp="149374414" />
  <Command __id="3521" _type="PauseCommand" date="Sat Apr 16 09:42:28 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149381207">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[6793]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3520" _type="SelectTextCommand" caretOffset="92" date="Sat Apr 16 09:42:28 EDT 2022" end="158" start="92" starttimestamp="1649967167317" timestamp="149381207" />
  <Command __id="3522" _type="CopyCommand" date="Sat Apr 16 09:42:28 EDT 2022" starttimestamp="1649967167317" timestamp="149381536" />
  <Command __id="3517" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:42:21 EDT 2022" docASTNodeCount="638" docActiveCodeLength="4496" docExpressionCount="449" docLength="4883" projectName="A6" starttimestamp="1649967167317" timestamp="149374230">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.exampleServerReadThread;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶¶public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	@Override¶	protected void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		reader.notifyThread();¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3524" _type="PauseCommand" date="Sat Apr 16 09:42:30 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149383443">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1907]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3525" _type="MoveCaretCommand" caretOffset="0" date="Sat Apr 16 09:42:30 EDT 2022" docOffset="0" starttimestamp="1649967167317" timestamp="149383652" />
  <Command __id="3527" _type="PauseCommand" date="Sat Apr 16 09:42:35 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149388520">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4868]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3526" _type="SelectTextCommand" caretOffset="187" date="Sat Apr 16 09:42:35 EDT 2022" end="272" start="187" starttimestamp="1649967167317" timestamp="149388520" />
  <Command __id="3531" _type="PasteCommand" date="Sat Apr 16 09:42:36 EDT 2022" starttimestamp="1649967167317" timestamp="149389006" />
  <Command __id="3532" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:42:36 EDT 2022" starttimestamp="1649967167317" timestamp="149389593" />
  <Command __id="3533" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:42:37 EDT 2022" starttimestamp="1649967167317" timestamp="149389987" />
  <Command __id="3534" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:42:37 EDT 2022" starttimestamp="1649967167317" timestamp="149390027" />
  <Command __id="3523" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:42:30 EDT 2022" docASTNodeCount="1271" docActiveCodeLength="9271" docExpressionCount="895" docLength="10370" projectName="A6" starttimestamp="1649967167317" timestamp="149383443">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3528" _type="Replace" date="Sat Apr 16 09:42:36 EDT 2022" docASTNodeCount="1271" docActiveCodeLength="9252" docExpressionCount="895" docLength="10351" endLine="44" insertionLength="66" int_docASTNodeCount="1267" int_docActiveCodeLength="9186" int_docExpressionCount="893" int_docLength="10285" length="85" offset="1958" startLine="44" starttimestamp="1649967167317" timestamp="149388874">
    <deletedText><![CDATA[extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI]]></deletedText>
    <insertedText><![CDATA[extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3529" _type="Insert" date="Sat Apr 16 09:42:36 EDT 2022" docASTNodeCount="1277" docActiveCodeLength="9300" docExpressionCount="900" docLength="10399" length="48" offset="721" repeat="2" starttimestamp="1649967167317" timestamp="149388960" timestamp2="149388963">
    <text><![CDATA[
import server.remote.ServerRemoteInterfaceNIO;]]></text>
  </DocumentChange>
  <Command __id="3536" _type="PauseCommand" date="Sat Apr 16 09:42:40 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149393160">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3133]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3537" _type="SelectTextCommand" caretOffset="92" date="Sat Apr 16 09:42:40 EDT 2022" end="158" start="92" starttimestamp="1649967167317" timestamp="149393373" />
  <Command __id="3539" _type="PauseCommand" date="Sat Apr 16 09:42:51 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="149403791">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[10418]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3538" _type="SelectTextCommand" caretOffset="161" date="Sat Apr 16 09:42:51 EDT 2022" end="3688" start="161" starttimestamp="1649967167317" timestamp="149403791" />
  <Command __id="3540" _type="CopyCommand" date="Sat Apr 16 09:42:51 EDT 2022" starttimestamp="1649967167317" timestamp="149404294" />
  <Command __id="3535" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:42:40 EDT 2022" docASTNodeCount="638" docActiveCodeLength="4496" docExpressionCount="449" docLength="4883" projectName="A6" starttimestamp="1649967167317" timestamp="149393160">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.exampleServerReadThread;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶¶public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	@Override¶	protected void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		reader.notifyThread();¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3542" _type="PauseCommand" date="Sat Apr 16 09:42:53 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149406003">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1709]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3543" _type="MoveCaretCommand" caretOffset="253" date="Sat Apr 16 09:42:53 EDT 2022" docOffset="2072" starttimestamp="1649967167317" timestamp="149406264" />
  <Command __id="3545" _type="PauseCommand" date="Sat Apr 16 09:42:57 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149409937">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3673]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3544" _type="MoveCaretCommand" caretOffset="8571" date="Sat Apr 16 09:42:57 EDT 2022" docOffset="10390" starttimestamp="1649967167317" timestamp="149409937" />
  <Command __id="3547" _type="InsertStringCommand" date="Sat Apr 16 09:42:57 EDT 2022" starttimestamp="1649967167317" timestamp="149410211" timestamp2="149410211">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3549" _type="InsertStringCommand" date="Sat Apr 16 09:42:57 EDT 2022" starttimestamp="1649967167317" timestamp="149410654" timestamp2="149410654">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3577" _type="PasteCommand" date="Sat Apr 16 09:42:58 EDT 2022" starttimestamp="1649967167317" timestamp="149411265" />
  <Command __id="3578" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:42:59 EDT 2022" starttimestamp="1649967167317" timestamp="149411768" />
  <Command __id="3579" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:42:59 EDT 2022" starttimestamp="1649967167317" timestamp="149411868" />
  <Command __id="3580" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:42:59 EDT 2022" starttimestamp="1649967167317" timestamp="149411910" />
  <Command __id="3582" _type="PauseCommand" date="Sat Apr 16 09:43:01 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149414242">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2332]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3581" _type="MoveCaretCommand" caretOffset="13734" date="Sat Apr 16 09:43:01 EDT 2022" docOffset="13734" starttimestamp="1649967167317" timestamp="149414242" />
  <Command __id="3584" _type="InsertStringCommand" date="Sat Apr 16 09:43:02 EDT 2022" starttimestamp="1649967167317" timestamp="149415019" timestamp2="149415019">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="3585" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:43:03 EDT 2022" starttimestamp="1649967167317" timestamp="149415966" />
  <Command __id="3586" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:43:03 EDT 2022" starttimestamp="1649967167317" timestamp="149416066" />
  <Command __id="3587" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:43:03 EDT 2022" starttimestamp="1649967167317" timestamp="149416113" />
  <Command __id="3589" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Apr 16 09:43:04 EDT 2022" starttimestamp="1649967167317" timestamp="149416878" />
  <Command __id="3591" _type="InsertStringCommand" date="Sat Apr 16 09:43:04 EDT 2022" starttimestamp="1649967167317" timestamp="149417080" timestamp2="149417080">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="3593" _type="InsertStringCommand" date="Sat Apr 16 09:43:04 EDT 2022" starttimestamp="1649967167317" timestamp="149417216" timestamp2="149417216">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3595" _type="InsertStringCommand" date="Sat Apr 16 09:43:04 EDT 2022" starttimestamp="1649967167317" timestamp="149417593" timestamp2="149417593">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="3597" _type="InsertStringCommand" date="Sat Apr 16 09:43:05 EDT 2022" starttimestamp="1649967167317" timestamp="149417764" timestamp2="149417764">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3598" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:43:05 EDT 2022" starttimestamp="1649967167317" timestamp="149418535" />
  <Command __id="3599" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:43:05 EDT 2022" starttimestamp="1649967167317" timestamp="149418628" />
  <Command __id="3600" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:43:05 EDT 2022" starttimestamp="1649967167317" timestamp="149418682" />
  <Command __id="3601" _type="MoveCaretCommand" caretOffset="13698" date="Sat Apr 16 09:43:06 EDT 2022" docOffset="13698" starttimestamp="1649967167317" timestamp="149419635" />
  <Command __id="3602" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sat Apr 16 09:43:07 EDT 2022" starttimestamp="1649967167317" timestamp="149420151" />
  <Command __id="3604" _type="InsertStringCommand" date="Sat Apr 16 09:43:07 EDT 2022" starttimestamp="1649967167317" timestamp="149420370" timestamp2="149420370">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3606" _type="InsertStringCommand" date="Sat Apr 16 09:43:07 EDT 2022" starttimestamp="1649967167317" timestamp="149420507" timestamp2="149420507">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3607" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:43:08 EDT 2022" starttimestamp="1649967167317" timestamp="149420916" />
  <Command __id="3608" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:43:08 EDT 2022" starttimestamp="1649967167317" timestamp="149421022" />
  <Command __id="3609" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:43:08 EDT 2022" starttimestamp="1649967167317" timestamp="149421058" />
  <Command __id="3611" _type="PauseCommand" date="Sat Apr 16 09:43:14 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149427363">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6305]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3610" _type="MoveCaretCommand" caretOffset="12159" date="Sat Apr 16 09:43:14 EDT 2022" docOffset="12159" starttimestamp="1649967167317" timestamp="149427363" />
  <Command __id="3613" _type="InsertStringCommand" date="Sat Apr 16 09:43:15 EDT 2022" starttimestamp="1649967167317" timestamp="149427869" timestamp2="149427869">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3615" _type="InsertStringCommand" date="Sat Apr 16 09:43:15 EDT 2022" starttimestamp="1649967167317" timestamp="149427964" timestamp2="149427964">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3616" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:43:16 EDT 2022" starttimestamp="1649967167317" timestamp="149428843" />
  <Command __id="3617" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:43:16 EDT 2022" starttimestamp="1649967167317" timestamp="149428943" />
  <Command __id="3618" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:43:16 EDT 2022" starttimestamp="1649967167317" timestamp="149428979" />
  <Command __id="3620" _type="PauseCommand" date="Sat Apr 16 09:43:21 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149433961">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4982]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3619" _type="MoveCaretCommand" caretOffset="11350" date="Sat Apr 16 09:43:21 EDT 2022" docOffset="11350" starttimestamp="1649967167317" timestamp="149433961" />
  <Command __id="3541" _type="DiffBasedFileOpenCommand" date="Sat Apr 16 09:42:53 EDT 2022" docASTNodeCount="1277" docActiveCodeLength="9300" docExpressionCount="900" docLength="10399" projectName="A6" starttimestamp="1649967167317" timestamp="149406003">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶"), Diff(INSERT,"import server.remote.ServerRemoteInterfaceNIO;¶"), Diff(EQUAL,"import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ServerConfigure extends "), Diff(DELETE,"AStandAloneTwoCoupledHalloweenSimulations"), Diff(INSERT,"ServerRemoteObjectGIPC"), Diff(EQUAL," implements ServerRemoteInterface"), Diff(DELETE,"RMI"), Diff(INSERT,"NIO"), Diff(EQUAL,"{¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import server.remote.ServerRemoteInterfaceNIO;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ServerConfigure extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="3546" _type="Insert" date="Sat Apr 16 09:42:57 EDT 2022" docASTNodeCount="1277" docActiveCodeLength="9306" docExpressionCount="900" docLength="10405" length="6" offset="10390" repeat="2" starttimestamp="1649967167317" timestamp="149410204" timestamp2="149410648">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="3550" _type="Replace" date="Sat Apr 16 09:42:58 EDT 2022" docASTNodeCount="1689" docActiveCodeLength="12445" docExpressionCount="1156" docLength="13931" endLine="329" insertionLength="3527" int_docASTNodeCount="1277" int_docActiveCodeLength="9305" int_docExpressionCount="900" int_docLength="10404" length="1" offset="10395" startLine="329" starttimestamp="1649967167317" timestamp="149411137">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	
	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	@Override
	protected void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ServerArgsProcessor.getNIOServerPort(args);
			
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);
			
			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
		
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		
		reader.notifyThread();
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

	@Override
	public List<SocketChannel> getSocketList() {
		// TODO Auto-generated method stub
		return socketList;
	}

	@Override
	public SocketChannel getSocketChannel() {
		// TODO Auto-generated method stub
		return currentSocket;
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3551" _type="Insert" date="Sat Apr 16 09:42:58 EDT 2022" docASTNodeCount="1699" docActiveCodeLength="12493" docExpressionCount="1165" docLength="13979" length="48" offset="1548" repeat="2" starttimestamp="1649967167317" timestamp="149411176" timestamp2="149411178">
    <text><![CDATA[
import util.trace.port.nio.SocketChannelBound;]]></text>
  </DocumentChange>
  <DocumentChange __id="3553" _type="Insert" date="Sat Apr 16 09:42:58 EDT 2022" docASTNodeCount="1707" docActiveCodeLength="12570" docExpressionCount="1171" docLength="14056" length="77" offset="721" repeat="4" starttimestamp="1649967167317" timestamp="149411180" timestamp2="149411184">
    <text><![CDATA[
import readThread.ReadThreadInterface;
import readThread.ServerReadThread;]]></text>
  </DocumentChange>
  <DocumentChange __id="3557" _type="Insert" date="Sat Apr 16 09:42:58 EDT 2022" docASTNodeCount="1747" docActiveCodeLength="12813" docExpressionCount="1207" docLength="14299" length="243" offset="602" repeat="8" starttimestamp="1649967167317" timestamp="149411193" timestamp2="149411209">
    <text><![CDATA[
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;]]></text>
  </DocumentChange>
  <DocumentChange __id="3565" _type="Delete" date="Sat Apr 16 09:42:58 EDT 2022" docASTNodeCount="1747" docActiveCodeLength="12809" docExpressionCount="1207" docLength="14295" endLine="12" length="4" offset="344" startLine="10" starttimestamp="1649967167317" timestamp="149411211">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="3566" _type="Insert" date="Sat Apr 16 09:42:58 EDT 2022" docASTNodeCount="1761" docActiveCodeLength="12908" docExpressionCount="1219" docLength="14394" length="99" offset="344" repeat="5" starttimestamp="1649967167317" timestamp="149411212" timestamp2="149411219">
    <text><![CDATA[
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
]]></text>
  </DocumentChange>
  <DocumentChange __id="3571" _type="Insert" date="Sat Apr 16 09:42:58 EDT 2022" docASTNodeCount="1769" docActiveCodeLength="12948" docExpressionCount="1226" docLength="14434" length="40" offset="46" repeat="2" starttimestamp="1649967167317" timestamp="149411221" timestamp2="149411230">
    <text><![CDATA[
import java.nio.channels.SelectionKey;]]></text>
  </DocumentChange>
  <DocumentChange __id="3573" _type="Insert" date="Sat Apr 16 09:42:58 EDT 2022" docASTNodeCount="1781" docActiveCodeLength="13013" docExpressionCount="1236" docLength="14499" length="65" offset="19" repeat="4" starttimestamp="1649967167317" timestamp="149411232" timestamp2="149411237">
    <text><![CDATA[import java.io.IOException;
import java.net.InetSocketAddress;
]]></text>
  </DocumentChange>
  <DocumentChange __id="3583" _type="Insert" date="Sat Apr 16 09:43:02 EDT 2022" docASTNodeCount="1781" docActiveCodeLength="13014" docExpressionCount="1236" docLength="14500" length="1" offset="13734" starttimestamp="1649967167317" timestamp="149415014">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="3588" _type="Delete" date="Sat Apr 16 09:43:04 EDT 2022" docASTNodeCount="1781" docActiveCodeLength="13013" docExpressionCount="1236" docLength="14499" endLine="437" length="1" offset="13734" startLine="437" starttimestamp="1649967167317" timestamp="149416873">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="3590" _type="Insert" date="Sat Apr 16 09:43:04 EDT 2022" docASTNodeCount="1781" docActiveCodeLength="13017" docExpressionCount="1236" docLength="14503" length="4" offset="13734" repeat="4" starttimestamp="1649967167317" timestamp="149417076" timestamp2="149417760">
    <text><![CDATA[Fake]]></text>
  </DocumentChange>
  <DocumentChange __id="3603" _type="Insert" date="Sat Apr 16 09:43:07 EDT 2022" docASTNodeCount="1779" docActiveCodeLength="13008" docExpressionCount="1234" docLength="14505" length="2" offset="13697" repeat="2" starttimestamp="1649967167317" timestamp="149420367" timestamp2="149420501">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3612" _type="Insert" date="Sat Apr 16 09:43:15 EDT 2022" docASTNodeCount="1772" docActiveCodeLength="12972" docExpressionCount="1229" docLength="14507" length="2" offset="12159" repeat="2" starttimestamp="1649967167317" timestamp="149427865" timestamp2="149427960">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="3622" _type="PauseCommand" date="Sat Apr 16 09:43:22 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149435338">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1377]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="3621" _type="Insert" date="Sat Apr 16 09:43:22 EDT 2022" docASTNodeCount="1772" docActiveCodeLength="12978" docExpressionCount="1229" docLength="14513" length="6" offset="11350" repeat="6" starttimestamp="1649967167317" timestamp="149435338" timestamp2="149436091">
    <text><![CDATA[Server]]></text>
  </DocumentChange>
  <Command __id="3623" _type="InsertStringCommand" date="Sat Apr 16 09:43:22 EDT 2022" starttimestamp="1649967167317" timestamp="149435343" timestamp2="149435343">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3625" _type="InsertStringCommand" date="Sat Apr 16 09:43:22 EDT 2022" starttimestamp="1649967167317" timestamp="149435569" timestamp2="149435569">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3627" _type="InsertStringCommand" date="Sat Apr 16 09:43:22 EDT 2022" starttimestamp="1649967167317" timestamp="149435635" timestamp2="149435635">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3629" _type="InsertStringCommand" date="Sat Apr 16 09:43:23 EDT 2022" starttimestamp="1649967167317" timestamp="149435853" timestamp2="149435853">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3631" _type="InsertStringCommand" date="Sat Apr 16 09:43:23 EDT 2022" starttimestamp="1649967167317" timestamp="149436007" timestamp2="149436007">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3633" _type="InsertStringCommand" date="Sat Apr 16 09:43:23 EDT 2022" starttimestamp="1649967167317" timestamp="149436095" timestamp2="149436095">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3634" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Apr 16 09:43:24 EDT 2022" starttimestamp="1649967167317" timestamp="149436706" />
  <Command __id="3635" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:43:24 EDT 2022" starttimestamp="1649967167317" timestamp="149436799" />
  <Command __id="3636" _type="EclipseCommand" commandID="" date="Sat Apr 16 09:43:24 EDT 2022" starttimestamp="1649967167317" timestamp="149436848" />
  <Command __id="3637" _type="MoveCaretCommand" caretOffset="11331" date="Sat Apr 16 09:43:25 EDT 2022" docOffset="11331" starttimestamp="1649967167317" timestamp="149437745" />
  <Command __id="3638" _type="MoveCaretCommand" caretOffset="11319" date="Sat Apr 16 09:43:25 EDT 2022" docOffset="11319" starttimestamp="1649967167317" timestamp="149438504" />
  <Command __id="3646" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:43:36 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="149449675" type="Run" />
  <Command __id="3648" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:43:36 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="149449675" type="Run" />
  <Command __id="3649" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:43:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149449900" type="Run" />
  <Command __id="3650" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:43:37 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149449917" type="Run" />
  <Command __id="3651" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:43:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149449920" type="Run" />
  <Command __id="3653" _type="PauseCommand" date="Sat Apr 16 09:43:39 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149452559">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2639]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3654" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:43:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149455411" type="Run" />
  <Command __id="3656" _type="ConsoleOutput" date="Sat Apr 16 09:43:42 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149455526" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sat Apr 16 09:43:42 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedSignatures@57f1605d . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Sat Apr 16 09:43:42 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3658" _type="PauseCommand" date="Sat Apr 16 09:43:45 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149458462">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2936]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3657" _type="ConsoleOutput" date="Sat Apr 16 09:43:45 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149458462" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:125
Running second pass checks Sat Apr 16 09:43:45 EDT 2022
Start O(n2) inter- and intra class method calls:Sat Apr 16 09:43:45 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:125¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Sat Apr 16 09:43:4"), Diff(DELETE,"2"), Diff(INSERT,"5 EDT 2022¶Start O(n2) inter- and intra class method calls:Sat Apr 16 09:43:45"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3659" _type="ConsoleOutput" date="Sat Apr 16 09:43:45 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149458588" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sat Apr 16 09:43:45 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:125¶Running second pass checks Sat Apr 16 09:43:45 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sat Apr 16 09:43:45 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3661" _type="PauseCommand" date="Sat Apr 16 09:43:47 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149460416">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1828]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3660" _type="ConsoleOutput" date="Sat Apr 16 09:43:47 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149460416" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sat Apr 16 09:43:47 EDT 2022
Generating checks:Sat Apr 16 09:43:47 EDT 2022
Finished Generating checks:Sat Apr 16 09:43:47 EDT 2022
Generating externals:Sat Apr 16 09:43:47 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Sat Apr 16 09:43:47 EDT 2022¶Generating checks:Sat Apr 16 09:43:47 EDT 2022¶Finished Generating checks:Sat Apr 16 09:43:47 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Sat Apr 16 09:43:4"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3662" _type="ConsoleOutput" date="Sat Apr 16 09:43:48 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149461104" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sat Apr 16 09:43:48 EDT 2022
Test execution time (ms):5622
Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Sat Apr 16 09:43:47 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Sat Apr 16 09:43:4"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Sat Apr 16 09:43:47 EDT 2022¶Generating externals:Sat Apr 16 09:43:47 EDT 2022"), Diff(INSERT,"Test execution time (ms):5622¶Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3663" _type="ConsoleOutput" date="Sat Apr 16 09:43:48 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149461178" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.7586206896551724

Test execution time (ms):15
Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sat Apr 16 09:43:48 EDT 2022"), Diff(INSERT,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.7586206896551724¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(INSERT,"1"), Diff(EQUAL,"5"), Diff(DELETE,"622"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"24"), Diff(INSERT,"11"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3664" _type="ConsoleOutput" date="Sat Apr 16 09:43:48 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149461266" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (431)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (294)
  |~ ClientRemoteObjectNIO.java (170)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (82)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (76)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (469)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (335)
   |~ ServerRemoteObjectNIO.java (159)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.7586206896551724¶¶Test execution time (ms):15¶Test execution time (ms):11"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (431)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (294)¶  |~ ClientRemoteObjectNIO.java (170)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (82)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (469)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3666" _type="PauseCommand" date="Sat Apr 16 09:43:52 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149465198">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3932]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3665" _type="ConsoleOutput" date="Sat Apr 16 09:43:52 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149465198" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@1883ea95 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (431)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (294)¶  |~ ClientRemoteObjectNIO.java (170)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (82)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (76)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (469)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectNIO.java (159)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@1883ea95 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3668" _type="PauseCommand" date="Sat Apr 16 09:43:59 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149472054">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6856]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3667" _type="ShellCommand" date="Sat Apr 16 09:43:59 EDT 2022" starttimestamp="1649967167317" timestamp="149472054" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3670" _type="PauseCommand" date="Sat Apr 16 09:44:54 EDT 2022" range="30s-1m" starttimestamp="1649967167317" timestamp="149527299">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[55245]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3669" _type="ShellCommand" date="Sat Apr 16 09:44:54 EDT 2022" starttimestamp="1649967167317" timestamp="149527299" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3672" _type="PauseCommand" date="Sat Apr 16 09:44:57 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149529701">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2402]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3671" _type="ConsoleOutput" date="Sat Apr 16 09:44:57 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149529701" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@1883ea95 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@1883ea95 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3674" _type="PauseCommand" date="Sat Apr 16 09:45:12 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="149545543">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15842]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3682" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:45:33 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149565895" type="Run" />
  <Command __id="3684" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:45:33 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149565896" type="Run" />
  <Command __id="3686" _type="PauseCommand" date="Sat Apr 16 09:45:58 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="149590767">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[24871]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3685" _type="ShellCommand" date="Sat Apr 16 09:45:58 EDT 2022" starttimestamp="1649967167317" timestamp="149590767" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3688" _type="PauseCommand" date="Sat Apr 16 09:45:59 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149592279">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1512]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3706" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:47:30 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149683109" type="Run" />
  <Command __id="3708" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:47:30 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149683113" type="Run" />
  <Command __id="3710" _type="PauseCommand" date="Sat Apr 16 09:47:35 EDT 2022" range="5s-10s" starttimestamp="1649967167317" timestamp="149688351">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[5238]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3709" _type="ShellCommand" date="Sat Apr 16 09:47:35 EDT 2022" starttimestamp="1649967167317" timestamp="149688351" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3712" _type="PauseCommand" date="Sat Apr 16 09:48:01 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="149713933">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[25582]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3711" _type="ShellCommand" date="Sat Apr 16 09:48:01 EDT 2022" starttimestamp="1649967167317" timestamp="149713933" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3714" _type="PauseCommand" date="Sat Apr 16 09:48:27 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="149740204">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[26271]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3713" _type="ConsoleOutput" date="Sat Apr 16 09:48:27 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149740204" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SocketChannelBound.*
RMI and GIPC are not checked because NIO failed%0.0

Test execution time (ms):58595
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOOneClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SocketChannelBound.*"), Diff(INSERT,"¶RMI and GIPC are not checked because NIO failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):58"), Diff(DELETE,"60"), Diff(INSERT,"59"), Diff(EQUAL,"5¶")]]]></diff>
  </Command>
  <Command __id="3716" _type="PauseCommand" date="Sat Apr 16 09:48:54 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="149767051">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[26847]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3715" _type="ShellCommand" date="Sat Apr 16 09:48:54 EDT 2022" starttimestamp="1649967167317" timestamp="149767051" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3718" _type="PauseCommand" date="Sat Apr 16 09:48:58 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149770814">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3763]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3717" _type="ShellCommand" date="Sat Apr 16 09:48:58 EDT 2022" starttimestamp="1649967167317" timestamp="149770814" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3720" _type="PauseCommand" date="Sat Apr 16 09:49:01 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149774314">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3500]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3719" _type="ConsoleOutput" date="Sat Apr 16 09:49:01 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149774314" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@47a5c42b . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SocketChannelBound.*¶RMI and GIPC are not checked because NIO failed%0.0¶¶Test execution time (ms):58595"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@47a5c42b . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3722" _type="PauseCommand" date="Sat Apr 16 09:49:15 EDT 2022" range="10s-20s" starttimestamp="1649967167317" timestamp="149787988">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13674]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3721" _type="ConsoleOutput" date="Sat Apr 16 09:49:15 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149787988" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@47a5c42b . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@47a5c42b . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3724" _type="PauseCommand" date="Sat Apr 16 09:49:16 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149789496">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1508]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3723" _type="ConsoleOutput" date="Sat Apr 16 09:49:16 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149789496" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientReadWriteNonAtomic@75716a8b . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClient"), Diff(DELETE,"Connection@47a5c42"), Diff(INSERT,"ReadWriteNonAtomic@75716a8"), Diff(EQUAL,"b . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3726" _type="PauseCommand" date="Sat Apr 16 09:49:38 EDT 2022" range="20s-30s" starttimestamp="1649967167317" timestamp="149810750">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[21254]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3725" _type="ConsoleOutput" date="Sat Apr 16 09:49:38 EDT 2022" overflow="false" starttimestamp="1649967167317" timestamp="149810750" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOStaticArguments@638cb6b5 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIO"), Diff(DELETE,"OneClientReadWriteNonAtomic@75716a8b"), Diff(INSERT,"StaticArguments@638cb6b5"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3728" _type="PauseCommand" date="Sat Apr 16 09:49:41 EDT 2022" range="2s-5s" starttimestamp="1649967167317" timestamp="149813846">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3096]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3727" _type="ShellCommand" date="Sat Apr 16 09:49:41 EDT 2022" starttimestamp="1649967167317" timestamp="149813846" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3729" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:49:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149814521" type="Debug" />
  <Command __id="3730" _type="ProgramExecutionEvent" className="(Unknown)" date="Sat Apr 16 09:49:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1649967167317" timestamp="149814521" type="Debug" />
  <Command __id="3731" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Sat Apr 16 09:49:41 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649967167317" timestamp="149814521" type="Run" />
  <Command __id="3732" _type="ShellCommand" date="Sat Apr 16 09:49:41 EDT 2022" starttimestamp="1649967167317" timestamp="149814619" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3734" _type="PauseCommand" date="Sat Apr 16 09:49:43 EDT 2022" range="1s-2s" starttimestamp="1649967167317" timestamp="149816009">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1390]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
</Events>
