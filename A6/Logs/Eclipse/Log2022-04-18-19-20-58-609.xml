<Events startTimestamp="1650324058609" logVersion="1.0.0.202111260825">
  <Command __id="1" _type="MoveCaretCommand" caretOffset="3747" date="Mon Apr 18 19:20:59 EDT 2022" docOffset="5233" starttimestamp="1650324058609" timestamp="1226" />
  <Command __id="3" _type="PauseCommand" date="Mon Apr 18 19:21:08 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="9967">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8737]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2" _type="EclipseCommand" commandID="org.eclipse.ui.file.refresh" date="Mon Apr 18 19:21:08 EDT 2022" starttimestamp="1650324058609" timestamp="9963" />
  <Command __id="4" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:21:08 EDT 2022" starttimestamp="1650324058609" timestamp="10389" />
  <Command __id="5" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:21:09 EDT 2022" starttimestamp="1650324058609" timestamp="10542" />
  <Command __id="7" _type="PauseCommand" date="Mon Apr 18 19:21:46 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="47569">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[37027]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6" _type="ShellCommand" date="Mon Apr 18 19:21:46 EDT 2022" starttimestamp="1650324058609" timestamp="47569" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9" _type="PauseCommand" date="Mon Apr 18 19:22:02 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="64094">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16524]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="10" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:22:06 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="67862" type="Run" />
  <Command __id="12" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:22:06 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="67862" type="Run" />
  <Command __id="14" _type="PauseCommand" date="Mon Apr 18 19:22:09 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="70828">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2966]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="13" _type="ShellCommand" date="Mon Apr 18 19:22:09 EDT 2022" starttimestamp="1650324058609" timestamp="70828" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="16" _type="PauseCommand" date="Mon Apr 18 19:22:17 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="78628">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7800]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="15" _type="ShellCommand" date="Mon Apr 18 19:22:17 EDT 2022" starttimestamp="1650324058609" timestamp="78628" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 19:20:59 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" projectName="A6" starttimestamp="1650324058609" timestamp="572">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}
		


}
]]></snapshot>
  </Command>
  <Command __id="18" _type="PauseCommand" date="Mon Apr 18 19:22:46 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="107429">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[28801]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="19" _type="MoveCaretCommand" caretOffset="2575" date="Mon Apr 18 19:22:46 EDT 2022" docOffset="3894" starttimestamp="1650324058609" timestamp="107996" />
  <Command __id="17" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 19:22:46 EDT 2022" docASTNodeCount="719" docActiveCodeLength="5117" docExpressionCount="520" docLength="5504" projectName="A6" starttimestamp="1650324058609" timestamp="107429">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.exampleServerReadThread;
import readThread.ReadThreadInterface;
import readThread.ServerReadThread;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;

public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	
	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	@Override
	protected void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ServerArgsProcessor.getNIOServerPort(args);
			
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);
			
			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
		
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("COMMAND IN SERVER: "+ aMessageString);
		
		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

	@Override
	public List<SocketChannel> getSocketList() {
		// TODO Auto-generated method stub
		return socketList;
	}

	@Override
	public SocketChannel getSocketChannel() {
		// TODO Auto-generated method stub
		return currentSocket;
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

}
]]></snapshot>
  </Command>
  <Command __id="21" _type="PauseCommand" date="Mon Apr 18 19:23:09 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="131020">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23024]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="22" _type="MoveCaretCommand" caretOffset="8912" date="Mon Apr 18 19:23:09 EDT 2022" docOffset="10603" starttimestamp="1650324058609" timestamp="131307" />
  <Command __id="24" _type="PauseCommand" date="Mon Apr 18 19:23:20 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="141527">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10220]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="23" _type="ConsoleOutput" date="Mon Apr 18 19:23:20 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="141527" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67664
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="26" _type="PauseCommand" date="Mon Apr 18 19:23:38 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="160162">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[18635]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="25" _type="ShellCommand" date="Mon Apr 18 19:23:38 EDT 2022" starttimestamp="1650324058609" timestamp="160162" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="28" _type="PauseCommand" date="Mon Apr 18 19:24:05 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="186610">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[26448]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="27" _type="ShellCommand" date="Mon Apr 18 19:24:05 EDT 2022" starttimestamp="1650324058609" timestamp="186610" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="20" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 19:23:09 EDT 2022" docASTNodeCount="1310" docActiveCodeLength="9564" docExpressionCount="920" docLength="10769" projectName="A6" starttimestamp="1650324058609" timestamp="131020">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientOutCoupler;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import client.ClientRemoteObject;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {

	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	protected static String SERVER_NAME;
	private static int NIO_SERVER_PORT;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		

		// Make sure you set this property when processing args
		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));
		

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);
		// ClientArgsProcessor.getServerHost(args);
		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);
		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);
		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);
		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);
		

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			System.out.println("Broadcasting IPC mechanism: "+mechanism);
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism, aProposalNumber);
					System.out.println("SEND NEW MECHANISM TO A CLIENT FROM SERVER");
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
		System.out.println("ADDED CONNECTION LISTENER");
	}

	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			int aProposalNumber = -1;
			ClientRemoteInterfaceGIPC fake = new ClientRemoteObject();
			broadcastIPCMechanism(mechanism, fake, aProposalNumber , this.broadcastMetaState);
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="30" _type="PauseCommand" date="Mon Apr 18 19:24:07 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="189320">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2710]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="31" _type="MoveCaretCommand" caretOffset="3747" date="Mon Apr 18 19:24:08 EDT 2022" docOffset="5233" starttimestamp="1650324058609" timestamp="189639" />
  <Command __id="33" _type="PauseCommand" date="Mon Apr 18 19:24:14 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="195890">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6251]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="32" _type="ShellCommand" date="Mon Apr 18 19:24:14 EDT 2022" starttimestamp="1650324058609" timestamp="195890" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="35" _type="PauseCommand" date="Mon Apr 18 19:25:01 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="243301">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[47411]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="34" _type="ShellCommand" date="Mon Apr 18 19:25:01 EDT 2022" starttimestamp="1650324058609" timestamp="243301" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="37" _type="PauseCommand" date="Mon Apr 18 19:25:12 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="254215">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10914]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="36" _type="ConsoleOutput" date="Mon Apr 18 19:25:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="254215" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOTwoClientReadWriteNonAtomic did not pass completely:In Server writing to client 1 via NIO, no line found matching regex: .*?\{Read Thread\}.*?SocketChannelWriteRequested.*
GIPC is not checked because RMI failed%0.25Steps traced since last test:


Test execution time (ms):112622
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GIPCRMINIOTwoClientReadWriteNonAtomic did not pass completely:In Server writing to client 1 via NIO, no line found matching regex: .*?\{Read Thread\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.25Steps traced since last test:¶¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"67664"), Diff(INSERT,"112622"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="39" _type="PauseCommand" date="Mon Apr 18 19:25:30 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="272102">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[17887]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="38" _type="ShellCommand" date="Mon Apr 18 19:25:30 EDT 2022" starttimestamp="1650324058609" timestamp="272102" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="41" _type="PauseCommand" date="Mon Apr 18 19:25:35 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="276800">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4698]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="40" _type="ConsoleOutput" date="Mon Apr 18 19:25:35 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="276800" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22607
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOTwoClientReadWriteNonAtomic did not pass completely:In Server writing to client 1 via NIO, no line found matching regex: .*?\{Read Thread\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.25Steps traced since last test:¶¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"112622"), Diff(INSERT,"22607"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="43" _type="PauseCommand" date="Mon Apr 18 19:25:58 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="299434">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22634]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="42" _type="ConsoleOutput" date="Mon Apr 18 19:25:58 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="299434" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22576
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):22"), Diff(DELETE,"607"), Diff(INSERT,"576"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="45" _type="PauseCommand" date="Mon Apr 18 19:26:20 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="321965">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22531]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="44" _type="ConsoleOutput" date="Mon Apr 18 19:26:20 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="321965" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22578
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2257"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="47" _type="PauseCommand" date="Mon Apr 18 19:26:43 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="344611">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22646]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="46" _type="ConsoleOutput" date="Mon Apr 18 19:26:43 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="344611" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22589
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"7"), Diff(EQUAL,"8"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="49" _type="PauseCommand" date="Mon Apr 18 19:26:52 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="353571">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8960]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="48" _type="ConsoleOutput" date="Mon Apr 18 19:26:52 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="353571" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@38e3ffce . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22589"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@38e3ffce . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="51" _type="PauseCommand" date="Mon Apr 18 19:27:20 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="381610">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[28039]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="50" _type="ConsoleOutput" date="Mon Apr 18 19:27:20 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="381610" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21347
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@38e3ffce . Results may change."), Diff(INSERT,"Test execution time (ms):21347"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="53" _type="PauseCommand" date="Mon Apr 18 19:27:33 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="395384">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13774]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="52" _type="ConsoleOutput" date="Mon Apr 18 19:27:33 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="395384" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13812
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(EQUAL,"13"), Diff(DELETE,"47"), Diff(INSERT,"812"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="55" _type="PauseCommand" date="Mon Apr 18 19:27:47 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="409350">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13966]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="54" _type="ConsoleOutput" date="Mon Apr 18 19:27:47 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="409350" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13908
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):13"), Diff(DELETE,"812"), Diff(INSERT,"908"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="57" _type="PauseCommand" date="Mon Apr 18 19:47:12 EDT 2022" range="10m-20m" starttimestamp="1650324058609" timestamp="1574098">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1164748]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="56" _type="ConsoleOutput" date="Mon Apr 18 19:47:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1574098" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 19:47:12 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):13908"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 19:47:12 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="59" _type="PauseCommand" date="Mon Apr 18 19:47:16 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="1577723">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3625]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="58" _type="ConsoleOutput" date="Mon Apr 18 19:47:16 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1577723" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 19:47:16 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 19:47:16 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Mon Apr 18 19:47:1"), Diff(DELETE,"2"), Diff(INSERT,"6 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 18 19:47:16"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="60" _type="ConsoleOutput" date="Mon Apr 18 19:47:16 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1577811" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 19:47:16 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 19:47:16 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 19:47:16 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="62" _type="PauseCommand" date="Mon Apr 18 19:47:17 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="1579388">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1577]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="61" _type="ShellCommand" date="Mon Apr 18 19:47:17 EDT 2022" starttimestamp="1650324058609" timestamp="1579388" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="63" _type="ConsoleOutput" date="Mon Apr 18 19:47:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1579682" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 19:47:18 EDT 2022
Generating checks:Mon Apr 18 19:47:18 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method call"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 19:47:18 EDT 2022¶Generating check"), Diff(EQUAL,"s:Mon Apr 18 19:47:1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="64" _type="ConsoleOutput" date="Mon Apr 18 19:47:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1579749" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating checks:Mon Apr 18 19:47:18 EDT 2022
Generating externals:Mon Apr 18 19:47:18 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass"), Diff(INSERT,"Generating"), Diff(EQUAL," checks:Mon Apr 18 19:47:18 EDT 2022¶Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 19:47:18 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="65" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:47:18 EDT 2022" starttimestamp="1650324058609" timestamp="1580233" />
  <Command __id="66" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:47:18 EDT 2022" starttimestamp="1650324058609" timestamp="1580244" />
  <Command __id="67" _type="ConsoleOutput" date="Mon Apr 18 19:47:19 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1581128" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 19:47:19 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):7042
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 19:47:1"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating externals:Mon Apr 18 19:47:18 EDT 202"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):704"), Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="68" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:47:20 EDT 2022" starttimestamp="1650324058609" timestamp="1581729" />
  <Command __id="69" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:47:20 EDT 2022" starttimestamp="1650324058609" timestamp="1581746" />
  <Command __id="70" _type="ShellCommand" date="Mon Apr 18 19:47:20 EDT 2022" starttimestamp="1650324058609" timestamp="1582324" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="71" _type="ConsoleOutput" date="Mon Apr 18 19:47:21 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1582690" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):39

Test execution time (ms):29
A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286

A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428
Test execution time (ms):53
Test execution time (ms):32
A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882

Test execution time (ms):37
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 19:47:19 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warn"), Diff(INSERT,"Test execution time (ms):39¶¶Test execution time (ms):29¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286¶¶A6InterfaceAsType did not pass completely:See console trace about l"), Diff(EQUAL,"in"), Diff(DELETE,"g"), Diff(INSERT,"e"), Diff(EQUAL,"s f"), Diff(DELETE,"ound in checkstyle text, see traced console output%0.0"), Diff(INSERT,"ailing  this check%0.9428571428571428¶Test execution time (ms):53¶Test execution time (ms):32¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(INSERT,"3"), Diff(EQUAL,"7"), Diff(DELETE,"042"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="73" _type="PauseCommand" date="Mon Apr 18 19:47:24 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="1585507">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2817]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="75" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:55:57 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2099168" type="Run" />
  <Command __id="77" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:55:57 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2099168" type="Run" />
  <Command __id="79" _type="PauseCommand" date="Mon Apr 18 19:56:12 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2113998">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[14830]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="86" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:56:25 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2126974" type="Run" />
  <Command __id="88" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:56:25 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2126974" type="Run" />
  <Command __id="89" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:56:25 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2127377" type="Run" />
  <Command __id="90" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:56:26 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2127432" type="Run" />
  <Command __id="91" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:56:26 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2127438" type="Run" />
  <Command __id="93" _type="PauseCommand" date="Mon Apr 18 19:56:29 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2130961">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3523]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="122" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:57:09 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2170872" type="Run" />
  <Command __id="124" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:57:09 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2170873" type="Run" />
  <Command __id="126" _type="PauseCommand" date="Mon Apr 18 19:57:22 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2183629">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[12756]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="146" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:58:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2257178" type="Run" />
  <Command __id="148" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:58:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2257196" type="Run" />
  <Command __id="150" _type="PauseCommand" date="Mon Apr 18 19:58:37 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2258460">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1264]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="203" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:01:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2442609" type="Run" />
  <Command __id="205" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:01:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2442611" type="Run" />
  <Command __id="207" _type="PauseCommand" date="Mon Apr 18 20:01:56 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2457685">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[15074]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="206" _type="ConsoleOutput" date="Mon Apr 18 20:01:56 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2457685" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22577
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"82"), Diff(INSERT,"77"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="209" _type="PauseCommand" date="Mon Apr 18 20:02:04 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2466020">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8335]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="208" _type="ConsoleOutput" date="Mon Apr 18 20:02:04 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2466020" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 20:02:04 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22577"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 20:02:04 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="211" _type="PauseCommand" date="Mon Apr 18 20:02:09 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2470545">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4525]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="210" _type="ConsoleOutput" date="Mon Apr 18 20:02:09 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2470545" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 20:02:09 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 20:02:09 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Mon Apr 18 20:02:09 EDT 2022¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Mon Apr 18 20:02:0"), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="212" _type="ConsoleOutput" date="Mon Apr 18 20:02:09 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2470638" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 20:02:09 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 20:02:09 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 20:02:09 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="214" _type="PauseCommand" date="Mon Apr 18 20:02:11 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2473153">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2515]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="213" _type="ConsoleOutput" date="Mon Apr 18 20:02:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2473153" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 20:02:11 EDT 2022
Generating checks:Mon Apr 18 20:02:11 EDT 2022
Finished Generating checks:Mon Apr 18 20:02:11 EDT 2022
Generating externals:Mon Apr 18 20:02:11 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 20:02:11 EDT 2022¶Generating checks:Mon Apr 18 20:02:11 EDT 2022¶Finished Generating checks:Mon Apr 18 20:02:11 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Mon Apr 18 20:02:"), Diff(DELETE,"09"), Diff(INSERT,"11"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="215" _type="ConsoleOutput" date="Mon Apr 18 20:02:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2474115" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 20:02:12 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):8091
Test execution time (ms):18
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 18 20:02:1"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 18 20:02:11 EDT 2022¶Finished Generating checks:Mon Apr 18 20:02:11 EDT 2022¶Generating externals:Mon Apr 18 20:02:11 EDT 2022"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):8091¶Test execution time (ms):18"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="216" _type="ConsoleOutput" date="Mon Apr 18 20:02:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2474181" type="ConsoleOutput">
    <outputString><![CDATA[A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286

Test execution time (ms):17
A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428

Test execution time (ms):18
Test execution time (ms):10
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 20:02:12 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0"), Diff(INSERT,"A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286¶¶Test execution time (ms):17¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"809"), Diff(EQUAL,"1"), Diff(INSERT,"8"), Diff(EQUAL,"¶Test execution time (ms):1"), Diff(DELETE,"8"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="217" _type="ConsoleOutput" date="Mon Apr 18 20:02:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2474208" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):23
A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"17"), Diff(INSERT,"23"), Diff(EQUAL,"¶A6"), Diff(DELETE,"InterfaceAsType"), Diff(INSERT,"AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9428571428571428¶¶Test execution time (ms):18¶Test execution time (ms):10"), Diff(INSERT,"25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="219" _type="PauseCommand" date="Mon Apr 18 20:02:42 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="2504339">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[30131]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="218" _type="ConsoleOutput" date="Mon Apr 18 20:02:42 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2504339" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"23¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.25"), Diff(INSERT,"5¶Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="220" _type="ConsoleOutput" date="Mon Apr 18 20:02:43 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2504403" type="ConsoleOutput">
    <outputString><![CDATA[
A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.8620689655172413
Test execution time (ms):33
Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.8620689655172413¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5"), Diff(INSERT,"33"), Diff(EQUAL,"¶Test execution time (ms):24¶")]]]></diff>
  </Command>
  <Command __id="221" _type="ConsoleOutput" date="Mon Apr 18 20:02:43 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2504479" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (187)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (88)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (82)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.8620689655172413¶Test execution time (ms):33¶Test execution time (ms):24"), Diff(INSERT,"Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (88)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="223" _type="PauseCommand" date="Mon Apr 18 20:02:47 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2508520">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4041]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="222" _type="ConsoleOutput" date="Mon Apr 18 20:02:47 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2508520" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@e37b295 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (88)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@e37b295 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="225" _type="PauseCommand" date="Mon Apr 18 20:02:49 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2510666">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2146]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="224" _type="ShellCommand" date="Mon Apr 18 20:02:49 EDT 2022" starttimestamp="1650324058609" timestamp="2510666" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="29" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 19:24:07 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" projectName="A6" starttimestamp="1650324058609" timestamp="189320">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="80" _type="Replace" date="Mon Apr 18 19:56:12 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" endLine="187" insertionLength="6553" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="6553" offset="0" startLine="0" starttimestamp="1650324058609" timestamp="2114291">
    <deletedText><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}
		


}
]]></deletedText>
    <insertedText><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}
		


}
]]></insertedText>
  </DocumentChange>
  <Command __id="227" _type="PauseCommand" date="Mon Apr 18 20:03:51 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="2573178">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[62512]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="228" _type="MoveCaretCommand" caretOffset="1553" date="Mon Apr 18 20:03:52 EDT 2022" docOffset="2123" starttimestamp="1650324058609" timestamp="2573461" />
  <Command __id="229" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:03:53 EDT 2022" starttimestamp="1650324058609" timestamp="2574405" />
  <Command __id="230" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:03:53 EDT 2022" starttimestamp="1650324058609" timestamp="2574413" />
  <Command __id="226" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:03:51 EDT 2022" docASTNodeCount="325" docActiveCodeLength="2424" docExpressionCount="226" docLength="2685" projectName="A6" starttimestamp="1650324058609" timestamp="2573178">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.concurrent.ArrayBlockingQueue;

import client.ClientRemoteObjectNIO;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.AnNIOManagerPrintClient;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;


@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})
public class ClientReadThread implements ReadThreadInterface{
	//final ClientRemoteObjectNIO client;
	final ClientRemoteObjectNIO client;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ClientReadThread (final ClientRemoteObjectNIO aClient) {
		client = aClient;
	}
	
	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			String aMessageString = new String(originalMessage.array());
			
			System.out.println(aMessageString);
			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
			
			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);
			
			
			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();
			
			
			RemoteProposeRequestReceived.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);
			commandProcessor.processCommand(aMessageString);
			ProposedStateSet.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);
			//client.aProposalNumber++;
		
		}
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <Command __id="232" _type="PauseCommand" date="Mon Apr 18 20:04:03 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2585259">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10846]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="233" _type="MoveCaretCommand" caretOffset="2762" date="Mon Apr 18 20:04:04 EDT 2022" docOffset="4054" starttimestamp="1650324058609" timestamp="2585675" />
  <Command __id="235" _type="PauseCommand" date="Mon Apr 18 20:04:16 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2597482">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11807]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="234" _type="MoveCaretCommand" caretOffset="1322" date="Mon Apr 18 20:04:16 EDT 2022" docOffset="2614" starttimestamp="1650324058609" timestamp="2597482" />
  <Command __id="237" _type="ShellCommand" date="Mon Apr 18 20:04:16 EDT 2022" starttimestamp="1650324058609" timestamp="2597851" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="239" _type="PauseCommand" date="Mon Apr 18 20:04:18 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2599469">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1618]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="238" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:18 EDT 2022" forward="false" matchWord="false" offset="2614" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2599469" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="241" _type="PauseCommand" date="Mon Apr 18 20:04:19 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2601233">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1764]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="240" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:19 EDT 2022" forward="true" matchWord="false" offset="2614" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2601233" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="242" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:20 EDT 2022" forward="true" matchWord="false" offset="2614" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2601674" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="243" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:20 EDT 2022" forward="true" matchWord="false" offset="2614" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2601840" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="245" _type="PauseCommand" date="Mon Apr 18 20:04:22 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2603604">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1764]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="244" _type="ShellCommand" date="Mon Apr 18 20:04:22 EDT 2022" starttimestamp="1650324058609" timestamp="2603604" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="247" _type="PauseCommand" date="Mon Apr 18 20:04:28 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2609785">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6181]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="246" _type="MoveCaretCommand" caretOffset="1320" date="Mon Apr 18 20:04:28 EDT 2022" docOffset="2612" starttimestamp="1650324058609" timestamp="2609785" />
  <Command __id="249" _type="ShellCommand" date="Mon Apr 18 20:04:28 EDT 2022" starttimestamp="1650324058609" timestamp="2610304" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="251" _type="PauseCommand" date="Mon Apr 18 20:04:30 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2611805">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1501]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="250" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:30 EDT 2022" forward="true" matchWord="false" offset="2612" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2611805" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="253" _type="PauseCommand" date="Mon Apr 18 20:04:32 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2614024">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2219]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="252" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:32 EDT 2022" forward="false" matchWord="false" offset="2612" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2614024" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="254" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:33 EDT 2022" forward="false" matchWord="false" offset="2612" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2614533" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="256" _type="PauseCommand" date="Mon Apr 18 20:04:34 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2615647">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1114]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="255" _type="ShellCommand" date="Mon Apr 18 20:04:34 EDT 2022" starttimestamp="1650324058609" timestamp="2615647" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="231" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:04:03 EDT 2022" docASTNodeCount="557" docActiveCodeLength="3843" docExpressionCount="387" docLength="4187" projectName="A6" starttimestamp="1650324058609" timestamp="2585259">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener, FakeClientInterface{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	@Override
	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException exception) {
			exception.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new exampleClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception exception) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {
		System.out.println("client channel has written");
	}

	@Override
	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
				
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

}]]></snapshot>
  </Command>
  <Command __id="258" _type="PauseCommand" date="Mon Apr 18 20:05:00 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="2642059">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[26412]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="257" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:05:00 EDT 2022" docASTNodeCount="325" docActiveCodeLength="2424" docExpressionCount="226" docLength="2685" projectName="A6" starttimestamp="1650324058609" timestamp="2642059">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import client.ClientRemoteObjectNIO;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.AnNIOManagerPrintClient;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})¶public class ClientReadThread implements ReadThreadInterface{¶	//final ClientRemoteObjectNIO client;¶	final ClientRemoteObjectNIO client;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ClientReadThread (final ClientRemoteObjectNIO aClient) {¶		client = aClient;¶	}¶	¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			String aMessageString = new String(originalMessage.array());¶			¶			System.out.println(aMessageString);¶			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶			¶			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);¶			¶			¶			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();¶			¶			¶			RemoteProposeRequestReceived.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);¶			commandProcessor.processCommand(aMessageString);¶			ProposedStateSet.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);¶			//client.aProposalNumber++;¶		¶		}¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="259" _type="MoveCaretCommand" caretOffset="1154" date="Mon Apr 18 20:05:00 EDT 2022" docOffset="1724" starttimestamp="1650324058609" timestamp="2642192" />
  <DocumentChange __id="260" _type="Insert" date="Mon Apr 18 20:05:01 EDT 2022" docASTNodeCount="328" docActiveCodeLength="2430" docExpressionCount="226" docLength="2691" length="6" offset="1724" repeat="2" starttimestamp="1650324058609" timestamp="2642424" timestamp2="2644123">
    <text><![CDATA[
			O]]></text>
  </DocumentChange>
  <Command __id="261" _type="InsertStringCommand" date="Mon Apr 18 20:05:01 EDT 2022" starttimestamp="1650324058609" timestamp="2642436" timestamp2="2642436">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="264" _type="PauseCommand" date="Mon Apr 18 20:05:02 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2644132">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1696]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="263" _type="InsertStringCommand" date="Mon Apr 18 20:05:02 EDT 2022" starttimestamp="1650324058609" timestamp="2644132" timestamp2="2644132">
    <data><![CDATA[O]]></data>
  </Command>
  <DocumentChange __id="265" _type="Delete" date="Mon Apr 18 20:05:03 EDT 2022" docASTNodeCount="325" docActiveCodeLength="2429" docExpressionCount="226" docLength="2690" endLine="55" length="1" offset="1729" startLine="55" starttimestamp="1650324058609" timestamp="2644601">
    <text><![CDATA[O]]></text>
  </DocumentChange>
  <Command __id="266" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2644606" />
  <Command __id="268" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2644759" timestamp2="2644759">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="270" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2644865" timestamp2="2644865">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="272" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2644969" timestamp2="2644969">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="274" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2645090" timestamp2="2645090">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="276" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2645179" timestamp2="2645179">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="278" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2645273" timestamp2="2645273">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="280" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2645351" timestamp2="2645351">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="282" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2645466" timestamp2="2645466">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="284" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2645729" timestamp2="2645729">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="286" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2645867" timestamp2="2645867">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="288" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2646006" timestamp2="2646006">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="290" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2646198" timestamp2="2646198">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="292" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2646279" timestamp2="2646279">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="294" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2646382" timestamp2="2646382">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="296" _type="InsertStringCommand" date="Mon Apr 18 20:05:05 EDT 2022" starttimestamp="1650324058609" timestamp="2646502" timestamp2="2646502">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="298" _type="InsertStringCommand" date="Mon Apr 18 20:05:05 EDT 2022" starttimestamp="1650324058609" timestamp="2646949" timestamp2="2646949">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="299" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 18 20:05:06 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="2647509" />
  <DocumentChange __id="267" _type="Insert" date="Mon Apr 18 20:05:03 EDT 2022" docASTNodeCount="327" docActiveCodeLength="2445" docExpressionCount="228" docLength="2706" length="16" offset="1729" repeat="16" starttimestamp="1650324058609" timestamp="2644750" timestamp2="2646942">
    <text><![CDATA[originalMessage.]]></text>
  </DocumentChange>
  <Command __id="301" _type="PauseCommand" date="Mon Apr 18 20:05:09 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2650489">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2980]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="300" _type="Insert" date="Mon Apr 18 20:05:09 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2447" docExpressionCount="228" docLength="2708" length="2" offset="1745" repeat="2" starttimestamp="1650324058609" timestamp="2650489" timestamp2="2650596">
    <text><![CDATA[po]]></text>
  </DocumentChange>
  <Command __id="303" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:05:10 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="2651418" />
  <DocumentChange __id="304" _type="Replace" date="Mon Apr 18 20:05:10 EDT 2022" docASTNodeCount="329" docActiveCodeLength="2455" docExpressionCount="229" docLength="2716" endLine="55" insertionLength="10" int_docASTNodeCount="327" int_docActiveCodeLength="2445" int_docExpressionCount="228" int_docLength="2706" length="2" offset="1745" startLine="55" starttimestamp="1650324058609" timestamp="2651430">
    <deletedText><![CDATA[po]]></deletedText>
    <insertedText><![CDATA[position()]]></insertedText>
  </DocumentChange>
  <Command __id="305" _type="InsertStringCommand" date="Mon Apr 18 20:05:10 EDT 2022" starttimestamp="1650324058609" timestamp="2651442" timestamp2="2651442">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="307" _type="InsertStringCommand" date="Mon Apr 18 20:05:10 EDT 2022" starttimestamp="1650324058609" timestamp="2652103" timestamp2="2652103">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="309" _type="PauseCommand" date="Mon Apr 18 20:05:12 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2653889">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1786]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="308" _type="MoveCaretCommand" caretOffset="1159" date="Mon Apr 18 20:05:12 EDT 2022" docOffset="1729" starttimestamp="1650324058609" timestamp="2653889" />
  <Command __id="311" _type="InsertStringCommand" date="Mon Apr 18 20:05:12 EDT 2022" starttimestamp="1650324058609" timestamp="2654383" timestamp2="2654383">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="313" _type="InsertStringCommand" date="Mon Apr 18 20:05:13 EDT 2022" starttimestamp="1650324058609" timestamp="2654491" timestamp2="2654491">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="315" _type="InsertStringCommand" date="Mon Apr 18 20:05:13 EDT 2022" starttimestamp="1650324058609" timestamp="2654643" timestamp2="2654643">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="317" _type="InsertStringCommand" date="Mon Apr 18 20:05:13 EDT 2022" starttimestamp="1650324058609" timestamp="2654810" timestamp2="2654810">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="319" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2655623" timestamp2="2655623">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="321" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2655702" timestamp2="2655702">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="323" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2655843" timestamp2="2655843">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="325" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2655946" timestamp2="2655946">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="327" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2656105" timestamp2="2656105">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="329" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2656175" timestamp2="2656175">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="331" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2656239" timestamp2="2656239">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="333" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2656313" timestamp2="2656313">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="335" _type="InsertStringCommand" date="Mon Apr 18 20:05:15 EDT 2022" starttimestamp="1650324058609" timestamp="2656966" timestamp2="2656966">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="337" _type="InsertStringCommand" date="Mon Apr 18 20:05:15 EDT 2022" starttimestamp="1650324058609" timestamp="2657148" timestamp2="2657148">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="339" _type="InsertStringCommand" date="Mon Apr 18 20:05:15 EDT 2022" starttimestamp="1650324058609" timestamp="2657235" timestamp2="2657235">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="340" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:05:16 EDT 2022" starttimestamp="1650324058609" timestamp="2657976" />
  <Command __id="341" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:05:16 EDT 2022" starttimestamp="1650324058609" timestamp="2658038" />
  <Command __id="342" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:05:16 EDT 2022" starttimestamp="1650324058609" timestamp="2658105" />
  <DocumentChange __id="306" _type="Insert" date="Mon Apr 18 20:05:10 EDT 2022" docASTNodeCount="329" docActiveCodeLength="2456" docExpressionCount="229" docLength="2717" length="1" offset="1755" starttimestamp="1650324058609" timestamp="2652095">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="310" _type="Insert" date="Mon Apr 18 20:05:12 EDT 2022" docASTNodeCount="332" docActiveCodeLength="2471" docExpressionCount="230" docLength="2732" length="15" offset="1729" repeat="15" starttimestamp="1650324058609" timestamp="2654375" timestamp2="2657228">
    <text><![CDATA[int position = ]]></text>
  </DocumentChange>
  <Command __id="344" _type="PauseCommand" date="Mon Apr 18 20:05:32 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2673423">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[15318]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="345" _type="InsertStringCommand" date="Mon Apr 18 20:05:32 EDT 2022" starttimestamp="1650324058609" timestamp="2673443" timestamp2="2673443">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="347" _type="InsertStringCommand" date="Mon Apr 18 20:05:32 EDT 2022" starttimestamp="1650324058609" timestamp="2673942" timestamp2="2673942">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="349" _type="InsertStringCommand" date="Mon Apr 18 20:05:32 EDT 2022" starttimestamp="1650324058609" timestamp="2674216" timestamp2="2674216">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="351" _type="InsertStringCommand" date="Mon Apr 18 20:05:32 EDT 2022" starttimestamp="1650324058609" timestamp="2674337" timestamp2="2674337">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="353" _type="InsertStringCommand" date="Mon Apr 18 20:05:33 EDT 2022" starttimestamp="1650324058609" timestamp="2674570" timestamp2="2674570">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="356" _type="PauseCommand" date="Mon Apr 18 20:05:34 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2675828">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1258]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="355" _type="InsertStringCommand" date="Mon Apr 18 20:05:34 EDT 2022" starttimestamp="1650324058609" timestamp="2675828" timestamp2="2675828">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="358" _type="InsertStringCommand" date="Mon Apr 18 20:05:34 EDT 2022" starttimestamp="1650324058609" timestamp="2676007" timestamp2="2676007">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="360" _type="InsertStringCommand" date="Mon Apr 18 20:05:34 EDT 2022" starttimestamp="1650324058609" timestamp="2676352" timestamp2="2676352">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="362" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2676482" timestamp2="2676482">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="364" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2676629" timestamp2="2676629">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="366" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2676772" timestamp2="2676772">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="368" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2676849" timestamp2="2676849">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="370" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2677041" timestamp2="2677041">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="372" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2677161" timestamp2="2677161">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="374" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2677232" timestamp2="2677232">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="376" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2677289" timestamp2="2677289">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="378" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2677367" timestamp2="2677367">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="380" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2677494" timestamp2="2677494">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="382" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2677565" timestamp2="2677565">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="384" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2677676" timestamp2="2677676">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="386" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2677833" timestamp2="2677833">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="388" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2677909" timestamp2="2677909">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="390" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2678165" timestamp2="2678165">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="392" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2678370" timestamp2="2678370">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="394" _type="InsertStringCommand" date="Mon Apr 18 20:05:37 EDT 2022" starttimestamp="1650324058609" timestamp="2678441" timestamp2="2678441">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="396" _type="InsertStringCommand" date="Mon Apr 18 20:05:37 EDT 2022" starttimestamp="1650324058609" timestamp="2678621" timestamp2="2678621">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="398" _type="InsertStringCommand" date="Mon Apr 18 20:05:37 EDT 2022" starttimestamp="1650324058609" timestamp="2678784" timestamp2="2678784">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="400" _type="InsertStringCommand" date="Mon Apr 18 20:05:37 EDT 2022" starttimestamp="1650324058609" timestamp="2678857" timestamp2="2678857">
    <data><![CDATA[r]]></data>
  </Command>
  <DocumentChange __id="343" _type="Insert" date="Mon Apr 18 20:05:32 EDT 2022" docASTNodeCount="332" docActiveCodeLength="2481" docExpressionCount="230" docLength="2768" length="36" offset="1724" repeat="28" starttimestamp="1650324058609" timestamp="2673423" timestamp2="2678841">
    <text><![CDATA[
			
			/// To pass the autograder]]></text>
  </DocumentChange>
  <Command __id="402" _type="PauseCommand" date="Mon Apr 18 20:05:41 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2682476">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3619]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="401" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:05:41 EDT 2022" docASTNodeCount="557" docActiveCodeLength="3843" docExpressionCount="387" docLength="4187" projectName="A6" starttimestamp="1650324058609" timestamp="2682476">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener, FakeClientInterface{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	@Override¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException exception) {¶			exception.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new exampleClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception exception) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶				¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="403" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:05:41 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" projectName="A6" starttimestamp="1650324058609" timestamp="2682593">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="404" _type="MoveCaretCommand" caretOffset="5233" date="Mon Apr 18 20:05:41 EDT 2022" docOffset="5233" starttimestamp="1650324058609" timestamp="2682852" />
  <Command __id="406" _type="MoveCaretCommand" caretOffset="2575" date="Mon Apr 18 20:05:42 EDT 2022" docOffset="3894" starttimestamp="1650324058609" timestamp="2683803" />
  <Command __id="408" _type="PauseCommand" date="Mon Apr 18 20:06:57 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="2759350">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[75547]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="407" _type="ShellCommand" date="Mon Apr 18 20:06:57 EDT 2022" starttimestamp="1650324058609" timestamp="2759350" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="410" _type="PauseCommand" date="Mon Apr 18 20:06:59 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2761194">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1844]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="409" _type="ShellCommand" date="Mon Apr 18 20:06:59 EDT 2022" starttimestamp="1650324058609" timestamp="2761194" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="411" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:00 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2761403" type="Debug" />
  <Command __id="412" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:00 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2761403" type="Debug" />
  <Command __id="413" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:07:00 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2761404" type="Run" />
  <Command __id="415" _type="PauseCommand" date="Mon Apr 18 20:07:02 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2763701">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2297]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="414" _type="ShellCommand" date="Mon Apr 18 20:07:02 EDT 2022" starttimestamp="1650324058609" timestamp="2763701" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="417" _type="PauseCommand" date="Mon Apr 18 20:07:04 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2766280">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2579]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="416" _type="ShellCommand" date="Mon Apr 18 20:07:04 EDT 2022" starttimestamp="1650324058609" timestamp="2766280" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="418" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:05 EDT 2022" starttimestamp="1650324058609" timestamp="2766434" />
  <Command __id="419" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:05 EDT 2022" starttimestamp="1650324058609" timestamp="2766497" />
  <Command __id="420" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:07:05 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2767253" type="Run" />
  <Command __id="421" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:07:05 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2767254" type="Run" />
  <Command __id="422" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:06 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2767458" type="Run" />
  <Command __id="423" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:06 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2767481" type="Run" />
  <Command __id="424" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:06 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2767481" type="Run" />
  <Command __id="425" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:06 EDT 2022" starttimestamp="1650324058609" timestamp="2768249" />
  <Command __id="426" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:06 EDT 2022" starttimestamp="1650324058609" timestamp="2768256" />
  <Command __id="428" _type="PauseCommand" date="Mon Apr 18 20:07:10 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2771447">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3191]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="429" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2773116" type="Run" />
  <Command __id="431" _type="ConsoleOutput" date="Mon Apr 18 20:07:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2773233" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 20:07:11 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@e37b295 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 20:07:11 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="433" _type="PauseCommand" date="Mon Apr 18 20:07:16 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2777410">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4177]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="432" _type="ConsoleOutput" date="Mon Apr 18 20:07:16 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2777410" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 20:07:15 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 20:07:15 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Mon Apr 18 20:07:1"), Diff(DELETE,"1"), Diff(INSERT,"5 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 18 20:07:15"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="434" _type="ConsoleOutput" date="Mon Apr 18 20:07:16 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2777502" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 20:07:16 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 20:07:15 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 20:07:1"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="436" _type="PauseCommand" date="Mon Apr 18 20:07:18 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2779619">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2117]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="435" _type="ConsoleOutput" date="Mon Apr 18 20:07:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2779619" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 20:07:18 EDT 2022
Generating checks:Mon Apr 18 20:07:18 EDT 2022
Finished Generating checks:Mon Apr 18 20:07:18 EDT 2022
Generating externals:Mon Apr 18 20:07:18 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 20:07:18 EDT 2022¶Generating checks:Mon Apr 18 20:07:18 EDT 2022¶Finished Generating checks:Mon Apr 18 20:07:18 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Mon Apr 18 20:07:1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="437" _type="ConsoleOutput" date="Mon Apr 18 20:07:19 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2780477" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 20:07:19 EDT 2022
Test execution time (ms):7290
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Apr 18 20:07:18 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 20:07:1"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Apr 18 20:07:18 EDT 2022¶Generating externals:Mon Apr 18 20:07:18 EDT 2022"), Diff(INSERT,"Test execution time (ms):7290"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="438" _type="ConsoleOutput" date="Mon Apr 18 20:07:19 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2780538" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):30

A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.896551724137931
Test execution time (ms):31
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 20:07:19 EDT 2022"), Diff(INSERT,"Test execution time (ms):30¶¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.896551724137931"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"7290"), Diff(INSERT,"31"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="439" _type="ConsoleOutput" date="Mon Apr 18 20:07:19 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2780596" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"30¶¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.896551724137931¶Test execution time (ms):3"), Diff(EQUAL,"1"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="440" _type="ConsoleOutput" date="Mon Apr 18 20:07:19 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2780669" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (187)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (91)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (82)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):13"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (91)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="442" _type="PauseCommand" date="Mon Apr 18 20:07:24 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2785420">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4751]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="441" _type="ConsoleOutput" date="Mon Apr 18 20:07:24 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2785420" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@1b2d396f . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (91)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@1b2d396f . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="444" _type="PauseCommand" date="Mon Apr 18 20:07:30 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2791673">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6253]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="443" _type="ShellCommand" date="Mon Apr 18 20:07:30 EDT 2022" starttimestamp="1650324058609" timestamp="2791673" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="446" _type="MoveCaretCommand" caretOffset="1517" date="Mon Apr 18 20:07:30 EDT 2022" docOffset="2836" starttimestamp="1650324058609" timestamp="2791766" />
  <Command __id="447" _type="MoveCaretCommand" caretOffset="1517" date="Mon Apr 18 20:07:30 EDT 2022" docOffset="2836" starttimestamp="1650324058609" timestamp="2791902" />
  <Command __id="405" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:05:42 EDT 2022" docASTNodeCount="719" docActiveCodeLength="5117" docExpressionCount="520" docLength="5504" projectName="A6" starttimestamp="1650324058609" timestamp="2683600">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.exampleServerReadThread;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶¶public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	@Override¶	protected void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("COMMAND IN SERVER: "+ aMessageString);¶		¶		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="445" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:07:30 EDT 2022" docASTNodeCount="719" docActiveCodeLength="5117" docExpressionCount="520" docLength="5504" projectName="A6" starttimestamp="1650324058609" timestamp="2791727">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.exampleServerReadThread;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶¶public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	@Override¶	protected void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("COMMAND IN SERVER: "+ aMessageString);¶		¶		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="449" _type="PauseCommand" date="Mon Apr 18 20:07:32 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2794327">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2425]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="450" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 18 20:07:33 EDT 2022" docOffset="0" starttimestamp="1650324058609" timestamp="2794832" />
  <Command __id="451" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:34 EDT 2022" starttimestamp="1650324058609" timestamp="2795585" />
  <Command __id="452" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:34 EDT 2022" starttimestamp="1650324058609" timestamp="2795585" />
  <Command __id="454" _type="PauseCommand" date="Mon Apr 18 20:07:37 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2799169">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3584]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="453" _type="SelectTextCommand" caretOffset="535" date="Mon Apr 18 20:07:37 EDT 2022" end="535" start="448" starttimestamp="1650324058609" timestamp="2799169" />
  <Command __id="455" _type="CopyCommand" date="Mon Apr 18 20:07:38 EDT 2022" starttimestamp="1650324058609" timestamp="2799907" />
  <Command __id="448" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:07:32 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" projectName="A6" starttimestamp="1650324058609" timestamp="2794327">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="457" _type="PauseCommand" date="Mon Apr 18 20:07:40 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2801810">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1903]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="456" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:07:40 EDT 2022" docASTNodeCount="332" docActiveCodeLength="2481" docExpressionCount="230" docLength="2768" projectName="A6" starttimestamp="1650324058609" timestamp="2801810">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import client.ClientRemoteObjectNIO;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.AnNIOManagerPrintClient;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})¶public class ClientReadThread implements ReadThreadInterface{¶	//final ClientRemoteObjectNIO client;¶	final ClientRemoteObjectNIO client;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ClientReadThread (final ClientRemoteObjectNIO aClient) {¶		client = aClient;¶	}¶	¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			String aMessageString = new String(originalMessage.array());¶			¶			"), Diff(INSERT,"/// To pass the autograder¶			int position = originalMessage.position();¶			¶			"), Diff(EQUAL,"System.out.println(aMessageString);¶			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶			¶			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);¶			¶			¶			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();¶			¶			¶			RemoteProposeRequestReceived.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);¶			commandProcessor.processCommand(aMessageString);¶			ProposedStateSet.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);¶			//client.aProposalNumber++;¶		¶		}¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.concurrent.ArrayBlockingQueue;

import client.ClientRemoteObjectNIO;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.AnNIOManagerPrintClient;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;


@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})
public class ClientReadThread implements ReadThreadInterface{
	//final ClientRemoteObjectNIO client;
	final ClientRemoteObjectNIO client;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ClientReadThread (final ClientRemoteObjectNIO aClient) {
		client = aClient;
	}
	
	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			String aMessageString = new String(originalMessage.array());
			
			/// To pass the autograder
			int position = originalMessage.position();
			
			System.out.println(aMessageString);
			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
			
			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);
			
			
			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();
			
			
			RemoteProposeRequestReceived.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);
			commandProcessor.processCommand(aMessageString);
			ProposedStateSet.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);
			//client.aProposalNumber++;
		
		}
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <Command __id="458" _type="MoveCaretCommand" caretOffset="1237" date="Mon Apr 18 20:07:40 EDT 2022" docOffset="1807" starttimestamp="1650324058609" timestamp="2801953" />
  <DocumentChange __id="459" _type="Insert" date="Mon Apr 18 20:07:40 EDT 2022" docASTNodeCount="332" docActiveCodeLength="2491" docExpressionCount="230" docLength="2781" length="13" offset="1807" repeat="5" starttimestamp="1650324058609" timestamp="2802161" timestamp2="2803299">
    <text><![CDATA[
			
			///]]></text>
  </DocumentChange>
  <Command __id="460" _type="InsertStringCommand" date="Mon Apr 18 20:07:40 EDT 2022" starttimestamp="1650324058609" timestamp="2802169" timestamp2="2802169">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="462" _type="InsertStringCommand" date="Mon Apr 18 20:07:41 EDT 2022" starttimestamp="1650324058609" timestamp="2802826" timestamp2="2802826">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="464" _type="InsertStringCommand" date="Mon Apr 18 20:07:41 EDT 2022" starttimestamp="1650324058609" timestamp="2803040" timestamp2="2803040">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="466" _type="InsertStringCommand" date="Mon Apr 18 20:07:41 EDT 2022" starttimestamp="1650324058609" timestamp="2803176" timestamp2="2803176">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="468" _type="InsertStringCommand" date="Mon Apr 18 20:07:41 EDT 2022" starttimestamp="1650324058609" timestamp="2803299" timestamp2="2803299">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="469" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Apr 18 20:07:42 EDT 2022" starttimestamp="1650324058609" timestamp="2803784" />
  <Command __id="471" _type="PasteCommand" date="Mon Apr 18 20:07:43 EDT 2022" starttimestamp="1650324058609" timestamp="2804496" />
  <Command __id="473" _type="PauseCommand" date="Mon Apr 18 20:07:44 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2805784">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1288]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="470" _type="Replace" date="Mon Apr 18 20:07:42 EDT 2022" docASTNodeCount="347" docActiveCodeLength="2578" docExpressionCount="237" docLength="2868" endLine="58" insertionLength="90" int_docASTNodeCount="332" int_docActiveCodeLength="2488" int_docExpressionCount="230" int_docLength="2778" length="3" offset="1809" startLine="58" starttimestamp="1650324058609" timestamp="2804360">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);]]></insertedText>
  </DocumentChange>
  <Command __id="472" _type="MoveCaretCommand" caretOffset="1286" date="Mon Apr 18 20:07:44 EDT 2022" docOffset="1856" starttimestamp="1650324058609" timestamp="2805784" />
  <Command __id="475" _type="InsertStringCommand" date="Mon Apr 18 20:07:44 EDT 2022" starttimestamp="1650324058609" timestamp="2806006" timestamp2="2806006">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="478" _type="PauseCommand" date="Mon Apr 18 20:07:45 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2807017">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1011]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="477" _type="InsertStringCommand" date="Mon Apr 18 20:07:45 EDT 2022" starttimestamp="1650324058609" timestamp="2807017" timestamp2="2807017">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="480" _type="InsertStringCommand" date="Mon Apr 18 20:07:45 EDT 2022" starttimestamp="1650324058609" timestamp="2807036" timestamp2="2807036">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="482" _type="InsertStringCommand" date="Mon Apr 18 20:07:45 EDT 2022" starttimestamp="1650324058609" timestamp="2807040" timestamp2="2807040">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="484" _type="PauseCommand" date="Mon Apr 18 20:07:47 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2809128">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2088]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="483" _type="MoveCaretCommand" caretOffset="1333" date="Mon Apr 18 20:07:47 EDT 2022" docOffset="1903" starttimestamp="1650324058609" timestamp="2809128" />
  <Command __id="486" _type="InsertStringCommand" date="Mon Apr 18 20:07:48 EDT 2022" starttimestamp="1650324058609" timestamp="2809446" timestamp2="2809446">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="474" _type="Insert" date="Mon Apr 18 20:07:44 EDT 2022" docASTNodeCount="347" docActiveCodeLength="2582" docExpressionCount="237" docLength="2872" length="4" offset="1856" repeat="4" starttimestamp="1650324058609" timestamp="2805998" timestamp2="2807040">
    <text><![CDATA[Fake]]></text>
  </DocumentChange>
  <DocumentChange __id="485" _type="Insert" date="Mon Apr 18 20:07:48 EDT 2022" docASTNodeCount="347" docActiveCodeLength="2587" docExpressionCount="237" docLength="2877" length="5" offset="1903" starttimestamp="1650324058609" timestamp="2809434">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <Command __id="488" _type="PauseCommand" date="Mon Apr 18 20:07:51 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2812764">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3318]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="489" _type="InsertStringCommand" date="Mon Apr 18 20:07:51 EDT 2022" starttimestamp="1650324058609" timestamp="2812779" timestamp2="2812779">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="491" _type="InsertStringCommand" date="Mon Apr 18 20:07:51 EDT 2022" starttimestamp="1650324058609" timestamp="2812921" timestamp2="2812921">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="493" _type="InsertStringCommand" date="Mon Apr 18 20:07:51 EDT 2022" starttimestamp="1650324058609" timestamp="2813013" timestamp2="2813013">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="495" _type="InsertStringCommand" date="Mon Apr 18 20:07:51 EDT 2022" starttimestamp="1650324058609" timestamp="2813206" timestamp2="2813206">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="497" _type="InsertStringCommand" date="Mon Apr 18 20:07:51 EDT 2022" starttimestamp="1650324058609" timestamp="2813255" timestamp2="2813255">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="499" _type="InsertStringCommand" date="Mon Apr 18 20:07:52 EDT 2022" starttimestamp="1650324058609" timestamp="2813467" timestamp2="2813467">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="501" _type="InsertStringCommand" date="Mon Apr 18 20:07:52 EDT 2022" starttimestamp="1650324058609" timestamp="2813629" timestamp2="2813629">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="503" _type="InsertStringCommand" date="Mon Apr 18 20:07:52 EDT 2022" starttimestamp="1650324058609" timestamp="2814114" timestamp2="2814114">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="505" _type="InsertStringCommand" date="Mon Apr 18 20:07:53 EDT 2022" starttimestamp="1650324058609" timestamp="2814703" timestamp2="2814703">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="507" _type="InsertStringCommand" date="Mon Apr 18 20:07:53 EDT 2022" starttimestamp="1650324058609" timestamp="2814830" timestamp2="2814830">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="509" _type="InsertStringCommand" date="Mon Apr 18 20:07:53 EDT 2022" starttimestamp="1650324058609" timestamp="2814988" timestamp2="2814988">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="511" _type="InsertStringCommand" date="Mon Apr 18 20:07:53 EDT 2022" starttimestamp="1650324058609" timestamp="2815099" timestamp2="2815099">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="513" _type="InsertStringCommand" date="Mon Apr 18 20:07:53 EDT 2022" starttimestamp="1650324058609" timestamp="2815209" timestamp2="2815209">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="515" _type="InsertStringCommand" date="Mon Apr 18 20:07:54 EDT 2022" starttimestamp="1650324058609" timestamp="2815663" timestamp2="2815663">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="517" _type="InsertStringCommand" date="Mon Apr 18 20:07:54 EDT 2022" starttimestamp="1650324058609" timestamp="2815860" timestamp2="2815860">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="519" _type="InsertStringCommand" date="Mon Apr 18 20:07:54 EDT 2022" starttimestamp="1650324058609" timestamp="2815946" timestamp2="2815946">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="521" _type="InsertStringCommand" date="Mon Apr 18 20:07:54 EDT 2022" starttimestamp="1650324058609" timestamp="2816062" timestamp2="2816062">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="523" _type="InsertStringCommand" date="Mon Apr 18 20:07:55 EDT 2022" starttimestamp="1650324058609" timestamp="2816420" timestamp2="2816420">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="524" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 18 20:07:55 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="2816420" />
  <Command __id="526" _type="PauseCommand" date="Mon Apr 18 20:07:56 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2817591">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1171]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="525" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:07:56 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="2817591" />
  <Command __id="528" _type="InsertStringCommand" date="Mon Apr 18 20:07:56 EDT 2022" starttimestamp="1650324058609" timestamp="2817728" timestamp2="2817728">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="530" _type="PauseCommand" date="Mon Apr 18 20:07:58 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2820377">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2649]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="529" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:07:58 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="2820377" />
  <Command __id="531" _type="MoveCaretCommand" caretOffset="1370" date="Mon Apr 18 20:07:59 EDT 2022" docOffset="1940" starttimestamp="1650324058609" timestamp="2820463" />
  <Command __id="533" _type="PauseCommand" date="Mon Apr 18 20:08:25 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="2847318">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[26855]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="532" _type="MoveCaretCommand" caretOffset="1361" date="Mon Apr 18 20:08:25 EDT 2022" docOffset="1931" starttimestamp="1650324058609" timestamp="2847318" />
  <Command __id="535" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:08:26 EDT 2022" starttimestamp="1650324058609" timestamp="2847817" />
  <Command __id="537" _type="InsertStringCommand" date="Mon Apr 18 20:08:26 EDT 2022" starttimestamp="1650324058609" timestamp="2848264" timestamp2="2848264">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="539" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2848486" timestamp2="2848486">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="541" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2848632" timestamp2="2848632">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="543" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2848775" timestamp2="2848775">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="545" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2848848" timestamp2="2848848">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="547" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2848925" timestamp2="2848925">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="549" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2849041" timestamp2="2849041">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="551" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2849126" timestamp2="2849126">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="553" _type="InsertStringCommand" date="Mon Apr 18 20:08:28 EDT 2022" starttimestamp="1650324058609" timestamp="2849470" timestamp2="2849470">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="555" _type="InsertStringCommand" date="Mon Apr 18 20:08:28 EDT 2022" starttimestamp="1650324058609" timestamp="2849661" timestamp2="2849661">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="557" _type="InsertStringCommand" date="Mon Apr 18 20:08:28 EDT 2022" starttimestamp="1650324058609" timestamp="2849823" timestamp2="2849823">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="559" _type="InsertStringCommand" date="Mon Apr 18 20:08:28 EDT 2022" starttimestamp="1650324058609" timestamp="2850131" timestamp2="2850131">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="561" _type="InsertStringCommand" date="Mon Apr 18 20:08:28 EDT 2022" starttimestamp="1650324058609" timestamp="2850197" timestamp2="2850197">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="563" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2850585" />
  <Command __id="565" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2850741" />
  <Command __id="567" _type="InsertStringCommand" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2850829" timestamp2="2850829">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="569" _type="InsertStringCommand" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2850861" timestamp2="2850861">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="571" _type="InsertStringCommand" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2850972" timestamp2="2850972">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="573" _type="InsertStringCommand" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2851053" timestamp2="2851053">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="574" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2851374" />
  <Command __id="575" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:08:30 EDT 2022" starttimestamp="1650324058609" timestamp="2851546" />
  <Command __id="577" _type="InsertStringCommand" date="Mon Apr 18 20:08:30 EDT 2022" starttimestamp="1650324058609" timestamp="2851972" timestamp2="2851972">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="579" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:08:31 EDT 2022" starttimestamp="1650324058609" timestamp="2852958" />
  <Command __id="581" _type="PauseCommand" date="Mon Apr 18 20:08:32 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2854089">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1131]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="580" _type="MoveCaretCommand" caretOffset="1376" date="Mon Apr 18 20:08:32 EDT 2022" docOffset="1946" starttimestamp="1650324058609" timestamp="2854089" />
  <Command __id="583" _type="InsertStringCommand" date="Mon Apr 18 20:08:33 EDT 2022" starttimestamp="1650324058609" timestamp="2854671" timestamp2="2854671">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="585" _type="PauseCommand" date="Mon Apr 18 20:08:34 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2856285">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1614]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="584" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:08:34 EDT 2022" starttimestamp="1650324058609" timestamp="2856285" />
  <Command __id="586" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:08:34 EDT 2022" starttimestamp="1650324058609" timestamp="2856357" />
  <Command __id="587" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:08:35 EDT 2022" starttimestamp="1650324058609" timestamp="2856417" />
  <Command __id="589" _type="PauseCommand" date="Mon Apr 18 20:08:38 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2859561">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3144]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="588" _type="ShellCommand" date="Mon Apr 18 20:08:38 EDT 2022" starttimestamp="1650324058609" timestamp="2859561" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="591" _type="PauseCommand" date="Mon Apr 18 20:08:39 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2861236">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1675]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="595" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:08:42 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2863831" type="Run" />
  <Command __id="597" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:08:42 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2863831" type="Run" />
  <Command __id="598" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:08:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2864047" type="Run" />
  <Command __id="599" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:08:42 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2864075" type="Run" />
  <Command __id="600" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:08:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2864081" type="Run" />
  <Command __id="602" _type="PauseCommand" date="Mon Apr 18 20:08:46 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2867458">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3377]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="603" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:08:47 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2869042" type="Run" />
  <Command __id="605" _type="ConsoleOutput" date="Mon Apr 18 20:08:47 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2869151" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 20:08:47 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@1b2d396f . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 20:08:47 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="607" _type="PauseCommand" date="Mon Apr 18 20:08:51 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2873279">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4128]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="606" _type="ConsoleOutput" date="Mon Apr 18 20:08:51 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2873279" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 20:08:51 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 20:08:51 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Mon Apr 18 20:08:51 EDT 2022¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Mon Apr 18 20:08:"), Diff(DELETE,"47"), Diff(INSERT,"51"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="608" _type="ConsoleOutput" date="Mon Apr 18 20:08:51 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2873372" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 20:08:51 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 20:08:51 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 20:08:51 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="610" _type="PauseCommand" date="Mon Apr 18 20:08:54 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2875709">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2337]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="609" _type="ConsoleOutput" date="Mon Apr 18 20:08:54 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2875709" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 20:08:54 EDT 2022
Generating checks:Mon Apr 18 20:08:54 EDT 2022
Finished Generating checks:Mon Apr 18 20:08:54 EDT 2022
Generating externals:Mon Apr 18 20:08:54 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 20:08:54 EDT 2022¶Generating checks:Mon Apr 18 20:08:54 EDT 2022¶Finished Generating checks:Mon Apr 18 20:08:54 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Mon Apr 18 20:08:5"), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="611" _type="ConsoleOutput" date="Mon Apr 18 20:08:55 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2876501" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 20:08:55 EDT 2022
Test execution time (ms):7408
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Apr 18 20:08:54 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 20:08:5"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Apr 18 20:08:54 EDT 2022¶Generating externals:Mon Apr 18 20:08:54 EDT 2022"), Diff(INSERT,"Test execution time (ms):7408"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="612" _type="ConsoleOutput" date="Mon Apr 18 20:08:55 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2876558" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):17
A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.9310344827586207

Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 20:08:55 EDT 2022"), Diff(INSERT,"Test execution time (ms):17¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.9310344827586207¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"7408"), Diff(INSERT,"32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="613" _type="ConsoleOutput" date="Mon Apr 18 20:08:55 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2876624" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):39
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"17¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.9310344827586207¶¶Test execution time (ms):32"), Diff(INSERT,"39"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="614" _type="ConsoleOutput" date="Mon Apr 18 20:08:55 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2876720" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (187)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (94)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (82)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):39"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="616" _type="PauseCommand" date="Mon Apr 18 20:08:58 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2880321">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3601]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="615" _type="ConsoleOutput" date="Mon Apr 18 20:08:58 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2880321" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@31c9edf8 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@31c9edf8 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="618" _type="PauseCommand" date="Mon Apr 18 20:09:08 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2889421">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9100]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="617" _type="ShellCommand" date="Mon Apr 18 20:09:08 EDT 2022" starttimestamp="1650324058609" timestamp="2889421" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="620" _type="PauseCommand" date="Mon Apr 18 20:09:09 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2890788">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1367]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="619" _type="SelectTextCommand" caretOffset="1163" date="Mon Apr 18 20:09:09 EDT 2022" end="1385" start="1163" starttimestamp="1650324058609" timestamp="2890788" />
  <Command __id="621" _type="CopyCommand" date="Mon Apr 18 20:09:09 EDT 2022" starttimestamp="1650324058609" timestamp="2891043" />
  <DocumentChange __id="487" _type="Insert" date="Mon Apr 18 20:07:51 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2611" docExpressionCount="241" docLength="2901" length="24" offset="1908" repeat="19" starttimestamp="1650324058609" timestamp="2812764" timestamp2="2817598">
    <text><![CDATA[boundedBufferFake.add(e)]]></text>
  </DocumentChange>
  <DocumentChange __id="534" _type="Delete" date="Mon Apr 18 20:08:26 EDT 2022" docASTNodeCount="351" docActiveCodeLength="2610" docExpressionCount="240" docLength="2900" endLine="59" length="1" offset="1930" startLine="59" starttimestamp="1650324058609" timestamp="2847801">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="536" _type="Insert" date="Mon Apr 18 20:08:26 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2623" docExpressionCount="241" docLength="2913" length="13" offset="1930" repeat="13" starttimestamp="1650324058609" timestamp="2848259" timestamp2="2850188">
    <text><![CDATA[originalMesas]]></text>
  </DocumentChange>
  <DocumentChange __id="562" _type="Delete" date="Mon Apr 18 20:08:29 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2621" docExpressionCount="241" docLength="2911" endLine="59" length="2" offset="1941" repeat="2" startLine="59" starttimestamp="1650324058609" timestamp="2850577" timestamp2="2850741">
    <text><![CDATA[as]]></text>
  </DocumentChange>
  <DocumentChange __id="566" _type="Insert" date="Mon Apr 18 20:08:29 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2625" docExpressionCount="241" docLength="2915" length="4" offset="1941" repeat="4" starttimestamp="1650324058609" timestamp="2850821" timestamp2="2851053">
    <text><![CDATA[sage]]></text>
  </DocumentChange>
  <DocumentChange __id="576" _type="Insert" date="Mon Apr 18 20:08:30 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2626" docExpressionCount="241" docLength="2916" length="1" offset="1948" starttimestamp="1650324058609" timestamp="2851965">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="578" _type="Delete" date="Mon Apr 18 20:08:31 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2625" docExpressionCount="241" docLength="2915" endLine="60" length="1" offset="1948" startLine="60" starttimestamp="1650324058609" timestamp="2852958">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="582" _type="Insert" date="Mon Apr 18 20:08:33 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2626" docExpressionCount="241" docLength="2916" length="1" offset="1946" starttimestamp="1650324058609" timestamp="2854663">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="623" _type="PauseCommand" date="Mon Apr 18 20:09:11 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2893023">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1980]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="624" _type="MoveCaretCommand" caretOffset="1334" date="Mon Apr 18 20:09:12 EDT 2022" docOffset="1815" starttimestamp="1650324058609" timestamp="2893438" />
  <Command __id="625" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:09:12 EDT 2022" starttimestamp="1650324058609" timestamp="2894162" />
  <Command __id="626" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:09:12 EDT 2022" starttimestamp="1650324058609" timestamp="2894168" />
  <Command __id="628" _type="PauseCommand" date="Mon Apr 18 20:09:23 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2904400">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10232]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="627" _type="MoveCaretCommand" caretOffset="989" date="Mon Apr 18 20:09:23 EDT 2022" docOffset="1470" starttimestamp="1650324058609" timestamp="2904400" />
  <Command __id="630" _type="InsertStringCommand" date="Mon Apr 18 20:09:23 EDT 2022" starttimestamp="1650324058609" timestamp="2904721" timestamp2="2904721">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="632" _type="PasteCommand" date="Mon Apr 18 20:09:23 EDT 2022" starttimestamp="1650324058609" timestamp="2905278" />
  <Command __id="634" _type="PauseCommand" date="Mon Apr 18 20:09:30 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2911662">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[6384]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="633" _type="SelectTextCommand" caretOffset="1025" date="Mon Apr 18 20:09:30 EDT 2022" end="1028" start="1025" starttimestamp="1650324058609" timestamp="2911662" />
  <Command __id="636" _type="InsertStringCommand" date="Mon Apr 18 20:09:30 EDT 2022" starttimestamp="1650324058609" timestamp="2911954" timestamp2="2911954">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="638" _type="InsertStringCommand" date="Mon Apr 18 20:09:30 EDT 2022" starttimestamp="1650324058609" timestamp="2912074" timestamp2="2912074">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="640" _type="InsertStringCommand" date="Mon Apr 18 20:09:30 EDT 2022" starttimestamp="1650324058609" timestamp="2912157" timestamp2="2912157">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="642" _type="InsertStringCommand" date="Mon Apr 18 20:09:30 EDT 2022" starttimestamp="1650324058609" timestamp="2912346" timestamp2="2912346">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="644" _type="InsertStringCommand" date="Mon Apr 18 20:09:31 EDT 2022" starttimestamp="1650324058609" timestamp="2912444" timestamp2="2912444">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="646" _type="InsertStringCommand" date="Mon Apr 18 20:09:31 EDT 2022" starttimestamp="1650324058609" timestamp="2912661" timestamp2="2912661">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="648" _type="InsertStringCommand" date="Mon Apr 18 20:09:31 EDT 2022" starttimestamp="1650324058609" timestamp="2912868" timestamp2="2912868">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="622" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:09:11 EDT 2022" docASTNodeCount="287" docActiveCodeLength="2008" docExpressionCount="189" docLength="2276" projectName="A6" starttimestamp="1650324058609" timestamp="2893023">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.NIOManagerPrintServer;
import server.remote.ServerRemoteObjectNIO;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.communication.CommunicationStateNames;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{
	
	final ServerRemoteObjectNIO server;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ServerReadThread (final ServerRemoteObjectNIO aServer) {
		server = aServer;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();
			List<SocketChannel> socketList = server.getSocketList();
			SocketChannel currentSocket = server.getSocketChannel();
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			// Echo recieve message to all clients (except original message sender)
			
			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());
			
			for (SocketChannel socket : socketList) {
				if (!socket.equals(currentSocket)) {
					
					nioManager.write(socket, originalMessage, server);
				}
			}
		
		}
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="629" _type="Insert" date="Mon Apr 18 20:09:23 EDT 2022" docASTNodeCount="287" docActiveCodeLength="2013" docExpressionCount="189" docLength="2281" length="5" offset="1470" starttimestamp="1650324058609" timestamp="2904716">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="631" _type="Replace" date="Mon Apr 18 20:09:23 EDT 2022" docASTNodeCount="314" docActiveCodeLength="2205" docExpressionCount="204" docLength="2502" endLine="47" insertionLength="224" int_docASTNodeCount="287" int_docActiveCodeLength="2010" int_docExpressionCount="189" int_docLength="2278" length="3" offset="1472" startLine="47" starttimestamp="1650324058609" timestamp="2905176">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			/// To pass the autograder
			int position = originalMessage.position();
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="635" _type="Replace" date="Mon Apr 18 20:09:30 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2203" docExpressionCount="205" docLength="2500" endLine="48" insertionLength="1" int_docASTNodeCount="313" int_docActiveCodeLength="2202" int_docExpressionCount="205" int_docLength="2499" length="3" offset="1506" startLine="48" starttimestamp="1650324058609" timestamp="2911946">
    <deletedText><![CDATA[int]]></deletedText>
    <insertedText><![CDATA[B]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="637" _type="Insert" date="Mon Apr 18 20:09:30 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2209" docExpressionCount="205" docLength="2506" length="6" offset="1507" repeat="6" starttimestamp="1650324058609" timestamp="2912067" timestamp2="2912860">
    <text><![CDATA[ounded]]></text>
  </DocumentChange>
  <Command __id="650" _type="PauseCommand" date="Mon Apr 18 20:09:33 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2914731">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1863]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="651" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:33 EDT 2022" starttimestamp="1650324058609" timestamp="2914739" />
  <Command __id="653" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:33 EDT 2022" starttimestamp="1650324058609" timestamp="2915241" />
  <Command __id="655" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:33 EDT 2022" starttimestamp="1650324058609" timestamp="2915264" />
  <Command __id="657" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:33 EDT 2022" starttimestamp="1650324058609" timestamp="2915298" />
  <Command __id="659" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:34 EDT 2022" starttimestamp="1650324058609" timestamp="2915513" />
  <Command __id="661" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:34 EDT 2022" starttimestamp="1650324058609" timestamp="2915692" />
  <DocumentChange __id="649" _type="Delete" date="Mon Apr 18 20:09:33 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2203" docExpressionCount="205" docLength="2500" endLine="48" length="6" offset="1507" repeat="6" startLine="48" starttimestamp="1650324058609" timestamp="2914731" timestamp2="2915692">
    <text><![CDATA[ounded]]></text>
  </DocumentChange>
  <Command __id="663" _type="PauseCommand" date="Mon Apr 18 20:09:35 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2916711">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1019]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="662" _type="Insert" date="Mon Apr 18 20:09:35 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2212" docExpressionCount="205" docLength="2509" length="9" offset="1507" repeat="9" starttimestamp="1650324058609" timestamp="2916711" timestamp2="2918047">
    <text><![CDATA[yteBuffer]]></text>
  </DocumentChange>
  <Command __id="664" _type="InsertStringCommand" date="Mon Apr 18 20:09:35 EDT 2022" starttimestamp="1650324058609" timestamp="2916720" timestamp2="2916720">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="666" _type="InsertStringCommand" date="Mon Apr 18 20:09:35 EDT 2022" starttimestamp="1650324058609" timestamp="2916928" timestamp2="2916928">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="668" _type="InsertStringCommand" date="Mon Apr 18 20:09:35 EDT 2022" starttimestamp="1650324058609" timestamp="2917069" timestamp2="2917069">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="670" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2917417" timestamp2="2917417">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="672" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2917573" timestamp2="2917573">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="674" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2917688" timestamp2="2917688">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="676" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2917848" timestamp2="2917848">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="678" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2917972" timestamp2="2917972">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="680" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2918055" timestamp2="2918055">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="681" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2918430" />
  <Command __id="682" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2918934" />
  <Command __id="683" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2918966" />
  <Command __id="684" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2919001" />
  <Command __id="685" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2919030" />
  <Command __id="686" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2919054" />
  <Command __id="687" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2919090" />
  <Command __id="688" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2919282" />
  <DocumentChange __id="689" _type="Delete" date="Mon Apr 18 20:09:38 EDT 2022" docASTNodeCount="313" docActiveCodeLength="2204" docExpressionCount="205" docLength="2501" endLine="48" length="8" offset="1517" repeat="8" startLine="48" starttimestamp="1650324058609" timestamp="2919596" timestamp2="2921238">
    <text><![CDATA[position]]></text>
  </DocumentChange>
  <Command __id="690" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:38 EDT 2022" starttimestamp="1650324058609" timestamp="2919599" />
  <Command __id="692" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:38 EDT 2022" starttimestamp="1650324058609" timestamp="2920185" />
  <Command __id="694" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2920454" />
  <Command __id="696" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2920637" />
  <Command __id="698" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2920791" />
  <Command __id="700" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2920951" />
  <Command __id="702" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2921101" />
  <Command __id="704" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2921238" />
  <Command __id="706" _type="InsertStringCommand" date="Mon Apr 18 20:09:40 EDT 2022" starttimestamp="1650324058609" timestamp="2921611" timestamp2="2921611">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="708" _type="InsertStringCommand" date="Mon Apr 18 20:09:40 EDT 2022" starttimestamp="1650324058609" timestamp="2921668" timestamp2="2921668">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="710" _type="InsertStringCommand" date="Mon Apr 18 20:09:40 EDT 2022" starttimestamp="1650324058609" timestamp="2921810" timestamp2="2921810">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="712" _type="InsertStringCommand" date="Mon Apr 18 20:09:40 EDT 2022" starttimestamp="1650324058609" timestamp="2921917" timestamp2="2921917">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="714" _type="PauseCommand" date="Mon Apr 18 20:09:43 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2924481">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2564]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="713" _type="SelectTextCommand" caretOffset="1058" date="Mon Apr 18 20:09:43 EDT 2022" end="1067" start="1058" starttimestamp="1650324058609" timestamp="2924481" />
  <Command __id="715" _type="MoveCaretCommand" caretOffset="1058" date="Mon Apr 18 20:09:43 EDT 2022" docOffset="1539" starttimestamp="1650324058609" timestamp="2924824" />
  <Command __id="717" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:43 EDT 2022" starttimestamp="1650324058609" timestamp="2924970" />
  <DocumentChange __id="705" _type="Insert" date="Mon Apr 18 20:09:40 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2208" docExpressionCount="205" docLength="2505" length="4" offset="1517" repeat="4" starttimestamp="1650324058609" timestamp="2921593" timestamp2="2921909">
    <text><![CDATA[copy]]></text>
  </DocumentChange>
  <DocumentChange __id="716" _type="Delete" date="Mon Apr 18 20:09:43 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2207" docExpressionCount="205" docLength="2504" endLine="48" length="1" offset="1538" startLine="48" starttimestamp="1650324058609" timestamp="2924961">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <Command __id="719" _type="PauseCommand" date="Mon Apr 18 20:09:44 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2925976">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1006]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="718" _type="Insert" date="Mon Apr 18 20:09:44 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2209" docExpressionCount="205" docLength="2506" length="2" offset="1538" repeat="2" starttimestamp="1650324058609" timestamp="2925976" timestamp2="2926127">
    <text><![CDATA[e.]]></text>
  </DocumentChange>
  <Command __id="720" _type="InsertStringCommand" date="Mon Apr 18 20:09:44 EDT 2022" starttimestamp="1650324058609" timestamp="2925981" timestamp2="2925981">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="722" _type="InsertStringCommand" date="Mon Apr 18 20:09:44 EDT 2022" starttimestamp="1650324058609" timestamp="2926139" timestamp2="2926139">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="723" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 18 20:09:44 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="2926139" />
  <Command __id="724" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:09:44 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="2926198" />
  <DocumentChange __id="725" _type="Delete" date="Mon Apr 18 20:09:45 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2200" docExpressionCount="205" docLength="2497" endLine="48" length="9" offset="1540" repeat="9" startLine="48" starttimestamp="1650324058609" timestamp="2926792" timestamp2="2928267">
    <text><![CDATA[.position]]></text>
  </DocumentChange>
  <Command __id="726" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:45 EDT 2022" starttimestamp="1650324058609" timestamp="2926796" />
  <Command __id="728" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:45 EDT 2022" starttimestamp="1650324058609" timestamp="2926997" />
  <Command __id="730" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:45 EDT 2022" starttimestamp="1650324058609" timestamp="2927150" />
  <Command __id="732" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:45 EDT 2022" starttimestamp="1650324058609" timestamp="2927311" />
  <Command __id="734" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:46 EDT 2022" starttimestamp="1650324058609" timestamp="2927462" />
  <Command __id="736" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:46 EDT 2022" starttimestamp="1650324058609" timestamp="2927610" />
  <Command __id="738" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:46 EDT 2022" starttimestamp="1650324058609" timestamp="2927753" />
  <Command __id="740" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:46 EDT 2022" starttimestamp="1650324058609" timestamp="2927906" />
  <Command __id="742" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:46 EDT 2022" starttimestamp="1650324058609" timestamp="2928275" />
  <Command __id="744" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2928463" timestamp2="2928463">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="746" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2928635" timestamp2="2928635">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="748" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2928790" timestamp2="2928790">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="750" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2928900" timestamp2="2928900">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="752" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2929262" timestamp2="2929262">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="754" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2929376" timestamp2="2929376">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="756" _type="InsertStringCommand" date="Mon Apr 18 20:09:48 EDT 2022" starttimestamp="1650324058609" timestamp="2929433" timestamp2="2929433">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="758" _type="InsertStringCommand" date="Mon Apr 18 20:09:48 EDT 2022" starttimestamp="1650324058609" timestamp="2929620" timestamp2="2929620">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="760" _type="PauseCommand" date="Mon Apr 18 20:09:49 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2931074">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1454]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="759" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 18 20:09:49 EDT 2022" starttimestamp="1650324058609" timestamp="2931074" />
  <Command __id="761" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 18 20:09:49 EDT 2022" starttimestamp="1650324058609" timestamp="2931285" />
  <Command __id="762" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 18 20:09:50 EDT 2022" starttimestamp="1650324058609" timestamp="2931421" />
  <Command __id="764" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:50 EDT 2022" starttimestamp="1650324058609" timestamp="2931924" />
  <Command __id="766" _type="InsertStringCommand" date="Mon Apr 18 20:09:50 EDT 2022" starttimestamp="1650324058609" timestamp="2932341" timestamp2="2932341">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="768" _type="PauseCommand" date="Mon Apr 18 20:09:55 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2937190">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4849]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="767" _type="SelectTextCommand" caretOffset="1043" date="Mon Apr 18 20:09:55 EDT 2022" end="1058" start="1043" starttimestamp="1650324058609" timestamp="2937190" />
  <Command __id="770" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2937432" timestamp2="2937432">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="772" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2937515" timestamp2="2937515">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="774" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2937606" timestamp2="2937606">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="776" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2937825" timestamp2="2937825">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="778" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2937864" timestamp2="2937864">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="780" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2938057" timestamp2="2938057">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="782" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2938215" timestamp2="2938215">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="784" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2938597" timestamp2="2938597">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="786" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2938804" timestamp2="2938804">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="788" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2938934" timestamp2="2938934">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="790" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2939083" timestamp2="2939083">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="792" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2939219" timestamp2="2939219">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="794" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2939303" timestamp2="2939303">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="796" _type="PauseCommand" date="Mon Apr 18 20:09:59 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2941107">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1804]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="795" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:09:59 EDT 2022" starttimestamp="1650324058609" timestamp="2941107" />
  <Command __id="797" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:09:59 EDT 2022" starttimestamp="1650324058609" timestamp="2941181" />
  <Command __id="798" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:09:59 EDT 2022" starttimestamp="1650324058609" timestamp="2941239" />
  <Command __id="800" _type="PauseCommand" date="Mon Apr 18 20:10:04 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2945615">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4376]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="799" _type="ShellCommand" date="Mon Apr 18 20:10:04 EDT 2022" starttimestamp="1650324058609" timestamp="2945615" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="801" _type="ShellCommand" date="Mon Apr 18 20:10:04 EDT 2022" starttimestamp="1650324058609" timestamp="2945789" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="809" _type="PauseCommand" date="Mon Apr 18 20:10:10 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2952351">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[6345]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="808" _type="SelectTextCommand" caretOffset="1025" date="Mon Apr 18 20:10:10 EDT 2022" end="1035" start="1025" starttimestamp="1650324058609" timestamp="2952351" />
  <Command __id="811" _type="PauseCommand" date="Mon Apr 18 20:10:29 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2971153">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[18802]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="810" _type="SelectTextCommand" caretOffset="994" date="Mon Apr 18 20:10:29 EDT 2022" end="1227" start="994" starttimestamp="1650324058609" timestamp="2971153" />
  <Command __id="813" _type="CutCommand" date="Mon Apr 18 20:10:30 EDT 2022" starttimestamp="1650324058609" timestamp="2971543" />
  <Command __id="815" _type="PauseCommand" date="Mon Apr 18 20:10:31 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2973248">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1705]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="814" _type="MoveCaretCommand" caretOffset="1166" date="Mon Apr 18 20:10:31 EDT 2022" docOffset="1647" starttimestamp="1650324058609" timestamp="2973248" />
  <Command __id="817" _type="InsertStringCommand" date="Mon Apr 18 20:10:32 EDT 2022" starttimestamp="1650324058609" timestamp="2973510" timestamp2="2973510">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="819" _type="InsertStringCommand" date="Mon Apr 18 20:10:32 EDT 2022" starttimestamp="1650324058609" timestamp="2973731" timestamp2="2973731">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="821" _type="PasteCommand" date="Mon Apr 18 20:10:32 EDT 2022" starttimestamp="1650324058609" timestamp="2974016" />
  <Command __id="823" _type="PauseCommand" date="Mon Apr 18 20:10:35 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2977283">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3267]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="822" _type="SelectTextCommand" caretOffset="1225" date="Mon Apr 18 20:10:35 EDT 2022" end="1249" start="1225" starttimestamp="1650324058609" timestamp="2977283" />
  <Command __id="825" _type="InsertStringCommand" date="Mon Apr 18 20:10:36 EDT 2022" starttimestamp="1650324058609" timestamp="2978156" timestamp2="2978156">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="827" _type="InsertStringCommand" date="Mon Apr 18 20:10:36 EDT 2022" starttimestamp="1650324058609" timestamp="2978334" timestamp2="2978334">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="829" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978449" timestamp2="2978449">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="831" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978572" timestamp2="2978572">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="833" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978645" timestamp2="2978645">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="835" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978709" timestamp2="2978709">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="837" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978810" timestamp2="2978810">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="839" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978926" timestamp2="2978926">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="841" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2979193" timestamp2="2979193">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="843" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2979337" timestamp2="2979337">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="845" _type="InsertStringCommand" date="Mon Apr 18 20:10:38 EDT 2022" starttimestamp="1650324058609" timestamp="2979497" timestamp2="2979497">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="847" _type="InsertStringCommand" date="Mon Apr 18 20:10:38 EDT 2022" starttimestamp="1650324058609" timestamp="2979688" timestamp2="2979688">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="849" _type="InsertStringCommand" date="Mon Apr 18 20:10:38 EDT 2022" starttimestamp="1650324058609" timestamp="2979817" timestamp2="2979817">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="851" _type="InsertStringCommand" date="Mon Apr 18 20:10:38 EDT 2022" starttimestamp="1650324058609" timestamp="2979873" timestamp2="2979873">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="853" _type="InsertStringCommand" date="Mon Apr 18 20:10:38 EDT 2022" starttimestamp="1650324058609" timestamp="2979971" timestamp2="2979971">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="855" _type="PauseCommand" date="Mon Apr 18 20:10:40 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2981831">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1860]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="854" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:10:40 EDT 2022" starttimestamp="1650324058609" timestamp="2981831" />
  <Command __id="856" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:10:40 EDT 2022" starttimestamp="1650324058609" timestamp="2981916" />
  <Command __id="857" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:10:40 EDT 2022" starttimestamp="1650324058609" timestamp="2981986" />
  <Command __id="859" _type="PauseCommand" date="Mon Apr 18 20:10:46 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2987696">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5710]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="858" _type="ShellCommand" date="Mon Apr 18 20:10:46 EDT 2022" starttimestamp="1650324058609" timestamp="2987696" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="860" _type="ShellCommand" date="Mon Apr 18 20:10:46 EDT 2022" starttimestamp="1650324058609" timestamp="2987849" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="868" _type="PauseCommand" date="Mon Apr 18 20:10:54 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2996327">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[8439]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="867" _type="ShellCommand" date="Mon Apr 18 20:10:54 EDT 2022" starttimestamp="1650324058609" timestamp="2996327" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="869" _type="ShellCommand" date="Mon Apr 18 20:10:55 EDT 2022" starttimestamp="1650324058609" timestamp="2996502" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="873" _type="PauseCommand" date="Mon Apr 18 20:11:02 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="3004352">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[7806]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="872" _type="CopyCommand" date="Mon Apr 18 20:11:02 EDT 2022" starttimestamp="1650324058609" timestamp="3004352" />
  <Command __id="875" _type="PauseCommand" date="Mon Apr 18 20:11:06 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3007444">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3092]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <DocumentChange __id="743" _type="Insert" date="Mon Apr 18 20:09:47 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2208" docExpressionCount="205" docLength="2505" length="8" offset="1540" repeat="8" starttimestamp="1650324058609" timestamp="2928446" timestamp2="2929607">
    <text><![CDATA[deepcopy]]></text>
  </DocumentChange>
  <DocumentChange __id="763" _type="Delete" date="Mon Apr 18 20:09:50 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2207" docExpressionCount="205" docLength="2504" endLine="48" length="1" offset="1544" startLine="48" starttimestamp="1650324058609" timestamp="2931924">
    <text><![CDATA[c]]></text>
  </DocumentChange>
  <DocumentChange __id="765" _type="Insert" date="Mon Apr 18 20:09:50 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2208" docExpressionCount="205" docLength="2505" length="1" offset="1544" starttimestamp="1650324058609" timestamp="2932333">
    <text><![CDATA[C]]></text>
  </DocumentChange>
  <DocumentChange __id="769" _type="Replace" date="Mon Apr 18 20:09:56 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2194" docExpressionCount="205" docLength="2491" endLine="48" insertionLength="1" int_docASTNodeCount="314" int_docActiveCodeLength="2193" int_docExpressionCount="204" int_docLength="2490" length="15" offset="1524" startLine="48" starttimestamp="1650324058609" timestamp="2937424">
    <deletedText><![CDATA[originalMessage]]></deletedText>
    <insertedText><![CDATA[b]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="771" _type="Insert" date="Mon Apr 18 20:09:56 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2206" docExpressionCount="205" docLength="2503" length="12" offset="1525" repeat="12" starttimestamp="1650324058609" timestamp="2937509" timestamp2="2939294">
    <text><![CDATA[oundedBuffer]]></text>
  </DocumentChange>
  <DocumentChange __id="802" _type="Delete" date="Mon Apr 18 20:10:04 EDT 2022" docASTNodeCount="314" docActiveCodeLength="2193" docExpressionCount="204" docLength="2490" endLine="48" length="13" offset="1524" startLine="48" starttimestamp="1650324058609" timestamp="2945997">
    <text><![CDATA[boundedBuffer]]></text>
  </DocumentChange>
  <DocumentChange __id="803" _type="Insert" date="Mon Apr 18 20:10:04 EDT 2022" docASTNodeCount="319" docActiveCodeLength="2217" docExpressionCount="208" docLength="2514" length="24" offset="1524" repeat="5" starttimestamp="1650324058609" timestamp="2946006" timestamp2="2946018">
    <text><![CDATA[((Object) boundedBuffer)]]></text>
  </DocumentChange>
  <DocumentChange __id="812" _type="Delete" date="Mon Apr 18 20:10:30 EDT 2022" docASTNodeCount="287" docActiveCodeLength="2013" docExpressionCount="189" docLength="2281" endLine="51" length="233" offset="1475" startLine="47" starttimestamp="1650324058609" timestamp="2971512">
    <text><![CDATA[/// To pass the autograder
			ByteBuffer copy = ((Object) boundedBuffer).deepCopy();
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///]]></text>
  </DocumentChange>
  <DocumentChange __id="816" _type="Insert" date="Mon Apr 18 20:10:32 EDT 2022" docASTNodeCount="287" docActiveCodeLength="2023" docExpressionCount="189" docLength="2291" length="10" offset="1647" repeat="2" starttimestamp="1650324058609" timestamp="2973501" timestamp2="2973722">
    <text><![CDATA[
			
			]]></text>
  </DocumentChange>
  <DocumentChange __id="820" _type="Replace" date="Mon Apr 18 20:10:32 EDT 2022" docASTNodeCount="319" docActiveCodeLength="2227" docExpressionCount="208" docLength="2524" endLine="56" insertionLength="236" int_docASTNodeCount="287" int_docActiveCodeLength="2020" int_docExpressionCount="189" int_docLength="2288" length="3" offset="1654" startLine="56" starttimestamp="1650324058609" timestamp="2973998">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			/// To pass the autograder
			ByteBuffer copy = ((Object) boundedBuffer).deepCopy();
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="824" _type="Replace" date="Mon Apr 18 20:10:36 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2204" docExpressionCount="205" docLength="2501" endLine="57" insertionLength="1" int_docASTNodeCount="314" int_docActiveCodeLength="2203" int_docExpressionCount="204" int_docLength="2500" length="24" offset="1706" startLine="57" starttimestamp="1650324058609" timestamp="2978156">
    <deletedText><![CDATA[((Object) boundedBuffer)]]></deletedText>
    <insertedText><![CDATA[o]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="826" _type="Insert" date="Mon Apr 18 20:10:36 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2218" docExpressionCount="205" docLength="2515" length="14" offset="1707" repeat="14" starttimestamp="1650324058609" timestamp="2978326" timestamp2="2979971">
    <text><![CDATA[riginalMessage]]></text>
  </DocumentChange>
  <DocumentChange __id="861" _type="Delete" date="Mon Apr 18 20:10:46 EDT 2022" docASTNodeCount="314" docActiveCodeLength="2203" docExpressionCount="204" docLength="2500" endLine="57" length="15" offset="1706" startLine="57" starttimestamp="1650324058609" timestamp="2987882">
    <text><![CDATA[originalMessage]]></text>
  </DocumentChange>
  <DocumentChange __id="862" _type="Insert" date="Mon Apr 18 20:10:46 EDT 2022" docASTNodeCount="319" docActiveCodeLength="2229" docExpressionCount="208" docLength="2526" length="26" offset="1706" repeat="5" starttimestamp="1650324058609" timestamp="2987888" timestamp2="2987898">
    <text><![CDATA[((Object) originalMessage)]]></text>
  </DocumentChange>
  <DocumentChange __id="870" _type="Delete" date="Mon Apr 18 20:10:55 EDT 2022" docASTNodeCount="318" docActiveCodeLength="2223" docExpressionCount="207" docLength="2520" endLine="57" length="6" offset="1708" startLine="57" starttimestamp="1650324058609" timestamp="2996544">
    <text><![CDATA[Object]]></text>
  </DocumentChange>
  <DocumentChange __id="871" _type="Insert" date="Mon Apr 18 20:10:55 EDT 2022" docASTNodeCount="319" docActiveCodeLength="2229" docExpressionCount="208" docLength="2526" length="6" offset="1708" starttimestamp="1650324058609" timestamp="2996546">
    <text><![CDATA[Object]]></text>
  </DocumentChange>
  <DocumentChange __id="876" _type="Replace" date="Mon Apr 18 20:11:06 EDT 2022" docASTNodeCount="313" docActiveCodeLength="2194" docExpressionCount="203" docLength="2491" endLine="57" insertionLength="1" int_docASTNodeCount="312" int_docActiveCodeLength="2193" int_docExpressionCount="202" int_docLength="2490" length="36" offset="1706" startLine="57" starttimestamp="1650324058609" timestamp="3007756">
    <deletedText><![CDATA[((Object) originalMessage).deepCopy(]]></deletedText>
    <insertedText><![CDATA[o]]></insertedText>
  </DocumentChange>
  <Command __id="874" _type="SelectTextCommand" caretOffset="1225" date="Mon Apr 18 20:11:06 EDT 2022" end="1261" start="1225" starttimestamp="1650324058609" timestamp="3007444" />
  <Command __id="877" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3007764" timestamp2="3007764">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="879" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3007943" timestamp2="3007943">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="881" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3008051" timestamp2="3008051">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="883" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3008154" timestamp2="3008154">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="885" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3008241" timestamp2="3008241">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="887" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3008291" timestamp2="3008291">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="889" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3008370" timestamp2="3008370">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="891" _type="InsertStringCommand" date="Mon Apr 18 20:11:07 EDT 2022" starttimestamp="1650324058609" timestamp="3008493" timestamp2="3008493">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="893" _type="InsertStringCommand" date="Mon Apr 18 20:11:07 EDT 2022" starttimestamp="1650324058609" timestamp="3008721" timestamp2="3008721">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="895" _type="InsertStringCommand" date="Mon Apr 18 20:11:07 EDT 2022" starttimestamp="1650324058609" timestamp="3008914" timestamp2="3008914">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="897" _type="InsertStringCommand" date="Mon Apr 18 20:11:07 EDT 2022" starttimestamp="1650324058609" timestamp="3008994" timestamp2="3008994">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="899" _type="InsertStringCommand" date="Mon Apr 18 20:11:07 EDT 2022" starttimestamp="1650324058609" timestamp="3009283" timestamp2="3009283">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="901" _type="InsertStringCommand" date="Mon Apr 18 20:11:08 EDT 2022" starttimestamp="1650324058609" timestamp="3009425" timestamp2="3009425">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="903" _type="InsertStringCommand" date="Mon Apr 18 20:11:08 EDT 2022" starttimestamp="1650324058609" timestamp="3009559" timestamp2="3009559">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="905" _type="InsertStringCommand" date="Mon Apr 18 20:11:08 EDT 2022" starttimestamp="1650324058609" timestamp="3009696" timestamp2="3009696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="907" _type="InsertStringCommand" date="Mon Apr 18 20:11:08 EDT 2022" starttimestamp="1650324058609" timestamp="3009910" timestamp2="3009910">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="908" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 18 20:11:08 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="3009910" />
  <Command __id="910" _type="PasteCommand" date="Mon Apr 18 20:11:09 EDT 2022" starttimestamp="1650324058609" timestamp="3010495" />
  <Command __id="911" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:11:09 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="3010521" />
  <Command __id="914" _type="PauseCommand" date="Mon Apr 18 20:11:10 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3011915">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1394]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="913" _type="InsertStringCommand" date="Mon Apr 18 20:11:10 EDT 2022" starttimestamp="1650324058609" timestamp="3011915" timestamp2="3011915">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="916" _type="PauseCommand" date="Mon Apr 18 20:11:12 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3013428">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1513]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="915" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:11:12 EDT 2022" starttimestamp="1650324058609" timestamp="3013428" />
  <Command __id="917" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:11:12 EDT 2022" starttimestamp="1650324058609" timestamp="3013500" />
  <Command __id="918" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:11:12 EDT 2022" starttimestamp="1650324058609" timestamp="3013545" />
  <DocumentChange __id="878" _type="Insert" date="Mon Apr 18 20:11:06 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2224" docExpressionCount="205" docLength="2521" length="30" offset="1707" repeat="17" starttimestamp="1650324058609" timestamp="3007932" timestamp2="3011895">
    <text><![CDATA[riginalMessage.deepDuplicate()]]></text>
  </DocumentChange>
  <Command __id="920" _type="PauseCommand" date="Mon Apr 18 20:11:23 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="3024443">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10898]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="921" _type="SelectTextCommand" caretOffset="535" date="Mon Apr 18 20:11:23 EDT 2022" end="535" start="448" starttimestamp="1650324058609" timestamp="3024589" />
  <Command __id="923" _type="PauseCommand" date="Mon Apr 18 20:11:24 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3025690">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1101]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="922" _type="MoveCaretCommand" caretOffset="600" date="Mon Apr 18 20:11:24 EDT 2022" docOffset="2086" starttimestamp="1650324058609" timestamp="3025690" />
  <Command __id="926" _type="PauseCommand" date="Mon Apr 18 20:11:25 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3026693">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1003]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="925" _type="ShellCommand" date="Mon Apr 18 20:11:25 EDT 2022" starttimestamp="1650324058609" timestamp="3026693" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="928" _type="PauseCommand" date="Mon Apr 18 20:11:26 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3027752">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1059]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="927" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:11:26 EDT 2022" forward="false" matchWord="false" offset="2086" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="3027752" wrapSearch="false">
    <searchString><![CDATA[deep]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="930" _type="PauseCommand" date="Mon Apr 18 20:11:29 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3030694">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2942]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="929" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:11:29 EDT 2022" forward="true" matchWord="false" offset="2086" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="3030694" wrapSearch="false">
    <searchString><![CDATA[deep]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="932" _type="PauseCommand" date="Mon Apr 18 20:11:32 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3034109">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3415]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="931" _type="ShellCommand" date="Mon Apr 18 20:11:32 EDT 2022" starttimestamp="1650324058609" timestamp="3034109" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="934" _type="PauseCommand" date="Mon Apr 18 20:11:34 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3035844">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1735]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="933" _type="SelectTextCommand" caretOffset="2556" date="Mon Apr 18 20:11:34 EDT 2022" end="2600" start="2556" starttimestamp="1650324058609" timestamp="3035844" />
  <Command __id="935" _type="CopyCommand" date="Mon Apr 18 20:11:34 EDT 2022" starttimestamp="1650324058609" timestamp="3036009" />
  <Command __id="919" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:11:23 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" projectName="A6" starttimestamp="1650324058609" timestamp="3024443">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="937" _type="PauseCommand" date="Mon Apr 18 20:11:36 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3037490">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1481]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="938" _type="MoveCaretCommand" caretOffset="1255" date="Mon Apr 18 20:11:36 EDT 2022" docOffset="1736" starttimestamp="1650324058609" timestamp="3037705" />
  <Command __id="940" _type="PauseCommand" date="Mon Apr 18 20:11:38 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3039748">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2043]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="939" _type="SelectTextCommand" caretOffset="1225" date="Mon Apr 18 20:11:38 EDT 2022" end="1258" start="1225" starttimestamp="1650324058609" timestamp="3039748" />
  <Command __id="946" _type="PasteCommand" date="Mon Apr 18 20:11:38 EDT 2022" starttimestamp="1650324058609" timestamp="3040219" />
  <Command __id="948" _type="PauseCommand" date="Mon Apr 18 20:11:41 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3043209">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2990]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="947" _type="SelectTextCommand" caretOffset="1259" date="Mon Apr 18 20:11:41 EDT 2022" end="1267" start="1259" starttimestamp="1650324058609" timestamp="3043209" />
  <Command __id="950" _type="InsertStringCommand" date="Mon Apr 18 20:11:42 EDT 2022" starttimestamp="1650324058609" timestamp="3043967" timestamp2="3043967">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="952" _type="InsertStringCommand" date="Mon Apr 18 20:11:42 EDT 2022" starttimestamp="1650324058609" timestamp="3044168" timestamp2="3044168">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="954" _type="InsertStringCommand" date="Mon Apr 18 20:11:42 EDT 2022" starttimestamp="1650324058609" timestamp="3044284" timestamp2="3044284">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="956" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3044395" timestamp2="3044395">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="958" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3044493" timestamp2="3044493">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="960" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3044525" timestamp2="3044525">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="962" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3044651" timestamp2="3044651">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="964" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3044780" timestamp2="3044780">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="966" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3045135" timestamp2="3045135">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="968" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3045311" timestamp2="3045311">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="970" _type="InsertStringCommand" date="Mon Apr 18 20:11:44 EDT 2022" starttimestamp="1650324058609" timestamp="3045403" timestamp2="3045403">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="972" _type="InsertStringCommand" date="Mon Apr 18 20:11:44 EDT 2022" starttimestamp="1650324058609" timestamp="3045730" timestamp2="3045730">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="974" _type="InsertStringCommand" date="Mon Apr 18 20:11:44 EDT 2022" starttimestamp="1650324058609" timestamp="3045877" timestamp2="3045877">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="976" _type="InsertStringCommand" date="Mon Apr 18 20:11:44 EDT 2022" starttimestamp="1650324058609" timestamp="3045967" timestamp2="3045967">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="978" _type="InsertStringCommand" date="Mon Apr 18 20:11:44 EDT 2022" starttimestamp="1650324058609" timestamp="3046052" timestamp2="3046052">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="980" _type="PauseCommand" date="Mon Apr 18 20:11:46 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3048168">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2116]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="979" _type="ShellCommand" date="Mon Apr 18 20:11:46 EDT 2022" starttimestamp="1650324058609" timestamp="3048168" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="981" _type="ShellCommand" date="Mon Apr 18 20:11:46 EDT 2022" starttimestamp="1650324058609" timestamp="3048305" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="983" _type="PauseCommand" date="Mon Apr 18 20:11:50 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3051656">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3351]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="982" _type="MoveCaretCommand" caretOffset="1202" date="Mon Apr 18 20:11:50 EDT 2022" docOffset="1729" starttimestamp="1650324058609" timestamp="3051656" />
  <Command __id="984" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:11:50 EDT 2022" starttimestamp="1650324058609" timestamp="3052248" />
  <Command __id="985" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:11:50 EDT 2022" starttimestamp="1650324058609" timestamp="3052340" />
  <Command __id="986" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:11:50 EDT 2022" starttimestamp="1650324058609" timestamp="3052387" />
  <Command __id="988" _type="PauseCommand" date="Mon Apr 18 20:11:52 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3054182">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1795]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="987" _type="ShellCommand" date="Mon Apr 18 20:11:52 EDT 2022" starttimestamp="1650324058609" timestamp="3054182" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="990" _type="PauseCommand" date="Mon Apr 18 20:11:54 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3055567">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1385]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="989" _type="ShellCommand" date="Mon Apr 18 20:11:54 EDT 2022" starttimestamp="1650324058609" timestamp="3055567" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="991" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:11:54 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3055795" type="Debug" />
  <Command __id="992" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:11:54 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3055795" type="Debug" />
  <Command __id="993" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:11:54 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="3055795" type="Run" />
  <Command __id="936" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:11:36 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2224" docExpressionCount="205" docLength="2521" projectName="A6" starttimestamp="1650324058609" timestamp="3037490">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.NIOManagerPrintServer;¶import server.remote.ServerRemoteObjectNIO;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶	¶	final ServerRemoteObjectNIO server;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ServerReadThread (final ServerRemoteObjectNIO aServer) {¶		server = aServer;¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();¶			List<SocketChannel> socketList = server.getSocketList();¶			SocketChannel currentSocket = server.getSocketChannel();¶			¶			"), Diff(INSERT,"¶			"), Diff(EQUAL,"		¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			"), Diff(INSERT,"¶			/// To pass the autograder¶			ByteBuffer copy = originalMessage.deepDuplicate());¶			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);¶			boundedBufferFake.add(originalMessage);¶			///¶			"), Diff(EQUAL,"// Echo recieve message to all clients (except original message sender)¶			¶			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());¶			¶			for (SocketChannel socket : socketList) {¶				if (!socket.equals(currentSocket)) {¶					¶					nioManager.write(socket, originalMessage, server);¶				}¶			}¶		¶		}¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.NIOManagerPrintServer;
import server.remote.ServerRemoteObjectNIO;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.communication.CommunicationStateNames;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{
	
	final ServerRemoteObjectNIO server;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ServerReadThread (final ServerRemoteObjectNIO aServer) {
		server = aServer;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();
			List<SocketChannel> socketList = server.getSocketList();
			SocketChannel currentSocket = server.getSocketChannel();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			
			/// To pass the autograder
			ByteBuffer copy = originalMessage.deepDuplicate());
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///
			// Echo recieve message to all clients (except original message sender)
			
			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());
			
			for (SocketChannel socket : socketList) {
				if (!socket.equals(currentSocket)) {
					
					nioManager.write(socket, originalMessage, server);
				}
			}
		
		}
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="941" _type="Replace" date="Mon Apr 18 20:11:38 EDT 2022" docASTNodeCount="316" docActiveCodeLength="2235" docExpressionCount="206" docLength="2532" endLine="57" insertionLength="44" int_docASTNodeCount="310" int_docActiveCodeLength="2191" int_docExpressionCount="205" int_docLength="2488" length="33" offset="1706" startLine="57" starttimestamp="1650324058609" timestamp="3040011">
    <deletedText><![CDATA[originalMessage.deepDuplicate());]]></deletedText>
    <insertedText><![CDATA[MiscAssignmentUtils.deepDuplicate(aMessage);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="942" _type="Delete" date="Mon Apr 18 20:11:38 EDT 2022" docASTNodeCount="316" docActiveCodeLength="2231" docExpressionCount="206" docLength="2528" endLine="7" length="4" offset="164" startLine="5" starttimestamp="1650324058609" timestamp="3040157">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="943" _type="Insert" date="Mon Apr 18 20:11:38 EDT 2022" docASTNodeCount="322" docActiveCodeLength="2281" docExpressionCount="211" docLength="2578" length="50" offset="164" repeat="3" starttimestamp="1650324058609" timestamp="3040157" timestamp2="3040165">
    <text><![CDATA[

import assignments.util.MiscAssignmentUtils;
]]></text>
  </DocumentChange>
  <DocumentChange __id="949" _type="Replace" date="Mon Apr 18 20:11:42 EDT 2022" docASTNodeCount="322" docActiveCodeLength="2274" docExpressionCount="211" docLength="2571" endLine="58" insertionLength="1" int_docASTNodeCount="321" int_docActiveCodeLength="2273" int_docExpressionCount="210" int_docLength="2570" length="8" offset="1786" startLine="58" starttimestamp="1650324058609" timestamp="3043959">
    <deletedText><![CDATA[aMessage]]></deletedText>
    <insertedText><![CDATA[o]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="951" _type="Insert" date="Mon Apr 18 20:11:42 EDT 2022" docASTNodeCount="322" docActiveCodeLength="2288" docExpressionCount="211" docLength="2585" length="14" offset="1787" repeat="14" starttimestamp="1650324058609" timestamp="3044160" timestamp2="3046044">
    <text><![CDATA[riginalMessage]]></text>
  </DocumentChange>
  <Command __id="995" _type="PauseCommand" date="Mon Apr 18 20:11:56 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3057592">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1797]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="999" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:12:01 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="3062926" type="Run" />
  <Command __id="1001" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:12:01 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="3062927" type="Run" />
  <Command __id="1002" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:12:01 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3063134" type="Run" />
  <Command __id="1003" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:12:01 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3063167" type="Run" />
  <Command __id="1004" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:12:01 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3063172" type="Run" />
  <Command __id="1006" _type="PauseCommand" date="Mon Apr 18 20:12:05 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3066771">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3599]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1007" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:12:07 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3068887" type="Run" />
  <Command __id="1009" _type="ConsoleOutput" date="Mon Apr 18 20:12:07 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3068993" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 20:12:07 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@31c9edf8 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 20:12:07 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1011" _type="PauseCommand" date="Mon Apr 18 20:12:11 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3072946">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3953]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1010" _type="ConsoleOutput" date="Mon Apr 18 20:12:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3072946" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 20:12:11 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 20:12:11 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Mon Apr 18 20:12:"), Diff(DELETE,"07"), Diff(INSERT,"11 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 18 20:12:11"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1012" _type="ConsoleOutput" date="Mon Apr 18 20:12:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3073040" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 20:12:11 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 20:12:11 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 20:12:11 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1014" _type="PauseCommand" date="Mon Apr 18 20:12:14 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3075499">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2459]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1013" _type="ConsoleOutput" date="Mon Apr 18 20:12:14 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3075499" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 20:12:14 EDT 2022
Generating checks:Mon Apr 18 20:12:14 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method call"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 20:12:14 EDT 2022¶Generating check"), Diff(EQUAL,"s:Mon Apr 18 20:12:1"), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1015" _type="ConsoleOutput" date="Mon Apr 18 20:12:14 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3075612" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating checks:Mon Apr 18 20:12:14 EDT 2022
Generating externals:Mon Apr 18 20:12:14 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass"), Diff(INSERT,"Generating"), Diff(EQUAL," checks:Mon Apr 18 20:12:14 EDT 2022¶Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 20:12:14 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1017" _type="PauseCommand" date="Mon Apr 18 20:12:15 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3076885">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1273]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1016" _type="ConsoleOutput" date="Mon Apr 18 20:12:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3076885" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 20:12:15 EDT 2022
Test execution time (ms):7942
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 20:12:1"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating externals:Mon Apr 18 20:12:14 EDT 202"), Diff(INSERT,"Test execution time (ms):794"), Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="1018" _type="ConsoleOutput" date="Mon Apr 18 20:12:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3076974" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):41
Test execution time (ms):16
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 20:12:15 EDT 2022"), Diff(INSERT,"Test execution time (ms):41"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"7942"), Diff(INSERT,"16"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1019" _type="ConsoleOutput" date="Mon Apr 18 20:12:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3077039" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (187)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (94)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (90)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"41¶Test execution time (ms):16"), Diff(INSERT,"13¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (90)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1020" _type="ConsoleOutput" date="Mon Apr 18 20:12:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3077097" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):57
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"13¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (90)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)"), Diff(INSERT,"57"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1022" _type="PauseCommand" date="Mon Apr 18 20:12:19 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3081329">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4232]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1051" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:13:05 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3126590" type="Run" />
  <Command __id="1053" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:13:05 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3126592" type="Run" />
  <Command __id="1055" _type="PauseCommand" date="Mon Apr 18 20:13:17 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="3139348">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[12756]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1130" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:17:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3403754" type="Run" />
  <Command __id="1132" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:17:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3403759" type="Run" />
  <Command __id="1134" _type="PauseCommand" date="Mon Apr 18 20:17:57 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="3418836">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[15077]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1133" _type="ConsoleOutput" date="Mon Apr 18 20:17:57 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3418836" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22592
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"87"), Diff(INSERT,"92"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1136" _type="PauseCommand" date="Mon Apr 18 20:20:50 EDT 2022" range="2m-5m" starttimestamp="1650324058609" timestamp="3591399">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[172563]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1135" _type="ConsoleOutput" date="Mon Apr 18 20:20:50 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3591399" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@c4115ad . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22592"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@c4115ad . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1138" _type="PauseCommand" date="Mon Apr 18 20:20:58 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="3600106">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8707]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="1137" _type="BalloonCommand" date="Mon Apr 18 20:20:58 EDT 2022" message="*******************************************
Worked 11 minutes(fixed)/28 minutes(context based) from
Mon Apr 18 19:20:59 EDT 2022 to Mon Apr 18 20:20:50 EDT 2022
Edited 1 Projects: 
	A6
Edited 2 Files: 
	C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java
	C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java
Number of insert: 362
Number of delete: 301
" starttimestamp="1650324058609" timestamp="3600106">
    <fineGrainedWorkTime><![CDATA[28]]></fineGrainedWorkTime>
    <insert><![CDATA[362]]></insert>
    <startTime><![CDATA[1650324059181]]></startTime>
    <endTime><![CDATA[1650327650008]]></endTime>
    <workTime><![CDATA[11]]></workTime>
    <delete><![CDATA[301]]></delete>
  </Command>
  <Command __id="1140" _type="PauseCommand" date="Mon Apr 18 20:23:11 EDT 2022" range="2m-5m" starttimestamp="1650324058609" timestamp="3732771">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[132665]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1139" _type="ShellCommand" date="Mon Apr 18 20:23:11 EDT 2022" starttimestamp="1650324058609" timestamp="3732771" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1141" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:23:12 EDT 2022" starttimestamp="1650324058609" timestamp="3733579" />
  <Command __id="1142" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:23:12 EDT 2022" starttimestamp="1650324058609" timestamp="3733590" />
  <Command __id="1143" _type="ShellCommand" date="Mon Apr 18 20:23:12 EDT 2022" starttimestamp="1650324058609" timestamp="3734219" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1145" _type="PauseCommand" date="Mon Apr 18 20:23:17 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3738475">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4256]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1144" _type="ConsoleOutput" date="Mon Apr 18 20:23:17 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3738475" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@69b180e8 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s2"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,".assignment6."), Diff(DELETE,"testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@c4115ad"), Diff(INSERT,"style.A6InterfaceAsType@69b180e8"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="1147" _type="PauseCommand" date="Mon Apr 18 20:23:18 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3739751">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1276]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1146" _type="ShellCommand" date="Mon Apr 18 20:23:18 EDT 2022" starttimestamp="1650324058609" timestamp="3739751" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1149" _type="PauseCommand" date="Mon Apr 18 20:23:26 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="3748302">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8551]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1148" _type="ShellCommand" date="Mon Apr 18 20:23:26 EDT 2022" starttimestamp="1650324058609" timestamp="3748302" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1151" _type="PauseCommand" date="Mon Apr 18 20:23:29 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3750730">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2428]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1150" _type="ConsoleOutput" date="Mon Apr 18 20:23:29 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3750730" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@1c7e624 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6"), Diff(DELETE,"InterfaceAsType@69b180e8"), Diff(INSERT,"PublicMethodsOverride@1c7e624"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="1153" _type="PauseCommand" date="Mon Apr 18 20:23:32 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3753669">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2939]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1152" _type="ConsoleOutput" date="Mon Apr 18 20:23:32 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3753669" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6AccessModifiersMatched@6cb38deb . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6"), Diff(DELETE,"PublicMethodsOverride@1c7e624"), Diff(INSERT,"AccessModifiersMatched@6cb38deb"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="1155" _type="PauseCommand" date="Mon Apr 18 20:27:44 EDT 2022" range="2m-5m" starttimestamp="1650324058609" timestamp="4005503">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[251833]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1156" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Apr 18 20:27:51 EDT 2022" starttimestamp="1650324058609" timestamp="4012518" />
  <Command __id="1158" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:27:51 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4012614" type="Debug" />
  <Command __id="1159" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:27:51 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4012614" type="Debug" />
  <Command __id="1160" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:27:51 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="4012614" type="Run" />
  <Command __id="1162" _type="PauseCommand" date="Mon Apr 18 20:27:59 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="4020425">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[7811]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1161" _type="ShellCommand" date="Mon Apr 18 20:27:59 EDT 2022" starttimestamp="1650324058609" timestamp="4020425" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1164" _type="PauseCommand" date="Mon Apr 18 20:28:19 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="4040455">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[20028]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1203" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:28:44 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4066242" type="Run" />
  <Command __id="1205" _type="ConsoleOutput" date="Mon Apr 18 20:28:44 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4066387" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.0019055279098472155 (Opened)
Client registered GIPC
com.sun.proxy.$Proxy1@369ecf8f
[com.sun.proxy.$Proxy1@369ecf8f]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIO SERVER PORT: 9000¶Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:"), Diff(INSERT,"Server0<-->"), Diff(EQUAL,"Generic Client:0."), Diff(DELETE,"22922842800790855¶New Client connected to server!!!"), Diff(INSERT,"0019055279098472155 (Opened)¶Client registered GIPC¶com.sun.proxy.$Proxy1@369ecf8f¶[com.sun.proxy.$Proxy1@369ecf8f]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1206" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:28:45 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4066659" type="Run" />
  <Command __id="1207" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:28:45 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4066726" type="Run" />
  <Command __id="1208" _type="ConsoleOutput" date="Mon Apr 18 20:28:45 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4066759" type="ConsoleOutput">
    <outputString><![CDATA[WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.0019055279098472155 (Opened)¶Client registered GIPC¶com.sun.proxy.$Proxy1@369ecf8f¶[com.sun.proxy.$Proxy1@369ecf8f]"), Diff(INSERT,"WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1209" _type="ConsoleOutput" date="Mon Apr 18 20:28:45 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4066834" type="ConsoleOutput">
    <outputString><![CDATA[SERVER looked up in RMI registry!!
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER"), Diff(INSERT,"SERVER looked up in RMI registry!!"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1210" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:28:45 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4066857" type="Run" />
  <Command __id="1211" _type="ConsoleOutput" date="Mon Apr 18 20:28:45 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4067084" type="ConsoleOutput">
    <outputString><![CDATA[Client registered RMI
Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51960](remote),objID:[-2d57367d:1803f38bd8b:-7ffe, -7644716798520206369]]]]]
[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51960](remote),objID:[-2d57367d:1803f38bd8b:-7ffe, -7644716798520206369]]]]]]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"SERVER looked up in RMI registry!!"), Diff(INSERT,"Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51960](remote),objID:[-2d57367d:1803f38bd8b:-7ffe, -7644716798520206369]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51960](remote),objID:[-2d57367d:1803f38bd8b:-7ffe, -7644716798520206369]]]]]]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1212" _type="ConsoleOutput" date="Mon Apr 18 20:28:45 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4067094" type="ConsoleOutput">
    <outputString><![CDATA[added server as a property change listener of client
Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51960](remote),objID:[-2d57367d:1803f38bd8b:-7ffe, -7644716798520206369]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51960](remote),objID:[-2d57367d:1803f38bd8b:-7ffe, -7644716798520206369]]]]]]"), Diff(INSERT,"added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1213" _type="ShellCommand" date="Mon Apr 18 20:28:46 EDT 2022" starttimestamp="1650324058609" timestamp="4067423" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1215" _type="PauseCommand" date="Mon Apr 18 20:28:47 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="4069102">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1679]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1214" _type="ConsoleOutput" date="Mon Apr 18 20:28:47 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4069102" type="ConsoleOutput">
    <outputString><![CDATA[Server0<-->Generic Client:0.22922842800790855 (Opened)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Server0<-->Generic Client:0.22922842800790855 (Opened)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1216" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:28:47 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4069374" type="Run" />
  <Command __id="1217" _type="ConsoleOutput" date="Mon Apr 18 20:28:47 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4069380" type="ConsoleOutput">
    <outputString><![CDATA[WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.22922842800790855 (Opened)"), Diff(INSERT,"WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1218" _type="ConsoleOutput" date="Mon Apr 18 20:28:47 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4069383" type="ConsoleOutput">
    <outputString><![CDATA[Client registered GIPC
com.sun.proxy.$Proxy1@5b174b21
[com.sun.proxy.$Proxy1@369ecf8f, com.sun.proxy.$Proxy1@5b174b21]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"WE ARE LOOKING UP server from RMI REGISTRY HERE: SERVER"), Diff(INSERT,"Client registered GIPC¶com.sun.proxy.$Proxy1@5b174b21¶[com.sun.proxy.$Proxy1@369ecf8f, com.sun.proxy.$Proxy1@5b174b21]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1219" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:28:48 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4069442" type="Run" />
  <Command __id="1220" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:28:48 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4069526" type="Run" />
  <Command __id="1221" _type="ConsoleOutput" date="Mon Apr 18 20:28:48 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4069716" type="ConsoleOutput">
    <outputString><![CDATA[SERVER looked up in RMI registry!!
added server as a property change listener of client
Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered GIPC¶com.sun.proxy.$Proxy1@5b174b21¶[com.sun.proxy.$Proxy1@369ecf8f, com.sun.proxy.$Proxy1@5b174b21]"), Diff(INSERT,"SERVER looked up in RMI registry!!¶added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1222" _type="ConsoleOutput" date="Mon Apr 18 20:28:48 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4069722" type="ConsoleOutput">
    <outputString><![CDATA[Client registered RMI
Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51966](remote),objID:[-256f3cc:1803f38c90e:-7ffe, 1071650774616915393]]]]]
[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51960](remote),objID:[-2d57367d:1803f38bd8b:-7ffe, -7644716798520206369]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51966](remote),objID:[-256f3cc:1803f38c90e:-7ffe, 1071650774616915393]]]]]]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"SERVER looked up in RMI registry!!¶added server as a property change listener of client¶Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51966](remote),objID:[-256f3cc:1803f38c90e:-7ffe, 1071650774616915393]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51960](remote),objID:[-2d57367d:1803f38bd8b:-7ffe, -7644716798520206369]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51966](remote),objID:[-256f3cc:1803f38c90e:-7ffe, 1071650774616915393]]]]]]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1223" _type="ShellCommand" date="Mon Apr 18 20:28:48 EDT 2022" starttimestamp="1650324058609" timestamp="4069959" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1225" _type="PauseCommand" date="Mon Apr 18 20:28:57 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="4078459">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8500]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1224" _type="ConsoleInput" date="Mon Apr 18 20:28:57 EDT 2022" starttimestamp="1650324058609" timestamp="4078459" type="Exception">
    <outputString><![CDATA[b trueI***@4904728202400 {main}(AddedPropertyChangeListener) EvtSrc(AHalloweenCommandProcessor)  
b true
]]></outputString>
  </Command>
  <Command __id="1226" _type="ConsoleOutput" date="Mon Apr 18 20:28:57 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4078511" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51966](remote),objID:[-256f3cc:1803f38c90e:-7ffe, 1071650774616915393]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51960](remote),objID:[-2d57367d:1803f38bd8b:-7ffe, -7644716798520206369]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:51966](remote),objID:[-256f3cc:1803f38c90e:-7ffe, 1071650774616915393]]]]]]"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1228" _type="PauseCommand" date="Mon Apr 18 20:28:59 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4080907">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2396]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1232" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:29:03 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4084552" type="Run" />
  <Command __id="1235" _type="PauseCommand" date="Mon Apr 18 20:29:12 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="4093517">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[8965]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1241" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:29:18 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4099427" type="Run" />
  <Command __id="1243" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:29:18 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4099474" type="Run" />
  <Command __id="1245" _type="PauseCommand" date="Mon Apr 18 20:29:22 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4104038">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4564]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1254" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:29:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4119159" type="Run" />
  <Command __id="1256" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:29:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4119160" type="Run" />
  <Command __id="1258" _type="PauseCommand" date="Mon Apr 18 20:30:10 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="4151931">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[32771]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1257" _type="ShellCommand" date="Mon Apr 18 20:30:10 EDT 2022" starttimestamp="1650324058609" timestamp="4151931" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1260" _type="PauseCommand" date="Mon Apr 18 20:30:22 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="4164081">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12150]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1259" _type="ShellCommand" date="Mon Apr 18 20:30:22 EDT 2022" starttimestamp="1650324058609" timestamp="4164081" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="994" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:11:56 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" projectName="A6" starttimestamp="1650324058609" timestamp="3057592">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\checks\Checks.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package checks;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp533s22.assignment6.S22Assignment6Suite;
import trace.grader.basics.GraderBasicsTraceUtility;
import util.trace.Tracer;

public class Checks {
	public static void main(final String[] args) {
		Tracer.showInfo(true);
		GraderBasicsTraceUtility.setBufferTracedMessages(false);
		final int traces = 8000;
		Tracer.setMaxTraces(traces);
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		
		GraderBasicsTraceUtility.setBufferTracedMessages(false);
		// Change this number if a test trace gets longer than 600 and is clipped
		
		final int length = 600;
		GraderBasicsTraceUtility.setMaxPrintedTraces(length);
		// Change this number if all traces together are longer than 600
		
		final int time = 4000;
		GraderBasicsTraceUtility.setMaxTraces(time);
		// Change this number if your process times out prematurely
		
		final int timer = 50;
		BasicProjectExecution.setProcessTimeOut(timer);
		// You need to always call such a method
		S22Assignment6Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="1262" _type="PauseCommand" date="Mon Apr 18 20:30:26 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4167741">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3660]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1263" _type="MoveCaretCommand" caretOffset="1202" date="Mon Apr 18 20:30:26 EDT 2022" docOffset="1729" starttimestamp="1650324058609" timestamp="4168052" />
  <Command __id="1261" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:30:26 EDT 2022" docASTNodeCount="322" docActiveCodeLength="2288" docExpressionCount="211" docLength="2585" projectName="A6" starttimestamp="1650324058609" timestamp="4167741">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶"), Diff(INSERT,"import assignments.util.MiscAssignmentUtils;¶"), Diff(EQUAL,"import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.NIOManagerPrintServer;¶import server.remote.ServerRemoteObjectNIO;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶	¶	final ServerRemoteObjectNIO server;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ServerReadThread (final ServerRemoteObjectNIO aServer) {¶		server = aServer;¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();¶			List<SocketChannel> socketList = server.getSocketList();¶			SocketChannel currentSocket = server.getSocketChannel();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			¶			/// To pass the autograder¶			ByteBuffer copy = "), Diff(DELETE,"originalMessage.deepDuplicate()"), Diff(INSERT,"MiscAssignmentUtils.deepDuplicate(originalMessage"), Diff(EQUAL,");¶			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);¶			boundedBufferFake.add(originalMessage);¶			///¶			// Echo recieve message to all clients (except original message sender)¶			¶			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());¶			¶			for (SocketChannel socket : socketList) {¶				if (!socket.equals(currentSocket)) {¶					¶					nioManager.write(socket, originalMessage, server);¶				}¶			}¶		¶		}¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.NIOManagerPrintServer;
import server.remote.ServerRemoteObjectNIO;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.communication.CommunicationStateNames;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{
	
	final ServerRemoteObjectNIO server;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ServerReadThread (final ServerRemoteObjectNIO aServer) {
		server = aServer;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();
			List<SocketChannel> socketList = server.getSocketList();
			SocketChannel currentSocket = server.getSocketChannel();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			
			/// To pass the autograder
			ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(originalMessage);
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///
			// Echo recieve message to all clients (except original message sender)
			
			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());
			
			for (SocketChannel socket : socketList) {
				if (!socket.equals(currentSocket)) {
					
					nioManager.write(socket, originalMessage, server);
				}
			}
		
		}
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}


}
]]></snapshot>
  </Command>
  <Command __id="1265" _type="PauseCommand" date="Mon Apr 18 20:30:35 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="4176736">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8684]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1266" _type="MoveCaretCommand" caretOffset="8912" date="Mon Apr 18 20:30:35 EDT 2022" docOffset="10603" starttimestamp="1650324058609" timestamp="4177120" />
  <Command __id="1264" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:30:35 EDT 2022" docASTNodeCount="1310" docActiveCodeLength="9564" docExpressionCount="920" docLength="10769" projectName="A6" starttimestamp="1650324058609" timestamp="4176736">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import client.ClientRemoteObject;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	protected static String SERVER_NAME;¶	private static int NIO_SERVER_PORT;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		¶¶		// Make sure you set this property when processing args¶		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶		¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);¶		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);¶		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);¶		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);¶		¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			System.out.println("Broadcasting IPC mechanism: "+mechanism);¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism, aProposalNumber);¶					System.out.println("SEND NEW MECHANISM TO A CLIENT FROM SERVER");¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶		System.out.println("ADDED CONNECTION LISTENER");¶	}¶¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			int aProposalNumber = -1;¶			ClientRemoteInterfaceGIPC fake = new ClientRemoteObject();¶			broadcastIPCMechanism(mechanism, fake, aProposalNumber , this.broadcastMetaState);¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1268" _type="PauseCommand" date="Mon Apr 18 20:30:58 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="4200003">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[22883]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1269" _type="MoveCaretCommand" caretOffset="1517" date="Mon Apr 18 20:30:58 EDT 2022" docOffset="2836" starttimestamp="1650324058609" timestamp="4200292" />
  <Command __id="1271" _type="PauseCommand" date="Mon Apr 18 20:31:22 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="4224207">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23915]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1270" _type="SelectTextCommand" caretOffset="2637" date="Mon Apr 18 20:31:22 EDT 2022" end="2822" start="2637" starttimestamp="1650324058609" timestamp="4224207" />
  <Command __id="1272" _type="SelectTextCommand" caretOffset="2637" date="Mon Apr 18 20:31:22 EDT 2022" end="2822" start="2637" starttimestamp="1650324058609" timestamp="4224207" />
  <Command __id="1273" _type="CopyCommand" date="Mon Apr 18 20:31:23 EDT 2022" starttimestamp="1650324058609" timestamp="4224960" />
  <Command __id="1267" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:30:58 EDT 2022" docASTNodeCount="719" docActiveCodeLength="5117" docExpressionCount="520" docLength="5504" projectName="A6" starttimestamp="1650324058609" timestamp="4200003">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.exampleServerReadThread;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶¶public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	@Override¶	protected void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("COMMAND IN SERVER: "+ aMessageString);¶		¶		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1275" _type="PauseCommand" date="Mon Apr 18 20:31:25 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4227066">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2106]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1276" _type="MoveCaretCommand" caretOffset="1202" date="Mon Apr 18 20:31:25 EDT 2022" docOffset="1729" starttimestamp="1650324058609" timestamp="4227263" />
  <Command __id="1278" _type="PauseCommand" date="Mon Apr 18 20:31:27 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="4229104">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1841]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1277" _type="MoveCaretCommand" caretOffset="1699" date="Mon Apr 18 20:31:27 EDT 2022" docOffset="2226" starttimestamp="1650324058609" timestamp="4229104" />
  <Command __id="1280" _type="InsertStringCommand" date="Mon Apr 18 20:31:28 EDT 2022" starttimestamp="1650324058609" timestamp="4229872" timestamp2="4229872">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1286" _type="PasteCommand" date="Mon Apr 18 20:31:28 EDT 2022" starttimestamp="1650324058609" timestamp="4230210" />
  <Command __id="1287" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:31:29 EDT 2022" starttimestamp="1650324058609" timestamp="4231036" />
  <Command __id="1288" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:31:29 EDT 2022" starttimestamp="1650324058609" timestamp="4231131" />
  <Command __id="1289" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:31:29 EDT 2022" starttimestamp="1650324058609" timestamp="4231191" />
  <Command __id="1290" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:31:30 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4232085" type="Run" />
  <Command __id="1292" _type="PauseCommand" date="Mon Apr 18 20:31:33 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4234581">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2496]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1291" _type="MoveCaretCommand" caretOffset="1749" date="Mon Apr 18 20:31:33 EDT 2022" docOffset="2407" starttimestamp="1650324058609" timestamp="4234581" />
  <Command __id="1274" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:31:25 EDT 2022" docASTNodeCount="322" docActiveCodeLength="2288" docExpressionCount="211" docLength="2585" projectName="A6" starttimestamp="1650324058609" timestamp="4227066">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.NIOManagerPrintServer;¶import server.remote.ServerRemoteObjectNIO;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶	¶	final ServerRemoteObjectNIO server;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ServerReadThread (final ServerRemoteObjectNIO aServer) {¶		server = aServer;¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();¶			List<SocketChannel> socketList = server.getSocketList();¶			SocketChannel currentSocket = server.getSocketChannel();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			¶			/// To pass the autograder¶			ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(originalMessage);¶			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);¶			boundedBufferFake.add(originalMessage);¶			///¶			// Echo recieve message to all clients (except original message sender)¶			¶			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());¶			¶			for (SocketChannel socket : socketList) {¶				if (!socket.equals(currentSocket)) {¶					¶					nioManager.write(socket, originalMessage, server);¶				}¶			}¶		¶		}¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1279" _type="Insert" date="Mon Apr 18 20:31:28 EDT 2022" docASTNodeCount="322" docActiveCodeLength="2295" docExpressionCount="211" docLength="2592" length="7" offset="2226" starttimestamp="1650324058609" timestamp="4229856">
    <text><![CDATA[
					]]></text>
  </DocumentChange>
  <DocumentChange __id="1281" _type="Replace" date="Mon Apr 18 20:31:28 EDT 2022" docASTNodeCount="338" docActiveCodeLength="2483" docExpressionCount="225" docLength="2780" endLine="69" insertionLength="193" int_docASTNodeCount="322" int_docActiveCodeLength="2290" int_docExpressionCount="211" int_docLength="2587" length="5" offset="2228" startLine="69" starttimestamp="1650324058609" timestamp="4230091">
    <deletedText><![CDATA[					]]></deletedText>
    <insertedText><![CDATA[					RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
					ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1282" _type="Insert" date="Mon Apr 18 20:31:28 EDT 2022" docASTNodeCount="348" docActiveCodeLength="2547" docExpressionCount="234" docLength="2844" length="64" offset="504" repeat="2" starttimestamp="1650324058609" timestamp="4230168" timestamp2="4230168">
    <text><![CDATA[
import util.trace.port.consensus.RemoteProposeRequestReceived;]]></text>
  </DocumentChange>
  <DocumentChange __id="1284" _type="Insert" date="Mon Apr 18 20:31:28 EDT 2022" docASTNodeCount="358" docActiveCodeLength="2614" docExpressionCount="243" docLength="2911" length="67" offset="456" repeat="2" starttimestamp="1650324058609" timestamp="4230168" timestamp2="4230168">
    <text><![CDATA[
import util.trace.port.consensus.ProposalLearnedNotificationSent;]]></text>
  </DocumentChange>
  <Command __id="1294" _type="PauseCommand" date="Mon Apr 18 20:31:43 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="4244644">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10063]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1295" _type="InsertStringCommand" date="Mon Apr 18 20:31:43 EDT 2022" starttimestamp="1650324058609" timestamp="4244654" timestamp2="4244654">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1297" _type="InsertStringCommand" date="Mon Apr 18 20:31:43 EDT 2022" starttimestamp="1650324058609" timestamp="4244783" timestamp2="4244783">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1299" _type="InsertStringCommand" date="Mon Apr 18 20:31:43 EDT 2022" starttimestamp="1650324058609" timestamp="4244892" timestamp2="4244892">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1301" _type="InsertStringCommand" date="Mon Apr 18 20:31:43 EDT 2022" starttimestamp="1650324058609" timestamp="4245169" timestamp2="4245169">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1303" _type="InsertStringCommand" date="Mon Apr 18 20:31:43 EDT 2022" starttimestamp="1650324058609" timestamp="4245312" timestamp2="4245312">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1305" _type="InsertStringCommand" date="Mon Apr 18 20:31:44 EDT 2022" starttimestamp="1650324058609" timestamp="4245480" timestamp2="4245480">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1307" _type="InsertStringCommand" date="Mon Apr 18 20:31:44 EDT 2022" starttimestamp="1650324058609" timestamp="4245620" timestamp2="4245620">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1308" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 18 20:31:44 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="4245628" />
  <Command __id="1310" _type="PauseCommand" date="Mon Apr 18 20:31:46 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4247783">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2154]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1309" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:31:46 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="4247782" />
  <Command __id="1311" _type="MoveCaretCommand" caretOffset="1692" date="Mon Apr 18 20:31:46 EDT 2022" docOffset="2350" starttimestamp="1650324058609" timestamp="4247848" />
  <Command __id="1313" _type="PauseCommand" date="Mon Apr 18 20:31:50 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4252152">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4304]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1312" _type="ShellCommand" date="Mon Apr 18 20:31:50 EDT 2022" starttimestamp="1650324058609" timestamp="4252152" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1314" _type="ShellCommand" date="Mon Apr 18 20:31:50 EDT 2022" starttimestamp="1650324058609" timestamp="4252322" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1320" _type="SelectTextCommand" caretOffset="539" date="Mon Apr 18 20:31:51 EDT 2022" end="539" start="533" starttimestamp="1650324058609" timestamp="4252644" />
  <Command __id="1322" _type="PauseCommand" date="Mon Apr 18 20:31:53 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4255253">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2609]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1329" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:31:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4257548" type="Debug" />
  <Command __id="1331" _type="ProgramExecutionEvent" className="/A6/src/server/Server.java" date="Mon Apr 18 20:31:56 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="4257548" type="Run" />
  <Command __id="1332" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:31:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4257548" type="Debug" />
  <Command __id="1333" _type="ProgramExecutionEvent" className="/A6/src/server/Server.java" date="Mon Apr 18 20:31:56 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="4257548" type="Run" />
  <Command __id="1334" _type="ShellCommand" date="Mon Apr 18 20:31:56 EDT 2022" starttimestamp="1650324058609" timestamp="4257571" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1335" _type="ConsoleOutput" date="Mon Apr 18 20:31:56 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4257734" type="ConsoleOutput">
    <outputString><![CDATA[AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:51957 remote=localhost/127.0.0.1:10000]:An existing connection was forcibly closed by the remote host
AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:51944 remote=localhost/127.0.0.1:9000]:An existing connection was forcibly closed by the remote host
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"move 10 101¶CLIENT COMMAND: move 10 10¶IN RUN METHOD OF CLIENT READ THREAD¶move 10 101¶SERVER MESSAGE RECIEVED: move 10 10¶PROPERTY CHANGE"), Diff(INSERT,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:51957 remote=localhost/127.0.0.1:10000]:An existing connection was forcibly closed by the remote host¶AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:51944 remote=localhost/127.0.0.1:9000]:An existing connection was forcibly closed by the remote host"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1336" _type="ConsoleOutput" date="Mon Apr 18 20:31:56 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4257742" type="ConsoleOutput">
    <outputString><![CDATA[AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:51963 remote=localhost/127.0.0.1:10000]:An existing connection was forcibly closed by the remote host
AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:51955 remote=localhost/127.0.0.1:9000]:An existing connection was forcibly closed by the remote host
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:519"), Diff(DELETE,"57"), Diff(INSERT,"63"), Diff(EQUAL," remote=localhost/127.0.0.1:10000]:An existing connection was forcibly closed by the remote host¶AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:519"), Diff(DELETE,"44"), Diff(INSERT,"55"), Diff(EQUAL," remote=localhost/127.0.0.1:9000]:An existing connection was forcibly closed by the remote host¶")]]]></diff>
  </Command>
  <DocumentChange __id="1293" _type="Insert" date="Mon Apr 18 20:31:43 EDT 2022" docASTNodeCount="360" docActiveCodeLength="2621" docExpressionCount="245" docLength="2918" length="7" offset="2407" repeat="7" starttimestamp="1650324058609" timestamp="4244644" timestamp2="4245612">
    <text><![CDATA[server.]]></text>
  </DocumentChange>
  <Command __id="1315" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:31:51 EDT 2022" docASTNodeCount="1310" docActiveCodeLength="9564" docExpressionCount="920" docLength="10769" projectName="A6" starttimestamp="1650324058609" timestamp="4252395">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import client.ClientRemoteObject;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	protected static String SERVER_NAME;¶	private static int NIO_SERVER_PORT;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		¶¶		// Make sure you set this property when processing args¶		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶		¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);¶		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);¶		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);¶		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);¶		¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			System.out.println("Broadcasting IPC mechanism: "+mechanism);¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism, aProposalNumber);¶					System.out.println("SEND NEW MECHANISM TO A CLIENT FROM SERVER");¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶		System.out.println("ADDED CONNECTION LISTENER");¶	}¶¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			int aProposalNumber = -1;¶			ClientRemoteInterfaceGIPC fake = new ClientRemoteObject();¶			broadcastIPCMechanism(mechanism, fake, aProposalNumber , this.broadcastMetaState);¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1316" _type="Delete" date="Mon Apr 18 20:31:51 EDT 2022" docASTNodeCount="1309" docActiveCodeLength="9554" docExpressionCount="920" docLength="10759" endLine="51" length="10" offset="2224" repeat="2" startLine="51" starttimestamp="1650324058609" timestamp="4252459" timestamp2="4252459">
    <text><![CDATA[protected ]]></text>
  </DocumentChange>
  <DocumentChange __id="1318" _type="Insert" date="Mon Apr 18 20:31:51 EDT 2022" docASTNodeCount="1310" docActiveCodeLength="9561" docExpressionCount="920" docLength="10766" length="7" offset="2224" repeat="2" starttimestamp="1650324058609" timestamp="4252467" timestamp2="4252467">
    <text><![CDATA[public ]]></text>
  </DocumentChange>
  <Command __id="1338" _type="PauseCommand" date="Mon Apr 18 20:32:24 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="4285979">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[28237]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1337" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:32:24 EDT 2022" docASTNodeCount="360" docActiveCodeLength="2621" docExpressionCount="245" docLength="2918" projectName="A6" starttimestamp="1650324058609" timestamp="4285979">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.NIOManagerPrintServer;¶import server.remote.ServerRemoteObjectNIO;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.Proposal"), Diff(DELETE,"Made"), Diff(INSERT,"LearnedNotificationSent;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.RemoteProposeRequestReceived"), Diff(EQUAL,";¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶	¶	final ServerRemoteObjectNIO server;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ServerReadThread (final ServerRemoteObjectNIO aServer) {¶		server = aServer;¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();¶			List<SocketChannel> socketList = server.getSocketList();¶			SocketChannel currentSocket = server.getSocketChannel();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			¶			/// To pass the autograder¶			ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(originalMessage);¶			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);¶			boundedBufferFake.add(originalMessage);¶			///¶			// Echo recieve message to all clients (except original message sender)¶			¶			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());¶			¶			for (SocketChannel socket : socketList) {¶				if (!socket.equals(currentSocket)) {¶					¶					"), Diff(INSERT,"RemoteProposeRequestReceived.newCase(this, server.SERVER_NAME, aProposalNumber, aMessageString);¶					ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶					"), Diff(EQUAL,"nioManager.write(socket, originalMessage, server);¶				}¶			}¶		¶		}¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.NIOManagerPrintServer;
import server.remote.ServerRemoteObjectNIO;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.communication.CommunicationStateNames;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{
	
	final ServerRemoteObjectNIO server;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ServerReadThread (final ServerRemoteObjectNIO aServer) {
		server = aServer;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();
			List<SocketChannel> socketList = server.getSocketList();
			SocketChannel currentSocket = server.getSocketChannel();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			
			/// To pass the autograder
			ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(originalMessage);
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///
			// Echo recieve message to all clients (except original message sender)
			
			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());
			
			for (SocketChannel socket : socketList) {
				if (!socket.equals(currentSocket)) {
					
					RemoteProposeRequestReceived.newCase(this, server.SERVER_NAME, aProposalNumber, aMessageString);
					ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
					nioManager.write(socket, originalMessage, server);
				}
			}
		
		}
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}


}
]]></snapshot>
  </Command>
  <Command __id="1339" _type="SelectTextCommand" caretOffset="1775" date="Mon Apr 18 20:32:24 EDT 2022" end="1784" start="1775" starttimestamp="1650324058609" timestamp="4286244" />
  <Command __id="1340" _type="SelectTextCommand" caretOffset="1769" date="Mon Apr 18 20:32:25 EDT 2022" end="1784" start="1769" starttimestamp="1650324058609" timestamp="4286954" />
  <DocumentChange __id="1341" _type="Replace" date="Mon Apr 18 20:32:26 EDT 2022" docASTNodeCount="360" docActiveCodeLength="2607" docExpressionCount="245" docLength="2904" endLine="71" insertionLength="1" int_docASTNodeCount="359" int_docActiveCodeLength="2606" int_docExpressionCount="244" int_docLength="2903" length="15" offset="2427" startLine="71" starttimestamp="1650324058609" timestamp="4287580">
    <deletedText><![CDATA[aProposalNumber]]></deletedText>
    <insertedText><![CDATA[-]]></insertedText>
  </DocumentChange>
  <Command __id="1342" _type="InsertStringCommand" date="Mon Apr 18 20:32:26 EDT 2022" starttimestamp="1650324058609" timestamp="4287591" timestamp2="4287591">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="1344" _type="InsertStringCommand" date="Mon Apr 18 20:32:26 EDT 2022" starttimestamp="1650324058609" timestamp="4288249" timestamp2="4288249">
    <data><![CDATA[1]]></data>
  </Command>
  <DocumentChange __id="1343" _type="Insert" date="Mon Apr 18 20:32:26 EDT 2022" docASTNodeCount="361" docActiveCodeLength="2608" docExpressionCount="246" docLength="2905" length="1" offset="2428" starttimestamp="1650324058609" timestamp="4288242">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <Command __id="1346" _type="PauseCommand" date="Mon Apr 18 20:32:39 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="4301311">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[13062]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1347" _type="SelectTextCommand" caretOffset="2637" date="Mon Apr 18 20:32:40 EDT 2022" end="2822" start="2637" starttimestamp="1650324058609" timestamp="4301518" />
  <Command __id="1349" _type="PauseCommand" date="Mon Apr 18 20:32:47 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="4309341">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[7823]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1348" _type="SelectTextCommand" caretOffset="2336" date="Mon Apr 18 20:32:47 EDT 2022" end="2507" start="2336" starttimestamp="1650324058609" timestamp="4309341" />
  <Command __id="1350" _type="SelectTextCommand" caretOffset="2336" date="Mon Apr 18 20:32:47 EDT 2022" end="2507" start="2336" starttimestamp="1650324058609" timestamp="4309341" />
  <Command __id="1352" _type="PauseCommand" date="Mon Apr 18 20:32:50 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4311415">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2074]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1351" _type="MoveCaretCommand" caretOffset="2569" date="Mon Apr 18 20:32:50 EDT 2022" docOffset="3888" starttimestamp="1650324058609" timestamp="4311415" />
  <Command __id="1353" _type="MoveCaretCommand" caretOffset="2569" date="Mon Apr 18 20:32:50 EDT 2022" docOffset="3888" starttimestamp="1650324058609" timestamp="4311415" />
  <Command __id="1355" _type="PauseCommand" date="Mon Apr 18 20:32:57 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="4319114">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7699]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1354" _type="SelectTextCommand" caretOffset="2144" date="Mon Apr 18 20:32:57 EDT 2022" end="2506" start="2144" starttimestamp="1650324058609" timestamp="4319114" />
  <Command __id="1356" _type="SelectTextCommand" caretOffset="2144" date="Mon Apr 18 20:32:57 EDT 2022" end="2506" start="2144" starttimestamp="1650324058609" timestamp="4319114" />
  <Command __id="1357" _type="CopyCommand" date="Mon Apr 18 20:32:58 EDT 2022" starttimestamp="1650324058609" timestamp="4319663" />
  <Command __id="1359" _type="MoveCaretCommand" caretOffset="1771" date="Mon Apr 18 20:32:59 EDT 2022" docOffset="2429" starttimestamp="1650324058609" timestamp="4320617" />
  <Command __id="1361" _type="PauseCommand" date="Mon Apr 18 20:33:01 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4323076">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2459]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1360" _type="MoveCaretCommand" caretOffset="1699" date="Mon Apr 18 20:33:01 EDT 2022" docOffset="2357" starttimestamp="1650324058609" timestamp="4323076" />
  <Command __id="1363" _type="InsertStringCommand" date="Mon Apr 18 20:33:02 EDT 2022" starttimestamp="1650324058609" timestamp="4323587" timestamp2="4323587">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1365" _type="InsertStringCommand" date="Mon Apr 18 20:33:02 EDT 2022" starttimestamp="1650324058609" timestamp="4323738" timestamp2="4323738">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1367" _type="InsertStringCommand" date="Mon Apr 18 20:33:02 EDT 2022" starttimestamp="1650324058609" timestamp="4323945" timestamp2="4323945">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1369" _type="PauseCommand" date="Mon Apr 18 20:33:04 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="4325752">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1807]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1368" _type="MoveCaretCommand" caretOffset="1891" date="Mon Apr 18 20:33:04 EDT 2022" docOffset="2549" starttimestamp="1650324058609" timestamp="4325752" />
  <Command __id="1371" _type="InsertStringCommand" date="Mon Apr 18 20:33:04 EDT 2022" starttimestamp="1650324058609" timestamp="4325973" timestamp2="4325973">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1373" _type="InsertStringCommand" date="Mon Apr 18 20:33:04 EDT 2022" starttimestamp="1650324058609" timestamp="4326275" timestamp2="4326275">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1375" _type="InsertStringCommand" date="Mon Apr 18 20:33:05 EDT 2022" starttimestamp="1650324058609" timestamp="4326636" timestamp2="4326636">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1377" _type="InsertStringCommand" date="Mon Apr 18 20:33:05 EDT 2022" starttimestamp="1650324058609" timestamp="4326782" timestamp2="4326782">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1379" _type="InsertStringCommand" date="Mon Apr 18 20:33:05 EDT 2022" starttimestamp="1650324058609" timestamp="4326915" timestamp2="4326915">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1381" _type="PauseCommand" date="Mon Apr 18 20:33:10 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4331584">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4669]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1380" _type="MoveCaretCommand" caretOffset="1322" date="Mon Apr 18 20:33:10 EDT 2022" docOffset="1980" starttimestamp="1650324058609" timestamp="4331584" />
  <Command __id="1382" _type="MoveCaretCommand" caretOffset="1416" date="Mon Apr 18 20:33:11 EDT 2022" docOffset="2074" starttimestamp="1650324058609" timestamp="4332500" />
  <Command __id="1384" _type="InsertStringCommand" date="Mon Apr 18 20:33:11 EDT 2022" starttimestamp="1650324058609" timestamp="4332739" timestamp2="4332739">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1386" _type="InsertStringCommand" date="Mon Apr 18 20:33:11 EDT 2022" starttimestamp="1650324058609" timestamp="4332883" timestamp2="4332883">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1388" _type="PasteCommand" date="Mon Apr 18 20:33:12 EDT 2022" starttimestamp="1650324058609" timestamp="4333498" />
  <Command __id="1390" _type="PauseCommand" date="Mon Apr 18 20:33:19 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="4340594">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[7096]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1389" _type="MoveCaretCommand" caretOffset="1462" date="Mon Apr 18 20:33:19 EDT 2022" docOffset="2120" starttimestamp="1650324058609" timestamp="4340594" />
  <Command __id="1392" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:33:19 EDT 2022" starttimestamp="1650324058609" timestamp="4340859" />
  <Command __id="1345" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:32:39 EDT 2022" docASTNodeCount="719" docActiveCodeLength="5117" docExpressionCount="520" docLength="5504" projectName="A6" starttimestamp="1650324058609" timestamp="4301311">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.exampleServerReadThread;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶¶public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	@Override¶	protected void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("COMMAND IN SERVER: "+ aMessageString);¶		¶		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1358" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:32:59 EDT 2022" docASTNodeCount="361" docActiveCodeLength="2608" docExpressionCount="246" docLength="2905" projectName="A6" starttimestamp="1650324058609" timestamp="4320424">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.NIOManagerPrintServer;¶import server.remote.ServerRemoteObjectNIO;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶	¶	final ServerRemoteObjectNIO server;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ServerReadThread (final ServerRemoteObjectNIO aServer) {¶		server = aServer;¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();¶			List<SocketChannel> socketList = server.getSocketList();¶			SocketChannel currentSocket = server.getSocketChannel();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			¶			/// To pass the autograder¶			ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(originalMessage);¶			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);¶			boundedBufferFake.add(originalMessage);¶			///¶			// Echo recieve message to all clients (except original message sender)¶			¶			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());¶			¶			for (SocketChannel socket : socketList) {¶				if (!socket.equals(currentSocket)) {¶					¶					RemoteProposeRequestReceived.newCase(this, server.SERVER_NAME, "), Diff(DELETE,"aProposalNumber"), Diff(INSERT,"-1"), Diff(EQUAL,", aMessageString);¶					ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶					nioManager.write(socket, originalMessage, server);¶				}¶			}¶		¶		}¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.NIOManagerPrintServer;
import server.remote.ServerRemoteObjectNIO;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.communication.CommunicationStateNames;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{
	
	final ServerRemoteObjectNIO server;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ServerReadThread (final ServerRemoteObjectNIO aServer) {
		server = aServer;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();
			List<SocketChannel> socketList = server.getSocketList();
			SocketChannel currentSocket = server.getSocketChannel();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			
			/// To pass the autograder
			ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(originalMessage);
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///
			// Echo recieve message to all clients (except original message sender)
			
			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());
			
			for (SocketChannel socket : socketList) {
				if (!socket.equals(currentSocket)) {
					
					RemoteProposeRequestReceived.newCase(this, server.SERVER_NAME, -1, aMessageString);
					ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
					nioManager.write(socket, originalMessage, server);
				}
			}
		
		}
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="1362" _type="Insert" date="Mon Apr 18 20:33:02 EDT 2022" docASTNodeCount="361" docActiveCodeLength="2608" docExpressionCount="246" docLength="2908" length="3" offset="2357" repeat="3" starttimestamp="1650324058609" timestamp="4323587" timestamp2="4323945">
    <text><![CDATA[///]]></text>
  </DocumentChange>
  <DocumentChange __id="1370" _type="Insert" date="Mon Apr 18 20:33:04 EDT 2022" docASTNodeCount="361" docActiveCodeLength="2622" docExpressionCount="246" docLength="2925" length="17" offset="2549" repeat="5" starttimestamp="1650324058609" timestamp="4325965" timestamp2="4326915">
    <text><![CDATA[
					
					///]]></text>
  </DocumentChange>
  <DocumentChange __id="1383" _type="Insert" date="Mon Apr 18 20:33:11 EDT 2022" docASTNodeCount="361" docActiveCodeLength="2632" docExpressionCount="246" docLength="2935" length="10" offset="2074" repeat="2" starttimestamp="1650324058609" timestamp="4332731" timestamp2="4332875">
    <text><![CDATA[
			
			]]></text>
  </DocumentChange>
  <DocumentChange __id="1387" _type="Replace" date="Mon Apr 18 20:33:11 EDT 2022" docASTNodeCount="417" docActiveCodeLength="2999" docExpressionCount="292" docLength="3302" endLine="64" insertionLength="370" int_docASTNodeCount="361" int_docActiveCodeLength="2629" int_docExpressionCount="246" int_docLength="2932" length="3" offset="2081" startLine="64" starttimestamp="1650324058609" timestamp="4333379">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
			System.out.println(aMessageString + "<--" + aSocketChannel);

			currentSocket = aSocketChannel;
			
			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
			aMessageString =  aMessageString.substring(0, aMessageString.length()-1)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1391" _type="Delete" date="Mon Apr 18 20:33:19 EDT 2022" docASTNodeCount="417" docActiveCodeLength="2998" docExpressionCount="292" docLength="3301" endLine="64" length="1" offset="2119" startLine="64" starttimestamp="1650324058609" timestamp="4340859">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <Command __id="1394" _type="PauseCommand" date="Mon Apr 18 20:33:20 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="4341955">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1096]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1395" _type="InsertStringCommand" date="Mon Apr 18 20:33:20 EDT 2022" starttimestamp="1650324058609" timestamp="4341977" timestamp2="4341977">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1397" _type="InsertStringCommand" date="Mon Apr 18 20:33:20 EDT 2022" starttimestamp="1650324058609" timestamp="4342005" timestamp2="4342005">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1399" _type="InsertStringCommand" date="Mon Apr 18 20:33:20 EDT 2022" starttimestamp="1650324058609" timestamp="4342020" timestamp2="4342020">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1401" _type="InsertStringCommand" date="Mon Apr 18 20:33:20 EDT 2022" starttimestamp="1650324058609" timestamp="4342028" timestamp2="4342028">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1403" _type="InsertStringCommand" date="Mon Apr 18 20:33:20 EDT 2022" starttimestamp="1650324058609" timestamp="4342045" timestamp2="4342045">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1405" _type="InsertStringCommand" date="Mon Apr 18 20:33:20 EDT 2022" starttimestamp="1650324058609" timestamp="4342060" timestamp2="4342060">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1407" _type="InsertStringCommand" date="Mon Apr 18 20:33:20 EDT 2022" starttimestamp="1650324058609" timestamp="4342076" timestamp2="4342076">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1409" _type="InsertStringCommand" date="Mon Apr 18 20:33:20 EDT 2022" starttimestamp="1650324058609" timestamp="4342214" timestamp2="4342214">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1411" _type="PauseCommand" date="Mon Apr 18 20:33:24 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4346016">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3802]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1410" _type="SelectTextCommand" caretOffset="1484" date="Mon Apr 18 20:33:24 EDT 2022" end="1514" start="1484" starttimestamp="1650324058609" timestamp="4346016" />
  <Command __id="1413" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:33:24 EDT 2022" starttimestamp="1650324058609" timestamp="4346354" />
  <Command __id="1415" _type="PauseCommand" date="Mon Apr 18 20:33:29 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4351344">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4990]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1414" _type="SelectTextCommand" caretOffset="1491" date="Mon Apr 18 20:33:29 EDT 2022" end="1551" start="1491" starttimestamp="1650324058609" timestamp="4351344" />
  <Command __id="1417" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:33:30 EDT 2022" starttimestamp="1650324058609" timestamp="4351941" />
  <Command __id="1419" _type="PauseCommand" date="Mon Apr 18 20:33:32 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4354077">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2136]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1418" _type="SelectTextCommand" caretOffset="1493" date="Mon Apr 18 20:33:32 EDT 2022" end="1529" start="1493" starttimestamp="1650324058609" timestamp="4354077" />
  <Command __id="1421" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:33:32 EDT 2022" starttimestamp="1650324058609" timestamp="4354366" />
  <Command __id="1423" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:33:33 EDT 2022" starttimestamp="1650324058609" timestamp="4354927" />
  <Command __id="1425" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:33:34 EDT 2022" starttimestamp="1650324058609" timestamp="4355419" />
  <Command __id="1427" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:33:34 EDT 2022" starttimestamp="1650324058609" timestamp="4356382" />
  <Command __id="1429" _type="PauseCommand" date="Mon Apr 18 20:33:38 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4359838">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3456]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1428" _type="MoveCaretCommand" caretOffset="1669" date="Mon Apr 18 20:33:38 EDT 2022" docOffset="2327" starttimestamp="1650324058609" timestamp="4359838" />
  <Command __id="1431" _type="InsertStringCommand" date="Mon Apr 18 20:33:38 EDT 2022" starttimestamp="1650324058609" timestamp="4360350" timestamp2="4360350">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1433" _type="PauseCommand" date="Mon Apr 18 20:33:42 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4364146">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3796]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1432" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:33:42 EDT 2022" starttimestamp="1650324058609" timestamp="4364146" />
  <Command __id="1434" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:33:42 EDT 2022" starttimestamp="1650324058609" timestamp="4364236" />
  <Command __id="1435" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:33:42 EDT 2022" starttimestamp="1650324058609" timestamp="4364292" />
  <Command __id="1437" _type="PauseCommand" date="Mon Apr 18 20:33:44 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="4366174">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1882]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1436" _type="MoveCaretCommand" caretOffset="2099" date="Mon Apr 18 20:33:44 EDT 2022" docOffset="2757" starttimestamp="1650324058609" timestamp="4366174" />
  <Command __id="1439" _type="InsertStringCommand" date="Mon Apr 18 20:33:45 EDT 2022" starttimestamp="1650324058609" timestamp="4366699" timestamp2="4366699">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1441" _type="InsertStringCommand" date="Mon Apr 18 20:33:45 EDT 2022" starttimestamp="1650324058609" timestamp="4366814" timestamp2="4366814">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1443" _type="InsertStringCommand" date="Mon Apr 18 20:33:45 EDT 2022" starttimestamp="1650324058609" timestamp="4366891" timestamp2="4366891">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1445" _type="InsertStringCommand" date="Mon Apr 18 20:33:45 EDT 2022" starttimestamp="1650324058609" timestamp="4367017" timestamp2="4367017">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1447" _type="InsertStringCommand" date="Mon Apr 18 20:33:45 EDT 2022" starttimestamp="1650324058609" timestamp="4367122" timestamp2="4367122">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1448" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 18 20:33:45 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="4367123" />
  <DocumentChange __id="1393" _type="Insert" date="Mon Apr 18 20:33:20 EDT 2022" docASTNodeCount="417" docActiveCodeLength="3006" docExpressionCount="292" docLength="3309" length="8" offset="2119" repeat="8" starttimestamp="1650324058609" timestamp="4341955" timestamp2="4342214">
    <text><![CDATA[original]]></text>
  </DocumentChange>
  <DocumentChange __id="1412" _type="Delete" date="Mon Apr 18 20:33:24 EDT 2022" docASTNodeCount="413" docActiveCodeLength="2976" docExpressionCount="288" docLength="3279" endLine="64" length="30" offset="2142" startLine="64" starttimestamp="1650324058609" timestamp="4346346">
    <text><![CDATA[, aMessage.position(), aLength]]></text>
  </DocumentChange>
  <DocumentChange __id="1416" _type="Delete" date="Mon Apr 18 20:33:30 EDT 2022" docASTNodeCount="403" docActiveCodeLength="2916" docExpressionCount="279" docLength="3219" endLine="65" length="60" offset="2149" startLine="65" starttimestamp="1650324058609" timestamp="4351933">
    <text><![CDATA[System.out.println(aMessageString + "<--" + aSocketChannel);]]></text>
  </DocumentChange>
  <DocumentChange __id="1420" _type="Delete" date="Mon Apr 18 20:33:32 EDT 2022" docASTNodeCount="399" docActiveCodeLength="2875" docExpressionCount="276" docLength="3178" endLine="68" length="41" offset="2149" repeat="4" startLine="65" starttimestamp="1650324058609" timestamp="4354358" timestamp2="4356373">
    <text><![CDATA[

			currentSocket = aSocketChannel;
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1430" _type="Insert" date="Mon Apr 18 20:33:38 EDT 2022" docASTNodeCount="399" docActiveCodeLength="2876" docExpressionCount="276" docLength="3179" length="1" offset="2327" starttimestamp="1650324058609" timestamp="4360341">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="1438" _type="Insert" date="Mon Apr 18 20:33:45 EDT 2022" docASTNodeCount="401" docActiveCodeLength="2881" docExpressionCount="278" docLength="3184" length="5" offset="2757" repeat="5" starttimestamp="1650324058609" timestamp="4366691" timestamp2="4367114">
    <text><![CDATA[this.]]></text>
  </DocumentChange>
  <Command __id="1450" _type="PauseCommand" date="Mon Apr 18 20:33:46 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="4368193">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1070]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="1449" _type="Delete" date="Mon Apr 18 20:33:46 EDT 2022" docASTNodeCount="399" docActiveCodeLength="2876" docExpressionCount="276" docLength="3179" endLine="77" length="5" offset="2757" repeat="5" startLine="77" starttimestamp="1650324058609" timestamp="4368193" timestamp2="4369015">
    <text><![CDATA[this.]]></text>
  </DocumentChange>
  <Command __id="1456" _type="PauseCommand" date="Mon Apr 18 20:33:47 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="4369210">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[1017]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1459" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:33:47 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="4369340" />
  <Command __id="1461" _type="InsertStringCommand" date="Mon Apr 18 20:33:48 EDT 2022" starttimestamp="1650324058609" timestamp="4369531" timestamp2="4369531">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1463" _type="InsertStringCommand" date="Mon Apr 18 20:33:48 EDT 2022" starttimestamp="1650324058609" timestamp="4369714" timestamp2="4369714">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1465" _type="InsertStringCommand" date="Mon Apr 18 20:33:48 EDT 2022" starttimestamp="1650324058609" timestamp="4369788" timestamp2="4369788">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1467" _type="InsertStringCommand" date="Mon Apr 18 20:33:48 EDT 2022" starttimestamp="1650324058609" timestamp="4370098" timestamp2="4370098">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1468" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 18 20:33:48 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="4370106" />
  <Command __id="1470" _type="PauseCommand" date="Mon Apr 18 20:33:50 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="4371552">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1446]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1469" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:33:50 EDT 2022" starttimestamp="1650324058609" timestamp="4371552" />
  <Command __id="1471" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:33:50 EDT 2022" starttimestamp="1650324058609" timestamp="4371648" />
  <Command __id="1472" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:33:50 EDT 2022" starttimestamp="1650324058609" timestamp="4371702" />
  <Command __id="1473" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:33:50 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="4371795" />
  <Command __id="1475" _type="PauseCommand" date="Mon Apr 18 20:33:54 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4376219">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[4424]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1474" _type="MoveCaretCommand" caretOffset="2028" date="Mon Apr 18 20:33:54 EDT 2022" docOffset="2686" starttimestamp="1650324058609" timestamp="4376219" />
  <Command __id="1477" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:33:55 EDT 2022" starttimestamp="1650324058609" timestamp="4376566" />
  <Command __id="1479" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:33:55 EDT 2022" starttimestamp="1650324058609" timestamp="4376690" />
  <Command __id="1481" _type="InsertStringCommand" date="Mon Apr 18 20:33:55 EDT 2022" starttimestamp="1650324058609" timestamp="4376843" timestamp2="4376843">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1483" _type="InsertStringCommand" date="Mon Apr 18 20:33:56 EDT 2022" starttimestamp="1650324058609" timestamp="4377511" timestamp2="4377511">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1485" _type="InsertStringCommand" date="Mon Apr 18 20:33:56 EDT 2022" starttimestamp="1650324058609" timestamp="4377752" timestamp2="4377752">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1487" _type="InsertStringCommand" date="Mon Apr 18 20:33:56 EDT 2022" starttimestamp="1650324058609" timestamp="4377862" timestamp2="4377862">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1489" _type="InsertStringCommand" date="Mon Apr 18 20:33:56 EDT 2022" starttimestamp="1650324058609" timestamp="4378132" timestamp2="4378132">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1491" _type="InsertStringCommand" date="Mon Apr 18 20:33:56 EDT 2022" starttimestamp="1650324058609" timestamp="4378240" timestamp2="4378240">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1493" _type="InsertStringCommand" date="Mon Apr 18 20:33:56 EDT 2022" starttimestamp="1650324058609" timestamp="4378363" timestamp2="4378363">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1495" _type="InsertStringCommand" date="Mon Apr 18 20:33:57 EDT 2022" starttimestamp="1650324058609" timestamp="4378468" timestamp2="4378468">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1497" _type="InsertStringCommand" date="Mon Apr 18 20:33:57 EDT 2022" starttimestamp="1650324058609" timestamp="4378613" timestamp2="4378613">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1499" _type="InsertStringCommand" date="Mon Apr 18 20:33:57 EDT 2022" starttimestamp="1650324058609" timestamp="4378871" timestamp2="4378871">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1501" _type="InsertStringCommand" date="Mon Apr 18 20:33:57 EDT 2022" starttimestamp="1650324058609" timestamp="4379094" timestamp2="4379094">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1503" _type="InsertStringCommand" date="Mon Apr 18 20:33:57 EDT 2022" starttimestamp="1650324058609" timestamp="4379292" timestamp2="4379292">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1505" _type="InsertStringCommand" date="Mon Apr 18 20:33:57 EDT 2022" starttimestamp="1650324058609" timestamp="4379383" timestamp2="4379383">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1507" _type="InsertStringCommand" date="Mon Apr 18 20:33:58 EDT 2022" starttimestamp="1650324058609" timestamp="4379575" timestamp2="4379575">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1509" _type="InsertStringCommand" date="Mon Apr 18 20:33:58 EDT 2022" starttimestamp="1650324058609" timestamp="4379655" timestamp2="4379655">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1510" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:33:58 EDT 2022" starttimestamp="1650324058609" timestamp="4380366" />
  <Command __id="1511" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:33:59 EDT 2022" starttimestamp="1650324058609" timestamp="4380467" />
  <Command __id="1512" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:33:59 EDT 2022" starttimestamp="1650324058609" timestamp="4380497" />
  <Command __id="1514" _type="PauseCommand" date="Mon Apr 18 20:34:10 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="4391773">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11276]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1513" _type="ShellCommand" date="Mon Apr 18 20:34:10 EDT 2022" starttimestamp="1650324058609" timestamp="4391773" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1516" _type="PauseCommand" date="Mon Apr 18 20:34:18 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="4399848">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8075]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1599" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:35:40 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4482361" type="Run" />
  <Command __id="1601" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:35:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4482401" type="Run" />
  <Command __id="1603" _type="PauseCommand" date="Mon Apr 18 20:36:17 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="4518658">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[36257]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1602" _type="ConsoleInput" date="Mon Apr 18 20:36:17 EDT 2022" starttimestamp="1650324058609" timestamp="4518658" type="Exception">
    <outputString><![CDATA[b true
]]></outputString>
  </Command>
  <Command __id="1604" _type="ConsoleOutput" date="Mon Apr 18 20:36:17 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4518714" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:52037](remote),objID:[-6c0650ac:1803f3ea102:-7ffe, -3156857417849401736]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:52032](remote),objID:[-275d23e7:1803f3e99a8:-7ffe, 8086234111105815099]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[192.168.1.118:52037](remote),objID:[-6c0650ac:1803f3ea102:-7ffe, -3156857417849401736]]]]]]"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1606" _type="PauseCommand" date="Mon Apr 18 20:36:18 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="4520126">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1412]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1605" _type="ConsoleInput" date="Mon Apr 18 20:36:18 EDT 2022" starttimestamp="1650324058609" timestamp="4520126" type="Exception">
    <outputString><![CDATA[i nio
]]></outputString>
  </Command>
  <Command __id="1607" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:36:18 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4520133" type="Run" />
  <Command __id="1608" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:36:18 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4520147" type="Run" />
  <Command __id="1609" _type="ConsoleOutput" date="Mon Apr 18 20:36:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4520181" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[NIO]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"public default void assignments.util.inputParameters.SimulationParametersListener."), Diff(DELETE,"broadcastMetaState(boolean)[true"), Diff(INSERT,"ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[NIO"), Diff(EQUAL,"]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶")]]]></diff>
  </Command>
  <Command __id="1610" _type="ConsoleOutput" date="Mon Apr 18 20:36:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4520196" type="ConsoleOutput">
    <outputString><![CDATA[IPC Mechanism recieved for broadcast: NIO
USING RMI IN SERVER
Broadcasting IPC mechanism: NIO
SEND NEW MECHANISM TO A CLIENT FROM SERVER
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvo"), Diff(INSERT,"IPC Mechanism recieved for broadcast: NIO¶USING RMI IN SERVER¶Broad"), Diff(EQUAL,"ca"), Diff(INSERT,"s"), Diff(EQUAL,"ti"), Diff(DELETE,"on."), Diff(INSERT,"ng "), Diff(EQUAL,"IPC"), Diff(DELETE,"M"), Diff(INSERT," m"), Diff(EQUAL,"echanism"), Diff(DELETE,")["), Diff(INSERT,": "), Diff(EQUAL,"NIO"), Diff(DELETE,"]"), Diff(EQUAL,"¶"), Diff(DELETE,"Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"SEND NEW MECHANISM TO A CLIENT FROM SERVER"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1611" _type="ConsoleOutput" date="Mon Apr 18 20:36:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4520212" type="ConsoleOutput">
    <outputString><![CDATA[GOT IPC MECHANISM CHANGE: NIOI***@5359652379200 {RMI TCP Connection(2)-192.168.1.118}(ProposedStateSet) EvtSrc(ClientRemoteObjectNIO)  Generic Client:0.6158794359453222,0.0=NIO
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GOT "), Diff(EQUAL,"IPC M"), Diff(DELETE,"echanism recieved for broadcast: NIO¶USING RMI IN SERVER¶Broadcasting IPC mechanism: NIO¶SEND NEW MECHANISM TO A CLIENT FROM SERVER"), Diff(INSERT,"ECHANISM CHANGE: NIOI***@5359652379200 {RMI TCP Connection(2)-192.168.1.118}(ProposedStateSet) EvtSrc(ClientRemoteObjectNIO)  Generic Client:0.6158794359453222,0.0=NIO"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1613" _type="PauseCommand" date="Mon Apr 18 20:36:22 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4524237">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4025]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1652" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:37:09 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="4570737" type="Run" />
  <Command __id="1654" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:37:09 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="4570737" type="Run" />
  <Command __id="1655" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:37:09 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4570948" type="Run" />
  <Command __id="1656" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:37:09 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4570967" type="Run" />
  <Command __id="1657" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:37:09 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4570967" type="Run" />
  <Command __id="1659" _type="PauseCommand" date="Mon Apr 18 20:37:13 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4574674">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3707]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1688" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:37:53 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4614502" type="Run" />
  <Command __id="1690" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:37:53 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4614505" type="Run" />
  <Command __id="1692" _type="PauseCommand" date="Mon Apr 18 20:38:05 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="4627234">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[12729]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1754" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:42:08 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4869774" type="Run" />
  <Command __id="1756" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:42:08 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4869776" type="Run" />
  <Command __id="1758" _type="PauseCommand" date="Mon Apr 18 20:42:13 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="4874870">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[5094]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1757" _type="ShellCommand" date="Mon Apr 18 20:42:13 EDT 2022" starttimestamp="1650324058609" timestamp="4874870" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1760" _type="SelectTextCommand" caretOffset="2144" date="Mon Apr 18 20:42:14 EDT 2022" end="2506" start="2144" starttimestamp="1650324058609" timestamp="4875455" />
  <Command __id="1762" _type="PauseCommand" date="Mon Apr 18 20:42:15 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="4876881">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1426]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1775" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:42:30 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4892383" type="Run" />
  <Command __id="1777" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:42:30 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="4892386" type="Run" />
  <Command __id="1779" _type="PauseCommand" date="Mon Apr 18 20:42:46 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="4907516">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[15130]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1778" _type="ConsoleOutput" date="Mon Apr 18 20:42:46 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4907516" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22587
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):22"), Diff(DELETE,"601"), Diff(INSERT,"587"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1781" _type="PauseCommand" date="Mon Apr 18 20:42:49 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="4911008">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3492]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1780" _type="ConsoleOutput" date="Mon Apr 18 20:42:49 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="4911008" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@1b985345 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22587"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@1b985345 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1783" _type="PauseCommand" date="Mon Apr 18 20:49:00 EDT 2022" range="5m-10m" starttimestamp="1650324058609" timestamp="5282355">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[371347]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1782" _type="ShellCommand" date="Mon Apr 18 20:49:00 EDT 2022" starttimestamp="1650324058609" timestamp="5282355" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1785" _type="PauseCommand" date="Mon Apr 18 20:49:04 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="5285865">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3510]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1784" _type="MoveCaretCommand" caretOffset="2637" date="Mon Apr 18 20:49:04 EDT 2022" docOffset="3956" starttimestamp="1650324058609" timestamp="5285865" />
  <Command __id="1786" _type="MoveCaretCommand" caretOffset="2637" date="Mon Apr 18 20:49:04 EDT 2022" docOffset="3956" starttimestamp="1650324058609" timestamp="5285865" />
  <DocumentChange __id="1455" _type="Insert" date="Mon Apr 18 20:33:47 EDT 2022" docASTNodeCount="401" docActiveCodeLength="2883" docExpressionCount="278" docLength="3186" length="7" offset="2757" repeat="7" starttimestamp="1650324058609" timestamp="4369210" timestamp2="4370090">
    <text><![CDATA[server.]]></text>
  </DocumentChange>
  <DocumentChange __id="1476" _type="Delete" date="Mon Apr 18 20:33:55 EDT 2022" docASTNodeCount="399" docActiveCodeLength="2881" docExpressionCount="276" docLength="3184" endLine="76" length="2" offset="2684" repeat="2" startLine="76" starttimestamp="1650324058609" timestamp="4376557" timestamp2="4376690">
    <text><![CDATA[-1]]></text>
  </DocumentChange>
  <DocumentChange __id="1480" _type="Insert" date="Mon Apr 18 20:33:55 EDT 2022" docASTNodeCount="400" docActiveCodeLength="2896" docExpressionCount="277" docLength="3199" length="15" offset="2684" repeat="15" starttimestamp="1650324058609" timestamp="4376835" timestamp2="4379647">
    <text><![CDATA[aProposalNumber]]></text>
  </DocumentChange>
  <Command __id="1759" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:42:13 EDT 2022" docASTNodeCount="719" docActiveCodeLength="5117" docExpressionCount="520" docLength="5504" projectName="A6" starttimestamp="1650324058609" timestamp="4875060">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.exampleServerReadThread;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶¶public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	@Override¶	protected void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("COMMAND IN SERVER: "+ aMessageString);¶		¶		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1788" _type="PauseCommand" date="Mon Apr 18 20:49:08 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="5290071">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4206]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="1787" _type="Insert" date="Mon Apr 18 20:49:08 EDT 2022" docASTNodeCount="711" docActiveCodeLength="5028" docExpressionCount="513" docLength="5506" length="2" offset="3956" repeat="2" starttimestamp="1650324058609" timestamp="5290071" timestamp2="5290201">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="1789" _type="InsertStringCommand" date="Mon Apr 18 20:49:08 EDT 2022" starttimestamp="1650324058609" timestamp="5290084" timestamp2="5290084">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1790" _type="InsertStringCommand" date="Mon Apr 18 20:49:08 EDT 2022" starttimestamp="1650324058609" timestamp="5290084" timestamp2="5290084">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1792" _type="InsertStringCommand" date="Mon Apr 18 20:49:08 EDT 2022" starttimestamp="1650324058609" timestamp="5290209" timestamp2="5290209">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1793" _type="InsertStringCommand" date="Mon Apr 18 20:49:08 EDT 2022" starttimestamp="1650324058609" timestamp="5290209" timestamp2="5290209">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1794" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Apr 18 20:49:09 EDT 2022" starttimestamp="1650324058609" timestamp="5290595" />
  <Command __id="1795" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Apr 18 20:49:09 EDT 2022" starttimestamp="1650324058609" timestamp="5290595" />
  <Command __id="1796" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 18 20:49:09 EDT 2022" starttimestamp="1650324058609" timestamp="5290954" />
  <Command __id="1797" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 18 20:49:09 EDT 2022" starttimestamp="1650324058609" timestamp="5290962" />
  <Command __id="1798" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 18 20:49:09 EDT 2022" starttimestamp="1650324058609" timestamp="5291109" />
  <Command __id="1799" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 18 20:49:09 EDT 2022" starttimestamp="1650324058609" timestamp="5291109" />
  <Command __id="1809" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:49:15 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="5296920" type="Run" />
  <Command __id="1811" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:49:15 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="5297162" type="Run" />
  <Command __id="1812" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:49:15 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="5297170" type="Run" />
  <Command __id="1814" _type="PauseCommand" date="Mon Apr 18 20:49:19 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="5300850">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3680]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1890" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:53:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="5558922" type="Run" />
  <Command __id="1892" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:53:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="5558926" type="Run" />
  <Command __id="1894" _type="PauseCommand" date="Mon Apr 18 20:53:52 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="5574002">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[15076]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1893" _type="ConsoleOutput" date="Mon Apr 18 20:53:52 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="5574002" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22581
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"90"), Diff(INSERT,"81"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1896" _type="PauseCommand" date="Mon Apr 18 20:53:57 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="5578967">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4965]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1895" _type="ConsoleOutput" date="Mon Apr 18 20:53:57 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="5578967" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientConnection@4f20fa7 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test ex"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientConn"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"tion"), Diff(DELETE," time (ms):22581"), Diff(INSERT,"@4f20fa7 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1898" _type="PauseCommand" date="Mon Apr 18 20:54:02 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="5583502">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4535]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1925" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:54:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="5624730" type="Run" />
  <Command __id="1927" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:54:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="5624733" type="Run" />
  <Command __id="1929" _type="PauseCommand" date="Mon Apr 18 20:54:56 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="5637425">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[12691]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1928" _type="ConsoleOutput" date="Mon Apr 18 20:54:56 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="5637424" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14185
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):14"), Diff(DELETE,"321"), Diff(INSERT,"185"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1931" _type="PauseCommand" date="Mon Apr 18 21:12:02 EDT 2022" range="10m-20m" starttimestamp="1650324058609" timestamp="6664166">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1026742]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1930" _type="ConsoleOutput" date="Mon Apr 18 21:12:02 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6664166" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@650f144 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):14185"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@650f144 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1933" _type="PauseCommand" date="Mon Apr 18 21:12:03 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6665374">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1208]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1932" _type="ConsoleOutput" date="Mon Apr 18 21:12:03 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6665374" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientConnection@4f20fa7 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClient"), Diff(DELETE,"ReadWriteNonAtomic@650f144"), Diff(INSERT,"Connection@4f20fa7"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="1935" _type="PauseCommand" date="Mon Apr 18 21:12:06 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6668366">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2992]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1934" _type="ConsoleOutput" date="Mon Apr 18 21:12:06 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6668366" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 21:12:06 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientConnection@4f20fa7 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 21:12:06 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1937" _type="PauseCommand" date="Mon Apr 18 21:12:11 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6672881">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4515]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1936" _type="ConsoleOutput" date="Mon Apr 18 21:12:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6672881" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 21:12:11 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 21:12:11 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Mon Apr 18 21:12:"), Diff(DELETE,"06"), Diff(INSERT,"11 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 18 21:12:11"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1938" _type="ConsoleOutput" date="Mon Apr 18 21:12:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6673073" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 21:12:11 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 21:12:11 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 21:12:11 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1940" _type="PauseCommand" date="Mon Apr 18 21:12:14 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6675504">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2431]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1939" _type="ConsoleOutput" date="Mon Apr 18 21:12:14 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6675504" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 21:12:14 EDT 2022
Generating checks:Mon Apr 18 21:12:14 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method call"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 21:12:14 EDT 2022¶Generating check"), Diff(EQUAL,"s:Mon Apr 18 21:12:1"), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1941" _type="ConsoleOutput" date="Mon Apr 18 21:12:14 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6675587" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating checks:Mon Apr 18 21:12:14 EDT 2022
Generating externals:Mon Apr 18 21:12:14 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass"), Diff(INSERT,"Generating"), Diff(EQUAL," checks:Mon Apr 18 21:12:14 EDT 2022¶Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 21:12:14 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1943" _type="PauseCommand" date="Mon Apr 18 21:12:15 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6676655">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1068]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1942" _type="ConsoleOutput" date="Mon Apr 18 21:12:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6676655" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 21:12:15 EDT 2022
Test execution time (ms):8313
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 21:12:1"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating externals:Mon Apr 18 21:12:14 EDT 2022"), Diff(INSERT,"Test execution time (ms):8313"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1944" _type="ConsoleOutput" date="Mon Apr 18 21:12:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6676741" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):33
Test execution time (ms):30
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 21:12:15 EDT 2022"), Diff(INSERT,"Test execution time (ms):33"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"831"), Diff(EQUAL,"3"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1945" _type="ConsoleOutput" date="Mon Apr 18 21:12:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6676858" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):37

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (187)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (94)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (101)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):3"), Diff(DELETE,"3¶Test execution time (ms):30"), Diff(INSERT,"7¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (101)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1947" _type="PauseCommand" date="Mon Apr 18 21:12:30 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="6692036">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15178]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1946" _type="ConsoleOutput" date="Mon Apr 18 21:12:30 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6692036" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):9
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0
Test execution time (ms):25
A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"37¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (1"), Diff(INSERT,"9¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶Test execution time (ms):"), Diff(EQUAL,"25"), Diff(DELETE,")"), Diff(EQUAL,"¶"), Diff(DELETE,"  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (101)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)"), Diff(INSERT,"A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1948" _type="ConsoleOutput" date="Mon Apr 18 21:12:30 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6692138" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):25
A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428

Test execution time (ms):36
Test execution time (ms):17
A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882

Test execution time (ms):41
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"9"), Diff(INSERT,"25"), Diff(EQUAL,"¶A6"), Diff(DELETE,"NoCheckstyleWarnings"), Diff(INSERT,"InterfaceAsType"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"Warnings found in checkstyle text, see traced console output%0.0"), Diff(INSERT,"See console trace about lines failing  this check%0.9428571428571428¶¶Test execution time (ms):36"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"25"), Diff(INSERT,"17"), Diff(EQUAL,"¶A6"), Diff(DELETE,"PublicMethodsOverride"), Diff(INSERT,"AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9285714285714286"), Diff(INSERT,"23529411764705882¶¶Test execution time (ms):41"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1950" _type="PauseCommand" date="Mon Apr 18 21:12:43 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="6705144">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13006]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1949" _type="ConsoleOutput" date="Mon Apr 18 21:12:43 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6705144" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@70c2f744 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):25¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428¶¶Test execution time (ms):36¶Test execution time (ms):17¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882¶¶Test execution time (ms):41"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@70c2f744 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1952" _type="PauseCommand" date="Mon Apr 18 21:12:50 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="6711580">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6436]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1951" _type="ShellCommand" date="Mon Apr 18 21:12:50 EDT 2022" starttimestamp="1650324058609" timestamp="6711580" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1800" _type="Insert" date="Mon Apr 18 20:49:10 EDT 2022" docASTNodeCount="703" docActiveCodeLength="4936" docExpressionCount="506" docLength="5508" length="2" offset="4051" repeat="2" starttimestamp="1650324058609" timestamp="5291697" timestamp2="5291828">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="1954" _type="PauseCommand" date="Mon Apr 18 21:13:56 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="6778378">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[66798]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1955" _type="MoveCaretCommand" caretOffset="5018" date="Mon Apr 18 21:13:57 EDT 2022" docOffset="7405" starttimestamp="1650324058609" timestamp="6778800" />
  <Command __id="1956" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:13:58 EDT 2022" starttimestamp="1650324058609" timestamp="6779536" />
  <Command __id="1957" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:13:58 EDT 2022" starttimestamp="1650324058609" timestamp="6779541" />
  <Command __id="1959" _type="PauseCommand" date="Mon Apr 18 21:14:02 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6783977">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4436]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1958" _type="MoveCaretCommand" caretOffset="5286" date="Mon Apr 18 21:14:02 EDT 2022" docOffset="7673" starttimestamp="1650324058609" timestamp="6783977" />
  <Command __id="1961" _type="PauseCommand" date="Mon Apr 18 21:14:13 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="6795255">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11278]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1960" _type="MoveCaretCommand" caretOffset="445" date="Mon Apr 18 21:14:13 EDT 2022" docOffset="2832" starttimestamp="1650324058609" timestamp="6795255" />
  <Command __id="1963" _type="ShellCommand" date="Mon Apr 18 21:14:14 EDT 2022" starttimestamp="1650324058609" timestamp="6795718" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1965" _type="PauseCommand" date="Mon Apr 18 21:14:15 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6797159">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1441]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1964" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:14:15 EDT 2022" forward="true" matchWord="false" offset="2832" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="6797159" wrapSearch="false">
    <searchString><![CDATA[init]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1967" _type="PauseCommand" date="Mon Apr 18 21:14:17 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6798965">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1806]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1966" _type="ShellCommand" date="Mon Apr 18 21:14:17 EDT 2022" starttimestamp="1650324058609" timestamp="6798965" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1968" _type="MoveCaretCommand" caretOffset="5805" date="Mon Apr 18 21:14:17 EDT 2022" docOffset="8192" starttimestamp="1650324058609" timestamp="6799094" />
  <Command __id="1953" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:13:56 EDT 2022" docASTNodeCount="1790" docActiveCodeLength="13125" docExpressionCount="1241" docLength="14697" projectName="A6" starttimestamp="1650324058609" timestamp="6778378">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import readThread.ReadThreadInterface;
import readThread.ServerReadThread;
import server.remote.ServerRemoteInterfaceNIO;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ServerConfigure extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism, aProposalNumber);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	
	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	//@Override
	protected void initServer(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ServerArgsProcessor.getNIOServerPort(args);
			
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);
			
			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		//reader = new ServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		final String serverName = "server";
		readThread.setName(serverName);
		//Start thread and do some action
		readThread.start();
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
		
		
		
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		
		reader.notifyThread();
		
		//Fake call for autograder
		nioManager.write(aSocketChannel, aMessage, this);
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

	@Override
	public List<SocketChannel> getSocketList() {
		// TODO Auto-generated method stub
		return socketList;
	}

	@Override
	public SocketChannel getSocketChannel() {
		// TODO Auto-generated method stub
		return currentSocket;
	}
	
	//@Override
	protected void setTracingFake() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}


}
]]></snapshot>
  </Command>
  <Command __id="1970" _type="PauseCommand" date="Mon Apr 18 21:14:22 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="6804104">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5010]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="1969" _type="Delete" date="Mon Apr 18 21:14:22 EDT 2022" docASTNodeCount="1789" docActiveCodeLength="13118" docExpressionCount="1241" docLength="14690" endLine="245" length="7" offset="8185" repeat="7" startLine="245" starttimestamp="1650324058609" timestamp="6804104" timestamp2="6805098">
    <text><![CDATA[otected]]></text>
  </DocumentChange>
  <Command __id="1971" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:14:22 EDT 2022" starttimestamp="1650324058609" timestamp="6804113" />
  <Command __id="1973" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:14:22 EDT 2022" starttimestamp="1650324058609" timestamp="6804291" />
  <Command __id="1975" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:14:23 EDT 2022" starttimestamp="1650324058609" timestamp="6804441" />
  <Command __id="1977" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:14:23 EDT 2022" starttimestamp="1650324058609" timestamp="6804617" />
  <Command __id="1979" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:14:23 EDT 2022" starttimestamp="1650324058609" timestamp="6804777" />
  <Command __id="1981" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:14:23 EDT 2022" starttimestamp="1650324058609" timestamp="6804940" />
  <Command __id="1983" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:14:23 EDT 2022" starttimestamp="1650324058609" timestamp="6805098" />
  <Command __id="1985" _type="InsertStringCommand" date="Mon Apr 18 21:14:24 EDT 2022" starttimestamp="1650324058609" timestamp="6805409" timestamp2="6805409">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1987" _type="InsertStringCommand" date="Mon Apr 18 21:14:24 EDT 2022" starttimestamp="1650324058609" timestamp="6805571" timestamp2="6805571">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1989" _type="InsertStringCommand" date="Mon Apr 18 21:14:24 EDT 2022" starttimestamp="1650324058609" timestamp="6805687" timestamp2="6805687">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1991" _type="InsertStringCommand" date="Mon Apr 18 21:14:24 EDT 2022" starttimestamp="1650324058609" timestamp="6805871" timestamp2="6805871">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1993" _type="InsertStringCommand" date="Mon Apr 18 21:14:24 EDT 2022" starttimestamp="1650324058609" timestamp="6805984" timestamp2="6805984">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1995" _type="PauseCommand" date="Mon Apr 18 21:14:25 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6807046">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1062]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1994" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:14:25 EDT 2022" starttimestamp="1650324058609" timestamp="6807046" />
  <Command __id="1996" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:14:25 EDT 2022" starttimestamp="1650324058609" timestamp="6807149" />
  <Command __id="1997" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:14:25 EDT 2022" starttimestamp="1650324058609" timestamp="6807242" />
  <Command __id="1999" _type="PauseCommand" date="Mon Apr 18 21:14:31 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="6812806">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5564]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1998" _type="ShellCommand" date="Mon Apr 18 21:14:31 EDT 2022" starttimestamp="1650324058609" timestamp="6812806" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2000" _type="ShellCommand" date="Mon Apr 18 21:14:31 EDT 2022" starttimestamp="1650324058609" timestamp="6813017" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2006" _type="PauseCommand" date="Mon Apr 18 21:14:33 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6814786">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1704]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2005" _type="MoveCaretCommand" caretOffset="5851" date="Mon Apr 18 21:14:33 EDT 2022" docOffset="8238" starttimestamp="1650324058609" timestamp="6814786" />
  <Command __id="2007" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:14:34 EDT 2022" starttimestamp="1650324058609" timestamp="6815754" />
  <Command __id="2008" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:14:34 EDT 2022" starttimestamp="1650324058609" timestamp="6815830" />
  <Command __id="2009" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:14:34 EDT 2022" starttimestamp="1650324058609" timestamp="6815932" />
  <Command __id="2011" _type="PauseCommand" date="Mon Apr 18 21:14:46 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="6827754">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11822]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2010" _type="ShellCommand" date="Mon Apr 18 21:14:46 EDT 2022" starttimestamp="1650324058609" timestamp="6827754" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2013" _type="PauseCommand" date="Mon Apr 18 21:14:48 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6830333">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2579]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2012" _type="ConsoleOutput" date="Mon Apr 18 21:14:48 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6830333" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@70c2f744 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6InterfaceAsType@70c2f744 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2015" _type="PauseCommand" date="Mon Apr 18 21:14:50 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6831646">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1313]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2014" _type="ConsoleOutput" date="Mon Apr 18 21:14:50 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6831646" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@2ade0727 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6"), Diff(DELETE,"InterfaceAsType@70c2f744"), Diff(INSERT,"PublicMethodsOverride@2ade0727"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2017" _type="PauseCommand" date="Mon Apr 18 21:14:51 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6833134">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1488]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2016" _type="ShellCommand" date="Mon Apr 18 21:14:51 EDT 2022" starttimestamp="1650324058609" timestamp="6833134" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1984" _type="Insert" date="Mon Apr 18 21:14:24 EDT 2022" docASTNodeCount="1790" docActiveCodeLength="13123" docExpressionCount="1241" docLength="14695" length="5" offset="8185" repeat="5" starttimestamp="1650324058609" timestamp="6805402" timestamp2="6805977">
    <text><![CDATA[ivate]]></text>
  </DocumentChange>
  <DocumentChange __id="2001" _type="Delete" date="Mon Apr 18 21:14:31 EDT 2022" docASTNodeCount="1789" docActiveCodeLength="13113" docExpressionCount="1241" docLength="14685" endLine="245" length="10" offset="8180" repeat="2" startLine="244" starttimestamp="1650324058609" timestamp="6813064" timestamp2="6813076">
    <text><![CDATA[
	private]]></text>
  </DocumentChange>
  <DocumentChange __id="2003" _type="Insert" date="Mon Apr 18 21:14:31 EDT 2022" docASTNodeCount="1790" docActiveCodeLength="13125" docExpressionCount="1241" docLength="14697" length="12" offset="8180" repeat="2" starttimestamp="1650324058609" timestamp="6813082" timestamp2="6813087">
    <text><![CDATA[
	protected]]></text>
  </DocumentChange>
  <Command __id="2019" _type="PauseCommand" date="Mon Apr 18 21:15:05 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="6847053">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13919]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2020" _type="MoveCaretCommand" caretOffset="5139" date="Mon Apr 18 21:15:06 EDT 2022" docOffset="7565" starttimestamp="1650324058609" timestamp="6847983" />
  <Command __id="2022" _type="PauseCommand" date="Mon Apr 18 21:15:08 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6849683">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1700]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2021" _type="MoveCaretCommand" caretOffset="5971" date="Mon Apr 18 21:15:08 EDT 2022" docOffset="8397" starttimestamp="1650324058609" timestamp="6849683" />
  <Command __id="2024" _type="PauseCommand" date="Mon Apr 18 21:15:09 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6850702">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1019]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2023" _type="MoveCaretCommand" caretOffset="5882" date="Mon Apr 18 21:15:09 EDT 2022" docOffset="8308" starttimestamp="1650324058609" timestamp="6850702" />
  <Command __id="2026" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:15:09 EDT 2022" starttimestamp="1650324058609" timestamp="6851179" />
  <Command __id="2028" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:15:09 EDT 2022" starttimestamp="1650324058609" timestamp="6851300" />
  <Command __id="2030" _type="PauseCommand" date="Mon Apr 18 21:15:10 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6852352">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1052]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2029" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:15:10 EDT 2022" starttimestamp="1650324058609" timestamp="6852352" />
  <Command __id="2031" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:15:11 EDT 2022" starttimestamp="1650324058609" timestamp="6852445" />
  <Command __id="2032" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:15:11 EDT 2022" starttimestamp="1650324058609" timestamp="6852507" />
  <Command __id="2034" _type="PauseCommand" date="Mon Apr 18 21:15:19 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="6860517">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8010]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2033" _type="ShellCommand" date="Mon Apr 18 21:15:19 EDT 2022" starttimestamp="1650324058609" timestamp="6860517" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2035" _type="ShellCommand" date="Mon Apr 18 21:15:19 EDT 2022" starttimestamp="1650324058609" timestamp="6860613" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2041" _type="SelectTextCommand" caretOffset="391" date="Mon Apr 18 21:15:20 EDT 2022" end="391" start="383" starttimestamp="1650324058609" timestamp="6861454" />
  <Command __id="2043" _type="PauseCommand" date="Mon Apr 18 21:15:21 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6863045">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1591]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2042" _type="MoveCaretCommand" caretOffset="349" date="Mon Apr 18 21:15:21 EDT 2022" docOffset="726" starttimestamp="1650324058609" timestamp="6863045" />
  <Command __id="2045" _type="PauseCommand" date="Mon Apr 18 21:15:22 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6864150">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1105]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2044" _type="ShellCommand" date="Mon Apr 18 21:15:22 EDT 2022" starttimestamp="1650324058609" timestamp="6864150" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2047" _type="PauseCommand" date="Mon Apr 18 21:15:24 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6865738">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1588]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2018" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:15:05 EDT 2022" docASTNodeCount="1726" docActiveCodeLength="13037" docExpressionCount="1207" docLength="14629" projectName="A6" starttimestamp="1650324058609" timestamp="6847053">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	public void atomicBroadcast(boolean fake) {
		return;
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	//@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand1(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int aProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	//@Override
	public void nioInit(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		//reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2025" _type="Delete" date="Mon Apr 18 21:15:09 EDT 2022" docASTNodeCount="1728" docActiveCodeLength="13046" docExpressionCount="1209" docLength="14627" endLine="223" length="2" offset="8306" repeat="2" startLine="223" starttimestamp="1650324058609" timestamp="6851165" timestamp2="6851300">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2036" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:15:19 EDT 2022" docASTNodeCount="86" docActiveCodeLength="731" docExpressionCount="63" docLength="731" projectName="A6" starttimestamp="1650324058609" timestamp="6861004">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import stringProcessors.HalloweenCommandProcessor;

public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	HalloweenCommandProcessor getCommandProcessor();

	void setFactories();

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2037" _type="Insert" date="Mon Apr 18 21:15:19 EDT 2022" docASTNodeCount="93" docActiveCodeLength="777" docExpressionCount="66" docLength="777" length="46" offset="724" repeat="4" starttimestamp="1650324058609" timestamp="6861041" timestamp2="6861045">
    <text><![CDATA[

	void simulationCommand1(String aCommand);]]></text>
  </DocumentChange>
  <Command __id="2046" _type="ShellCommand" date="Mon Apr 18 21:15:24 EDT 2022" starttimestamp="1650324058609" timestamp="6865738" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2048" _type="MoveCaretCommand" caretOffset="349" date="Mon Apr 18 21:15:24 EDT 2022" docOffset="726" starttimestamp="1650324058609" timestamp="6865814" />
  <Command __id="2050" _type="InsertStringCommand" date="Mon Apr 18 21:15:24 EDT 2022" starttimestamp="1650324058609" timestamp="6866162" timestamp2="6866162">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2052" _type="InsertStringCommand" date="Mon Apr 18 21:15:25 EDT 2022" starttimestamp="1650324058609" timestamp="6866872" timestamp2="6866872">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2054" _type="InsertStringCommand" date="Mon Apr 18 21:15:25 EDT 2022" starttimestamp="1650324058609" timestamp="6867001" timestamp2="6867001">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2056" _type="InsertStringCommand" date="Mon Apr 18 21:15:25 EDT 2022" starttimestamp="1650324058609" timestamp="6867336" timestamp2="6867336">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="2058" _type="InsertStringCommand" date="Mon Apr 18 21:15:26 EDT 2022" starttimestamp="1650324058609" timestamp="6867482" timestamp2="6867482">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2060" _type="InsertStringCommand" date="Mon Apr 18 21:15:26 EDT 2022" starttimestamp="1650324058609" timestamp="6867581" timestamp2="6867581">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2062" _type="InsertStringCommand" date="Mon Apr 18 21:15:26 EDT 2022" starttimestamp="1650324058609" timestamp="6867711" timestamp2="6867711">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2065" _type="PauseCommand" date="Mon Apr 18 21:15:28 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6869637">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1926]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2064" _type="InsertStringCommand" date="Mon Apr 18 21:15:28 EDT 2022" starttimestamp="1650324058609" timestamp="6869637" timestamp2="6869637">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="2067" _type="InsertStringCommand" date="Mon Apr 18 21:15:28 EDT 2022" starttimestamp="1650324058609" timestamp="6869885" timestamp2="6869885">
    <data><![CDATA[6]]></data>
  </Command>
  <Command __id="2069" _type="InsertStringCommand" date="Mon Apr 18 21:15:29 EDT 2022" starttimestamp="1650324058609" timestamp="6870651" timestamp2="6870651">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2071" _type="InsertStringCommand" date="Mon Apr 18 21:15:30 EDT 2022" starttimestamp="1650324058609" timestamp="6871542" timestamp2="6871542">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2073" _type="InsertStringCommand" date="Mon Apr 18 21:15:30 EDT 2022" starttimestamp="1650324058609" timestamp="6871667" timestamp2="6871667">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2075" _type="InsertStringCommand" date="Mon Apr 18 21:15:30 EDT 2022" starttimestamp="1650324058609" timestamp="6871764" timestamp2="6871764">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2077" _type="InsertStringCommand" date="Mon Apr 18 21:15:30 EDT 2022" starttimestamp="1650324058609" timestamp="6871958" timestamp2="6871958">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2079" _type="InsertStringCommand" date="Mon Apr 18 21:15:30 EDT 2022" starttimestamp="1650324058609" timestamp="6872058" timestamp2="6872058">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="2081" _type="InsertStringCommand" date="Mon Apr 18 21:15:30 EDT 2022" starttimestamp="1650324058609" timestamp="6872149" timestamp2="6872149">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2083" _type="PauseCommand" date="Mon Apr 18 21:15:55 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="6896503">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[24354]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2082" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:15:55 EDT 2022" starttimestamp="1650324058609" timestamp="6896503" />
  <Command __id="2084" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:15:55 EDT 2022" starttimestamp="1650324058609" timestamp="6896591" />
  <Command __id="2085" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:15:55 EDT 2022" starttimestamp="1650324058609" timestamp="6896686" />
  <DocumentChange __id="2049" _type="Insert" date="Mon Apr 18 21:15:24 EDT 2022" docASTNodeCount="93" docActiveCodeLength="780" docExpressionCount="66" docLength="795" length="18" offset="726" repeat="16" starttimestamp="1650324058609" timestamp="6866162" timestamp2="6872149">
    <text><![CDATA[
	//For A6 checks]]></text>
  </DocumentChange>
  <Command __id="2087" _type="PauseCommand" date="Mon Apr 18 21:15:58 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6899454">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2768]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2088" _type="SelectTextCommand" caretOffset="2556" date="Mon Apr 18 21:15:58 EDT 2022" end="2600" start="2556" starttimestamp="1650324058609" timestamp="6899856" />
  <Command __id="2090" _type="PauseCommand" date="Mon Apr 18 21:16:03 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="6905245">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5389]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2089" _type="ShellCommand" date="Mon Apr 18 21:16:03 EDT 2022" starttimestamp="1650324058609" timestamp="6905245" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2091" _type="ShellCommand" date="Mon Apr 18 21:16:04 EDT 2022" starttimestamp="1650324058609" timestamp="6905457" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2097" _type="PauseCommand" date="Mon Apr 18 21:16:05 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="6907329">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1778]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2096" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:16:05 EDT 2022" starttimestamp="1650324058609" timestamp="6907329" />
  <Command __id="2098" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:16:06 EDT 2022" starttimestamp="1650324058609" timestamp="6907429" />
  <Command __id="2099" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:16:06 EDT 2022" starttimestamp="1650324058609" timestamp="6907493" />
  <Command __id="2101" _type="PauseCommand" date="Mon Apr 18 21:16:08 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6910299">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2806]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2100" _type="ShellCommand" date="Mon Apr 18 21:16:08 EDT 2022" starttimestamp="1650324058609" timestamp="6910299" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2103" _type="PauseCommand" date="Mon Apr 18 21:16:12 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6913529">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3230]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2102" _type="ShellCommand" date="Mon Apr 18 21:16:12 EDT 2022" starttimestamp="1650324058609" timestamp="6913529" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2104" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:16:12 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="6913726" type="Debug" />
  <Command __id="2105" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 21:16:12 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="6913726" type="Run" />
  <Command __id="2106" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:16:12 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="6913726" type="Debug" />
  <Command __id="2107" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 21:16:12 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="6913726" type="Run" />
  <Command __id="2109" _type="PauseCommand" date="Mon Apr 18 21:16:14 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6916130">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2404]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2116" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 21:16:19 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="6921120" type="Run" />
  <Command __id="2118" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 21:16:19 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="6921120" type="Run" />
  <Command __id="2119" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:16:19 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="6921338" type="Run" />
  <Command __id="2120" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:16:19 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="6921371" type="Run" />
  <Command __id="2121" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:16:19 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="6921371" type="Run" />
  <Command __id="2123" _type="PauseCommand" date="Mon Apr 18 21:16:23 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6924576">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3205]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2124" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:16:28 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="6929609" type="Run" />
  <Command __id="2126" _type="ConsoleOutput" date="Mon Apr 18 21:16:28 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6929723" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 21:16:28 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@2ade0727 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 21:16:28 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2128" _type="PauseCommand" date="Mon Apr 18 21:16:32 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6933845">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4122]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2127" _type="ConsoleOutput" date="Mon Apr 18 21:16:32 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6933845" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 21:16:32 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 21:16:32 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 18 21:16:32 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":Mon Apr 18 21:16:28"), Diff(INSERT," Mon Apr 18 21:16:32 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 18 21:16:32 EDT 2022¶End O(n2) inter- and intra class method calls:Mon Apr 18 21:16:32"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2130" _type="PauseCommand" date="Mon Apr 18 21:16:34 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="6936037">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2192]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2129" _type="ConsoleOutput" date="Mon Apr 18 21:16:34 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6936037" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 21:16:34 EDT 2022
Generating checks:Mon Apr 18 21:16:34 EDT 2022
Finished Generating checks:Mon Apr 18 21:16:34 EDT 2022
Generating externals:Mon Apr 18 21:16:34 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 18 21:16:3"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 18 21:16:34 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 18 21:16:3"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 18 21:16:3"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2131" _type="ConsoleOutput" date="Mon Apr 18 21:16:35 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6936931" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 21:16:35 EDT 2022
Test execution time (ms):7261
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Apr 18 21:16:34 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 21:16:3"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Apr 18 21:16:34 EDT 2022¶Generating externals:Mon Apr 18 21:16:34 EDT 2022"), Diff(INSERT,"Test execution time (ms):7261"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2132" _type="ConsoleOutput" date="Mon Apr 18 21:16:35 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6936982" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):45
Test execution time (ms):14
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 21:16:35 EDT 2022"), Diff(INSERT,"Test execution time (ms):45"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"726"), Diff(EQUAL,"1"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2133" _type="ConsoleOutput" date="Mon Apr 18 21:16:35 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6937037" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):12
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):45¶"), Diff(EQUAL,"Test execution time (ms):1"), Diff(DELETE,"4"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2134" _type="ConsoleOutput" date="Mon Apr 18 21:16:35 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6937118" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (24)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (193)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (94)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (101)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):12"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (24)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (193)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (101)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2136" _type="PauseCommand" date="Mon Apr 18 21:17:11 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="6972828">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[35710]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2135" _type="ConsoleOutput" date="Mon Apr 18 21:17:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6972828" type="ConsoleOutput">
    <outputString><![CDATA[A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):17
Test execution time (ms):17
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (24)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (193)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (101)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):17¶Test execution time (ms):17"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2137" _type="ConsoleOutput" date="Mon Apr 18 21:17:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6972885" type="ConsoleOutput">
    <outputString><![CDATA[A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286

Test execution time (ms):21

A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428
Test execution time (ms):29
Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A6"), Diff(DELETE,"NoCheckstyleWarnings"), Diff(INSERT,"PublicMethodsOverride"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"Warn"), Diff(INSERT,"See console trace about l"), Diff(EQUAL,"in"), Diff(DELETE,"g"), Diff(INSERT,"e"), Diff(EQUAL,"s f"), Diff(DELETE,"ound in checkstyle text, see traced console output%0.0¶"), Diff(INSERT,"ailing  this check%0.9285714285714286¶¶Test execution time (ms):21¶¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"17"), Diff(INSERT,"29"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"17"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2138" _type="ConsoleOutput" date="Mon Apr 18 21:17:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="6972948" type="ConsoleOutput">
    <outputString><![CDATA[
A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882
Test execution time (ms):22
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286¶¶Test execution time (ms):21¶¶A6InterfaceAsType"), Diff(INSERT,"¶A6AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9428571428571428"), Diff(INSERT,"23529411764705882"), Diff(EQUAL,"¶Test execution time (ms):2"), Diff(DELETE,"9¶Test execution time (ms):8"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2140" _type="PauseCommand" date="Mon Apr 18 21:17:47 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="7008819">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[35871]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2139" _type="ConsoleOutput" date="Mon Apr 18 21:17:47 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="7008819" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@3f255246 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882¶Test execution time (ms):22"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@3f255246 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2141" _type="ConsoleOutput" date="Mon Apr 18 21:17:48 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="7009667" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@3f255246 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@3f255246 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2143" _type="PauseCommand" date="Mon Apr 18 21:17:53 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="7015015">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5348]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2142" _type="ConsoleOutput" date="Mon Apr 18 21:17:53 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="7015015" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@3f255246 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@3f255246 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2145" _type="PauseCommand" date="Mon Apr 18 21:18:00 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="7021858">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6843]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2144" _type="ShellCommand" date="Mon Apr 18 21:18:00 EDT 2022" starttimestamp="1650324058609" timestamp="7021858" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2086" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:15:58 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" projectName="A6" starttimestamp="1650324058609" timestamp="6899454">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2092" _type="Insert" date="Mon Apr 18 21:16:04 EDT 2022" docASTNodeCount="772" docActiveCodeLength="5519" docExpressionCount="562" docLength="6665" length="112" offset="6540" repeat="4" starttimestamp="1650324058609" timestamp="6905551" timestamp2="6905562">
    <text><![CDATA[

	@Override
	public void simulationCommand1(String aCommand) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="2147" _type="PauseCommand" date="Mon Apr 18 21:20:00 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="7141667">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[119809]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2148" _type="MoveCaretCommand" caretOffset="5880" date="Mon Apr 18 21:20:00 EDT 2022" docOffset="8306" starttimestamp="1650324058609" timestamp="7142068" />
  <Command __id="2151" _type="PauseCommand" date="Mon Apr 18 21:20:03 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="7144432">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2364]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2150" _type="ShellCommand" date="Mon Apr 18 21:20:03 EDT 2022" starttimestamp="1650324058609" timestamp="7144432" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2153" _type="PauseCommand" date="Mon Apr 18 21:20:05 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="7147084">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2652]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2152" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:20:05 EDT 2022" forward="true" matchWord="false" offset="8306" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="7147084" wrapSearch="false">
    <searchString><![CDATA[nioInit]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2155" _type="PauseCommand" date="Mon Apr 18 21:20:07 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="7149211">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2127]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2154" _type="ShellCommand" date="Mon Apr 18 21:20:07 EDT 2022" starttimestamp="1650324058609" timestamp="7149211" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2156" _type="MoveCaretCommand" caretOffset="8636" date="Mon Apr 18 21:20:07 EDT 2022" docOffset="11062" starttimestamp="1650324058609" timestamp="7149331" />
  <Command __id="2158" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:20:08 EDT 2022" starttimestamp="1650324058609" timestamp="7149730" />
  <Command __id="2160" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:20:08 EDT 2022" starttimestamp="1650324058609" timestamp="7149868" />
  <Command __id="2162" _type="PauseCommand" date="Mon Apr 18 21:20:09 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="7151187">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1319]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2167" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:20:11 EDT 2022" starttimestamp="1650324058609" timestamp="7153107" />
  <Command __id="2169" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:20:11 EDT 2022" starttimestamp="1650324058609" timestamp="7153111" />
  <Command __id="2171" _type="PauseCommand" date="Mon Apr 18 21:20:16 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="7158366">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5255]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2170" _type="ShellCommand" date="Mon Apr 18 21:20:16 EDT 2022" starttimestamp="1650324058609" timestamp="7158366" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2172" _type="ShellCommand" date="Mon Apr 18 21:20:17 EDT 2022" starttimestamp="1650324058609" timestamp="7158601" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2178" _type="SelectTextCommand" caretOffset="442" date="Mon Apr 18 21:20:17 EDT 2022" end="442" start="438" starttimestamp="1650324058609" timestamp="7159132" />
  <Command __id="2179" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:20:18 EDT 2022" starttimestamp="1650324058609" timestamp="7159913" />
  <Command __id="2180" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:20:18 EDT 2022" starttimestamp="1650324058609" timestamp="7159949" />
  <Command __id="2181" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:20:18 EDT 2022" starttimestamp="1650324058609" timestamp="7160071" />
  <Command __id="2183" _type="PauseCommand" date="Mon Apr 18 21:20:20 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="7161442">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1371]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2182" _type="MoveCaretCommand" caretOffset="413" date="Mon Apr 18 21:20:20 EDT 2022" docOffset="790" starttimestamp="1650324058609" timestamp="7161442" />
  <Command __id="2185" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:20:20 EDT 2022" starttimestamp="1650324058609" timestamp="7161849" />
  <Command __id="2186" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:20:21 EDT 2022" starttimestamp="1650324058609" timestamp="7162492" />
  <Command __id="2187" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:20:21 EDT 2022" starttimestamp="1650324058609" timestamp="7162580" />
  <Command __id="2188" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:20:21 EDT 2022" starttimestamp="1650324058609" timestamp="7162612" />
  <Command __id="2146" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:20:00 EDT 2022" docASTNodeCount="1728" docActiveCodeLength="13046" docExpressionCount="1209" docLength="14627" projectName="A6" starttimestamp="1650324058609" timestamp="7141667">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	public void atomicBroadcast(boolean fake) {¶		return;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	"), Diff(DELETE,"//"), Diff(EQUAL,"@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand1(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int aProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	//@Override¶	public void nioInit(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		//reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	public void atomicBroadcast(boolean fake) {
		return;
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand1(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int aProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	//@Override
	public void nioInit(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		//reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2157" _type="Delete" date="Mon Apr 18 21:20:08 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13055" docExpressionCount="1211" docLength="14625" endLine="305" length="2" offset="11060" repeat="2" startLine="305" starttimestamp="1650324058609" timestamp="7149720" timestamp2="7149864">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2173" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:20:17 EDT 2022" docASTNodeCount="93" docActiveCodeLength="780" docExpressionCount="66" docLength="795" projectName="A6" starttimestamp="1650324058609" timestamp="7158740">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.nio.ByteBuffer;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import stringProcessors.HalloweenCommandProcessor;¶¶public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶¶	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();¶¶	HalloweenCommandProcessor getCommandProcessor();¶¶	void setFactories();¶¶"), Diff(INSERT,"	//For A6 checks¶	void simulationCommand1(String aCommand);¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import stringProcessors.HalloweenCommandProcessor;

public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	HalloweenCommandProcessor getCommandProcessor();

	void setFactories();

	//For A6 checks
	void simulationCommand1(String aCommand);

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2174" _type="Insert" date="Mon Apr 18 21:20:17 EDT 2022" docASTNodeCount="101" docActiveCodeLength="813" docExpressionCount="69" docLength="828" length="33" offset="788" repeat="4" starttimestamp="1650324058609" timestamp="7158773" timestamp2="7158781">
    <text><![CDATA[

	void nioInit(String[] args);]]></text>
  </DocumentChange>
  <DocumentChange __id="2184" _type="Delete" date="Mon Apr 18 21:20:20 EDT 2022" docASTNodeCount="101" docActiveCodeLength="811" docExpressionCount="69" docLength="826" endLine="22" length="2" offset="788" startLine="21" starttimestamp="1650324058609" timestamp="7161833">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="2190" _type="PauseCommand" date="Mon Apr 18 21:20:23 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="7164561">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1949]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2191" _type="SelectTextCommand" caretOffset="2556" date="Mon Apr 18 21:20:23 EDT 2022" end="2600" start="2556" starttimestamp="1650324058609" timestamp="7165042" />
  <Command __id="2193" _type="PauseCommand" date="Mon Apr 18 21:20:49 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="7190550">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[25508]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2192" _type="ShellCommand" date="Mon Apr 18 21:20:49 EDT 2022" starttimestamp="1650324058609" timestamp="7190550" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2194" _type="ShellCommand" date="Mon Apr 18 21:20:49 EDT 2022" starttimestamp="1650324058609" timestamp="7190827" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2200" _type="PauseCommand" date="Mon Apr 18 21:20:51 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="7192690">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1833]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2199" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:20:51 EDT 2022" starttimestamp="1650324058609" timestamp="7192690" />
  <Command __id="2201" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:20:51 EDT 2022" starttimestamp="1650324058609" timestamp="7192787" />
  <Command __id="2202" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:20:51 EDT 2022" starttimestamp="1650324058609" timestamp="7192885" />
  <Command __id="2204" _type="PauseCommand" date="Mon Apr 18 21:20:56 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="7197957">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5072]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2203" _type="ShellCommand" date="Mon Apr 18 21:20:56 EDT 2022" starttimestamp="1650324058609" timestamp="7197957" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2206" _type="PauseCommand" date="Mon Apr 18 21:20:57 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="7199304">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1347]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2211" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 21:21:01 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="7202522" type="Run" />
  <Command __id="2213" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 21:21:01 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="7202522" type="Run" />
  <Command __id="2214" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:21:01 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="7202738" type="Run" />
  <Command __id="2215" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:21:01 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="7202760" type="Run" />
  <Command __id="2216" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:21:01 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="7202767" type="Run" />
  <Command __id="2218" _type="PauseCommand" date="Mon Apr 18 21:21:05 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="7206701">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3934]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2219" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:21:08 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="7209417" type="Run" />
  <Command __id="2221" _type="ConsoleOutput" date="Mon Apr 18 21:21:08 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="7209528" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 21:21:08 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6PublicMethodsOverride@3f255246 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 21:21:08 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2223" _type="PauseCommand" date="Mon Apr 18 21:21:12 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="7213620">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4092]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2222" _type="ConsoleOutput" date="Mon Apr 18 21:21:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="7213620" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 21:21:12 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 21:21:12 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Mon Apr 18 21:21:"), Diff(DELETE,"08"), Diff(INSERT,"12 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 18 21:21:12"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2224" _type="ConsoleOutput" date="Mon Apr 18 21:21:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="7213740" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 21:21:12 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 21:21:12 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 21:21:12 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2226" _type="PauseCommand" date="Mon Apr 18 21:21:14 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="7215985">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2245]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2225" _type="ConsoleOutput" date="Mon Apr 18 21:21:14 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="7215985" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 21:21:14 EDT 2022
Generating checks:Mon Apr 18 21:21:14 EDT 2022
Finished Generating checks:Mon Apr 18 21:21:14 EDT 2022
Generating externals:Mon Apr 18 21:21:14 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 21:21:14 EDT 2022¶Generating checks:Mon Apr 18 21:21:14 EDT 2022¶Finished Generating checks:Mon Apr 18 21:21:14 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Mon Apr 18 21:21:1"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2227" _type="ConsoleOutput" date="Mon Apr 18 21:21:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="7216821" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 21:21:15 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):7341
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 18 21:21:1"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 18 21:21:14 EDT 2022¶Finished Generat"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found "), Diff(EQUAL,"in"), Diff(DELETE,"g"), Diff(EQUAL," checks"), Diff(DELETE,":Mon Apr 18 21:21:14 EDT 2022¶Generating externals:Mon Apr 18 21:21:14 EDT 2022"), Diff(INSERT,"tyle text, see traced console output%0.0¶¶Test execution time (ms):7341"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2228" _type="ConsoleOutput" date="Mon Apr 18 21:21:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="7216909" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):40
Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 21:21:15 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶"), Diff(INSERT,"Test execution time (ms):40"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"7341"), Diff(INSERT,"25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2229" _type="ConsoleOutput" date="Mon Apr 18 21:21:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="7216978" type="ConsoleOutput">
    <outputString><![CDATA[
A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428
Test execution time (ms):34
Test execution time (ms):21
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(INSERT,"3"), Diff(EQUAL,"4"), Diff(DELETE,"0"), Diff(EQUAL,"¶Test execution time (ms):2"), Diff(DELETE,"5"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2230" _type="ConsoleOutput" date="Mon Apr 18 21:21:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="7217041" type="ConsoleOutput">
    <outputString><![CDATA[A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882

Test execution time (ms):23
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶A6InterfaceAsType"), Diff(INSERT,"A6AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9428571428571428¶Test execution time (ms):34"), Diff(INSERT,"23529411764705882¶"), Diff(EQUAL,"¶Test execution time (ms):2"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2232" _type="PauseCommand" date="Mon Apr 18 21:37:54 EDT 2022" range="10m-20m" starttimestamp="1650324058609" timestamp="8215537">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[998496]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2231" _type="ConsoleOutput" date="Mon Apr 18 21:37:54 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8215537" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6AccessModifiersMatched@63d2349f . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882¶¶Test execution time (ms):23"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6AccessModifiersMatched@63d2349f . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2234" _type="PauseCommand" date="Mon Apr 18 21:37:58 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8220239">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4702]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2233" _type="ShellCommand" date="Mon Apr 18 21:37:58 EDT 2022" starttimestamp="1650324058609" timestamp="8220239" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2189" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:20:23 EDT 2022" docASTNodeCount="772" docActiveCodeLength="5519" docExpressionCount="562" docLength="6665" projectName="A6" starttimestamp="1650324058609" timestamp="7164561">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}"), Diff(INSERT,"¶¶	@Override¶	public void simulationCommand1(String aCommand) {¶		// TODO Auto-generated method stub¶		¶	}"), Diff(EQUAL,"¶		¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	@Override
	public void simulationCommand1(String aCommand) {
		// TODO Auto-generated method stub
		
	}
		


}
]]></snapshot>
  </Command>
  <DocumentChange __id="2195" _type="Insert" date="Mon Apr 18 21:20:49 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5584" docExpressionCount="567" docLength="6764" length="99" offset="6652" repeat="4" starttimestamp="1650324058609" timestamp="7190857" timestamp2="7190865">
    <text><![CDATA[

	@Override
	public void nioInit(String[] args) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="2236" _type="PauseCommand" date="Mon Apr 18 21:38:09 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="8231177">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10938]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2237" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 18 21:38:10 EDT 2022" docOffset="0" starttimestamp="1650324058609" timestamp="8231744" />
  <Command __id="2238" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:38:11 EDT 2022" starttimestamp="1650324058609" timestamp="8232464" />
  <Command __id="2239" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:38:11 EDT 2022" starttimestamp="1650324058609" timestamp="8232475" />
  <Command __id="2235" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:38:09 EDT 2022" docASTNodeCount="93" docActiveCodeLength="677" docExpressionCount="67" docLength="677" projectName="A6" starttimestamp="1650324058609" timestamp="8231177">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;


import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

public interface ServerRemoteInterfaceNIO extends SocketChannelAcceptListener, SocketChannelReadListener, SocketChannelWriteListener {

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	List<SocketChannel> getSocketList();

	SocketChannel getSocketChannel();

	void setFactories();

}]]></snapshot>
  </Command>
  <Command __id="2241" _type="PauseCommand" date="Mon Apr 18 21:38:20 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8241639">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9164]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2242" _type="MoveCaretCommand" caretOffset="5851" date="Mon Apr 18 21:38:20 EDT 2022" docOffset="8238" starttimestamp="1650324058609" timestamp="8242040" />
  <Command __id="2244" _type="PauseCommand" date="Mon Apr 18 21:38:28 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8249867">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7827]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2243" _type="MoveCaretCommand" caretOffset="6141" date="Mon Apr 18 21:38:28 EDT 2022" docOffset="8528" starttimestamp="1650324058609" timestamp="8249867" />
  <Command __id="2247" _type="PauseCommand" date="Mon Apr 18 21:38:30 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8252344">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2477]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2246" _type="ShellCommand" date="Mon Apr 18 21:38:30 EDT 2022" starttimestamp="1650324058609" timestamp="8252344" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2249" _type="PauseCommand" date="Mon Apr 18 21:38:34 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8256228">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3884]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2248" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:38:34 EDT 2022" forward="true" matchWord="false" offset="8528" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8256228" wrapSearch="false">
    <searchString><![CDATA[setTracingFake]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2251" _type="PauseCommand" date="Mon Apr 18 21:38:37 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8258732">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2504]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2250" _type="ShellCommand" date="Mon Apr 18 21:38:37 EDT 2022" starttimestamp="1650324058609" timestamp="8258732" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2252" _type="SelectTextCommand" caretOffset="11516" date="Mon Apr 18 21:38:38 EDT 2022" end="11526" start="11516" starttimestamp="1650324058609" timestamp="8259535" />
  <Command __id="2254" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:38:38 EDT 2022" starttimestamp="1650324058609" timestamp="8259802" />
  <Command __id="2256" _type="PauseCommand" date="Mon Apr 18 21:38:39 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8260919">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1117]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2255" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:38:39 EDT 2022" starttimestamp="1650324058609" timestamp="8260919" />
  <Command __id="2257" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:38:39 EDT 2022" starttimestamp="1650324058609" timestamp="8260991" />
  <Command __id="2258" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:38:39 EDT 2022" starttimestamp="1650324058609" timestamp="8261059" />
  <Command __id="2259" _type="ShellCommand" date="Mon Apr 18 21:38:40 EDT 2022" starttimestamp="1650324058609" timestamp="8261740" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2260" _type="ShellCommand" date="Mon Apr 18 21:38:40 EDT 2022" starttimestamp="1650324058609" timestamp="8261831" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2262" _type="PauseCommand" date="Mon Apr 18 21:38:45 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8267259">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5428]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2261" _type="MoveCaretCommand" caretOffset="11651" date="Mon Apr 18 21:38:45 EDT 2022" docOffset="14038" starttimestamp="1650324058609" timestamp="8267259" />
  <Command __id="2264" _type="ShellCommand" date="Mon Apr 18 21:38:46 EDT 2022" starttimestamp="1650324058609" timestamp="8267784" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2266" _type="PauseCommand" date="Mon Apr 18 21:38:48 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8270028">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2244]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2265" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:38:48 EDT 2022" forward="true" matchWord="false" offset="14038" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8270028" wrapSearch="false">
    <searchString><![CDATA[setTracing]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2268" _type="PauseCommand" date="Mon Apr 18 21:38:50 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8271705">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1677]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2267" _type="ShellCommand" date="Mon Apr 18 21:38:50 EDT 2022" starttimestamp="1650324058609" timestamp="8271705" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2269" _type="SelectTextCommand" caretOffset="5259" date="Mon Apr 18 21:38:51 EDT 2022" end="5267" start="5259" starttimestamp="1650324058609" timestamp="8272669" />
  <Command __id="2271" _type="InsertStringCommand" date="Mon Apr 18 21:38:51 EDT 2022" starttimestamp="1650324058609" timestamp="8272990" timestamp2="8272990">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2273" _type="InsertStringCommand" date="Mon Apr 18 21:38:51 EDT 2022" starttimestamp="1650324058609" timestamp="8273125" timestamp2="8273125">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2275" _type="InsertStringCommand" date="Mon Apr 18 21:38:51 EDT 2022" starttimestamp="1650324058609" timestamp="8273203" timestamp2="8273203">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2277" _type="InsertStringCommand" date="Mon Apr 18 21:38:51 EDT 2022" starttimestamp="1650324058609" timestamp="8273356" timestamp2="8273356">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2279" _type="InsertStringCommand" date="Mon Apr 18 21:38:52 EDT 2022" starttimestamp="1650324058609" timestamp="8273472" timestamp2="8273472">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2281" _type="InsertStringCommand" date="Mon Apr 18 21:38:52 EDT 2022" starttimestamp="1650324058609" timestamp="8273864" timestamp2="8273864">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2282" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:38:53 EDT 2022" starttimestamp="1650324058609" timestamp="8274415" />
  <Command __id="2283" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:38:53 EDT 2022" starttimestamp="1650324058609" timestamp="8274502" />
  <Command __id="2284" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:38:53 EDT 2022" starttimestamp="1650324058609" timestamp="8274558" />
  <Command __id="2286" _type="PauseCommand" date="Mon Apr 18 21:38:54 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8275912">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1354]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2285" _type="ShellCommand" date="Mon Apr 18 21:38:54 EDT 2022" starttimestamp="1650324058609" timestamp="8275912" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2287" _type="ShellCommand" date="Mon Apr 18 21:38:54 EDT 2022" starttimestamp="1650324058609" timestamp="8276102" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2240" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:38:20 EDT 2022" docASTNodeCount="1790" docActiveCodeLength="13125" docExpressionCount="1241" docLength="14697" projectName="A6" starttimestamp="1650324058609" timestamp="8241639">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import server.remote.ServerRemoteInterfaceNIO;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ServerConfigure extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism, aProposalNumber);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	//@Override¶	protected void initServer(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		//reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		final String serverName = "server";¶		readThread.setName(serverName);¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶		¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		reader.notifyThread();¶		¶		//Fake call for autograder¶		nioManager.write(aSocketChannel, aMessage, this);¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	//@Override¶	protected void setTracingFake() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2253" _type="Delete" date="Mon Apr 18 21:38:38 EDT 2022" docASTNodeCount="1789" docActiveCodeLength="13115" docExpressionCount="1241" docLength="14687" endLine="443" length="10" offset="13903" startLine="443" starttimestamp="1650324058609" timestamp="8259800">
    <text><![CDATA[protected ]]></text>
  </DocumentChange>
  <DocumentChange __id="2270" _type="Replace" date="Mon Apr 18 21:38:51 EDT 2022" docASTNodeCount="1789" docActiveCodeLength="13108" docExpressionCount="1242" docLength="14680" endLine="224" insertionLength="1" int_docASTNodeCount="1789" int_docActiveCodeLength="13107" int_docExpressionCount="1242" int_docLength="14679" length="8" offset="7646" startLine="224" starttimestamp="1650324058609" timestamp="8272981">
    <deletedText><![CDATA[otected ]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2272" _type="Insert" date="Mon Apr 18 21:38:51 EDT 2022" docASTNodeCount="1789" docActiveCodeLength="13113" docExpressionCount="1241" docLength="14685" length="5" offset="7647" repeat="5" starttimestamp="1650324058609" timestamp="8273121" timestamp2="8273856">
    <text><![CDATA[vate ]]></text>
  </DocumentChange>
  <Command __id="2289" _type="PauseCommand" date="Mon Apr 18 21:39:00 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8281757">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5655]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2290" _type="UndoCommand" date="Mon Apr 18 21:39:00 EDT 2022" starttimestamp="1650324058609" timestamp="8281781" />
  <DocumentChange __id="2288" _type="Delete" date="Mon Apr 18 21:39:00 EDT 2022" docASTNodeCount="1789" docActiveCodeLength="13108" docExpressionCount="1242" docLength="14680" endLine="224" length="5" offset="7647" startLine="224" starttimestamp="1650324058609" timestamp="8281757">
    <text><![CDATA[vate ]]></text>
  </DocumentChange>
  <Command __id="2292" _type="PauseCommand" date="Mon Apr 18 21:39:01 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8283156">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1375]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2293" _type="UndoCommand" date="Mon Apr 18 21:39:01 EDT 2022" starttimestamp="1650324058609" timestamp="8283167" />
  <Command __id="2295" _type="PauseCommand" date="Mon Apr 18 21:39:03 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8284531">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1364]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2294" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:39:03 EDT 2022" starttimestamp="1650324058609" timestamp="8284531" />
  <Command __id="2296" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:39:03 EDT 2022" starttimestamp="1650324058609" timestamp="8284616" />
  <Command __id="2297" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:39:03 EDT 2022" starttimestamp="1650324058609" timestamp="8284700" />
  <Command __id="2299" _type="PauseCommand" date="Mon Apr 18 21:39:12 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8293993">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9293]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2298" _type="MoveCaretCommand" caretOffset="5366" date="Mon Apr 18 21:39:12 EDT 2022" docOffset="7753" starttimestamp="1650324058609" timestamp="8293993" />
  <Command __id="2301" _type="ShellCommand" date="Mon Apr 18 21:39:13 EDT 2022" starttimestamp="1650324058609" timestamp="8294581" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2303" _type="PauseCommand" date="Mon Apr 18 21:39:15 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8296726">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2145]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2302" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:39:15 EDT 2022" forward="true" matchWord="false" offset="7753" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8296726" wrapSearch="false">
    <searchString><![CDATA[initServer]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2305" _type="PauseCommand" date="Mon Apr 18 21:39:16 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8298299">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1573]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2304" _type="ShellCommand" date="Mon Apr 18 21:39:16 EDT 2022" starttimestamp="1650324058609" timestamp="8298299" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2306" _type="SelectTextCommand" caretOffset="8963" date="Mon Apr 18 21:39:17 EDT 2022" end="8973" start="8963" starttimestamp="1650324058609" timestamp="8299286" />
  <Command __id="2308" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:39:18 EDT 2022" starttimestamp="1650324058609" timestamp="8299550" />
  <Command __id="2310" _type="PauseCommand" date="Mon Apr 18 21:39:19 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8301065">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1515]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2309" _type="ShellCommand" date="Mon Apr 18 21:39:19 EDT 2022" starttimestamp="1650324058609" timestamp="8301065" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2311" _type="ShellCommand" date="Mon Apr 18 21:39:19 EDT 2022" starttimestamp="1650324058609" timestamp="8301236" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2312" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:39:20 EDT 2022" starttimestamp="1650324058609" timestamp="8301872" />
  <Command __id="2313" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:39:20 EDT 2022" starttimestamp="1650324058609" timestamp="8301916" />
  <Command __id="2314" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:39:20 EDT 2022" starttimestamp="1650324058609" timestamp="8301975" />
  <DocumentChange __id="2291" _type="Replace" date="Mon Apr 18 21:39:01 EDT 2022" docASTNodeCount="1789" docActiveCodeLength="13115" docExpressionCount="1241" docLength="14687" endLine="224" insertionLength="8" int_docASTNodeCount="1789" int_docActiveCodeLength="13107" int_docExpressionCount="1242" int_docLength="14679" length="1" offset="7646" startLine="224" starttimestamp="1650324058609" timestamp="8283156">
    <deletedText><![CDATA[i]]></deletedText>
    <insertedText><![CDATA[otected ]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2307" _type="Delete" date="Mon Apr 18 21:39:18 EDT 2022" docASTNodeCount="1788" docActiveCodeLength="13105" docExpressionCount="1241" docLength="14677" endLine="351" length="10" offset="11350" startLine="351" starttimestamp="1650324058609" timestamp="8299542">
    <text><![CDATA[protected ]]></text>
  </DocumentChange>
  <Command __id="2316" _type="PauseCommand" date="Mon Apr 18 21:39:35 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="8316621">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[14646]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2317" _type="MoveCaretCommand" caretOffset="8634" date="Mon Apr 18 21:39:35 EDT 2022" docOffset="11060" starttimestamp="1650324058609" timestamp="8316981" />
  <Command __id="2320" _type="PauseCommand" date="Mon Apr 18 21:39:41 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8323267">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6286]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2319" _type="ShellCommand" date="Mon Apr 18 21:39:41 EDT 2022" starttimestamp="1650324058609" timestamp="8323267" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2322" _type="PauseCommand" date="Mon Apr 18 21:39:43 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8325353">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2086]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2321" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:39:43 EDT 2022" forward="true" matchWord="false" offset="11060" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8325353" wrapSearch="false">
    <searchString><![CDATA[setTrac]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2324" _type="PauseCommand" date="Mon Apr 18 21:39:45 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8327219">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1866]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2323" _type="ShellCommand" date="Mon Apr 18 21:39:45 EDT 2022" starttimestamp="1650324058609" timestamp="8327219" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2325" _type="MoveCaretCommand" caretOffset="8682" date="Mon Apr 18 21:39:46 EDT 2022" docOffset="11108" starttimestamp="1650324058609" timestamp="8327971" />
  <Command __id="2327" _type="ShellCommand" date="Mon Apr 18 21:39:47 EDT 2022" starttimestamp="1650324058609" timestamp="8328479" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2329" _type="PauseCommand" date="Mon Apr 18 21:39:52 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8333391">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4912]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2328" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:39:52 EDT 2022" forward="false" matchWord="false" offset="11108" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8333391" wrapSearch="false">
    <searchString><![CDATA[setTra]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2331" _type="PauseCommand" date="Mon Apr 18 21:39:53 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8334713">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1322]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2330" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:39:53 EDT 2022" forward="false" matchWord="false" offset="11118" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8334713" wrapSearch="false">
    <searchString><![CDATA[setTra]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2332" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:39:53 EDT 2022" forward="false" matchWord="false" offset="11118" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8335080" wrapSearch="false">
    <searchString><![CDATA[setTra]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2333" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:39:53 EDT 2022" forward="false" matchWord="false" offset="11118" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8335262" wrapSearch="false">
    <searchString><![CDATA[setTra]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2334" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:39:54 EDT 2022" forward="false" matchWord="false" offset="11118" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8335432" wrapSearch="false">
    <searchString><![CDATA[setTra]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2336" _type="PauseCommand" date="Mon Apr 18 21:39:58 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8339886">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[4454]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2335" _type="ShellCommand" date="Mon Apr 18 21:39:58 EDT 2022" starttimestamp="1650324058609" timestamp="8339886" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2338" _type="PauseCommand" date="Mon Apr 18 21:39:59 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8341178">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1292]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2337" _type="MoveCaretCommand" caretOffset="8722" date="Mon Apr 18 21:39:59 EDT 2022" docOffset="11148" starttimestamp="1650324058609" timestamp="8341178" />
  <Command __id="2340" _type="PauseCommand" date="Mon Apr 18 21:40:12 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="8354277">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13099]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2339" _type="SelectTextCommand" caretOffset="2540" date="Mon Apr 18 21:40:12 EDT 2022" end="2548" start="2540" starttimestamp="1650324058609" timestamp="8354277" />
  <Command __id="2342" _type="InsertStringCommand" date="Mon Apr 18 21:40:13 EDT 2022" starttimestamp="1650324058609" timestamp="8354770" timestamp2="8354770">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2344" _type="InsertStringCommand" date="Mon Apr 18 21:40:13 EDT 2022" starttimestamp="1650324058609" timestamp="8354872" timestamp2="8354872">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2346" _type="InsertStringCommand" date="Mon Apr 18 21:40:13 EDT 2022" starttimestamp="1650324058609" timestamp="8355021" timestamp2="8355021">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2348" _type="InsertStringCommand" date="Mon Apr 18 21:40:13 EDT 2022" starttimestamp="1650324058609" timestamp="8355173" timestamp2="8355173">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2350" _type="InsertStringCommand" date="Mon Apr 18 21:40:13 EDT 2022" starttimestamp="1650324058609" timestamp="8355191" timestamp2="8355191">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2352" _type="InsertStringCommand" date="Mon Apr 18 21:40:13 EDT 2022" starttimestamp="1650324058609" timestamp="8355343" timestamp2="8355343">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2354" _type="InsertStringCommand" date="Mon Apr 18 21:40:14 EDT 2022" starttimestamp="1650324058609" timestamp="8355555" timestamp2="8355555">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2355" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:40:14 EDT 2022" starttimestamp="1650324058609" timestamp="8356043" />
  <Command __id="2356" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:40:14 EDT 2022" starttimestamp="1650324058609" timestamp="8356132" />
  <Command __id="2357" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:40:14 EDT 2022" starttimestamp="1650324058609" timestamp="8356212" />
  <Command __id="2359" _type="PauseCommand" date="Mon Apr 18 21:40:17 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8359364">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3152]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2358" _type="MoveCaretCommand" caretOffset="2545" date="Mon Apr 18 21:40:17 EDT 2022" docOffset="4971" starttimestamp="1650324058609" timestamp="8359364" />
  <Command __id="2361" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:40:18 EDT 2022" starttimestamp="1650324058609" timestamp="8359605" />
  <Command __id="2363" _type="PauseCommand" date="Mon Apr 18 21:40:21 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8362855">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3250]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2362" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:40:21 EDT 2022" starttimestamp="1650324058609" timestamp="8362855" />
  <Command __id="2364" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:40:21 EDT 2022" starttimestamp="1650324058609" timestamp="8362938" />
  <Command __id="2365" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:40:21 EDT 2022" starttimestamp="1650324058609" timestamp="8363004" />
  <Command __id="2367" _type="PauseCommand" date="Mon Apr 18 21:40:23 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8365316">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2312]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2366" _type="ShellCommand" date="Mon Apr 18 21:40:23 EDT 2022" starttimestamp="1650324058609" timestamp="8365316" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2368" _type="ShellCommand" date="Mon Apr 18 21:40:24 EDT 2022" starttimestamp="1650324058609" timestamp="8365479" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2373" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:40:24 EDT 2022" starttimestamp="1650324058609" timestamp="8366266" />
  <Command __id="2374" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:40:24 EDT 2022" starttimestamp="1650324058609" timestamp="8366338" />
  <Command __id="2375" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:40:25 EDT 2022" starttimestamp="1650324058609" timestamp="8366408" />
  <Command __id="2315" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:39:35 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13055" docExpressionCount="1211" docLength="14625" projectName="A6" starttimestamp="1650324058609" timestamp="8316621">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	public void atomicBroadcast(boolean fake) {¶		return;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand1(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int aProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	"), Diff(DELETE,"//"), Diff(EQUAL,"@Override¶	public void nioInit(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		//reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	public void atomicBroadcast(boolean fake) {
		return;
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand1(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int aProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void nioInit(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		//reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2341" _type="Replace" date="Mon Apr 18 21:40:13 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13048" docExpressionCount="1212" docLength="14618" endLine="121" insertionLength="1" int_docASTNodeCount="1730" int_docActiveCodeLength="13047" int_docExpressionCount="1212" int_docLength="14617" length="8" offset="4966" startLine="121" starttimestamp="1650324058609" timestamp="8354762">
    <deletedText><![CDATA[otected ]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2343" _type="Insert" date="Mon Apr 18 21:40:13 EDT 2022" docASTNodeCount="1729" docActiveCodeLength="13054" docExpressionCount="1211" docLength="14624" length="6" offset="4967" repeat="6" starttimestamp="1650324058609" timestamp="8354859" timestamp2="8355547">
    <text><![CDATA[vatae ]]></text>
  </DocumentChange>
  <DocumentChange __id="2360" _type="Delete" date="Mon Apr 18 21:40:18 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13053" docExpressionCount="1211" docLength="14623" endLine="121" length="1" offset="4970" startLine="121" starttimestamp="1650324058609" timestamp="8359597">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="2369" _type="Delete" date="Mon Apr 18 21:40:24 EDT 2022" docASTNodeCount="1729" docActiveCodeLength="13043" docExpressionCount="1211" docLength="14613" endLine="121" length="10" offset="4961" repeat="2" startLine="120" starttimestamp="1650324058609" timestamp="8365500" timestamp2="8365508">
    <text><![CDATA[
	private]]></text>
  </DocumentChange>
  <DocumentChange __id="2371" _type="Insert" date="Mon Apr 18 21:40:24 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13055" docExpressionCount="1211" docLength="14625" length="12" offset="4961" repeat="2" starttimestamp="1650324058609" timestamp="8365514" timestamp2="8365515">
    <text><![CDATA[
	protected]]></text>
  </DocumentChange>
  <Command __id="2377" _type="PauseCommand" date="Mon Apr 18 21:40:36 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="8377760">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11352]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2378" _type="MoveCaretCommand" caretOffset="7513" date="Mon Apr 18 21:40:36 EDT 2022" docOffset="9188" starttimestamp="1650324058609" timestamp="8378247" />
  <Command __id="2380" _type="PauseCommand" date="Mon Apr 18 21:40:45 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8387231">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8984]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2379" _type="MoveCaretCommand" caretOffset="6406" date="Mon Apr 18 21:40:45 EDT 2022" docOffset="8081" starttimestamp="1650324058609" timestamp="8387231" />
  <Command __id="2382" _type="ShellCommand" date="Mon Apr 18 21:40:46 EDT 2022" starttimestamp="1650324058609" timestamp="8387876" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2384" _type="PauseCommand" date="Mon Apr 18 21:40:49 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8390793">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2917]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2383" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:40:49 EDT 2022" forward="false" matchWord="false" offset="8081" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8390793" wrapSearch="false">
    <searchString><![CDATA[setTrac]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2386" _type="PauseCommand" date="Mon Apr 18 21:40:50 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8392106">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1313]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2385" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:40:50 EDT 2022" forward="false" matchWord="false" offset="4999" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8392106" wrapSearch="false">
    <searchString><![CDATA[setTrac]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2388" _type="PauseCommand" date="Mon Apr 18 21:40:52 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8394299">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2193]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2387" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:40:52 EDT 2022" forward="true" matchWord="false" offset="4999" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8394299" wrapSearch="false">
    <searchString><![CDATA[setTrac]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2389" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:40:53 EDT 2022" forward="true" matchWord="false" offset="4999" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8394835" wrapSearch="false">
    <searchString><![CDATA[setTrac]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2390" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 21:40:53 EDT 2022" forward="true" matchWord="false" offset="4999" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="8395091" wrapSearch="false">
    <searchString><![CDATA[setTrac]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2392" _type="PauseCommand" date="Mon Apr 18 21:40:55 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8396443">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1352]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2391" _type="ShellCommand" date="Mon Apr 18 21:40:55 EDT 2022" starttimestamp="1650324058609" timestamp="8396443" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2394" _type="PauseCommand" date="Mon Apr 18 21:40:58 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8400151">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3708]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2393" _type="SelectTextCommand" caretOffset="2484" date="Mon Apr 18 21:40:58 EDT 2022" end="2492" start="2484" starttimestamp="1650324058609" timestamp="8400151" />
  <Command __id="2396" _type="InsertStringCommand" date="Mon Apr 18 21:40:59 EDT 2022" starttimestamp="1650324058609" timestamp="8400617" timestamp2="8400617">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2398" _type="InsertStringCommand" date="Mon Apr 18 21:40:59 EDT 2022" starttimestamp="1650324058609" timestamp="8400858" timestamp2="8400858">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2400" _type="InsertStringCommand" date="Mon Apr 18 21:40:59 EDT 2022" starttimestamp="1650324058609" timestamp="8401033" timestamp2="8401033">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2402" _type="InsertStringCommand" date="Mon Apr 18 21:40:59 EDT 2022" starttimestamp="1650324058609" timestamp="8401164" timestamp2="8401164">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2404" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:41:00 EDT 2022" starttimestamp="1650324058609" timestamp="8401653" />
  <Command __id="2406" _type="InsertStringCommand" date="Mon Apr 18 21:41:00 EDT 2022" starttimestamp="1650324058609" timestamp="8401823" timestamp2="8401823">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2408" _type="InsertStringCommand" date="Mon Apr 18 21:41:00 EDT 2022" starttimestamp="1650324058609" timestamp="8401889" timestamp2="8401889">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2410" _type="InsertStringCommand" date="Mon Apr 18 21:41:00 EDT 2022" starttimestamp="1650324058609" timestamp="8402031" timestamp2="8402031">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2411" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:41:01 EDT 2022" starttimestamp="1650324058609" timestamp="8402748" />
  <Command __id="2412" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:41:01 EDT 2022" starttimestamp="1650324058609" timestamp="8402836" />
  <Command __id="2413" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:41:01 EDT 2022" starttimestamp="1650324058609" timestamp="8402966" />
  <Command __id="2415" _type="PauseCommand" date="Mon Apr 18 21:41:16 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="8417642">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[14676]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2414" _type="SelectTextCommand" caretOffset="2482" date="Mon Apr 18 21:41:16 EDT 2022" end="2490" start="2482" starttimestamp="1650324058609" timestamp="8417642" />
  <Command __id="2417" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:41:16 EDT 2022" starttimestamp="1650324058609" timestamp="8417910" />
  <Command __id="2419" _type="PauseCommand" date="Mon Apr 18 21:41:18 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8419409">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1499]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2418" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:41:18 EDT 2022" starttimestamp="1650324058609" timestamp="8419409" />
  <Command __id="2420" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:41:18 EDT 2022" starttimestamp="1650324058609" timestamp="8419500" />
  <Command __id="2421" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:41:18 EDT 2022" starttimestamp="1650324058609" timestamp="8419618" />
  <Command __id="2422" _type="ShellCommand" date="Mon Apr 18 21:41:18 EDT 2022" starttimestamp="1650324058609" timestamp="8419906" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2424" _type="PauseCommand" date="Mon Apr 18 21:41:20 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8421785">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1879]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2423" _type="ShellCommand" date="Mon Apr 18 21:41:20 EDT 2022" starttimestamp="1650324058609" timestamp="8421785" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2426" _type="PauseCommand" date="Mon Apr 18 21:41:22 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8424302">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2517]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2425" _type="ShellCommand" date="Mon Apr 18 21:41:22 EDT 2022" starttimestamp="1650324058609" timestamp="8424302" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2427" _type="ShellCommand" date="Mon Apr 18 21:41:23 EDT 2022" starttimestamp="1650324058609" timestamp="8424515" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2431" _type="PauseCommand" date="Mon Apr 18 21:41:25 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8426527">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1991]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2430" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 21:41:25 EDT 2022" starttimestamp="1650324058609" timestamp="8426527" />
  <Command __id="2433" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 21:41:25 EDT 2022" starttimestamp="1650324058609" timestamp="8427104" />
  <Command __id="2435" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 21:41:26 EDT 2022" starttimestamp="1650324058609" timestamp="8427926" />
  <Command __id="2437" _type="InsertStringCommand" date="Mon Apr 18 21:41:27 EDT 2022" starttimestamp="1650324058609" timestamp="8428607" timestamp2="8428607">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2438" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:41:27 EDT 2022" starttimestamp="1650324058609" timestamp="8429224" />
  <Command __id="2439" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:41:27 EDT 2022" starttimestamp="1650324058609" timestamp="8429311" />
  <Command __id="2440" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:41:28 EDT 2022" starttimestamp="1650324058609" timestamp="8429424" />
  <Command __id="2376" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:40:36 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9747" docExpressionCount="896" docLength="10689" projectName="A6" starttimestamp="1650324058609" timestamp="8377760">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}







}
]]></snapshot>
  </Command>
  <DocumentChange __id="2395" _type="Replace" date="Mon Apr 18 21:40:59 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9740" docExpressionCount="897" docLength="10682" endLine="103" insertionLength="1" int_docASTNodeCount="1250" int_docActiveCodeLength="9739" int_docExpressionCount="897" int_docLength="10681" length="8" offset="4159" startLine="103" starttimestamp="1650324058609" timestamp="8400609">
    <deletedText><![CDATA[otected ]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2397" _type="Insert" date="Mon Apr 18 21:40:59 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9743" docExpressionCount="897" docLength="10685" length="3" offset="4160" repeat="3" starttimestamp="1650324058609" timestamp="8400850" timestamp2="8401156">
    <text><![CDATA[vaa]]></text>
  </DocumentChange>
  <DocumentChange __id="2403" _type="Delete" date="Mon Apr 18 21:41:00 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9742" docExpressionCount="897" docLength="10684" endLine="103" length="1" offset="4162" startLine="103" starttimestamp="1650324058609" timestamp="8401649">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="2405" _type="Insert" date="Mon Apr 18 21:41:00 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9745" docExpressionCount="896" docLength="10687" length="3" offset="4162" repeat="3" starttimestamp="1650324058609" timestamp="8401815" timestamp2="8402023">
    <text><![CDATA[te ]]></text>
  </DocumentChange>
  <DocumentChange __id="2416" _type="Delete" date="Mon Apr 18 21:41:16 EDT 2022" docASTNodeCount="1249" docActiveCodeLength="9737" docExpressionCount="896" docLength="10679" endLine="103" length="8" offset="4157" startLine="103" starttimestamp="1650324058609" timestamp="8417902">
    <text><![CDATA[private ]]></text>
  </DocumentChange>
  <DocumentChange __id="2428" _type="Insert" date="Mon Apr 18 21:41:23 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9749" docExpressionCount="896" docLength="10691" length="12" offset="4154" repeat="2" starttimestamp="1650324058609" timestamp="8424536" timestamp2="8424536">
    <text><![CDATA[
	protected]]></text>
  </DocumentChange>
  <DocumentChange __id="2432" _type="Delete" date="Mon Apr 18 21:41:25 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9746" docExpressionCount="897" docLength="10688" endLine="104" length="3" offset="4166" repeat="2" startLine="103" starttimestamp="1650324058609" timestamp="8427083" timestamp2="8427910">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2436" _type="Insert" date="Mon Apr 18 21:41:27 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9747" docExpressionCount="896" docLength="10689" length="1" offset="4166" starttimestamp="1650324058609" timestamp="8428599">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="2442" _type="PauseCommand" date="Mon Apr 18 21:43:52 EDT 2022" range="2m-5m" starttimestamp="1650324058609" timestamp="8573797">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[144373]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2443" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 18 21:43:52 EDT 2022" docOffset="0" starttimestamp="1650324058609" timestamp="8574184" />
  <Command __id="2445" _type="PauseCommand" date="Mon Apr 18 21:44:10 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="8592203">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[18019]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2444" _type="SelectTextCommand" caretOffset="1325" date="Mon Apr 18 21:44:10 EDT 2022" end="1335" start="1325" starttimestamp="1650324058609" timestamp="8592203" />
  <Command __id="2447" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:44:11 EDT 2022" starttimestamp="1650324058609" timestamp="8592497" />
  <Command __id="2448" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:44:12 EDT 2022" starttimestamp="1650324058609" timestamp="8593424" />
  <Command __id="2449" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:44:12 EDT 2022" starttimestamp="1650324058609" timestamp="8593627" />
  <Command __id="2450" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:44:12 EDT 2022" starttimestamp="1650324058609" timestamp="8593695" />
  <Command __id="2452" _type="PauseCommand" date="Mon Apr 18 21:44:21 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8603279">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9584]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2451" _type="SelectTextCommand" caretOffset="1217" date="Mon Apr 18 21:44:21 EDT 2022" end="1227" start="1217" starttimestamp="1650324058609" timestamp="8603279" />
  <Command __id="2454" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:44:22 EDT 2022" starttimestamp="1650324058609" timestamp="8603571" />
  <Command __id="2455" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:44:22 EDT 2022" starttimestamp="1650324058609" timestamp="8604288" />
  <Command __id="2456" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:44:22 EDT 2022" starttimestamp="1650324058609" timestamp="8604381" />
  <Command __id="2457" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:44:23 EDT 2022" starttimestamp="1650324058609" timestamp="8604434" />
  <Command __id="2458" _type="ShellCommand" date="Mon Apr 18 21:44:23 EDT 2022" starttimestamp="1650324058609" timestamp="8604614" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2460" _type="PauseCommand" date="Mon Apr 18 21:44:24 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8606250">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1636]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2459" _type="ShellCommand" date="Mon Apr 18 21:44:24 EDT 2022" starttimestamp="1650324058609" timestamp="8606250" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2441" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:43:52 EDT 2022" docASTNodeCount="557" docActiveCodeLength="3843" docExpressionCount="387" docLength="4187" projectName="A6" starttimestamp="1650324058609" timestamp="8573797">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener, FakeClientInterface{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	@Override¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException exception) {¶			exception.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new exampleClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception exception) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶				¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶}")]]]></diff>
  </Command>
  <DocumentChange __id="2446" _type="Delete" date="Mon Apr 18 21:44:11 EDT 2022" docASTNodeCount="556" docActiveCodeLength="3833" docExpressionCount="387" docLength="4177" endLine="66" length="10" offset="2617" startLine="66" starttimestamp="1650324058609" timestamp="8592484">
    <text><![CDATA[protected ]]></text>
  </DocumentChange>
  <DocumentChange __id="2453" _type="Delete" date="Mon Apr 18 21:44:22 EDT 2022" docASTNodeCount="555" docActiveCodeLength="3823" docExpressionCount="387" docLength="4167" endLine="61" length="10" offset="2509" startLine="61" starttimestamp="1650324058609" timestamp="8603563">
    <text><![CDATA[protected ]]></text>
  </DocumentChange>
  <Command __id="2462" _type="PauseCommand" date="Mon Apr 18 21:44:51 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="8632809">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[26559]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2463" _type="SelectTextCommand" caretOffset="2704" date="Mon Apr 18 21:44:51 EDT 2022" end="2704" start="2656" starttimestamp="1650324058609" timestamp="8633156" />
  <Command __id="2465" _type="PauseCommand" date="Mon Apr 18 21:45:00 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8641789">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[8633]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2464" _type="SelectTextCommand" caretOffset="827" date="Mon Apr 18 21:45:00 EDT 2022" end="837" start="827" starttimestamp="1650324058609" timestamp="8641789" />
  <Command __id="2461" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 21:44:51 EDT 2022" docASTNodeCount="564" docActiveCodeLength="3986" docExpressionCount="391" docLength="4607" projectName="A6" starttimestamp="1650324058609" timestamp="8632809">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import assignments.util.MiscAssignmentUtils;

import client.ClientRemoteInterfaceGIPC;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {

	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();

	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
		setFactories();
		initialize(aServerPort);
	}

	protected void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new exampleServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		/*
		// Pop value off the bounded buffer
		ByteBuffer originalMessage = null;
		try {
			originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		// Echo recieve message to all clients (except original message sender)
		for (SocketChannel socket : socketList) {
			if (!socket.equals(aSocketChannel)) {
				nioManager.write(socket, originalMessage, this);
			}
		}
		*/
		System.out.println("notifying reader!!");
		reader.notifyThread();
		System.out.println("thread has completed action and is now waiting");

	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer(){
		return boundedBuffer;
		
	}
	
	@Override
	public List<SocketChannel> getSocketList(){
		return socketList;
	}
	
	@Override
	public SocketChannel getSocketChannel() {
		return currentSocket;
	}

	@Override
	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);
	}

}
]]></snapshot>
  </Command>
  <Command __id="2467" _type="PauseCommand" date="Mon Apr 18 21:45:04 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8645417">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3628]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2468" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:45:04 EDT 2022" starttimestamp="1650324058609" timestamp="8645435" />
  <Command __id="2470" _type="PauseCommand" date="Mon Apr 18 21:45:05 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8646466">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1031]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2469" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:45:05 EDT 2022" starttimestamp="1650324058609" timestamp="8646466" />
  <Command __id="2471" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:45:05 EDT 2022" starttimestamp="1650324058609" timestamp="8646552" />
  <Command __id="2472" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:45:05 EDT 2022" starttimestamp="1650324058609" timestamp="8646619" />
  <Command __id="2474" _type="PauseCommand" date="Mon Apr 18 21:45:13 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8655086">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8467]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2473" _type="SelectTextCommand" caretOffset="587" date="Mon Apr 18 21:45:13 EDT 2022" end="597" start="587" starttimestamp="1650324058609" timestamp="8655086" />
  <Command __id="2476" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:45:13 EDT 2022" starttimestamp="1650324058609" timestamp="8655351" />
  <Command __id="2477" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:45:14 EDT 2022" starttimestamp="1650324058609" timestamp="8655944" />
  <Command __id="2478" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:45:14 EDT 2022" starttimestamp="1650324058609" timestamp="8656029" />
  <Command __id="2479" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:45:14 EDT 2022" starttimestamp="1650324058609" timestamp="8656060" />
  <Command __id="2480" _type="ShellCommand" date="Mon Apr 18 21:45:14 EDT 2022" starttimestamp="1650324058609" timestamp="8656358" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2482" _type="PauseCommand" date="Mon Apr 18 21:45:16 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8658067">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1709]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2481" _type="ShellCommand" date="Mon Apr 18 21:45:16 EDT 2022" starttimestamp="1650324058609" timestamp="8658067" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2484" _type="PauseCommand" date="Mon Apr 18 21:45:22 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8663612">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5545]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2496" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 21:46:49 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="8751366" type="Run" />
  <Command __id="2498" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 21:46:49 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="8751366" type="Run" />
  <Command __id="2499" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:46:50 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="8751578" type="Run" />
  <Command __id="2500" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:46:50 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="8751619" type="Run" />
  <Command __id="2501" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:46:50 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="8751626" type="Run" />
  <Command __id="2503" _type="PauseCommand" date="Mon Apr 18 21:46:54 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8755565">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3939]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2504" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:46:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="8758158" type="Run" />
  <Command __id="2506" _type="ConsoleOutput" date="Mon Apr 18 21:46:56 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8758326" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 21:46:56 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6AccessModifiersMatched@63d2349f . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 21:46:56 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2508" _type="PauseCommand" date="Mon Apr 18 21:47:01 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8762698">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4372]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2507" _type="ConsoleOutput" date="Mon Apr 18 21:47:01 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8762698" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 21:47:01 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 21:47:01 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Mon Apr 18 21:47:01 EDT 2022¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Mon Apr 18 21:4"), Diff(DELETE,"6:56"), Diff(INSERT,"7:01"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2509" _type="ConsoleOutput" date="Mon Apr 18 21:47:01 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8762783" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 21:47:01 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 21:47:01 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 21:47:01 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2511" _type="PauseCommand" date="Mon Apr 18 21:47:03 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8765193">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2410]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2510" _type="ConsoleOutput" date="Mon Apr 18 21:47:03 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8765193" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 21:47:03 EDT 2022
Generating checks:Mon Apr 18 21:47:03 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method call"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 21:47:03 EDT 2022¶Generating check"), Diff(EQUAL,"s:Mon Apr 18 21:47:0"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2512" _type="ConsoleOutput" date="Mon Apr 18 21:47:03 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8765265" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating checks:Mon Apr 18 21:47:03 EDT 2022
Generating externals:Mon Apr 18 21:47:03 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass"), Diff(INSERT,"Generating"), Diff(EQUAL," checks:Mon Apr 18 21:47:03 EDT 2022¶Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 21:47:03 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2513" _type="ConsoleOutput" date="Mon Apr 18 21:47:04 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8766249" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 21:47:04 EDT 2022
Test execution time (ms):8025
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 21:47:0"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating externals:Mon Apr 18 21:47:03 EDT 2022"), Diff(INSERT,"Test execution time (ms):8025"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2514" _type="ConsoleOutput" date="Mon Apr 18 21:47:04 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8766307" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 21:47:04 EDT 2022"), Diff(INSERT,"Test execution time (ms):27"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"8025"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2515" _type="ConsoleOutput" date="Mon Apr 18 21:47:04 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8766372" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):20
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"7¶Test execution time (ms):9"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2516" _type="ConsoleOutput" date="Mon Apr 18 21:47:05 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8766478" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (25)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (199)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (139)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (94)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (101)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):20"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (25)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (199)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (139)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (101)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2518" _type="PauseCommand" date="Mon Apr 18 21:47:14 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8775410">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8932]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2517" _type="ConsoleOutput" date="Mon Apr 18 21:47:14 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8775410" type="ConsoleOutput">
    <outputString><![CDATA[
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0
Test execution time (ms):15
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (25)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (199)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (139)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (101)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶Test execution time (ms):15"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2519" _type="ConsoleOutput" date="Mon Apr 18 21:47:14 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8775569" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):34
Test execution time (ms):49

A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428
Test execution time (ms):25
Test execution time (ms):20
A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882

Test execution time (ms):17
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0"), Diff(INSERT,"Test execution time (ms):34¶Test execution time (ms):49¶¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428¶Test execution time (ms):25¶Test execution time (ms):20¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882¶"), Diff(EQUAL,"¶Test execution time (ms):1"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2521" _type="PauseCommand" date="Mon Apr 18 21:47:16 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8778299">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2730]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2520" _type="ConsoleOutput" date="Mon Apr 18 21:47:16 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8778299" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6AccessModifiersMatched@4f2fda6b . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):34¶Test execution time (ms):49¶¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428¶Test execution time (ms):25¶Test execution time (ms):20¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882¶¶Test execution time (ms):17"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6AccessModifiersMatched@4f2fda6b . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2523" _type="PauseCommand" date="Mon Apr 18 21:47:27 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="8788940">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10641]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2522" _type="ShellCommand" date="Mon Apr 18 21:47:27 EDT 2022" starttimestamp="1650324058609" timestamp="8788940" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2525" _type="PauseCommand" date="Mon Apr 18 21:47:49 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="8810936">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[21996]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2524" _type="MoveCaretCommand" caretOffset="587" date="Mon Apr 18 21:47:49 EDT 2022" docOffset="1748" starttimestamp="1650324058609" timestamp="8810936" />
  <Command __id="2527" _type="InsertStringCommand" date="Mon Apr 18 21:47:50 EDT 2022" starttimestamp="1650324058609" timestamp="8811649" timestamp2="8811649">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2529" _type="InsertStringCommand" date="Mon Apr 18 21:47:50 EDT 2022" starttimestamp="1650324058609" timestamp="8811775" timestamp2="8811775">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2531" _type="InsertStringCommand" date="Mon Apr 18 21:47:50 EDT 2022" starttimestamp="1650324058609" timestamp="8811935" timestamp2="8811935">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2533" _type="InsertStringCommand" date="Mon Apr 18 21:47:50 EDT 2022" starttimestamp="1650324058609" timestamp="8812247" timestamp2="8812247">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2535" _type="InsertStringCommand" date="Mon Apr 18 21:47:51 EDT 2022" starttimestamp="1650324058609" timestamp="8812420" timestamp2="8812420">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="2466" _type="Delete" date="Mon Apr 18 21:45:04 EDT 2022" docASTNodeCount="563" docActiveCodeLength="3976" docExpressionCount="391" docLength="4597" endLine="52" length="10" offset="1988" startLine="52" starttimestamp="1650324058609" timestamp="8645417">
    <text><![CDATA[protected ]]></text>
  </DocumentChange>
  <DocumentChange __id="2475" _type="Delete" date="Mon Apr 18 21:45:13 EDT 2022" docASTNodeCount="562" docActiveCodeLength="3966" docExpressionCount="391" docLength="4587" endLine="44" length="10" offset="1748" startLine="44" starttimestamp="1650324058609" timestamp="8655344">
    <text><![CDATA[protected ]]></text>
  </DocumentChange>
  <DocumentChange __id="2485" _type="Delete" date="Mon Apr 18 21:45:22 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3956" docExpressionCount="391" docLength="4577" endLine="47" length="10" offset="1870" startLine="47" starttimestamp="1650324058609" timestamp="8663917">
    <text><![CDATA[protected ]]></text>
  </DocumentChange>
  <DocumentChange __id="2487" _type="Insert" date="Mon Apr 18 21:45:22 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3959" docExpressionCount="391" docLength="4580" length="3" offset="1870" starttimestamp="1650324058609" timestamp="8664316">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2526" _type="Insert" date="Mon Apr 18 21:47:50 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3964" docExpressionCount="391" docLength="4585" length="5" offset="1748" repeat="5" starttimestamp="1650324058609" timestamp="8811639" timestamp2="8812411">
    <text><![CDATA[none ]]></text>
  </DocumentChange>
  <Command __id="2537" _type="PauseCommand" date="Mon Apr 18 21:47:52 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8814074">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1654]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="2536" _type="Delete" date="Mon Apr 18 21:47:52 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3959" docExpressionCount="391" docLength="4580" endLine="44" length="5" offset="1748" repeat="5" startLine="44" starttimestamp="1650324058609" timestamp="8814074" timestamp2="8814911">
    <text><![CDATA[none ]]></text>
  </DocumentChange>
  <Command __id="2538" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:47:52 EDT 2022" starttimestamp="1650324058609" timestamp="8814093" />
  <Command __id="2540" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:47:52 EDT 2022" starttimestamp="1650324058609" timestamp="8814262" />
  <Command __id="2542" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:47:53 EDT 2022" starttimestamp="1650324058609" timestamp="8814449" />
  <Command __id="2544" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:47:53 EDT 2022" starttimestamp="1650324058609" timestamp="8814611" />
  <Command __id="2546" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:47:53 EDT 2022" starttimestamp="1650324058609" timestamp="8814919" />
  <DocumentChange __id="2547" _type="Insert" date="Mon Apr 18 21:47:53 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3964" docExpressionCount="391" docLength="4585" length="5" offset="1748" repeat="5" starttimestamp="1650324058609" timestamp="8815171" timestamp2="8815707">
    <text><![CDATA[None ]]></text>
  </DocumentChange>
  <Command __id="2548" _type="InsertStringCommand" date="Mon Apr 18 21:47:53 EDT 2022" starttimestamp="1650324058609" timestamp="8815178" timestamp2="8815178">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="2550" _type="InsertStringCommand" date="Mon Apr 18 21:47:53 EDT 2022" starttimestamp="1650324058609" timestamp="8815376" timestamp2="8815376">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2552" _type="InsertStringCommand" date="Mon Apr 18 21:47:54 EDT 2022" starttimestamp="1650324058609" timestamp="8815478" timestamp2="8815478">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2554" _type="InsertStringCommand" date="Mon Apr 18 21:47:54 EDT 2022" starttimestamp="1650324058609" timestamp="8815575" timestamp2="8815575">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2556" _type="InsertStringCommand" date="Mon Apr 18 21:47:54 EDT 2022" starttimestamp="1650324058609" timestamp="8815715" timestamp2="8815715">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2570" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:47:57 EDT 2022" starttimestamp="1650324058609" timestamp="8818772" />
  <Command __id="2572" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:47:57 EDT 2022" starttimestamp="1650324058609" timestamp="8818773" />
  <DocumentChange __id="2557" _type="Delete" date="Mon Apr 18 21:47:54 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3959" docExpressionCount="391" docLength="4580" endLine="44" length="5" offset="1748" repeat="5" startLine="44" starttimestamp="1650324058609" timestamp="8816365" timestamp2="8817124">
    <text><![CDATA[None ]]></text>
  </DocumentChange>
  <Command __id="2574" _type="PauseCommand" date="Mon Apr 18 21:48:03 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="8825025">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6252]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2575" _type="InsertStringCommand" date="Mon Apr 18 21:48:03 EDT 2022" starttimestamp="1650324058609" timestamp="8825037" timestamp2="8825037">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="2577" _type="InsertStringCommand" date="Mon Apr 18 21:48:04 EDT 2022" starttimestamp="1650324058609" timestamp="8825472" timestamp2="8825472">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2579" _type="InsertStringCommand" date="Mon Apr 18 21:48:04 EDT 2022" starttimestamp="1650324058609" timestamp="8825686" timestamp2="8825686">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2581" _type="InsertStringCommand" date="Mon Apr 18 21:48:04 EDT 2022" starttimestamp="1650324058609" timestamp="8825843" timestamp2="8825843">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2583" _type="InsertStringCommand" date="Mon Apr 18 21:48:04 EDT 2022" starttimestamp="1650324058609" timestamp="8825993" timestamp2="8825993">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2585" _type="PauseCommand" date="Mon Apr 18 21:48:05 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8827001">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1008]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2584" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:48:05 EDT 2022" starttimestamp="1650324058609" timestamp="8827001" />
  <Command __id="2586" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:48:05 EDT 2022" starttimestamp="1650324058609" timestamp="8827090" />
  <Command __id="2587" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:48:05 EDT 2022" starttimestamp="1650324058609" timestamp="8827140" />
  <DocumentChange __id="2573" _type="Insert" date="Mon Apr 18 21:48:03 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3964" docExpressionCount="391" docLength="4585" length="5" offset="1748" repeat="5" starttimestamp="1650324058609" timestamp="8825025" timestamp2="8825987">
    <text><![CDATA[None ]]></text>
  </DocumentChange>
  <Command __id="2589" _type="PauseCommand" date="Mon Apr 18 21:48:06 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="8828292">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1152]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2590" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:48:06 EDT 2022" starttimestamp="1650324058609" timestamp="8828303" />
  <Command __id="2592" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:48:06 EDT 2022" starttimestamp="1650324058609" timestamp="8828309" />
  <Command __id="2594" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:48:07 EDT 2022" starttimestamp="1650324058609" timestamp="8828412" />
  <Command __id="2596" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:48:07 EDT 2022" starttimestamp="1650324058609" timestamp="8828548" />
  <Command __id="2598" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 21:48:07 EDT 2022" starttimestamp="1650324058609" timestamp="8828712" />
  <Command __id="2599" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 21:48:07 EDT 2022" starttimestamp="1650324058609" timestamp="8829271" />
  <Command __id="2600" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:48:07 EDT 2022" starttimestamp="1650324058609" timestamp="8829358" />
  <Command __id="2601" _type="EclipseCommand" commandID="" date="Mon Apr 18 21:48:07 EDT 2022" starttimestamp="1650324058609" timestamp="8829386" />
  <Command __id="2602" _type="ShellCommand" date="Mon Apr 18 21:48:08 EDT 2022" starttimestamp="1650324058609" timestamp="8829558" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2604" _type="PauseCommand" date="Mon Apr 18 21:49:07 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="8889366">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[59808]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2610" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 21:49:15 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="8896831" type="Run" />
  <Command __id="2612" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 21:49:15 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="8896831" type="Run" />
  <Command __id="2613" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:49:15 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="8897054" type="Run" />
  <Command __id="2614" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:49:15 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="8897076" type="Run" />
  <Command __id="2615" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:49:15 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="8897081" type="Run" />
  <Command __id="2617" _type="PauseCommand" date="Mon Apr 18 21:49:19 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8901108">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4027]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2618" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:49:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="8937631" type="Run" />
  <Command __id="2620" _type="ConsoleOutput" date="Mon Apr 18 21:49:56 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8937757" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 21:49:56 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6AccessModifiersMatched@4f2fda6b . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 21:49:56 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2622" _type="PauseCommand" date="Mon Apr 18 21:50:00 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8942144">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4387]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2621" _type="ConsoleOutput" date="Mon Apr 18 21:50:00 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8942144" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 21:50:00 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 21:50:00 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Mon Apr 18 21:"), Diff(DELETE,"49:56"), Diff(INSERT,"50:00 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 18 21:50:00"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2623" _type="ConsoleOutput" date="Mon Apr 18 21:50:00 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8942209" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 21:50:00 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 21:50:00 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 21:50:00 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2625" _type="PauseCommand" date="Mon Apr 18 21:50:03 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="8944567">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2358]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2624" _type="ConsoleOutput" date="Mon Apr 18 21:50:03 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8944567" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 21:50:03 EDT 2022
Generating checks:Mon Apr 18 21:50:03 EDT 2022
Finished Generating checks:Mon Apr 18 21:50:03 EDT 2022
Generating externals:Mon Apr 18 21:50:03 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 21:50:03 EDT 2022¶Generating checks:Mon Apr 18 21:50:03 EDT 2022¶Finished Generating checks:Mon Apr 18 21:50:03 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Mon Apr 18 21:50:0"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2626" _type="ConsoleOutput" date="Mon Apr 18 21:50:04 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8945489" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 21:50:04 EDT 2022
Test execution time (ms):7788
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Apr 18 21:50:03 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 21:50:0"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Apr 18 21:50:03 EDT 2022¶Generating externals:Mon Apr 18 21:50:03 EDT 2022"), Diff(INSERT,"Test execution time (ms):7788"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2627" _type="ConsoleOutput" date="Mon Apr 18 21:50:04 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8945556" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22
Test execution time (ms):14
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 21:50:04 EDT 20"), Diff(INSERT,"Test execution time (ms):"), Diff(EQUAL,"22¶Test execution time (ms):"), Diff(DELETE,"7788"), Diff(INSERT,"14"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2628" _type="ConsoleOutput" date="Mon Apr 18 21:50:04 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8945621" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):16
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22¶"), Diff(EQUAL,"Test execution time (ms):1"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2629" _type="ConsoleOutput" date="Mon Apr 18 21:50:04 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="8945685" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (25)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (199)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (139)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (94)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (101)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):16"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (25)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (199)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (139)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (101)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2631" _type="PauseCommand" date="Mon Apr 18 21:50:18 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="8960361">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14676]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2708" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:54:38 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="9219760" type="Run" />
  <Command __id="2710" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:54:38 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="9219764" type="Run" />
  <Command __id="2712" _type="PauseCommand" date="Mon Apr 18 21:54:53 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="9234845">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[15081]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2739" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:55:34 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="9276114" type="Run" />
  <Command __id="2741" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 21:55:34 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="9276116" type="Run" />
  <Command __id="2743" _type="PauseCommand" date="Mon Apr 18 21:55:47 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="9288762">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[12646]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2742" _type="ConsoleOutput" date="Mon Apr 18 21:55:47 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="9288762" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14151
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1"), Diff(DELETE,"3964"), Diff(INSERT,"4151"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2745" _type="PauseCommand" date="Mon Apr 18 21:58:55 EDT 2022" range="2m-5m" starttimestamp="1650324058609" timestamp="9477364">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[188602]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2744" _type="ConsoleOutput" date="Mon Apr 18 21:58:55 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="9477364" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@5edcb8fc . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):14151"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@5edcb8fc . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2747" _type="PauseCommand" date="Mon Apr 18 22:20:58 EDT 2022" range="20m-30m" starttimestamp="1650324058609" timestamp="10800119">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1322755]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="2748" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 23:02:50 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="13311441" type="Debug" />
  <Command __id="2750" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 23:02:50 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="13311441" type="Debug" />
  <Command __id="2751" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 23:02:50 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="13311441" type="Run" />
  <Command __id="2753" _type="PauseCommand" date="Tue Apr 19 09:56:49 EDT 2022" range=">1h" starttimestamp="1650324058609" timestamp="52550739">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[39239298]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2752" _type="ShellCommand" date="Tue Apr 19 09:56:49 EDT 2022" starttimestamp="1650324058609" timestamp="52550739" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2588" _type="Delete" date="Mon Apr 18 21:48:06 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3959" docExpressionCount="391" docLength="4580" endLine="44" length="5" offset="1748" repeat="5" startLine="44" starttimestamp="1650324058609" timestamp="8828292" timestamp2="8828712">
    <text><![CDATA[None ]]></text>
  </DocumentChange>
  <Command __id="2755" _type="PauseCommand" date="Tue Apr 19 09:56:58 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="52559850">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9111]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2756" _type="SelectTextCommand" caretOffset="2556" date="Tue Apr 19 09:56:58 EDT 2022" end="2600" start="2556" starttimestamp="1650324058609" timestamp="52560133" />
  <Command __id="2758" _type="PauseCommand" date="Tue Apr 19 09:57:07 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="52568633">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[8500]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2757" _type="SelectTextCommand" caretOffset="4612" date="Tue Apr 19 09:57:07 EDT 2022" end="4693" start="4612" starttimestamp="1650324058609" timestamp="52568633" />
  <Command __id="2759" _type="CopyCommand" date="Tue Apr 19 09:57:07 EDT 2022" starttimestamp="1650324058609" timestamp="52569032" />
  <Command __id="2754" _type="DiffBasedFileOpenCommand" date="Tue Apr 19 09:56:58 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5584" docExpressionCount="567" docLength="6764" projectName="A6" starttimestamp="1650324058609" timestamp="52559850">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	@Override¶	public void simulationCommand1(String aCommand) {¶		// TODO Auto-generated method stub¶		¶	}"), Diff(INSERT,"¶¶	@Override¶	public void nioInit(String[] args) {¶		// TODO Auto-generated method stub¶		¶	}"), Diff(EQUAL,"¶		¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	@Override
	public void simulationCommand1(String aCommand) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void nioInit(String[] args) {
		// TODO Auto-generated method stub
		
	}
		


}
]]></snapshot>
  </Command>
  <Command __id="2761" _type="PauseCommand" date="Tue Apr 19 09:57:11 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="52572575">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3543]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2762" _type="MoveCaretCommand" caretOffset="2041" date="Tue Apr 19 09:57:11 EDT 2022" docOffset="2699" starttimestamp="1650324058609" timestamp="52572815" />
  <Command __id="2764" _type="PauseCommand" date="Tue Apr 19 09:57:15 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="52577250">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4435]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2767" _type="EclipseCommand" commandID="" date="Tue Apr 19 09:57:21 EDT 2022" starttimestamp="1650324058609" timestamp="52582897" />
  <Command __id="2769" _type="EclipseCommand" commandID="" date="Tue Apr 19 09:57:21 EDT 2022" starttimestamp="1650324058609" timestamp="52582913" />
  <Command __id="2771" _type="PauseCommand" date="Tue Apr 19 09:57:32 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="52593436">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10523]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2770" _type="SelectTextCommand" caretOffset="2244" date="Tue Apr 19 09:57:32 EDT 2022" end="2251" start="2244" starttimestamp="1650324058609" timestamp="52593436" />
  <Command __id="2773" _type="InsertStringCommand" date="Tue Apr 19 09:57:32 EDT 2022" starttimestamp="1650324058609" timestamp="52594110" timestamp2="52594110">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="2775" _type="InsertStringCommand" date="Tue Apr 19 09:57:32 EDT 2022" starttimestamp="1650324058609" timestamp="52594295" timestamp2="52594295">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2777" _type="InsertStringCommand" date="Tue Apr 19 09:57:33 EDT 2022" starttimestamp="1650324058609" timestamp="52594453" timestamp2="52594453">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2779" _type="InsertStringCommand" date="Tue Apr 19 09:57:33 EDT 2022" starttimestamp="1650324058609" timestamp="52594650" timestamp2="52594650">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2781" _type="InsertStringCommand" date="Tue Apr 19 09:57:33 EDT 2022" starttimestamp="1650324058609" timestamp="52594744" timestamp2="52594744">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2783" _type="InsertStringCommand" date="Tue Apr 19 09:57:33 EDT 2022" starttimestamp="1650324058609" timestamp="52594834" timestamp2="52594834">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2785" _type="InsertStringCommand" date="Tue Apr 19 09:57:33 EDT 2022" starttimestamp="1650324058609" timestamp="52594938" timestamp2="52594938">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2787" _type="PauseCommand" date="Tue Apr 19 09:57:35 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="52596628">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1690]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2790" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Tue Apr 19 09:57:42 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="52604168" type="Run" />
  <Command __id="2792" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Tue Apr 19 09:57:42 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="52604168" type="Run" />
  <Command __id="2793" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:57:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52604384" type="Run" />
  <Command __id="2794" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:57:43 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52604397" type="Run" />
  <Command __id="2795" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:57:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52604399" type="Run" />
  <Command __id="2797" _type="PauseCommand" date="Tue Apr 19 09:57:45 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="52607053">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2654]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2806" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:57:55 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52616694" type="Run" />
  <Command __id="2808" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:57:55 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52616696" type="Run" />
  <Command __id="2810" _type="PauseCommand" date="Tue Apr 19 09:58:02 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="52624219">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[7523]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2809" _type="ShellCommand" date="Tue Apr 19 09:58:02 EDT 2022" starttimestamp="1650324058609" timestamp="52624219" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2812" _type="PauseCommand" date="Tue Apr 19 09:58:04 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="52625794">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1575]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2830" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:58:24 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52646213" type="Run" />
  <Command __id="2832" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:58:24 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52646215" type="Run" />
  <Command __id="2834" _type="PauseCommand" date="Tue Apr 19 09:58:36 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="52658359">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[12144]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2844" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:58:48 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52669725" type="Run" />
  <Command __id="2846" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:58:48 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52669727" type="Run" />
  <Command __id="2848" _type="PauseCommand" date="Tue Apr 19 09:59:45 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="52726971">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[57244]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2849" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:59:48 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52729784" type="Run" />
  <Command __id="2851" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:59:48 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52729796" type="Run" />
  <Command __id="2852" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:59:48 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52729798" type="Run" />
  <Command __id="2853" _type="ConsoleOutput" date="Tue Apr 19 09:59:48 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="52729828" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67590
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"13584"), Diff(INSERT,"67590"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2854" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:59:48 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52730317" type="Run" />
  <Command __id="2855" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:59:48 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52730318" type="Run" />
  <Command __id="2857" _type="PauseCommand" date="Tue Apr 19 09:59:50 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="52731691">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1373]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2861" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:59:55 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52737344" type="Run" />
  <Command __id="2863" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 09:59:55 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52737346" type="Run" />
  <Command __id="2865" _type="PauseCommand" date="Tue Apr 19 10:00:00 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="52742124">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4778]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2902" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:02:33 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52895094" type="Run" />
  <Command __id="2904" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:02:33 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52895096" type="Run" />
  <Command __id="2906" _type="PauseCommand" date="Tue Apr 19 10:02:43 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="52904877">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[9781]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2905" _type="ShellCommand" date="Tue Apr 19 10:02:43 EDT 2022" starttimestamp="1650324058609" timestamp="52904877" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2908" _type="PauseCommand" date="Tue Apr 19 10:02:48 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="52909842">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4965]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2918" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:02:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52917686" type="Run" />
  <Command __id="2920" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:02:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="52917689" type="Run" />
  <Command __id="2922" _type="PauseCommand" date="Tue Apr 19 10:03:11 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="52932787">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[15098]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2921" _type="ConsoleOutput" date="Tue Apr 19 10:03:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="52932787" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22584
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"73"), Diff(INSERT,"84"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2924" _type="PauseCommand" date="Tue Apr 19 10:06:01 EDT 2022" range="2m-5m" starttimestamp="1650324058609" timestamp="53103346">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[170559]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2923" _type="ConsoleOutput" date="Tue Apr 19 10:06:01 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53103346" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@2353d6ec . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22584"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@2353d6ec . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2926" _type="PauseCommand" date="Tue Apr 19 10:07:19 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="53181248">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[77902]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2925" _type="ConsoleOutput" date="Tue Apr 19 10:07:19 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53181248" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@2353d6ec . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@2353d6ec . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2928" _type="PauseCommand" date="Tue Apr 19 10:08:20 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="53242366">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[61118]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2927" _type="ConsoleOutput" date="Tue Apr 19 10:08:20 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53242366" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@2353d6ec . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@2353d6ec . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2930" _type="PauseCommand" date="Tue Apr 19 10:09:32 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="53313985">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[71619]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2929" _type="ShellCommand" date="Tue Apr 19 10:09:32 EDT 2022" starttimestamp="1650324058609" timestamp="53313985" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2932" _type="PauseCommand" date="Tue Apr 19 10:09:36 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53317616">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3631]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2931" _type="SelectTextCommand" caretOffset="2253" date="Tue Apr 19 10:09:36 EDT 2022" end="2253" start="1963" starttimestamp="1650324058609" timestamp="53317616" />
  <Command __id="2934" _type="PauseCommand" date="Tue Apr 19 10:09:39 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53320403">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2787]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2933" _type="MoveCaretCommand" caretOffset="2251" date="Tue Apr 19 10:09:39 EDT 2022" docOffset="2909" starttimestamp="1650324058609" timestamp="53320403" />
  <Command __id="2936" _type="PauseCommand" date="Tue Apr 19 10:09:40 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="53322233">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1830]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2935" _type="SelectTextCommand" caretOffset="2237" date="Tue Apr 19 10:09:40 EDT 2022" end="2251" start="2237" starttimestamp="1650324058609" timestamp="53322233" />
  <Command __id="2938" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 10:09:41 EDT 2022" starttimestamp="1650324058609" timestamp="53322808" />
  <Command __id="2940" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 10:09:41 EDT 2022" starttimestamp="1650324058609" timestamp="53322951" />
  <Command __id="2942" _type="InsertStringCommand" date="Tue Apr 19 10:09:41 EDT 2022" starttimestamp="1650324058609" timestamp="53323174" timestamp2="53323174">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2944" _type="InsertStringCommand" date="Tue Apr 19 10:09:42 EDT 2022" starttimestamp="1650324058609" timestamp="53323613" timestamp2="53323613">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="2946" _type="InsertStringCommand" date="Tue Apr 19 10:09:42 EDT 2022" starttimestamp="1650324058609" timestamp="53323754" timestamp2="53323754">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2948" _type="InsertStringCommand" date="Tue Apr 19 10:09:42 EDT 2022" starttimestamp="1650324058609" timestamp="53323866" timestamp2="53323866">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2950" _type="InsertStringCommand" date="Tue Apr 19 10:09:42 EDT 2022" starttimestamp="1650324058609" timestamp="53324066" timestamp2="53324066">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2952" _type="InsertStringCommand" date="Tue Apr 19 10:09:42 EDT 2022" starttimestamp="1650324058609" timestamp="53324152" timestamp2="53324152">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2954" _type="InsertStringCommand" date="Tue Apr 19 10:09:42 EDT 2022" starttimestamp="1650324058609" timestamp="53324302" timestamp2="53324302">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2956" _type="InsertStringCommand" date="Tue Apr 19 10:09:42 EDT 2022" starttimestamp="1650324058609" timestamp="53324367" timestamp2="53324367">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2958" _type="InsertStringCommand" date="Tue Apr 19 10:09:43 EDT 2022" starttimestamp="1650324058609" timestamp="53324782" timestamp2="53324782">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2960" _type="InsertStringCommand" date="Tue Apr 19 10:09:43 EDT 2022" starttimestamp="1650324058609" timestamp="53325023" timestamp2="53325023">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2962" _type="InsertStringCommand" date="Tue Apr 19 10:09:43 EDT 2022" starttimestamp="1650324058609" timestamp="53325194" timestamp2="53325194">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2964" _type="InsertStringCommand" date="Tue Apr 19 10:09:43 EDT 2022" starttimestamp="1650324058609" timestamp="53325355" timestamp2="53325355">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2966" _type="InsertStringCommand" date="Tue Apr 19 10:09:44 EDT 2022" starttimestamp="1650324058609" timestamp="53325437" timestamp2="53325437">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2968" _type="InsertStringCommand" date="Tue Apr 19 10:09:44 EDT 2022" starttimestamp="1650324058609" timestamp="53325511" timestamp2="53325511">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2969" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 19 10:09:44 EDT 2022" starttimestamp="1650324058609" timestamp="53326374" />
  <Command __id="2970" _type="EclipseCommand" commandID="" date="Tue Apr 19 10:09:45 EDT 2022" starttimestamp="1650324058609" timestamp="53326473" />
  <Command __id="2971" _type="EclipseCommand" commandID="" date="Tue Apr 19 10:09:45 EDT 2022" starttimestamp="1650324058609" timestamp="53326506" />
  <Command __id="2973" _type="PauseCommand" date="Tue Apr 19 10:09:50 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="53331674">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5168]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2972" _type="SelectTextCommand" caretOffset="2241" date="Tue Apr 19 10:09:50 EDT 2022" end="2252" start="2241" starttimestamp="1650324058609" timestamp="53331674" />
  <Command __id="2974" _type="MoveCaretCommand" caretOffset="2234" date="Tue Apr 19 10:09:51 EDT 2022" docOffset="2892" starttimestamp="1650324058609" timestamp="53332592" />
  <Command __id="2976" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 10:09:51 EDT 2022" starttimestamp="1650324058609" timestamp="53332878" />
  <Command __id="2978" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 10:09:51 EDT 2022" starttimestamp="1650324058609" timestamp="53332996" />
  <Command __id="2980" _type="InsertStringCommand" date="Tue Apr 19 10:09:51 EDT 2022" starttimestamp="1650324058609" timestamp="53333175" timestamp2="53333175">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2982" _type="InsertStringCommand" date="Tue Apr 19 10:09:52 EDT 2022" starttimestamp="1650324058609" timestamp="53333536" timestamp2="53333536">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="2984" _type="InsertStringCommand" date="Tue Apr 19 10:09:52 EDT 2022" starttimestamp="1650324058609" timestamp="53333710" timestamp2="53333710">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2986" _type="InsertStringCommand" date="Tue Apr 19 10:09:52 EDT 2022" starttimestamp="1650324058609" timestamp="53333787" timestamp2="53333787">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2988" _type="InsertStringCommand" date="Tue Apr 19 10:09:52 EDT 2022" starttimestamp="1650324058609" timestamp="53334070" timestamp2="53334070">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2990" _type="InsertStringCommand" date="Tue Apr 19 10:09:52 EDT 2022" starttimestamp="1650324058609" timestamp="53334152" timestamp2="53334152">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2992" _type="InsertStringCommand" date="Tue Apr 19 10:09:52 EDT 2022" starttimestamp="1650324058609" timestamp="53334279" timestamp2="53334279">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2994" _type="InsertStringCommand" date="Tue Apr 19 10:09:53 EDT 2022" starttimestamp="1650324058609" timestamp="53334418" timestamp2="53334418">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2996" _type="InsertStringCommand" date="Tue Apr 19 10:09:53 EDT 2022" starttimestamp="1650324058609" timestamp="53334530" timestamp2="53334530">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2998" _type="InsertStringCommand" date="Tue Apr 19 10:09:53 EDT 2022" starttimestamp="1650324058609" timestamp="53334807" timestamp2="53334807">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3000" _type="InsertStringCommand" date="Tue Apr 19 10:09:53 EDT 2022" starttimestamp="1650324058609" timestamp="53334988" timestamp2="53334988">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3002" _type="InsertStringCommand" date="Tue Apr 19 10:09:53 EDT 2022" starttimestamp="1650324058609" timestamp="53335194" timestamp2="53335194">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3004" _type="InsertStringCommand" date="Tue Apr 19 10:09:53 EDT 2022" starttimestamp="1650324058609" timestamp="53335271" timestamp2="53335271">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3006" _type="InsertStringCommand" date="Tue Apr 19 10:09:54 EDT 2022" starttimestamp="1650324058609" timestamp="53335468" timestamp2="53335468">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3008" _type="InsertStringCommand" date="Tue Apr 19 10:09:54 EDT 2022" starttimestamp="1650324058609" timestamp="53335504" timestamp2="53335504">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3010" _type="PauseCommand" date="Tue Apr 19 10:09:55 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="53336513">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1009]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3009" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 19 10:09:55 EDT 2022" starttimestamp="1650324058609" timestamp="53336513" />
  <Command __id="3011" _type="EclipseCommand" commandID="" date="Tue Apr 19 10:09:55 EDT 2022" starttimestamp="1650324058609" timestamp="53336616" />
  <Command __id="3012" _type="EclipseCommand" commandID="" date="Tue Apr 19 10:09:55 EDT 2022" starttimestamp="1650324058609" timestamp="53336647" />
  <Command __id="3013" _type="ShellCommand" date="Tue Apr 19 10:09:55 EDT 2022" starttimestamp="1650324058609" timestamp="53336784" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3015" _type="PauseCommand" date="Tue Apr 19 10:09:56 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="53338208">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1424]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3014" _type="ShellCommand" date="Tue Apr 19 10:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="53338208" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3017" _type="PauseCommand" date="Tue Apr 19 10:10:00 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53341557">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3348]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3016" _type="SelectTextCommand" caretOffset="2265" date="Tue Apr 19 10:10:00 EDT 2022" end="2265" start="1963" starttimestamp="1650324058609" timestamp="53341556" />
  <Command __id="3018" _type="CopyCommand" date="Tue Apr 19 10:10:00 EDT 2022" starttimestamp="1650324058609" timestamp="53342085" />
  <Command __id="3020" _type="PauseCommand" date="Tue Apr 19 10:10:02 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="53343487">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1402]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3019" _type="ShellCommand" date="Tue Apr 19 10:10:02 EDT 2022" starttimestamp="1650324058609" timestamp="53343487" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3022" _type="PauseCommand" date="Tue Apr 19 10:11:29 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="53430427">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[86939]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3072" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:12:00 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53461799" type="Run" />
  <Command __id="3074" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:12:00 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53461799" type="Run" />
  <Command __id="3076" _type="PauseCommand" date="Tue Apr 19 10:12:09 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="53471383">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[9584]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="3075" _type="ConsoleInput" date="Tue Apr 19 10:12:09 EDT 2022" starttimestamp="1650324058609" timestamp="53471383" type="Exception">
    <outputString><![CDATA[b true
]]></outputString>
  </Command>
  <Command __id="3077" _type="ConsoleOutput" date="Tue Apr 19 10:12:10 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53471461" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Server0<-->Generic Client:0.31624033539657037 (Opened)¶Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[152.23.220.4:54732](remote),objID:[-23f8495b:180422a6548:-7ffe, -2186301438184699269]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[152.23.220.4:54732](remote),objID:[-23f8495b:180422a6548:-7ffe, -2186301438184699269]]]]]]¶Client registered GIPC¶com.sun.proxy.$Proxy1@4c277a5c¶[com.sun.proxy.$Proxy1@6fb3b36a, com.sun.proxy.$Proxy1@4c277a5c]¶Client registered RMI¶Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[152.23.220.4:54737](remote),objID:[-a2f29a4:180422a68c5:-7ffe, 8189238249532270090]]]]]¶[Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[152.23.220.4:54732](remote),objID:[-23f8495b:180422a6548:-7ffe, -2186301438184699269]]]]], Proxy[ClientRemoteInterfaceRMI,RemoteObjectInvocationHandler[UnicastRef [liveRef: [endpoint:[152.23.220.4:54737](remote),objID:[-a2f29a4:180422a68c5:-7ffe, 8189238249532270090]]]]]]"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3079" _type="PauseCommand" date="Tue Apr 19 10:12:12 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53473479">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2018]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="3078" _type="ConsoleInput" date="Tue Apr 19 10:12:12 EDT 2022" starttimestamp="1650324058609" timestamp="53473479" type="Exception">
    <outputString><![CDATA[i nio
]]></outputString>
  </Command>
  <Command __id="3080" _type="ConsoleOutput" date="Tue Apr 19 10:12:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53473532" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[NIO]
IPC Mechanism recieved for broadcast: NIO
USING RMI IN SERVER
Broadcasting IPC mechanism: NIO
SEND NEW MECHANISM TO A CLIENT FROM SERVER
SEND NEW MECHANISM TO A CLIENT FROM SERVER
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"public default void assignments.util.inputParameters.SimulationParametersListener."), Diff(DELETE,"broadcastMetaState(boolean)[true]"), Diff(INSERT,"ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[NIO]¶IPC Mechanism recieved for broadcast: NIO¶USING RMI IN SERVER¶Broadcasting IPC mechanism: NIO¶SEND NEW MECHANISM TO A CLIENT FROM SERVER¶SEND NEW MECHANISM TO A CLIENT FROM SERVER"), Diff(EQUAL,"¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶")]]]></diff>
  </Command>
  <Command __id="3081" _type="ConsoleOutput" date="Tue Apr 19 10:12:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53473549" type="ConsoleOutput">
    <outputString><![CDATA[GOT IPC MECHANISM CHANGE: NIOI***@54318867242200 {RMI TCP Connection(1)-152.23.220.4}(ProposedStateSet) EvtSrc(ClientRemoteObjectNIO)  Generic Client:0.7043913126129094,-1.0=NIO
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[NIO]¶IPC Mechanism recieved for broadcast: NIO¶USING RMI IN SERVER¶Broadcasting IPC mechanism: NIO¶SEND NEW MECHANISM TO A CLIENT FROM SERVER¶SEND NEW MECHANISM TO A CLIENT FROM SERVER¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"GOT IPC MECHANISM CHANGE: NIOI***@54318867242200 {RMI TCP Connection(1)-152.23.220.4}(ProposedStateSet) EvtSrc(ClientRemoteObjectNIO)  Generic Client:0.7043913126129094,-1.0=NIO"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3082" _type="ConsoleOutput" date="Tue Apr 19 10:12:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53473551" type="ConsoleOutput">
    <outputString><![CDATA[GOT IPC MECHANISM CHANGE: NIOI***@54318873058700 {RMI TCP Connection(1)-152.23.220.4}(ProposedStateSet) EvtSrc(ClientRemoteObjectNIO)  Generic Client:0.31624033539657037,-1.0=NIO
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GOT IPC MECHANISM CHANGE: NIOI***@543188"), Diff(DELETE,"672422"), Diff(INSERT,"730587"), Diff(EQUAL,"00 {RMI TCP Connection(1)-152.23.220.4}(ProposedStateSet) EvtSrc(ClientRemoteObjectNIO)  Generic Client:0."), Diff(DELETE,"7043913126129094"), Diff(INSERT,"31624033539657037"), Diff(EQUAL,",-1.0=NIO¶")]]]></diff>
  </Command>
  <Command __id="3084" _type="PauseCommand" date="Tue Apr 19 10:12:18 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="53479667">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6116]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="3083" _type="ConsoleInput" date="Tue Apr 19 10:12:18 EDT 2022" starttimestamp="1650324058609" timestamp="53479667" type="Exception">
    <outputString><![CDATA[b true
]]></outputString>
  </Command>
  <Command __id="3085" _type="ConsoleOutput" date="Tue Apr 19 10:12:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53479720" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GOT IPC MECHANISM CHANGE: NIOI***@54318873058700 {RMI TCP Connection(1)-152.23.220.4}(ProposedStateSet) EvtSrc(ClientRemoteObjectNIO)  Generic Client:0.31624033539657037,-1.0=NIO"), Diff(INSERT,"public default void assignments.util.inputParameters.SimulationParametersListener.broadcastMetaState(boolean)[true]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3087" _type="PauseCommand" date="Tue Apr 19 10:12:20 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="53481456">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1736]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="3086" _type="ConsoleInput" date="Tue Apr 19 10:12:20 EDT 2022" starttimestamp="1650324058609" timestamp="53481456" type="Exception">
    <outputString><![CDATA[i nio
]]></outputString>
  </Command>
  <Command __id="3088" _type="ConsoleOutput" date="Tue Apr 19 10:12:20 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53481509" type="ConsoleOutput">
    <outputString><![CDATA[public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[NIO]
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"public default void assignments.util.inputParameters.SimulationParametersListener."), Diff(DELETE,"broadcastMetaState(boolean)[true"), Diff(INSERT,"ipcMechanism(util.interactiveMethodInvocation.IPCMechanism)[NIO"), Diff(EQUAL,"]¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:¶")]]]></diff>
  </Command>
  <Command __id="3089" _type="ConsoleOutput" date="Tue Apr 19 10:12:20 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53481525" type="ConsoleOutput">
    <outputString><![CDATA[IPC Mechanism recieved for broadcast: NIO
USING RMI IN SERVER
Broadcasting IPC mechanism: NIO
SEND NEW MECHANISM TO A CLIENT FROM SERVER
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"public default void assignments.util.inputParameters.SimulationParametersListener.ipcMechanism(util.interactiveMethodInvo"), Diff(INSERT,"IPC Mechanism recieved for broadcast: NIO¶USING RMI IN SERVER¶Broad"), Diff(EQUAL,"ca"), Diff(INSERT,"s"), Diff(EQUAL,"ti"), Diff(DELETE,"on."), Diff(INSERT,"ng "), Diff(EQUAL,"IPC"), Diff(DELETE,"M"), Diff(INSERT," m"), Diff(EQUAL,"echanism"), Diff(DELETE,")["), Diff(INSERT,": "), Diff(EQUAL,"NIO"), Diff(DELETE,"]"), Diff(EQUAL,"¶"), Diff(DELETE,"Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"SEND NEW MECHANISM TO A CLIENT FROM SERVER"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3090" _type="ConsoleOutput" date="Tue Apr 19 10:12:20 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53481526" type="ConsoleOutput">
    <outputString><![CDATA[GOT IPC MECHANISM CHANGE: NIOI***@54326838190200 {RMI TCP Connection(1)-152.23.220.4}(ProposedStateSet) EvtSrc(ClientRemoteObjectNIO)  Generic Client:0.31624033539657037,0.0=NIO
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GOT "), Diff(EQUAL,"IPC M"), Diff(DELETE,"echanism recieved for broadcast: NIO¶USING RMI IN SERVER¶Broadcasting IPC mechanism: NIO¶SEND NEW MECHANISM TO A CLIENT FROM SERVER"), Diff(INSERT,"ECHANISM CHANGE: NIOI***@54326838190200 {RMI TCP Connection(1)-152.23.220.4}(ProposedStateSet) EvtSrc(ClientRemoteObjectNIO)  Generic Client:0.31624033539657037,0.0=NIO"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3092" _type="PauseCommand" date="Tue Apr 19 10:12:26 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="53488172">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6646]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="3100" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:12:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53503400" type="Run" />
  <Command __id="3102" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:12:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53503635" type="Run" />
  <Command __id="3103" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:12:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53503851" type="Run" />
  <Command __id="3104" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:12:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53503897" type="Run" />
  <Command __id="3106" _type="PauseCommand" date="Tue Apr 19 10:12:44 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53506121">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2224]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="3105" _type="CopyCommand" date="Tue Apr 19 10:12:44 EDT 2022" starttimestamp="1650324058609" timestamp="53506121" />
  <Command __id="3108" _type="PauseCommand" date="Tue Apr 19 10:13:35 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="53556460">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[50339]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3107" _type="MoveCaretCommand" caretOffset="1764" date="Tue Apr 19 10:13:35 EDT 2022" docOffset="2422" starttimestamp="1650324058609" timestamp="53556460" />
  <Command __id="3110" _type="InsertStringCommand" date="Tue Apr 19 10:13:35 EDT 2022" starttimestamp="1650324058609" timestamp="53557339" timestamp2="53557339">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3112" _type="InsertStringCommand" date="Tue Apr 19 10:13:36 EDT 2022" starttimestamp="1650324058609" timestamp="53557473" timestamp2="53557473">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3114" _type="PauseCommand" date="Tue Apr 19 10:13:46 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="53568386">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[10913]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3113" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 19 10:13:46 EDT 2022" starttimestamp="1650324058609" timestamp="53568386" />
  <Command __id="3115" _type="EclipseCommand" commandID="" date="Tue Apr 19 10:13:47 EDT 2022" starttimestamp="1650324058609" timestamp="53568488" />
  <Command __id="3116" _type="EclipseCommand" commandID="" date="Tue Apr 19 10:13:47 EDT 2022" starttimestamp="1650324058609" timestamp="53568521" />
  <Command __id="3117" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:13:47 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53568572" type="Run" />
  <Command __id="3119" _type="PauseCommand" date="Tue Apr 19 10:13:55 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="53577364">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[8792]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3118" _type="ShellCommand" date="Tue Apr 19 10:13:55 EDT 2022" starttimestamp="1650324058609" timestamp="53577364" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3121" _type="PauseCommand" date="Tue Apr 19 10:15:07 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="53649056">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[71692]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3120" _type="ShellCommand" date="Tue Apr 19 10:15:07 EDT 2022" starttimestamp="1650324058609" timestamp="53649056" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3123" _type="PauseCommand" date="Tue Apr 19 10:15:22 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="53664203">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15147]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3122" _type="MoveCaretCommand" caretOffset="2174" date="Tue Apr 19 10:15:22 EDT 2022" docOffset="2832" starttimestamp="1650324058609" timestamp="53664203" />
  <Command __id="3125" _type="PauseCommand" date="Tue Apr 19 10:15:25 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53667333">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3130]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3154" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Tue Apr 19 10:15:45 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="53687100" type="Run" />
  <Command __id="3156" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Tue Apr 19 10:15:45 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="53687100" type="Run" />
  <Command __id="3157" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:15:45 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53687320" type="Run" />
  <Command __id="3158" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:15:45 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53687339" type="Run" />
  <Command __id="3159" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:15:45 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53687341" type="Run" />
  <Command __id="3161" _type="PauseCommand" date="Tue Apr 19 10:15:48 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53689747">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2406]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3200" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:18:58 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53879549" type="Run" />
  <Command __id="3202" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:18:58 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53879551" type="Run" />
  <Command __id="3203" _type="ConsoleOutput" date="Tue Apr 19 10:18:58 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53880215" type="ConsoleOutput">
    <outputString><![CDATA[
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOTwoClientReadWriteNonAtomic did not pass completely:In Server writing to client 1 via NIO, no line found matching regex: .*?\{Read Thread\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.25¶¶Test execution time (ms):112618"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3205" _type="PauseCommand" date="Tue Apr 19 10:19:07 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="53889372">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9157]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3216" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:19:20 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53902133" type="Run" />
  <Command __id="3218" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:19:20 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53902135" type="Run" />
  <Command __id="3220" _type="PauseCommand" date="Tue Apr 19 10:19:25 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53906907">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4772]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3219" _type="ShellCommand" date="Tue Apr 19 10:19:25 EDT 2022" starttimestamp="1650324058609" timestamp="53906907" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3222" _type="PauseCommand" date="Tue Apr 19 10:19:29 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53911251">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4344]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3221" _type="ShellCommand" date="Tue Apr 19 10:19:29 EDT 2022" starttimestamp="1650324058609" timestamp="53911251" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3224" _type="PauseCommand" date="Tue Apr 19 10:19:33 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53915242">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3991]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3223" _type="MoveCaretCommand" caretOffset="1171" date="Tue Apr 19 10:19:33 EDT 2022" docOffset="1829" starttimestamp="1650324058609" timestamp="53915242" />
  <Command __id="3227" _type="PauseCommand" date="Tue Apr 19 10:19:35 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="53916402">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1160]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3234" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:19:38 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53919718" type="Run" />
  <Command __id="3236" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:19:38 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53919719" type="Run" />
  <Command __id="3237" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:19:38 EDT 2022" forward="true" matchWord="false" offset="1829" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53919762" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3239" _type="PauseCommand" date="Tue Apr 19 10:19:40 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53922327">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2565]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3240" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:19:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53924740" type="Run" />
  <Command __id="3242" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:19:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53924743" type="Run" />
  <Command __id="3244" _type="PauseCommand" date="Tue Apr 19 10:19:48 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="53930087">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[5344]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3255" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:20:05 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53947330" type="Run" />
  <Command __id="3257" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:20:05 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="53947332" type="Run" />
  <Command __id="2760" _type="DiffBasedFileOpenCommand" date="Tue Apr 19 09:57:11 EDT 2022" docASTNodeCount="400" docActiveCodeLength="2896" docExpressionCount="277" docLength="3199" projectName="A6" starttimestamp="1650324058609" timestamp="52572575">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.NIOManagerPrintServer;¶import server.remote.ServerRemoteObjectNIO;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶	¶	final ServerRemoteObjectNIO server;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ServerReadThread (final ServerRemoteObjectNIO aServer) {¶		server = aServer;¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();¶			List<SocketChannel> socketList = server.getSocketList();¶			SocketChannel currentSocket = server.getSocketChannel();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			¶			/// To pass the autograder¶			ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(originalMessage);¶			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);¶			boundedBufferFake.add(originalMessage);¶			"), Diff(INSERT,"¶			String aMessageString = new String(originalMessage.array());¶					¶			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶			"), Diff(EQUAL,"///¶			// Echo recieve message to all clients (except original message sender)¶			¶			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());¶			¶			for (SocketChannel socket : socketList) {¶				if (!socket.equals(currentSocket)) {¶					"), Diff(INSERT,"///"), Diff(EQUAL,"¶					RemoteProposeRequestReceived.newCase(this, server.SERVER_NAME, "), Diff(DELETE,"-1"), Diff(INSERT,"aProposalNumber"), Diff(EQUAL,", aMessageString);¶					ProposalLearnedNotificationSent.newCase(this, "), Diff(INSERT,"server."), Diff(EQUAL,"SERVER_NAME, aProposalNumber, aMessageString);¶					"), Diff(INSERT,"¶					///¶					"), Diff(EQUAL,"nioManager.write(socket, originalMessage, server);¶				}¶			}¶		¶		}¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.NIOManagerPrintServer;
import server.remote.ServerRemoteObjectNIO;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.communication.CommunicationStateNames;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{
	
	final ServerRemoteObjectNIO server;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ServerReadThread (final ServerRemoteObjectNIO aServer) {
		server = aServer;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();
			List<SocketChannel> socketList = server.getSocketList();
			SocketChannel currentSocket = server.getSocketChannel();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			
			/// To pass the autograder
			ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(originalMessage);
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			
			String aMessageString = new String(originalMessage.array());
					
			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
			///
			// Echo recieve message to all clients (except original message sender)
			
			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());
			
			for (SocketChannel socket : socketList) {
				if (!socket.equals(currentSocket)) {
					///
					RemoteProposeRequestReceived.newCase(this, server.SERVER_NAME, aProposalNumber, aMessageString);
					ProposalLearnedNotificationSent.newCase(this, server.SERVER_NAME, aProposalNumber, aMessageString);
					
					///
					nioManager.write(socket, originalMessage, server);
				}
			}
		
		}
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="2765" _type="Replace" date="Tue Apr 19 09:57:16 EDT 2022" docASTNodeCount="411" docActiveCodeLength="2977" docExpressionCount="287" docLength="3280" endLine="78" insertionLength="86" int_docASTNodeCount="400" int_docActiveCodeLength="2891" int_docExpressionCount="277" int_docLength="3194" length="5" offset="2825" startLine="78" starttimestamp="1650324058609" timestamp="52577959">
    <deletedText><![CDATA[					]]></deletedText>
    <insertedText><![CDATA[					ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2772" _type="Replace" date="Tue Apr 19 09:57:32 EDT 2022" docASTNodeCount="411" docActiveCodeLength="2971" docExpressionCount="287" docLength="3274" endLine="78" insertionLength="1" int_docASTNodeCount="411" int_docActiveCodeLength="2970" int_docExpressionCount="287" int_docLength="3273" length="7" offset="2902" startLine="78" starttimestamp="1650324058609" timestamp="52594102">
    <deletedText><![CDATA[Command]]></deletedText>
    <insertedText><![CDATA[M]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2774" _type="Insert" date="Tue Apr 19 09:57:32 EDT 2022" docASTNodeCount="411" docActiveCodeLength="2977" docExpressionCount="287" docLength="3280" length="6" offset="2903" repeat="6" starttimestamp="1650324058609" timestamp="52594290" timestamp2="52594932">
    <text><![CDATA[essage]]></text>
  </DocumentChange>
  <DocumentChange __id="2937" _type="Delete" date="Tue Apr 19 10:09:41 EDT 2022" docASTNodeCount="411" docActiveCodeLength="2962" docExpressionCount="287" docLength="3265" endLine="78" length="15" offset="2894" repeat="2" startLine="78" starttimestamp="1650324058609" timestamp="53322798" timestamp2="53322948">
    <text><![CDATA[originalMessage]]></text>
  </DocumentChange>
  <DocumentChange __id="2941" _type="Insert" date="Tue Apr 19 10:09:41 EDT 2022" docASTNodeCount="411" docActiveCodeLength="2976" docExpressionCount="287" docLength="3279" length="14" offset="2894" repeat="14" starttimestamp="1650324058609" timestamp="53323166" timestamp2="53325504">
    <text><![CDATA[aMessageString]]></text>
  </DocumentChange>
  <DocumentChange __id="2975" _type="Delete" date="Tue Apr 19 10:09:51 EDT 2022" docASTNodeCount="409" docActiveCodeLength="2974" docExpressionCount="285" docLength="3277" endLine="78" length="2" offset="2890" repeat="2" startLine="78" starttimestamp="1650324058609" timestamp="53332873" timestamp2="53332993">
    <text><![CDATA[-1]]></text>
  </DocumentChange>
  <DocumentChange __id="2979" _type="Insert" date="Tue Apr 19 10:09:51 EDT 2022" docASTNodeCount="410" docActiveCodeLength="2989" docExpressionCount="286" docLength="3292" length="15" offset="2890" repeat="15" starttimestamp="1650324058609" timestamp="53333169" timestamp2="53335500">
    <text><![CDATA[aProposalNumber]]></text>
  </DocumentChange>
  <DocumentChange __id="3109" _type="Insert" date="Tue Apr 19 10:13:35 EDT 2022" docASTNodeCount="397" docActiveCodeLength="2900" docExpressionCount="274" docLength="3294" length="2" offset="2422" repeat="2" starttimestamp="1650324058609" timestamp="53557336" timestamp2="53557467">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="3259" _type="PauseCommand" date="Tue Apr 19 10:20:09 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53950951">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3619]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3260" _type="MoveCaretCommand" caretOffset="2734" date="Tue Apr 19 10:20:09 EDT 2022" docOffset="4053" starttimestamp="1650324058609" timestamp="53951123" />
  <Command __id="3262" _type="PauseCommand" date="Tue Apr 19 10:20:12 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53953603">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2480]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3261" _type="MoveCaretCommand" caretOffset="2573" date="Tue Apr 19 10:20:12 EDT 2022" docOffset="3892" starttimestamp="1650324058609" timestamp="53953603" />
  <Command __id="3263" _type="MoveCaretCommand" caretOffset="2573" date="Tue Apr 19 10:20:12 EDT 2022" docOffset="3892" starttimestamp="1650324058609" timestamp="53953603" />
  <Command __id="3265" _type="ShellCommand" date="Tue Apr 19 10:20:12 EDT 2022" starttimestamp="1650324058609" timestamp="53954390" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3267" _type="PauseCommand" date="Tue Apr 19 10:20:16 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53957695">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3305]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3266" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:16 EDT 2022" forward="false" matchWord="false" offset="3892" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53957695" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3269" _type="PauseCommand" date="Tue Apr 19 10:20:19 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53960414">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2719]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3268" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:19 EDT 2022" forward="true" matchWord="false" offset="3906" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53960414" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3270" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:19 EDT 2022" forward="true" matchWord="false" offset="3906" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53960946" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3272" _type="PauseCommand" date="Tue Apr 19 10:20:21 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="53962418">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1472]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3271" _type="ConsoleOutput" date="Tue Apr 19 10:20:21 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="53962418" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22581
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2258"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3274" _type="PauseCommand" date="Tue Apr 19 10:20:22 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="53963602">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1184]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3273" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:22 EDT 2022" forward="false" matchWord="false" offset="3906" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53963602" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3275" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:22 EDT 2022" forward="false" matchWord="false" offset="3906" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53963994" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3276" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:22 EDT 2022" forward="false" matchWord="false" offset="3906" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53964206" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3277" _type="ShellCommand" date="Tue Apr 19 10:20:23 EDT 2022" starttimestamp="1650324058609" timestamp="53964863" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3278" _type="MoveCaretCommand" caretOffset="2598" date="Tue Apr 19 10:20:23 EDT 2022" docOffset="3917" starttimestamp="1650324058609" timestamp="53964938" />
  <Command __id="3279" _type="MoveCaretCommand" caretOffset="2598" date="Tue Apr 19 10:20:23 EDT 2022" docOffset="3917" starttimestamp="1650324058609" timestamp="53964938" />
  <Command __id="3281" _type="PauseCommand" date="Tue Apr 19 10:20:25 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="53966721">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1783]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3280" _type="ShellCommand" date="Tue Apr 19 10:20:25 EDT 2022" starttimestamp="1650324058609" timestamp="53966721" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3282" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:25 EDT 2022" forward="false" matchWord="false" offset="3917" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53966788" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3283" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:25 EDT 2022" forward="false" matchWord="false" offset="3906" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53967231" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3284" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:26 EDT 2022" forward="false" matchWord="false" offset="3906" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53967651" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3285" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:26 EDT 2022" forward="false" matchWord="false" offset="3906" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53967806" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3287" _type="PauseCommand" date="Tue Apr 19 10:20:28 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53970382">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2576]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3286" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:28 EDT 2022" forward="true" matchWord="false" offset="3906" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53970382" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3288" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:29 EDT 2022" forward="true" matchWord="false" offset="3906" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53970694" wrapSearch="false">
    <searchString><![CDATA[System.out]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3290" _type="PauseCommand" date="Tue Apr 19 10:20:30 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="53972303">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1609]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3289" _type="ShellCommand" date="Tue Apr 19 10:20:30 EDT 2022" starttimestamp="1650324058609" timestamp="53972303" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3292" _type="PauseCommand" date="Tue Apr 19 10:20:35 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53976651">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4348]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3291" _type="MoveCaretCommand" caretOffset="1889" date="Tue Apr 19 10:20:35 EDT 2022" docOffset="3208" starttimestamp="1650324058609" timestamp="53976651" />
  <Command __id="3293" _type="MoveCaretCommand" caretOffset="1889" date="Tue Apr 19 10:20:35 EDT 2022" docOffset="3208" starttimestamp="1650324058609" timestamp="53976651" />
  <Command __id="3295" _type="ShellCommand" date="Tue Apr 19 10:20:35 EDT 2022" starttimestamp="1650324058609" timestamp="53977282" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3296" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:36 EDT 2022" forward="true" matchWord="false" offset="3208" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53978129" wrapSearch="false">
    <searchString><![CDATA[print]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3297" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:37 EDT 2022" forward="true" matchWord="false" offset="4962" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53978958" wrapSearch="false">
    <searchString><![CDATA[print]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3298" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:38 EDT 2022" forward="true" matchWord="false" offset="2613" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53979831" wrapSearch="false">
    <searchString><![CDATA[print]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3299" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:39 EDT 2022" forward="true" matchWord="false" offset="4962" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53980404" wrapSearch="false">
    <searchString><![CDATA[print]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3300" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:39 EDT 2022" forward="true" matchWord="false" offset="2613" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53980886" wrapSearch="false">
    <searchString><![CDATA[print]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3301" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:40 EDT 2022" forward="true" matchWord="false" offset="4962" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53981508" wrapSearch="false">
    <searchString><![CDATA[print]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3303" _type="PauseCommand" date="Tue Apr 19 10:20:46 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="53987657">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[6149]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3302" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:46 EDT 2022" forward="true" matchWord="false" offset="2613" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="53987657" wrapSearch="false">
    <searchString><![CDATA[println]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3305" _type="PauseCommand" date="Tue Apr 19 10:20:49 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53990717">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3060]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3304" _type="ShellCommand" date="Tue Apr 19 10:20:49 EDT 2022" starttimestamp="1650324058609" timestamp="53990717" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3306" _type="MoveCaretCommand" caretOffset="1253" date="Tue Apr 19 10:20:50 EDT 2022" docOffset="2572" starttimestamp="1650324058609" timestamp="53991428" />
  <Command __id="3307" _type="MoveCaretCommand" caretOffset="1253" date="Tue Apr 19 10:20:50 EDT 2022" docOffset="2572" starttimestamp="1650324058609" timestamp="53991428" />
  <Command __id="3309" _type="ShellCommand" date="Tue Apr 19 10:20:50 EDT 2022" starttimestamp="1650324058609" timestamp="53992141" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3310" _type="ShellCommand" date="Tue Apr 19 10:20:50 EDT 2022" starttimestamp="1650324058609" timestamp="53992194" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3311" _type="MoveCaretCommand" caretOffset="1253" date="Tue Apr 19 10:20:50 EDT 2022" docOffset="2572" starttimestamp="1650324058609" timestamp="53992384" />
  <Command __id="3312" _type="MoveCaretCommand" caretOffset="1253" date="Tue Apr 19 10:20:50 EDT 2022" docOffset="2572" starttimestamp="1650324058609" timestamp="53992384" />
  <Command __id="3314" _type="InsertStringCommand" date="Tue Apr 19 10:20:51 EDT 2022" starttimestamp="1650324058609" timestamp="53992629" timestamp2="53992629">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3315" _type="InsertStringCommand" date="Tue Apr 19 10:20:51 EDT 2022" starttimestamp="1650324058609" timestamp="53992629" timestamp2="53992629">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3317" _type="InsertStringCommand" date="Tue Apr 19 10:20:51 EDT 2022" starttimestamp="1650324058609" timestamp="53992840" timestamp2="53992840">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3318" _type="InsertStringCommand" date="Tue Apr 19 10:20:51 EDT 2022" starttimestamp="1650324058609" timestamp="53992840" timestamp2="53992840">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3320" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 10:20:52 EDT 2022" starttimestamp="1650324058609" timestamp="53993533" />
  <Command __id="3321" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 10:20:52 EDT 2022" starttimestamp="1650324058609" timestamp="53993533" />
  <Command __id="3323" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 10:20:52 EDT 2022" starttimestamp="1650324058609" timestamp="53993695" />
  <Command __id="3324" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 10:20:52 EDT 2022" starttimestamp="1650324058609" timestamp="53993695" />
  <Command __id="3258" _type="DiffBasedFileOpenCommand" date="Tue Apr 19 10:20:09 EDT 2022" docASTNodeCount="703" docActiveCodeLength="4936" docExpressionCount="506" docLength="5508" projectName="A6" starttimestamp="1650324058609" timestamp="53950951">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.exampleServerReadThread;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶¶public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	@Override¶	protected void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("COMMAND IN SERVER: "+ aMessageString);¶		¶		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);¶		"), Diff(INSERT,"//"), Diff(EQUAL,"RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		"), Diff(INSERT,"//"), Diff(EQUAL,"ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.exampleServerReadThread;
import readThread.ReadThreadInterface;
import readThread.ServerReadThread;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;

public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	
	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	@Override
	protected void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ServerArgsProcessor.getNIOServerPort(args);
			
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);
			
			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
		
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("COMMAND IN SERVER: "+ aMessageString);
		
		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);
		//RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
		//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

	@Override
	public List<SocketChannel> getSocketList() {
		// TODO Auto-generated method stub
		return socketList;
	}

	@Override
	public SocketChannel getSocketChannel() {
		// TODO Auto-generated method stub
		return currentSocket;
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3313" _type="Insert" date="Tue Apr 19 10:20:51 EDT 2022" docASTNodeCount="705" docActiveCodeLength="4938" docExpressionCount="507" docLength="5510" length="2" offset="2572" repeat="2" starttimestamp="1650324058609" timestamp="53992625" timestamp2="53992835">
    <text><![CDATA[pl]]></text>
  </DocumentChange>
  <DocumentChange __id="3319" _type="Delete" date="Tue Apr 19 10:20:52 EDT 2022" docASTNodeCount="703" docActiveCodeLength="4936" docExpressionCount="506" docLength="5508" endLine="60" length="2" offset="2572" repeat="2" startLine="60" starttimestamp="1650324058609" timestamp="53993530" timestamp2="53993691">
    <text><![CDATA[pl]]></text>
  </DocumentChange>
  <Command __id="3327" _type="PauseCommand" date="Tue Apr 19 10:20:53 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="53994889">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1194]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="3326" _type="Insert" date="Tue Apr 19 10:20:53 EDT 2022" docASTNodeCount="705" docActiveCodeLength="4937" docExpressionCount="507" docLength="5509" length="1" offset="2572" starttimestamp="1650324058609" timestamp="53994889">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <Command __id="3328" _type="InsertStringCommand" date="Tue Apr 19 10:20:53 EDT 2022" starttimestamp="1650324058609" timestamp="53994894" timestamp2="53994894">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3329" _type="InsertStringCommand" date="Tue Apr 19 10:20:53 EDT 2022" starttimestamp="1650324058609" timestamp="53994903" timestamp2="53994903">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3331" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 10:20:54 EDT 2022" starttimestamp="1650324058609" timestamp="53995407" />
  <Command __id="3332" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 10:20:54 EDT 2022" starttimestamp="1650324058609" timestamp="53995407" />
  <Command __id="3334" _type="PauseCommand" date="Tue Apr 19 10:20:56 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="53997481">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2074]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3333" _type="ShellCommand" date="Tue Apr 19 10:20:56 EDT 2022" starttimestamp="1650324058609" timestamp="53997481" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3335" _type="ShellCommand" date="Tue Apr 19 10:20:56 EDT 2022" starttimestamp="1650324058609" timestamp="53997545" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3337" _type="ShellCommand" date="Tue Apr 19 10:20:56 EDT 2022" starttimestamp="1650324058609" timestamp="53998257" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3339" _type="PauseCommand" date="Tue Apr 19 10:20:59 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="54000471">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2214]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3338" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:20:59 EDT 2022" forward="true" matchWord="false" offset="2572" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="54000471" wrapSearch="false">
    <searchString><![CDATA[println]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3340" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:21:00 EDT 2022" forward="true" matchWord="false" offset="3914" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="54001410" wrapSearch="false">
    <searchString><![CDATA[println]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3341" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:21:00 EDT 2022" forward="true" matchWord="false" offset="3914" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="54001782" wrapSearch="false">
    <searchString><![CDATA[println]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3343" _type="PauseCommand" date="Tue Apr 19 10:21:03 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="54004536">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2754]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3342" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:21:03 EDT 2022" forward="false" matchWord="false" offset="3914" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="54004536" wrapSearch="false">
    <searchString><![CDATA[println]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3344" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 10:21:03 EDT 2022" forward="false" matchWord="false" offset="3914" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="54005107" wrapSearch="false">
    <searchString><![CDATA[println]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3346" _type="PauseCommand" date="Tue Apr 19 10:21:07 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="54009180">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[4073]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3345" _type="ShellCommand" date="Tue Apr 19 10:21:07 EDT 2022" starttimestamp="1650324058609" timestamp="54009180" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3348" _type="PauseCommand" date="Tue Apr 19 10:21:25 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="54026604">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17424]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3347" _type="ShellCommand" date="Tue Apr 19 10:21:25 EDT 2022" starttimestamp="1650324058609" timestamp="54026604" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3350" _type="PauseCommand" date="Tue Apr 19 10:21:27 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="54028859">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2255]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3349" _type="ConsoleOutput" date="Tue Apr 19 10:21:27 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="54028859" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@43c5f444 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22581"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@43c5f444 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3352" _type="PauseCommand" date="Tue Apr 19 10:23:25 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="54147358">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[118499]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3351" _type="ShellCommand" date="Tue Apr 19 10:23:25 EDT 2022" starttimestamp="1650324058609" timestamp="54147358" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3354" _type="PauseCommand" date="Tue Apr 19 10:23:27 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="54148645">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1287]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3353" _type="ShellCommand" date="Tue Apr 19 10:23:27 EDT 2022" starttimestamp="1650324058609" timestamp="54148645" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3355" _type="ShellCommand" date="Tue Apr 19 10:23:27 EDT 2022" starttimestamp="1650324058609" timestamp="54148742" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3357" _type="PauseCommand" date="Tue Apr 19 10:23:30 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="54151968">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3226]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3356" _type="ShellCommand" date="Tue Apr 19 10:23:30 EDT 2022" starttimestamp="1650324058609" timestamp="54151968" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3359" _type="PauseCommand" date="Tue Apr 19 10:23:57 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="54179195">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[27227]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3358" _type="ShellCommand" date="Tue Apr 19 10:23:57 EDT 2022" starttimestamp="1650324058609" timestamp="54179195" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3361" _type="PauseCommand" date="Tue Apr 19 10:24:03 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="54185087">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5892]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3360" _type="MoveCaretCommand" caretOffset="926" date="Tue Apr 19 10:24:03 EDT 2022" docOffset="2245" starttimestamp="1650324058609" timestamp="54185087" />
  <Command __id="3362" _type="MoveCaretCommand" caretOffset="926" date="Tue Apr 19 10:24:03 EDT 2022" docOffset="2245" starttimestamp="1650324058609" timestamp="54185087" />
  <Command __id="3364" _type="UndoCommand" date="Tue Apr 19 10:24:04 EDT 2022" starttimestamp="1650324058609" timestamp="54185893" />
  <DocumentChange __id="3330" _type="Delete" date="Tue Apr 19 10:20:54 EDT 2022" docASTNodeCount="703" docActiveCodeLength="4936" docExpressionCount="506" docLength="5508" endLine="60" length="1" offset="2572" startLine="60" starttimestamp="1650324058609" timestamp="53995404">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="3363" _type="Insert" date="Tue Apr 19 10:24:04 EDT 2022" docASTNodeCount="705" docActiveCodeLength="4937" docExpressionCount="507" docLength="5509" length="1" offset="2572" starttimestamp="1650324058609" timestamp="54185882">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <Command __id="3366" _type="PauseCommand" date="Tue Apr 19 10:24:05 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="54187077">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1184]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3367" _type="UndoCommand" date="Tue Apr 19 10:24:05 EDT 2022" starttimestamp="1650324058609" timestamp="54187083" />
  <Command __id="3369" _type="PauseCommand" date="Tue Apr 19 10:24:08 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="54189511">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2428]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3368" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 19 10:24:08 EDT 2022" starttimestamp="1650324058609" timestamp="54189511" />
  <Command __id="3370" _type="EclipseCommand" commandID="" date="Tue Apr 19 10:24:08 EDT 2022" starttimestamp="1650324058609" timestamp="54189610" />
  <Command __id="3371" _type="EclipseCommand" commandID="" date="Tue Apr 19 10:24:08 EDT 2022" starttimestamp="1650324058609" timestamp="54189647" />
  <DocumentChange __id="3365" _type="Delete" date="Tue Apr 19 10:24:05 EDT 2022" docASTNodeCount="703" docActiveCodeLength="4936" docExpressionCount="506" docLength="5508" endLine="60" length="1" offset="2572" startLine="60" starttimestamp="1650324058609" timestamp="54187077">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <Command __id="3373" _type="PauseCommand" date="Tue Apr 19 10:24:09 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="54191040">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1393]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3374" _type="SelectTextCommand" caretOffset="738" date="Tue Apr 19 10:24:09 EDT 2022" end="738" start="728" starttimestamp="1650324058609" timestamp="54191129" />
  <Command __id="3376" _type="PauseCommand" date="Tue Apr 19 10:24:26 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="54207591">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[16462]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3375" _type="SelectTextCommand" caretOffset="2174" date="Tue Apr 19 10:24:26 EDT 2022" end="2267" start="2174" starttimestamp="1650324058609" timestamp="54207591" />
  <Command __id="3378" _type="CutCommand" date="Tue Apr 19 10:24:27 EDT 2022" starttimestamp="1650324058609" timestamp="54208515" />
  <Command __id="3379" _type="MoveCaretCommand" caretOffset="2068" date="Tue Apr 19 10:24:28 EDT 2022" docOffset="2726" starttimestamp="1650324058609" timestamp="54209397" />
  <Command __id="3381" _type="InsertStringCommand" date="Tue Apr 19 10:24:28 EDT 2022" starttimestamp="1650324058609" timestamp="54209691" timestamp2="54209691">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3382" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Apr 19 10:24:28 EDT 2022" starttimestamp="1650324058609" timestamp="54210168" />
  <Command __id="3384" _type="PasteCommand" date="Tue Apr 19 10:24:29 EDT 2022" starttimestamp="1650324058609" timestamp="54210574" />
  <Command __id="3385" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 19 10:24:29 EDT 2022" starttimestamp="1650324058609" timestamp="54211096" />
  <Command __id="3386" _type="EclipseCommand" commandID="" date="Tue Apr 19 10:24:29 EDT 2022" starttimestamp="1650324058609" timestamp="54211198" />
  <Command __id="3387" _type="EclipseCommand" commandID="" date="Tue Apr 19 10:24:29 EDT 2022" starttimestamp="1650324058609" timestamp="54211233" />
  <Command __id="3389" _type="PauseCommand" date="Tue Apr 19 10:24:35 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="54217002">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5769]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3388" _type="SelectTextCommand" caretOffset="2643" date="Tue Apr 19 10:24:35 EDT 2022" end="2643" start="1952" starttimestamp="1650324058609" timestamp="54217002" />
  <Command __id="3391" _type="PauseCommand" date="Tue Apr 19 10:24:36 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="54218265">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1263]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3390" _type="MoveCaretCommand" caretOffset="2449" date="Tue Apr 19 10:24:36 EDT 2022" docOffset="3107" starttimestamp="1650324058609" timestamp="54218265" />
  <Command __id="3393" _type="PauseCommand" date="Tue Apr 19 10:24:38 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="54219437">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1172]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3392" _type="ShellCommand" date="Tue Apr 19 10:24:38 EDT 2022" starttimestamp="1650324058609" timestamp="54219437" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3395" _type="PauseCommand" date="Tue Apr 19 10:24:39 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="54221029">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1592]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3394" _type="ShellCommand" date="Tue Apr 19 10:24:39 EDT 2022" starttimestamp="1650324058609" timestamp="54221029" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3396" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:24:39 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="54221234" type="Debug" />
  <Command __id="3397" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:24:39 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="54221234" type="Debug" />
  <Command __id="3398" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Tue Apr 19 10:24:39 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="54221234" type="Run" />
  <Command __id="3399" _type="ShellCommand" date="Tue Apr 19 10:24:40 EDT 2022" starttimestamp="1650324058609" timestamp="54222232" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3401" _type="PauseCommand" date="Tue Apr 19 10:48:47 EDT 2022" range="20m-30m" starttimestamp="1650324058609" timestamp="55668570">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1446338]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3400" _type="ShellCommand" date="Tue Apr 19 10:48:47 EDT 2022" starttimestamp="1650324058609" timestamp="55668570" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3403" _type="PauseCommand" date="Tue Apr 19 10:48:56 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="55677722">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9152]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3402" _type="MoveCaretCommand" caretOffset="2068" date="Tue Apr 19 10:48:56 EDT 2022" docOffset="2726" starttimestamp="1650324058609" timestamp="55677722" />
  <Command __id="3372" _type="DiffBasedFileOpenCommand" date="Tue Apr 19 10:24:09 EDT 2022" docASTNodeCount="397" docActiveCodeLength="2900" docExpressionCount="274" docLength="3294" projectName="A6" starttimestamp="1650324058609" timestamp="54191040">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.NIOManagerPrintServer;¶import server.remote.ServerRemoteObjectNIO;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶	¶	final ServerRemoteObjectNIO server;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ServerReadThread (final ServerRemoteObjectNIO aServer) {¶		server = aServer;¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();¶			List<SocketChannel> socketList = server.getSocketList();¶			SocketChannel currentSocket = server.getSocketChannel();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			¶			/// To pass the autograder¶			ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(originalMessage);¶			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);¶			boundedBufferFake.add(originalMessage);¶			¶			String aMessageString = new String(originalMessage.array());¶					¶			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶			///¶			// Echo recieve message to all clients (except original message sender)¶			¶			"), Diff(INSERT,"//"), Diff(EQUAL,"ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());¶			¶			for (SocketChannel socket : socketList) {¶				if (!socket.equals(currentSocket)) {¶					///¶					RemoteProposeRequestReceived.newCase(this, server.SERVER_NAME, aProposalNumber, aMessageString);¶					ProposalLearnedNotificationSent.newCase(this, server.SERVER_NAME, aProposalNumber, aMessageString);¶					"), Diff(INSERT,"ProposalMade.newCase(this, CommunicationStateNames.COMMAND, aProposalNumber, aMessageString);"), Diff(EQUAL,"¶					///¶					nioManager.write(socket, originalMessage, server);¶				}¶			}¶		¶		}¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.NIOManagerPrintServer;
import server.remote.ServerRemoteObjectNIO;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.communication.CommunicationStateNames;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{
	
	final ServerRemoteObjectNIO server;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ServerReadThread (final ServerRemoteObjectNIO aServer) {
		server = aServer;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();
			List<SocketChannel> socketList = server.getSocketList();
			SocketChannel currentSocket = server.getSocketChannel();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			
			/// To pass the autograder
			ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(originalMessage);
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			
			String aMessageString = new String(originalMessage.array());
					
			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
			///
			// Echo recieve message to all clients (except original message sender)
			
			//ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());
			
			for (SocketChannel socket : socketList) {
				if (!socket.equals(currentSocket)) {
					///
					RemoteProposeRequestReceived.newCase(this, server.SERVER_NAME, aProposalNumber, aMessageString);
					ProposalLearnedNotificationSent.newCase(this, server.SERVER_NAME, aProposalNumber, aMessageString);
					ProposalMade.newCase(this, CommunicationStateNames.COMMAND, aProposalNumber, aMessageString);
					///
					nioManager.write(socket, originalMessage, server);
				}
			}
		
		}
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="3377" _type="Delete" date="Tue Apr 19 10:24:27 EDT 2022" docASTNodeCount="387" docActiveCodeLength="2807" docExpressionCount="265" docLength="3201" endLine="78" length="93" offset="2832" startLine="78" starttimestamp="1650324058609" timestamp="54208476">
    <text><![CDATA[ProposalMade.newCase(this, CommunicationStateNames.COMMAND, aProposalNumber, aMessageString);]]></text>
  </DocumentChange>
  <DocumentChange __id="3380" _type="Insert" date="Tue Apr 19 10:24:28 EDT 2022" docASTNodeCount="387" docActiveCodeLength="2814" docExpressionCount="265" docLength="3208" length="7" offset="2726" starttimestamp="1650324058609" timestamp="54209685">
    <text><![CDATA[
					]]></text>
  </DocumentChange>
  <DocumentChange __id="3383" _type="Replace" date="Tue Apr 19 10:24:29 EDT 2022" docASTNodeCount="397" docActiveCodeLength="2907" docExpressionCount="274" docLength="3301" endLine="77" insertionLength="98" int_docASTNodeCount="387" int_docActiveCodeLength="2809" int_docExpressionCount="265" int_docLength="3203" length="5" offset="2721" startLine="77" starttimestamp="1650324058609" timestamp="54210569">
    <deletedText><![CDATA[					]]></deletedText>
    <insertedText><![CDATA[					ProposalMade.newCase(this, CommunicationStateNames.COMMAND, aProposalNumber, aMessageString);]]></insertedText>
  </DocumentChange>
  <Command __id="3405" _type="PauseCommand" date="Tue Apr 19 10:48:57 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="55679084">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1362]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3406" _type="InsertStringCommand" date="Tue Apr 19 10:48:57 EDT 2022" starttimestamp="1650324058609" timestamp="55679091" timestamp2="55679091">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3408" _type="InsertStringCommand" date="Tue Apr 19 10:48:57 EDT 2022" starttimestamp="1650324058609" timestamp="55679189" timestamp2="55679189">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3410" _type="PauseCommand" date="Tue Apr 19 10:48:58 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="55680222">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1033]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3413" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Tue Apr 19 10:49:02 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="55683596" type="Run" />
  <Command __id="3415" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Tue Apr 19 10:49:02 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="55683596" type="Run" />
  <Command __id="3416" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:49:02 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="55683706" type="Run" />
  <Command __id="3417" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:49:02 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="55683720" type="Run" />
  <Command __id="3418" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:49:02 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="55683723" type="Run" />
  <Command __id="3420" _type="PauseCommand" date="Tue Apr 19 10:49:04 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="55686162">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2438]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3470" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:52:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="55898926" type="Run" />
  <Command __id="3472" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:52:37 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="55898927" type="Run" />
  <Command __id="3474" _type="PauseCommand" date="Tue Apr 19 10:52:38 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="55900381">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1454]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3498" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:53:22 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="55944110" type="Run" />
  <Command __id="3500" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 10:53:22 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="55944111" type="Run" />
  <Command __id="3502" _type="PauseCommand" date="Tue Apr 19 10:53:37 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="55959195">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[15084]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3501" _type="ConsoleOutput" date="Tue Apr 19 10:53:37 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="55959195" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22575
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2257"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3504" _type="PauseCommand" date="Tue Apr 19 10:56:22 EDT 2022" range="2m-5m" starttimestamp="1650324058609" timestamp="56123565">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[164370]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="3503" _type="BalloonCommand" date="Tue Apr 19 10:56:22 EDT 2022" message="*******************************************
Worked 8 minutes(fixed)/27 minutes(context based) from
Tue Apr 19 09:56:49 EDT 2022 to Tue Apr 19 10:53:37 EDT 2022
Edited 1 Projects: 
	A6
Edited 2 Files: 
	C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java
	C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java
Number of insert: 50
Number of delete: 114
" starttimestamp="1650324058609" timestamp="56123565">
    <fineGrainedWorkTime><![CDATA[27]]></fineGrainedWorkTime>
    <insert><![CDATA[50]]></insert>
    <startTime><![CDATA[1650376609348]]></startTime>
    <endTime><![CDATA[1650380017804]]></endTime>
    <workTime><![CDATA[8]]></workTime>
    <delete><![CDATA[114]]></delete>
  </Command>
  <Command __id="3506" _type="PauseCommand" date="Tue Apr 19 13:46:21 EDT 2022" range=">1h" starttimestamp="1650324058609" timestamp="66322890">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[10199325]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3505" _type="ShellCommand" date="Tue Apr 19 13:46:21 EDT 2022" starttimestamp="1650324058609" timestamp="66322890" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3508" _type="PauseCommand" date="Tue Apr 19 13:46:25 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="66326930">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4040]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3507" _type="ShellCommand" date="Tue Apr 19 13:46:25 EDT 2022" starttimestamp="1650324058609" timestamp="66326930" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3510" _type="PauseCommand" date="Tue Apr 19 13:54:05 EDT 2022" range="5m-10m" starttimestamp="1650324058609" timestamp="66786819">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[459888]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3509" _type="ShellCommand" date="Tue Apr 19 13:54:05 EDT 2022" starttimestamp="1650324058609" timestamp="66786818" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3512" _type="PauseCommand" date="Tue Apr 19 13:54:06 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="66788254">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1436]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3511" _type="ShellCommand" date="Tue Apr 19 13:54:06 EDT 2022" starttimestamp="1650324058609" timestamp="66788254" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3514" _type="PauseCommand" date="Tue Apr 19 14:04:36 EDT 2022" range="10m-20m" starttimestamp="1650324058609" timestamp="67418215">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[629961]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3513" _type="ShellCommand" date="Tue Apr 19 14:04:36 EDT 2022" starttimestamp="1650324058609" timestamp="67418215" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="3404" _type="Insert" date="Tue Apr 19 10:48:57 EDT 2022" docASTNodeCount="387" docActiveCodeLength="2814" docExpressionCount="265" docLength="3303" length="2" offset="2726" repeat="2" starttimestamp="1650324058609" timestamp="55679084" timestamp2="55679182">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="3516" _type="PauseCommand" date="Tue Apr 19 14:04:42 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="67423828">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5613]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3517" _type="MoveCaretCommand" caretOffset="1253" date="Tue Apr 19 14:04:42 EDT 2022" docOffset="2572" starttimestamp="1650324058609" timestamp="67423987" />
  <Command __id="3520" _type="PauseCommand" date="Tue Apr 19 14:04:48 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="67429919">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5932]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3519" _type="ShellCommand" date="Tue Apr 19 14:04:48 EDT 2022" starttimestamp="1650324058609" timestamp="67429919" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3522" _type="PauseCommand" date="Tue Apr 19 14:04:50 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67431981">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2062]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3521" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 14:04:50 EDT 2022" forward="false" matchWord="false" offset="2572" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="67431981" wrapSearch="false">
    <searchString><![CDATA[setname]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3524" _type="PauseCommand" date="Tue Apr 19 14:04:52 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67434297">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2316]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3523" _type="FindCommand" caseSensitive="false" date="Tue Apr 19 14:04:52 EDT 2022" forward="true" matchWord="false" offset="2572" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="67434297" wrapSearch="false">
    <searchString><![CDATA[setname]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3526" _type="PauseCommand" date="Tue Apr 19 14:04:54 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67435416">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1119]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3525" _type="ShellCommand" date="Tue Apr 19 14:04:54 EDT 2022" starttimestamp="1650324058609" timestamp="67435416" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3528" _type="PauseCommand" date="Tue Apr 19 14:05:11 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="67453323">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17907]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3527" _type="ShellCommand" date="Tue Apr 19 14:05:11 EDT 2022" starttimestamp="1650324058609" timestamp="67453323" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3530" _type="PauseCommand" date="Tue Apr 19 14:06:01 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="67503258">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[49935]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3529" _type="ShellCommand" date="Tue Apr 19 14:06:01 EDT 2022" starttimestamp="1650324058609" timestamp="67503258" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3532" _type="PauseCommand" date="Tue Apr 19 14:06:04 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67506158">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2900]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3531" _type="MoveCaretCommand" caretOffset="1466" date="Tue Apr 19 14:06:04 EDT 2022" docOffset="2785" starttimestamp="1650324058609" timestamp="67506158" />
  <Command __id="3533" _type="MoveCaretCommand" caretOffset="1466" date="Tue Apr 19 14:06:04 EDT 2022" docOffset="2785" starttimestamp="1650324058609" timestamp="67506158" />
  <Command __id="3535" _type="InsertStringCommand" date="Tue Apr 19 14:06:05 EDT 2022" starttimestamp="1650324058609" timestamp="67506596" timestamp2="67506596">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3536" _type="InsertStringCommand" date="Tue Apr 19 14:06:05 EDT 2022" starttimestamp="1650324058609" timestamp="67506596" timestamp2="67506596">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3538" _type="InsertStringCommand" date="Tue Apr 19 14:06:05 EDT 2022" starttimestamp="1650324058609" timestamp="67506720" timestamp2="67506720">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3539" _type="InsertStringCommand" date="Tue Apr 19 14:06:05 EDT 2022" starttimestamp="1650324058609" timestamp="67506720" timestamp2="67506720">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3541" _type="InsertStringCommand" date="Tue Apr 19 14:06:05 EDT 2022" starttimestamp="1650324058609" timestamp="67506776" timestamp2="67506776">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3542" _type="InsertStringCommand" date="Tue Apr 19 14:06:05 EDT 2022" starttimestamp="1650324058609" timestamp="67506776" timestamp2="67506776">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3544" _type="InsertStringCommand" date="Tue Apr 19 14:06:05 EDT 2022" starttimestamp="1650324058609" timestamp="67507035" timestamp2="67507035">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3545" _type="InsertStringCommand" date="Tue Apr 19 14:06:05 EDT 2022" starttimestamp="1650324058609" timestamp="67507035" timestamp2="67507035">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3547" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67507469" timestamp2="67507469">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3548" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67507469" timestamp2="67507469">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3550" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67507701" timestamp2="67507701">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3551" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67507701" timestamp2="67507701">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3553" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67507766" timestamp2="67507766">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3554" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67507766" timestamp2="67507766">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3556" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67507874" timestamp2="67507874">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3557" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67507874" timestamp2="67507874">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3559" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67507946" timestamp2="67507946">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3560" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67507946" timestamp2="67507946">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3562" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67508134" timestamp2="67508134">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3563" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67508135" timestamp2="67508135">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3565" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67508386" timestamp2="67508386">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3566" _type="InsertStringCommand" date="Tue Apr 19 14:06:06 EDT 2022" starttimestamp="1650324058609" timestamp="67508386" timestamp2="67508386">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3567" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 19 14:06:07 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="67508396" />
  <Command __id="3572" _type="PauseCommand" date="Tue Apr 19 14:06:10 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67512367">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3970]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3571" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 19 14:06:10 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="67512366" />
  <Command __id="3574" _type="InsertStringCommand" date="Tue Apr 19 14:06:11 EDT 2022" starttimestamp="1650324058609" timestamp="67512416" timestamp2="67512416">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3575" _type="InsertStringCommand" date="Tue Apr 19 14:06:11 EDT 2022" starttimestamp="1650324058609" timestamp="67512417" timestamp2="67512417">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3577" _type="PauseCommand" date="Tue Apr 19 14:06:12 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67513799">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1382]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3576" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 19 14:06:12 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="67513799" />
  <Command __id="3578" _type="MoveCaretCommand" caretOffset="1462" date="Tue Apr 19 14:06:12 EDT 2022" docOffset="2781" starttimestamp="1650324058609" timestamp="67513888" />
  <Command __id="3579" _type="MoveCaretCommand" caretOffset="1462" date="Tue Apr 19 14:06:12 EDT 2022" docOffset="2781" starttimestamp="1650324058609" timestamp="67513888" />
  <Command __id="3581" _type="InsertStringCommand" date="Tue Apr 19 14:06:13 EDT 2022" starttimestamp="1650324058609" timestamp="67514495" timestamp2="67514495">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3582" _type="InsertStringCommand" date="Tue Apr 19 14:06:13 EDT 2022" starttimestamp="1650324058609" timestamp="67514496" timestamp2="67514496">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3584" _type="InsertStringCommand" date="Tue Apr 19 14:06:13 EDT 2022" starttimestamp="1650324058609" timestamp="67515229" timestamp2="67515229">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3585" _type="InsertStringCommand" date="Tue Apr 19 14:06:13 EDT 2022" starttimestamp="1650324058609" timestamp="67515229" timestamp2="67515229">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3587" _type="InsertStringCommand" date="Tue Apr 19 14:06:13 EDT 2022" starttimestamp="1650324058609" timestamp="67515298" timestamp2="67515298">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3588" _type="InsertStringCommand" date="Tue Apr 19 14:06:13 EDT 2022" starttimestamp="1650324058609" timestamp="67515298" timestamp2="67515298">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3590" _type="InsertStringCommand" date="Tue Apr 19 14:06:14 EDT 2022" starttimestamp="1650324058609" timestamp="67515465" timestamp2="67515465">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3591" _type="InsertStringCommand" date="Tue Apr 19 14:06:14 EDT 2022" starttimestamp="1650324058609" timestamp="67515465" timestamp2="67515465">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3593" _type="InsertStringCommand" date="Tue Apr 19 14:06:14 EDT 2022" starttimestamp="1650324058609" timestamp="67515523" timestamp2="67515523">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3594" _type="InsertStringCommand" date="Tue Apr 19 14:06:14 EDT 2022" starttimestamp="1650324058609" timestamp="67515523" timestamp2="67515523">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3596" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 14:06:14 EDT 2022" starttimestamp="1650324058609" timestamp="67516241" />
  <Command __id="3597" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 14:06:14 EDT 2022" starttimestamp="1650324058609" timestamp="67516241" />
  <Command __id="3599" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67516405" />
  <Command __id="3600" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67516405" />
  <Command __id="3602" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67516556" />
  <Command __id="3603" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67516556" />
  <Command __id="3605" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67516725" />
  <Command __id="3606" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67516725" />
  <Command __id="3608" _type="InsertStringCommand" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67516846" timestamp2="67516846">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3609" _type="InsertStringCommand" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67516846" timestamp2="67516846">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3611" _type="InsertStringCommand" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67517063" timestamp2="67517063">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3612" _type="InsertStringCommand" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67517063" timestamp2="67517063">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3614" _type="InsertStringCommand" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67517255" timestamp2="67517255">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3615" _type="InsertStringCommand" date="Tue Apr 19 14:06:15 EDT 2022" starttimestamp="1650324058609" timestamp="67517255" timestamp2="67517255">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3617" _type="InsertStringCommand" date="Tue Apr 19 14:06:16 EDT 2022" starttimestamp="1650324058609" timestamp="67517685" timestamp2="67517685">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3618" _type="InsertStringCommand" date="Tue Apr 19 14:06:16 EDT 2022" starttimestamp="1650324058609" timestamp="67517685" timestamp2="67517685">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3620" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 14:06:16 EDT 2022" starttimestamp="1650324058609" timestamp="67518077" />
  <Command __id="3621" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 19 14:06:16 EDT 2022" starttimestamp="1650324058609" timestamp="67518077" />
  <Command __id="3623" _type="InsertStringCommand" date="Tue Apr 19 14:06:16 EDT 2022" starttimestamp="1650324058609" timestamp="67518252" timestamp2="67518252">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3624" _type="InsertStringCommand" date="Tue Apr 19 14:06:16 EDT 2022" starttimestamp="1650324058609" timestamp="67518252" timestamp2="67518252">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3626" _type="InsertStringCommand" date="Tue Apr 19 14:06:16 EDT 2022" starttimestamp="1650324058609" timestamp="67518345" timestamp2="67518345">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3627" _type="InsertStringCommand" date="Tue Apr 19 14:06:16 EDT 2022" starttimestamp="1650324058609" timestamp="67518345" timestamp2="67518345">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3629" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518404" timestamp2="67518404">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3630" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518404" timestamp2="67518404">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3632" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518536" timestamp2="67518536">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3633" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518536" timestamp2="67518536">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3635" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518671" timestamp2="67518671">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3636" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518671" timestamp2="67518671">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3638" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518726" timestamp2="67518726">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3639" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518726" timestamp2="67518726">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3641" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518876" timestamp2="67518876">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3642" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518876" timestamp2="67518876">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3644" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518963" timestamp2="67518963">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3645" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67518963" timestamp2="67518963">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3647" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67519088" timestamp2="67519088">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3648" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67519089" timestamp2="67519089">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3650" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67519373" timestamp2="67519373">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="3651" _type="InsertStringCommand" date="Tue Apr 19 14:06:17 EDT 2022" starttimestamp="1650324058609" timestamp="67519373" timestamp2="67519373">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="3653" _type="InsertStringCommand" date="Tue Apr 19 14:06:18 EDT 2022" starttimestamp="1650324058609" timestamp="67519582" timestamp2="67519582">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3654" _type="InsertStringCommand" date="Tue Apr 19 14:06:18 EDT 2022" starttimestamp="1650324058609" timestamp="67519582" timestamp2="67519582">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3656" _type="InsertStringCommand" date="Tue Apr 19 14:06:18 EDT 2022" starttimestamp="1650324058609" timestamp="67519959" timestamp2="67519959">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="3657" _type="InsertStringCommand" date="Tue Apr 19 14:06:18 EDT 2022" starttimestamp="1650324058609" timestamp="67519959" timestamp2="67519959">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="3659" _type="PauseCommand" date="Tue Apr 19 14:06:20 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67521504">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1545]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3658" _type="ShellCommand" date="Tue Apr 19 14:06:20 EDT 2022" starttimestamp="1650324058609" timestamp="67521504" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3661" _type="PauseCommand" date="Tue Apr 19 14:06:28 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="67529429">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7925]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3660" _type="ShellCommand" date="Tue Apr 19 14:06:28 EDT 2022" starttimestamp="1650324058609" timestamp="67529429" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3515" _type="DiffBasedFileOpenCommand" date="Tue Apr 19 14:04:42 EDT 2022" docASTNodeCount="703" docActiveCodeLength="4936" docExpressionCount="506" docLength="5508" projectName="A6" starttimestamp="1650324058609" timestamp="67423828">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.exampleServerReadThread;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶¶public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	@Override¶	protected void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("COMMAND IN SERVER: "+ aMessageString);¶		¶		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);¶		//RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3534" _type="Insert" date="Tue Apr 19 14:06:05 EDT 2022" docASTNodeCount="709" docActiveCodeLength="4950" docExpressionCount="509" docLength="5522" length="14" offset="2785" repeat="14" starttimestamp="1650324058609" timestamp="67506591" timestamp2="67509998">
    <text><![CDATA[readThread.set]]></text>
  </DocumentChange>
  <DocumentChange __id="3573" _type="Replace" date="Tue Apr 19 14:06:10 EDT 2022" docASTNodeCount="708" docActiveCodeLength="4961" docExpressionCount="510" docLength="5533" endLine="70" insertionLength="14" int_docASTNodeCount="705" int_docActiveCodeLength="4947" int_docExpressionCount="508" int_docLength="5519" length="3" offset="2796" startLine="70" starttimestamp="1650324058609" timestamp="67512369">
    <deletedText><![CDATA[set]]></deletedText>
    <insertedText><![CDATA[setName(name);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3580" _type="Insert" date="Tue Apr 19 14:06:13 EDT 2022" docASTNodeCount="710" docActiveCodeLength="4969" docExpressionCount="511" docLength="5541" length="8" offset="2781" repeat="5" starttimestamp="1650324058609" timestamp="67514488" timestamp2="67515518">
    <text><![CDATA[
		name]]></text>
  </DocumentChange>
  <DocumentChange __id="3595" _type="Delete" date="Tue Apr 19 14:06:14 EDT 2022" docASTNodeCount="708" docActiveCodeLength="4965" docExpressionCount="510" docLength="5537" endLine="70" length="4" offset="2785" repeat="4" startLine="70" starttimestamp="1650324058609" timestamp="67516238" timestamp2="67516723">
    <text><![CDATA[name]]></text>
  </DocumentChange>
  <DocumentChange __id="3607" _type="Insert" date="Tue Apr 19 14:06:15 EDT 2022" docASTNodeCount="712" docActiveCodeLength="4969" docExpressionCount="511" docLength="5541" length="4" offset="2785" repeat="4" starttimestamp="1650324058609" timestamp="67516841" timestamp2="67517680">
    <text><![CDATA[Stra]]></text>
  </DocumentChange>
  <DocumentChange __id="3619" _type="Delete" date="Tue Apr 19 14:06:16 EDT 2022" docASTNodeCount="712" docActiveCodeLength="4968" docExpressionCount="511" docLength="5540" endLine="70" length="1" offset="2788" startLine="70" starttimestamp="1650324058609" timestamp="67518074">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="3622" _type="Insert" date="Tue Apr 19 14:06:16 EDT 2022" docASTNodeCount="714" docActiveCodeLength="4981" docExpressionCount="513" docLength="5553" length="13" offset="2788" repeat="12" starttimestamp="1650324058609" timestamp="67518248" timestamp2="67519956">
    <text><![CDATA[ing name = ""]]></text>
  </DocumentChange>
  <Command __id="3663" _type="PauseCommand" date="Tue Apr 19 14:06:29 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67530848">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1419]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3664" _type="PasteCommand" date="Tue Apr 19 14:06:29 EDT 2022" starttimestamp="1650324058609" timestamp="67530858" />
  <Command __id="3666" _type="PauseCommand" date="Tue Apr 19 14:06:30 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67531918">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1060]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3665" _type="MoveCaretCommand" caretOffset="1493" date="Tue Apr 19 14:06:30 EDT 2022" docOffset="2812" starttimestamp="1650324058609" timestamp="67531918" />
  <Command __id="3667" _type="MoveCaretCommand" caretOffset="1493" date="Tue Apr 19 14:06:30 EDT 2022" docOffset="2812" starttimestamp="1650324058609" timestamp="67531918" />
  <Command __id="3669" _type="InsertStringCommand" date="Tue Apr 19 14:06:30 EDT 2022" starttimestamp="1650324058609" timestamp="67532361" timestamp2="67532361">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3670" _type="InsertStringCommand" date="Tue Apr 19 14:06:30 EDT 2022" starttimestamp="1650324058609" timestamp="67532361" timestamp2="67532361">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3672" _type="PauseCommand" date="Tue Apr 19 14:06:31 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67533379">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1018]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3675" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Tue Apr 19 14:06:35 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="67537198" type="Run" />
  <Command __id="3677" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:06:36 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67537435" type="Run" />
  <Command __id="3678" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:06:36 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67537440" type="Run" />
  <Command __id="3680" _type="PauseCommand" date="Tue Apr 19 14:06:38 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67539985">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2545]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3688" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:06:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67544514" type="Run" />
  <Command __id="3690" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:06:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67544516" type="Run" />
  <Command __id="3691" _type="ShellCommand" date="Tue Apr 19 14:06:43 EDT 2022" starttimestamp="1650324058609" timestamp="67545385" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3693" _type="PauseCommand" date="Tue Apr 19 14:06:47 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67549186">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3801]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3696" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:07:20 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67581448" type="Debug" />
  <Command __id="3698" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Tue Apr 19 14:07:20 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="67581448" type="Run" />
  <Command __id="3699" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:07:20 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67581448" type="Debug" />
  <Command __id="3700" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Tue Apr 19 14:07:20 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="67581448" type="Run" />
  <Command __id="3702" _type="PauseCommand" date="Tue Apr 19 14:07:22 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67584114">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2666]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3701" _type="ShellCommand" date="Tue Apr 19 14:07:22 EDT 2022" starttimestamp="1650324058609" timestamp="67584114" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3704" _type="PauseCommand" date="Tue Apr 19 14:07:23 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67585362">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1248]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3714" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:07:50 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67612160" type="Run" />
  <Command __id="3716" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:07:50 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67612162" type="Run" />
  <Command __id="3718" _type="PauseCommand" date="Tue Apr 19 14:07:52 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67613738">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1576]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3719" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:07:55 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67617181" type="Run" />
  <Command __id="3721" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:07:55 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67617184" type="Run" />
  <Command __id="3723" _type="PauseCommand" date="Tue Apr 19 14:08:16 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="67637748">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[20564]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3722" _type="ShellCommand" date="Tue Apr 19 14:08:16 EDT 2022" starttimestamp="1650324058609" timestamp="67637748" type="ECLIPSE_MAXIMIZED" />
  <Command __id="3724" _type="ShellCommand" date="Tue Apr 19 14:08:16 EDT 2022" starttimestamp="1650324058609" timestamp="67637817" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3726" _type="PauseCommand" date="Tue Apr 19 14:08:19 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67641243">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3426]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3725" _type="ShellCommand" date="Tue Apr 19 14:08:19 EDT 2022" starttimestamp="1650324058609" timestamp="67641243" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3727" _type="ShellCommand" date="Tue Apr 19 14:08:20 EDT 2022" starttimestamp="1650324058609" timestamp="67642066" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3729" _type="PauseCommand" date="Tue Apr 19 14:08:21 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67643382">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1315]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3728" _type="ShellCommand" date="Tue Apr 19 14:08:21 EDT 2022" starttimestamp="1650324058609" timestamp="67643381" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3731" _type="PauseCommand" date="Tue Apr 19 14:08:29 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="67650427">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7046]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3730" _type="ShellCommand" date="Tue Apr 19 14:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="67650427" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3733" _type="PauseCommand" date="Tue Apr 19 14:08:43 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="67664802">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14375]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3741" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:09:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67724811" type="Run" />
  <Command __id="3743" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:09:43 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67724813" type="Run" />
  <Command __id="3745" _type="PauseCommand" date="Tue Apr 19 14:09:44 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67725856">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1043]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3772" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:10:33 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67775054" type="Run" />
  <Command __id="3774" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:10:33 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67775055" type="Run" />
  <Command __id="3776" _type="PauseCommand" date="Tue Apr 19 14:10:40 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="67782117">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[7062]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3775" _type="ShellCommand" date="Tue Apr 19 14:10:40 EDT 2022" starttimestamp="1650324058609" timestamp="67782117" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3778" _type="PauseCommand" date="Tue Apr 19 14:10:43 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67784738">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2621]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3790" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:10:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67797677" type="Run" />
  <Command __id="3792" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:10:56 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67797679" type="Run" />
  <Command __id="3794" _type="PauseCommand" date="Tue Apr 19 14:11:11 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="67812759">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[15080]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3793" _type="ConsoleOutput" date="Tue Apr 19 14:11:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67812759" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22592
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):22"), Diff(DELETE,"621"), Diff(INSERT,"592"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3796" _type="PauseCommand" date="Tue Apr 19 14:11:40 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="67842267">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[29508]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3795" _type="ShellCommand" date="Tue Apr 19 14:11:40 EDT 2022" starttimestamp="1650324058609" timestamp="67842267" type="ECLIPSE_MAXIMIZED" />
  <Command __id="3797" _type="ShellCommand" date="Tue Apr 19 14:11:40 EDT 2022" starttimestamp="1650324058609" timestamp="67842335" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3799" _type="PauseCommand" date="Tue Apr 19 14:11:42 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67844172">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1837]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3826" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:12:23 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67884626" type="Run" />
  <Command __id="3828" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Apr 19 14:12:23 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="67884627" type="Run" />
  <Command __id="3830" _type="PauseCommand" date="Tue Apr 19 14:12:35 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="67896734">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[12107]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3829" _type="ConsoleOutput" date="Tue Apr 19 14:12:35 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67896734" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13585
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):135"), Diff(DELETE,"5"), Diff(EQUAL,"8"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3832" _type="PauseCommand" date="Tue Apr 19 14:13:08 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="67929457">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[32723]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3831" _type="ShellCommand" date="Tue Apr 19 14:13:08 EDT 2022" starttimestamp="1650324058609" timestamp="67929457" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3833" _type="ShellCommand" date="Tue Apr 19 14:13:08 EDT 2022" starttimestamp="1650324058609" timestamp="67930359" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3835" _type="PauseCommand" date="Tue Apr 19 14:13:12 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67933539">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3180]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3834" _type="ConsoleOutput" date="Tue Apr 19 14:13:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67933539" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Tue Apr 19 14:13:12 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):13585"), Diff(INSERT,"Building symbol table and running first pass checks:Tue Apr 19 14:13:12 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3837" _type="PauseCommand" date="Tue Apr 19 14:13:15 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67936862">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3323]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3836" _type="ConsoleOutput" date="Tue Apr 19 14:13:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67936862" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Tue Apr 19 14:13:15 EDT 2022
Start O(n2) inter- and intra class method calls:Tue Apr 19 14:13:15 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Tue Apr 19 14:13:1"), Diff(DELETE,"2"), Diff(INSERT,"5 EDT 2022¶Start O(n2) inter- and intra class method calls:Tue Apr 19 14:13:15"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3838" _type="ConsoleOutput" date="Tue Apr 19 14:13:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67936987" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Tue Apr 19 14:13:15 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Tue Apr 19 14:13:15 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Tue Apr 19 14:13:15 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3840" _type="PauseCommand" date="Tue Apr 19 14:13:17 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="67938677">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1690]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3839" _type="ConsoleOutput" date="Tue Apr 19 14:13:17 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67938677" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Tue Apr 19 14:13:17 EDT 2022
Generating checks:Tue Apr 19 14:13:17 EDT 2022
Finished Generating checks:Tue Apr 19 14:13:17 EDT 2022
Generating externals:Tue Apr 19 14:13:17 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Tue Apr 19 14:13:17 EDT 2022¶Generating checks:Tue Apr 19 14:13:17 EDT 2022¶Finished Generating checks:Tue Apr 19 14:13:17 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Tue Apr 19 14:13:1"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3841" _type="ConsoleOutput" date="Tue Apr 19 14:13:17 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67939361" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Tue Apr 19 14:13:17 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):5836
Test execution time (ms):19
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Tue Apr 19 14:13:17 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Tue Apr 19 14:13:17 EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Tue Apr 19 14:13:17 EDT 2022¶Generating externals:Tue Apr 19 14:13:17 EDT 2022"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):5836¶Test execution time (ms):19"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3842" _type="ConsoleOutput" date="Tue Apr 19 14:13:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67939422" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):15
A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428

Test execution time (ms):19
Test execution time (ms):14
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Tue Apr 19 14:13:17 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0"), Diff(INSERT,"Test execution time (ms):15¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"5836"), Diff(INSERT,"19"), Diff(EQUAL,"¶Test execution time (ms):1"), Diff(DELETE,"9"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3843" _type="ConsoleOutput" date="Tue Apr 19 14:13:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67939442" type="ConsoleOutput">
    <outputString><![CDATA[A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.25

Test execution time (ms):18
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):15¶A6InterfaceAsType"), Diff(INSERT,"A6AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9428571428571428"), Diff(INSERT,"25"), Diff(EQUAL,"¶¶Test execution time (ms):1"), Diff(DELETE,"9¶Test execution time (ms):14"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3845" _type="PauseCommand" date="Tue Apr 19 14:13:22 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="67944254">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4812]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3844" _type="ConsoleOutput" date="Tue Apr 19 14:13:22 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67944254" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
Test execution time (ms):19
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.25¶"), Diff(INSERT,"Test execution time (ms):8"), Diff(EQUAL,"¶Test execution time (ms):1"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3846" _type="ConsoleOutput" date="Tue Apr 19 14:13:22 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67944322" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14
Test execution time (ms):19
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"8"), Diff(INSERT,"14"), Diff(EQUAL,"¶Test execution time (ms):19¶")]]]></diff>
  </Command>
  <Command __id="3847" _type="ConsoleOutput" date="Tue Apr 19 14:13:22 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="67944385" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (25)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (199)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (139)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (94)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (102)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (169)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):14¶Test execution time (ms):19"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (25)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (199)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (139)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (102)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (169)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3849" _type="PauseCommand" date="Tue Apr 19 14:13:28 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="67949907">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5522]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
