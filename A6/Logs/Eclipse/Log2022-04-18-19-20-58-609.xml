<Events startTimestamp="1650324058609" logVersion="1.0.0.202111260825">
  <Command __id="1" _type="MoveCaretCommand" caretOffset="3747" date="Mon Apr 18 19:20:59 EDT 2022" docOffset="5233" starttimestamp="1650324058609" timestamp="1226" />
  <Command __id="3" _type="PauseCommand" date="Mon Apr 18 19:21:08 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="9967">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8737]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2" _type="EclipseCommand" commandID="org.eclipse.ui.file.refresh" date="Mon Apr 18 19:21:08 EDT 2022" starttimestamp="1650324058609" timestamp="9963" />
  <Command __id="4" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:21:08 EDT 2022" starttimestamp="1650324058609" timestamp="10389" />
  <Command __id="5" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:21:09 EDT 2022" starttimestamp="1650324058609" timestamp="10542" />
  <Command __id="7" _type="PauseCommand" date="Mon Apr 18 19:21:46 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="47569">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[37027]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6" _type="ShellCommand" date="Mon Apr 18 19:21:46 EDT 2022" starttimestamp="1650324058609" timestamp="47569" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9" _type="PauseCommand" date="Mon Apr 18 19:22:02 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="64094">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16524]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="10" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:22:06 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="67862" type="Run" />
  <Command __id="12" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:22:06 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="67862" type="Run" />
  <Command __id="14" _type="PauseCommand" date="Mon Apr 18 19:22:09 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="70828">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2966]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="13" _type="ShellCommand" date="Mon Apr 18 19:22:09 EDT 2022" starttimestamp="1650324058609" timestamp="70828" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="16" _type="PauseCommand" date="Mon Apr 18 19:22:17 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="78628">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7800]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="15" _type="ShellCommand" date="Mon Apr 18 19:22:17 EDT 2022" starttimestamp="1650324058609" timestamp="78628" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 19:20:59 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" projectName="A6" starttimestamp="1650324058609" timestamp="572">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}
		


}
]]></snapshot>
  </Command>
  <Command __id="18" _type="PauseCommand" date="Mon Apr 18 19:22:46 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="107429">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[28801]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="19" _type="MoveCaretCommand" caretOffset="2575" date="Mon Apr 18 19:22:46 EDT 2022" docOffset="3894" starttimestamp="1650324058609" timestamp="107996" />
  <Command __id="17" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 19:22:46 EDT 2022" docASTNodeCount="719" docActiveCodeLength="5117" docExpressionCount="520" docLength="5504" projectName="A6" starttimestamp="1650324058609" timestamp="107429">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.exampleServerReadThread;
import readThread.ReadThreadInterface;
import readThread.ServerReadThread;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;

public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	
	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	@Override
	protected void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ServerArgsProcessor.getNIOServerPort(args);
			
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);
			
			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
		
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("COMMAND IN SERVER: "+ aMessageString);
		
		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

	@Override
	public List<SocketChannel> getSocketList() {
		// TODO Auto-generated method stub
		return socketList;
	}

	@Override
	public SocketChannel getSocketChannel() {
		// TODO Auto-generated method stub
		return currentSocket;
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

}
]]></snapshot>
  </Command>
  <Command __id="21" _type="PauseCommand" date="Mon Apr 18 19:23:09 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="131020">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23024]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="22" _type="MoveCaretCommand" caretOffset="8912" date="Mon Apr 18 19:23:09 EDT 2022" docOffset="10603" starttimestamp="1650324058609" timestamp="131307" />
  <Command __id="24" _type="PauseCommand" date="Mon Apr 18 19:23:20 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="141527">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10220]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="23" _type="ConsoleOutput" date="Mon Apr 18 19:23:20 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="141527" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67664
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="26" _type="PauseCommand" date="Mon Apr 18 19:23:38 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="160162">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[18635]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="25" _type="ShellCommand" date="Mon Apr 18 19:23:38 EDT 2022" starttimestamp="1650324058609" timestamp="160162" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="28" _type="PauseCommand" date="Mon Apr 18 19:24:05 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="186610">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[26448]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="27" _type="ShellCommand" date="Mon Apr 18 19:24:05 EDT 2022" starttimestamp="1650324058609" timestamp="186610" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="20" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 19:23:09 EDT 2022" docASTNodeCount="1310" docActiveCodeLength="9564" docExpressionCount="920" docLength="10769" projectName="A6" starttimestamp="1650324058609" timestamp="131020">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientOutCoupler;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import client.ClientRemoteObject;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {

	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	protected static String SERVER_NAME;
	private static int NIO_SERVER_PORT;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		

		// Make sure you set this property when processing args
		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));
		

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);
		// ClientArgsProcessor.getServerHost(args);
		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);
		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);
		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);
		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);
		

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			System.out.println("Broadcasting IPC mechanism: "+mechanism);
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism, aProposalNumber);
					System.out.println("SEND NEW MECHANISM TO A CLIENT FROM SERVER");
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
		System.out.println("ADDED CONNECTION LISTENER");
	}

	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			int aProposalNumber = -1;
			ClientRemoteInterfaceGIPC fake = new ClientRemoteObject();
			broadcastIPCMechanism(mechanism, fake, aProposalNumber , this.broadcastMetaState);
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="30" _type="PauseCommand" date="Mon Apr 18 19:24:07 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="189320">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2710]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="31" _type="MoveCaretCommand" caretOffset="3747" date="Mon Apr 18 19:24:08 EDT 2022" docOffset="5233" starttimestamp="1650324058609" timestamp="189639" />
  <Command __id="33" _type="PauseCommand" date="Mon Apr 18 19:24:14 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="195890">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6251]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="32" _type="ShellCommand" date="Mon Apr 18 19:24:14 EDT 2022" starttimestamp="1650324058609" timestamp="195890" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="35" _type="PauseCommand" date="Mon Apr 18 19:25:01 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="243301">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[47411]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="34" _type="ShellCommand" date="Mon Apr 18 19:25:01 EDT 2022" starttimestamp="1650324058609" timestamp="243301" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="37" _type="PauseCommand" date="Mon Apr 18 19:25:12 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="254215">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10914]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="36" _type="ConsoleOutput" date="Mon Apr 18 19:25:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="254215" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOTwoClientReadWriteNonAtomic did not pass completely:In Server writing to client 1 via NIO, no line found matching regex: .*?\{Read Thread\}.*?SocketChannelWriteRequested.*
GIPC is not checked because RMI failed%0.25Steps traced since last test:


Test execution time (ms):112622
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GIPCRMINIOTwoClientReadWriteNonAtomic did not pass completely:In Server writing to client 1 via NIO, no line found matching regex: .*?\{Read Thread\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.25Steps traced since last test:¶¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"67664"), Diff(INSERT,"112622"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="39" _type="PauseCommand" date="Mon Apr 18 19:25:30 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="272102">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[17887]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="38" _type="ShellCommand" date="Mon Apr 18 19:25:30 EDT 2022" starttimestamp="1650324058609" timestamp="272102" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="41" _type="PauseCommand" date="Mon Apr 18 19:25:35 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="276800">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4698]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="40" _type="ConsoleOutput" date="Mon Apr 18 19:25:35 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="276800" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22607
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOTwoClientReadWriteNonAtomic did not pass completely:In Server writing to client 1 via NIO, no line found matching regex: .*?\{Read Thread\}.*?SocketChannelWriteRequested.*¶GIPC is not checked because RMI failed%0.25Steps traced since last test:¶¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"112622"), Diff(INSERT,"22607"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="43" _type="PauseCommand" date="Mon Apr 18 19:25:58 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="299434">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22634]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="42" _type="ConsoleOutput" date="Mon Apr 18 19:25:58 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="299434" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22576
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):22"), Diff(DELETE,"607"), Diff(INSERT,"576"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="45" _type="PauseCommand" date="Mon Apr 18 19:26:20 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="321965">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22531]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="44" _type="ConsoleOutput" date="Mon Apr 18 19:26:20 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="321965" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22578
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2257"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="47" _type="PauseCommand" date="Mon Apr 18 19:26:43 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="344611">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22646]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="46" _type="ConsoleOutput" date="Mon Apr 18 19:26:43 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="344611" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22589
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"7"), Diff(EQUAL,"8"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="49" _type="PauseCommand" date="Mon Apr 18 19:26:52 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="353571">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8960]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="48" _type="ConsoleOutput" date="Mon Apr 18 19:26:52 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="353571" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@38e3ffce . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22589"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@38e3ffce . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="51" _type="PauseCommand" date="Mon Apr 18 19:27:20 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="381610">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[28039]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="50" _type="ConsoleOutput" date="Mon Apr 18 19:27:20 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="381610" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21347
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOTwoClientReadWriteNonAtomic@38e3ffce . Results may change."), Diff(INSERT,"Test execution time (ms):21347"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="53" _type="PauseCommand" date="Mon Apr 18 19:27:33 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="395384">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13774]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="52" _type="ConsoleOutput" date="Mon Apr 18 19:27:33 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="395384" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13812
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(EQUAL,"13"), Diff(DELETE,"47"), Diff(INSERT,"812"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="55" _type="PauseCommand" date="Mon Apr 18 19:27:47 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="409350">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13966]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="54" _type="ConsoleOutput" date="Mon Apr 18 19:27:47 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="409350" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13908
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):13"), Diff(DELETE,"812"), Diff(INSERT,"908"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="57" _type="PauseCommand" date="Mon Apr 18 19:47:12 EDT 2022" range="10m-20m" starttimestamp="1650324058609" timestamp="1574098">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1164748]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="56" _type="ConsoleOutput" date="Mon Apr 18 19:47:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1574098" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 19:47:12 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):13908"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 19:47:12 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="59" _type="PauseCommand" date="Mon Apr 18 19:47:16 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="1577723">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3625]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="58" _type="ConsoleOutput" date="Mon Apr 18 19:47:16 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1577723" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 19:47:16 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 19:47:16 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Mon Apr 18 19:47:1"), Diff(DELETE,"2"), Diff(INSERT,"6 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 18 19:47:16"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="60" _type="ConsoleOutput" date="Mon Apr 18 19:47:16 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1577811" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 19:47:16 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 19:47:16 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 19:47:16 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="62" _type="PauseCommand" date="Mon Apr 18 19:47:17 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="1579388">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1577]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="61" _type="ShellCommand" date="Mon Apr 18 19:47:17 EDT 2022" starttimestamp="1650324058609" timestamp="1579388" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="63" _type="ConsoleOutput" date="Mon Apr 18 19:47:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1579682" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 19:47:18 EDT 2022
Generating checks:Mon Apr 18 19:47:18 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method call"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 19:47:18 EDT 2022¶Generating check"), Diff(EQUAL,"s:Mon Apr 18 19:47:1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="64" _type="ConsoleOutput" date="Mon Apr 18 19:47:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1579749" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating checks:Mon Apr 18 19:47:18 EDT 2022
Generating externals:Mon Apr 18 19:47:18 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass"), Diff(INSERT,"Generating"), Diff(EQUAL," checks:Mon Apr 18 19:47:18 EDT 2022¶Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 19:47:18 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="65" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:47:18 EDT 2022" starttimestamp="1650324058609" timestamp="1580233" />
  <Command __id="66" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:47:18 EDT 2022" starttimestamp="1650324058609" timestamp="1580244" />
  <Command __id="67" _type="ConsoleOutput" date="Mon Apr 18 19:47:19 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1581128" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 19:47:19 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):7042
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 19:47:1"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating externals:Mon Apr 18 19:47:18 EDT 202"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):704"), Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="68" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:47:20 EDT 2022" starttimestamp="1650324058609" timestamp="1581729" />
  <Command __id="69" _type="EclipseCommand" commandID="" date="Mon Apr 18 19:47:20 EDT 2022" starttimestamp="1650324058609" timestamp="1581746" />
  <Command __id="70" _type="ShellCommand" date="Mon Apr 18 19:47:20 EDT 2022" starttimestamp="1650324058609" timestamp="1582324" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="71" _type="ConsoleOutput" date="Mon Apr 18 19:47:21 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="1582690" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):39

Test execution time (ms):29
A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286

A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428
Test execution time (ms):53
Test execution time (ms):32
A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882

Test execution time (ms):37
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 19:47:19 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warn"), Diff(INSERT,"Test execution time (ms):39¶¶Test execution time (ms):29¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286¶¶A6InterfaceAsType did not pass completely:See console trace about l"), Diff(EQUAL,"in"), Diff(DELETE,"g"), Diff(INSERT,"e"), Diff(EQUAL,"s f"), Diff(DELETE,"ound in checkstyle text, see traced console output%0.0"), Diff(INSERT,"ailing  this check%0.9428571428571428¶Test execution time (ms):53¶Test execution time (ms):32¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.23529411764705882"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(INSERT,"3"), Diff(EQUAL,"7"), Diff(DELETE,"042"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="73" _type="PauseCommand" date="Mon Apr 18 19:47:24 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="1585507">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2817]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="75" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:55:57 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2099168" type="Run" />
  <Command __id="77" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:55:57 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2099168" type="Run" />
  <Command __id="79" _type="PauseCommand" date="Mon Apr 18 19:56:12 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2113998">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[14830]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="86" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:56:25 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2126974" type="Run" />
  <Command __id="88" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 19:56:25 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2126974" type="Run" />
  <Command __id="89" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:56:25 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2127377" type="Run" />
  <Command __id="90" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:56:26 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2127432" type="Run" />
  <Command __id="91" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:56:26 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2127438" type="Run" />
  <Command __id="93" _type="PauseCommand" date="Mon Apr 18 19:56:29 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2130961">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3523]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="122" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:57:09 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2170872" type="Run" />
  <Command __id="124" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:57:09 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2170873" type="Run" />
  <Command __id="126" _type="PauseCommand" date="Mon Apr 18 19:57:22 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2183629">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[12756]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="146" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:58:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2257178" type="Run" />
  <Command __id="148" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 19:58:35 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2257196" type="Run" />
  <Command __id="150" _type="PauseCommand" date="Mon Apr 18 19:58:37 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2258460">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1264]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="203" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:01:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2442609" type="Run" />
  <Command __id="205" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:01:41 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2442611" type="Run" />
  <Command __id="207" _type="PauseCommand" date="Mon Apr 18 20:01:56 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2457685">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[15074]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="206" _type="ConsoleOutput" date="Mon Apr 18 20:01:56 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2457685" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22577
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"82"), Diff(INSERT,"77"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="209" _type="PauseCommand" date="Mon Apr 18 20:02:04 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2466020">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8335]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="208" _type="ConsoleOutput" date="Mon Apr 18 20:02:04 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2466020" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 20:02:04 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22577"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 20:02:04 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="211" _type="PauseCommand" date="Mon Apr 18 20:02:09 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2470545">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4525]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="210" _type="ConsoleOutput" date="Mon Apr 18 20:02:09 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2470545" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 20:02:09 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 20:02:09 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Mon Apr 18 20:02:09 EDT 2022¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Mon Apr 18 20:02:0"), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="212" _type="ConsoleOutput" date="Mon Apr 18 20:02:09 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2470638" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 20:02:09 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 20:02:09 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 20:02:09 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="214" _type="PauseCommand" date="Mon Apr 18 20:02:11 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2473153">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2515]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="213" _type="ConsoleOutput" date="Mon Apr 18 20:02:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2473153" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 20:02:11 EDT 2022
Generating checks:Mon Apr 18 20:02:11 EDT 2022
Finished Generating checks:Mon Apr 18 20:02:11 EDT 2022
Generating externals:Mon Apr 18 20:02:11 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 20:02:11 EDT 2022¶Generating checks:Mon Apr 18 20:02:11 EDT 2022¶Finished Generating checks:Mon Apr 18 20:02:11 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Mon Apr 18 20:02:"), Diff(DELETE,"09"), Diff(INSERT,"11"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="215" _type="ConsoleOutput" date="Mon Apr 18 20:02:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2474115" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 20:02:12 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):8091
Test execution time (ms):18
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 18 20:02:1"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 18 20:02:11 EDT 2022¶Finished Generating checks:Mon Apr 18 20:02:11 EDT 2022¶Generating externals:Mon Apr 18 20:02:11 EDT 2022"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):8091¶Test execution time (ms):18"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="216" _type="ConsoleOutput" date="Mon Apr 18 20:02:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2474181" type="ConsoleOutput">
    <outputString><![CDATA[A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286

Test execution time (ms):17
A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428

Test execution time (ms):18
Test execution time (ms):10
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 20:02:12 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0"), Diff(INSERT,"A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286¶¶Test execution time (ms):17¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9428571428571428"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"809"), Diff(EQUAL,"1"), Diff(INSERT,"8"), Diff(EQUAL,"¶Test execution time (ms):1"), Diff(DELETE,"8"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="217" _type="ConsoleOutput" date="Mon Apr 18 20:02:12 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2474208" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):23
A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.9285714285714286¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"17"), Diff(INSERT,"23"), Diff(EQUAL,"¶A6"), Diff(DELETE,"InterfaceAsType"), Diff(INSERT,"AccessModifiersMatched"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"9428571428571428¶¶Test execution time (ms):18¶Test execution time (ms):10"), Diff(INSERT,"25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="219" _type="PauseCommand" date="Mon Apr 18 20:02:42 EDT 2022" range="30s-1m" starttimestamp="1650324058609" timestamp="2504339">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[30131]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="218" _type="ConsoleOutput" date="Mon Apr 18 20:02:42 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2504339" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"23¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.25"), Diff(INSERT,"5¶Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="220" _type="ConsoleOutput" date="Mon Apr 18 20:02:43 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2504403" type="ConsoleOutput">
    <outputString><![CDATA[
A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.8620689655172413
Test execution time (ms):33
Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.8620689655172413¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5"), Diff(INSERT,"33"), Diff(EQUAL,"¶Test execution time (ms):24¶")]]]></diff>
  </Command>
  <Command __id="221" _type="ConsoleOutput" date="Mon Apr 18 20:02:43 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2504479" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (187)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (88)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (82)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.8620689655172413¶Test execution time (ms):33¶Test execution time (ms):24"), Diff(INSERT,"Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (88)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="223" _type="PauseCommand" date="Mon Apr 18 20:02:47 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2508520">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4041]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="222" _type="ConsoleOutput" date="Mon Apr 18 20:02:47 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2508520" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@e37b295 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (88)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@e37b295 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="225" _type="PauseCommand" date="Mon Apr 18 20:02:49 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2510666">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2146]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="224" _type="ShellCommand" date="Mon Apr 18 20:02:49 EDT 2022" starttimestamp="1650324058609" timestamp="2510666" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="29" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 19:24:07 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" projectName="A6" starttimestamp="1650324058609" timestamp="189320">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="80" _type="Replace" date="Mon Apr 18 19:56:12 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" endLine="187" insertionLength="6553" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="6553" offset="0" startLine="0" starttimestamp="1650324058609" timestamp="2114291">
    <deletedText><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}
		


}
]]></deletedText>
    <insertedText><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}
		


}
]]></insertedText>
  </DocumentChange>
  <Command __id="227" _type="PauseCommand" date="Mon Apr 18 20:03:51 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="2573178">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[62512]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="228" _type="MoveCaretCommand" caretOffset="1553" date="Mon Apr 18 20:03:52 EDT 2022" docOffset="2123" starttimestamp="1650324058609" timestamp="2573461" />
  <Command __id="229" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:03:53 EDT 2022" starttimestamp="1650324058609" timestamp="2574405" />
  <Command __id="230" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:03:53 EDT 2022" starttimestamp="1650324058609" timestamp="2574413" />
  <Command __id="226" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:03:51 EDT 2022" docASTNodeCount="325" docActiveCodeLength="2424" docExpressionCount="226" docLength="2685" projectName="A6" starttimestamp="1650324058609" timestamp="2573178">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.concurrent.ArrayBlockingQueue;

import client.ClientRemoteObjectNIO;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.AnNIOManagerPrintClient;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;


@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})
public class ClientReadThread implements ReadThreadInterface{
	//final ClientRemoteObjectNIO client;
	final ClientRemoteObjectNIO client;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ClientReadThread (final ClientRemoteObjectNIO aClient) {
		client = aClient;
	}
	
	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			String aMessageString = new String(originalMessage.array());
			
			System.out.println(aMessageString);
			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
			
			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);
			
			
			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();
			
			
			RemoteProposeRequestReceived.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);
			commandProcessor.processCommand(aMessageString);
			ProposedStateSet.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);
			//client.aProposalNumber++;
		
		}
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <Command __id="232" _type="PauseCommand" date="Mon Apr 18 20:04:03 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2585259">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10846]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="233" _type="MoveCaretCommand" caretOffset="2762" date="Mon Apr 18 20:04:04 EDT 2022" docOffset="4054" starttimestamp="1650324058609" timestamp="2585675" />
  <Command __id="235" _type="PauseCommand" date="Mon Apr 18 20:04:16 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2597482">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11807]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="234" _type="MoveCaretCommand" caretOffset="1322" date="Mon Apr 18 20:04:16 EDT 2022" docOffset="2614" starttimestamp="1650324058609" timestamp="2597482" />
  <Command __id="237" _type="ShellCommand" date="Mon Apr 18 20:04:16 EDT 2022" starttimestamp="1650324058609" timestamp="2597851" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="239" _type="PauseCommand" date="Mon Apr 18 20:04:18 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2599469">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1618]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="238" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:18 EDT 2022" forward="false" matchWord="false" offset="2614" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2599469" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="241" _type="PauseCommand" date="Mon Apr 18 20:04:19 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2601233">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1764]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="240" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:19 EDT 2022" forward="true" matchWord="false" offset="2614" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2601233" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="242" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:20 EDT 2022" forward="true" matchWord="false" offset="2614" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2601674" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="243" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:20 EDT 2022" forward="true" matchWord="false" offset="2614" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2601840" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="245" _type="PauseCommand" date="Mon Apr 18 20:04:22 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2603604">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1764]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="244" _type="ShellCommand" date="Mon Apr 18 20:04:22 EDT 2022" starttimestamp="1650324058609" timestamp="2603604" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="247" _type="PauseCommand" date="Mon Apr 18 20:04:28 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2609785">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6181]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="246" _type="MoveCaretCommand" caretOffset="1320" date="Mon Apr 18 20:04:28 EDT 2022" docOffset="2612" starttimestamp="1650324058609" timestamp="2609785" />
  <Command __id="249" _type="ShellCommand" date="Mon Apr 18 20:04:28 EDT 2022" starttimestamp="1650324058609" timestamp="2610304" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="251" _type="PauseCommand" date="Mon Apr 18 20:04:30 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2611805">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1501]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="250" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:30 EDT 2022" forward="true" matchWord="false" offset="2612" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2611805" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="253" _type="PauseCommand" date="Mon Apr 18 20:04:32 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2614024">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2219]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="252" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:32 EDT 2022" forward="false" matchWord="false" offset="2612" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2614024" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="254" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:04:33 EDT 2022" forward="false" matchWord="false" offset="2612" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="2614533" wrapSearch="false">
    <searchString><![CDATA[position]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="256" _type="PauseCommand" date="Mon Apr 18 20:04:34 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2615647">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1114]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="255" _type="ShellCommand" date="Mon Apr 18 20:04:34 EDT 2022" starttimestamp="1650324058609" timestamp="2615647" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="231" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:04:03 EDT 2022" docASTNodeCount="557" docActiveCodeLength="3843" docExpressionCount="387" docLength="4187" projectName="A6" starttimestamp="1650324058609" timestamp="2585259">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener, FakeClientInterface{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	@Override
	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException exception) {
			exception.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new exampleClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception exception) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {
		System.out.println("client channel has written");
	}

	@Override
	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
				
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

}]]></snapshot>
  </Command>
  <Command __id="258" _type="PauseCommand" date="Mon Apr 18 20:05:00 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="2642059">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[26412]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="257" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:05:00 EDT 2022" docASTNodeCount="325" docActiveCodeLength="2424" docExpressionCount="226" docLength="2685" projectName="A6" starttimestamp="1650324058609" timestamp="2642059">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import client.ClientRemoteObjectNIO;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.AnNIOManagerPrintClient;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})¶public class ClientReadThread implements ReadThreadInterface{¶	//final ClientRemoteObjectNIO client;¶	final ClientRemoteObjectNIO client;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ClientReadThread (final ClientRemoteObjectNIO aClient) {¶		client = aClient;¶	}¶	¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			String aMessageString = new String(originalMessage.array());¶			¶			System.out.println(aMessageString);¶			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶			¶			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);¶			¶			¶			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();¶			¶			¶			RemoteProposeRequestReceived.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);¶			commandProcessor.processCommand(aMessageString);¶			ProposedStateSet.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);¶			//client.aProposalNumber++;¶		¶		}¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="259" _type="MoveCaretCommand" caretOffset="1154" date="Mon Apr 18 20:05:00 EDT 2022" docOffset="1724" starttimestamp="1650324058609" timestamp="2642192" />
  <DocumentChange __id="260" _type="Insert" date="Mon Apr 18 20:05:01 EDT 2022" docASTNodeCount="328" docActiveCodeLength="2430" docExpressionCount="226" docLength="2691" length="6" offset="1724" repeat="2" starttimestamp="1650324058609" timestamp="2642424" timestamp2="2644123">
    <text><![CDATA[
			O]]></text>
  </DocumentChange>
  <Command __id="261" _type="InsertStringCommand" date="Mon Apr 18 20:05:01 EDT 2022" starttimestamp="1650324058609" timestamp="2642436" timestamp2="2642436">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="264" _type="PauseCommand" date="Mon Apr 18 20:05:02 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2644132">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1696]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="263" _type="InsertStringCommand" date="Mon Apr 18 20:05:02 EDT 2022" starttimestamp="1650324058609" timestamp="2644132" timestamp2="2644132">
    <data><![CDATA[O]]></data>
  </Command>
  <DocumentChange __id="265" _type="Delete" date="Mon Apr 18 20:05:03 EDT 2022" docASTNodeCount="325" docActiveCodeLength="2429" docExpressionCount="226" docLength="2690" endLine="55" length="1" offset="1729" startLine="55" starttimestamp="1650324058609" timestamp="2644601">
    <text><![CDATA[O]]></text>
  </DocumentChange>
  <Command __id="266" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2644606" />
  <Command __id="268" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2644759" timestamp2="2644759">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="270" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2644865" timestamp2="2644865">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="272" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2644969" timestamp2="2644969">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="274" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2645090" timestamp2="2645090">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="276" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2645179" timestamp2="2645179">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="278" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2645273" timestamp2="2645273">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="280" _type="InsertStringCommand" date="Mon Apr 18 20:05:03 EDT 2022" starttimestamp="1650324058609" timestamp="2645351" timestamp2="2645351">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="282" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2645466" timestamp2="2645466">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="284" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2645729" timestamp2="2645729">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="286" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2645867" timestamp2="2645867">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="288" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2646006" timestamp2="2646006">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="290" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2646198" timestamp2="2646198">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="292" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2646279" timestamp2="2646279">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="294" _type="InsertStringCommand" date="Mon Apr 18 20:05:04 EDT 2022" starttimestamp="1650324058609" timestamp="2646382" timestamp2="2646382">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="296" _type="InsertStringCommand" date="Mon Apr 18 20:05:05 EDT 2022" starttimestamp="1650324058609" timestamp="2646502" timestamp2="2646502">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="298" _type="InsertStringCommand" date="Mon Apr 18 20:05:05 EDT 2022" starttimestamp="1650324058609" timestamp="2646949" timestamp2="2646949">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="299" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 18 20:05:06 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="2647509" />
  <DocumentChange __id="267" _type="Insert" date="Mon Apr 18 20:05:03 EDT 2022" docASTNodeCount="327" docActiveCodeLength="2445" docExpressionCount="228" docLength="2706" length="16" offset="1729" repeat="16" starttimestamp="1650324058609" timestamp="2644750" timestamp2="2646942">
    <text><![CDATA[originalMessage.]]></text>
  </DocumentChange>
  <Command __id="301" _type="PauseCommand" date="Mon Apr 18 20:05:09 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2650489">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2980]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="300" _type="Insert" date="Mon Apr 18 20:05:09 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2447" docExpressionCount="228" docLength="2708" length="2" offset="1745" repeat="2" starttimestamp="1650324058609" timestamp="2650489" timestamp2="2650596">
    <text><![CDATA[po]]></text>
  </DocumentChange>
  <Command __id="303" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:05:10 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="2651418" />
  <DocumentChange __id="304" _type="Replace" date="Mon Apr 18 20:05:10 EDT 2022" docASTNodeCount="329" docActiveCodeLength="2455" docExpressionCount="229" docLength="2716" endLine="55" insertionLength="10" int_docASTNodeCount="327" int_docActiveCodeLength="2445" int_docExpressionCount="228" int_docLength="2706" length="2" offset="1745" startLine="55" starttimestamp="1650324058609" timestamp="2651430">
    <deletedText><![CDATA[po]]></deletedText>
    <insertedText><![CDATA[position()]]></insertedText>
  </DocumentChange>
  <Command __id="305" _type="InsertStringCommand" date="Mon Apr 18 20:05:10 EDT 2022" starttimestamp="1650324058609" timestamp="2651442" timestamp2="2651442">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="307" _type="InsertStringCommand" date="Mon Apr 18 20:05:10 EDT 2022" starttimestamp="1650324058609" timestamp="2652103" timestamp2="2652103">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="309" _type="PauseCommand" date="Mon Apr 18 20:05:12 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2653889">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1786]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="308" _type="MoveCaretCommand" caretOffset="1159" date="Mon Apr 18 20:05:12 EDT 2022" docOffset="1729" starttimestamp="1650324058609" timestamp="2653889" />
  <Command __id="311" _type="InsertStringCommand" date="Mon Apr 18 20:05:12 EDT 2022" starttimestamp="1650324058609" timestamp="2654383" timestamp2="2654383">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="313" _type="InsertStringCommand" date="Mon Apr 18 20:05:13 EDT 2022" starttimestamp="1650324058609" timestamp="2654491" timestamp2="2654491">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="315" _type="InsertStringCommand" date="Mon Apr 18 20:05:13 EDT 2022" starttimestamp="1650324058609" timestamp="2654643" timestamp2="2654643">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="317" _type="InsertStringCommand" date="Mon Apr 18 20:05:13 EDT 2022" starttimestamp="1650324058609" timestamp="2654810" timestamp2="2654810">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="319" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2655623" timestamp2="2655623">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="321" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2655702" timestamp2="2655702">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="323" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2655843" timestamp2="2655843">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="325" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2655946" timestamp2="2655946">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="327" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2656105" timestamp2="2656105">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="329" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2656175" timestamp2="2656175">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="331" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2656239" timestamp2="2656239">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="333" _type="InsertStringCommand" date="Mon Apr 18 20:05:14 EDT 2022" starttimestamp="1650324058609" timestamp="2656313" timestamp2="2656313">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="335" _type="InsertStringCommand" date="Mon Apr 18 20:05:15 EDT 2022" starttimestamp="1650324058609" timestamp="2656966" timestamp2="2656966">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="337" _type="InsertStringCommand" date="Mon Apr 18 20:05:15 EDT 2022" starttimestamp="1650324058609" timestamp="2657148" timestamp2="2657148">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="339" _type="InsertStringCommand" date="Mon Apr 18 20:05:15 EDT 2022" starttimestamp="1650324058609" timestamp="2657235" timestamp2="2657235">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="340" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:05:16 EDT 2022" starttimestamp="1650324058609" timestamp="2657976" />
  <Command __id="341" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:05:16 EDT 2022" starttimestamp="1650324058609" timestamp="2658038" />
  <Command __id="342" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:05:16 EDT 2022" starttimestamp="1650324058609" timestamp="2658105" />
  <DocumentChange __id="306" _type="Insert" date="Mon Apr 18 20:05:10 EDT 2022" docASTNodeCount="329" docActiveCodeLength="2456" docExpressionCount="229" docLength="2717" length="1" offset="1755" starttimestamp="1650324058609" timestamp="2652095">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="310" _type="Insert" date="Mon Apr 18 20:05:12 EDT 2022" docASTNodeCount="332" docActiveCodeLength="2471" docExpressionCount="230" docLength="2732" length="15" offset="1729" repeat="15" starttimestamp="1650324058609" timestamp="2654375" timestamp2="2657228">
    <text><![CDATA[int position = ]]></text>
  </DocumentChange>
  <Command __id="344" _type="PauseCommand" date="Mon Apr 18 20:05:32 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2673423">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[15318]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="345" _type="InsertStringCommand" date="Mon Apr 18 20:05:32 EDT 2022" starttimestamp="1650324058609" timestamp="2673443" timestamp2="2673443">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="347" _type="InsertStringCommand" date="Mon Apr 18 20:05:32 EDT 2022" starttimestamp="1650324058609" timestamp="2673942" timestamp2="2673942">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="349" _type="InsertStringCommand" date="Mon Apr 18 20:05:32 EDT 2022" starttimestamp="1650324058609" timestamp="2674216" timestamp2="2674216">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="351" _type="InsertStringCommand" date="Mon Apr 18 20:05:32 EDT 2022" starttimestamp="1650324058609" timestamp="2674337" timestamp2="2674337">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="353" _type="InsertStringCommand" date="Mon Apr 18 20:05:33 EDT 2022" starttimestamp="1650324058609" timestamp="2674570" timestamp2="2674570">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="356" _type="PauseCommand" date="Mon Apr 18 20:05:34 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2675828">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1258]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="355" _type="InsertStringCommand" date="Mon Apr 18 20:05:34 EDT 2022" starttimestamp="1650324058609" timestamp="2675828" timestamp2="2675828">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="358" _type="InsertStringCommand" date="Mon Apr 18 20:05:34 EDT 2022" starttimestamp="1650324058609" timestamp="2676007" timestamp2="2676007">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="360" _type="InsertStringCommand" date="Mon Apr 18 20:05:34 EDT 2022" starttimestamp="1650324058609" timestamp="2676352" timestamp2="2676352">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="362" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2676482" timestamp2="2676482">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="364" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2676629" timestamp2="2676629">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="366" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2676772" timestamp2="2676772">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="368" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2676849" timestamp2="2676849">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="370" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2677041" timestamp2="2677041">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="372" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2677161" timestamp2="2677161">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="374" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2677232" timestamp2="2677232">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="376" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2677289" timestamp2="2677289">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="378" _type="InsertStringCommand" date="Mon Apr 18 20:05:35 EDT 2022" starttimestamp="1650324058609" timestamp="2677367" timestamp2="2677367">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="380" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2677494" timestamp2="2677494">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="382" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2677565" timestamp2="2677565">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="384" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2677676" timestamp2="2677676">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="386" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2677833" timestamp2="2677833">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="388" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2677909" timestamp2="2677909">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="390" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2678165" timestamp2="2678165">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="392" _type="InsertStringCommand" date="Mon Apr 18 20:05:36 EDT 2022" starttimestamp="1650324058609" timestamp="2678370" timestamp2="2678370">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="394" _type="InsertStringCommand" date="Mon Apr 18 20:05:37 EDT 2022" starttimestamp="1650324058609" timestamp="2678441" timestamp2="2678441">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="396" _type="InsertStringCommand" date="Mon Apr 18 20:05:37 EDT 2022" starttimestamp="1650324058609" timestamp="2678621" timestamp2="2678621">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="398" _type="InsertStringCommand" date="Mon Apr 18 20:05:37 EDT 2022" starttimestamp="1650324058609" timestamp="2678784" timestamp2="2678784">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="400" _type="InsertStringCommand" date="Mon Apr 18 20:05:37 EDT 2022" starttimestamp="1650324058609" timestamp="2678857" timestamp2="2678857">
    <data><![CDATA[r]]></data>
  </Command>
  <DocumentChange __id="343" _type="Insert" date="Mon Apr 18 20:05:32 EDT 2022" docASTNodeCount="332" docActiveCodeLength="2481" docExpressionCount="230" docLength="2768" length="36" offset="1724" repeat="28" starttimestamp="1650324058609" timestamp="2673423" timestamp2="2678841">
    <text><![CDATA[
			
			/// To pass the autograder]]></text>
  </DocumentChange>
  <Command __id="402" _type="PauseCommand" date="Mon Apr 18 20:05:41 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2682476">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3619]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="401" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:05:41 EDT 2022" docASTNodeCount="557" docActiveCodeLength="3843" docExpressionCount="387" docLength="4187" projectName="A6" starttimestamp="1650324058609" timestamp="2682476">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener, FakeClientInterface{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	@Override¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException exception) {¶			exception.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new exampleClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception exception) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶				¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="403" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:05:41 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" projectName="A6" starttimestamp="1650324058609" timestamp="2682593">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="404" _type="MoveCaretCommand" caretOffset="5233" date="Mon Apr 18 20:05:41 EDT 2022" docOffset="5233" starttimestamp="1650324058609" timestamp="2682852" />
  <Command __id="406" _type="MoveCaretCommand" caretOffset="2575" date="Mon Apr 18 20:05:42 EDT 2022" docOffset="3894" starttimestamp="1650324058609" timestamp="2683803" />
  <Command __id="408" _type="PauseCommand" date="Mon Apr 18 20:06:57 EDT 2022" range="1m-2m" starttimestamp="1650324058609" timestamp="2759350">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[75547]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="407" _type="ShellCommand" date="Mon Apr 18 20:06:57 EDT 2022" starttimestamp="1650324058609" timestamp="2759350" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="410" _type="PauseCommand" date="Mon Apr 18 20:06:59 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2761194">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1844]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="409" _type="ShellCommand" date="Mon Apr 18 20:06:59 EDT 2022" starttimestamp="1650324058609" timestamp="2761194" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="411" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:00 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2761403" type="Debug" />
  <Command __id="412" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:00 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2761403" type="Debug" />
  <Command __id="413" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:07:00 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2761404" type="Run" />
  <Command __id="415" _type="PauseCommand" date="Mon Apr 18 20:07:02 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2763701">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2297]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="414" _type="ShellCommand" date="Mon Apr 18 20:07:02 EDT 2022" starttimestamp="1650324058609" timestamp="2763701" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="417" _type="PauseCommand" date="Mon Apr 18 20:07:04 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2766280">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2579]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="416" _type="ShellCommand" date="Mon Apr 18 20:07:04 EDT 2022" starttimestamp="1650324058609" timestamp="2766280" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="418" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:05 EDT 2022" starttimestamp="1650324058609" timestamp="2766434" />
  <Command __id="419" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:05 EDT 2022" starttimestamp="1650324058609" timestamp="2766497" />
  <Command __id="420" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:07:05 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2767253" type="Run" />
  <Command __id="421" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:07:05 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2767254" type="Run" />
  <Command __id="422" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:06 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2767458" type="Run" />
  <Command __id="423" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:06 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2767481" type="Run" />
  <Command __id="424" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:06 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2767481" type="Run" />
  <Command __id="425" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:06 EDT 2022" starttimestamp="1650324058609" timestamp="2768249" />
  <Command __id="426" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:06 EDT 2022" starttimestamp="1650324058609" timestamp="2768256" />
  <Command __id="428" _type="PauseCommand" date="Mon Apr 18 20:07:10 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2771447">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3191]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="429" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:07:11 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2773116" type="Run" />
  <Command __id="431" _type="ConsoleOutput" date="Mon Apr 18 20:07:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2773233" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 20:07:11 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@e37b295 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 20:07:11 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="433" _type="PauseCommand" date="Mon Apr 18 20:07:16 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2777410">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4177]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="432" _type="ConsoleOutput" date="Mon Apr 18 20:07:16 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2777410" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 20:07:15 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 20:07:15 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Mon Apr 18 20:07:1"), Diff(DELETE,"1"), Diff(INSERT,"5 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 18 20:07:15"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="434" _type="ConsoleOutput" date="Mon Apr 18 20:07:16 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2777502" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 20:07:16 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 20:07:15 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 20:07:1"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="436" _type="PauseCommand" date="Mon Apr 18 20:07:18 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2779619">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2117]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="435" _type="ConsoleOutput" date="Mon Apr 18 20:07:18 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2779619" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 20:07:18 EDT 2022
Generating checks:Mon Apr 18 20:07:18 EDT 2022
Finished Generating checks:Mon Apr 18 20:07:18 EDT 2022
Generating externals:Mon Apr 18 20:07:18 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 20:07:18 EDT 2022¶Generating checks:Mon Apr 18 20:07:18 EDT 2022¶Finished Generating checks:Mon Apr 18 20:07:18 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Mon Apr 18 20:07:1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="437" _type="ConsoleOutput" date="Mon Apr 18 20:07:19 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2780477" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 20:07:19 EDT 2022
Test execution time (ms):7290
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Apr 18 20:07:18 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 20:07:1"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Apr 18 20:07:18 EDT 2022¶Generating externals:Mon Apr 18 20:07:18 EDT 2022"), Diff(INSERT,"Test execution time (ms):7290"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="438" _type="ConsoleOutput" date="Mon Apr 18 20:07:19 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2780538" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):30

A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.896551724137931
Test execution time (ms):31
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 20:07:19 EDT 2022"), Diff(INSERT,"Test execution time (ms):30¶¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.896551724137931"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"7290"), Diff(INSERT,"31"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="439" _type="ConsoleOutput" date="Mon Apr 18 20:07:19 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2780596" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"30¶¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.896551724137931¶Test execution time (ms):3"), Diff(EQUAL,"1"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="440" _type="ConsoleOutput" date="Mon Apr 18 20:07:19 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2780669" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (187)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (91)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (82)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):13"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (91)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="442" _type="PauseCommand" date="Mon Apr 18 20:07:24 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2785420">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4751]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="441" _type="ConsoleOutput" date="Mon Apr 18 20:07:24 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2785420" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@1b2d396f . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (91)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@1b2d396f . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="444" _type="PauseCommand" date="Mon Apr 18 20:07:30 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2791673">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6253]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="443" _type="ShellCommand" date="Mon Apr 18 20:07:30 EDT 2022" starttimestamp="1650324058609" timestamp="2791673" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="446" _type="MoveCaretCommand" caretOffset="1517" date="Mon Apr 18 20:07:30 EDT 2022" docOffset="2836" starttimestamp="1650324058609" timestamp="2791766" />
  <Command __id="447" _type="MoveCaretCommand" caretOffset="1517" date="Mon Apr 18 20:07:30 EDT 2022" docOffset="2836" starttimestamp="1650324058609" timestamp="2791902" />
  <Command __id="405" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:05:42 EDT 2022" docASTNodeCount="719" docActiveCodeLength="5117" docExpressionCount="520" docLength="5504" projectName="A6" starttimestamp="1650324058609" timestamp="2683600">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.exampleServerReadThread;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶¶public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	@Override¶	protected void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("COMMAND IN SERVER: "+ aMessageString);¶		¶		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="445" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:07:30 EDT 2022" docASTNodeCount="719" docActiveCodeLength="5117" docExpressionCount="520" docLength="5504" projectName="A6" starttimestamp="1650324058609" timestamp="2791727">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.exampleServerReadThread;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶¶public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	@Override¶	protected void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("COMMAND IN SERVER: "+ aMessageString);¶		¶		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="449" _type="PauseCommand" date="Mon Apr 18 20:07:32 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2794327">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2425]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="450" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 18 20:07:33 EDT 2022" docOffset="0" starttimestamp="1650324058609" timestamp="2794832" />
  <Command __id="451" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:34 EDT 2022" starttimestamp="1650324058609" timestamp="2795585" />
  <Command __id="452" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:07:34 EDT 2022" starttimestamp="1650324058609" timestamp="2795585" />
  <Command __id="454" _type="PauseCommand" date="Mon Apr 18 20:07:37 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2799169">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3584]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="453" _type="SelectTextCommand" caretOffset="535" date="Mon Apr 18 20:07:37 EDT 2022" end="535" start="448" starttimestamp="1650324058609" timestamp="2799169" />
  <Command __id="455" _type="CopyCommand" date="Mon Apr 18 20:07:38 EDT 2022" starttimestamp="1650324058609" timestamp="2799907" />
  <Command __id="448" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:07:32 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" projectName="A6" starttimestamp="1650324058609" timestamp="2794327">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="457" _type="PauseCommand" date="Mon Apr 18 20:07:40 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2801810">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1903]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="456" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:07:40 EDT 2022" docASTNodeCount="332" docActiveCodeLength="2481" docExpressionCount="230" docLength="2768" projectName="A6" starttimestamp="1650324058609" timestamp="2801810">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import client.ClientRemoteObjectNIO;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.AnNIOManagerPrintClient;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})¶public class ClientReadThread implements ReadThreadInterface{¶	//final ClientRemoteObjectNIO client;¶	final ClientRemoteObjectNIO client;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ClientReadThread (final ClientRemoteObjectNIO aClient) {¶		client = aClient;¶	}¶	¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();¶			¶			¶					¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			String aMessageString = new String(originalMessage.array());¶			¶			"), Diff(INSERT,"/// To pass the autograder¶			int position = originalMessage.position();¶			¶			"), Diff(EQUAL,"System.out.println(aMessageString);¶			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶			¶			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);¶			¶			¶			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();¶			¶			¶			RemoteProposeRequestReceived.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);¶			commandProcessor.processCommand(aMessageString);¶			ProposedStateSet.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);¶			//client.aProposalNumber++;¶		¶		}¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.concurrent.ArrayBlockingQueue;

import client.ClientRemoteObjectNIO;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.AnNIOManagerPrintClient;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;


@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})
public class ClientReadThread implements ReadThreadInterface{
	//final ClientRemoteObjectNIO client;
	final ClientRemoteObjectNIO client;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ClientReadThread (final ClientRemoteObjectNIO aClient) {
		client = aClient;
	}
	
	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			String aMessageString = new String(originalMessage.array());
			
			/// To pass the autograder
			int position = originalMessage.position();
			
			System.out.println(aMessageString);
			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
			
			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);
			
			
			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();
			
			
			RemoteProposeRequestReceived.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);
			commandProcessor.processCommand(aMessageString);
			ProposedStateSet.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);
			//client.aProposalNumber++;
		
		}
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <Command __id="458" _type="MoveCaretCommand" caretOffset="1237" date="Mon Apr 18 20:07:40 EDT 2022" docOffset="1807" starttimestamp="1650324058609" timestamp="2801953" />
  <DocumentChange __id="459" _type="Insert" date="Mon Apr 18 20:07:40 EDT 2022" docASTNodeCount="332" docActiveCodeLength="2491" docExpressionCount="230" docLength="2781" length="13" offset="1807" repeat="5" starttimestamp="1650324058609" timestamp="2802161" timestamp2="2803299">
    <text><![CDATA[
			
			///]]></text>
  </DocumentChange>
  <Command __id="460" _type="InsertStringCommand" date="Mon Apr 18 20:07:40 EDT 2022" starttimestamp="1650324058609" timestamp="2802169" timestamp2="2802169">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="462" _type="InsertStringCommand" date="Mon Apr 18 20:07:41 EDT 2022" starttimestamp="1650324058609" timestamp="2802826" timestamp2="2802826">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="464" _type="InsertStringCommand" date="Mon Apr 18 20:07:41 EDT 2022" starttimestamp="1650324058609" timestamp="2803040" timestamp2="2803040">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="466" _type="InsertStringCommand" date="Mon Apr 18 20:07:41 EDT 2022" starttimestamp="1650324058609" timestamp="2803176" timestamp2="2803176">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="468" _type="InsertStringCommand" date="Mon Apr 18 20:07:41 EDT 2022" starttimestamp="1650324058609" timestamp="2803299" timestamp2="2803299">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="469" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Apr 18 20:07:42 EDT 2022" starttimestamp="1650324058609" timestamp="2803784" />
  <Command __id="471" _type="PasteCommand" date="Mon Apr 18 20:07:43 EDT 2022" starttimestamp="1650324058609" timestamp="2804496" />
  <Command __id="473" _type="PauseCommand" date="Mon Apr 18 20:07:44 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2805784">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1288]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="470" _type="Replace" date="Mon Apr 18 20:07:42 EDT 2022" docASTNodeCount="347" docActiveCodeLength="2578" docExpressionCount="237" docLength="2868" endLine="58" insertionLength="90" int_docASTNodeCount="332" int_docActiveCodeLength="2488" int_docExpressionCount="230" int_docLength="2778" length="3" offset="1809" startLine="58" starttimestamp="1650324058609" timestamp="2804360">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);]]></insertedText>
  </DocumentChange>
  <Command __id="472" _type="MoveCaretCommand" caretOffset="1286" date="Mon Apr 18 20:07:44 EDT 2022" docOffset="1856" starttimestamp="1650324058609" timestamp="2805784" />
  <Command __id="475" _type="InsertStringCommand" date="Mon Apr 18 20:07:44 EDT 2022" starttimestamp="1650324058609" timestamp="2806006" timestamp2="2806006">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="478" _type="PauseCommand" date="Mon Apr 18 20:07:45 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2807017">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1011]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="477" _type="InsertStringCommand" date="Mon Apr 18 20:07:45 EDT 2022" starttimestamp="1650324058609" timestamp="2807017" timestamp2="2807017">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="480" _type="InsertStringCommand" date="Mon Apr 18 20:07:45 EDT 2022" starttimestamp="1650324058609" timestamp="2807036" timestamp2="2807036">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="482" _type="InsertStringCommand" date="Mon Apr 18 20:07:45 EDT 2022" starttimestamp="1650324058609" timestamp="2807040" timestamp2="2807040">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="484" _type="PauseCommand" date="Mon Apr 18 20:07:47 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2809128">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2088]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="483" _type="MoveCaretCommand" caretOffset="1333" date="Mon Apr 18 20:07:47 EDT 2022" docOffset="1903" starttimestamp="1650324058609" timestamp="2809128" />
  <Command __id="486" _type="InsertStringCommand" date="Mon Apr 18 20:07:48 EDT 2022" starttimestamp="1650324058609" timestamp="2809446" timestamp2="2809446">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="474" _type="Insert" date="Mon Apr 18 20:07:44 EDT 2022" docASTNodeCount="347" docActiveCodeLength="2582" docExpressionCount="237" docLength="2872" length="4" offset="1856" repeat="4" starttimestamp="1650324058609" timestamp="2805998" timestamp2="2807040">
    <text><![CDATA[Fake]]></text>
  </DocumentChange>
  <DocumentChange __id="485" _type="Insert" date="Mon Apr 18 20:07:48 EDT 2022" docASTNodeCount="347" docActiveCodeLength="2587" docExpressionCount="237" docLength="2877" length="5" offset="1903" starttimestamp="1650324058609" timestamp="2809434">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <Command __id="488" _type="PauseCommand" date="Mon Apr 18 20:07:51 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2812764">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3318]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="489" _type="InsertStringCommand" date="Mon Apr 18 20:07:51 EDT 2022" starttimestamp="1650324058609" timestamp="2812779" timestamp2="2812779">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="491" _type="InsertStringCommand" date="Mon Apr 18 20:07:51 EDT 2022" starttimestamp="1650324058609" timestamp="2812921" timestamp2="2812921">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="493" _type="InsertStringCommand" date="Mon Apr 18 20:07:51 EDT 2022" starttimestamp="1650324058609" timestamp="2813013" timestamp2="2813013">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="495" _type="InsertStringCommand" date="Mon Apr 18 20:07:51 EDT 2022" starttimestamp="1650324058609" timestamp="2813206" timestamp2="2813206">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="497" _type="InsertStringCommand" date="Mon Apr 18 20:07:51 EDT 2022" starttimestamp="1650324058609" timestamp="2813255" timestamp2="2813255">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="499" _type="InsertStringCommand" date="Mon Apr 18 20:07:52 EDT 2022" starttimestamp="1650324058609" timestamp="2813467" timestamp2="2813467">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="501" _type="InsertStringCommand" date="Mon Apr 18 20:07:52 EDT 2022" starttimestamp="1650324058609" timestamp="2813629" timestamp2="2813629">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="503" _type="InsertStringCommand" date="Mon Apr 18 20:07:52 EDT 2022" starttimestamp="1650324058609" timestamp="2814114" timestamp2="2814114">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="505" _type="InsertStringCommand" date="Mon Apr 18 20:07:53 EDT 2022" starttimestamp="1650324058609" timestamp="2814703" timestamp2="2814703">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="507" _type="InsertStringCommand" date="Mon Apr 18 20:07:53 EDT 2022" starttimestamp="1650324058609" timestamp="2814830" timestamp2="2814830">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="509" _type="InsertStringCommand" date="Mon Apr 18 20:07:53 EDT 2022" starttimestamp="1650324058609" timestamp="2814988" timestamp2="2814988">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="511" _type="InsertStringCommand" date="Mon Apr 18 20:07:53 EDT 2022" starttimestamp="1650324058609" timestamp="2815099" timestamp2="2815099">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="513" _type="InsertStringCommand" date="Mon Apr 18 20:07:53 EDT 2022" starttimestamp="1650324058609" timestamp="2815209" timestamp2="2815209">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="515" _type="InsertStringCommand" date="Mon Apr 18 20:07:54 EDT 2022" starttimestamp="1650324058609" timestamp="2815663" timestamp2="2815663">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="517" _type="InsertStringCommand" date="Mon Apr 18 20:07:54 EDT 2022" starttimestamp="1650324058609" timestamp="2815860" timestamp2="2815860">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="519" _type="InsertStringCommand" date="Mon Apr 18 20:07:54 EDT 2022" starttimestamp="1650324058609" timestamp="2815946" timestamp2="2815946">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="521" _type="InsertStringCommand" date="Mon Apr 18 20:07:54 EDT 2022" starttimestamp="1650324058609" timestamp="2816062" timestamp2="2816062">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="523" _type="InsertStringCommand" date="Mon Apr 18 20:07:55 EDT 2022" starttimestamp="1650324058609" timestamp="2816420" timestamp2="2816420">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="524" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 18 20:07:55 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="2816420" />
  <Command __id="526" _type="PauseCommand" date="Mon Apr 18 20:07:56 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2817591">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1171]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="525" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:07:56 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="2817591" />
  <Command __id="528" _type="InsertStringCommand" date="Mon Apr 18 20:07:56 EDT 2022" starttimestamp="1650324058609" timestamp="2817728" timestamp2="2817728">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="530" _type="PauseCommand" date="Mon Apr 18 20:07:58 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2820377">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2649]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="529" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:07:58 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="2820377" />
  <Command __id="531" _type="MoveCaretCommand" caretOffset="1370" date="Mon Apr 18 20:07:59 EDT 2022" docOffset="1940" starttimestamp="1650324058609" timestamp="2820463" />
  <Command __id="533" _type="PauseCommand" date="Mon Apr 18 20:08:25 EDT 2022" range="20s-30s" starttimestamp="1650324058609" timestamp="2847318">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[26855]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="532" _type="MoveCaretCommand" caretOffset="1361" date="Mon Apr 18 20:08:25 EDT 2022" docOffset="1931" starttimestamp="1650324058609" timestamp="2847318" />
  <Command __id="535" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:08:26 EDT 2022" starttimestamp="1650324058609" timestamp="2847817" />
  <Command __id="537" _type="InsertStringCommand" date="Mon Apr 18 20:08:26 EDT 2022" starttimestamp="1650324058609" timestamp="2848264" timestamp2="2848264">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="539" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2848486" timestamp2="2848486">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="541" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2848632" timestamp2="2848632">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="543" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2848775" timestamp2="2848775">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="545" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2848848" timestamp2="2848848">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="547" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2848925" timestamp2="2848925">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="549" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2849041" timestamp2="2849041">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="551" _type="InsertStringCommand" date="Mon Apr 18 20:08:27 EDT 2022" starttimestamp="1650324058609" timestamp="2849126" timestamp2="2849126">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="553" _type="InsertStringCommand" date="Mon Apr 18 20:08:28 EDT 2022" starttimestamp="1650324058609" timestamp="2849470" timestamp2="2849470">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="555" _type="InsertStringCommand" date="Mon Apr 18 20:08:28 EDT 2022" starttimestamp="1650324058609" timestamp="2849661" timestamp2="2849661">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="557" _type="InsertStringCommand" date="Mon Apr 18 20:08:28 EDT 2022" starttimestamp="1650324058609" timestamp="2849823" timestamp2="2849823">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="559" _type="InsertStringCommand" date="Mon Apr 18 20:08:28 EDT 2022" starttimestamp="1650324058609" timestamp="2850131" timestamp2="2850131">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="561" _type="InsertStringCommand" date="Mon Apr 18 20:08:28 EDT 2022" starttimestamp="1650324058609" timestamp="2850197" timestamp2="2850197">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="563" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2850585" />
  <Command __id="565" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2850741" />
  <Command __id="567" _type="InsertStringCommand" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2850829" timestamp2="2850829">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="569" _type="InsertStringCommand" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2850861" timestamp2="2850861">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="571" _type="InsertStringCommand" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2850972" timestamp2="2850972">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="573" _type="InsertStringCommand" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2851053" timestamp2="2851053">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="574" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:08:29 EDT 2022" starttimestamp="1650324058609" timestamp="2851374" />
  <Command __id="575" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:08:30 EDT 2022" starttimestamp="1650324058609" timestamp="2851546" />
  <Command __id="577" _type="InsertStringCommand" date="Mon Apr 18 20:08:30 EDT 2022" starttimestamp="1650324058609" timestamp="2851972" timestamp2="2851972">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="579" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:08:31 EDT 2022" starttimestamp="1650324058609" timestamp="2852958" />
  <Command __id="581" _type="PauseCommand" date="Mon Apr 18 20:08:32 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2854089">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1131]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="580" _type="MoveCaretCommand" caretOffset="1376" date="Mon Apr 18 20:08:32 EDT 2022" docOffset="1946" starttimestamp="1650324058609" timestamp="2854089" />
  <Command __id="583" _type="InsertStringCommand" date="Mon Apr 18 20:08:33 EDT 2022" starttimestamp="1650324058609" timestamp="2854671" timestamp2="2854671">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="585" _type="PauseCommand" date="Mon Apr 18 20:08:34 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2856285">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1614]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="584" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:08:34 EDT 2022" starttimestamp="1650324058609" timestamp="2856285" />
  <Command __id="586" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:08:34 EDT 2022" starttimestamp="1650324058609" timestamp="2856357" />
  <Command __id="587" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:08:35 EDT 2022" starttimestamp="1650324058609" timestamp="2856417" />
  <Command __id="589" _type="PauseCommand" date="Mon Apr 18 20:08:38 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2859561">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3144]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="588" _type="ShellCommand" date="Mon Apr 18 20:08:38 EDT 2022" starttimestamp="1650324058609" timestamp="2859561" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="591" _type="PauseCommand" date="Mon Apr 18 20:08:39 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2861236">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1675]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="595" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:08:42 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2863831" type="Run" />
  <Command __id="597" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:08:42 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="2863831" type="Run" />
  <Command __id="598" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:08:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2864047" type="Run" />
  <Command __id="599" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:08:42 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2864075" type="Run" />
  <Command __id="600" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:08:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2864081" type="Run" />
  <Command __id="602" _type="PauseCommand" date="Mon Apr 18 20:08:46 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2867458">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3377]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="603" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:08:47 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="2869042" type="Run" />
  <Command __id="605" _type="ConsoleOutput" date="Mon Apr 18 20:08:47 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2869151" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 20:08:47 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@1b2d396f . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 20:08:47 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="607" _type="PauseCommand" date="Mon Apr 18 20:08:51 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2873279">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4128]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="606" _type="ConsoleOutput" date="Mon Apr 18 20:08:51 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2873279" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 20:08:51 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 20:08:51 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Mon Apr 18 20:08:51 EDT 2022¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Mon Apr 18 20:08:"), Diff(DELETE,"47"), Diff(INSERT,"51"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="608" _type="ConsoleOutput" date="Mon Apr 18 20:08:51 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2873372" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 20:08:51 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 20:08:51 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 20:08:51 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="610" _type="PauseCommand" date="Mon Apr 18 20:08:54 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2875709">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2337]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="609" _type="ConsoleOutput" date="Mon Apr 18 20:08:54 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2875709" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 20:08:54 EDT 2022
Generating checks:Mon Apr 18 20:08:54 EDT 2022
Finished Generating checks:Mon Apr 18 20:08:54 EDT 2022
Generating externals:Mon Apr 18 20:08:54 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 20:08:54 EDT 2022¶Generating checks:Mon Apr 18 20:08:54 EDT 2022¶Finished Generating checks:Mon Apr 18 20:08:54 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Mon Apr 18 20:08:5"), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="611" _type="ConsoleOutput" date="Mon Apr 18 20:08:55 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2876501" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 20:08:55 EDT 2022
Test execution time (ms):7408
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Apr 18 20:08:54 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 20:08:5"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Apr 18 20:08:54 EDT 2022¶Generating externals:Mon Apr 18 20:08:54 EDT 2022"), Diff(INSERT,"Test execution time (ms):7408"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="612" _type="ConsoleOutput" date="Mon Apr 18 20:08:55 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2876558" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):17
A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.9310344827586207

Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 20:08:55 EDT 2022"), Diff(INSERT,"Test execution time (ms):17¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.9310344827586207¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"7408"), Diff(INSERT,"32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="613" _type="ConsoleOutput" date="Mon Apr 18 20:08:55 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2876624" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):39
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"17¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.9310344827586207¶¶Test execution time (ms):32"), Diff(INSERT,"39"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="614" _type="ConsoleOutput" date="Mon Apr 18 20:08:55 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2876720" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (187)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (94)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (82)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):39"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="616" _type="PauseCommand" date="Mon Apr 18 20:08:58 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2880321">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3601]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="615" _type="ConsoleOutput" date="Mon Apr 18 20:08:58 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="2880321" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@31c9edf8 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (82)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@31c9edf8 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="618" _type="PauseCommand" date="Mon Apr 18 20:09:08 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2889421">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9100]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="617" _type="ShellCommand" date="Mon Apr 18 20:09:08 EDT 2022" starttimestamp="1650324058609" timestamp="2889421" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="620" _type="PauseCommand" date="Mon Apr 18 20:09:09 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2890788">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1367]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="619" _type="SelectTextCommand" caretOffset="1163" date="Mon Apr 18 20:09:09 EDT 2022" end="1385" start="1163" starttimestamp="1650324058609" timestamp="2890788" />
  <Command __id="621" _type="CopyCommand" date="Mon Apr 18 20:09:09 EDT 2022" starttimestamp="1650324058609" timestamp="2891043" />
  <DocumentChange __id="487" _type="Insert" date="Mon Apr 18 20:07:51 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2611" docExpressionCount="241" docLength="2901" length="24" offset="1908" repeat="19" starttimestamp="1650324058609" timestamp="2812764" timestamp2="2817598">
    <text><![CDATA[boundedBufferFake.add(e)]]></text>
  </DocumentChange>
  <DocumentChange __id="534" _type="Delete" date="Mon Apr 18 20:08:26 EDT 2022" docASTNodeCount="351" docActiveCodeLength="2610" docExpressionCount="240" docLength="2900" endLine="59" length="1" offset="1930" startLine="59" starttimestamp="1650324058609" timestamp="2847801">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="536" _type="Insert" date="Mon Apr 18 20:08:26 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2623" docExpressionCount="241" docLength="2913" length="13" offset="1930" repeat="13" starttimestamp="1650324058609" timestamp="2848259" timestamp2="2850188">
    <text><![CDATA[originalMesas]]></text>
  </DocumentChange>
  <DocumentChange __id="562" _type="Delete" date="Mon Apr 18 20:08:29 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2621" docExpressionCount="241" docLength="2911" endLine="59" length="2" offset="1941" repeat="2" startLine="59" starttimestamp="1650324058609" timestamp="2850577" timestamp2="2850741">
    <text><![CDATA[as]]></text>
  </DocumentChange>
  <DocumentChange __id="566" _type="Insert" date="Mon Apr 18 20:08:29 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2625" docExpressionCount="241" docLength="2915" length="4" offset="1941" repeat="4" starttimestamp="1650324058609" timestamp="2850821" timestamp2="2851053">
    <text><![CDATA[sage]]></text>
  </DocumentChange>
  <DocumentChange __id="576" _type="Insert" date="Mon Apr 18 20:08:30 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2626" docExpressionCount="241" docLength="2916" length="1" offset="1948" starttimestamp="1650324058609" timestamp="2851965">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="578" _type="Delete" date="Mon Apr 18 20:08:31 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2625" docExpressionCount="241" docLength="2915" endLine="60" length="1" offset="1948" startLine="60" starttimestamp="1650324058609" timestamp="2852958">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="582" _type="Insert" date="Mon Apr 18 20:08:33 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2626" docExpressionCount="241" docLength="2916" length="1" offset="1946" starttimestamp="1650324058609" timestamp="2854663">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="623" _type="PauseCommand" date="Mon Apr 18 20:09:11 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2893023">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1980]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="624" _type="MoveCaretCommand" caretOffset="1334" date="Mon Apr 18 20:09:12 EDT 2022" docOffset="1815" starttimestamp="1650324058609" timestamp="2893438" />
  <Command __id="625" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:09:12 EDT 2022" starttimestamp="1650324058609" timestamp="2894162" />
  <Command __id="626" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:09:12 EDT 2022" starttimestamp="1650324058609" timestamp="2894168" />
  <Command __id="628" _type="PauseCommand" date="Mon Apr 18 20:09:23 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2904400">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10232]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="627" _type="MoveCaretCommand" caretOffset="989" date="Mon Apr 18 20:09:23 EDT 2022" docOffset="1470" starttimestamp="1650324058609" timestamp="2904400" />
  <Command __id="630" _type="InsertStringCommand" date="Mon Apr 18 20:09:23 EDT 2022" starttimestamp="1650324058609" timestamp="2904721" timestamp2="2904721">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="632" _type="PasteCommand" date="Mon Apr 18 20:09:23 EDT 2022" starttimestamp="1650324058609" timestamp="2905278" />
  <Command __id="634" _type="PauseCommand" date="Mon Apr 18 20:09:30 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2911662">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[6384]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="633" _type="SelectTextCommand" caretOffset="1025" date="Mon Apr 18 20:09:30 EDT 2022" end="1028" start="1025" starttimestamp="1650324058609" timestamp="2911662" />
  <Command __id="636" _type="InsertStringCommand" date="Mon Apr 18 20:09:30 EDT 2022" starttimestamp="1650324058609" timestamp="2911954" timestamp2="2911954">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="638" _type="InsertStringCommand" date="Mon Apr 18 20:09:30 EDT 2022" starttimestamp="1650324058609" timestamp="2912074" timestamp2="2912074">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="640" _type="InsertStringCommand" date="Mon Apr 18 20:09:30 EDT 2022" starttimestamp="1650324058609" timestamp="2912157" timestamp2="2912157">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="642" _type="InsertStringCommand" date="Mon Apr 18 20:09:30 EDT 2022" starttimestamp="1650324058609" timestamp="2912346" timestamp2="2912346">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="644" _type="InsertStringCommand" date="Mon Apr 18 20:09:31 EDT 2022" starttimestamp="1650324058609" timestamp="2912444" timestamp2="2912444">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="646" _type="InsertStringCommand" date="Mon Apr 18 20:09:31 EDT 2022" starttimestamp="1650324058609" timestamp="2912661" timestamp2="2912661">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="648" _type="InsertStringCommand" date="Mon Apr 18 20:09:31 EDT 2022" starttimestamp="1650324058609" timestamp="2912868" timestamp2="2912868">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="622" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:09:11 EDT 2022" docASTNodeCount="287" docActiveCodeLength="2008" docExpressionCount="189" docLength="2276" projectName="A6" starttimestamp="1650324058609" timestamp="2893023">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.NIOManagerPrintServer;
import server.remote.ServerRemoteObjectNIO;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.communication.CommunicationStateNames;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{
	
	final ServerRemoteObjectNIO server;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ServerReadThread (final ServerRemoteObjectNIO aServer) {
		server = aServer;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();
			List<SocketChannel> socketList = server.getSocketList();
			SocketChannel currentSocket = server.getSocketChannel();
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			// Echo recieve message to all clients (except original message sender)
			
			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());
			
			for (SocketChannel socket : socketList) {
				if (!socket.equals(currentSocket)) {
					
					nioManager.write(socket, originalMessage, server);
				}
			}
		
		}
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="629" _type="Insert" date="Mon Apr 18 20:09:23 EDT 2022" docASTNodeCount="287" docActiveCodeLength="2013" docExpressionCount="189" docLength="2281" length="5" offset="1470" starttimestamp="1650324058609" timestamp="2904716">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="631" _type="Replace" date="Mon Apr 18 20:09:23 EDT 2022" docASTNodeCount="314" docActiveCodeLength="2205" docExpressionCount="204" docLength="2502" endLine="47" insertionLength="224" int_docASTNodeCount="287" int_docActiveCodeLength="2010" int_docExpressionCount="189" int_docLength="2278" length="3" offset="1472" startLine="47" starttimestamp="1650324058609" timestamp="2905176">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			/// To pass the autograder
			int position = originalMessage.position();
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="635" _type="Replace" date="Mon Apr 18 20:09:30 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2203" docExpressionCount="205" docLength="2500" endLine="48" insertionLength="1" int_docASTNodeCount="313" int_docActiveCodeLength="2202" int_docExpressionCount="205" int_docLength="2499" length="3" offset="1506" startLine="48" starttimestamp="1650324058609" timestamp="2911946">
    <deletedText><![CDATA[int]]></deletedText>
    <insertedText><![CDATA[B]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="637" _type="Insert" date="Mon Apr 18 20:09:30 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2209" docExpressionCount="205" docLength="2506" length="6" offset="1507" repeat="6" starttimestamp="1650324058609" timestamp="2912067" timestamp2="2912860">
    <text><![CDATA[ounded]]></text>
  </DocumentChange>
  <Command __id="650" _type="PauseCommand" date="Mon Apr 18 20:09:33 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2914731">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1863]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="651" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:33 EDT 2022" starttimestamp="1650324058609" timestamp="2914739" />
  <Command __id="653" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:33 EDT 2022" starttimestamp="1650324058609" timestamp="2915241" />
  <Command __id="655" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:33 EDT 2022" starttimestamp="1650324058609" timestamp="2915264" />
  <Command __id="657" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:33 EDT 2022" starttimestamp="1650324058609" timestamp="2915298" />
  <Command __id="659" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:34 EDT 2022" starttimestamp="1650324058609" timestamp="2915513" />
  <Command __id="661" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:34 EDT 2022" starttimestamp="1650324058609" timestamp="2915692" />
  <DocumentChange __id="649" _type="Delete" date="Mon Apr 18 20:09:33 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2203" docExpressionCount="205" docLength="2500" endLine="48" length="6" offset="1507" repeat="6" startLine="48" starttimestamp="1650324058609" timestamp="2914731" timestamp2="2915692">
    <text><![CDATA[ounded]]></text>
  </DocumentChange>
  <Command __id="663" _type="PauseCommand" date="Mon Apr 18 20:09:35 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2916711">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1019]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="662" _type="Insert" date="Mon Apr 18 20:09:35 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2212" docExpressionCount="205" docLength="2509" length="9" offset="1507" repeat="9" starttimestamp="1650324058609" timestamp="2916711" timestamp2="2918047">
    <text><![CDATA[yteBuffer]]></text>
  </DocumentChange>
  <Command __id="664" _type="InsertStringCommand" date="Mon Apr 18 20:09:35 EDT 2022" starttimestamp="1650324058609" timestamp="2916720" timestamp2="2916720">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="666" _type="InsertStringCommand" date="Mon Apr 18 20:09:35 EDT 2022" starttimestamp="1650324058609" timestamp="2916928" timestamp2="2916928">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="668" _type="InsertStringCommand" date="Mon Apr 18 20:09:35 EDT 2022" starttimestamp="1650324058609" timestamp="2917069" timestamp2="2917069">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="670" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2917417" timestamp2="2917417">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="672" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2917573" timestamp2="2917573">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="674" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2917688" timestamp2="2917688">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="676" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2917848" timestamp2="2917848">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="678" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2917972" timestamp2="2917972">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="680" _type="InsertStringCommand" date="Mon Apr 18 20:09:36 EDT 2022" starttimestamp="1650324058609" timestamp="2918055" timestamp2="2918055">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="681" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2918430" />
  <Command __id="682" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2918934" />
  <Command __id="683" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2918966" />
  <Command __id="684" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2919001" />
  <Command __id="685" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2919030" />
  <Command __id="686" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2919054" />
  <Command __id="687" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2919090" />
  <Command __id="688" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 18 20:09:37 EDT 2022" starttimestamp="1650324058609" timestamp="2919282" />
  <DocumentChange __id="689" _type="Delete" date="Mon Apr 18 20:09:38 EDT 2022" docASTNodeCount="313" docActiveCodeLength="2204" docExpressionCount="205" docLength="2501" endLine="48" length="8" offset="1517" repeat="8" startLine="48" starttimestamp="1650324058609" timestamp="2919596" timestamp2="2921238">
    <text><![CDATA[position]]></text>
  </DocumentChange>
  <Command __id="690" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:38 EDT 2022" starttimestamp="1650324058609" timestamp="2919599" />
  <Command __id="692" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:38 EDT 2022" starttimestamp="1650324058609" timestamp="2920185" />
  <Command __id="694" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2920454" />
  <Command __id="696" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2920637" />
  <Command __id="698" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2920791" />
  <Command __id="700" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2920951" />
  <Command __id="702" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2921101" />
  <Command __id="704" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:39 EDT 2022" starttimestamp="1650324058609" timestamp="2921238" />
  <Command __id="706" _type="InsertStringCommand" date="Mon Apr 18 20:09:40 EDT 2022" starttimestamp="1650324058609" timestamp="2921611" timestamp2="2921611">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="708" _type="InsertStringCommand" date="Mon Apr 18 20:09:40 EDT 2022" starttimestamp="1650324058609" timestamp="2921668" timestamp2="2921668">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="710" _type="InsertStringCommand" date="Mon Apr 18 20:09:40 EDT 2022" starttimestamp="1650324058609" timestamp="2921810" timestamp2="2921810">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="712" _type="InsertStringCommand" date="Mon Apr 18 20:09:40 EDT 2022" starttimestamp="1650324058609" timestamp="2921917" timestamp2="2921917">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="714" _type="PauseCommand" date="Mon Apr 18 20:09:43 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2924481">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2564]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="713" _type="SelectTextCommand" caretOffset="1058" date="Mon Apr 18 20:09:43 EDT 2022" end="1067" start="1058" starttimestamp="1650324058609" timestamp="2924481" />
  <Command __id="715" _type="MoveCaretCommand" caretOffset="1058" date="Mon Apr 18 20:09:43 EDT 2022" docOffset="1539" starttimestamp="1650324058609" timestamp="2924824" />
  <Command __id="717" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:43 EDT 2022" starttimestamp="1650324058609" timestamp="2924970" />
  <DocumentChange __id="705" _type="Insert" date="Mon Apr 18 20:09:40 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2208" docExpressionCount="205" docLength="2505" length="4" offset="1517" repeat="4" starttimestamp="1650324058609" timestamp="2921593" timestamp2="2921909">
    <text><![CDATA[copy]]></text>
  </DocumentChange>
  <DocumentChange __id="716" _type="Delete" date="Mon Apr 18 20:09:43 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2207" docExpressionCount="205" docLength="2504" endLine="48" length="1" offset="1538" startLine="48" starttimestamp="1650324058609" timestamp="2924961">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <Command __id="719" _type="PauseCommand" date="Mon Apr 18 20:09:44 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2925976">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1006]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="718" _type="Insert" date="Mon Apr 18 20:09:44 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2209" docExpressionCount="205" docLength="2506" length="2" offset="1538" repeat="2" starttimestamp="1650324058609" timestamp="2925976" timestamp2="2926127">
    <text><![CDATA[e.]]></text>
  </DocumentChange>
  <Command __id="720" _type="InsertStringCommand" date="Mon Apr 18 20:09:44 EDT 2022" starttimestamp="1650324058609" timestamp="2925981" timestamp2="2925981">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="722" _type="InsertStringCommand" date="Mon Apr 18 20:09:44 EDT 2022" starttimestamp="1650324058609" timestamp="2926139" timestamp2="2926139">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="723" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 18 20:09:44 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="2926139" />
  <Command __id="724" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:09:44 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="2926198" />
  <DocumentChange __id="725" _type="Delete" date="Mon Apr 18 20:09:45 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2200" docExpressionCount="205" docLength="2497" endLine="48" length="9" offset="1540" repeat="9" startLine="48" starttimestamp="1650324058609" timestamp="2926792" timestamp2="2928267">
    <text><![CDATA[.position]]></text>
  </DocumentChange>
  <Command __id="726" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:45 EDT 2022" starttimestamp="1650324058609" timestamp="2926796" />
  <Command __id="728" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:45 EDT 2022" starttimestamp="1650324058609" timestamp="2926997" />
  <Command __id="730" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:45 EDT 2022" starttimestamp="1650324058609" timestamp="2927150" />
  <Command __id="732" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:45 EDT 2022" starttimestamp="1650324058609" timestamp="2927311" />
  <Command __id="734" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:46 EDT 2022" starttimestamp="1650324058609" timestamp="2927462" />
  <Command __id="736" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:46 EDT 2022" starttimestamp="1650324058609" timestamp="2927610" />
  <Command __id="738" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:46 EDT 2022" starttimestamp="1650324058609" timestamp="2927753" />
  <Command __id="740" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:46 EDT 2022" starttimestamp="1650324058609" timestamp="2927906" />
  <Command __id="742" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 18 20:09:46 EDT 2022" starttimestamp="1650324058609" timestamp="2928275" />
  <Command __id="744" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2928463" timestamp2="2928463">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="746" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2928635" timestamp2="2928635">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="748" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2928790" timestamp2="2928790">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="750" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2928900" timestamp2="2928900">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="752" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2929262" timestamp2="2929262">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="754" _type="InsertStringCommand" date="Mon Apr 18 20:09:47 EDT 2022" starttimestamp="1650324058609" timestamp="2929376" timestamp2="2929376">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="756" _type="InsertStringCommand" date="Mon Apr 18 20:09:48 EDT 2022" starttimestamp="1650324058609" timestamp="2929433" timestamp2="2929433">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="758" _type="InsertStringCommand" date="Mon Apr 18 20:09:48 EDT 2022" starttimestamp="1650324058609" timestamp="2929620" timestamp2="2929620">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="760" _type="PauseCommand" date="Mon Apr 18 20:09:49 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2931074">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1454]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="759" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 18 20:09:49 EDT 2022" starttimestamp="1650324058609" timestamp="2931074" />
  <Command __id="761" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 18 20:09:49 EDT 2022" starttimestamp="1650324058609" timestamp="2931285" />
  <Command __id="762" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 18 20:09:50 EDT 2022" starttimestamp="1650324058609" timestamp="2931421" />
  <Command __id="764" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 18 20:09:50 EDT 2022" starttimestamp="1650324058609" timestamp="2931924" />
  <Command __id="766" _type="InsertStringCommand" date="Mon Apr 18 20:09:50 EDT 2022" starttimestamp="1650324058609" timestamp="2932341" timestamp2="2932341">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="768" _type="PauseCommand" date="Mon Apr 18 20:09:55 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2937190">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4849]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="767" _type="SelectTextCommand" caretOffset="1043" date="Mon Apr 18 20:09:55 EDT 2022" end="1058" start="1043" starttimestamp="1650324058609" timestamp="2937190" />
  <Command __id="770" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2937432" timestamp2="2937432">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="772" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2937515" timestamp2="2937515">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="774" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2937606" timestamp2="2937606">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="776" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2937825" timestamp2="2937825">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="778" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2937864" timestamp2="2937864">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="780" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2938057" timestamp2="2938057">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="782" _type="InsertStringCommand" date="Mon Apr 18 20:09:56 EDT 2022" starttimestamp="1650324058609" timestamp="2938215" timestamp2="2938215">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="784" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2938597" timestamp2="2938597">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="786" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2938804" timestamp2="2938804">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="788" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2938934" timestamp2="2938934">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="790" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2939083" timestamp2="2939083">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="792" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2939219" timestamp2="2939219">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="794" _type="InsertStringCommand" date="Mon Apr 18 20:09:57 EDT 2022" starttimestamp="1650324058609" timestamp="2939303" timestamp2="2939303">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="796" _type="PauseCommand" date="Mon Apr 18 20:09:59 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2941107">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1804]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="795" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:09:59 EDT 2022" starttimestamp="1650324058609" timestamp="2941107" />
  <Command __id="797" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:09:59 EDT 2022" starttimestamp="1650324058609" timestamp="2941181" />
  <Command __id="798" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:09:59 EDT 2022" starttimestamp="1650324058609" timestamp="2941239" />
  <Command __id="800" _type="PauseCommand" date="Mon Apr 18 20:10:04 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2945615">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4376]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="799" _type="ShellCommand" date="Mon Apr 18 20:10:04 EDT 2022" starttimestamp="1650324058609" timestamp="2945615" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="801" _type="ShellCommand" date="Mon Apr 18 20:10:04 EDT 2022" starttimestamp="1650324058609" timestamp="2945789" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="809" _type="PauseCommand" date="Mon Apr 18 20:10:10 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2952351">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[6345]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="808" _type="SelectTextCommand" caretOffset="1025" date="Mon Apr 18 20:10:10 EDT 2022" end="1035" start="1025" starttimestamp="1650324058609" timestamp="2952351" />
  <Command __id="811" _type="PauseCommand" date="Mon Apr 18 20:10:29 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="2971153">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[18802]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="810" _type="SelectTextCommand" caretOffset="994" date="Mon Apr 18 20:10:29 EDT 2022" end="1227" start="994" starttimestamp="1650324058609" timestamp="2971153" />
  <Command __id="813" _type="CutCommand" date="Mon Apr 18 20:10:30 EDT 2022" starttimestamp="1650324058609" timestamp="2971543" />
  <Command __id="815" _type="PauseCommand" date="Mon Apr 18 20:10:31 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2973248">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1705]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="814" _type="MoveCaretCommand" caretOffset="1166" date="Mon Apr 18 20:10:31 EDT 2022" docOffset="1647" starttimestamp="1650324058609" timestamp="2973248" />
  <Command __id="817" _type="InsertStringCommand" date="Mon Apr 18 20:10:32 EDT 2022" starttimestamp="1650324058609" timestamp="2973510" timestamp2="2973510">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="819" _type="InsertStringCommand" date="Mon Apr 18 20:10:32 EDT 2022" starttimestamp="1650324058609" timestamp="2973731" timestamp2="2973731">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="821" _type="PasteCommand" date="Mon Apr 18 20:10:32 EDT 2022" starttimestamp="1650324058609" timestamp="2974016" />
  <Command __id="823" _type="PauseCommand" date="Mon Apr 18 20:10:35 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="2977283">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3267]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="822" _type="SelectTextCommand" caretOffset="1225" date="Mon Apr 18 20:10:35 EDT 2022" end="1249" start="1225" starttimestamp="1650324058609" timestamp="2977283" />
  <Command __id="825" _type="InsertStringCommand" date="Mon Apr 18 20:10:36 EDT 2022" starttimestamp="1650324058609" timestamp="2978156" timestamp2="2978156">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="827" _type="InsertStringCommand" date="Mon Apr 18 20:10:36 EDT 2022" starttimestamp="1650324058609" timestamp="2978334" timestamp2="2978334">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="829" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978449" timestamp2="2978449">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="831" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978572" timestamp2="2978572">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="833" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978645" timestamp2="2978645">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="835" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978709" timestamp2="2978709">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="837" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978810" timestamp2="2978810">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="839" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2978926" timestamp2="2978926">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="841" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2979193" timestamp2="2979193">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="843" _type="InsertStringCommand" date="Mon Apr 18 20:10:37 EDT 2022" starttimestamp="1650324058609" timestamp="2979337" timestamp2="2979337">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="845" _type="InsertStringCommand" date="Mon Apr 18 20:10:38 EDT 2022" starttimestamp="1650324058609" timestamp="2979497" timestamp2="2979497">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="847" _type="InsertStringCommand" date="Mon Apr 18 20:10:38 EDT 2022" starttimestamp="1650324058609" timestamp="2979688" timestamp2="2979688">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="849" _type="InsertStringCommand" date="Mon Apr 18 20:10:38 EDT 2022" starttimestamp="1650324058609" timestamp="2979817" timestamp2="2979817">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="851" _type="InsertStringCommand" date="Mon Apr 18 20:10:38 EDT 2022" starttimestamp="1650324058609" timestamp="2979873" timestamp2="2979873">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="853" _type="InsertStringCommand" date="Mon Apr 18 20:10:38 EDT 2022" starttimestamp="1650324058609" timestamp="2979971" timestamp2="2979971">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="855" _type="PauseCommand" date="Mon Apr 18 20:10:40 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="2981831">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1860]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="854" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:10:40 EDT 2022" starttimestamp="1650324058609" timestamp="2981831" />
  <Command __id="856" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:10:40 EDT 2022" starttimestamp="1650324058609" timestamp="2981916" />
  <Command __id="857" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:10:40 EDT 2022" starttimestamp="1650324058609" timestamp="2981986" />
  <Command __id="859" _type="PauseCommand" date="Mon Apr 18 20:10:46 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2987696">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5710]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="858" _type="ShellCommand" date="Mon Apr 18 20:10:46 EDT 2022" starttimestamp="1650324058609" timestamp="2987696" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="860" _type="ShellCommand" date="Mon Apr 18 20:10:46 EDT 2022" starttimestamp="1650324058609" timestamp="2987849" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="868" _type="PauseCommand" date="Mon Apr 18 20:10:54 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="2996327">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[8439]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="867" _type="ShellCommand" date="Mon Apr 18 20:10:54 EDT 2022" starttimestamp="1650324058609" timestamp="2996327" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="869" _type="ShellCommand" date="Mon Apr 18 20:10:55 EDT 2022" starttimestamp="1650324058609" timestamp="2996502" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="873" _type="PauseCommand" date="Mon Apr 18 20:11:02 EDT 2022" range="5s-10s" starttimestamp="1650324058609" timestamp="3004352">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[7806]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="872" _type="CopyCommand" date="Mon Apr 18 20:11:02 EDT 2022" starttimestamp="1650324058609" timestamp="3004352" />
  <Command __id="875" _type="PauseCommand" date="Mon Apr 18 20:11:06 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3007444">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3092]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <DocumentChange __id="743" _type="Insert" date="Mon Apr 18 20:09:47 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2208" docExpressionCount="205" docLength="2505" length="8" offset="1540" repeat="8" starttimestamp="1650324058609" timestamp="2928446" timestamp2="2929607">
    <text><![CDATA[deepcopy]]></text>
  </DocumentChange>
  <DocumentChange __id="763" _type="Delete" date="Mon Apr 18 20:09:50 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2207" docExpressionCount="205" docLength="2504" endLine="48" length="1" offset="1544" startLine="48" starttimestamp="1650324058609" timestamp="2931924">
    <text><![CDATA[c]]></text>
  </DocumentChange>
  <DocumentChange __id="765" _type="Insert" date="Mon Apr 18 20:09:50 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2208" docExpressionCount="205" docLength="2505" length="1" offset="1544" starttimestamp="1650324058609" timestamp="2932333">
    <text><![CDATA[C]]></text>
  </DocumentChange>
  <DocumentChange __id="769" _type="Replace" date="Mon Apr 18 20:09:56 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2194" docExpressionCount="205" docLength="2491" endLine="48" insertionLength="1" int_docASTNodeCount="314" int_docActiveCodeLength="2193" int_docExpressionCount="204" int_docLength="2490" length="15" offset="1524" startLine="48" starttimestamp="1650324058609" timestamp="2937424">
    <deletedText><![CDATA[originalMessage]]></deletedText>
    <insertedText><![CDATA[b]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="771" _type="Insert" date="Mon Apr 18 20:09:56 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2206" docExpressionCount="205" docLength="2503" length="12" offset="1525" repeat="12" starttimestamp="1650324058609" timestamp="2937509" timestamp2="2939294">
    <text><![CDATA[oundedBuffer]]></text>
  </DocumentChange>
  <DocumentChange __id="802" _type="Delete" date="Mon Apr 18 20:10:04 EDT 2022" docASTNodeCount="314" docActiveCodeLength="2193" docExpressionCount="204" docLength="2490" endLine="48" length="13" offset="1524" startLine="48" starttimestamp="1650324058609" timestamp="2945997">
    <text><![CDATA[boundedBuffer]]></text>
  </DocumentChange>
  <DocumentChange __id="803" _type="Insert" date="Mon Apr 18 20:10:04 EDT 2022" docASTNodeCount="319" docActiveCodeLength="2217" docExpressionCount="208" docLength="2514" length="24" offset="1524" repeat="5" starttimestamp="1650324058609" timestamp="2946006" timestamp2="2946018">
    <text><![CDATA[((Object) boundedBuffer)]]></text>
  </DocumentChange>
  <DocumentChange __id="812" _type="Delete" date="Mon Apr 18 20:10:30 EDT 2022" docASTNodeCount="287" docActiveCodeLength="2013" docExpressionCount="189" docLength="2281" endLine="51" length="233" offset="1475" startLine="47" starttimestamp="1650324058609" timestamp="2971512">
    <text><![CDATA[/// To pass the autograder
			ByteBuffer copy = ((Object) boundedBuffer).deepCopy();
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///]]></text>
  </DocumentChange>
  <DocumentChange __id="816" _type="Insert" date="Mon Apr 18 20:10:32 EDT 2022" docASTNodeCount="287" docActiveCodeLength="2023" docExpressionCount="189" docLength="2291" length="10" offset="1647" repeat="2" starttimestamp="1650324058609" timestamp="2973501" timestamp2="2973722">
    <text><![CDATA[
			
			]]></text>
  </DocumentChange>
  <DocumentChange __id="820" _type="Replace" date="Mon Apr 18 20:10:32 EDT 2022" docASTNodeCount="319" docActiveCodeLength="2227" docExpressionCount="208" docLength="2524" endLine="56" insertionLength="236" int_docASTNodeCount="287" int_docActiveCodeLength="2020" int_docExpressionCount="189" int_docLength="2288" length="3" offset="1654" startLine="56" starttimestamp="1650324058609" timestamp="2973998">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			/// To pass the autograder
			ByteBuffer copy = ((Object) boundedBuffer).deepCopy();
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="824" _type="Replace" date="Mon Apr 18 20:10:36 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2204" docExpressionCount="205" docLength="2501" endLine="57" insertionLength="1" int_docASTNodeCount="314" int_docActiveCodeLength="2203" int_docExpressionCount="204" int_docLength="2500" length="24" offset="1706" startLine="57" starttimestamp="1650324058609" timestamp="2978156">
    <deletedText><![CDATA[((Object) boundedBuffer)]]></deletedText>
    <insertedText><![CDATA[o]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="826" _type="Insert" date="Mon Apr 18 20:10:36 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2218" docExpressionCount="205" docLength="2515" length="14" offset="1707" repeat="14" starttimestamp="1650324058609" timestamp="2978326" timestamp2="2979971">
    <text><![CDATA[riginalMessage]]></text>
  </DocumentChange>
  <DocumentChange __id="861" _type="Delete" date="Mon Apr 18 20:10:46 EDT 2022" docASTNodeCount="314" docActiveCodeLength="2203" docExpressionCount="204" docLength="2500" endLine="57" length="15" offset="1706" startLine="57" starttimestamp="1650324058609" timestamp="2987882">
    <text><![CDATA[originalMessage]]></text>
  </DocumentChange>
  <DocumentChange __id="862" _type="Insert" date="Mon Apr 18 20:10:46 EDT 2022" docASTNodeCount="319" docActiveCodeLength="2229" docExpressionCount="208" docLength="2526" length="26" offset="1706" repeat="5" starttimestamp="1650324058609" timestamp="2987888" timestamp2="2987898">
    <text><![CDATA[((Object) originalMessage)]]></text>
  </DocumentChange>
  <DocumentChange __id="870" _type="Delete" date="Mon Apr 18 20:10:55 EDT 2022" docASTNodeCount="318" docActiveCodeLength="2223" docExpressionCount="207" docLength="2520" endLine="57" length="6" offset="1708" startLine="57" starttimestamp="1650324058609" timestamp="2996544">
    <text><![CDATA[Object]]></text>
  </DocumentChange>
  <DocumentChange __id="871" _type="Insert" date="Mon Apr 18 20:10:55 EDT 2022" docASTNodeCount="319" docActiveCodeLength="2229" docExpressionCount="208" docLength="2526" length="6" offset="1708" starttimestamp="1650324058609" timestamp="2996546">
    <text><![CDATA[Object]]></text>
  </DocumentChange>
  <DocumentChange __id="876" _type="Replace" date="Mon Apr 18 20:11:06 EDT 2022" docASTNodeCount="313" docActiveCodeLength="2194" docExpressionCount="203" docLength="2491" endLine="57" insertionLength="1" int_docASTNodeCount="312" int_docActiveCodeLength="2193" int_docExpressionCount="202" int_docLength="2490" length="36" offset="1706" startLine="57" starttimestamp="1650324058609" timestamp="3007756">
    <deletedText><![CDATA[((Object) originalMessage).deepCopy(]]></deletedText>
    <insertedText><![CDATA[o]]></insertedText>
  </DocumentChange>
  <Command __id="874" _type="SelectTextCommand" caretOffset="1225" date="Mon Apr 18 20:11:06 EDT 2022" end="1261" start="1225" starttimestamp="1650324058609" timestamp="3007444" />
  <Command __id="877" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3007764" timestamp2="3007764">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="879" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3007943" timestamp2="3007943">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="881" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3008051" timestamp2="3008051">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="883" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3008154" timestamp2="3008154">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="885" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3008241" timestamp2="3008241">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="887" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3008291" timestamp2="3008291">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="889" _type="InsertStringCommand" date="Mon Apr 18 20:11:06 EDT 2022" starttimestamp="1650324058609" timestamp="3008370" timestamp2="3008370">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="891" _type="InsertStringCommand" date="Mon Apr 18 20:11:07 EDT 2022" starttimestamp="1650324058609" timestamp="3008493" timestamp2="3008493">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="893" _type="InsertStringCommand" date="Mon Apr 18 20:11:07 EDT 2022" starttimestamp="1650324058609" timestamp="3008721" timestamp2="3008721">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="895" _type="InsertStringCommand" date="Mon Apr 18 20:11:07 EDT 2022" starttimestamp="1650324058609" timestamp="3008914" timestamp2="3008914">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="897" _type="InsertStringCommand" date="Mon Apr 18 20:11:07 EDT 2022" starttimestamp="1650324058609" timestamp="3008994" timestamp2="3008994">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="899" _type="InsertStringCommand" date="Mon Apr 18 20:11:07 EDT 2022" starttimestamp="1650324058609" timestamp="3009283" timestamp2="3009283">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="901" _type="InsertStringCommand" date="Mon Apr 18 20:11:08 EDT 2022" starttimestamp="1650324058609" timestamp="3009425" timestamp2="3009425">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="903" _type="InsertStringCommand" date="Mon Apr 18 20:11:08 EDT 2022" starttimestamp="1650324058609" timestamp="3009559" timestamp2="3009559">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="905" _type="InsertStringCommand" date="Mon Apr 18 20:11:08 EDT 2022" starttimestamp="1650324058609" timestamp="3009696" timestamp2="3009696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="907" _type="InsertStringCommand" date="Mon Apr 18 20:11:08 EDT 2022" starttimestamp="1650324058609" timestamp="3009910" timestamp2="3009910">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="908" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 18 20:11:08 EDT 2022" start_end="START" starttimestamp="1650324058609" timestamp="3009910" />
  <Command __id="910" _type="PasteCommand" date="Mon Apr 18 20:11:09 EDT 2022" starttimestamp="1650324058609" timestamp="3010495" />
  <Command __id="911" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 18 20:11:09 EDT 2022" start_end="END" starttimestamp="1650324058609" timestamp="3010521" />
  <Command __id="914" _type="PauseCommand" date="Mon Apr 18 20:11:10 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3011915">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1394]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="913" _type="InsertStringCommand" date="Mon Apr 18 20:11:10 EDT 2022" starttimestamp="1650324058609" timestamp="3011915" timestamp2="3011915">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="916" _type="PauseCommand" date="Mon Apr 18 20:11:12 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3013428">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1513]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="915" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:11:12 EDT 2022" starttimestamp="1650324058609" timestamp="3013428" />
  <Command __id="917" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:11:12 EDT 2022" starttimestamp="1650324058609" timestamp="3013500" />
  <Command __id="918" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:11:12 EDT 2022" starttimestamp="1650324058609" timestamp="3013545" />
  <DocumentChange __id="878" _type="Insert" date="Mon Apr 18 20:11:06 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2224" docExpressionCount="205" docLength="2521" length="30" offset="1707" repeat="17" starttimestamp="1650324058609" timestamp="3007932" timestamp2="3011895">
    <text><![CDATA[riginalMessage.deepDuplicate()]]></text>
  </DocumentChange>
  <Command __id="920" _type="PauseCommand" date="Mon Apr 18 20:11:23 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="3024443">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10898]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="921" _type="SelectTextCommand" caretOffset="535" date="Mon Apr 18 20:11:23 EDT 2022" end="535" start="448" starttimestamp="1650324058609" timestamp="3024589" />
  <Command __id="923" _type="PauseCommand" date="Mon Apr 18 20:11:24 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3025690">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1101]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="922" _type="MoveCaretCommand" caretOffset="600" date="Mon Apr 18 20:11:24 EDT 2022" docOffset="2086" starttimestamp="1650324058609" timestamp="3025690" />
  <Command __id="926" _type="PauseCommand" date="Mon Apr 18 20:11:25 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3026693">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1003]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="925" _type="ShellCommand" date="Mon Apr 18 20:11:25 EDT 2022" starttimestamp="1650324058609" timestamp="3026693" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="928" _type="PauseCommand" date="Mon Apr 18 20:11:26 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3027752">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1059]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="927" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:11:26 EDT 2022" forward="false" matchWord="false" offset="2086" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="3027752" wrapSearch="false">
    <searchString><![CDATA[deep]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="930" _type="PauseCommand" date="Mon Apr 18 20:11:29 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3030694">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2942]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="929" _type="FindCommand" caseSensitive="false" date="Mon Apr 18 20:11:29 EDT 2022" forward="true" matchWord="false" offset="2086" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1650324058609" timestamp="3030694" wrapSearch="false">
    <searchString><![CDATA[deep]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="932" _type="PauseCommand" date="Mon Apr 18 20:11:32 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3034109">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3415]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="931" _type="ShellCommand" date="Mon Apr 18 20:11:32 EDT 2022" starttimestamp="1650324058609" timestamp="3034109" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="934" _type="PauseCommand" date="Mon Apr 18 20:11:34 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3035844">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1735]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="933" _type="SelectTextCommand" caretOffset="2556" date="Mon Apr 18 20:11:34 EDT 2022" end="2600" start="2556" starttimestamp="1650324058609" timestamp="3035844" />
  <Command __id="935" _type="CopyCommand" date="Mon Apr 18 20:11:34 EDT 2022" starttimestamp="1650324058609" timestamp="3036009" />
  <Command __id="919" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:11:23 EDT 2022" docASTNodeCount="761" docActiveCodeLength="5441" docExpressionCount="557" docLength="6553" projectName="A6" starttimestamp="1650324058609" timestamp="3024443">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="937" _type="PauseCommand" date="Mon Apr 18 20:11:36 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3037490">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1481]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="938" _type="MoveCaretCommand" caretOffset="1255" date="Mon Apr 18 20:11:36 EDT 2022" docOffset="1736" starttimestamp="1650324058609" timestamp="3037705" />
  <Command __id="940" _type="PauseCommand" date="Mon Apr 18 20:11:38 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3039748">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2043]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="939" _type="SelectTextCommand" caretOffset="1225" date="Mon Apr 18 20:11:38 EDT 2022" end="1258" start="1225" starttimestamp="1650324058609" timestamp="3039748" />
  <Command __id="946" _type="PasteCommand" date="Mon Apr 18 20:11:38 EDT 2022" starttimestamp="1650324058609" timestamp="3040219" />
  <Command __id="948" _type="PauseCommand" date="Mon Apr 18 20:11:41 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3043209">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2990]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="947" _type="SelectTextCommand" caretOffset="1259" date="Mon Apr 18 20:11:41 EDT 2022" end="1267" start="1259" starttimestamp="1650324058609" timestamp="3043209" />
  <Command __id="950" _type="InsertStringCommand" date="Mon Apr 18 20:11:42 EDT 2022" starttimestamp="1650324058609" timestamp="3043967" timestamp2="3043967">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="952" _type="InsertStringCommand" date="Mon Apr 18 20:11:42 EDT 2022" starttimestamp="1650324058609" timestamp="3044168" timestamp2="3044168">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="954" _type="InsertStringCommand" date="Mon Apr 18 20:11:42 EDT 2022" starttimestamp="1650324058609" timestamp="3044284" timestamp2="3044284">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="956" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3044395" timestamp2="3044395">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="958" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3044493" timestamp2="3044493">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="960" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3044525" timestamp2="3044525">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="962" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3044651" timestamp2="3044651">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="964" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3044780" timestamp2="3044780">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="966" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3045135" timestamp2="3045135">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="968" _type="InsertStringCommand" date="Mon Apr 18 20:11:43 EDT 2022" starttimestamp="1650324058609" timestamp="3045311" timestamp2="3045311">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="970" _type="InsertStringCommand" date="Mon Apr 18 20:11:44 EDT 2022" starttimestamp="1650324058609" timestamp="3045403" timestamp2="3045403">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="972" _type="InsertStringCommand" date="Mon Apr 18 20:11:44 EDT 2022" starttimestamp="1650324058609" timestamp="3045730" timestamp2="3045730">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="974" _type="InsertStringCommand" date="Mon Apr 18 20:11:44 EDT 2022" starttimestamp="1650324058609" timestamp="3045877" timestamp2="3045877">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="976" _type="InsertStringCommand" date="Mon Apr 18 20:11:44 EDT 2022" starttimestamp="1650324058609" timestamp="3045967" timestamp2="3045967">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="978" _type="InsertStringCommand" date="Mon Apr 18 20:11:44 EDT 2022" starttimestamp="1650324058609" timestamp="3046052" timestamp2="3046052">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="980" _type="PauseCommand" date="Mon Apr 18 20:11:46 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3048168">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2116]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="979" _type="ShellCommand" date="Mon Apr 18 20:11:46 EDT 2022" starttimestamp="1650324058609" timestamp="3048168" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="981" _type="ShellCommand" date="Mon Apr 18 20:11:46 EDT 2022" starttimestamp="1650324058609" timestamp="3048305" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="983" _type="PauseCommand" date="Mon Apr 18 20:11:50 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3051656">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3351]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="982" _type="MoveCaretCommand" caretOffset="1202" date="Mon Apr 18 20:11:50 EDT 2022" docOffset="1729" starttimestamp="1650324058609" timestamp="3051656" />
  <Command __id="984" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 18 20:11:50 EDT 2022" starttimestamp="1650324058609" timestamp="3052248" />
  <Command __id="985" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:11:50 EDT 2022" starttimestamp="1650324058609" timestamp="3052340" />
  <Command __id="986" _type="EclipseCommand" commandID="" date="Mon Apr 18 20:11:50 EDT 2022" starttimestamp="1650324058609" timestamp="3052387" />
  <Command __id="988" _type="PauseCommand" date="Mon Apr 18 20:11:52 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3054182">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1795]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="987" _type="ShellCommand" date="Mon Apr 18 20:11:52 EDT 2022" starttimestamp="1650324058609" timestamp="3054182" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="990" _type="PauseCommand" date="Mon Apr 18 20:11:54 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3055567">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1385]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="989" _type="ShellCommand" date="Mon Apr 18 20:11:54 EDT 2022" starttimestamp="1650324058609" timestamp="3055567" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="991" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:11:54 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3055795" type="Debug" />
  <Command __id="992" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:11:54 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3055795" type="Debug" />
  <Command __id="993" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:11:54 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="3055795" type="Run" />
  <Command __id="936" _type="DiffBasedFileOpenCommand" date="Mon Apr 18 20:11:36 EDT 2022" docASTNodeCount="315" docActiveCodeLength="2224" docExpressionCount="205" docLength="2521" projectName="A6" starttimestamp="1650324058609" timestamp="3037490">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import nioExample.NIOManagerPrintServer;¶import server.remote.ServerRemoteObjectNIO;¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶	¶	final ServerRemoteObjectNIO server;¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	¶	public ServerReadThread (final ServerRemoteObjectNIO aServer) {¶		server = aServer;¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶			¶			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();¶			List<SocketChannel> socketList = server.getSocketList();¶			SocketChannel currentSocket = server.getSocketChannel();¶			¶			"), Diff(INSERT,"¶			"), Diff(EQUAL,"		¶			ByteBuffer originalMessage = null;¶			try {¶				originalMessage = boundedBuffer.take();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			"), Diff(INSERT,"¶			/// To pass the autograder¶			ByteBuffer copy = originalMessage.deepDuplicate());¶			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);¶			boundedBufferFake.add(originalMessage);¶			///¶			"), Diff(EQUAL,"// Echo recieve message to all clients (except original message sender)¶			¶			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());¶			¶			for (SocketChannel socket : socketList) {¶				if (!socket.equals(currentSocket)) {¶					¶					nioManager.write(socket, originalMessage, server);¶				}¶			}¶		¶		}¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.NIOManagerPrintServer;
import server.remote.ServerRemoteObjectNIO;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.communication.CommunicationStateNames;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{
	
	final ServerRemoteObjectNIO server;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ServerReadThread (final ServerRemoteObjectNIO aServer) {
		server = aServer;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();
			List<SocketChannel> socketList = server.getSocketList();
			SocketChannel currentSocket = server.getSocketChannel();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			
			/// To pass the autograder
			ByteBuffer copy = originalMessage.deepDuplicate());
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///
			// Echo recieve message to all clients (except original message sender)
			
			ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());
			
			for (SocketChannel socket : socketList) {
				if (!socket.equals(currentSocket)) {
					
					nioManager.write(socket, originalMessage, server);
				}
			}
		
		}
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="941" _type="Replace" date="Mon Apr 18 20:11:38 EDT 2022" docASTNodeCount="316" docActiveCodeLength="2235" docExpressionCount="206" docLength="2532" endLine="57" insertionLength="44" int_docASTNodeCount="310" int_docActiveCodeLength="2191" int_docExpressionCount="205" int_docLength="2488" length="33" offset="1706" startLine="57" starttimestamp="1650324058609" timestamp="3040011">
    <deletedText><![CDATA[originalMessage.deepDuplicate());]]></deletedText>
    <insertedText><![CDATA[MiscAssignmentUtils.deepDuplicate(aMessage);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="942" _type="Delete" date="Mon Apr 18 20:11:38 EDT 2022" docASTNodeCount="316" docActiveCodeLength="2231" docExpressionCount="206" docLength="2528" endLine="7" length="4" offset="164" startLine="5" starttimestamp="1650324058609" timestamp="3040157">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="943" _type="Insert" date="Mon Apr 18 20:11:38 EDT 2022" docASTNodeCount="322" docActiveCodeLength="2281" docExpressionCount="211" docLength="2578" length="50" offset="164" repeat="3" starttimestamp="1650324058609" timestamp="3040157" timestamp2="3040165">
    <text><![CDATA[

import assignments.util.MiscAssignmentUtils;
]]></text>
  </DocumentChange>
  <DocumentChange __id="949" _type="Replace" date="Mon Apr 18 20:11:42 EDT 2022" docASTNodeCount="322" docActiveCodeLength="2274" docExpressionCount="211" docLength="2571" endLine="58" insertionLength="1" int_docASTNodeCount="321" int_docActiveCodeLength="2273" int_docExpressionCount="210" int_docLength="2570" length="8" offset="1786" startLine="58" starttimestamp="1650324058609" timestamp="3043959">
    <deletedText><![CDATA[aMessage]]></deletedText>
    <insertedText><![CDATA[o]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="951" _type="Insert" date="Mon Apr 18 20:11:42 EDT 2022" docASTNodeCount="322" docActiveCodeLength="2288" docExpressionCount="211" docLength="2585" length="14" offset="1787" repeat="14" starttimestamp="1650324058609" timestamp="3044160" timestamp2="3046044">
    <text><![CDATA[riginalMessage]]></text>
  </DocumentChange>
  <Command __id="995" _type="PauseCommand" date="Mon Apr 18 20:11:56 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3057592">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1797]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="999" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:12:01 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="3062926" type="Run" />
  <Command __id="1001" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 18 20:12:01 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1650324058609" timestamp="3062927" type="Run" />
  <Command __id="1002" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:12:01 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3063134" type="Run" />
  <Command __id="1003" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:12:01 EDT 2022" kind="StepInto" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3063167" type="Run" />
  <Command __id="1004" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:12:01 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3063172" type="Run" />
  <Command __id="1006" _type="PauseCommand" date="Mon Apr 18 20:12:05 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3066771">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3599]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1007" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:12:07 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3068887" type="Run" />
  <Command __id="1009" _type="ConsoleOutput" date="Mon Apr 18 20:12:07 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3068993" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 18 20:12:07 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedCalls@31c9edf8 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 18 20:12:07 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1011" _type="PauseCommand" date="Mon Apr 18 20:12:11 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3072946">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3953]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1010" _type="ConsoleOutput" date="Mon Apr 18 20:12:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3072946" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:127
Running second pass checks Mon Apr 18 20:12:11 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 18 20:12:11 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:127¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Mon Apr 18 20:12:"), Diff(DELETE,"07"), Diff(INSERT,"11 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 18 20:12:11"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1012" _type="ConsoleOutput" date="Mon Apr 18 20:12:11 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3073040" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 18 20:12:11 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:127¶Running second pass checks Mon Apr 18 20:12:11 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 18 20:12:11 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1014" _type="PauseCommand" date="Mon Apr 18 20:12:14 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3075499">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2459]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1013" _type="ConsoleOutput" date="Mon Apr 18 20:12:14 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3075499" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 18 20:12:14 EDT 2022
Generating checks:Mon Apr 18 20:12:14 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method call"), Diff(INSERT,"Finished second pass checks:Mon Apr 18 20:12:14 EDT 2022¶Generating check"), Diff(EQUAL,"s:Mon Apr 18 20:12:1"), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1015" _type="ConsoleOutput" date="Mon Apr 18 20:12:14 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3075612" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating checks:Mon Apr 18 20:12:14 EDT 2022
Generating externals:Mon Apr 18 20:12:14 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass"), Diff(INSERT,"Generating"), Diff(EQUAL," checks:Mon Apr 18 20:12:14 EDT 2022¶Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 20:12:14 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1017" _type="PauseCommand" date="Mon Apr 18 20:12:15 EDT 2022" range="1s-2s" starttimestamp="1650324058609" timestamp="3076885">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1273]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1016" _type="ConsoleOutput" date="Mon Apr 18 20:12:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3076885" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 18 20:12:15 EDT 2022
Test execution time (ms):7942
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 18 20:12:1"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating externals:Mon Apr 18 20:12:14 EDT 202"), Diff(INSERT,"Test execution time (ms):794"), Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="1018" _type="ConsoleOutput" date="Mon Apr 18 20:12:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3076974" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):41
Test execution time (ms):16
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 18 20:12:15 EDT 2022"), Diff(INSERT,"Test execution time (ms):41"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"7942"), Diff(INSERT,"16"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1019" _type="ConsoleOutput" date="Mon Apr 18 20:12:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3077039" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (37)
 |- checks (1)
  |~ Checks.java (36)
 |- client (8)
  |~ Client.java (23)
  |~ ClientConfigure.java (434)
  |~ ClientOutCoupler.java (62)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceNIO.java (21)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (314)
  |~ ClientRemoteObjectNIO.java (187)
 |- nioExample (8)
  |~ AnNIOManagerPrintClient.java (125)
  |~ AnNIOManagerPrintServer.java (138)
  |~ exampleClientReadThread.java (67)
  |~ exampleServerReadThread.java (70)
  |~ FakeClientInterface.java (12)
  |~ NIOManagerPrintClientLauncherNoFactory.java (10)
  |~ NIOManagerPrintServer.java (20)
  |~ NIOManagerPrintServerLauncherNoFactory.java (10)
 |- readThread (3)
  |~ ClientReadThread.java (94)
  |~ ReadThreadInterface.java (13)
  |~ ServerReadThread.java (90)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (10)
  |~ OriginalSimulation.java (9)
  |~ Server.java (33)
  |~ ServerConfigure.java (475)
  |- remote (6)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceNIO.java (23)
   |~ ServerRemoteInterfaceRMI.java (40)
   |~ ServerRemoteObjectGIPC.java (345)
   |~ ServerRemoteObjectNIO.java (168)
   |~ ServerRemoteObjectRMI.java (245)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"41¶Test execution time (ms):16"), Diff(INSERT,"13¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (90)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1020" _type="ConsoleOutput" date="Mon Apr 18 20:12:15 EDT 2022" overflow="false" starttimestamp="1650324058609" timestamp="3077097" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):57
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"13¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (37)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (8)¶  |~ Client.java (23)¶  |~ ClientConfigure.java (434)¶  |~ ClientOutCoupler.java (62)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceNIO.java (21)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (314)¶  |~ ClientRemoteObjectNIO.java (187)¶ |- nioExample (8)¶  |~ AnNIOManagerPrintClient.java (125)¶  |~ AnNIOManagerPrintServer.java (138)¶  |~ exampleClientReadThread.java (67)¶  |~ exampleServerReadThread.java (70)¶  |~ FakeClientInterface.java (12)¶  |~ NIOManagerPrintClientLauncherNoFactory.java (10)¶  |~ NIOManagerPrintServer.java (20)¶  |~ NIOManagerPrintServerLauncherNoFactory.java (10)¶ |- readThread (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)¶  |~ ServerReadThread.java (90)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (10)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (33)¶  |~ ServerConfigure.java (475)¶  |- remote (6)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceNIO.java (23)¶   |~ ServerRemoteInterfaceRMI.java (40)¶   |~ ServerRemoteObjectGIPC.java (345)¶   |~ ServerRemoteObjectNIO.java (168)¶   |~ ServerRemoteObjectRMI.java (245)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)"), Diff(INSERT,"57"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1022" _type="PauseCommand" date="Mon Apr 18 20:12:19 EDT 2022" range="2s-5s" starttimestamp="1650324058609" timestamp="3081329">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4232]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1051" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:13:05 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3126590" type="Run" />
  <Command __id="1053" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:13:05 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3126592" type="Run" />
  <Command __id="1055" _type="PauseCommand" date="Mon Apr 18 20:13:17 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="3139348">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[12756]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1130" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:17:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3403754" type="Run" />
  <Command __id="1132" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 18 20:17:42 EDT 2022" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1650324058609" timestamp="3403759" type="Run" />
  <Command __id="1134" _type="PauseCommand" date="Mon Apr 18 20:17:57 EDT 2022" range="10s-20s" starttimestamp="1650324058609" timestamp="3418836">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[15077]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
