<Events startTimestamp="1649721002230" logVersion="1.0.0.202111260825">
  <Command __id="66" _type="ShellCommand" date="Mon Apr 11 20:14:18 EDT 2022" starttimestamp="1649721002230" timestamp="1456254" type="ECLIPSE_MAXIMIZED" />
  <Command __id="68" _type="ShellCommand" date="Mon Apr 11 20:14:18 EDT 2022" starttimestamp="1649721002230" timestamp="1456328" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="32" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 19:50:23 EDT 2022" docASTNodeCount="885" docActiveCodeLength="6488" docExpressionCount="614" docLength="7252" projectName="A5" starttimestamp="1649721002230" timestamp="20937">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A5\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		IPCMechanism mechanism = getIPCMechanism();
		setIPCMechanism(mechanism);
		boolean broadcast = true;
		setBroadcastMetaState(broadcast);
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}

	@Override
	public void createGIPCRegistry() throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,
			int aProposalNumber, boolean broadcast) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="70" _type="PauseCommand" date="Mon Apr 11 20:14:22 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1460166">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3838]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="71" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:14:22 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="1460462" />
  <Command __id="73" _type="PauseCommand" date="Mon Apr 11 20:14:30 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1468719">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8257]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="72" _type="MoveCaretCommand" caretOffset="115" date="Mon Apr 11 20:14:30 EDT 2022" docOffset="115" starttimestamp="1649721002230" timestamp="1468719" />
  <Command __id="75" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 20:14:31 EDT 2022" starttimestamp="1649721002230" timestamp="1469660" />
  <Command __id="77" _type="InsertStringCommand" date="Mon Apr 11 20:14:32 EDT 2022" starttimestamp="1649721002230" timestamp="1469870" timestamp2="1469870">
    <data><![CDATA[6]]></data>
  </Command>
  <Command __id="79" _type="PauseCommand" date="Mon Apr 11 20:14:33 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="1471335">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1465]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="78" _type="MoveCaretCommand" caretOffset="130" date="Mon Apr 11 20:14:33 EDT 2022" docOffset="130" starttimestamp="1649721002230" timestamp="1471335" />
  <Command __id="81" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 20:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="1471983" />
  <Command __id="83" _type="InsertStringCommand" date="Mon Apr 11 20:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="1472224" timestamp2="1472224">
    <data><![CDATA[6]]></data>
  </Command>
  <Command __id="84" _type="MoveCaretCommand" caretOffset="131" date="Mon Apr 11 20:14:34 EDT 2022" docOffset="131" starttimestamp="1649721002230" timestamp="1472393" />
  <Command __id="86" _type="PauseCommand" date="Mon Apr 11 20:14:36 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1474545">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2152]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="85" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:14:36 EDT 2022" starttimestamp="1649721002230" timestamp="1474545" />
  <Command __id="87" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:36 EDT 2022" starttimestamp="1649721002230" timestamp="1474635" />
  <Command __id="88" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:36 EDT 2022" starttimestamp="1649721002230" timestamp="1474666" />
  <Command __id="90" _type="PauseCommand" date="Mon Apr 11 20:14:45 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1483346">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8680]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="89" _type="ShellCommand" date="Mon Apr 11 20:14:45 EDT 2022" starttimestamp="1649721002230" timestamp="1483346" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="91" _type="ShellCommand" date="Mon Apr 11 20:14:45 EDT 2022" starttimestamp="1649721002230" timestamp="1483529" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="92" _type="ShellCommand" date="Mon Apr 11 20:14:45 EDT 2022" starttimestamp="1649721002230" timestamp="1483658" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="94" _type="PauseCommand" date="Mon Apr 11 20:14:48 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1485939">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2281]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="93" _type="ShellCommand" date="Mon Apr 11 20:14:48 EDT 2022" starttimestamp="1649721002230" timestamp="1485939" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="95" _type="EclipseCommand" commandID="org.eclipse.pde.ui.searchTargetRepositories" date="Mon Apr 11 20:14:48 EDT 2022" starttimestamp="1649721002230" timestamp="1485968" />
  <Command __id="97" _type="PauseCommand" date="Mon Apr 11 20:14:53 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1491347">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5378]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="96" _type="EclipseCommand" commandID="org.eclipse.ui.file.refresh" date="Mon Apr 11 20:14:53 EDT 2022" starttimestamp="1649721002230" timestamp="1491346" />
  <Command __id="98" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:53 EDT 2022" starttimestamp="1649721002230" timestamp="1491632" />
  <Command __id="99" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:53 EDT 2022" starttimestamp="1649721002230" timestamp="1491677" />
  <Command __id="100" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:53 EDT 2022" starttimestamp="1649721002230" timestamp="1491714" />
  <Command __id="101" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:54 EDT 2022" starttimestamp="1649721002230" timestamp="1491880" />
  <Command __id="102" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:54 EDT 2022" starttimestamp="1649721002230" timestamp="1491881" />
  <Command __id="103" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:54 EDT 2022" starttimestamp="1649721002230" timestamp="1492077" />
  <Command __id="104" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:54 EDT 2022" starttimestamp="1649721002230" timestamp="1492078" />
  <Command __id="105" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:54 EDT 2022" starttimestamp="1649721002230" timestamp="1492338" />
  <Command __id="106" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:54 EDT 2022" starttimestamp="1649721002230" timestamp="1492339" />
  <Command __id="107" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:54 EDT 2022" starttimestamp="1649721002230" timestamp="1492456" />
  <Command __id="108" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:54 EDT 2022" starttimestamp="1649721002230" timestamp="1492457" />
  <Command __id="109" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:54 EDT 2022" starttimestamp="1649721002230" timestamp="1492464" />
  <Command __id="110" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:54 EDT 2022" starttimestamp="1649721002230" timestamp="1492464" />
  <Command __id="111" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:14:54 EDT 2022" starttimestamp="1649721002230" timestamp="1492472" />
  <Command __id="113" _type="PauseCommand" date="Mon Apr 11 20:15:27 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="1525513">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[33041]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="112" _type="ShellCommand" date="Mon Apr 11 20:15:27 EDT 2022" starttimestamp="1649721002230" timestamp="1525513" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="115" _type="PauseCommand" date="Mon Apr 11 20:15:42 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="1540245">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14732]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="114" _type="ShellCommand" date="Mon Apr 11 20:15:42 EDT 2022" starttimestamp="1649721002230" timestamp="1540245" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="117" _type="PauseCommand" date="Mon Apr 11 20:16:02 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="1560326">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[20081]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="116" _type="MoveCaretCommand" caretOffset="1243" date="Mon Apr 11 20:16:02 EDT 2022" docOffset="1243" starttimestamp="1649721002230" timestamp="1560326" />
  <Command __id="119" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:16:03 EDT 2022" starttimestamp="1649721002230" timestamp="1561086" />
  <Command __id="121" _type="InsertStringCommand" date="Mon Apr 11 20:16:03 EDT 2022" starttimestamp="1649721002230" timestamp="1561440" timestamp2="1561440">
    <data><![CDATA[6]]></data>
  </Command>
  <Command __id="123" _type="PauseCommand" date="Mon Apr 11 20:16:04 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="1562518">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1078]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="122" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:16:04 EDT 2022" starttimestamp="1649721002230" timestamp="1562518" />
  <Command __id="124" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:16:04 EDT 2022" starttimestamp="1649721002230" timestamp="1562608" />
  <Command __id="125" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:16:04 EDT 2022" starttimestamp="1649721002230" timestamp="1562634" />
  <Command __id="127" _type="PauseCommand" date="Mon Apr 11 20:16:11 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1569195">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6561]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="126" _type="ShellCommand" date="Mon Apr 11 20:16:11 EDT 2022" starttimestamp="1649721002230" timestamp="1569195" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="129" _type="PauseCommand" date="Mon Apr 11 20:16:14 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1571910">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2715]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="128" _type="ShellCommand" date="Mon Apr 11 20:16:14 EDT 2022" starttimestamp="1649721002230" timestamp="1571910" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="130" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Apr 11 20:16:14 EDT 2022" kind="HitBreakPoint" projectName="A4" starttimestamp="1649721002230" timestamp="1572105" type="Run" />
  <Command __id="131" _type="RunCommand" className="(Unknown)" date="Mon Apr 11 20:16:14 EDT 2022" kind="HitBreakPoint" projectName="A4" starttimestamp="1649721002230" timestamp="1572107" type="Run" />
  <Command __id="132" _type="ConsoleOutput" date="Mon Apr 11 20:16:14 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1572483" type="ConsoleOutput">
    <outputString><![CDATA[Registry host:localhost
Registry port:1099
Server host:localhost
Headless:false
Client name:Generic Client:0.10501633501633234
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="133" _type="ShellCommand" date="Mon Apr 11 20:16:15 EDT 2022" starttimestamp="1649721002230" timestamp="1573356" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="135" _type="PauseCommand" date="Mon Apr 11 20:16:22 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1579825">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6469]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="134" _type="ConsoleOutput" date="Mon Apr 11 20:16:22 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1579825" type="ConsoleOutput">
    <outputString><![CDATA[Command processor scanner opened
Enter (prefixes of) print, quit or a method and its parameters separated by commas:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Registry host:localhost¶Registry port:1099¶Server host:localhost¶Headless:false¶Client name:Generic Client:0.10501633501633234"), Diff(INSERT,"Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="137" _type="PauseCommand" date="Mon Apr 11 20:16:25 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1583526">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3701]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="136" _type="ShellCommand" date="Mon Apr 11 20:16:25 EDT 2022" starttimestamp="1649721002230" timestamp="1583526" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="139" _type="PauseCommand" date="Mon Apr 11 20:16:29 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1587623">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4097]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="138" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Apr 11 20:16:29 EDT 2022" starttimestamp="1649721002230" timestamp="1587623" />
  <Command __id="140" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:16:29 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1587705" type="Run" />
  <Command __id="142" _type="PauseCommand" date="Mon Apr 11 20:16:32 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1589936">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2230]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="141" _type="ShellCommand" date="Mon Apr 11 20:16:32 EDT 2022" starttimestamp="1649721002230" timestamp="1589935" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="144" _type="PauseCommand" date="Mon Apr 11 20:16:39 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1597513">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7578]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="143" _type="ConsoleOutput" date="Mon Apr 11 20:16:39 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1597513" type="ConsoleOutput">
    <outputString><![CDATA[E*** Tags:[Server, RMI, NIO, GIPC]not found

GIPCRMINIOStaticArguments did not pass completely:Couldn't run code:Tags:[Server, RMI, NIO, GIPC]not found:%0
Test execution time (ms):5591
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Command processor scanner opened¶Enter (prefixes of) print, quit or a method and its parameters separated by commas:"), Diff(INSERT,"E*** Tags:[Server, RMI, NIO, GIPC]not found¶¶GIPCRMINIOStaticArguments did not pass completely:Couldn't run code:Tags:[Server, RMI, NIO, GIPC]not found:%0¶Test execution time (ms):5591"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="145" _type="ConsoleOutput" date="Mon Apr 11 20:16:40 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1598051" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOOneClientConnection did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):529
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E*** Tags:[Server, "), Diff(INSERT,"GIPC"), Diff(EQUAL,"RMI"), Diff(DELETE,", "), Diff(EQUAL,"NIO"), Diff(DELETE,", GIPC]not found¶¶GIPCRMINIOStaticArguments"), Diff(INSERT,"OneClientConnection"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"Couldn't run code:Tags:[Server, RMI, NIO, GIPC]not found:%0"), Diff(INSERT,"In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶"), Diff(EQUAL,"¶Test execution time (ms):5"), Diff(DELETE,"591"), Diff(INSERT,"29"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="146" _type="ConsoleOutput" date="Mon Apr 11 20:16:40 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1598623" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*
RMI and GIPC are not checked because NIO failed%0.0

Test execution time (ms):523
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOOneClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(INSERT,"¶RMI and GIPC are not checked because NIO failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):52"), Diff(DELETE,"9"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="148" _type="PauseCommand" date="Mon Apr 11 20:16:46 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1603941">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5318]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="153" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Apr 11 20:16:55 EDT 2022" starttimestamp="1649721002230" timestamp="1613228" />
  <Command __id="155" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:16:55 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1613261" type="Run" />
  <Command __id="156" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:16:55 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1613261" type="Run" />
  <Command __id="158" _type="PauseCommand" date="Mon Apr 11 20:17:02 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1620557">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[7296]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="157" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Apr 11 20:17:02 EDT 2022" starttimestamp="1649721002230" timestamp="1620557" />
  <Command __id="159" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:17:03 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1620884" type="Run" />
  <Command __id="160" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:17:03 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1620885" type="Run" />
  <Command __id="162" _type="PauseCommand" date="Mon Apr 11 20:17:05 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1623216">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2331]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="161" _type="ShellCommand" date="Mon Apr 11 20:17:05 EDT 2022" starttimestamp="1649721002230" timestamp="1623216" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="164" _type="PauseCommand" date="Mon Apr 11 20:17:12 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1630665">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7449]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="163" _type="ConsoleOutput" date="Mon Apr 11 20:17:12 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1630665" type="ConsoleOutput">
    <outputString><![CDATA[E*** Tags:[Server, RMI, NIO, GIPC]not found
GIPCRMINIOStaticArguments did not pass completely:Couldn't run code:Tags:[Server, RMI, NIO, GIPC]not found:%0

Test execution time (ms):5590
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*¶RMI and GIPC are not checked because NIO failed%0."), Diff(INSERT,"E*** Tags:[Server, RMI, NIO, GIPC]not found¶GIPCRMINIOStaticArguments did not pass completely:Couldn't run code:Tags:[Server, RMI, NIO, GIPC]not found:%"), Diff(EQUAL,"0¶¶Test execution time (ms):5"), Diff(DELETE,"23"), Diff(INSERT,"590"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="165" _type="ConsoleOutput" date="Mon Apr 11 20:17:13 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1631194" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOOneClientConnection did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):518
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E*** Tags:[Server, RMI, NIO, GIPC]not found¶GIPCRMINIOStaticArguments"), Diff(INSERT,"GIPCRMINIOOneClientConnection"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"Couldn't run code:Tags:[Server, RMI, NIO, GIPC]not found:%"), Diff(INSERT,"In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0."), Diff(EQUAL,"0¶¶Test execution time (ms):5"), Diff(DELETE,"590"), Diff(INSERT,"18"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="166" _type="ConsoleOutput" date="Mon Apr 11 20:17:13 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1631764" type="ConsoleOutput">
    <outputString><![CDATA[
GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*
RMI and GIPC are not checked because NIO failed%0.0
Test execution time (ms):513
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"GIPCRMINIOOneClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(INSERT,"¶RMI and GIPC are not checked because NIO failed"), Diff(EQUAL,"%0.0¶"), Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):51"), Diff(DELETE,"8"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="168" _type="PauseCommand" date="Mon Apr 11 20:17:34 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="1651788">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[20024]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="167" _type="ConsoleOutput" date="Mon Apr 11 20:17:34 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1651788" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOTwoClientConnection did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):526
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"GIPCRMINIO"), Diff(DELETE,"One"), Diff(INSERT,"Two"), Diff(EQUAL,"Client"), Diff(DELETE,"ReadWriteNonAtomic"), Diff(INSERT,"Connection"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(DELETE,"¶RMI and GIPC are not checked because NIO failed"), Diff(EQUAL,"%0.0¶"), Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):5"), Diff(DELETE,"13"), Diff(INSERT,"26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="169" _type="ConsoleOutput" date="Mon Apr 11 20:17:34 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1652351" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOTwoClientReadWriteNonAtomic did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*
RMI and GIPC are not checked because NIO failed%0.0

Test execution time (ms):509
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOTwoClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(INSERT,"¶RMI and GIPC are not checked because NIO failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):5"), Diff(DELETE,"26"), Diff(INSERT,"09"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="170" _type="ConsoleOutput" date="Mon Apr 11 20:17:35 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1652814" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOClientMetaStateNoBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):510
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIO"), Diff(DELETE,"Two"), Diff(EQUAL,"Client"), Diff(DELETE,"ReadWriteNonAtomic"), Diff(INSERT,"MetaStateNoBroadcast"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(DELETE,"¶RMI and GIPC are not checked because NIO failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):5"), Diff(INSERT,"1"), Diff(EQUAL,"0"), Diff(DELETE,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="171" _type="ConsoleOutput" date="Mon Apr 11 20:17:35 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1653327" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOClientMetaStateBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):511
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOClientMetaState"), Diff(DELETE,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶¶Test execution time (ms):51"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="172" _type="ConsoleOutput" date="Mon Apr 11 20:17:36 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1653840" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOServerMetaStateNoBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):511
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIO"), Diff(DELETE,"Client"), Diff(INSERT,"Server"), Diff(EQUAL,"MetaState"), Diff(INSERT,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶¶Test execution time (ms):511¶")]]]></diff>
  </Command>
  <Command __id="173" _type="ConsoleOutput" date="Mon Apr 11 20:17:36 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1654353" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOServerMetaStateBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):510
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOServerMetaState"), Diff(DELETE,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶¶Test execution time (ms):51"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="175" _type="PauseCommand" date="Mon Apr 11 20:17:42 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1660069">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5716]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="174" _type="ConsoleOutput" date="Mon Apr 11 20:17:42 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1660069" type="ConsoleOutput">
    <outputString><![CDATA[Please run the checkstle plugin on your project
Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project 

Test execution time (ms):1
A6NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0

Test execution time (ms):0
A6NamedConstants did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
A6PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0
A6InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
A6MnemonicNames did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
A6AccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOServerMetaStateBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(INSERT,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):1¶A6NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0¶¶Test execution time (ms):0¶A6NamedConstants did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A6PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0¶A6InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A6MnemonicNames did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A6AccessModifiersMatched did not pass completely:No checkstyle output, check console error messages"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):"), Diff(DELETE,"510"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="177" _type="PauseCommand" date="Mon Apr 11 20:17:55 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="1673488">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13419]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="176" _type="ConsoleOutput" date="Mon Apr 11 20:17:55 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1673488" type="ConsoleOutput">
    <outputString><![CDATA[
A6TaggedClassesDefined did not pass completely:Did not find checkstyle text%0.0
Test execution time (ms):1

Test execution time (ms):0
A6ExpectedInterfaces did not pass completely:No checkstyle output, check console error messages%0.0
A6ExpectedCalls did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
A6ExpectedSignatures did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (20)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (282)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (30)
  |~ ClientRemoteInterfaceRMI.java (26)
  |~ ClientRemoteObject.java (276)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (326)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (40)
   |~ ServerRemoteInterfaceRMI.java (34)
   |~ ServerRemoteObjectGIPC.java (314)
   |~ ServerRemoteObjectRMI.java (238)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):1¶A6NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0"), Diff(INSERT,"¶A6TaggedClassesDefined did not pass completely:Did not find checkstyle text%0.0¶Test execution time (ms):1"), Diff(EQUAL,"¶¶Test execution time (ms):0¶A6"), Diff(DELETE,"NamedConstant"), Diff(INSERT,"ExpectedInterface"), Diff(EQUAL,"s did not pass completely:No checkstyle output, check console error messages%0.0¶"), Diff(DELETE,"¶Test execution time (ms):0¶A6PublicMethodsOverride"), Diff(INSERT,"A6ExpectedCalls"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶"), Diff(DELETE,"A6InterfaceAsType"), Diff(INSERT,"¶Test execution time (ms):0¶A6ExpectedSignatures"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):"), Diff(DELETE,"0¶A6MnemonicNames did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A6AccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1"), Diff(INSERT,"1¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="179" _type="PauseCommand" date="Mon Apr 11 20:18:01 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1678967">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5479]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="178" _type="ShellCommand" date="Mon Apr 11 20:18:01 EDT 2022" starttimestamp="1649721002230" timestamp="1678967" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="180" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:18:01 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1679639" type="Run" />
  <Command __id="181" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:18:01 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1679639" type="Run" />
  <Command __id="183" _type="PauseCommand" date="Mon Apr 11 20:18:19 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="1697555">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[17916]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="182" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Apr 11 20:18:19 EDT 2022" starttimestamp="1649721002230" timestamp="1697555" />
  <Command __id="184" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:18:19 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1697750" type="Run" />
  <Command __id="185" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:18:19 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1697750" type="Run" />
  <Command __id="187" _type="PauseCommand" date="Mon Apr 11 20:18:22 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1700007">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2257]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="186" _type="ShellCommand" date="Mon Apr 11 20:18:22 EDT 2022" starttimestamp="1649721002230" timestamp="1700007" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="189" _type="PauseCommand" date="Mon Apr 11 20:18:24 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1702197">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2190]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="188" _type="ConsoleOutput" date="Mon Apr 11 20:18:24 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1702197" type="ConsoleOutput">
    <outputString><![CDATA[Please run the checkstle plugin on your project
Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project 
A6NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0

Test execution time (ms):19

A6NamedConstants did not pass completely:No checkstyle output, check console error messages%0.0
Test execution time (ms):1
A6PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
A6InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
A6MnemonicNames did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
A6AccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶A6TaggedClassesDefined"), Diff(INSERT,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶A6NoCheckstyleWarnings"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"Di"), Diff(INSERT,"Coul"), Diff(EQUAL,"d not "), Diff(DELETE,"find"), Diff(INSERT,"run"), Diff(EQUAL," checkstyle"), Diff(DELETE," text"), Diff(EQUAL,"%0.0¶"), Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):1"), Diff(INSERT,"9"), Diff(EQUAL,"¶¶"), Diff(DELETE,"Test execution time (ms):0¶A6ExpectedInterface"), Diff(INSERT,"A6NamedConstant"), Diff(EQUAL,"s did not pass completely:No checkstyle output, check console error messages%0.0¶"), Diff(DELETE,"A6ExpectedCalls"), Diff(INSERT,"Test execution time (ms):1¶A6PublicMethodsOverride"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶A6"), Diff(DELETE,"ExpectedSignatures"), Diff(INSERT,"InterfaceAsType"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶"), Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)"), Diff(INSERT,"A6MnemonicNames did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶A6AccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="191" _type="PauseCommand" date="Mon Apr 11 20:18:58 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="1735970">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[33773]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="194" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:19:04 EDT 2022" starttimestamp="1649721002230" timestamp="1742560" />
  <Command __id="196" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:19:04 EDT 2022" starttimestamp="1649721002230" timestamp="1742567" />
  <Command __id="69" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:14:22 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" projectName="A6" starttimestamp="1649721002230" timestamp="1460166">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\checks\Checks.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package checks;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp533s22.assignment5.S22Assignment5Suite;
import trace.grader.basics.GraderBasicsTraceUtility;
import util.trace.Tracer;

public class Checks {
	public static void main(final String[] args) {
		Tracer.showInfo(true);
		GraderBasicsTraceUtility.setBufferTracedMessages(false);
		final int traces = 8000;
		Tracer.setMaxTraces(traces);
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		
		GraderBasicsTraceUtility.setBufferTracedMessages(false);
		// Change this number if a test trace gets longer than 600 and is clipped
		
		final int length = 600;
		GraderBasicsTraceUtility.setMaxPrintedTraces(length);
		// Change this number if all traces together are longer than 600
		
		final int time = 4000;
		GraderBasicsTraceUtility.setMaxTraces(time);
		// Change this number if your process times out prematurely
		
		final int timer = 50;
		BasicProjectExecution.setProcessTimeOut(timer);
		// You need to always call such a method
		S22Assignment5Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="74" _type="Delete" date="Mon Apr 11 20:14:31 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="3" length="1" offset="115" startLine="3" starttimestamp="1649721002230" timestamp="1469649">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <DocumentChange __id="76" _type="Insert" date="Mon Apr 11 20:14:32 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="115" starttimestamp="1649721002230" timestamp="1469864">
    <text><![CDATA[6]]></text>
  </DocumentChange>
  <DocumentChange __id="80" _type="Delete" date="Mon Apr 11 20:14:34 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="3" length="1" offset="130" startLine="3" starttimestamp="1649721002230" timestamp="1471977">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <DocumentChange __id="82" _type="Insert" date="Mon Apr 11 20:14:34 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="130" starttimestamp="1649721002230" timestamp="1472215">
    <text><![CDATA[6]]></text>
  </DocumentChange>
  <DocumentChange __id="118" _type="Delete" date="Mon Apr 11 20:16:03 EDT 2022" docASTNodeCount="117" docActiveCodeLength="877" docExpressionCount="75" docLength="1268" endLine="33" length="1" offset="1242" startLine="33" starttimestamp="1649721002230" timestamp="1561080">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <DocumentChange __id="120" _type="Insert" date="Mon Apr 11 20:16:03 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" length="1" offset="1242" starttimestamp="1649721002230" timestamp="1561435">
    <text><![CDATA[6]]></text>
  </DocumentChange>
  <Command __id="198" _type="PauseCommand" date="Mon Apr 11 20:19:17 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="1754912">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[12345]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="199" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:19:17 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="1755097" />
  <Command __id="201" _type="PauseCommand" date="Mon Apr 11 20:19:25 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1762791">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7694]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="200" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Apr 11 20:19:25 EDT 2022" starttimestamp="1649721002230" timestamp="1762791" />
  <Command __id="202" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:19:25 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1763048" type="Run" />
  <Command __id="203" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:19:25 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1763048" type="Run" />
  <Command __id="205" _type="PauseCommand" date="Mon Apr 11 20:19:27 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1765353">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2305]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="204" _type="ShellCommand" date="Mon Apr 11 20:19:27 EDT 2022" starttimestamp="1649721002230" timestamp="1765353" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="207" _type="PauseCommand" date="Mon Apr 11 20:19:29 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1767560">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2207]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="206" _type="ConsoleOutput" date="Mon Apr 11 20:19:29 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1767560" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 20:19:29 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶A6NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0¶¶Test execution time (ms):19¶¶A6NamedConstants did not pass completely:No checkstyle output, check console error messages%0.0¶Test execution time (ms):1¶A6PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶A6InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶A6MnemonicNames did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶A6AccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 20:19:29 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="209" _type="PauseCommand" date="Mon Apr 11 20:19:31 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="1769537">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1977]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="208" _type="ConsoleOutput" date="Mon Apr 11 20:19:31 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1769537" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:81
Running second pass checks Mon Apr 11 20:19:31 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 20:19:31 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 20:19:31 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:81¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":Mon Apr 11 20:19:29"), Diff(INSERT," Mon Apr 11 20:19:31 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 20:19:31 EDT 2022¶End O(n2) inter- and intra class method calls:Mon Apr 11 20:19:31"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="210" _type="ConsoleOutput" date="Mon Apr 11 20:19:32 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1770412" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 20:19:32 EDT 2022
Generating checks:Mon Apr 11 20:19:32 EDT 2022
Finished Generating checks:Mon Apr 11 20:19:32 EDT 2022
Generating externals:Mon Apr 11 20:19:32 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:81¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 20:19:3"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 11 20:19:32 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 11 20:19:3"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 20:19:3"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="211" _type="ConsoleOutput" date="Mon Apr 11 20:19:33 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1770807" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 20:19:32 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):3276
Test execution time (ms):30
Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 20:19:32 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 20:19:32 EDT 2022¶Finished Generating checks:Mon Apr 11 20:19:32 EDT 2022¶Generating externals:Mon Apr 11 20:19:32 EDT 2022"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):3276¶Test execution time (ms):30¶Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="212" _type="ConsoleOutput" date="Mon Apr 11 20:19:33 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1770876" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):64
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 20:19:32 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):3276¶Test execution time (ms):30¶Test execution time (ms):25"), Diff(INSERT,"Test execution time (ms):64"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="213" _type="ConsoleOutput" date="Mon Apr 11 20:19:33 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1770950" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"64"), Diff(INSERT,"8¶Test execution time (ms):9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="215" _type="PauseCommand" date="Mon Apr 11 20:19:42 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1780649">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9699]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="214" _type="ConsoleOutput" date="Mon Apr 11 20:19:42 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1780649" type="ConsoleOutput">
    <outputString><![CDATA[Unmatched tags:[ @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]
Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC]

Test execution time (ms):4
A6TaggedClassesDefined did not pass completely:Only 5.0 matched out of 14.0 tags.
 See console text%0.35714285714285715
A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):8
A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):6

A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.0
Test execution time (ms):7

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (20)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (282)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (30)
  |~ ClientRemoteInterfaceRMI.java (26)
  |~ ClientRemoteObject.java (276)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (326)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (40)
   |~ ServerRemoteInterfaceRMI.java (34)
   |~ ServerRemoteObjectGIPC.java (314)
   |~ ServerRemoteObjectRMI.java (238)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):8¶Test execution time (ms):9"), Diff(INSERT,"Unmatched tags:[ @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]¶Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC]¶¶Test execution time (ms):4¶A6TaggedClassesDefined did not pass completely:Only 5.0 matched out of 14.0 tags.¶ See console text%0.35714285714285715¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):8¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):6¶¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.0¶Test execution time (ms):7¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="217" _type="PauseCommand" date="Mon Apr 11 20:19:50 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="1788122">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7473]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="216" _type="ConsoleOutput" date="Mon Apr 11 20:19:50 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1788122" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@200b39e8 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Unmatched tags:[ @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]¶Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC]¶¶Test execution time (ms):4¶A6TaggedClassesDefined did not pass completely:Only 5.0 matched out of 14.0 tags.¶ See console text%0.35714285714285715¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):8¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):6¶¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.0¶Test execution time (ms):7¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (20)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@200b39e8 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="219" _type="PauseCommand" date="Mon Apr 11 20:19:51 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="1789630">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1508]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="218" _type="ConsoleOutput" date="Mon Apr 11 20:19:51 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1789630" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@200b39e8 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@200b39e8 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="221" _type="PauseCommand" date="Mon Apr 11 20:19:52 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="1790648">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1018]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="220" _type="ConsoleOutput" date="Mon Apr 11 20:19:52 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1790648" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3951befe . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6"), Diff(DELETE,"TaggedClassesDefined@200b39e8"), Diff(INSERT,"ExpectedInterfaces@3951befe"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="223" _type="PauseCommand" date="Mon Apr 11 20:19:54 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="1792231">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1583]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="222" _type="ConsoleOutput" date="Mon Apr 11 20:19:54 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1792231" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3951befe . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3951befe . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="225" _type="PauseCommand" date="Mon Apr 11 20:20:14 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="1811924">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[19693]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="224" _type="ConsoleOutput" date="Mon Apr 11 20:20:14 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1811924" type="ConsoleOutput">
    <outputString><![CDATA[E*** Tags:[Server, RMI, NIO, GIPC]not found

Test execution time (ms):5554
GIPCRMINIOStaticArguments did not pass completely:Couldn't run code:Tags:[Server, RMI, NIO, GIPC]not found:%0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3951befe . Results may change."), Diff(INSERT,"E*** Tags:[Server, RMI, NIO, GIPC]not found¶¶Test execution time (ms):5554¶GIPCRMINIOStaticArguments did not pass completely:Couldn't run code:Tags:[Server, RMI, NIO, GIPC]not found:%0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="226" _type="ConsoleOutput" date="Mon Apr 11 20:20:14 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1812492" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOOneClientConnection did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):512
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E*** Tags:[Server, "), Diff(INSERT,"GIPC"), Diff(EQUAL,"RMI"), Diff(DELETE,", "), Diff(EQUAL,"NIO"), Diff(DELETE,", GIPC]not found¶¶Test ex"), Diff(INSERT,"OneClientConn"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"tion "), Diff(DELETE,"time (ms):5554¶GIPCRMINIOStaticArguments did not pass completely:Couldn't run code:Tags:[Server, RMI, NIO, GIPC]not found:%0"), Diff(INSERT,"did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶¶Test execution time (ms):512"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="227" _type="ConsoleOutput" date="Mon Apr 11 20:20:15 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1813003" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*
RMI and GIPC are not checked because NIO failed%0.0Steps traced since last test:

Test execution time (ms):511

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOOneClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(DELETE,"%0.0"), Diff(INSERT,"¶RMI and GIPC are not checked because NIO failed%0.0Steps traced since last test:"), Diff(EQUAL,"¶¶Test execution time (ms):51"), Diff(DELETE,"2"), Diff(INSERT,"1¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="229" _type="PauseCommand" date="Mon Apr 11 20:20:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="1816961">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3958]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="228" _type="ConsoleOutput" date="Mon Apr 11 20:20:19 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1816961" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOTwoClientConnection did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):516
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIO"), Diff(DELETE,"One"), Diff(INSERT,"Two"), Diff(EQUAL,"Client"), Diff(DELETE,"ReadWriteNonAtomic"), Diff(INSERT,"Connection"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(DELETE,"¶RMI and GIPC are not checked because NIO failed%0.0Steps traced since last test:"), Diff(INSERT,"%0.0"), Diff(EQUAL,"¶¶Test execution time (ms):51"), Diff(DELETE,"1¶"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="230" _type="ConsoleOutput" date="Mon Apr 11 20:20:19 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1817529" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOTwoClientReadWriteNonAtomic did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*
RMI and GIPC are not checked because NIO failed%0.0

Test execution time (ms):515
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOTwoClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(INSERT,"¶RMI and GIPC are not checked because NIO failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):51"), Diff(DELETE,"6"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="231" _type="ConsoleOutput" date="Mon Apr 11 20:20:20 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1818043" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOClientMetaStateNoBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):511
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIO"), Diff(DELETE,"Two"), Diff(EQUAL,"Client"), Diff(DELETE,"ReadWriteNonAtomic"), Diff(INSERT,"MetaStateNoBroadcast"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(DELETE,"¶RMI and GIPC are not checked because NIO failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):51"), Diff(DELETE,"5"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="232" _type="ConsoleOutput" date="Mon Apr 11 20:20:20 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1818506" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOClientMetaStateBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):511
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOClientMetaState"), Diff(DELETE,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶¶Test execution time (ms):511¶")]]]></diff>
  </Command>
  <Command __id="233" _type="ConsoleOutput" date="Mon Apr 11 20:20:21 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1819069" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOServerMetaStateNoBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):514
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIO"), Diff(DELETE,"Client"), Diff(INSERT,"Server"), Diff(EQUAL,"MetaState"), Diff(INSERT,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶¶Test execution time (ms):51"), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="234" _type="ConsoleOutput" date="Mon Apr 11 20:20:21 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="1819534" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOServerMetaStateBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):513
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOServerMetaState"), Diff(DELETE,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶¶Test execution time (ms):51"), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="236" _type="PauseCommand" date="Mon Apr 11 20:23:04 EDT 2022" range="2m-5m" starttimestamp="1649721002230" timestamp="1982690">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[163156]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="235" _type="ShellCommand" date="Mon Apr 11 20:23:04 EDT 2022" starttimestamp="1649721002230" timestamp="1982690" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="237" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:23:05 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1983380" type="Run" />
  <Command __id="238" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:23:05 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="1983380" type="Run" />
  <Command __id="197" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:19:17 EDT 2022" docASTNodeCount="68" docActiveCodeLength="419" docExpressionCount="40" docLength="442" projectName="A6" starttimestamp="1649721002230" timestamp="1754912">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\Client.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC })
public class Client {
	public static void main(final String[] args) {
		try {

			// create client object
			final ClientRemoteInterfaceRMI client = new ClientRemoteObject();

			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
]]></snapshot>
  </Command>
  <Command __id="240" _type="PauseCommand" date="Mon Apr 11 20:24:56 EDT 2022" range="1m-2m" starttimestamp="1649721002230" timestamp="2094245">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[110865]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="242" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:24:57 EDT 2022" starttimestamp="1649721002230" timestamp="2095745" />
  <Command __id="244" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:24:57 EDT 2022" starttimestamp="1649721002230" timestamp="2095752" />
  <Command __id="246" _type="PauseCommand" date="Mon Apr 11 20:25:24 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="2122103">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[26351]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="245" _type="ShellCommand" date="Mon Apr 11 20:25:24 EDT 2022" starttimestamp="1649721002230" timestamp="2122103" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="248" _type="PauseCommand" date="Mon Apr 11 20:25:28 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2126210">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4106]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="247" _type="ShellCommand" date="Mon Apr 11 20:25:28 EDT 2022" starttimestamp="1649721002230" timestamp="2126209" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="249" _type="MoveCaretCommand" caretOffset="128" date="Mon Apr 11 20:25:28 EDT 2022" docOffset="337" starttimestamp="1649721002230" timestamp="2126278" />
  <Command __id="251" _type="InsertStringCommand" date="Mon Apr 11 20:25:29 EDT 2022" starttimestamp="1649721002230" timestamp="2126927" timestamp2="2126927">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="253" _type="InsertStringCommand" date="Mon Apr 11 20:25:29 EDT 2022" starttimestamp="1649721002230" timestamp="2127055" timestamp2="2127055">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="255" _type="PasteCommand" date="Mon Apr 11 20:25:29 EDT 2022" starttimestamp="1649721002230" timestamp="2127347" />
  <Command __id="256" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:25:30 EDT 2022" starttimestamp="1649721002230" timestamp="2127864" />
  <Command __id="257" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:25:30 EDT 2022" starttimestamp="1649721002230" timestamp="2128079" />
  <Command __id="258" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:25:30 EDT 2022" starttimestamp="1649721002230" timestamp="2128107" />
  <Command __id="239" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:24:56 EDT 2022" docASTNodeCount="92" docActiveCodeLength="622" docExpressionCount="60" docLength="741" projectName="A6" starttimestamp="1649721002230" timestamp="2094245">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\Server.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC })
public class Server {
	
	
	public static void main(final String[] args) {
		
		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc
		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();

		
		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	


}
]]></snapshot>
  </Command>
  <DocumentChange __id="250" _type="Insert" date="Mon Apr 11 20:25:29 EDT 2022" docASTNodeCount="95" docActiveCodeLength="643" docExpressionCount="63" docLength="762" length="21" offset="337" repeat="3" starttimestamp="1649721002230" timestamp="2126921" timestamp2="2127341">
    <text><![CDATA[, DistributedTags.NIO]]></text>
  </DocumentChange>
  <Command __id="260" _type="PauseCommand" date="Mon Apr 11 20:25:37 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2135663">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7556]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="261" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:25:38 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="2135839" />
  <Command __id="263" _type="PauseCommand" date="Mon Apr 11 20:25:39 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2137574">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1735]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="262" _type="MoveCaretCommand" caretOffset="125" date="Mon Apr 11 20:25:39 EDT 2022" docOffset="160" starttimestamp="1649721002230" timestamp="2137574" />
  <Command __id="265" _type="InsertStringCommand" date="Mon Apr 11 20:25:40 EDT 2022" starttimestamp="1649721002230" timestamp="2138564" timestamp2="2138564">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="267" _type="InsertStringCommand" date="Mon Apr 11 20:25:40 EDT 2022" starttimestamp="1649721002230" timestamp="2138686" timestamp2="2138686">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="269" _type="PasteCommand" date="Mon Apr 11 20:25:41 EDT 2022" starttimestamp="1649721002230" timestamp="2139007" />
  <Command __id="270" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:25:42 EDT 2022" starttimestamp="1649721002230" timestamp="2139964" />
  <Command __id="271" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:25:42 EDT 2022" starttimestamp="1649721002230" timestamp="2140053" />
  <Command __id="272" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:25:42 EDT 2022" starttimestamp="1649721002230" timestamp="2140109" />
  <Command __id="274" _type="PauseCommand" date="Mon Apr 11 20:29:08 EDT 2022" range="2m-5m" starttimestamp="1649721002230" timestamp="2346565">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[206455]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="275" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:29:21 EDT 2022" starttimestamp="1649721002230" timestamp="2359055" />
  <Command __id="277" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:29:21 EDT 2022" starttimestamp="1649721002230" timestamp="2359062" />
  <Command __id="278" _type="ShellCommand" date="Mon Apr 11 20:29:21 EDT 2022" starttimestamp="1649721002230" timestamp="2359120" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="280" _type="PauseCommand" date="Mon Apr 11 20:29:27 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2364946">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5826]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="279" _type="ShellCommand" date="Mon Apr 11 20:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="2364946" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="282" _type="PauseCommand" date="Mon Apr 11 20:29:37 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="2375372">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10426]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="281" _type="ShellCommand" date="Mon Apr 11 20:29:37 EDT 2022" starttimestamp="1649721002230" timestamp="2375372" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="284" _type="PauseCommand" date="Mon Apr 11 20:29:43 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2381400">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6028]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="283" _type="ShellCommand" date="Mon Apr 11 20:29:43 EDT 2022" starttimestamp="1649721002230" timestamp="2381400" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="286" _type="PauseCommand" date="Mon Apr 11 20:29:48 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2386668">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5268]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="285" _type="ShellCommand" date="Mon Apr 11 20:29:48 EDT 2022" starttimestamp="1649721002230" timestamp="2386668" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="287" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:29:48 EDT 2022" starttimestamp="1649721002230" timestamp="2386707" />
  <Command __id="288" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:29:48 EDT 2022" starttimestamp="1649721002230" timestamp="2386726" />
  <Command __id="290" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:29:49 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="2387290" />
  <Command __id="259" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:25:37 EDT 2022" docASTNodeCount="68" docActiveCodeLength="419" docExpressionCount="40" docLength="442" projectName="A6" starttimestamp="1649721002230" timestamp="2135663">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\Client.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC })¶public class Client {¶	public static void main(final String[] args) {¶		try {¶¶			// create client object¶			final ClientRemoteInterfaceRMI client = new ClientRemoteObject();¶¶			client.start(args);¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="264" _type="Insert" date="Mon Apr 11 20:25:40 EDT 2022" docASTNodeCount="71" docActiveCodeLength="440" docExpressionCount="43" docLength="463" length="21" offset="160" repeat="3" starttimestamp="1649721002230" timestamp="2138559" timestamp2="2139000">
    <text><![CDATA[, DistributedTags.NIO]]></text>
  </DocumentChange>
  <Command __id="289" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:29:49 EDT 2022" docASTNodeCount="6" docActiveCodeLength="68" docExpressionCount="2" docLength="68" projectName="A6" starttimestamp="1649721002230" timestamp="2387035">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package readThread;

public interface ReadThreadInterface {

}
]]></snapshot>
  </Command>
  <Command __id="292" _type="PauseCommand" date="Mon Apr 11 20:29:53 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2391425">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4135]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="293" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:29:53 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="2391669" />
  <Command __id="295" _type="PauseCommand" date="Mon Apr 11 20:30:03 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2401508">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9839]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="294" _type="SelectTextCommand" caretOffset="105" date="Mon Apr 11 20:30:03 EDT 2022" end="171" start="105" starttimestamp="1649721002230" timestamp="2401508" />
  <Command __id="296" _type="CopyCommand" date="Mon Apr 11 20:30:04 EDT 2022" starttimestamp="1649721002230" timestamp="2402226" />
  <Command __id="291" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:29:53 EDT 2022" docASTNodeCount="1134" docActiveCodeLength="8764" docExpressionCount="808" docLength="9633" projectName="A6" starttimestamp="1649721002230" timestamp="2391425">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}


}
]]></snapshot>
  </Command>
  <Command __id="298" _type="PauseCommand" date="Mon Apr 11 20:30:06 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2404170">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1943]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="299" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:30:06 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="2404356" />
  <Command __id="297" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:30:06 EDT 2022" docASTNodeCount="6" docActiveCodeLength="68" docExpressionCount="2" docLength="68" projectName="A6" starttimestamp="1649721002230" timestamp="2404169">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶public interface ReadThreadInterface {¶¶}¶")]]]></diff>
  </Command>
  <Command __id="301" _type="PauseCommand" date="Mon Apr 11 20:30:09 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2406850">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2494]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="302" _type="SelectTextCommand" caretOffset="105" date="Mon Apr 11 20:30:09 EDT 2022" end="171" start="105" starttimestamp="1649721002230" timestamp="2407189" />
  <Command __id="304" _type="PauseCommand" date="Mon Apr 11 20:30:12 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2410284">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3095]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="303" _type="ShellCommand" date="Mon Apr 11 20:30:12 EDT 2022" starttimestamp="1649721002230" timestamp="2410284" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="306" _type="PauseCommand" date="Mon Apr 11 20:30:16 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2414220">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3936]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="305" _type="ShellCommand" date="Mon Apr 11 20:30:16 EDT 2022" starttimestamp="1649721002230" timestamp="2414220" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="308" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:30:16 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="2414739" />
  <Command __id="310" _type="PauseCommand" date="Mon Apr 11 20:30:18 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2415799">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1060]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="309" _type="MoveCaretCommand" caretOffset="21" date="Mon Apr 11 20:30:18 EDT 2022" docOffset="21" starttimestamp="1649721002230" timestamp="2415799" />
  <Command __id="312" _type="InsertStringCommand" date="Mon Apr 11 20:30:18 EDT 2022" starttimestamp="1649721002230" timestamp="2416105" timestamp2="2416105">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="313" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Apr 11 20:30:18 EDT 2022" starttimestamp="1649721002230" timestamp="2416720" />
  <Command __id="315" _type="InsertStringCommand" date="Mon Apr 11 20:30:19 EDT 2022" starttimestamp="1649721002230" timestamp="2417053" timestamp2="2417053">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="317" _type="PasteCommand" date="Mon Apr 11 20:30:19 EDT 2022" starttimestamp="1649721002230" timestamp="2417419" />
  <Command __id="319" _type="PauseCommand" date="Mon Apr 11 20:30:21 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2418901">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1482]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="318" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:30:21 EDT 2022" starttimestamp="1649721002230" timestamp="2418901" />
  <Command __id="320" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:30:21 EDT 2022" starttimestamp="1649721002230" timestamp="2418993" />
  <Command __id="321" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:30:21 EDT 2022" starttimestamp="1649721002230" timestamp="2419005" />
  <Command __id="323" _type="InsertStringCommand" date="Mon Apr 11 20:30:21 EDT 2022" starttimestamp="1649721002230" timestamp="2419195" timestamp2="2419195">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="325" _type="InsertStringCommand" date="Mon Apr 11 20:30:21 EDT 2022" starttimestamp="1649721002230" timestamp="2419584" timestamp2="2419584">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="327" _type="PauseCommand" date="Mon Apr 11 20:30:24 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2421780">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2196]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="326" _type="ShellCommand" date="Mon Apr 11 20:30:24 EDT 2022" starttimestamp="1649721002230" timestamp="2421780" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="329" _type="PauseCommand" date="Mon Apr 11 20:30:34 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="2432328">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10548]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="328" _type="ShellCommand" date="Mon Apr 11 20:30:34 EDT 2022" starttimestamp="1649721002230" timestamp="2432328" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="330" _type="MoveCaretCommand" caretOffset="93" date="Mon Apr 11 20:30:34 EDT 2022" docOffset="93" starttimestamp="1649721002230" timestamp="2432363" />
  <Command __id="332" _type="PasteCommand" date="Mon Apr 11 20:30:34 EDT 2022" starttimestamp="1649721002230" timestamp="2432640" />
  <Command __id="334" _type="PauseCommand" date="Mon Apr 11 20:30:39 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2436859">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4219]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="333" _type="ShellCommand" date="Mon Apr 11 20:30:39 EDT 2022" starttimestamp="1649721002230" timestamp="2436859" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="336" _type="PauseCommand" date="Mon Apr 11 20:30:42 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2439926">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3067]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="335" _type="ShellCommand" date="Mon Apr 11 20:30:42 EDT 2022" starttimestamp="1649721002230" timestamp="2439926" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="338" _type="PauseCommand" date="Mon Apr 11 20:30:44 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2441911">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1985]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="337" _type="SelectTextCommand" caretOffset="100" date="Mon Apr 11 20:30:44 EDT 2022" end="186" start="100" starttimestamp="1649721002230" timestamp="2441911" />
  <Command __id="340" _type="PasteCommand" date="Mon Apr 11 20:30:44 EDT 2022" starttimestamp="1649721002230" timestamp="2442378" />
  <Command __id="341" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:30:45 EDT 2022" starttimestamp="1649721002230" timestamp="2443050" />
  <Command __id="342" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:30:45 EDT 2022" starttimestamp="1649721002230" timestamp="2443141" />
  <Command __id="343" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:30:45 EDT 2022" starttimestamp="1649721002230" timestamp="2443162" />
  <Command __id="344" _type="MoveCaretCommand" caretOffset="100" date="Mon Apr 11 20:30:45 EDT 2022" docOffset="100" starttimestamp="1649721002230" timestamp="2443573" />
  <Command __id="346" _type="PauseCommand" date="Mon Apr 11 20:30:49 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2446784">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3211]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="345" _type="ShellCommand" date="Mon Apr 11 20:30:49 EDT 2022" starttimestamp="1649721002230" timestamp="2446784" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="347" _type="ShellCommand" date="Mon Apr 11 20:30:49 EDT 2022" starttimestamp="1649721002230" timestamp="2446896" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="348" _type="ShellCommand" date="Mon Apr 11 20:30:49 EDT 2022" starttimestamp="1649721002230" timestamp="2447018" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="350" _type="PauseCommand" date="Mon Apr 11 20:30:59 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="2457234">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10216]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="349" _type="ShellCommand" date="Mon Apr 11 20:30:59 EDT 2022" starttimestamp="1649721002230" timestamp="2457234" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="352" _type="PauseCommand" date="Mon Apr 11 20:31:00 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2458379">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1145]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="351" _type="MoveCaretCommand" caretOffset="121" date="Mon Apr 11 20:31:00 EDT 2022" docOffset="121" starttimestamp="1649721002230" timestamp="2458379" />
  <Command __id="354" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:31:00 EDT 2022" starttimestamp="1649721002230" timestamp="2458742" />
  <Command __id="356" _type="InsertStringCommand" date="Mon Apr 11 20:31:01 EDT 2022" starttimestamp="1649721002230" timestamp="2459634" timestamp2="2459634">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="358" _type="InsertStringCommand" date="Mon Apr 11 20:31:01 EDT 2022" starttimestamp="1649721002230" timestamp="2459644" timestamp2="2459644">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="360" _type="PauseCommand" date="Mon Apr 11 20:31:03 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2461111">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1467]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="359" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:31:03 EDT 2022" starttimestamp="1649721002230" timestamp="2461111" />
  <Command __id="361" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:31:03 EDT 2022" starttimestamp="1649721002230" timestamp="2461252" />
  <Command __id="362" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:31:03 EDT 2022" starttimestamp="1649721002230" timestamp="2461269" />
  <Command __id="364" _type="PauseCommand" date="Mon Apr 11 20:31:12 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2470006">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8737]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="363" _type="MoveCaretCommand" caretOffset="101" date="Mon Apr 11 20:31:12 EDT 2022" docOffset="101" starttimestamp="1649721002230" timestamp="2470006" />
  <Command __id="366" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:31:12 EDT 2022" starttimestamp="1649721002230" timestamp="2470398" />
  <Command __id="368" _type="PauseCommand" date="Mon Apr 11 20:31:14 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2471901">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1503]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="367" _type="MoveCaretCommand" caretOffset="122" date="Mon Apr 11 20:31:14 EDT 2022" docOffset="122" starttimestamp="1649721002230" timestamp="2471901" />
  <Command __id="370" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:31:14 EDT 2022" starttimestamp="1649721002230" timestamp="2472190" />
  <Command __id="372" _type="PauseCommand" date="Mon Apr 11 20:31:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2473569">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1379]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="371" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:31:15 EDT 2022" starttimestamp="1649721002230" timestamp="2473569" />
  <Command __id="373" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:31:15 EDT 2022" starttimestamp="1649721002230" timestamp="2473708" />
  <Command __id="374" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:31:15 EDT 2022" starttimestamp="1649721002230" timestamp="2473736" />
  <Command __id="376" _type="PauseCommand" date="Mon Apr 11 20:31:27 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="2484820">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11084]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="377" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:31:34 EDT 2022" starttimestamp="1649721002230" timestamp="2491966" />
  <Command __id="379" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:31:34 EDT 2022" starttimestamp="1649721002230" timestamp="2491982" />
  <Command __id="380" _type="ShellCommand" date="Mon Apr 11 20:31:34 EDT 2022" starttimestamp="1649721002230" timestamp="2492000" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="382" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:31:34 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="2492584" />
  <Command __id="300" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:30:09 EDT 2022" docASTNodeCount="1134" docActiveCodeLength="8764" docExpressionCount="808" docLength="9633" projectName="A6" starttimestamp="1649721002230" timestamp="2406850">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="307" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:30:16 EDT 2022" docASTNodeCount="6" docActiveCodeLength="68" docExpressionCount="2" docLength="68" projectName="A6" starttimestamp="1649721002230" timestamp="2414530">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶public interface ReadThreadInterface {¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="311" _type="Insert" date="Mon Apr 11 20:30:18 EDT 2022" docASTNodeCount="18" docActiveCodeLength="140" docExpressionCount="12" docLength="140" length="72" offset="21" repeat="5" starttimestamp="1649721002230" timestamp="2416102" timestamp2="2419580">
    <text><![CDATA[
import util.annotations.Tags;
import util.tags.DistributedTags;


]]></text>
  </DocumentChange>
  <DocumentChange __id="331" _type="Insert" date="Mon Apr 11 20:30:34 EDT 2022" docASTNodeCount="33" docActiveCodeLength="235" docExpressionCount="27" docLength="235" length="95" offset="93" starttimestamp="1649721002230" timestamp="2432636">
    <text><![CDATA[@Tags({DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO, DistributedTags.SERVER})]]></text>
  </DocumentChange>
  <DocumentChange __id="339" _type="Replace" date="Mon Apr 11 20:30:44 EDT 2022" docASTNodeCount="24" docActiveCodeLength="208" docExpressionCount="18" docLength="208" endLine="6" insertionLength="59" int_docASTNodeCount="21" int_docActiveCodeLength="149" int_docExpressionCount="15" int_docLength="149" length="86" offset="100" startLine="6" starttimestamp="1649721002230" timestamp="2442373">
    <deletedText><![CDATA[DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO, DistributedTags.SERVER]]></deletedText>
    <insertedText><![CDATA[@DistributedTags.NIO+@DistributedTags.READ_THREAD_INTERFACE]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="353" _type="Delete" date="Mon Apr 11 20:31:00 EDT 2022" docASTNodeCount="24" docActiveCodeLength="207" docExpressionCount="18" docLength="207" endLine="6" length="1" offset="120" startLine="6" starttimestamp="1649721002230" timestamp="2458736">
    <text><![CDATA[+]]></text>
  </DocumentChange>
  <DocumentChange __id="355" _type="Insert" date="Mon Apr 11 20:31:01 EDT 2022" docASTNodeCount="29" docActiveCodeLength="209" docExpressionCount="23" docLength="209" length="2" offset="120" repeat="2" starttimestamp="1649721002230" timestamp="2459632" timestamp2="2459639">
    <text><![CDATA[, ]]></text>
  </DocumentChange>
  <DocumentChange __id="365" _type="Delete" date="Mon Apr 11 20:31:12 EDT 2022" docASTNodeCount="28" docActiveCodeLength="208" docExpressionCount="22" docLength="208" endLine="6" length="1" offset="100" startLine="6" starttimestamp="1649721002230" timestamp="2470391">
    <text><![CDATA[@]]></text>
  </DocumentChange>
  <DocumentChange __id="369" _type="Delete" date="Mon Apr 11 20:31:14 EDT 2022" docASTNodeCount="27" docActiveCodeLength="207" docExpressionCount="21" docLength="207" endLine="6" length="1" offset="121" startLine="6" starttimestamp="1649721002230" timestamp="2472187">
    <text><![CDATA[@]]></text>
  </DocumentChange>
  <Command __id="381" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:31:34 EDT 2022" docASTNodeCount="6" docActiveCodeLength="61" docExpressionCount="2" docLength="61" projectName="A6" starttimestamp="1649721002230" timestamp="2492358">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package readThread;

public class ServerReadThread {

}
]]></snapshot>
  </Command>
  <Command __id="384" _type="PauseCommand" date="Mon Apr 11 20:31:41 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2499487">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6903]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="385" _type="MoveCaretCommand" caretOffset="121" date="Mon Apr 11 20:31:41 EDT 2022" docOffset="121" starttimestamp="1649721002230" timestamp="2499697" />
  <Command __id="387" _type="PauseCommand" date="Mon Apr 11 20:31:44 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2502377">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2680]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="386" _type="SelectTextCommand" caretOffset="23" date="Mon Apr 11 20:31:44 EDT 2022" end="160" start="23" starttimestamp="1649721002230" timestamp="2502377" />
  <Command __id="388" _type="CopyCommand" date="Mon Apr 11 20:31:44 EDT 2022" starttimestamp="1649721002230" timestamp="2502620" />
  <Command __id="390" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:31:45 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="2503556" />
  <Command __id="392" _type="PauseCommand" date="Mon Apr 11 20:31:46 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2504676">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1120]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="391" _type="MoveCaretCommand" caretOffset="21" date="Mon Apr 11 20:31:46 EDT 2022" docOffset="21" starttimestamp="1649721002230" timestamp="2504676" />
  <Command __id="394" _type="InsertStringCommand" date="Mon Apr 11 20:31:47 EDT 2022" starttimestamp="1649721002230" timestamp="2504984" timestamp2="2504984">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="396" _type="PasteCommand" date="Mon Apr 11 20:31:47 EDT 2022" starttimestamp="1649721002230" timestamp="2505298" />
  <Command __id="398" _type="PauseCommand" date="Mon Apr 11 20:31:49 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2507205">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1907]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="397" _type="MoveCaretCommand" caretOffset="192" date="Mon Apr 11 20:31:49 EDT 2022" docOffset="192" starttimestamp="1649721002230" timestamp="2507205" />
  <Command __id="400" _type="InsertStringCommand" date="Mon Apr 11 20:31:49 EDT 2022" starttimestamp="1649721002230" timestamp="2507623" timestamp2="2507623">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="402" _type="InsertStringCommand" date="Mon Apr 11 20:31:50 EDT 2022" starttimestamp="1649721002230" timestamp="2507806" timestamp2="2507806">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="404" _type="InsertStringCommand" date="Mon Apr 11 20:31:50 EDT 2022" starttimestamp="1649721002230" timestamp="2508156" timestamp2="2508156">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="406" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:31:50 EDT 2022" starttimestamp="1649721002230" timestamp="2508473" />
  <Command __id="408" _type="InsertStringCommand" date="Mon Apr 11 20:31:50 EDT 2022" starttimestamp="1649721002230" timestamp="2508715" timestamp2="2508715">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="410" _type="InsertStringCommand" date="Mon Apr 11 20:31:51 EDT 2022" starttimestamp="1649721002230" timestamp="2508890" timestamp2="2508890">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="412" _type="InsertStringCommand" date="Mon Apr 11 20:31:51 EDT 2022" starttimestamp="1649721002230" timestamp="2509553" timestamp2="2509553">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="414" _type="InsertStringCommand" date="Mon Apr 11 20:31:52 EDT 2022" starttimestamp="1649721002230" timestamp="2509860" timestamp2="2509860">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="416" _type="InsertStringCommand" date="Mon Apr 11 20:31:52 EDT 2022" starttimestamp="1649721002230" timestamp="2509966" timestamp2="2509966">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="418" _type="InsertStringCommand" date="Mon Apr 11 20:31:52 EDT 2022" starttimestamp="1649721002230" timestamp="2510067" timestamp2="2510067">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="420" _type="InsertStringCommand" date="Mon Apr 11 20:31:52 EDT 2022" starttimestamp="1649721002230" timestamp="2510154" timestamp2="2510154">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="422" _type="InsertStringCommand" date="Mon Apr 11 20:31:52 EDT 2022" starttimestamp="1649721002230" timestamp="2510303" timestamp2="2510303">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="424" _type="InsertStringCommand" date="Mon Apr 11 20:31:52 EDT 2022" starttimestamp="1649721002230" timestamp="2510403" timestamp2="2510403">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="426" _type="InsertStringCommand" date="Mon Apr 11 20:31:53 EDT 2022" starttimestamp="1649721002230" timestamp="2511400" timestamp2="2511400">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="428" _type="InsertStringCommand" date="Mon Apr 11 20:31:53 EDT 2022" starttimestamp="1649721002230" timestamp="2511649" timestamp2="2511649">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="430" _type="InsertStringCommand" date="Mon Apr 11 20:31:53 EDT 2022" starttimestamp="1649721002230" timestamp="2511745" timestamp2="2511745">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="432" _type="InsertStringCommand" date="Mon Apr 11 20:31:54 EDT 2022" starttimestamp="1649721002230" timestamp="2511958" timestamp2="2511958">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="434" _type="InsertStringCommand" date="Mon Apr 11 20:31:54 EDT 2022" starttimestamp="1649721002230" timestamp="2512325" timestamp2="2512325">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="436" _type="InsertStringCommand" date="Mon Apr 11 20:31:54 EDT 2022" starttimestamp="1649721002230" timestamp="2512584" timestamp2="2512584">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="438" _type="InsertStringCommand" date="Mon Apr 11 20:31:54 EDT 2022" starttimestamp="1649721002230" timestamp="2512611" timestamp2="2512611">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="440" _type="InsertStringCommand" date="Mon Apr 11 20:31:54 EDT 2022" starttimestamp="1649721002230" timestamp="2512721" timestamp2="2512721">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="442" _type="InsertStringCommand" date="Mon Apr 11 20:31:55 EDT 2022" starttimestamp="1649721002230" timestamp="2512779" timestamp2="2512779">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="444" _type="InsertStringCommand" date="Mon Apr 11 20:31:55 EDT 2022" starttimestamp="1649721002230" timestamp="2512975" timestamp2="2512975">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="446" _type="InsertStringCommand" date="Mon Apr 11 20:31:55 EDT 2022" starttimestamp="1649721002230" timestamp="2513290" timestamp2="2513290">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="448" _type="InsertStringCommand" date="Mon Apr 11 20:31:55 EDT 2022" starttimestamp="1649721002230" timestamp="2513490" timestamp2="2513490">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="450" _type="InsertStringCommand" date="Mon Apr 11 20:31:55 EDT 2022" starttimestamp="1649721002230" timestamp="2513535" timestamp2="2513535">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="452" _type="InsertStringCommand" date="Mon Apr 11 20:31:55 EDT 2022" starttimestamp="1649721002230" timestamp="2513708" timestamp2="2513708">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="454" _type="InsertStringCommand" date="Mon Apr 11 20:31:56 EDT 2022" starttimestamp="1649721002230" timestamp="2513774" timestamp2="2513774">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="456" _type="InsertStringCommand" date="Mon Apr 11 20:31:56 EDT 2022" starttimestamp="1649721002230" timestamp="2513971" timestamp2="2513971">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="458" _type="InsertStringCommand" date="Mon Apr 11 20:31:56 EDT 2022" starttimestamp="1649721002230" timestamp="2514012" timestamp2="2514012">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="460" _type="InsertStringCommand" date="Mon Apr 11 20:31:56 EDT 2022" starttimestamp="1649721002230" timestamp="2514219" timestamp2="2514219">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="462" _type="InsertStringCommand" date="Mon Apr 11 20:31:56 EDT 2022" starttimestamp="1649721002230" timestamp="2514419" timestamp2="2514419">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="464" _type="PauseCommand" date="Mon Apr 11 20:31:58 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2516320">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1901]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="463" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:31:58 EDT 2022" starttimestamp="1649721002230" timestamp="2516320" />
  <Command __id="465" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:31:58 EDT 2022" starttimestamp="1649721002230" timestamp="2516411" />
  <Command __id="466" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:31:58 EDT 2022" starttimestamp="1649721002230" timestamp="2516437" />
  <Command __id="468" _type="PauseCommand" date="Mon Apr 11 20:32:04 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2522239">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5802]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="467" _type="ShellCommand" date="Mon Apr 11 20:32:04 EDT 2022" starttimestamp="1649721002230" timestamp="2522239" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="470" _type="PauseCommand" date="Mon Apr 11 20:32:08 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2526404">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4165]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="469" _type="ShellCommand" date="Mon Apr 11 20:32:08 EDT 2022" starttimestamp="1649721002230" timestamp="2526404" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="472" _type="PauseCommand" date="Mon Apr 11 20:32:09 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2527527">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1123]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="471" _type="SelectTextCommand" caretOffset="121" date="Mon Apr 11 20:32:09 EDT 2022" end="158" start="121" starttimestamp="1649721002230" timestamp="2527527" />
  <Command __id="474" _type="PasteCommand" date="Mon Apr 11 20:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="2527847" />
  <Command __id="475" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="2528190" />
  <Command __id="476" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="2528332" />
  <Command __id="477" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="2528354" />
  <Command __id="479" _type="PauseCommand" date="Mon Apr 11 20:32:19 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2537094">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8740]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="480" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:32:24 EDT 2022" starttimestamp="1649721002230" timestamp="2542176" />
  <Command __id="482" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:32:24 EDT 2022" starttimestamp="1649721002230" timestamp="2542197" />
  <Command __id="483" _type="ShellCommand" date="Mon Apr 11 20:32:24 EDT 2022" starttimestamp="1649721002230" timestamp="2542272" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="485" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:32:25 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="2542829" />
  <Command __id="383" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:31:41 EDT 2022" docASTNodeCount="27" docActiveCodeLength="207" docExpressionCount="21" docLength="207" projectName="A6" starttimestamp="1649721002230" timestamp="2499487">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶"), Diff(INSERT,"import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})¶"), Diff(EQUAL,"public interface ReadThreadInterface {¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})
public interface ReadThreadInterface {

}
]]></snapshot>
  </Command>
  <Command __id="389" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:31:45 EDT 2022" docASTNodeCount="6" docActiveCodeLength="61" docExpressionCount="2" docLength="61" projectName="A6" starttimestamp="1649721002230" timestamp="2503485">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶public class ServerReadThread {¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="393" _type="Insert" date="Mon Apr 11 20:31:47 EDT 2022" docASTNodeCount="27" docActiveCodeLength="200" docExpressionCount="21" docLength="200" length="139" offset="21" repeat="2" starttimestamp="1649721002230" timestamp="2504981" timestamp2="2505293">
    <text><![CDATA[
import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})]]></text>
  </DocumentChange>
  <DocumentChange __id="399" _type="Insert" date="Mon Apr 11 20:31:49 EDT 2022" docASTNodeCount="29" docActiveCodeLength="203" docExpressionCount="21" docLength="203" length="3" offset="192" repeat="3" starttimestamp="1649721002230" timestamp="2507619" timestamp2="2508151">
    <text><![CDATA[iml]]></text>
  </DocumentChange>
  <DocumentChange __id="405" _type="Delete" date="Mon Apr 11 20:31:50 EDT 2022" docASTNodeCount="29" docActiveCodeLength="202" docExpressionCount="21" docLength="202" endLine="7" length="1" offset="194" startLine="7" starttimestamp="1649721002230" timestamp="2508471">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <DocumentChange __id="407" _type="Insert" date="Mon Apr 11 20:31:50 EDT 2022" docASTNodeCount="29" docActiveCodeLength="230" docExpressionCount="22" docLength="230" length="28" offset="194" repeat="28" starttimestamp="1649721002230" timestamp="2508710" timestamp2="2514415">
    <text><![CDATA[plements ReadThreadInterface]]></text>
  </DocumentChange>
  <DocumentChange __id="473" _type="Replace" date="Mon Apr 11 20:32:10 EDT 2022" docASTNodeCount="29" docActiveCodeLength="227" docExpressionCount="22" docLength="227" endLine="6" insertionLength="34" int_docASTNodeCount="26" int_docActiveCodeLength="193" int_docExpressionCount="19" int_docLength="193" length="37" offset="121" startLine="6" starttimestamp="1649721002230" timestamp="2527839">
    <deletedText><![CDATA[DistributedTags.READ_THREAD_INTERFACE]]></deletedText>
    <insertedText><![CDATA[DistributedTags.SERVER_READ_THREAD]]></insertedText>
  </DocumentChange>
  <Command __id="484" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:32:24 EDT 2022" docASTNodeCount="6" docActiveCodeLength="61" docExpressionCount="2" docLength="61" projectName="A6" starttimestamp="1649721002230" timestamp="2542642">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package readThread;

public class ClientReadThread {

}
]]></snapshot>
  </Command>
  <Command __id="487" _type="PauseCommand" date="Mon Apr 11 20:32:28 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2546305">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3476]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="488" _type="MoveCaretCommand" caretOffset="155" date="Mon Apr 11 20:32:28 EDT 2022" docOffset="155" starttimestamp="1649721002230" timestamp="2546399" />
  <Command __id="490" _type="PauseCommand" date="Mon Apr 11 20:32:31 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2548792">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2393]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="489" _type="SelectTextCommand" caretOffset="23" date="Mon Apr 11 20:32:31 EDT 2022" end="157" start="23" starttimestamp="1649721002230" timestamp="2548792" />
  <Command __id="491" _type="CopyCommand" date="Mon Apr 11 20:32:31 EDT 2022" starttimestamp="1649721002230" timestamp="2549152" />
  <Command __id="486" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:32:28 EDT 2022" docASTNodeCount="29" docActiveCodeLength="227" docExpressionCount="22" docLength="227" projectName="A6" starttimestamp="1649721002230" timestamp="2546305">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶"), Diff(DELETE,"public class ServerReadThread "), Diff(INSERT,"import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface"), Diff(EQUAL,"{¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{

}
]]></snapshot>
  </Command>
  <Command __id="493" _type="PauseCommand" date="Mon Apr 11 20:32:32 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2550370">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1218]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="492" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:32:32 EDT 2022" docASTNodeCount="6" docActiveCodeLength="61" docExpressionCount="2" docLength="61" projectName="A6" starttimestamp="1649721002230" timestamp="2550370">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶public class ClientReadThread {¶¶}¶")]]]></diff>
  </Command>
  <Command __id="494" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:32:32 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="2550438" />
  <Command __id="495" _type="MoveCaretCommand" caretOffset="21" date="Mon Apr 11 20:32:33 EDT 2022" docOffset="21" starttimestamp="1649721002230" timestamp="2551305" />
  <Command __id="497" _type="InsertStringCommand" date="Mon Apr 11 20:32:33 EDT 2022" starttimestamp="1649721002230" timestamp="2551572" timestamp2="2551572">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="499" _type="PasteCommand" date="Mon Apr 11 20:32:34 EDT 2022" starttimestamp="1649721002230" timestamp="2551964" />
  <Command __id="501" _type="PauseCommand" date="Mon Apr 11 20:32:36 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2554522">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2558]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="500" _type="SelectTextCommand" caretOffset="137" date="Mon Apr 11 20:32:36 EDT 2022" end="143" start="137" starttimestamp="1649721002230" timestamp="2554522" />
  <Command __id="503" _type="InsertStringCommand" date="Mon Apr 11 20:32:36 EDT 2022" starttimestamp="1649721002230" timestamp="2554763" timestamp2="2554763">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="505" _type="InsertStringCommand" date="Mon Apr 11 20:32:37 EDT 2022" starttimestamp="1649721002230" timestamp="2554929" timestamp2="2554929">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="507" _type="InsertStringCommand" date="Mon Apr 11 20:32:37 EDT 2022" starttimestamp="1649721002230" timestamp="2555014" timestamp2="2555014">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="509" _type="InsertStringCommand" date="Mon Apr 11 20:32:37 EDT 2022" starttimestamp="1649721002230" timestamp="2555111" timestamp2="2555111">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="511" _type="InsertStringCommand" date="Mon Apr 11 20:32:37 EDT 2022" starttimestamp="1649721002230" timestamp="2555234" timestamp2="2555234">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="513" _type="InsertStringCommand" date="Mon Apr 11 20:32:37 EDT 2022" starttimestamp="1649721002230" timestamp="2555330" timestamp2="2555330">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="515" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:32:38 EDT 2022" starttimestamp="1649721002230" timestamp="2556269" />
  <Command __id="517" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:32:38 EDT 2022" starttimestamp="1649721002230" timestamp="2556428" />
  <Command __id="519" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:32:38 EDT 2022" starttimestamp="1649721002230" timestamp="2556593" />
  <Command __id="521" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:32:38 EDT 2022" starttimestamp="1649721002230" timestamp="2556723" />
  <Command __id="523" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:32:39 EDT 2022" starttimestamp="1649721002230" timestamp="2556881" />
  <Command __id="525" _type="InsertStringCommand" date="Mon Apr 11 20:32:39 EDT 2022" starttimestamp="1649721002230" timestamp="2557278" timestamp2="2557278">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="527" _type="InsertStringCommand" date="Mon Apr 11 20:32:39 EDT 2022" starttimestamp="1649721002230" timestamp="2557439" timestamp2="2557439">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="529" _type="InsertStringCommand" date="Mon Apr 11 20:32:39 EDT 2022" starttimestamp="1649721002230" timestamp="2557561" timestamp2="2557561">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="531" _type="InsertStringCommand" date="Mon Apr 11 20:32:39 EDT 2022" starttimestamp="1649721002230" timestamp="2557730" timestamp2="2557730">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="533" _type="InsertStringCommand" date="Mon Apr 11 20:32:40 EDT 2022" starttimestamp="1649721002230" timestamp="2557854" timestamp2="2557854">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="535" _type="PauseCommand" date="Mon Apr 11 20:32:42 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2560573">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2719]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="534" _type="MoveCaretCommand" caretOffset="189" date="Mon Apr 11 20:32:42 EDT 2022" docOffset="189" starttimestamp="1649721002230" timestamp="2560573" />
  <Command __id="537" _type="InsertStringCommand" date="Mon Apr 11 20:32:43 EDT 2022" starttimestamp="1649721002230" timestamp="2561026" timestamp2="2561026">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="539" _type="InsertStringCommand" date="Mon Apr 11 20:32:43 EDT 2022" starttimestamp="1649721002230" timestamp="2561166" timestamp2="2561166">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="541" _type="InsertStringCommand" date="Mon Apr 11 20:32:43 EDT 2022" starttimestamp="1649721002230" timestamp="2561294" timestamp2="2561294">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="543" _type="InsertStringCommand" date="Mon Apr 11 20:32:43 EDT 2022" starttimestamp="1649721002230" timestamp="2561473" timestamp2="2561473">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="545" _type="InsertStringCommand" date="Mon Apr 11 20:32:43 EDT 2022" starttimestamp="1649721002230" timestamp="2561606" timestamp2="2561606">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="547" _type="InsertStringCommand" date="Mon Apr 11 20:32:43 EDT 2022" starttimestamp="1649721002230" timestamp="2561735" timestamp2="2561735">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="549" _type="InsertStringCommand" date="Mon Apr 11 20:32:44 EDT 2022" starttimestamp="1649721002230" timestamp="2561817" timestamp2="2561817">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="551" _type="InsertStringCommand" date="Mon Apr 11 20:32:44 EDT 2022" starttimestamp="1649721002230" timestamp="2561898" timestamp2="2561898">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="553" _type="InsertStringCommand" date="Mon Apr 11 20:32:44 EDT 2022" starttimestamp="1649721002230" timestamp="2561998" timestamp2="2561998">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="555" _type="InsertStringCommand" date="Mon Apr 11 20:32:44 EDT 2022" starttimestamp="1649721002230" timestamp="2562125" timestamp2="2562125">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="557" _type="InsertStringCommand" date="Mon Apr 11 20:32:45 EDT 2022" starttimestamp="1649721002230" timestamp="2562961" timestamp2="2562961">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="559" _type="InsertStringCommand" date="Mon Apr 11 20:32:45 EDT 2022" starttimestamp="1649721002230" timestamp="2563242" timestamp2="2563242">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="561" _type="InsertStringCommand" date="Mon Apr 11 20:32:45 EDT 2022" starttimestamp="1649721002230" timestamp="2563445" timestamp2="2563445">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="563" _type="InsertStringCommand" date="Mon Apr 11 20:32:45 EDT 2022" starttimestamp="1649721002230" timestamp="2563555" timestamp2="2563555">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="565" _type="InsertStringCommand" date="Mon Apr 11 20:32:45 EDT 2022" starttimestamp="1649721002230" timestamp="2563751" timestamp2="2563751">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="567" _type="InsertStringCommand" date="Mon Apr 11 20:32:46 EDT 2022" starttimestamp="1649721002230" timestamp="2564099" timestamp2="2564099">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="569" _type="InsertStringCommand" date="Mon Apr 11 20:32:46 EDT 2022" starttimestamp="1649721002230" timestamp="2564316" timestamp2="2564316">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="571" _type="InsertStringCommand" date="Mon Apr 11 20:32:46 EDT 2022" starttimestamp="1649721002230" timestamp="2564342" timestamp2="2564342">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="573" _type="InsertStringCommand" date="Mon Apr 11 20:32:46 EDT 2022" starttimestamp="1649721002230" timestamp="2564438" timestamp2="2564438">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="575" _type="InsertStringCommand" date="Mon Apr 11 20:32:46 EDT 2022" starttimestamp="1649721002230" timestamp="2564525" timestamp2="2564525">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="577" _type="InsertStringCommand" date="Mon Apr 11 20:32:47 EDT 2022" starttimestamp="1649721002230" timestamp="2564816" timestamp2="2564816">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="579" _type="InsertStringCommand" date="Mon Apr 11 20:32:47 EDT 2022" starttimestamp="1649721002230" timestamp="2565228" timestamp2="2565228">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="581" _type="InsertStringCommand" date="Mon Apr 11 20:32:47 EDT 2022" starttimestamp="1649721002230" timestamp="2565411" timestamp2="2565411">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="583" _type="InsertStringCommand" date="Mon Apr 11 20:32:47 EDT 2022" starttimestamp="1649721002230" timestamp="2565494" timestamp2="2565494">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="585" _type="InsertStringCommand" date="Mon Apr 11 20:32:47 EDT 2022" starttimestamp="1649721002230" timestamp="2565665" timestamp2="2565665">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="587" _type="InsertStringCommand" date="Mon Apr 11 20:32:47 EDT 2022" starttimestamp="1649721002230" timestamp="2565749" timestamp2="2565749">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="589" _type="InsertStringCommand" date="Mon Apr 11 20:32:48 EDT 2022" starttimestamp="1649721002230" timestamp="2565932" timestamp2="2565932">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="591" _type="InsertStringCommand" date="Mon Apr 11 20:32:48 EDT 2022" starttimestamp="1649721002230" timestamp="2565974" timestamp2="2565974">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="593" _type="InsertStringCommand" date="Mon Apr 11 20:32:48 EDT 2022" starttimestamp="1649721002230" timestamp="2566168" timestamp2="2566168">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="595" _type="InsertStringCommand" date="Mon Apr 11 20:32:48 EDT 2022" starttimestamp="1649721002230" timestamp="2566369" timestamp2="2566369">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="597" _type="PauseCommand" date="Mon Apr 11 20:32:49 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2567567">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1198]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="602" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:33:23 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="2601247" />
  <Command __id="600" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:33:23 EDT 2022" docASTNodeCount="166" docActiveCodeLength="891" docExpressionCount="80" docLength="891" projectName="A2" starttimestamp="1649721002230" timestamp="2601044">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A2\src\comp533\salve\SlaveInterface.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package comp533.salve;

import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import comp533.mvc.KeyValueInterface;
import comp533.mvc.ModelInterface;

public interface SlaveInterface extends Runnable{
	public void run();
	public void notifySlave();
	public String toString();
	public LinkedList<KeyValueInterface<String, Integer>> addKeyValToLocalLinkedList();
	public List<LinkedList<KeyValueInterface<String, Integer>>> updateReductionQueueListWithPartitions(List<LinkedList<KeyValueInterface<String, Integer>>> aReductionQueueList, Map<String, Integer> keyToPartition);
	public Map<String, Integer> partitionKeys(Map<String, Integer> aKeyToPartition, Map<String, Integer> aResult);
	public LinkedList<KeyValueInterface<String, Integer>> block(ModelInterface aSlaveModel, LinkedList<KeyValueInterface<String, Integer>> aLocalList, boolean aLoop);
}
]]></snapshot>
  </Command>
  <Command __id="604" _type="PauseCommand" date="Mon Apr 11 20:33:30 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2608139">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6892]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="605" _type="SelectTextCommand" caretOffset="23" date="Mon Apr 11 20:33:30 EDT 2022" end="160" start="23" starttimestamp="1649721002230" timestamp="2608208" />
  <Command __id="607" _type="PauseCommand" date="Mon Apr 11 20:33:33 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2611509">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3301]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="606" _type="MoveCaretCommand" caretOffset="199" date="Mon Apr 11 20:33:33 EDT 2022" docOffset="199" starttimestamp="1649721002230" timestamp="2611509" />
  <Command __id="609" _type="InsertStringCommand" date="Mon Apr 11 20:33:34 EDT 2022" starttimestamp="1649721002230" timestamp="2611928" timestamp2="2611928">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="611" _type="InsertStringCommand" date="Mon Apr 11 20:33:34 EDT 2022" starttimestamp="1649721002230" timestamp="2612188" timestamp2="2612188">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="613" _type="InsertStringCommand" date="Mon Apr 11 20:33:34 EDT 2022" starttimestamp="1649721002230" timestamp="2612429" timestamp2="2612429">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="615" _type="InsertStringCommand" date="Mon Apr 11 20:33:34 EDT 2022" starttimestamp="1649721002230" timestamp="2612517" timestamp2="2612517">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="617" _type="InsertStringCommand" date="Mon Apr 11 20:33:34 EDT 2022" starttimestamp="1649721002230" timestamp="2612661" timestamp2="2612661">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="619" _type="InsertStringCommand" date="Mon Apr 11 20:33:34 EDT 2022" starttimestamp="1649721002230" timestamp="2612749" timestamp2="2612749">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="621" _type="InsertStringCommand" date="Mon Apr 11 20:33:35 EDT 2022" starttimestamp="1649721002230" timestamp="2612818" timestamp2="2612818">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="623" _type="InsertStringCommand" date="Mon Apr 11 20:33:35 EDT 2022" starttimestamp="1649721002230" timestamp="2612999" timestamp2="2612999">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="625" _type="InsertStringCommand" date="Mon Apr 11 20:33:35 EDT 2022" starttimestamp="1649721002230" timestamp="2613540" timestamp2="2613540">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="627" _type="InsertStringCommand" date="Mon Apr 11 20:33:35 EDT 2022" starttimestamp="1649721002230" timestamp="2613689" timestamp2="2613689">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="629" _type="InsertStringCommand" date="Mon Apr 11 20:33:36 EDT 2022" starttimestamp="1649721002230" timestamp="2613882" timestamp2="2613882">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="631" _type="InsertStringCommand" date="Mon Apr 11 20:33:36 EDT 2022" starttimestamp="1649721002230" timestamp="2614030" timestamp2="2614030">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="633" _type="InsertStringCommand" date="Mon Apr 11 20:33:36 EDT 2022" starttimestamp="1649721002230" timestamp="2614119" timestamp2="2614119">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="635" _type="InsertStringCommand" date="Mon Apr 11 20:33:36 EDT 2022" starttimestamp="1649721002230" timestamp="2614382" timestamp2="2614382">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="637" _type="InsertStringCommand" date="Mon Apr 11 20:33:36 EDT 2022" starttimestamp="1649721002230" timestamp="2614495" timestamp2="2614495">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="639" _type="InsertStringCommand" date="Mon Apr 11 20:33:36 EDT 2022" starttimestamp="1649721002230" timestamp="2614559" timestamp2="2614559">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="641" _type="PauseCommand" date="Mon Apr 11 20:33:38 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2616531">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1972]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="640" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:33:38 EDT 2022" starttimestamp="1649721002230" timestamp="2616531" />
  <Command __id="642" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:33:38 EDT 2022" starttimestamp="1649721002230" timestamp="2616670" />
  <Command __id="643" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:33:38 EDT 2022" starttimestamp="1649721002230" timestamp="2616710" />
  <Command __id="603" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:33:30 EDT 2022" docASTNodeCount="27" docActiveCodeLength="207" docExpressionCount="21" docLength="207" projectName="A6" starttimestamp="1649721002230" timestamp="2608139">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})¶public interface ReadThreadInterface {¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="608" _type="Insert" date="Mon Apr 11 20:33:34 EDT 2022" docASTNodeCount="29" docActiveCodeLength="223" docExpressionCount="22" docLength="223" length="16" offset="199" repeat="16" starttimestamp="1649721002230" timestamp="2611923" timestamp2="2614556">
    <text><![CDATA[extends Runnable]]></text>
  </DocumentChange>
  <Command __id="645" _type="PauseCommand" date="Mon Apr 11 20:33:42 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2620298">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3588]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="646" _type="MoveCaretCommand" caretOffset="219" date="Mon Apr 11 20:33:42 EDT 2022" docOffset="219" starttimestamp="1649721002230" timestamp="2620372" />
  <Command __id="648" _type="PauseCommand" date="Mon Apr 11 20:33:46 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2624371">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3999]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="647" _type="ShellCommand" date="Mon Apr 11 20:33:46 EDT 2022" starttimestamp="1649721002230" timestamp="2624371" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="649" _type="ShellCommand" date="Mon Apr 11 20:33:46 EDT 2022" starttimestamp="1649721002230" timestamp="2624482" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="655" _type="PauseCommand" date="Mon Apr 11 20:33:48 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2626761">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2216]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="654" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:33:48 EDT 2022" starttimestamp="1649721002230" timestamp="2626761" />
  <Command __id="656" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:33:49 EDT 2022" starttimestamp="1649721002230" timestamp="2626899" />
  <Command __id="657" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:33:49 EDT 2022" starttimestamp="1649721002230" timestamp="2626917" />
  <Command __id="659" _type="SelectTextCommand" caretOffset="23" date="Mon Apr 11 20:33:50 EDT 2022" end="157" start="23" starttimestamp="1649721002230" timestamp="2627996" />
  <Command __id="661" _type="PauseCommand" date="Mon Apr 11 20:33:52 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2630334">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2338]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="670" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:34:08 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="2646220" type="Run" />
  <Command __id="672" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:34:08 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="2646221" type="Run" />
  <Command __id="674" _type="PauseCommand" date="Mon Apr 11 20:34:10 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2648504">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2282]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="673" _type="ShellCommand" date="Mon Apr 11 20:34:10 EDT 2022" starttimestamp="1649721002230" timestamp="2648503" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="676" _type="PauseCommand" date="Mon Apr 11 20:34:13 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2651020">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2517]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="675" _type="ConsoleOutput" date="Mon Apr 11 20:34:13 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="2651020" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 20:34:13 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOServerMetaStateBroadcast did not pass completely:In Server enabling NIO, no l"), Diff(INSERT,"Building symbol table and runn"), Diff(EQUAL,"in"), Diff(DELETE,"e"), Diff(INSERT,"g"), Diff(EQUAL," f"), Diff(DELETE,"ound matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶¶Test execution time (ms):513"), Diff(INSERT,"irst pass checks:Mon Apr 11 20:34:13 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="678" _type="PauseCommand" date="Mon Apr 11 20:34:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2653008">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1988]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="677" _type="ConsoleOutput" date="Mon Apr 11 20:34:15 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="2653008" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:84
Running second pass checks Mon Apr 11 20:34:15 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 20:34:15 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 20:34:15 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:84¶Running second pass checks Mon Apr 11 20:34:15 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 20:34:15 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Apr 11 20:34:1"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="679" _type="ConsoleOutput" date="Mon Apr 11 20:34:16 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="2653952" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 20:34:16 EDT 2022
Generating checks:Mon Apr 11 20:34:16 EDT 2022
Finished Generating checks:Mon Apr 11 20:34:16 EDT 2022
Generating externals:Mon Apr 11 20:34:16 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:84¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 20:34:1"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 11 20:34:16 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 11 20:34:1"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 20:34:1"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="680" _type="ConsoleOutput" date="Mon Apr 11 20:34:16 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="2654287" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 20:34:16 EDT 2022
Unmatched tags:[ @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO]
Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]
A6TaggedClassesDefined did not pass completely:Only 10.0 matched out of 14.0 tags.
 See console text%0.7142857142857143

Test execution time (ms):3286
A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5

Test execution time (ms):19

A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.0
Test execution time (ms):15
A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.5

Test execution time (ms):17
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 20:34:16 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 20:34:16 EDT 2022¶Finished Generating checks:Mon Apr 11 20:34:16 EDT 2022¶Generating externals:Mon Apr 11 20:34:16 EDT 2022"), Diff(INSERT,"Unmatched tags:[ @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO]¶Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]¶A6TaggedClassesDefined did not pass completely:Only 10.0 matched out of 14.0 tags.¶ See console text%0.7142857142857143¶¶Test execution time (ms):3286¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):19¶¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.0¶Test execution time (ms):15¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):17"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="681" _type="ConsoleOutput" date="Mon Apr 11 20:34:16 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="2654459" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (282)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (30)
  |~ ClientRemoteInterfaceRMI.java (26)
  |~ ClientRemoteObject.java (276)
 |- readThread (3)
  |~ ClientReadThread.java (16)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (16)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (326)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (40)
   |~ ServerRemoteInterfaceRMI.java (34)
   |~ ServerRemoteObjectGIPC.java (314)
   |~ ServerRemoteObjectRMI.java (238)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (9)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 20:34:16 EDT 2022¶Unmatched tags:[ @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO]¶Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]¶A6TaggedClassesDefined did not pass completely:Only 10.0 matched out of 14.0 tags.¶ See console text%0.7142857142857143¶¶Test execution time (ms):3286¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):19¶¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.0¶Test execution time (ms):15¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):17"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- readThread (3)¶  |~ ClientReadThread.java (16)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (16)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="683" _type="PauseCommand" date="Mon Apr 11 20:34:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2657240">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2781]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="682" _type="ConsoleOutput" date="Mon Apr 11 20:34:19 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="2657240" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@484fcec7 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- readThread (3)¶  |~ ClientReadThread.java (16)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (16)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@484fcec7 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="685" _type="PauseCommand" date="Mon Apr 11 20:34:20 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2658611">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1371]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="684" _type="ConsoleOutput" date="Mon Apr 11 20:34:20 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="2658611" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@484fcec7 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@484fcec7 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="687" _type="PauseCommand" date="Mon Apr 11 20:34:22 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2660183">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1572]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="686" _type="ConsoleOutput" date="Mon Apr 11 20:34:22 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="2660183" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@482c34ca . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6"), Diff(DELETE,"TaggedClassesDefined@484fcec7"), Diff(INSERT,"ExpectedInterfaces@482c34ca"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="689" _type="PauseCommand" date="Mon Apr 11 20:34:29 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2667631">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7447]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="688" _type="ShellCommand" date="Mon Apr 11 20:34:29 EDT 2022" starttimestamp="1649721002230" timestamp="2667630" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="691" _type="PauseCommand" date="Mon Apr 11 20:35:34 EDT 2022" range="1m-2m" starttimestamp="1649721002230" timestamp="2732493">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[64863]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="690" _type="ShellCommand" date="Mon Apr 11 20:35:34 EDT 2022" starttimestamp="1649721002230" timestamp="2732493" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="693" _type="PauseCommand" date="Mon Apr 11 20:36:09 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="2767757">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[35264]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="692" _type="ShellCommand" date="Mon Apr 11 20:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="2767757" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="644" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:33:42 EDT 2022" docASTNodeCount="29" docActiveCodeLength="227" docExpressionCount="22" docLength="227" projectName="A6" starttimestamp="1649721002230" timestamp="2620298">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶"), Diff(DELETE,"public class ClientReadThread "), Diff(INSERT,"import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})¶public class ClientReadThread implements ReadThreadInterface"), Diff(EQUAL,"{¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})
public class ClientReadThread implements ReadThreadInterface{

}
]]></snapshot>
  </Command>
  <DocumentChange __id="650" _type="Insert" date="Mon Apr 11 20:33:46 EDT 2022" docASTNodeCount="36" docActiveCodeLength="275" docExpressionCount="25" docLength="309" length="82" offset="220" repeat="4" starttimestamp="1649721002230" timestamp="2624545" timestamp2="2624548">
    <text><![CDATA[

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="658" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:33:50 EDT 2022" docASTNodeCount="29" docActiveCodeLength="227" docExpressionCount="22" docLength="227" projectName="A6" starttimestamp="1649721002230" timestamp="2627824">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="663" _type="Insert" date="Mon Apr 11 20:33:52 EDT 2022" docASTNodeCount="36" docActiveCodeLength="275" docExpressionCount="25" docLength="309" length="82" offset="220" repeat="4" starttimestamp="1649721002230" timestamp="2630443" timestamp2="2630446">
    <text><![CDATA[

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="695" _type="PauseCommand" date="Mon Apr 11 20:36:37 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="2794915">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[27158]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="694" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:36:37 EDT 2022" docASTNodeCount="36" docActiveCodeLength="275" docExpressionCount="25" docLength="309" projectName="A6" starttimestamp="1649721002230" timestamp="2794915">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶"), Diff(INSERT,"	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="696" _type="MoveCaretCommand" caretOffset="190" date="Mon Apr 11 20:36:37 EDT 2022" docOffset="190" starttimestamp="1649721002230" timestamp="2795016" />
  <Command __id="697" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 20:36:37 EDT 2022" starttimestamp="1649721002230" timestamp="2795694" />
  <Command __id="699" _type="InsertStringCommand" date="Mon Apr 11 20:36:38 EDT 2022" starttimestamp="1649721002230" timestamp="2796449" timestamp2="2796449">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="701" _type="InsertStringCommand" date="Mon Apr 11 20:36:38 EDT 2022" starttimestamp="1649721002230" timestamp="2796723" timestamp2="2796723">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="703" _type="InsertStringCommand" date="Mon Apr 11 20:36:39 EDT 2022" starttimestamp="1649721002230" timestamp="2797006" timestamp2="2797006">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="705" _type="InsertStringCommand" date="Mon Apr 11 20:36:39 EDT 2022" starttimestamp="1649721002230" timestamp="2797138" timestamp2="2797138">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="707" _type="InsertStringCommand" date="Mon Apr 11 20:36:39 EDT 2022" starttimestamp="1649721002230" timestamp="2797296" timestamp2="2797296">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="709" _type="InsertStringCommand" date="Mon Apr 11 20:36:39 EDT 2022" starttimestamp="1649721002230" timestamp="2797369" timestamp2="2797369">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="711" _type="InsertStringCommand" date="Mon Apr 11 20:36:39 EDT 2022" starttimestamp="1649721002230" timestamp="2797450" timestamp2="2797450">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="713" _type="InsertStringCommand" date="Mon Apr 11 20:36:39 EDT 2022" starttimestamp="1649721002230" timestamp="2797641" timestamp2="2797641">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="715" _type="PauseCommand" date="Mon Apr 11 20:36:41 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2799257">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1616]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="714" _type="MoveCaretCommand" caretOffset="197" date="Mon Apr 11 20:36:41 EDT 2022" docOffset="197" starttimestamp="1649721002230" timestamp="2799257" />
  <Command __id="717" _type="PauseCommand" date="Mon Apr 11 20:36:42 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2800577">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1320]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="716" _type="MoveCaretCommand" caretOffset="196" date="Mon Apr 11 20:36:42 EDT 2022" docOffset="196" starttimestamp="1649721002230" timestamp="2800577" />
  <Command __id="719" _type="InsertStringCommand" date="Mon Apr 11 20:36:43 EDT 2022" starttimestamp="1649721002230" timestamp="2801364" timestamp2="2801364">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="721" _type="PasteCommand" date="Mon Apr 11 20:36:43 EDT 2022" starttimestamp="1649721002230" timestamp="2801603" />
  <Command __id="723" _type="PauseCommand" date="Mon Apr 11 20:36:45 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2802861">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1258]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="726" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:36:46 EDT 2022" starttimestamp="1649721002230" timestamp="2803996" />
  <Command __id="728" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:36:46 EDT 2022" starttimestamp="1649721002230" timestamp="2804001" />
  <Command __id="730" _type="PauseCommand" date="Mon Apr 11 20:37:03 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="2821117">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[17116]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="729" _type="ShellCommand" date="Mon Apr 11 20:37:03 EDT 2022" starttimestamp="1649721002230" timestamp="2821117" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="732" _type="PauseCommand" date="Mon Apr 11 20:37:12 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2830154">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9037]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="731" _type="ShellCommand" date="Mon Apr 11 20:37:12 EDT 2022" starttimestamp="1649721002230" timestamp="2830154" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="733" _type="MoveCaretCommand" caretOffset="87" date="Mon Apr 11 20:37:12 EDT 2022" docOffset="87" starttimestamp="1649721002230" timestamp="2830225" />
  <Command __id="735" _type="InsertStringCommand" date="Mon Apr 11 20:37:12 EDT 2022" starttimestamp="1649721002230" timestamp="2830513" timestamp2="2830513">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="737" _type="PasteCommand" date="Mon Apr 11 20:37:13 EDT 2022" starttimestamp="1649721002230" timestamp="2830846" />
  <Command __id="738" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:37:13 EDT 2022" starttimestamp="1649721002230" timestamp="2831551" />
  <Command __id="739" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:37:13 EDT 2022" starttimestamp="1649721002230" timestamp="2831689" />
  <Command __id="740" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:37:13 EDT 2022" starttimestamp="1649721002230" timestamp="2831717" />
  <Command __id="741" _type="ShellCommand" date="Mon Apr 11 20:37:14 EDT 2022" starttimestamp="1649721002230" timestamp="2831830" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="743" _type="PauseCommand" date="Mon Apr 11 20:37:16 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2834212">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2382]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="742" _type="ShellCommand" date="Mon Apr 11 20:37:16 EDT 2022" starttimestamp="1649721002230" timestamp="2834212" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="698" _type="Insert" date="Mon Apr 11 20:36:38 EDT 2022" docASTNodeCount="34" docActiveCodeLength="283" docExpressionCount="24" docLength="317" length="8" offset="189" repeat="8" starttimestamp="1649721002230" timestamp="2796443" timestamp2="2797634">
    <text><![CDATA[extends ]]></text>
  </DocumentChange>
  <DocumentChange __id="718" _type="Insert" date="Mon Apr 11 20:36:43 EDT 2022" docASTNodeCount="38" docActiveCodeLength="309" docExpressionCount="26" docLength="343" length="26" offset="196" repeat="2" starttimestamp="1649721002230" timestamp="2801356" timestamp2="2801598">
    <text><![CDATA[ SocketChannelReadListener]]></text>
  </DocumentChange>
  <DocumentChange __id="734" _type="Insert" date="Mon Apr 11 20:37:12 EDT 2022" docASTNodeCount="48" docActiveCodeLength="376" docExpressionCount="35" docLength="410" length="67" offset="87" repeat="2" starttimestamp="1649721002230" timestamp="2830507" timestamp2="2830839">
    <text><![CDATA[
import inputport.nio.manager.listeners.SocketChannelReadListener;]]></text>
  </DocumentChange>
  <Command __id="745" _type="PauseCommand" date="Mon Apr 11 20:37:30 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="2848095">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13883]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="744" _type="Delete" date="Mon Apr 11 20:37:30 EDT 2022" docASTNodeCount="38" docActiveCodeLength="309" docExpressionCount="26" docLength="343" endLine="4" length="67" offset="87" repeat="2" startLine="3" starttimestamp="1649721002230" timestamp="2848095" timestamp2="2849244">
    <text><![CDATA[
import inputport.nio.manager.listeners.SocketChannelReadListener;]]></text>
  </DocumentChange>
  <Command __id="746" _type="UndoCommand" date="Mon Apr 11 20:37:30 EDT 2022" starttimestamp="1649721002230" timestamp="2848106" />
  <Command __id="749" _type="PauseCommand" date="Mon Apr 11 20:37:31 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2849251">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1145]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[UndoCommand]]></next>
  </Command>
  <Command __id="748" _type="UndoCommand" date="Mon Apr 11 20:37:31 EDT 2022" starttimestamp="1649721002230" timestamp="2849251" />
  <Command __id="751" _type="UndoCommand" date="Mon Apr 11 20:37:31 EDT 2022" starttimestamp="1649721002230" timestamp="2849671" />
  <Command __id="754" _type="PauseCommand" date="Mon Apr 11 20:37:33 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2850993">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1322]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="753" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:33 EDT 2022" starttimestamp="1649721002230" timestamp="2850993" />
  <Command __id="756" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:33 EDT 2022" starttimestamp="1649721002230" timestamp="2851519" />
  <Command __id="758" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:33 EDT 2022" starttimestamp="1649721002230" timestamp="2851680" />
  <Command __id="760" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:34 EDT 2022" starttimestamp="1649721002230" timestamp="2851844" />
  <Command __id="762" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:34 EDT 2022" starttimestamp="1649721002230" timestamp="2851995" />
  <Command __id="764" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:34 EDT 2022" starttimestamp="1649721002230" timestamp="2852157" />
  <Command __id="766" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:34 EDT 2022" starttimestamp="1649721002230" timestamp="2852625" />
  <Command __id="768" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:35 EDT 2022" starttimestamp="1649721002230" timestamp="2852776" />
  <Command __id="770" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:35 EDT 2022" starttimestamp="1649721002230" timestamp="2853131" />
  <Command __id="771" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:37:35 EDT 2022" starttimestamp="1649721002230" timestamp="2853692" />
  <Command __id="772" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:37:36 EDT 2022" starttimestamp="1649721002230" timestamp="2853832" />
  <Command __id="773" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:37:36 EDT 2022" starttimestamp="1649721002230" timestamp="2853851" />
  <DocumentChange __id="750" _type="Delete" date="Mon Apr 11 20:37:31 EDT 2022" docASTNodeCount="36" docActiveCodeLength="275" docExpressionCount="25" docLength="309" endLine="7" length="34" offset="188" repeat="10" startLine="7" starttimestamp="1649721002230" timestamp="2849663" timestamp2="2853128">
    <text><![CDATA[ extends SocketChannelReadListener]]></text>
  </DocumentChange>
  <Command __id="775" _type="PauseCommand" date="Mon Apr 11 20:37:38 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2856568">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2717]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="776" _type="MoveCaretCommand" caretOffset="215" date="Mon Apr 11 20:37:38 EDT 2022" docOffset="215" starttimestamp="1649721002230" timestamp="2856665" />
  <Command __id="774" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:37:38 EDT 2022" docASTNodeCount="29" docActiveCodeLength="223" docExpressionCount="22" docLength="223" projectName="A6" starttimestamp="1649721002230" timestamp="2856568">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})¶public interface ReadThreadInterface "), Diff(INSERT,"extends Runnable"), Diff(EQUAL,"{¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})
public interface ReadThreadInterface extends Runnable{

}
]]></snapshot>
  </Command>
  <Command __id="778" _type="PauseCommand" date="Mon Apr 11 20:37:46 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2863994">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7329]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="779" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:46 EDT 2022" starttimestamp="1649721002230" timestamp="2864003" />
  <Command __id="781" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:46 EDT 2022" starttimestamp="1649721002230" timestamp="2864504" />
  <Command __id="783" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:46 EDT 2022" starttimestamp="1649721002230" timestamp="2864535" />
  <Command __id="785" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:46 EDT 2022" starttimestamp="1649721002230" timestamp="2864563" />
  <Command __id="787" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:46 EDT 2022" starttimestamp="1649721002230" timestamp="2864594" />
  <Command __id="789" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:46 EDT 2022" starttimestamp="1649721002230" timestamp="2864623" />
  <Command __id="791" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:46 EDT 2022" starttimestamp="1649721002230" timestamp="2864655" />
  <Command __id="793" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:46 EDT 2022" starttimestamp="1649721002230" timestamp="2864684" />
  <Command __id="795" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:46 EDT 2022" starttimestamp="1649721002230" timestamp="2864714" />
  <Command __id="797" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:47 EDT 2022" starttimestamp="1649721002230" timestamp="2864849" />
  <Command __id="799" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:47 EDT 2022" starttimestamp="1649721002230" timestamp="2865035" />
  <Command __id="801" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:47 EDT 2022" starttimestamp="1649721002230" timestamp="2865193" />
  <Command __id="803" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:47 EDT 2022" starttimestamp="1649721002230" timestamp="2865362" />
  <Command __id="805" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:47 EDT 2022" starttimestamp="1649721002230" timestamp="2865520" />
  <Command __id="807" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:47 EDT 2022" starttimestamp="1649721002230" timestamp="2865669" />
  <Command __id="809" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:37:48 EDT 2022" starttimestamp="1649721002230" timestamp="2866118" />
  <DocumentChange __id="777" _type="Delete" date="Mon Apr 11 20:37:46 EDT 2022" docASTNodeCount="27" docActiveCodeLength="207" docExpressionCount="21" docLength="207" endLine="7" length="16" offset="199" repeat="16" startLine="7" starttimestamp="1649721002230" timestamp="2863994" timestamp2="2866116">
    <text><![CDATA[extends Runnable]]></text>
  </DocumentChange>
  <Command __id="811" _type="PauseCommand" date="Mon Apr 11 20:37:50 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2868138">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2019]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="812" _type="InsertStringCommand" date="Mon Apr 11 20:37:50 EDT 2022" starttimestamp="1649721002230" timestamp="2868144" timestamp2="2868144">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="814" _type="InsertStringCommand" date="Mon Apr 11 20:37:50 EDT 2022" starttimestamp="1649721002230" timestamp="2868360" timestamp2="2868360">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="816" _type="InsertStringCommand" date="Mon Apr 11 20:37:50 EDT 2022" starttimestamp="1649721002230" timestamp="2868600" timestamp2="2868600">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="818" _type="InsertStringCommand" date="Mon Apr 11 20:37:50 EDT 2022" starttimestamp="1649721002230" timestamp="2868673" timestamp2="2868673">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="820" _type="InsertStringCommand" date="Mon Apr 11 20:37:51 EDT 2022" starttimestamp="1649721002230" timestamp="2868851" timestamp2="2868851">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="822" _type="InsertStringCommand" date="Mon Apr 11 20:37:51 EDT 2022" starttimestamp="1649721002230" timestamp="2868924" timestamp2="2868924">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="824" _type="InsertStringCommand" date="Mon Apr 11 20:37:51 EDT 2022" starttimestamp="1649721002230" timestamp="2868951" timestamp2="2868951">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="826" _type="InsertStringCommand" date="Mon Apr 11 20:37:51 EDT 2022" starttimestamp="1649721002230" timestamp="2869114" timestamp2="2869114">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="828" _type="PauseCommand" date="Mon Apr 11 20:37:57 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="2875561">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6447]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="827" _type="CopyCommand" date="Mon Apr 11 20:37:57 EDT 2022" starttimestamp="1649721002230" timestamp="2875561" />
  <Command __id="830" _type="PauseCommand" date="Mon Apr 11 20:37:59 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2876945">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1384]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="829" _type="MoveCaretCommand" caretOffset="207" date="Mon Apr 11 20:37:59 EDT 2022" docOffset="207" starttimestamp="1649721002230" timestamp="2876945" />
  <Command __id="832" _type="PasteCommand" date="Mon Apr 11 20:37:59 EDT 2022" starttimestamp="1649721002230" timestamp="2877108" />
  <Command __id="834" _type="PauseCommand" date="Mon Apr 11 20:38:03 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2881499">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4391]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="833" _type="CopyCommand" date="Mon Apr 11 20:38:03 EDT 2022" starttimestamp="1649721002230" timestamp="2881499" />
  <Command __id="836" _type="PauseCommand" date="Mon Apr 11 20:38:05 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2883229">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1730]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="835" _type="MoveCaretCommand" caretOffset="89" date="Mon Apr 11 20:38:05 EDT 2022" docOffset="89" starttimestamp="1649721002230" timestamp="2883229" />
  <Command __id="838" _type="InsertStringCommand" date="Mon Apr 11 20:38:05 EDT 2022" starttimestamp="1649721002230" timestamp="2883768" timestamp2="2883768">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="840" _type="InsertStringCommand" date="Mon Apr 11 20:38:06 EDT 2022" starttimestamp="1649721002230" timestamp="2883960" timestamp2="2883960">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="842" _type="InsertStringCommand" date="Mon Apr 11 20:38:06 EDT 2022" starttimestamp="1649721002230" timestamp="2884063" timestamp2="2884063">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="844" _type="InsertStringCommand" date="Mon Apr 11 20:38:06 EDT 2022" starttimestamp="1649721002230" timestamp="2884131" timestamp2="2884131">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="846" _type="InsertStringCommand" date="Mon Apr 11 20:38:06 EDT 2022" starttimestamp="1649721002230" timestamp="2884246" timestamp2="2884246">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="848" _type="InsertStringCommand" date="Mon Apr 11 20:38:06 EDT 2022" starttimestamp="1649721002230" timestamp="2884441" timestamp2="2884441">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="850" _type="InsertStringCommand" date="Mon Apr 11 20:38:06 EDT 2022" starttimestamp="1649721002230" timestamp="2884568" timestamp2="2884568">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="852" _type="PauseCommand" date="Mon Apr 11 20:38:08 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2885812">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1244]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="851" _type="MoveCaretCommand" caretOffset="96" date="Mon Apr 11 20:38:08 EDT 2022" docOffset="96" starttimestamp="1649721002230" timestamp="2885812" />
  <Command __id="854" _type="PauseCommand" date="Mon Apr 11 20:38:09 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2887262">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1450]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="853" _type="MoveCaretCommand" caretOffset="96" date="Mon Apr 11 20:38:09 EDT 2022" docOffset="96" starttimestamp="1649721002230" timestamp="2887262" />
  <Command __id="856" _type="PasteCommand" date="Mon Apr 11 20:38:10 EDT 2022" starttimestamp="1649721002230" timestamp="2887853" />
  <Command __id="858" _type="InsertStringCommand" date="Mon Apr 11 20:38:10 EDT 2022" starttimestamp="1649721002230" timestamp="2888139" timestamp2="2888139">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="859" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:38:11 EDT 2022" starttimestamp="1649721002230" timestamp="2889108" />
  <Command __id="860" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:38:11 EDT 2022" starttimestamp="1649721002230" timestamp="2889249" />
  <Command __id="861" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:38:11 EDT 2022" starttimestamp="1649721002230" timestamp="2889276" />
  <DocumentChange __id="810" _type="Insert" date="Mon Apr 11 20:37:50 EDT 2022" docASTNodeCount="27" docActiveCodeLength="215" docExpressionCount="21" docLength="215" length="8" offset="199" repeat="8" starttimestamp="1649721002230" timestamp="2868137" timestamp2="2869109">
    <text><![CDATA[extends ]]></text>
  </DocumentChange>
  <DocumentChange __id="831" _type="Insert" date="Mon Apr 11 20:37:59 EDT 2022" docASTNodeCount="29" docActiveCodeLength="240" docExpressionCount="22" docLength="240" length="25" offset="207" starttimestamp="1649721002230" timestamp="2877105">
    <text><![CDATA[SocketChannelReadListener]]></text>
  </DocumentChange>
  <DocumentChange __id="837" _type="Insert" date="Mon Apr 11 20:38:05 EDT 2022" docASTNodeCount="20" docActiveCodeLength="247" docExpressionCount="13" docLength="247" length="7" offset="89" repeat="7" starttimestamp="1649721002230" timestamp="2883764" timestamp2="2884564">
    <text><![CDATA[import ]]></text>
  </DocumentChange>
  <DocumentChange __id="855" _type="Insert" date="Mon Apr 11 20:38:10 EDT 2022" docASTNodeCount="39" docActiveCodeLength="305" docExpressionCount="31" docLength="305" length="58" offset="96" repeat="2" starttimestamp="1649721002230" timestamp="2887848" timestamp2="2888135">
    <text><![CDATA[inputport.nio.manager.listeners.SocketChannelReadListener;]]></text>
  </DocumentChange>
  <Command __id="863" _type="PauseCommand" date="Mon Apr 11 20:38:16 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2894186">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4910]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="864" _type="MoveCaretCommand" caretOffset="188" date="Mon Apr 11 20:38:16 EDT 2022" docOffset="188" starttimestamp="1649721002230" timestamp="2894263" />
  <Command __id="862" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:38:16 EDT 2022" docASTNodeCount="36" docActiveCodeLength="275" docExpressionCount="25" docLength="309" projectName="A6" starttimestamp="1649721002230" timestamp="2894186">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="866" _type="PauseCommand" date="Mon Apr 11 20:38:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2897195">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2932]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="865" _type="Insert" date="Mon Apr 11 20:38:19 EDT 2022" docASTNodeCount="38" docActiveCodeLength="288" docExpressionCount="26" docLength="322" length="13" offset="188" repeat="13" starttimestamp="1649721002230" timestamp="2897195" timestamp2="2899248">
    <text><![CDATA[ extends Runa]]></text>
  </DocumentChange>
  <Command __id="867" _type="InsertStringCommand" date="Mon Apr 11 20:38:19 EDT 2022" starttimestamp="1649721002230" timestamp="2897202" timestamp2="2897202">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="869" _type="InsertStringCommand" date="Mon Apr 11 20:38:19 EDT 2022" starttimestamp="1649721002230" timestamp="2897365" timestamp2="2897365">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="871" _type="InsertStringCommand" date="Mon Apr 11 20:38:19 EDT 2022" starttimestamp="1649721002230" timestamp="2897645" timestamp2="2897645">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="873" _type="InsertStringCommand" date="Mon Apr 11 20:38:20 EDT 2022" starttimestamp="1649721002230" timestamp="2897905" timestamp2="2897905">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="875" _type="InsertStringCommand" date="Mon Apr 11 20:38:20 EDT 2022" starttimestamp="1649721002230" timestamp="2897995" timestamp2="2897995">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="877" _type="InsertStringCommand" date="Mon Apr 11 20:38:20 EDT 2022" starttimestamp="1649721002230" timestamp="2898182" timestamp2="2898182">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="879" _type="InsertStringCommand" date="Mon Apr 11 20:38:20 EDT 2022" starttimestamp="1649721002230" timestamp="2898239" timestamp2="2898239">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="881" _type="InsertStringCommand" date="Mon Apr 11 20:38:20 EDT 2022" starttimestamp="1649721002230" timestamp="2898317" timestamp2="2898317">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="883" _type="InsertStringCommand" date="Mon Apr 11 20:38:20 EDT 2022" starttimestamp="1649721002230" timestamp="2898507" timestamp2="2898507">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="885" _type="InsertStringCommand" date="Mon Apr 11 20:38:20 EDT 2022" starttimestamp="1649721002230" timestamp="2898723" timestamp2="2898723">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="887" _type="InsertStringCommand" date="Mon Apr 11 20:38:21 EDT 2022" starttimestamp="1649721002230" timestamp="2898850" timestamp2="2898850">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="889" _type="InsertStringCommand" date="Mon Apr 11 20:38:21 EDT 2022" starttimestamp="1649721002230" timestamp="2899087" timestamp2="2899087">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="891" _type="InsertStringCommand" date="Mon Apr 11 20:38:21 EDT 2022" starttimestamp="1649721002230" timestamp="2899251" timestamp2="2899251">
    <data><![CDATA[a]]></data>
  </Command>
  <DocumentChange __id="892" _type="Delete" date="Mon Apr 11 20:38:21 EDT 2022" docASTNodeCount="38" docActiveCodeLength="287" docExpressionCount="26" docLength="321" endLine="7" length="1" offset="200" startLine="7" starttimestamp="1649721002230" timestamp="2899665">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <Command __id="893" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:38:21 EDT 2022" starttimestamp="1649721002230" timestamp="2899669" />
  <DocumentChange __id="894" _type="Insert" date="Mon Apr 11 20:38:22 EDT 2022" docASTNodeCount="38" docActiveCodeLength="288" docExpressionCount="26" docLength="322" length="1" offset="200" starttimestamp="1649721002230" timestamp="2899855">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <Command __id="895" _type="InsertStringCommand" date="Mon Apr 11 20:38:22 EDT 2022" starttimestamp="1649721002230" timestamp="2899864" timestamp2="2899864">
    <data><![CDATA[a]]></data>
  </Command>
  <DocumentChange __id="896" _type="Delete" date="Mon Apr 11 20:38:22 EDT 2022" docASTNodeCount="38" docActiveCodeLength="287" docExpressionCount="26" docLength="321" endLine="7" length="1" offset="200" startLine="7" starttimestamp="1649721002230" timestamp="2900188">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <Command __id="897" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:38:22 EDT 2022" starttimestamp="1649721002230" timestamp="2900192" />
  <Command __id="899" _type="InsertStringCommand" date="Mon Apr 11 20:38:22 EDT 2022" starttimestamp="1649721002230" timestamp="2900322" timestamp2="2900322">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="901" _type="InsertStringCommand" date="Mon Apr 11 20:38:22 EDT 2022" starttimestamp="1649721002230" timestamp="2900426" timestamp2="2900426">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="903" _type="InsertStringCommand" date="Mon Apr 11 20:38:22 EDT 2022" starttimestamp="1649721002230" timestamp="2900566" timestamp2="2900566">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="905" _type="InsertStringCommand" date="Mon Apr 11 20:38:22 EDT 2022" starttimestamp="1649721002230" timestamp="2900718" timestamp2="2900718">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="907" _type="InsertStringCommand" date="Mon Apr 11 20:38:23 EDT 2022" starttimestamp="1649721002230" timestamp="2900801" timestamp2="2900801">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="909" _type="PauseCommand" date="Mon Apr 11 20:38:24 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2902094">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1293]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="908" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:38:24 EDT 2022" starttimestamp="1649721002230" timestamp="2902094" />
  <Command __id="910" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:38:24 EDT 2022" starttimestamp="1649721002230" timestamp="2902184" />
  <Command __id="911" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:38:24 EDT 2022" starttimestamp="1649721002230" timestamp="2902215" />
  <Command __id="913" _type="PauseCommand" date="Mon Apr 11 20:38:40 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="2917991">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[15776]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="912" _type="SelectTextCommand" caretOffset="189" date="Mon Apr 11 20:38:40 EDT 2022" end="205" start="189" starttimestamp="1649721002230" timestamp="2917991" />
  <Command __id="915" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:38:40 EDT 2022" starttimestamp="1649721002230" timestamp="2918282" />
  <Command __id="917" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:38:41 EDT 2022" starttimestamp="1649721002230" timestamp="2918956" />
  <Command __id="919" _type="PauseCommand" date="Mon Apr 11 20:38:42 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2920019">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1063]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="918" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:38:42 EDT 2022" starttimestamp="1649721002230" timestamp="2920019" />
  <Command __id="920" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:38:42 EDT 2022" starttimestamp="1649721002230" timestamp="2920112" />
  <Command __id="921" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:38:42 EDT 2022" starttimestamp="1649721002230" timestamp="2920128" />
  <DocumentChange __id="898" _type="Insert" date="Mon Apr 11 20:38:22 EDT 2022" docASTNodeCount="38" docActiveCodeLength="292" docExpressionCount="26" docLength="326" length="5" offset="200" repeat="5" starttimestamp="1649721002230" timestamp="2900316" timestamp2="2900796">
    <text><![CDATA[nable]]></text>
  </DocumentChange>
  <DocumentChange __id="914" _type="Delete" date="Mon Apr 11 20:38:40 EDT 2022" docASTNodeCount="36" docActiveCodeLength="275" docExpressionCount="25" docLength="309" endLine="7" length="17" offset="188" repeat="2" startLine="7" starttimestamp="1649721002230" timestamp="2918274" timestamp2="2918953">
    <text><![CDATA[ extends Runnable]]></text>
  </DocumentChange>
  <Command __id="923" _type="PauseCommand" date="Mon Apr 11 20:38:43 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2921312">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1184]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="924" _type="MoveCaretCommand" caretOffset="154" date="Mon Apr 11 20:38:43 EDT 2022" docOffset="154" starttimestamp="1649721002230" timestamp="2921394" />
  <Command __id="926" _type="PauseCommand" date="Mon Apr 11 20:39:07 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="2944900">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23506]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="925" _type="MoveCaretCommand" caretOffset="297" date="Mon Apr 11 20:39:07 EDT 2022" docOffset="297" starttimestamp="1649721002230" timestamp="2944900" />
  <Command __id="928" _type="InsertStringCommand" date="Mon Apr 11 20:39:07 EDT 2022" starttimestamp="1649721002230" timestamp="2945566" timestamp2="2945566">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="930" _type="InsertStringCommand" date="Mon Apr 11 20:39:07 EDT 2022" starttimestamp="1649721002230" timestamp="2945724" timestamp2="2945724">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="932" _type="InsertStringCommand" date="Mon Apr 11 20:39:08 EDT 2022" starttimestamp="1649721002230" timestamp="2945984" timestamp2="2945984">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="934" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:39:08 EDT 2022" starttimestamp="1649721002230" timestamp="2946486" />
  <Command __id="936" _type="InsertStringCommand" date="Mon Apr 11 20:39:08 EDT 2022" starttimestamp="1649721002230" timestamp="2946685" timestamp2="2946685">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="938" _type="InsertStringCommand" date="Mon Apr 11 20:39:09 EDT 2022" starttimestamp="1649721002230" timestamp="2946861" timestamp2="2946861">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="940" _type="InsertStringCommand" date="Mon Apr 11 20:39:09 EDT 2022" starttimestamp="1649721002230" timestamp="2947082" timestamp2="2947082">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="942" _type="InsertStringCommand" date="Mon Apr 11 20:39:09 EDT 2022" starttimestamp="1649721002230" timestamp="2947224" timestamp2="2947224">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="944" _type="InsertStringCommand" date="Mon Apr 11 20:39:09 EDT 2022" starttimestamp="1649721002230" timestamp="2947347" timestamp2="2947347">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="946" _type="InsertStringCommand" date="Mon Apr 11 20:39:10 EDT 2022" starttimestamp="1649721002230" timestamp="2948129" timestamp2="2948129">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="948" _type="InsertStringCommand" date="Mon Apr 11 20:39:10 EDT 2022" starttimestamp="1649721002230" timestamp="2948276" timestamp2="2948276">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="950" _type="InsertStringCommand" date="Mon Apr 11 20:39:10 EDT 2022" starttimestamp="1649721002230" timestamp="2948382" timestamp2="2948382">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="952" _type="PauseCommand" date="Mon Apr 11 20:39:12 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2950116">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1734]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="963" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:39:31 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="2968865" />
  <Command __id="961" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:39:30 EDT 2022" docASTNodeCount="933" docActiveCodeLength="5965" docExpressionCount="525" docLength="8043" projectName="A2" starttimestamp="1649721002230" timestamp="2968749">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A2\src\comp533\salve\Slave.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.salve;¶¶import java.util.HashMap;¶import java.util.LinkedList;¶import java.util.List;¶import java.util.Map;¶import java.util.concurrent.BlockingQueue;¶¶import comp533.mvc.KeyValue;¶import comp533.mvc.KeyValueInterface;¶import comp533.mvc.ModelInterface;¶import comp533.mvc.ReducerFactory;¶import comp533.mvc.ReducerInterface;¶import comp533.partitioner.PartitionerFactory;¶import comp533.partitioner.PartitionerInterface;¶import gradingTools.comp533s19.assignment0.AMapReduceTracer;¶¶public class Slave extends AMapReduceTracer implements SlaveInterface {¶	final int number;¶	final int numThreads;¶	final ModelInterface slaveModel;¶	¶	LinkedList<KeyValueInterface<String, Integer>> reductionLinkedList;¶	private Map<String, Integer> result = new HashMap<String, Integer>();¶	private Map<String, Integer> keyToPartition = new HashMap<String, Integer>();¶¶¶	¶	public Slave(final int identifier, final ModelInterface model) {¶		number = identifier;¶		slaveModel = model;¶		numThreads = model.getNumThreads();¶	}¶¶	@Override¶	final public void run() {¶		System.out.println("RUN METHOD");¶¶		while (true) {¶			boolean loop = true;¶			¶			//TODO make wait a separate method¶			synchronized (this) {¶				try {¶					traceWait();¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			LinkedList<KeyValueInterface<String, Integer>> localList = new LinkedList<KeyValueInterface<String, Integer>>();¶			localList = block(slaveModel, localList, loop);¶			/*while (loop) {¶				final BlockingQueue<KeyValueInterface<String, Integer>> aKeyValueQueue = slaveModel.getKeyValueQueue();¶¶				KeyValueInterface<String, Integer> keyVal = null;¶¶				try {¶					traceDequeueRequest(aKeyValueQueue);¶					keyVal = aKeyValueQueue.take();¶					traceDequeue(keyVal);¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶					// continue;¶				}¶¶				// if keyVal is null, null need to stop consuming¶				if (keyVal.getKey() == null) {¶					loop = false;¶					continue;¶				}¶¶				localList.add(keyVal);¶¶			}*/¶			loop = false;¶¶			// partially reduce list¶¶			final ReducerInterface<String, Integer> reducer = ReducerFactory.getReducer();¶			result = reducer.reduce(localList);¶			localList.clear();¶			// this gets the correct partitions for each key¶		/*	final PartitionerInterface<String, Integer> partitioner = PartitionerFactory.getPartitioner();¶			for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶				final int partition = partitioner.getPartition(keyVal.getKey(), keyVal.getValue(), numThreads);¶				keyToPartition.put(keyVal.getKey(), partition);¶			}*/¶			keyToPartition.clear();¶			keyToPartition = partitionKeys(keyToPartition, result); ¶			// System.out.println("key to partition "+keyToPartition.toString());¶¶			// add partitally reduced keyValues to the ReducitonQueueList¶¶			List<LinkedList<KeyValueInterface<String, Integer>>> aReductionQueueList = slaveModel¶					.getReductionQueueList();¶			¶			aReductionQueueList = updateReductionQueueListWithPartitions(aReductionQueueList, keyToPartition);¶¶			keyToPartition.clear();¶¶			// wait for the other slaves to complete their splitting¶			slaveModel.getBarrier().barrier();¶			traceSplitAfterBarrier(number, aReductionQueueList);¶¶			// Need to do final reduction of this threads linkedList¶			synchronized (aReductionQueueList) {¶				final LinkedList<KeyValueInterface<String, Integer>> updatedLocalLinkedList = aReductionQueueList¶						.get(number);¶				result = reducer.reduce(updatedLocalLinkedList);¶				final LinkedList<KeyValueInterface<String, Integer>> finalLocalLinkedList = addKeyValToLocalLinkedList();¶¶				// for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶				// final KeyValueInterface<String, Integer> finalKeyVal = new KeyValue<String,¶				// Integer>();¶				// finalKeyVal.setKey(keyVal.getKey());¶				// finalKeyVal.setValue(keyVal.getValue());¶				// finalLocalLinkedList.add(finalKeyVal);¶				// }¶				// aReductionQueueList.set(number, finalLocalLinkedList);¶				aReductionQueueList.set(number, finalLocalLinkedList);¶			}¶¶			loop = true;¶			slaveModel.getJoiner().finished();¶			// System.out.println(aReductionQueueList.toString());¶¶			// System.out.println(slaveModel.getJoiner().getTotalFinished());¶			if (slaveModel.getJoiner().getTotalFinished() == numThreads) {¶				slaveModel.getJoiner().join();¶¶			}¶¶			synchronized (this) {¶				try {¶					traceWait();¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶				}¶			}¶			continue;¶		}¶¶	}¶¶	@Override¶	public synchronized void notifySlave() {¶		// TODO This should be when a line is read¶¶		traceNotify();¶		this.notify();¶	}¶¶	@Override¶	public String toString() {¶		return SLAVE;¶	}¶¶	@Override¶	public LinkedList<KeyValueInterface<String, Integer>> addKeyValToLocalLinkedList() {¶		final LinkedList<KeyValueInterface<String, Integer>> finalLocalLinkedList = new LinkedList<KeyValueInterface<String, Integer>>();¶¶		for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶			final KeyValueInterface<String, Integer> finalKeyVal = new KeyValue<String, Integer>();¶			finalKeyVal.setKey(keyVal.getKey());¶			finalKeyVal.setValue(keyVal.getValue());¶			finalLocalLinkedList.add(finalKeyVal);¶		}¶		return finalLocalLinkedList;¶	}¶	¶	@Override¶	public List<LinkedList<KeyValueInterface<String, Integer>>> updateReductionQueueListWithPartitions(final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueueList, final Map<String, Integer> aKeyToPartition){¶		for (Map.Entry<String, Integer> keyVal : aKeyToPartition.entrySet()) {¶			final String key = keyVal.getKey();¶			final Integer partition = keyVal.getValue();¶			final Integer val = result.get(key);¶¶			final KeyValueInterface<String, Integer> partialKeyVal = new KeyValue<String, Integer>();¶			partialKeyVal.setKey(key);¶			partialKeyVal.setValue(val);¶			final LinkedList<KeyValueInterface<String, Integer>> localLinkedList = reductionQueueList¶					.get(partition);¶			localLinkedList.add(partialKeyVal);¶			// aReductionQueueList.set(partition, localLinkedList);¶			synchronized (reductionQueueList) {¶				reductionQueueList.set(partition, localLinkedList);¶			}¶¶		}¶		¶		return reductionQueueList;¶	}¶¶	@Override¶	public Map<String, Integer> partitionKeys(final Map<String, Integer> aKeyToPartition, final Map<String, Integer> aResult) {¶		final PartitionerInterface<String, Integer> partitioner = PartitionerFactory.getPartitioner();¶		for (Map.Entry<String, Integer> keyVal : aResult.entrySet()) {¶			final int partition = partitioner.getPartition(keyVal.getKey(), keyVal.getValue(), numThreads);¶			aKeyToPartition.put(keyVal.getKey(), partition);¶		}¶		return aKeyToPartition;¶	}¶¶	@Override¶	public LinkedList<KeyValueInterface<String, Integer>> block(final ModelInterface aSlaveModel, final LinkedList<KeyValueInterface<String, Integer>> aLocalList, final boolean aLoop) {¶		boolean loopy = aLoop;¶		while (loopy) {¶			final BlockingQueue<KeyValueInterface<String, Integer>> aKeyValueQueue = aSlaveModel.getKeyValueQueue();¶¶			KeyValueInterface<String, Integer> keyVal = null;¶¶			try {¶				traceDequeueRequest(aKeyValueQueue);¶				keyVal = aKeyValueQueue.take();¶				traceDequeue(keyVal);¶			} catch (InterruptedException e) {¶				// TODO Auto-generated catch block¶				traceQuit();¶				e.printStackTrace();¶				// continue;¶			}¶¶			// if keyVal is null, null need to stop consuming¶			if (keyVal.getKey() == null) {¶				loopy = false;¶				continue;¶			}¶¶			aLocalList.add(keyVal);¶¶		}¶		return aLocalList;¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="965" _type="PauseCommand" date="Mon Apr 11 20:39:33 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2971121">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2256]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="966" _type="MoveCaretCommand" caretOffset="307" date="Mon Apr 11 20:39:33 EDT 2022" docOffset="307" starttimestamp="1649721002230" timestamp="2971193" />
  <Command __id="964" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:39:33 EDT 2022" docASTNodeCount="41" docActiveCodeLength="315" docExpressionCount="32" docLength="315" projectName="A6" starttimestamp="1649721002230" timestamp="2971121">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶¶@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})¶public interface ReadThreadInterface extends SocketChannelReadListener"), Diff(INSERT,", Runnable"), Diff(EQUAL,"{¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import util.annotations.Tags;
import util.tags.DistributedTags;
import inputport.nio.manager.listeners.SocketChannelReadListener;

@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})
public interface ReadThreadInterface extends SocketChannelReadListener, Runnable{

}
]]></snapshot>
  </Command>
  <Command __id="968" _type="PauseCommand" date="Mon Apr 11 20:39:36 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2974133">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2940]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="969" _type="MoveCaretCommand" caretOffset="188" date="Mon Apr 11 20:39:36 EDT 2022" docOffset="188" starttimestamp="1649721002230" timestamp="2974203" />
  <Command __id="971" _type="PauseCommand" date="Mon Apr 11 20:39:40 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2977920">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3717]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="970" _type="ShellCommand" date="Mon Apr 11 20:39:40 EDT 2022" starttimestamp="1649721002230" timestamp="2977920" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="972" _type="ShellCommand" date="Mon Apr 11 20:39:40 EDT 2022" starttimestamp="1649721002230" timestamp="2978014" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="982" _type="PauseCommand" date="Mon Apr 11 20:39:43 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2980915">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2823]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="981" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="2980915" />
  <Command __id="983" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="2981052" />
  <Command __id="984" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="2981082" />
  <Command __id="967" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:39:36 EDT 2022" docASTNodeCount="36" docActiveCodeLength="275" docExpressionCount="25" docLength="309" projectName="A6" starttimestamp="1649721002230" timestamp="2974133">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="973" _type="Insert" date="Mon Apr 11 20:39:40 EDT 2022" docASTNodeCount="54" docActiveCodeLength="382" docExpressionCount="33" docLength="450" length="141" offset="302" repeat="4" starttimestamp="1649721002230" timestamp="2978090" timestamp2="2978092">
    <text><![CDATA[

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="977" _type="Insert" date="Mon Apr 11 20:39:40 EDT 2022" docASTNodeCount="68" docActiveCodeLength="454" docExpressionCount="45" docLength="522" length="72" offset="23" repeat="4" starttimestamp="1649721002230" timestamp="2978092" timestamp2="2978094">
    <text><![CDATA[import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

]]></text>
  </DocumentChange>
  <Command __id="986" _type="PauseCommand" date="Mon Apr 11 20:39:44 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2982645">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1563]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="987" _type="MoveCaretCommand" caretOffset="219" date="Mon Apr 11 20:39:44 EDT 2022" docOffset="219" starttimestamp="1649721002230" timestamp="2982714" />
  <Command __id="989" _type="PauseCommand" date="Mon Apr 11 20:39:48 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2986060">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3346]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="988" _type="ShellCommand" date="Mon Apr 11 20:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="2986060" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="990" _type="ShellCommand" date="Mon Apr 11 20:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="2986144" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1000" _type="PauseCommand" date="Mon Apr 11 20:39:50 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="2987833">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1655]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1006" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:39:57 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="2995752" type="Run" />
  <Command __id="1008" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:39:57 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="2995752" type="Run" />
  <Command __id="1010" _type="PauseCommand" date="Mon Apr 11 20:40:00 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="2997979">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2227]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1009" _type="ShellCommand" date="Mon Apr 11 20:40:00 EDT 2022" starttimestamp="1649721002230" timestamp="2997979" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1012" _type="PauseCommand" date="Mon Apr 11 20:40:02 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3000231">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2252]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1011" _type="ConsoleOutput" date="Mon Apr 11 20:40:02 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3000231" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 20:40:02 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@482c34ca . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 20:40:02 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1014" _type="PauseCommand" date="Mon Apr 11 20:40:04 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3002261">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2030]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1013" _type="ConsoleOutput" date="Mon Apr 11 20:40:04 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3002261" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:91
Running second pass checks Mon Apr 11 20:40:04 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 20:40:04 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 20:40:04 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:91¶Running second pass checks Mon Apr 11 20:40:04 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 20:40:04 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Apr 11 20:40:0"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1015" _type="ConsoleOutput" date="Mon Apr 11 20:40:05 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3003183" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 20:40:05 EDT 2022
Generating checks:Mon Apr 11 20:40:05 EDT 2022
Finished Generating checks:Mon Apr 11 20:40:05 EDT 2022
Generating externals:Mon Apr 11 20:40:05 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:91¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 20:40:0"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 11 20:40:05 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 11 20:40:0"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 20:40:0"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1016" _type="ConsoleOutput" date="Mon Apr 11 20:40:05 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3003431" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 20:40:05 EDT 2022
Unmatched tags:[ @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO]
Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]
A6TaggedClassesDefined did not pass completely:Only 10.0 matched out of 14.0 tags.
 See console text%0.7142857142857143

Test execution time (ms):3283
Test execution time (ms):15
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 20:40:05 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 20:40:05 EDT 2022¶Finished Generating checks:Mon Apr 11 20:40:05 EDT 2022¶Generating externals:Mon Apr 11 20:40:05 EDT 2022"), Diff(INSERT,"Unmatched tags:[ @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO]¶Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]¶A6TaggedClassesDefined did not pass completely:Only 10.0 matched out of 14.0 tags.¶ See console text%0.7142857142857143¶¶Test execution time (ms):3283¶Test execution time (ms):15"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1017" _type="ConsoleOutput" date="Mon Apr 11 20:40:05 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3003490" type="ConsoleOutput">
    <outputString><![CDATA[
A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.0
Test execution time (ms):24
Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 20:40:05 EDT 2022¶Unmatched tags:[ @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO]¶Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]¶A6TaggedClassesDefined did not pass completely:Only 10.0 matched out of 14.0 tags.¶ See console text%0.7142857142857143¶"), Diff(INSERT,"¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.0"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"3283"), Diff(INSERT,"24"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"15"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1018" _type="ConsoleOutput" date="Mon Apr 11 20:40:05 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3003571" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (282)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (30)
  |~ ClientRemoteInterfaceRMI.java (26)
  |~ ClientRemoteObject.java (276)
 |- readThread (3)
  |~ ClientReadThread.java (25)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (25)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (326)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (40)
   |~ ServerRemoteInterfaceRMI.java (34)
   |~ ServerRemoteObjectGIPC.java (314)
   |~ ServerRemoteObjectRMI.java (238)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (9)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.0¶Test execution time (ms):24¶Test execution time (ms):9"), Diff(INSERT,"Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1020" _type="PauseCommand" date="Mon Apr 11 20:40:11 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3009284">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5713]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1019" _type="ConsoleOutput" date="Mon Apr 11 20:40:11 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3009284" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@6454b230 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@6454b230 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1022" _type="PauseCommand" date="Mon Apr 11 20:40:18 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3015841">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6557]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1021" _type="ShellCommand" date="Mon Apr 11 20:40:18 EDT 2022" starttimestamp="1649721002230" timestamp="3015841" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1024" _type="PauseCommand" date="Mon Apr 11 20:40:27 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3024827">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8986]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1023" _type="ShellCommand" date="Mon Apr 11 20:40:27 EDT 2022" starttimestamp="1649721002230" timestamp="3024827" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1026" _type="PauseCommand" date="Mon Apr 11 20:40:29 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3026899">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2072]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1025" _type="ConsoleOutput" date="Mon Apr 11 20:40:29 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3026899" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@6454b230 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@6454b230 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="1028" _type="PauseCommand" date="Mon Apr 11 20:40:33 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3031317">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4418]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1027" _type="ConsoleOutput" date="Mon Apr 11 20:40:33 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3031317" type="ConsoleOutput">
    <outputString><![CDATA[A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):3
Test execution time (ms):17
Test execution time (ms):12
Test execution time (ms):7
Test execution time (ms):10
Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@6454b230 . Results may change."), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):3¶Test execution time (ms):17¶Test execution time (ms):12¶Test execution time (ms):7¶Test execution time (ms):10¶Test execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1030" _type="PauseCommand" date="Mon Apr 11 20:40:37 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3035155">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3838]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1029" _type="ConsoleOutput" date="Mon Apr 11 20:40:37 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3035155" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@6454b230 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):3¶Test execution time (ms):17¶Test execution time (ms):12¶Test execution time (ms):7¶Test execution time (ms):10¶Test execution time (ms):6"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@6454b230 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1032" _type="PauseCommand" date="Mon Apr 11 20:40:40 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3037858">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2703]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1031" _type="ShellCommand" date="Mon Apr 11 20:40:40 EDT 2022" starttimestamp="1649721002230" timestamp="3037858" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1034" _type="PauseCommand" date="Mon Apr 11 20:40:58 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="3056734">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[18876]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1033" _type="ShellCommand" date="Mon Apr 11 20:40:58 EDT 2022" starttimestamp="1649721002230" timestamp="3056734" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1036" _type="PauseCommand" date="Mon Apr 11 20:41:32 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="3090052">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[33318]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1035" _type="ShellCommand" date="Mon Apr 11 20:41:32 EDT 2022" starttimestamp="1649721002230" timestamp="3090052" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1038" _type="MoveCaretCommand" caretOffset="146" date="Mon Apr 11 20:41:32 EDT 2022" docOffset="181" starttimestamp="1649721002230" timestamp="3090529" />
  <Command __id="985" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:39:44 EDT 2022" docASTNodeCount="36" docActiveCodeLength="275" docExpressionCount="25" docLength="309" projectName="A6" starttimestamp="1649721002230" timestamp="2982645">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})¶public class ClientReadThread implements ReadThreadInterface{¶¶"), Diff(INSERT,"	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})
public class ClientReadThread implements ReadThreadInterface{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="991" _type="Insert" date="Mon Apr 11 20:39:48 EDT 2022" docASTNodeCount="54" docActiveCodeLength="382" docExpressionCount="33" docLength="450" length="141" offset="302" repeat="4" starttimestamp="1649721002230" timestamp="2986175" timestamp2="2986178">
    <text><![CDATA[

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="995" _type="Insert" date="Mon Apr 11 20:39:48 EDT 2022" docASTNodeCount="68" docActiveCodeLength="454" docExpressionCount="45" docLength="522" length="72" offset="23" repeat="4" starttimestamp="1649721002230" timestamp="2986178" timestamp2="2986180">
    <text><![CDATA[import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

]]></text>
  </DocumentChange>
  <Command __id="1037" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:41:32 EDT 2022" docASTNodeCount="71" docActiveCodeLength="440" docExpressionCount="43" docLength="463" projectName="A6" starttimestamp="1649721002230" timestamp="3090326">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\Client.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC"), Diff(INSERT,", DistributedTags.NIO"), Diff(EQUAL," })¶public class Client {¶	public static void main(final String[] args) {¶		try {¶¶			// create client object¶			final ClientRemoteInterfaceRMI client = new ClientRemoteObject();¶¶			client.start(args);¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class Client {
	public static void main(final String[] args) {
		try {

			// create client object
			final ClientRemoteInterfaceRMI client = new ClientRemoteObject();

			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
]]></snapshot>
  </Command>
  <Command __id="1040" _type="PauseCommand" date="Mon Apr 11 20:41:44 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="3102556">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12027]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1042" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:41:46 EDT 2022" starttimestamp="1649721002230" timestamp="3104569" />
  <Command __id="1044" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:41:46 EDT 2022" starttimestamp="1649721002230" timestamp="3104573" />
  <Command __id="1046" _type="PauseCommand" date="Mon Apr 11 20:41:51 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3109564">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4991]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1045" _type="ShellCommand" date="Mon Apr 11 20:41:51 EDT 2022" starttimestamp="1649721002230" timestamp="3109564" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1048" _type="PauseCommand" date="Mon Apr 11 20:41:55 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3113470">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3906]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1047" _type="ShellCommand" date="Mon Apr 11 20:41:55 EDT 2022" starttimestamp="1649721002230" timestamp="3113470" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1049" _type="MoveCaretCommand" caretOffset="136" date="Mon Apr 11 20:41:55 EDT 2022" docOffset="566" starttimestamp="1649721002230" timestamp="3113576" />
  <Command __id="1051" _type="InsertStringCommand" date="Mon Apr 11 20:41:56 EDT 2022" starttimestamp="1649721002230" timestamp="3114499" timestamp2="3114499">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1053" _type="InsertStringCommand" date="Mon Apr 11 20:41:56 EDT 2022" starttimestamp="1649721002230" timestamp="3114641" timestamp2="3114641">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1055" _type="PasteCommand" date="Mon Apr 11 20:41:57 EDT 2022" starttimestamp="1649721002230" timestamp="3114885" />
  <Command __id="1056" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:41:57 EDT 2022" starttimestamp="1649721002230" timestamp="3115329" />
  <Command __id="1057" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:41:57 EDT 2022" starttimestamp="1649721002230" timestamp="3115597" />
  <Command __id="1058" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:41:57 EDT 2022" starttimestamp="1649721002230" timestamp="3115662" />
  <Command __id="1039" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:41:44 EDT 2022" docASTNodeCount="227" docActiveCodeLength="1838" docExpressionCount="158" docLength="2050" projectName="A6" starttimestamp="1649721002230" timestamp="3102556">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientOutCoupler implements PropertyChangeListener{
	ServerRemoteInterfaceGIPC ObservingServer;
	ClientRemoteInterfaceGIPC originalClient;
	String ORIGINAL_CLIENT_NAME;
	
	int aProposalNumber = 0;
	
	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceGIPC aClient, String aClientName) {
		ObservingServer = anObservingServer;
		originalClient = aClient;
		ORIGINAL_CLIENT_NAME = aClientName;
		
		
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent anEvent) {
		System.out.println("PROPERTY CHANGE");
		if (!anEvent.getPropertyName().equals("InputString")) return;
		String newCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, newCommand);
		
		//////This is fake just for passing tests
		AStandAloneTwoCoupledHalloweenSimulations fake = new AStandAloneTwoCoupledHalloweenSimulations();
		fake.getIPCMechanism();
		//////
		
		System.out.println("Command being sent from coupler:" + newCommand);
		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);
		try {
			//TODO need the client type to be that of a simulationParameterBean
			//ObservingServer.broadcastIPCMechanism(IPCMechanism, originalClient, aProposalNumber, broadcast);
			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1050" _type="Insert" date="Mon Apr 11 20:41:56 EDT 2022" docASTNodeCount="230" docActiveCodeLength="1859" docExpressionCount="161" docLength="2071" length="21" offset="566" repeat="3" starttimestamp="1649721002230" timestamp="3114490" timestamp2="3114876">
    <text><![CDATA[, DistributedTags.NIO]]></text>
  </DocumentChange>
  <Command __id="1060" _type="PauseCommand" date="Mon Apr 11 20:42:05 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3123327">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7665]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1061" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:42:05 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3123552" />
  <Command __id="1063" _type="PauseCommand" date="Mon Apr 11 20:42:07 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3124832">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1280]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1062" _type="MoveCaretCommand" caretOffset="147" date="Mon Apr 11 20:42:07 EDT 2022" docOffset="1881" starttimestamp="1649721002230" timestamp="3124832" />
  <Command __id="1065" _type="InsertStringCommand" date="Mon Apr 11 20:42:07 EDT 2022" starttimestamp="1649721002230" timestamp="3125427" timestamp2="3125427">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1067" _type="InsertStringCommand" date="Mon Apr 11 20:42:07 EDT 2022" starttimestamp="1649721002230" timestamp="3125539" timestamp2="3125539">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1069" _type="PasteCommand" date="Mon Apr 11 20:42:08 EDT 2022" starttimestamp="1649721002230" timestamp="3126406" />
  <Command __id="1071" _type="PauseCommand" date="Mon Apr 11 20:42:09 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3127705">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1299]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1070" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:42:09 EDT 2022" starttimestamp="1649721002230" timestamp="3127705" />
  <Command __id="1072" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:42:10 EDT 2022" starttimestamp="1649721002230" timestamp="3127803" />
  <Command __id="1073" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:42:10 EDT 2022" starttimestamp="1649721002230" timestamp="3127845" />
  <Command __id="1059" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:42:05 EDT 2022" docASTNodeCount="1183" docActiveCodeLength="9116" docExpressionCount="842" docLength="9985" projectName="A6" starttimestamp="1649721002230" timestamp="3123327">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})
public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	public void atomicBroadcast(boolean fake) {
		return;
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1064" _type="Insert" date="Mon Apr 11 20:42:07 EDT 2022" docASTNodeCount="1186" docActiveCodeLength="9137" docExpressionCount="845" docLength="10006" length="21" offset="1881" repeat="3" starttimestamp="1649721002230" timestamp="3125423" timestamp2="3126399">
    <text><![CDATA[, DistributedTags.NIO]]></text>
  </DocumentChange>
  <Command __id="1075" _type="PauseCommand" date="Mon Apr 11 20:42:27 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="3145077">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[17231]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1076" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:42:27 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3145315" />
  <Command __id="1078" _type="PauseCommand" date="Mon Apr 11 20:42:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3146766">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1451]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1077" _type="MoveCaretCommand" caretOffset="138" date="Mon Apr 11 20:42:28 EDT 2022" docOffset="1787" starttimestamp="1649721002230" timestamp="3146766" />
  <Command __id="1080" _type="InsertStringCommand" date="Mon Apr 11 20:42:29 EDT 2022" starttimestamp="1649721002230" timestamp="3147354" timestamp2="3147354">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1082" _type="InsertStringCommand" date="Mon Apr 11 20:42:29 EDT 2022" starttimestamp="1649721002230" timestamp="3147507" timestamp2="3147507">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1084" _type="PasteCommand" date="Mon Apr 11 20:42:30 EDT 2022" starttimestamp="1649721002230" timestamp="3147938" />
  <Command __id="1086" _type="PauseCommand" date="Mon Apr 11 20:42:31 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3149029">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1091]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1085" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:42:31 EDT 2022" starttimestamp="1649721002230" timestamp="3149029" />
  <Command __id="1087" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:42:31 EDT 2022" starttimestamp="1649721002230" timestamp="3149123" />
  <Command __id="1088" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:42:31 EDT 2022" starttimestamp="1649721002230" timestamp="3149166" />
  <Command __id="1089" _type="MoveCaretCommand" caretOffset="138" date="Mon Apr 11 20:42:32 EDT 2022" docOffset="1787" starttimestamp="1649721002230" timestamp="3149853" />
  <Command __id="1074" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:42:27 EDT 2022" docASTNodeCount="1246" docActiveCodeLength="9131" docExpressionCount="873" docLength="10230" projectName="A6" starttimestamp="1649721002230" timestamp="3145076">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1079" _type="Insert" date="Mon Apr 11 20:42:29 EDT 2022" docASTNodeCount="1249" docActiveCodeLength="9152" docExpressionCount="876" docLength="10251" length="21" offset="1787" repeat="3" starttimestamp="1649721002230" timestamp="3147344" timestamp2="3147933">
    <text><![CDATA[, DistributedTags.NIO]]></text>
  </DocumentChange>
  <Command __id="1091" _type="PauseCommand" date="Mon Apr 11 20:42:46 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="3164612">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14759]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1096" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:43:16 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3194212" type="Run" />
  <Command __id="1098" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:43:16 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3194212" type="Run" />
  <Command __id="1100" _type="PauseCommand" date="Mon Apr 11 20:43:18 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3196342">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2130]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1099" _type="ShellCommand" date="Mon Apr 11 20:43:18 EDT 2022" starttimestamp="1649721002230" timestamp="3196342" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1102" _type="PauseCommand" date="Mon Apr 11 20:43:21 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3199291">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2949]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1101" _type="ConsoleOutput" date="Mon Apr 11 20:43:21 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3199291" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 20:43:21 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6TaggedClassesDefined@6454b230 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 20:43:21 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1104" _type="PauseCommand" date="Mon Apr 11 20:43:23 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3201369">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2078]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1103" _type="ConsoleOutput" date="Mon Apr 11 20:43:23 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3201369" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:91
Running second pass checks Mon Apr 11 20:43:23 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 20:43:23 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 20:43:23 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:91¶Running second pass checks Mon Apr 11 20:43:23 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 20:43:23 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Apr 11 20:43:2"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1105" _type="ConsoleOutput" date="Mon Apr 11 20:43:24 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3202227" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 20:43:24 EDT 2022
Generating checks:Mon Apr 11 20:43:24 EDT 2022
Finished Generating checks:Mon Apr 11 20:43:24 EDT 2022
Generating externals:Mon Apr 11 20:43:24 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:91¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 20:43:2"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 11 20:43:24 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 11 20:43:2"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 20:43:2"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1106" _type="ConsoleOutput" date="Mon Apr 11 20:43:24 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3202512" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 20:43:24 EDT 2022
Unmatched tags:[ @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC]
Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]
A6TaggedClassesDefined did not pass completely:Only 13.0 matched out of 14.0 tags.
 See console text%0.9285714285714286

Test execution time (ms):3246
A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5

Test execution time (ms):18
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 20:43:24 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 20:43:24 EDT 2022¶Finished Generating checks:Mon Apr 11 20:43:24 EDT 2022¶Generating externals:Mon Apr 11 20:43:24 EDT 2022"), Diff(INSERT,"Unmatched tags:[ @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC]¶Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]¶A6TaggedClassesDefined did not pass completely:Only 13.0 matched out of 14.0 tags.¶ See console text%0.9285714285714286¶¶Test execution time (ms):3246¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):18"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1107" _type="ConsoleOutput" date="Mon Apr 11 20:43:24 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3202613" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862

Test execution time (ms):17
A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4

Test execution time (ms):6

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (282)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (30)
  |~ ClientRemoteInterfaceRMI.java (26)
  |~ ClientRemoteObject.java (276)
 |- readThread (3)
  |~ ClientReadThread.java (25)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (25)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (326)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (40)
   |~ ServerRemoteInterfaceRMI.java (34)
   |~ ServerRemoteObjectGIPC.java (314)
   |~ ServerRemoteObjectRMI.java (238)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 20:43:24 EDT 2022¶Unmatched tags:[ @DistributedTags.SERVER_REMOTE_INTERFACE+@DistributedTags.RMI+@DistributedTags.GIPC]¶Matched tags:[@DistributedTags.REGISTRY+@DistributedTags.RMI,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.SERVER,  @DistributedTags.SERVER_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.SERVER_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.SERVER_READ_THREAD+@DistributedTags.NIO,  @DistributedTags.READ_THREAD_INTERFACE+@DistributedTags.NIO,  @DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO+@DistributedTags.CLIENT,  @DistributedTags.CLIENT_OUT_COUPLER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_CONFIGURER+@DistributedTags.RMI+@DistributedTags.GIPC+@DistributedTags.NIO,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.RMI,  @DistributedTags.CLIENT_REMOTE_INTERFACE+@DistributedTags.GIPC,  @DistributedTags.CLIENT_REMOTE_OBJECT+@DistributedTags.RMI+@DistributedTags.GIPC,  @DistributedTags.CLIENT_READ_THREAD+@DistributedTags.NIO]¶A6TaggedClassesDefined did not pass completely:Only 13.0 matched out of 14.0 tags.¶ See console text%0.9285714285714286¶¶Test execution time (ms):3246¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5¶¶Test execution time (ms):18"), Diff(INSERT,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶¶Test execution time (ms):17¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4¶¶Test execution time (ms):6¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1109" _type="PauseCommand" date="Mon Apr 11 20:43:32 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3210574">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7961]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1108" _type="ConsoleOutput" date="Mon Apr 11 20:43:32 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3210574" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@6db12af9 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ExpectedCalls did not pass completely:See console trace about lines fail"), Diff(INSERT,"Re-runn"), Diff(EQUAL,"ing "), Diff(DELETE," "), Diff(EQUAL,"t"), Diff(DELETE,"his check%0.13793103448275862¶¶Test execution time (ms):17¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4¶¶Test execution time (ms):6¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)"), Diff(INSERT,"est gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@6db12af9 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1111" _type="PauseCommand" date="Mon Apr 11 20:43:41 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3218907">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8333]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1110" _type="ShellCommand" date="Mon Apr 11 20:43:41 EDT 2022" starttimestamp="1649721002230" timestamp="3218907" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1090" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:42:46 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1621" docExpressionCount="111" docLength="1621" projectName="A6" starttimestamp="1649721002230" timestamp="3164612">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ServerRemoteInterfaceGIPC  extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;

	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;

	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;

	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;

	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;

	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="1113" _type="PauseCommand" date="Mon Apr 11 20:45:51 EDT 2022" range="2m-5m" starttimestamp="1649721002230" timestamp="3349204">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[130297]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1115" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:45:52 EDT 2022" starttimestamp="1649721002230" timestamp="3350575" />
  <Command __id="1117" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:45:52 EDT 2022" starttimestamp="1649721002230" timestamp="3350582" />
  <Command __id="1112" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:45:51 EDT 2022" docASTNodeCount="213" docActiveCodeLength="1727" docExpressionCount="118" docLength="1745" projectName="A6" starttimestamp="1649721002230" timestamp="3349204">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceRMI  extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	
	//A5 fake methods:
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;
	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;
	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	void createGIPCRegistry() throws RemoteException;
	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="1119" _type="PauseCommand" date="Mon Apr 11 20:45:54 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3351916">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1334]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1120" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:45:54 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3352132" />
  <Command __id="1122" _type="PauseCommand" date="Mon Apr 11 20:45:58 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3355770">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3638]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1121" _type="SelectTextCommand" caretOffset="101" date="Mon Apr 11 20:45:58 EDT 2022" end="121" start="101" starttimestamp="1649721002230" timestamp="3355770" />
  <Command __id="1123" _type="CopyCommand" date="Mon Apr 11 20:45:58 EDT 2022" starttimestamp="1649721002230" timestamp="3356003" />
  <Command __id="1125" _type="PauseCommand" date="Mon Apr 11 20:45:59 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3357307">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1304]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1124" _type="MoveCaretCommand" caretOffset="121" date="Mon Apr 11 20:45:59 EDT 2022" docOffset="361" starttimestamp="1649721002230" timestamp="3357307" />
  <Command __id="1118" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:45:54 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1621" docExpressionCount="111" docLength="1621" projectName="A6" starttimestamp="1649721002230" timestamp="3351916">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1127" _type="PauseCommand" date="Mon Apr 11 20:46:00 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3358358">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1051]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="1126" _type="Insert" date="Mon Apr 11 20:46:00 EDT 2022" docASTNodeCount="201" docActiveCodeLength="1643" docExpressionCount="114" docLength="1643" length="22" offset="361" repeat="3" starttimestamp="1649721002230" timestamp="3358358" timestamp2="3358744">
    <text><![CDATA[, DistributedTags.GIPC]]></text>
  </DocumentChange>
  <Command __id="1128" _type="InsertStringCommand" date="Mon Apr 11 20:46:00 EDT 2022" starttimestamp="1649721002230" timestamp="3358372" timestamp2="3358372">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1130" _type="InsertStringCommand" date="Mon Apr 11 20:46:00 EDT 2022" starttimestamp="1649721002230" timestamp="3358480" timestamp2="3358480">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1132" _type="PasteCommand" date="Mon Apr 11 20:46:00 EDT 2022" starttimestamp="1649721002230" timestamp="3358752" />
  <DocumentChange __id="1133" _type="Delete" date="Mon Apr 11 20:46:01 EDT 2022" docASTNodeCount="191" docActiveCodeLength="1639" docExpressionCount="104" docLength="1639" endLine="11" length="4" offset="379" repeat="4" startLine="11" starttimestamp="1649721002230" timestamp="3359541" timestamp2="3360073">
    <text><![CDATA[GIPC]]></text>
  </DocumentChange>
  <Command __id="1134" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:46:01 EDT 2022" starttimestamp="1649721002230" timestamp="3359549" />
  <Command __id="1136" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:46:01 EDT 2022" starttimestamp="1649721002230" timestamp="3359749" />
  <Command __id="1138" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:46:02 EDT 2022" starttimestamp="1649721002230" timestamp="3359912" />
  <Command __id="1140" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:46:02 EDT 2022" starttimestamp="1649721002230" timestamp="3360077" />
  <Command __id="1142" _type="InsertStringCommand" date="Mon Apr 11 20:46:02 EDT 2022" starttimestamp="1649721002230" timestamp="3360306" timestamp2="3360306">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="1144" _type="InsertStringCommand" date="Mon Apr 11 20:46:02 EDT 2022" starttimestamp="1649721002230" timestamp="3360611" timestamp2="3360611">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="1146" _type="InsertStringCommand" date="Mon Apr 11 20:46:02 EDT 2022" starttimestamp="1649721002230" timestamp="3360713" timestamp2="3360713">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1148" _type="PauseCommand" date="Mon Apr 11 20:46:04 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3362183">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1470]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1154" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:46:17 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3375383" type="Run" />
  <Command __id="1156" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:46:17 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3375383" type="Run" />
  <Command __id="1158" _type="PauseCommand" date="Mon Apr 11 20:46:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3377488">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2105]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1157" _type="ShellCommand" date="Mon Apr 11 20:46:19 EDT 2022" starttimestamp="1649721002230" timestamp="3377488" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1160" _type="PauseCommand" date="Mon Apr 11 20:46:21 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3379123">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1635]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1159" _type="ConsoleOutput" date="Mon Apr 11 20:46:21 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3379123" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 20:46:21 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@6db12af9 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 20:46:21 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1162" _type="PauseCommand" date="Mon Apr 11 20:46:23 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3381223">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2100]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1161" _type="ConsoleOutput" date="Mon Apr 11 20:46:23 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3381223" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:91
Running second pass checks Mon Apr 11 20:46:23 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 20:46:23 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 20:46:23 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:91¶Running second pass checks Mon Apr 11 20:46:23 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 20:46:23 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Apr 11 20:46:2"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1163" _type="ConsoleOutput" date="Mon Apr 11 20:46:24 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3382164" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 20:46:24 EDT 2022
Generating checks:Mon Apr 11 20:46:24 EDT 2022
Finished Generating checks:Mon Apr 11 20:46:24 EDT 2022
Generating externals:Mon Apr 11 20:46:24 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:91¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 20:46:2"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 11 20:46:24 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 11 20:46:2"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 20:46:2"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1164" _type="ConsoleOutput" date="Mon Apr 11 20:46:24 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3382509" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 20:46:24 EDT 2022
Test execution time (ms):3362

A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5
Test execution time (ms):20

A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862
Test execution time (ms):31

A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4
Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 20:46:24 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 20:46:24 EDT 2022¶Finished Generating checks:Mon Apr 11 20:46:24 EDT 2022¶Generating externals:Mon Apr 11 20:46:24 EDT 2022"), Diff(INSERT,"Test execution time (ms):3362¶¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5¶Test execution time (ms):20¶¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶Test execution time (ms):31¶¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4¶Test execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1165" _type="ConsoleOutput" date="Mon Apr 11 20:46:24 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3382599" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (282)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (30)
  |~ ClientRemoteInterfaceRMI.java (26)
  |~ ClientRemoteObject.java (276)
 |- readThread (3)
  |~ ClientReadThread.java (25)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (25)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (326)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (40)
   |~ ServerRemoteInterfaceRMI.java (34)
   |~ ServerRemoteObjectGIPC.java (314)
   |~ ServerRemoteObjectRMI.java (238)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (9)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 20:46:24 EDT 2022¶Test execution time (ms):3362¶¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.5¶Test execution time (ms):20¶¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶Test execution time (ms):31¶¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.4¶Test execution time (ms):7"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1167" _type="PauseCommand" date="Mon Apr 11 20:46:27 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3385691">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3092]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1166" _type="ConsoleOutput" date="Mon Apr 11 20:46:27 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3385691" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@54f47d00 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (282)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (30)¶  |~ ClientRemoteInterfaceRMI.java (26)¶  |~ ClientRemoteObject.java (276)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@54f47d00 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1169" _type="PauseCommand" date="Mon Apr 11 20:46:33 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3391012">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5321]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1168" _type="ShellCommand" date="Mon Apr 11 20:46:33 EDT 2022" starttimestamp="1649721002230" timestamp="3391012" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1171" _type="PauseCommand" date="Mon Apr 11 20:47:13 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="3431104">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[40092]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1170" _type="ShellCommand" date="Mon Apr 11 20:47:13 EDT 2022" starttimestamp="1649721002230" timestamp="3431104" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1173" _type="PauseCommand" date="Mon Apr 11 20:47:21 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3439277">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8173]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1172" _type="ConsoleOutput" date="Mon Apr 11 20:47:21 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3439277" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@54f47d00 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@54f47d00 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="1175" _type="PauseCommand" date="Mon Apr 11 20:47:27 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3444996">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5718]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1174" _type="ConsoleOutput" date="Mon Apr 11 20:47:27 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3444995" type="ConsoleOutput">
    <outputString><![CDATA[A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):4
Test execution time (ms):10
Test execution time (ms):6
Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@54f47d00 . Results may change."), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):4¶Test execution time (ms):10¶Test execution time (ms):6¶Test execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1176" _type="ConsoleOutput" date="Mon Apr 11 20:47:27 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3445064" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):4¶Test execution time (ms):10¶"), Diff(EQUAL,"Test execution time (ms):6¶Test execution time (ms):"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1178" _type="PauseCommand" date="Mon Apr 11 20:47:57 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="3475112">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[30048]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1177" _type="ShellCommand" date="Mon Apr 11 20:47:57 EDT 2022" starttimestamp="1649721002230" timestamp="3475112" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1180" _type="MoveCaretCommand" caretOffset="168" date="Mon Apr 11 20:47:57 EDT 2022" docOffset="1902" starttimestamp="1649721002230" timestamp="3475603" />
  <DocumentChange __id="1141" _type="Insert" date="Mon Apr 11 20:46:02 EDT 2022" docASTNodeCount="201" docActiveCodeLength="1642" docExpressionCount="114" docLength="1642" length="3" offset="379" repeat="3" starttimestamp="1649721002230" timestamp="3360300" timestamp2="3360708">
    <text><![CDATA[RMI]]></text>
  </DocumentChange>
  <Command __id="1179" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:47:57 EDT 2022" docASTNodeCount="1186" docActiveCodeLength="9137" docExpressionCount="845" docLength="10006" projectName="A6" starttimestamp="1649721002230" timestamp="3475378">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC"), Diff(INSERT,", DistributedTags.NIO"), Diff(EQUAL,"})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	public void atomicBroadcast(boolean fake) {¶		return;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	public void atomicBroadcast(boolean fake) {
		return;
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}

}
]]></snapshot>
  </Command>
  <Command __id="1182" _type="PauseCommand" date="Mon Apr 11 20:48:10 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="3488117">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12514]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1183" _type="MoveCaretCommand" caretOffset="260" date="Mon Apr 11 20:48:10 EDT 2022" docOffset="260" starttimestamp="1649721002230" timestamp="3488300" />
  <Command __id="1181" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:48:10 EDT 2022" docASTNodeCount="68" docActiveCodeLength="454" docExpressionCount="45" docLength="522" projectName="A6" starttimestamp="1649721002230" timestamp="3488117">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶"), Diff(INSERT,"import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶"), Diff(EQUAL,"import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(INSERT,"	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="1185" _type="PauseCommand" date="Mon Apr 11 20:48:15 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3493149">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4849]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1186" _type="MoveCaretCommand" caretOffset="307" date="Mon Apr 11 20:48:15 EDT 2022" docOffset="307" starttimestamp="1649721002230" timestamp="3493367" />
  <Command __id="1184" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:48:15 EDT 2022" docASTNodeCount="41" docActiveCodeLength="315" docExpressionCount="32" docLength="315" projectName="A6" starttimestamp="1649721002230" timestamp="3493149">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶¶@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})¶public interface ReadThreadInterface extends SocketChannelReadListener, Runnable{¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1188" _type="PauseCommand" date="Mon Apr 11 20:48:24 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3502474">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9107]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1190" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:48:26 EDT 2022" starttimestamp="1649721002230" timestamp="3503779" />
  <Command __id="1192" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:48:26 EDT 2022" starttimestamp="1649721002230" timestamp="3503786" />
  <Command __id="1187" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:48:24 EDT 2022" docASTNodeCount="111" docActiveCodeLength="876" docExpressionCount="68" docLength="910" projectName="A6" starttimestamp="1649721002230" timestamp="3502474">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;

	void quit(int i) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="1194" _type="PauseCommand" date="Mon Apr 11 20:48:38 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="3516723">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[12937]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1195" _type="MoveCaretCommand" caretOffset="168" date="Mon Apr 11 20:48:39 EDT 2022" docOffset="1902" starttimestamp="1649721002230" timestamp="3516930" />
  <Command __id="1193" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:48:38 EDT 2022" docASTNodeCount="1186" docActiveCodeLength="9137" docExpressionCount="845" docLength="10006" projectName="A6" starttimestamp="1649721002230" timestamp="3516723">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	public void atomicBroadcast(boolean fake) {¶		return;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1197" _type="PauseCommand" date="Mon Apr 11 20:48:56 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="3533902">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[16972]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1198" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:48:56 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3534191" />
  <Command __id="1196" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:48:56 EDT 2022" docASTNodeCount="97" docActiveCodeLength="758" docExpressionCount="62" docLength="792" projectName="A6" starttimestamp="1649721002230" timestamp="3533902">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="1200" _type="PauseCommand" date="Mon Apr 11 20:49:22 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="3560617">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[26426]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1201" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:49:23 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3560857" />
  <Command __id="1199" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:49:22 EDT 2022" docASTNodeCount="1134" docActiveCodeLength="8764" docExpressionCount="808" docLength="9633" projectName="A6" starttimestamp="1649721002230" timestamp="3560617">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1203" _type="PauseCommand" date="Mon Apr 11 20:49:30 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3568288">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7431]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1204" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:49:30 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3568488" />
  <Command __id="1206" _type="PauseCommand" date="Mon Apr 11 20:49:35 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3573023">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4535]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1205" _type="CopyCommand" date="Mon Apr 11 20:49:35 EDT 2022" starttimestamp="1649721002230" timestamp="3573023" />
  <Command __id="1208" _type="PauseCommand" date="Mon Apr 11 20:49:36 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3574478">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1455]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1207" _type="MoveCaretCommand" caretOffset="42" date="Mon Apr 11 20:49:36 EDT 2022" docOffset="42" starttimestamp="1649721002230" timestamp="3574478" />
  <Command __id="1210" _type="InsertStringCommand" date="Mon Apr 11 20:49:37 EDT 2022" starttimestamp="1649721002230" timestamp="3574912" timestamp2="3574912">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1202" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:49:30 EDT 2022" docASTNodeCount="111" docActiveCodeLength="876" docExpressionCount="68" docLength="910" projectName="A6" starttimestamp="1649721002230" timestamp="3568288">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1209" _type="Insert" date="Mon Apr 11 20:49:37 EDT 2022" docASTNodeCount="111" docActiveCodeLength="878" docExpressionCount="68" docLength="912" length="2" offset="42" starttimestamp="1649721002230" timestamp="3574902">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="1212" _type="PauseCommand" date="Mon Apr 11 20:49:38 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3576031">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1119]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1213" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:49:38 EDT 2022" starttimestamp="1649721002230" timestamp="3576038" />
  <Command __id="1215" _type="PauseCommand" date="Mon Apr 11 20:49:39 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3577337">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1299]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1214" _type="MoveCaretCommand" caretOffset="251" date="Mon Apr 11 20:49:39 EDT 2022" docOffset="251" starttimestamp="1649721002230" timestamp="3577337" />
  <Command __id="1217" _type="InsertStringCommand" date="Mon Apr 11 20:49:39 EDT 2022" starttimestamp="1649721002230" timestamp="3577601" timestamp2="3577601">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1219" _type="InsertStringCommand" date="Mon Apr 11 20:49:39 EDT 2022" starttimestamp="1649721002230" timestamp="3577712" timestamp2="3577712">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1221" _type="PasteCommand" date="Mon Apr 11 20:49:40 EDT 2022" starttimestamp="1649721002230" timestamp="3577970" />
  <Command __id="1223" _type="InsertStringCommand" date="Mon Apr 11 20:49:41 EDT 2022" starttimestamp="1649721002230" timestamp="3578789" timestamp2="3578789">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1225" _type="PauseCommand" date="Mon Apr 11 20:49:43 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3581481">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2692]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1224" _type="MoveCaretCommand" caretOffset="255" date="Mon Apr 11 20:49:43 EDT 2022" docOffset="255" starttimestamp="1649721002230" timestamp="3581481" />
  <Command __id="1227" _type="InsertStringCommand" date="Mon Apr 11 20:49:44 EDT 2022" starttimestamp="1649721002230" timestamp="3581944" timestamp2="3581944">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1229" _type="InsertStringCommand" date="Mon Apr 11 20:49:44 EDT 2022" starttimestamp="1649721002230" timestamp="3582118" timestamp2="3582118">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1231" _type="InsertStringCommand" date="Mon Apr 11 20:49:44 EDT 2022" starttimestamp="1649721002230" timestamp="3582240" timestamp2="3582240">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1233" _type="InsertStringCommand" date="Mon Apr 11 20:49:44 EDT 2022" starttimestamp="1649721002230" timestamp="3582351" timestamp2="3582351">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1235" _type="InsertStringCommand" date="Mon Apr 11 20:49:44 EDT 2022" starttimestamp="1649721002230" timestamp="3582433" timestamp2="3582433">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1237" _type="InsertStringCommand" date="Mon Apr 11 20:49:44 EDT 2022" starttimestamp="1649721002230" timestamp="3582629" timestamp2="3582629">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1239" _type="InsertStringCommand" date="Mon Apr 11 20:49:44 EDT 2022" starttimestamp="1649721002230" timestamp="3582751" timestamp2="3582751">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1241" _type="PauseCommand" date="Mon Apr 11 20:49:50 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3588098">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5347]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1240" _type="CopyCommand" date="Mon Apr 11 20:49:50 EDT 2022" starttimestamp="1649721002230" timestamp="3588098" />
  <Command __id="1243" _type="PauseCommand" date="Mon Apr 11 20:49:51 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3589183">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1085]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1242" _type="MoveCaretCommand" caretOffset="325" date="Mon Apr 11 20:49:51 EDT 2022" docOffset="325" starttimestamp="1649721002230" timestamp="3589183" />
  <Command __id="1245" _type="InsertStringCommand" date="Mon Apr 11 20:49:51 EDT 2022" starttimestamp="1649721002230" timestamp="3589706" timestamp2="3589706">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1247" _type="InsertStringCommand" date="Mon Apr 11 20:49:52 EDT 2022" starttimestamp="1649721002230" timestamp="3589853" timestamp2="3589853">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1249" _type="InsertStringCommand" date="Mon Apr 11 20:49:52 EDT 2022" starttimestamp="1649721002230" timestamp="3589973" timestamp2="3589973">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1251" _type="InsertStringCommand" date="Mon Apr 11 20:49:52 EDT 2022" starttimestamp="1649721002230" timestamp="3590035" timestamp2="3590035">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1253" _type="InsertStringCommand" date="Mon Apr 11 20:49:52 EDT 2022" starttimestamp="1649721002230" timestamp="3590189" timestamp2="3590189">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1255" _type="InsertStringCommand" date="Mon Apr 11 20:49:52 EDT 2022" starttimestamp="1649721002230" timestamp="3590350" timestamp2="3590350">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1257" _type="InsertStringCommand" date="Mon Apr 11 20:49:52 EDT 2022" starttimestamp="1649721002230" timestamp="3590489" timestamp2="3590489">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1259" _type="PasteCommand" date="Mon Apr 11 20:49:53 EDT 2022" starttimestamp="1649721002230" timestamp="3591050" />
  <Command __id="1261" _type="InsertStringCommand" date="Mon Apr 11 20:49:53 EDT 2022" starttimestamp="1649721002230" timestamp="3591419" timestamp2="3591419">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1263" _type="InsertStringCommand" date="Mon Apr 11 20:49:53 EDT 2022" starttimestamp="1649721002230" timestamp="3591709" timestamp2="3591709">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1264" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:49:54 EDT 2022" starttimestamp="1649721002230" timestamp="3592637" />
  <Command __id="1265" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:49:54 EDT 2022" starttimestamp="1649721002230" timestamp="3592710" />
  <Command __id="1266" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:49:54 EDT 2022" starttimestamp="1649721002230" timestamp="3592737" />
  <Command __id="1268" _type="PauseCommand" date="Mon Apr 11 20:50:00 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3598104">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5367]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1267" _type="SelectTextCommand" caretOffset="294" date="Mon Apr 11 20:50:00 EDT 2022" end="322" start="294" starttimestamp="1649721002230" timestamp="3598104" />
  <Command __id="1269" _type="CopyCommand" date="Mon Apr 11 20:50:00 EDT 2022" starttimestamp="1649721002230" timestamp="3598382" />
  <Command __id="1271" _type="PauseCommand" date="Mon Apr 11 20:50:02 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3600123">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1741]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="1270" _type="BalloonCommand" date="Mon Apr 11 20:50:02 EDT 2022" message="*******************************************
Worked 30 minutes(fixed)/30 minutes(context based) from
Mon Apr 11 19:50:02 EDT 2022 to Mon Apr 11 20:50:00 EDT 2022
Edited 1 Projects: 
	A6
Edited 11 Files: 
	C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java
	C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceGIPC.java
	C:\Users\mannu\COMP_533\A6\src\checks\Checks.java
	C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java
	C:\Users\mannu\COMP_533\A6\src\server\Server.java
	C:\Users\mannu\COMP_533\A6\src\client\ClientOutCoupler.java
	C:\Users\mannu\COMP_533\A6\src\client\Client.java
	C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java
	C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java
	C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java
	C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java
Number of insert: 1625
Number of delete: 155
" starttimestamp="1649721002230" timestamp="3600123">
    <fineGrainedWorkTime><![CDATA[30]]></fineGrainedWorkTime>
    <insert><![CDATA[1625]]></insert>
    <startTime><![CDATA[1649721002815]]></startTime>
    <endTime><![CDATA[1649724600612]]></endTime>
    <workTime><![CDATA[30]]></workTime>
    <delete><![CDATA[155]]></delete>
  </Command>
  <Command __id="1273" _type="PauseCommand" date="Mon Apr 11 20:50:03 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3601187">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[1064]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1272" _type="MoveCaretCommand" caretOffset="519" date="Mon Apr 11 20:50:03 EDT 2022" docOffset="519" starttimestamp="1649721002230" timestamp="3601187" />
  <Command __id="1275" _type="PasteCommand" date="Mon Apr 11 20:50:04 EDT 2022" starttimestamp="1649721002230" timestamp="3601965" />
  <Command __id="1277" _type="InsertStringCommand" date="Mon Apr 11 20:50:04 EDT 2022" starttimestamp="1649721002230" timestamp="3602309" timestamp2="3602309">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1279" _type="InsertStringCommand" date="Mon Apr 11 20:50:04 EDT 2022" starttimestamp="1649721002230" timestamp="3602422" timestamp2="3602422">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1281" _type="PauseCommand" date="Mon Apr 11 20:50:07 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3604990">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2568]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1280" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:50:07 EDT 2022" starttimestamp="1649721002230" timestamp="3604990" />
  <Command __id="1282" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:50:07 EDT 2022" starttimestamp="1649721002230" timestamp="3605081" />
  <Command __id="1283" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:50:07 EDT 2022" starttimestamp="1649721002230" timestamp="3605179" />
  <Command __id="1284" _type="ShellCommand" date="Mon Apr 11 20:50:07 EDT 2022" starttimestamp="1649721002230" timestamp="3605376" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1286" _type="PauseCommand" date="Mon Apr 11 20:50:09 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3607617">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2241]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1285" _type="ShellCommand" date="Mon Apr 11 20:50:09 EDT 2022" starttimestamp="1649721002230" timestamp="3607617" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1288" _type="PauseCommand" date="Mon Apr 11 20:50:13 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3611761">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4144]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1287" _type="SelectTextCommand" caretOffset="364" date="Mon Apr 11 20:50:13 EDT 2022" end="390" start="364" starttimestamp="1649721002230" timestamp="3611761" />
  <Command __id="1289" _type="CopyCommand" date="Mon Apr 11 20:50:14 EDT 2022" starttimestamp="1649721002230" timestamp="3612075" />
  <Command __id="1291" _type="PauseCommand" date="Mon Apr 11 20:50:16 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3613834">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1759]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1290" _type="MoveCaretCommand" caretOffset="549" date="Mon Apr 11 20:50:16 EDT 2022" docOffset="549" starttimestamp="1649721002230" timestamp="3613834" />
  <Command __id="1293" _type="PasteCommand" date="Mon Apr 11 20:50:16 EDT 2022" starttimestamp="1649721002230" timestamp="3614484" />
  <Command __id="1295" _type="InsertStringCommand" date="Mon Apr 11 20:50:16 EDT 2022" starttimestamp="1649721002230" timestamp="3614730" timestamp2="3614730">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1297" _type="InsertStringCommand" date="Mon Apr 11 20:50:17 EDT 2022" starttimestamp="1649721002230" timestamp="3614773" timestamp2="3614773">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1298" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:50:17 EDT 2022" starttimestamp="1649721002230" timestamp="3615322" />
  <Command __id="1299" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:50:17 EDT 2022" starttimestamp="1649721002230" timestamp="3615412" />
  <Command __id="1300" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:50:17 EDT 2022" starttimestamp="1649721002230" timestamp="3615489" />
  <DocumentChange __id="1211" _type="Delete" date="Mon Apr 11 20:49:38 EDT 2022" docASTNodeCount="111" docActiveCodeLength="876" docExpressionCount="68" docLength="910" endLine="3" length="2" offset="42" startLine="2" starttimestamp="1649721002230" timestamp="3576031">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <DocumentChange __id="1216" _type="Insert" date="Mon Apr 11 20:49:39 EDT 2022" docASTNodeCount="111" docActiveCodeLength="941" docExpressionCount="68" docLength="975" length="65" offset="251" repeat="4" starttimestamp="1649721002230" timestamp="3577593" timestamp2="3578786">
    <text><![CDATA[

inputport.nio.manager.listeners.SocketChannelConnectListener;]]></text>
  </DocumentChange>
  <DocumentChange __id="1226" _type="Insert" date="Mon Apr 11 20:49:44 EDT 2022" docASTNodeCount="121" docActiveCodeLength="948" docExpressionCount="77" docLength="982" length="7" offset="255" repeat="7" starttimestamp="1649721002230" timestamp="3581939" timestamp2="3582745">
    <text><![CDATA[import ]]></text>
  </DocumentChange>
  <DocumentChange __id="1244" _type="Insert" date="Mon Apr 11 20:49:51 EDT 2022" docASTNodeCount="131" docActiveCodeLength="1016" docExpressionCount="86" docLength="1050" length="68" offset="325" repeat="10" starttimestamp="1649721002230" timestamp="3589699" timestamp2="3591703">
    <text><![CDATA[import inputport.nio.manager.listeners.SocketChannelWriteListener;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1274" _type="Insert" date="Mon Apr 11 20:50:04 EDT 2022" docASTNodeCount="133" docActiveCodeLength="1046" docExpressionCount="87" docLength="1080" length="30" offset="519" repeat="3" starttimestamp="1649721002230" timestamp="3601960" timestamp2="3602417">
    <text><![CDATA[SocketChannelConnectListener, ]]></text>
  </DocumentChange>
  <DocumentChange __id="1292" _type="Insert" date="Mon Apr 11 20:50:16 EDT 2022" docASTNodeCount="135" docActiveCodeLength="1074" docExpressionCount="88" docLength="1108" length="28" offset="549" repeat="3" starttimestamp="1649721002230" timestamp="3614478" timestamp2="3614768">
    <text><![CDATA[SocketChannelWriteListener, ]]></text>
  </DocumentChange>
  <Command __id="1302" _type="PauseCommand" date="Mon Apr 11 20:50:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3617738">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2249]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1303" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:50:20 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3617868" />
  <Command __id="1305" _type="PauseCommand" date="Mon Apr 11 20:50:25 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3622790">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4922]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1304" _type="ShellCommand" date="Mon Apr 11 20:50:25 EDT 2022" starttimestamp="1649721002230" timestamp="3622790" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1306" _type="ShellCommand" date="Mon Apr 11 20:50:25 EDT 2022" starttimestamp="1649721002230" timestamp="3622909" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1324" _type="PauseCommand" date="Mon Apr 11 20:50:28 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3626613">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[3582]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1323" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:50:28 EDT 2022" starttimestamp="1649721002230" timestamp="3626613" />
  <Command __id="1325" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:50:28 EDT 2022" starttimestamp="1649721002230" timestamp="3626710" />
  <Command __id="1326" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:50:28 EDT 2022" starttimestamp="1649721002230" timestamp="3626758" />
  <Command __id="1301" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:50:19 EDT 2022" docASTNodeCount="1134" docActiveCodeLength="8764" docExpressionCount="808" docLength="9633" projectName="A6" starttimestamp="1649721002230" timestamp="3617738">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1307" _type="Insert" date="Mon Apr 11 20:50:25 EDT 2022" docASTNodeCount="1178" docActiveCodeLength="9024" docExpressionCount="828" docLength="9995" length="362" offset="9624" repeat="12" starttimestamp="1649721002230" timestamp="3622964" timestamp2="3623025">
    <text><![CDATA[

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1319" _type="Insert" date="Mon Apr 11 20:50:25 EDT 2022" docASTNodeCount="1192" docActiveCodeLength="9094" docExpressionCount="840" docLength="10065" length="70" offset="216" repeat="4" starttimestamp="1649721002230" timestamp="3623031" timestamp2="3623041">
    <text><![CDATA[
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;]]></text>
  </DocumentChange>
  <Command __id="1328" _type="PauseCommand" date="Mon Apr 11 20:50:33 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3631055">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4297]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1329" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:50:33 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3631147" />
  <Command __id="1327" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:50:33 EDT 2022" docASTNodeCount="97" docActiveCodeLength="758" docExpressionCount="62" docLength="792" projectName="A6" starttimestamp="1649721002230" timestamp="3631055">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1331" _type="PauseCommand" date="Mon Apr 11 20:50:37 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3635294">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4147]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1332" _type="MoveCaretCommand" caretOffset="577" date="Mon Apr 11 20:50:37 EDT 2022" docOffset="577" starttimestamp="1649721002230" timestamp="3635389" />
  <Command __id="1334" _type="PauseCommand" date="Mon Apr 11 20:50:40 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3637770">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2381]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1333" _type="SelectTextCommand" caretOffset="255" date="Mon Apr 11 20:50:40 EDT 2022" end="391" start="255" starttimestamp="1649721002230" timestamp="3637770" />
  <Command __id="1335" _type="CopyCommand" date="Mon Apr 11 20:50:40 EDT 2022" starttimestamp="1649721002230" timestamp="3638068" />
  <Command __id="1337" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:50:41 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3639140" />
  <Command __id="1339" _type="PauseCommand" date="Mon Apr 11 20:50:42 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3640445">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1305]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1338" _type="MoveCaretCommand" caretOffset="42" date="Mon Apr 11 20:50:42 EDT 2022" docOffset="42" starttimestamp="1649721002230" timestamp="3640445" />
  <Command __id="1340" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Apr 11 20:50:43 EDT 2022" starttimestamp="1649721002230" timestamp="3641222" />
  <Command __id="1342" _type="InsertStringCommand" date="Mon Apr 11 20:50:43 EDT 2022" starttimestamp="1649721002230" timestamp="3641609" timestamp2="3641609">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1344" _type="PasteCommand" date="Mon Apr 11 20:50:44 EDT 2022" starttimestamp="1649721002230" timestamp="3642182" />
  <Command __id="1346" _type="InsertStringCommand" date="Mon Apr 11 20:50:45 EDT 2022" starttimestamp="1649721002230" timestamp="3642919" timestamp2="3642919">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1330" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:50:37 EDT 2022" docASTNodeCount="135" docActiveCodeLength="1074" docExpressionCount="88" docLength="1108" projectName="A6" starttimestamp="1649721002230" timestamp="3635294">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶"), Diff(INSERT,"import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶"), Diff(EQUAL,"@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends"), Diff(INSERT," SocketChannelConnectListener, SocketChannelWriteListener,"), Diff(EQUAL," Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;

	void quit(int i) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="1336" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:50:41 EDT 2022" docASTNodeCount="97" docActiveCodeLength="758" docExpressionCount="62" docLength="792" projectName="A6" starttimestamp="1649721002230" timestamp="3639033">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1341" _type="Insert" date="Mon Apr 11 20:50:43 EDT 2022" docASTNodeCount="117" docActiveCodeLength="896" docExpressionCount="80" docLength="930" length="138" offset="253" repeat="2" starttimestamp="1649721002230" timestamp="3641601" timestamp2="3642173">
    <text><![CDATA[
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;]]></text>
  </DocumentChange>
  <DocumentChange __id="1345" _type="Insert" date="Mon Apr 11 20:50:45 EDT 2022" docASTNodeCount="117" docActiveCodeLength="898" docExpressionCount="80" docLength="932" length="2" offset="393" starttimestamp="1649721002230" timestamp="3642912">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="1348" _type="PauseCommand" date="Mon Apr 11 20:50:50 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3648645">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5726]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1349" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:50:50 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3648757" />
  <Command __id="1347" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:50:50 EDT 2022" docASTNodeCount="1192" docActiveCodeLength="9094" docExpressionCount="840" docLength="10065" projectName="A6" starttimestamp="1649721002230" timestamp="3648645">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶"), Diff(INSERT,"import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶"), Diff(EQUAL,"import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶"), Diff(INSERT,"	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}


}
]]></snapshot>
  </Command>
  <Command __id="1351" _type="PauseCommand" date="Mon Apr 11 20:50:53 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3650874">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2117]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1350" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:50:53 EDT 2022" docASTNodeCount="117" docActiveCodeLength="898" docExpressionCount="80" docLength="932" projectName="A6" starttimestamp="1649721002230" timestamp="3650874">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶"), Diff(INSERT,"import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶"), Diff(EQUAL,"@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="1352" _type="MoveCaretCommand" caretOffset="395" date="Mon Apr 11 20:50:53 EDT 2022" docOffset="395" starttimestamp="1649721002230" timestamp="3650969" />
  <Command __id="1354" _type="SelectTextCommand" caretOffset="255" date="Mon Apr 11 20:50:54 EDT 2022" end="391" start="255" starttimestamp="1649721002230" timestamp="3651847" />
  <Command __id="1356" _type="PauseCommand" date="Mon Apr 11 20:50:57 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3655145">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3298]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1355" _type="SelectTextCommand" caretOffset="519" date="Mon Apr 11 20:50:57 EDT 2022" end="576" start="519" starttimestamp="1649721002230" timestamp="3655145" />
  <Command __id="1357" _type="CopyCommand" date="Mon Apr 11 20:50:57 EDT 2022" starttimestamp="1649721002230" timestamp="3655361" />
  <Command __id="1353" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:50:53 EDT 2022" docASTNodeCount="135" docActiveCodeLength="1074" docExpressionCount="88" docLength="1108" projectName="A6" starttimestamp="1649721002230" timestamp="3651740">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1359" _type="PauseCommand" date="Mon Apr 11 20:50:58 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3656367">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1006]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1360" _type="MoveCaretCommand" caretOffset="395" date="Mon Apr 11 20:50:58 EDT 2022" docOffset="395" starttimestamp="1649721002230" timestamp="3656472" />
  <Command __id="1362" _type="PauseCommand" date="Mon Apr 11 20:51:00 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3657915">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1443]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1361" _type="MoveCaretCommand" caretOffset="516" date="Mon Apr 11 20:51:00 EDT 2022" docOffset="516" starttimestamp="1649721002230" timestamp="3657915" />
  <Command __id="1364" _type="InsertStringCommand" date="Mon Apr 11 20:51:00 EDT 2022" starttimestamp="1649721002230" timestamp="3658292" timestamp2="3658292">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1366" _type="PasteCommand" date="Mon Apr 11 20:51:00 EDT 2022" starttimestamp="1649721002230" timestamp="3658643" />
  <Command __id="1367" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:51:01 EDT 2022" starttimestamp="1649721002230" timestamp="3659452" />
  <Command __id="1368" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:51:01 EDT 2022" starttimestamp="1649721002230" timestamp="3659554" />
  <Command __id="1369" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:51:01 EDT 2022" starttimestamp="1649721002230" timestamp="3659623" />
  <Command __id="1358" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:50:58 EDT 2022" docASTNodeCount="117" docActiveCodeLength="898" docExpressionCount="80" docLength="932" projectName="A6" starttimestamp="1649721002230" timestamp="3656367">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1363" _type="Insert" date="Mon Apr 11 20:51:00 EDT 2022" docASTNodeCount="121" docActiveCodeLength="956" docExpressionCount="82" docLength="990" length="58" offset="516" repeat="2" starttimestamp="1649721002230" timestamp="3658288" timestamp2="3658567">
    <text><![CDATA[ SocketChannelConnectListener, SocketChannelWriteListener,]]></text>
  </DocumentChange>
  <Command __id="1371" _type="PauseCommand" date="Mon Apr 11 20:51:05 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3662986">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3363]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1372" _type="MoveCaretCommand" caretOffset="168" date="Mon Apr 11 20:51:05 EDT 2022" docOffset="1902" starttimestamp="1649721002230" timestamp="3663202" />
  <Command __id="1374" _type="PauseCommand" date="Mon Apr 11 20:51:08 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3666122">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2920]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1373" _type="ShellCommand" date="Mon Apr 11 20:51:08 EDT 2022" starttimestamp="1649721002230" timestamp="3666122" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1375" _type="ShellCommand" date="Mon Apr 11 20:51:08 EDT 2022" starttimestamp="1649721002230" timestamp="3666212" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1393" _type="PauseCommand" date="Mon Apr 11 20:51:10 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3668454">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2123]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1392" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:51:10 EDT 2022" starttimestamp="1649721002230" timestamp="3668454" />
  <Command __id="1394" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:51:10 EDT 2022" starttimestamp="1649721002230" timestamp="3668554" />
  <Command __id="1395" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:51:10 EDT 2022" starttimestamp="1649721002230" timestamp="3668585" />
  <Command __id="1397" _type="PauseCommand" date="Mon Apr 11 20:51:15 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3673137">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4552]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1398" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:51:16 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3674614" type="Run" />
  <Command __id="1400" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:51:16 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3674615" type="Run" />
  <Command __id="1402" _type="PauseCommand" date="Mon Apr 11 20:51:18 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3675889">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1274]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1403" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:51:22 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3680404" type="Run" />
  <Command __id="1405" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:51:22 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3680404" type="Run" />
  <Command __id="1407" _type="PauseCommand" date="Mon Apr 11 20:51:24 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3682634">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2230]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1406" _type="ShellCommand" date="Mon Apr 11 20:51:24 EDT 2022" starttimestamp="1649721002230" timestamp="3682634" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1409" _type="PauseCommand" date="Mon Apr 11 20:51:26 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3684587">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1953]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1408" _type="ConsoleOutput" date="Mon Apr 11 20:51:26 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3684587" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 20:51:26 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test execution time (ms):8"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 20:51:26 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1411" _type="PauseCommand" date="Mon Apr 11 20:51:28 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3686647">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2060]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1410" _type="ConsoleOutput" date="Mon Apr 11 20:51:28 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3686647" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:93
Running second pass checks Mon Apr 11 20:51:28 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 20:51:28 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 20:51:28 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:93¶Running second pass checks Mon Apr 11 20:51:28 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 20:51:28 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Apr 11 20:51:2"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1413" _type="PauseCommand" date="Mon Apr 11 20:51:29 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3687675">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1028]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1412" _type="ConsoleOutput" date="Mon Apr 11 20:51:29 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3687675" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 20:51:29 EDT 2022
Generating checks:Mon Apr 11 20:51:29 EDT 2022
Finished Generating checks:Mon Apr 11 20:51:29 EDT 2022
Generating externals:Mon Apr 11 20:51:29 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:93¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 20:51:2"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 11 20:51:29 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 11 20:51:2"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 20:51:2"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1414" _type="ConsoleOutput" date="Mon Apr 11 20:51:30 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3687909" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 20:51:30 EDT 2022
Test execution time (ms):3413

A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.75
Test execution time (ms):16
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 20:51:"), Diff(DELETE,"29"), Diff(INSERT,"30"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 20:51:29 EDT 2022¶Finished Generating checks:Mon Apr 11 20:51:29 EDT 2022¶Generating externals:Mon Apr 11 20:51:29 EDT 2022"), Diff(INSERT,"Test execution time (ms):3413¶¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.75¶Test execution time (ms):16"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1415" _type="ConsoleOutput" date="Mon Apr 11 20:51:30 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3687915" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862

Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 20:51:30 EDT 2022¶Test execution time (ms):3413¶¶"), Diff(EQUAL,"A6Expected"), Diff(DELETE,"Interface"), Diff(INSERT,"Call"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"75"), Diff(INSERT,"13793103448275862¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"16"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1416" _type="ConsoleOutput" date="Mon Apr 11 20:51:30 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3687983" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.7

Test execution time (ms):5

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (302)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (296)
 |- readThread (3)
  |~ ClientReadThread.java (25)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (25)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (326)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (40)
   |~ ServerRemoteInterfaceRMI.java (34)
   |~ ServerRemoteObjectGIPC.java (314)
   |~ ServerRemoteObjectRMI.java (238)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (9)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A6Expected"), Diff(DELETE,"Call"), Diff(INSERT,"Signature"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"13793103448275862¶¶Test execution time (ms):9"), Diff(INSERT,"7¶¶Test execution time (ms):5¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1418" _type="PauseCommand" date="Mon Apr 11 20:51:31 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3689367">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1384]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1417" _type="ConsoleOutput" date="Mon Apr 11 20:51:31 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3689367" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@4a640048 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.7¶¶Test execution time (ms):5¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (40)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (314)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@4a640048 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1420" _type="PauseCommand" date="Mon Apr 11 20:51:36 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3694170">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4803]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1419" _type="ShellCommand" date="Mon Apr 11 20:51:36 EDT 2022" starttimestamp="1649721002230" timestamp="3694170" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1370" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:51:05 EDT 2022" docASTNodeCount="1186" docActiveCodeLength="9137" docExpressionCount="845" docLength="10006" projectName="A6" starttimestamp="1649721002230" timestamp="3662986">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.Tracer;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI {¶	¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	public void atomicBroadcast(boolean fake) {¶		return;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1376" _type="Insert" date="Mon Apr 11 20:51:08 EDT 2022" docASTNodeCount="1230" docActiveCodeLength="9397" docExpressionCount="865" docLength="10368" length="362" offset="9999" repeat="12" starttimestamp="1649721002230" timestamp="3666279" timestamp2="3666328">
    <text><![CDATA[

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1388" _type="Insert" date="Mon Apr 11 20:51:08 EDT 2022" docASTNodeCount="1244" docActiveCodeLength="9467" docExpressionCount="877" docLength="10438" length="70" offset="60" repeat="4" starttimestamp="1649721002230" timestamp="3666331" timestamp2="3666344">
    <text><![CDATA[
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;]]></text>
  </DocumentChange>
  <Command __id="1422" _type="PauseCommand" date="Mon Apr 11 20:51:54 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="3711797">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17626]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1424" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:51:55 EDT 2022" starttimestamp="1649721002230" timestamp="3713123" />
  <Command __id="1426" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:51:55 EDT 2022" starttimestamp="1649721002230" timestamp="3713129" />
  <Command __id="1421" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:51:54 EDT 2022" docASTNodeCount="1209" docActiveCodeLength="8747" docExpressionCount="854" docLength="9778" projectName="A6" starttimestamp="1649721002230" timestamp="3711796">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientOutCoupler;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {

	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="1428" _type="PauseCommand" date="Mon Apr 11 20:51:58 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3716066">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2937]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1429" _type="MoveCaretCommand" caretOffset="142" date="Mon Apr 11 20:51:58 EDT 2022" docOffset="382" starttimestamp="1649721002230" timestamp="3716318" />
  <Command __id="1431" _type="PauseCommand" date="Mon Apr 11 20:52:00 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3718433">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2115]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1430" _type="MoveCaretCommand" caretOffset="51" date="Mon Apr 11 20:52:00 EDT 2022" docOffset="291" starttimestamp="1649721002230" timestamp="3718433" />
  <Command __id="1433" _type="InsertStringCommand" date="Mon Apr 11 20:52:00 EDT 2022" starttimestamp="1649721002230" timestamp="3718767" timestamp2="3718767">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1427" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:51:58 EDT 2022" docASTNodeCount="201" docActiveCodeLength="1642" docExpressionCount="114" docLength="1642" projectName="A6" starttimestamp="1649721002230" timestamp="3716066">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC"), Diff(INSERT,", DistributedTags.RMI"), Diff(EQUAL,"})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})
public interface ServerRemoteInterfaceGIPC  extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;

	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;

	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;

	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;

	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;

	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1432" _type="Insert" date="Mon Apr 11 20:52:00 EDT 2022" docASTNodeCount="201" docActiveCodeLength="1644" docExpressionCount="114" docLength="1644" length="2" offset="291" starttimestamp="1649721002230" timestamp="3718754">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="1435" _type="PauseCommand" date="Mon Apr 11 20:52:02 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3720312">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1545]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1436" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:52:02 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3720453" />
  <Command __id="1434" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:52:02 EDT 2022" docASTNodeCount="1192" docActiveCodeLength="9094" docExpressionCount="840" docLength="10065" projectName="A6" starttimestamp="1649721002230" timestamp="3720312">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1438" _type="PauseCommand" date="Mon Apr 11 20:52:07 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3725352">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4899]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1437" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:52:07 EDT 2022" docASTNodeCount="201" docActiveCodeLength="1644" docExpressionCount="114" docLength="1644" projectName="A6" starttimestamp="1649721002230" timestamp="3725352">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶"), Diff(INSERT,"¶"), Diff(EQUAL,"@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;


@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})
public interface ServerRemoteInterfaceGIPC  extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;

	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;

	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;

	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;

	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;

	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="1439" _type="MoveCaretCommand" caretOffset="53" date="Mon Apr 11 20:52:07 EDT 2022" docOffset="293" starttimestamp="1649721002230" timestamp="3725520" />
  <Command __id="1441" _type="SelectTextCommand" caretOffset="519" date="Mon Apr 11 20:52:08 EDT 2022" end="576" start="519" starttimestamp="1649721002230" timestamp="3726234" />
  <Command __id="1443" _type="PauseCommand" date="Mon Apr 11 20:52:11 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3729021">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2787]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1442" _type="SelectTextCommand" caretOffset="255" date="Mon Apr 11 20:52:11 EDT 2022" end="391" start="255" starttimestamp="1649721002230" timestamp="3729021" />
  <Command __id="1444" _type="CopyCommand" date="Mon Apr 11 20:52:11 EDT 2022" starttimestamp="1649721002230" timestamp="3729175" />
  <Command __id="1446" _type="MoveCaretCommand" caretOffset="53" date="Mon Apr 11 20:52:12 EDT 2022" docOffset="293" starttimestamp="1649721002230" timestamp="3730159" />
  <Command __id="1448" _type="PasteCommand" date="Mon Apr 11 20:52:13 EDT 2022" starttimestamp="1649721002230" timestamp="3731150" />
  <Command __id="1450" _type="InsertStringCommand" date="Mon Apr 11 20:52:13 EDT 2022" starttimestamp="1649721002230" timestamp="3731443" timestamp2="3731443">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1451" _type="InsertStringCommand" date="Mon Apr 11 20:52:13 EDT 2022" starttimestamp="1649721002230" timestamp="3731444" timestamp2="3731444">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1452" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:52:14 EDT 2022" starttimestamp="1649721002230" timestamp="3731911" />
  <Command __id="1453" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:52:14 EDT 2022" starttimestamp="1649721002230" timestamp="3732007" />
  <Command __id="1454" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:52:14 EDT 2022" starttimestamp="1649721002230" timestamp="3732028" />
  <Command __id="1440" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:52:08 EDT 2022" docASTNodeCount="135" docActiveCodeLength="1074" docExpressionCount="88" docLength="1108" projectName="A6" starttimestamp="1649721002230" timestamp="3726103">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1445" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:52:12 EDT 2022" docASTNodeCount="201" docActiveCodeLength="1644" docExpressionCount="114" docLength="1644" projectName="A6" starttimestamp="1649721002230" timestamp="3730053">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1447" _type="Insert" date="Mon Apr 11 20:52:13 EDT 2022" docASTNodeCount="221" docActiveCodeLength="1782" docExpressionCount="132" docLength="1782" length="138" offset="293" repeat="2" starttimestamp="1649721002230" timestamp="3731134" timestamp2="3731431">
    <text><![CDATA[import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
]]></text>
  </DocumentChange>
  <Command __id="1456" _type="PauseCommand" date="Mon Apr 11 20:52:17 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3735374">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3346]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1457" _type="SelectTextCommand" caretOffset="255" date="Mon Apr 11 20:52:17 EDT 2022" end="391" start="255" starttimestamp="1649721002230" timestamp="3735475" />
  <Command __id="1459" _type="PauseCommand" date="Mon Apr 11 20:52:21 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3739104">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3629]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1458" _type="SelectTextCommand" caretOffset="519" date="Mon Apr 11 20:52:21 EDT 2022" end="576" start="519" starttimestamp="1649721002230" timestamp="3739104" />
  <Command __id="1460" _type="CopyCommand" date="Mon Apr 11 20:52:21 EDT 2022" starttimestamp="1649721002230" timestamp="3739293" />
  <Command __id="1461" _type="MoveCaretCommand" caretOffset="15" date="Mon Apr 11 20:52:22 EDT 2022" docOffset="15" starttimestamp="1649721002230" timestamp="3740254" />
  <Command __id="1463" _type="MoveCaretCommand" caretOffset="51" date="Mon Apr 11 20:52:23 EDT 2022" docOffset="51" starttimestamp="1649721002230" timestamp="3741315" />
  <Command __id="1465" _type="PauseCommand" date="Mon Apr 11 20:52:26 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3744448">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3133]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1464" _type="MoveCaretCommand" caretOffset="569" date="Mon Apr 11 20:52:26 EDT 2022" docOffset="569" starttimestamp="1649721002230" timestamp="3744448" />
  <Command __id="1466" _type="MoveCaretCommand" caretOffset="569" date="Mon Apr 11 20:52:26 EDT 2022" docOffset="569" starttimestamp="1649721002230" timestamp="3744448" />
  <Command __id="1468" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:52:27 EDT 2022" starttimestamp="1649721002230" timestamp="3744781" />
  <Command __id="1469" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:52:27 EDT 2022" starttimestamp="1649721002230" timestamp="3744781" />
  <Command __id="1471" _type="PauseCommand" date="Mon Apr 11 20:52:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3746102">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1321]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1470" _type="MoveCaretCommand" caretOffset="576" date="Mon Apr 11 20:52:28 EDT 2022" docOffset="576" starttimestamp="1649721002230" timestamp="3746102" />
  <Command __id="1472" _type="MoveCaretCommand" caretOffset="576" date="Mon Apr 11 20:52:28 EDT 2022" docOffset="576" starttimestamp="1649721002230" timestamp="3746102" />
  <Command __id="1474" _type="InsertStringCommand" date="Mon Apr 11 20:52:29 EDT 2022" starttimestamp="1649721002230" timestamp="3747032" timestamp2="3747032">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1475" _type="InsertStringCommand" date="Mon Apr 11 20:52:29 EDT 2022" starttimestamp="1649721002230" timestamp="3747032" timestamp2="3747032">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1477" _type="PasteCommand" date="Mon Apr 11 20:52:29 EDT 2022" starttimestamp="1649721002230" timestamp="3747443" />
  <Command __id="1479" _type="PauseCommand" date="Mon Apr 11 20:52:30 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3748586">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1143]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1478" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:52:30 EDT 2022" starttimestamp="1649721002230" timestamp="3748586" />
  <Command __id="1480" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:52:30 EDT 2022" starttimestamp="1649721002230" timestamp="3748690" />
  <Command __id="1481" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:52:30 EDT 2022" starttimestamp="1649721002230" timestamp="3748763" />
  <Command __id="1482" _type="ShellCommand" date="Mon Apr 11 20:52:31 EDT 2022" starttimestamp="1649721002230" timestamp="3748904" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1484" _type="PauseCommand" date="Mon Apr 11 20:52:32 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3750680">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1776]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1483" _type="ShellCommand" date="Mon Apr 11 20:52:32 EDT 2022" starttimestamp="1649721002230" timestamp="3750680" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1455" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:52:17 EDT 2022" docASTNodeCount="135" docActiveCodeLength="1074" docExpressionCount="88" docLength="1108" projectName="A6" starttimestamp="1649721002230" timestamp="3735374">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1462" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:52:23 EDT 2022" docASTNodeCount="221" docActiveCodeLength="1782" docExpressionCount="132" docLength="1782" projectName="A6" starttimestamp="1649721002230" timestamp="3741202">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶"), Diff(INSERT,"import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶"), Diff(EQUAL,"¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})
public interface ServerRemoteInterfaceGIPC  extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;

	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;

	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;

	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;

	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;

	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1467" _type="Delete" date="Mon Apr 11 20:52:27 EDT 2022" docASTNodeCount="221" docActiveCodeLength="1781" docExpressionCount="132" docLength="1781" endLine="15" length="1" offset="568" startLine="15" starttimestamp="1649721002230" timestamp="3744775">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="1473" _type="Insert" date="Mon Apr 11 20:52:29 EDT 2022" docASTNodeCount="225" docActiveCodeLength="1839" docExpressionCount="134" docLength="1839" length="58" offset="576" repeat="2" starttimestamp="1649721002230" timestamp="3747025" timestamp2="3747356">
    <text><![CDATA[ SocketChannelConnectListener, SocketChannelWriteListener,]]></text>
  </DocumentChange>
  <Command __id="1486" _type="PauseCommand" date="Mon Apr 11 20:52:35 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3753193">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2513]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1487" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:52:35 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3753393" />
  <Command __id="1489" _type="PauseCommand" date="Mon Apr 11 20:52:38 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3756685">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3292]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1488" _type="ShellCommand" date="Mon Apr 11 20:52:38 EDT 2022" starttimestamp="1649721002230" timestamp="3756685" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1490" _type="ShellCommand" date="Mon Apr 11 20:52:39 EDT 2022" starttimestamp="1649721002230" timestamp="3756815" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1508" _type="PauseCommand" date="Mon Apr 11 20:52:40 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3758676">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1751]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1511" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:52:47 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3765004" type="Run" />
  <Command __id="1514" _type="PauseCommand" date="Mon Apr 11 20:52:49 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3767245">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2241]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1513" _type="ShellCommand" date="Mon Apr 11 20:52:49 EDT 2022" starttimestamp="1649721002230" timestamp="3767245" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1516" _type="PauseCommand" date="Mon Apr 11 20:52:52 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3770073">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2828]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1515" _type="ConsoleOutput" date="Mon Apr 11 20:52:52 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3770073" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 20:52:52 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@4a640048 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 20:52:52 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1518" _type="PauseCommand" date="Mon Apr 11 20:52:54 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3772203">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2130]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1517" _type="ConsoleOutput" date="Mon Apr 11 20:52:54 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3772203" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:93
Running second pass checks Mon Apr 11 20:52:54 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 20:52:54 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:93¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Mon Apr 11 20:52:54 EDT 2022¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Mon Apr 11 20:52:5"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1519" _type="ConsoleOutput" date="Mon Apr 11 20:52:54 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3772265" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Apr 11 20:52:54 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:93¶Running second pass checks Mon Apr 11 20:52:54 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Apr 11 20:52:54 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1521" _type="PauseCommand" date="Mon Apr 11 20:52:55 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3773295">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1030]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1520" _type="ConsoleOutput" date="Mon Apr 11 20:52:55 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3773295" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 20:52:55 EDT 2022
Generating checks:Mon Apr 11 20:52:55 EDT 2022
Finished Generating checks:Mon Apr 11 20:52:55 EDT 2022
Generating externals:Mon Apr 11 20:52:55 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Mon Apr 11 20:52:55 EDT 2022¶Generating checks:Mon Apr 11 20:52:55 EDT 2022¶Finished Generating checks:Mon Apr 11 20:52:55 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 20:52:5"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1522" _type="ConsoleOutput" date="Mon Apr 11 20:52:55 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3773579" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 20:52:55 EDT 2022
Test execution time (ms):3472
A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.75

Test execution time (ms):26
A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862

Test execution time (ms):19
A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.7

Test execution time (ms):10
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 20:52:55 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 20:52:55 EDT 2022¶Finished Generating checks:Mon Apr 11 20:52:55 EDT 2022¶Generating externals:Mon Apr 11 20:52:55 EDT 2022"), Diff(INSERT,"Test execution time (ms):3472¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.75¶¶Test execution time (ms):26¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶¶Test execution time (ms):19¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.7¶¶Test execution time (ms):10"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1523" _type="ConsoleOutput" date="Mon Apr 11 20:52:55 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3773671" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (302)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (296)
 |- readThread (3)
  |~ ClientReadThread.java (25)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (25)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (326)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (43)
   |~ ServerRemoteInterfaceRMI.java (34)
   |~ ServerRemoteObjectGIPC.java (334)
   |~ ServerRemoteObjectRMI.java (238)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (9)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 20:52:55 EDT 2022¶Test execution time (ms):3472¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.75¶¶Test execution time (ms):26¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶¶Test execution time (ms):19¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.7¶¶Test execution time (ms):10"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (43)¶   |~ ServerRemoteInterfaceRMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (334)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1525" _type="PauseCommand" date="Mon Apr 11 20:52:58 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3776395">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2724]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1524" _type="ConsoleOutput" date="Mon Apr 11 20:52:58 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3776395" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3c59b42e . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (326)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (43)¶   |~ ServerRemo"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6Expec"), Diff(EQUAL,"te"), Diff(INSERT,"d"), Diff(EQUAL,"Interface"), Diff(DELETE,"RMI.java (34)¶   |~ ServerRemoteObjectGIPC.java (334)¶   |~ ServerRemoteObjectRMI.java (238)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)"), Diff(INSERT,"s@3c59b42e . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1527" _type="PauseCommand" date="Mon Apr 11 20:53:07 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3784959">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8564]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1526" _type="ShellCommand" date="Mon Apr 11 20:53:07 EDT 2022" starttimestamp="1649721002230" timestamp="3784959" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1485" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:52:35 EDT 2022" docASTNodeCount="1209" docActiveCodeLength="8747" docExpressionCount="854" docLength="9778" projectName="A6" starttimestamp="1649721002230" timestamp="3753193">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1491" _type="Insert" date="Mon Apr 11 20:52:39 EDT 2022" docASTNodeCount="1253" docActiveCodeLength="9007" docExpressionCount="874" docLength="10140" length="362" offset="9768" repeat="12" starttimestamp="1649721002230" timestamp="3756882" timestamp2="3756921">
    <text><![CDATA[

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1503" _type="Insert" date="Mon Apr 11 20:52:39 EDT 2022" docASTNodeCount="1267" docActiveCodeLength="9077" docExpressionCount="886" docLength="10210" length="70" offset="26" repeat="4" starttimestamp="1649721002230" timestamp="3756925" timestamp2="3756934">
    <text><![CDATA[import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
]]></text>
  </DocumentChange>
  <Command __id="1529" _type="PauseCommand" date="Mon Apr 11 20:53:42 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="3820509">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[35550]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1530" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:53:42 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3820703" />
  <Command __id="1528" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:53:42 EDT 2022" docASTNodeCount="213" docActiveCodeLength="1727" docExpressionCount="118" docLength="1745" projectName="A6" starttimestamp="1649721002230" timestamp="3820509">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	¶	//A5 fake methods:¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	void createGIPCRegistry() throws RemoteException;¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1532" _type="PauseCommand" date="Mon Apr 11 20:53:44 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3822264">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1561]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1533" _type="MoveCaretCommand" caretOffset="634" date="Mon Apr 11 20:53:44 EDT 2022" docOffset="634" starttimestamp="1649721002230" timestamp="3822359" />
  <Command __id="1535" _type="PauseCommand" date="Mon Apr 11 20:53:46 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3824677">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2318]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1534" _type="SelectTextCommand" caretOffset="293" date="Mon Apr 11 20:53:46 EDT 2022" end="429" start="293" starttimestamp="1649721002230" timestamp="3824677" />
  <Command __id="1536" _type="SelectTextCommand" caretOffset="293" date="Mon Apr 11 20:53:46 EDT 2022" end="429" start="293" starttimestamp="1649721002230" timestamp="3824677" />
  <Command __id="1537" _type="CopyCommand" date="Mon Apr 11 20:53:47 EDT 2022" starttimestamp="1649721002230" timestamp="3824956" />
  <Command __id="1531" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:53:44 EDT 2022" docASTNodeCount="225" docActiveCodeLength="1839" docExpressionCount="134" docLength="1839" projectName="A6" starttimestamp="1649721002230" timestamp="3822264">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC "), Diff(DELETE," "), Diff(EQUAL,"extends"), Diff(INSERT," SocketChannelConnectListener, SocketChannelWriteListener,"), Diff(EQUAL," Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})
public interface ServerRemoteInterfaceGIPC extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;

	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;

	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;

	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;

	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;

	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="1539" _type="PauseCommand" date="Mon Apr 11 20:53:48 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3826276">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1320]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1540" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:53:48 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3826376" />
  <Command __id="1542" _type="PauseCommand" date="Mon Apr 11 20:53:50 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3828028">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1652]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1552" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:53:52 EDT 2022" starttimestamp="1649721002230" timestamp="3830627" />
  <Command __id="1554" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:53:52 EDT 2022" starttimestamp="1649721002230" timestamp="3830631" />
  <Command __id="1538" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:53:48 EDT 2022" docASTNodeCount="213" docActiveCodeLength="1727" docExpressionCount="118" docLength="1745" projectName="A6" starttimestamp="1649721002230" timestamp="3826276">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	¶	//A5 fake methods:¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	void createGIPCRegistry() throws RemoteException;¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1543" _type="Insert" date="Mon Apr 11 20:53:50 EDT 2022" docASTNodeCount="233" docActiveCodeLength="1867" docExpressionCount="136" docLength="1885" length="140" offset="291" repeat="3" starttimestamp="1649721002230" timestamp="3828303" timestamp2="3828944">
    <text><![CDATA[
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
]]></text>
  </DocumentChange>
  <Command __id="1556" _type="PauseCommand" date="Mon Apr 11 20:53:54 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3832304">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1673]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1557" _type="SelectTextCommand" caretOffset="293" date="Mon Apr 11 20:53:54 EDT 2022" end="429" start="293" starttimestamp="1649721002230" timestamp="3832411" />
  <Command __id="1559" _type="PauseCommand" date="Mon Apr 11 20:53:59 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3837347">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4936]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1558" _type="SelectTextCommand" caretOffset="577" date="Mon Apr 11 20:53:59 EDT 2022" end="634" start="577" starttimestamp="1649721002230" timestamp="3837347" />
  <Command __id="1560" _type="SelectTextCommand" caretOffset="577" date="Mon Apr 11 20:53:59 EDT 2022" end="634" start="577" starttimestamp="1649721002230" timestamp="3837347" />
  <Command __id="1561" _type="CopyCommand" date="Mon Apr 11 20:53:59 EDT 2022" starttimestamp="1649721002230" timestamp="3837599" />
  <Command __id="1563" _type="MoveCaretCommand" caretOffset="51" date="Mon Apr 11 20:54:00 EDT 2022" docOffset="431" starttimestamp="1649721002230" timestamp="3838686" />
  <Command __id="1565" _type="PauseCommand" date="Mon Apr 11 20:54:03 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3840849">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2163]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1564" _type="MoveCaretCommand" caretOffset="175" date="Mon Apr 11 20:54:03 EDT 2022" docOffset="555" starttimestamp="1649721002230" timestamp="3840849" />
  <Command __id="1567" _type="PasteCommand" date="Mon Apr 11 20:54:03 EDT 2022" starttimestamp="1649721002230" timestamp="3841252" />
  <Command __id="1569" _type="InsertStringCommand" date="Mon Apr 11 20:54:03 EDT 2022" starttimestamp="1649721002230" timestamp="3841737" timestamp2="3841737">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1570" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:54:04 EDT 2022" starttimestamp="1649721002230" timestamp="3842148" />
  <Command __id="1571" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:54:04 EDT 2022" starttimestamp="1649721002230" timestamp="3842249" />
  <Command __id="1572" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:54:04 EDT 2022" starttimestamp="1649721002230" timestamp="3842321" />
  <Command __id="1573" _type="ShellCommand" date="Mon Apr 11 20:54:04 EDT 2022" starttimestamp="1649721002230" timestamp="3842493" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1575" _type="PauseCommand" date="Mon Apr 11 20:54:06 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3844311">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1818]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1574" _type="ShellCommand" date="Mon Apr 11 20:54:06 EDT 2022" starttimestamp="1649721002230" timestamp="3844311" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1555" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:53:54 EDT 2022" docASTNodeCount="225" docActiveCodeLength="1839" docExpressionCount="134" docLength="1839" projectName="A6" starttimestamp="1649721002230" timestamp="3832304">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1562" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:54:00 EDT 2022" docASTNodeCount="233" docActiveCodeLength="1867" docExpressionCount="136" docLength="1885" projectName="A6" starttimestamp="1649721002230" timestamp="3838580">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶"), Diff(INSERT,"import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶"), Diff(EQUAL,"@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	¶	//A5 fake methods:¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	void createGIPCRegistry() throws RemoteException;¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceRMI  extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	
	//A5 fake methods:
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;
	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;
	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	void createGIPCRegistry() throws RemoteException;
	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1566" _type="Insert" date="Mon Apr 11 20:54:03 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1925" docExpressionCount="138" docLength="1943" length="58" offset="555" repeat="2" starttimestamp="1649721002230" timestamp="3841153" timestamp2="3841730">
    <text><![CDATA[SocketChannelConnectListener, SocketChannelWriteListener, ]]></text>
  </DocumentChange>
  <Command __id="1577" _type="PauseCommand" date="Mon Apr 11 20:54:09 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3846958">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2647]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1578" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:54:09 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3847182" />
  <Command __id="1580" _type="PauseCommand" date="Mon Apr 11 20:54:14 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3851998">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4816]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1579" _type="ShellCommand" date="Mon Apr 11 20:54:14 EDT 2022" starttimestamp="1649721002230" timestamp="3851998" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1581" _type="ShellCommand" date="Mon Apr 11 20:54:14 EDT 2022" starttimestamp="1649721002230" timestamp="3852186" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1599" _type="PauseCommand" date="Mon Apr 11 20:54:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3853588">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1334]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1598" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:54:15 EDT 2022" starttimestamp="1649721002230" timestamp="3853588" />
  <Command __id="1600" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:54:15 EDT 2022" starttimestamp="1649721002230" timestamp="3853689" />
  <Command __id="1601" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:54:15 EDT 2022" starttimestamp="1649721002230" timestamp="3853767" />
  <Command __id="1576" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:54:09 EDT 2022" docASTNodeCount="885" docActiveCodeLength="6488" docExpressionCount="614" docLength="7252" projectName="A6" starttimestamp="1649721002230" timestamp="3846958">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		IPCMechanism mechanism = getIPCMechanism();
		setIPCMechanism(mechanism);
		boolean broadcast = true;
		setBroadcastMetaState(broadcast);
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}

	@Override
	public void createGIPCRegistry() throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,
			int aProposalNumber, boolean broadcast) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1582" _type="Insert" date="Mon Apr 11 20:54:14 EDT 2022" docASTNodeCount="929" docActiveCodeLength="6748" docExpressionCount="634" docLength="7614" length="362" offset="7245" repeat="12" starttimestamp="1649721002230" timestamp="3852232" timestamp2="3852252">
    <text><![CDATA[

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1594" _type="Insert" date="Mon Apr 11 20:54:14 EDT 2022" docASTNodeCount="943" docActiveCodeLength="6818" docExpressionCount="646" docLength="7684" length="70" offset="26" repeat="4" starttimestamp="1649721002230" timestamp="3852254" timestamp2="3852259">
    <text><![CDATA[import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
]]></text>
  </DocumentChange>
  <Command __id="1603" _type="PauseCommand" date="Mon Apr 11 20:54:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3857529">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3762]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1604" _type="MoveCaretCommand" caretOffset="138" date="Mon Apr 11 20:54:19 EDT 2022" docOffset="1787" starttimestamp="1649721002230" timestamp="3857739" />
  <Command __id="1606" _type="PauseCommand" date="Mon Apr 11 20:54:24 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3862378">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4639]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1605" _type="ShellCommand" date="Mon Apr 11 20:54:24 EDT 2022" starttimestamp="1649721002230" timestamp="3862378" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1607" _type="ShellCommand" date="Mon Apr 11 20:54:24 EDT 2022" starttimestamp="1649721002230" timestamp="3862555" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1625" _type="PauseCommand" date="Mon Apr 11 20:54:26 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3864332">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1671]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1628" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:54:42 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3880235" type="Run" />
  <Command __id="1631" _type="PauseCommand" date="Mon Apr 11 20:54:44 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3882357">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2122]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1630" _type="ShellCommand" date="Mon Apr 11 20:54:44 EDT 2022" starttimestamp="1649721002230" timestamp="3882357" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1633" _type="PauseCommand" date="Mon Apr 11 20:54:46 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3884650">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2293]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1632" _type="ConsoleOutput" date="Mon Apr 11 20:54:46 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3884650" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 20:54:46 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3c59b42e . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 20:54:46 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1635" _type="PauseCommand" date="Mon Apr 11 20:54:48 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3886701">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2051]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1634" _type="ConsoleOutput" date="Mon Apr 11 20:54:48 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3886701" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:93
Running second pass checks Mon Apr 11 20:54:48 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 20:54:48 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 20:54:48 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:93¶Running second pass checks Mon Apr 11 20:54:48 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 20:54:48 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Apr 11 20:54:4"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1636" _type="ConsoleOutput" date="Mon Apr 11 20:54:49 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3887676" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 20:54:49 EDT 2022
Generating checks:Mon Apr 11 20:54:49 EDT 2022
Finished Generating checks:Mon Apr 11 20:54:49 EDT 2022
Generating externals:Mon Apr 11 20:54:49 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:93¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 20:54:4"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 11 20:54:49 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 11 20:54:4"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 20:54:4"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1637" _type="ConsoleOutput" date="Mon Apr 11 20:54:50 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3888019" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 20:54:50 EDT 2022
Test execution time (ms):3464

A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.8571428571428571
Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 20:54:"), Diff(DELETE,"49"), Diff(INSERT,"50"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 20:54:49 EDT 2022¶Finished Generating checks:Mon Apr 11 20:54:49 EDT 2022¶Generating externals:Mon Apr 11 20:54:49 EDT 2022"), Diff(INSERT,"Test execution time (ms):3464¶¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.8571428571428571¶Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1638" _type="ConsoleOutput" date="Mon Apr 11 20:54:50 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3888082" type="ConsoleOutput">
    <outputString><![CDATA[
A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862
Test execution time (ms):7
A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.8

Test execution time (ms):5

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (302)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (296)
 |- readThread (3)
  |~ ClientReadThread.java (25)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (25)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (346)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (43)
   |~ ServerRemoteInterfaceRMI.java (37)
   |~ ServerRemoteObjectGIPC.java (334)
   |~ ServerRemoteObjectRMI.java (258)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 20:54:50 EDT 202"), Diff(INSERT,"¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.1379310344827586"), Diff(EQUAL,"2¶Test execution time (ms):"), Diff(DELETE,"3464¶"), Diff(INSERT,"7"), Diff(EQUAL,"¶A6Expected"), Diff(DELETE,"Interfac"), Diff(INSERT,"Signatur"), Diff(EQUAL,"es did not pass completely:See console trace about lines failing  this check%0.8"), Diff(DELETE,"571428571428571¶Test execution time (ms):26"), Diff(INSERT,"¶¶Test execution time (ms):5¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (346)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (43)¶   |~ ServerRemoteInterfaceRMI.java (37)¶   |~ ServerRemoteObjectGIPC.java (334)¶   |~ ServerRemoteObjectRMI.java (258)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1639" _type="ConsoleOutput" date="Mon Apr 11 20:54:50 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3888143" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):33
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶Test execution time (ms):7¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.8¶¶Test execution time (ms):5¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (346)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (43)¶   |~ ServerRemoteInterfaceRMI.java (37)¶   |~ ServerRemoteObjectGIPC.java (334)¶   |~ ServerRemoteObjectRMI.java (258)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)"), Diff(INSERT,"Test execution time (ms):33"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1641" _type="PauseCommand" date="Mon Apr 11 20:54:52 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3890384">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2241]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1640" _type="ConsoleOutput" date="Mon Apr 11 20:54:52 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3890384" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@562593bd . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):33"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@562593bd . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1643" _type="PauseCommand" date="Mon Apr 11 20:54:57 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3895115">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4731]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1642" _type="ShellCommand" date="Mon Apr 11 20:54:57 EDT 2022" starttimestamp="1649721002230" timestamp="3895115" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1645" _type="PauseCommand" date="Mon Apr 11 20:55:05 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="3903415">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8300]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1644" _type="ShellCommand" date="Mon Apr 11 20:55:05 EDT 2022" starttimestamp="1649721002230" timestamp="3903415" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1647" _type="PauseCommand" date="Mon Apr 11 20:55:17 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="3914808">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11393]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1646" _type="ShellCommand" date="Mon Apr 11 20:55:17 EDT 2022" starttimestamp="1649721002230" timestamp="3914808" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1649" _type="SelectTextCommand" caretOffset="577" date="Mon Apr 11 20:55:17 EDT 2022" end="634" start="577" starttimestamp="1649721002230" timestamp="3915062" />
  <Command __id="1651" _type="PauseCommand" date="Mon Apr 11 20:55:41 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="3938797">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[23735]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1650" _type="MoveCaretCommand" caretOffset="634" date="Mon Apr 11 20:55:41 EDT 2022" docOffset="634" starttimestamp="1649721002230" timestamp="3938797" />
  <Command __id="1652" _type="MoveCaretCommand" caretOffset="634" date="Mon Apr 11 20:55:41 EDT 2022" docOffset="634" starttimestamp="1649721002230" timestamp="3938797" />
  <Command __id="1654" _type="PauseCommand" date="Mon Apr 11 20:55:45 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3943200">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4403]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1602" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:54:19 EDT 2022" docASTNodeCount="1249" docActiveCodeLength="9152" docExpressionCount="876" docLength="10251" projectName="A6" starttimestamp="1649721002230" timestamp="3857529">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC"), Diff(INSERT,", DistributedTags.NIO"), Diff(EQUAL,"})¶public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1608" _type="Insert" date="Mon Apr 11 20:54:24 EDT 2022" docASTNodeCount="1293" docActiveCodeLength="9412" docExpressionCount="896" docLength="10613" length="362" offset="10244" repeat="12" starttimestamp="1649721002230" timestamp="3862620" timestamp2="3862659">
    <text><![CDATA[

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1620" _type="Insert" date="Mon Apr 11 20:54:24 EDT 2022" docASTNodeCount="1307" docActiveCodeLength="9482" docExpressionCount="908" docLength="10683" length="70" offset="19" repeat="4" starttimestamp="1649721002230" timestamp="3862661" timestamp2="3862676">
    <text><![CDATA[import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
]]></text>
  </DocumentChange>
  <Command __id="1648" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:55:17 EDT 2022" docASTNodeCount="225" docActiveCodeLength="1839" docExpressionCount="134" docLength="1839" projectName="A6" starttimestamp="1649721002230" timestamp="3914914">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1653" _type="SelectTextCommand" caretOffset="607" date="Mon Apr 11 20:55:45 EDT 2022" end="634" start="607" starttimestamp="1649721002230" timestamp="3943200" />
  <Command __id="1655" _type="SelectTextCommand" caretOffset="607" date="Mon Apr 11 20:55:45 EDT 2022" end="634" start="607" starttimestamp="1649721002230" timestamp="3943200" />
  <DocumentChange __id="1656" _type="Delete" date="Mon Apr 11 20:55:45 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1810" docExpressionCount="132" docLength="1810" endLine="15" length="29" offset="605" repeat="3" startLine="15" starttimestamp="1649721002230" timestamp="3943503" timestamp2="3944866">
    <text><![CDATA[, SocketChannelWriteListener,]]></text>
  </DocumentChange>
  <Command __id="1657" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:55:45 EDT 2022" starttimestamp="1649721002230" timestamp="3943517" />
  <Command __id="1658" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:55:45 EDT 2022" starttimestamp="1649721002230" timestamp="3943517" />
  <Command __id="1661" _type="PauseCommand" date="Mon Apr 11 20:55:46 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3944699">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1182]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1660" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:55:46 EDT 2022" starttimestamp="1649721002230" timestamp="3944699" />
  <Command __id="1662" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:55:46 EDT 2022" starttimestamp="1649721002230" timestamp="3944699" />
  <Command __id="1664" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="3944870" />
  <Command __id="1665" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="3944870" />
  <Command __id="1684" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:56:00 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3958404" type="Run" />
  <Command __id="1686" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:56:00 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="3958404" type="Run" />
  <Command __id="1688" _type="PauseCommand" date="Mon Apr 11 20:56:03 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3961052">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2647]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1687" _type="ShellCommand" date="Mon Apr 11 20:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="3961051" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1690" _type="PauseCommand" date="Mon Apr 11 20:56:06 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3964537">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3486]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1689" _type="ConsoleOutput" date="Mon Apr 11 20:56:06 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3964537" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 20:56:06 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@562593bd . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 20:56:06 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1692" _type="PauseCommand" date="Mon Apr 11 20:56:08 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3966620">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2083]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1691" _type="ConsoleOutput" date="Mon Apr 11 20:56:08 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3966620" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:93
Running second pass checks Mon Apr 11 20:56:08 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 20:56:08 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 20:56:08 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:93¶Running second pass checks Mon Apr 11 20:56:08 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 20:56:08 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Apr 11 20:56:0"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1694" _type="PauseCommand" date="Mon Apr 11 20:56:09 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3967677">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1057]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1693" _type="ConsoleOutput" date="Mon Apr 11 20:56:09 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3967677" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 20:56:09 EDT 2022
Generating checks:Mon Apr 11 20:56:09 EDT 2022
Finished Generating checks:Mon Apr 11 20:56:09 EDT 2022
Generating externals:Mon Apr 11 20:56:09 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:93¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 20:56:0"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 11 20:56:09 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 11 20:56:0"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 20:56:0"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1695" _type="ConsoleOutput" date="Mon Apr 11 20:56:10 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3968079" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 20:56:10 EDT 2022
Test execution time (ms):3622
A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.8571428571428571

Test execution time (ms):10
A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862

Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 20:56:"), Diff(INSERT,"1"), Diff(EQUAL,"0"), Diff(DELETE,"9"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 20:56:09 EDT 2022¶Finished Generating checks:Mon Apr 11 20:56:09 EDT 2022¶Generating externals:Mon Apr 11 20:56:09 EDT 2022"), Diff(INSERT,"Test execution time (ms):3622¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.8571428571428571¶¶Test execution time (ms):10¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶¶Test execution time (ms):8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1696" _type="ConsoleOutput" date="Mon Apr 11 20:56:10 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3968160" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.8

Test execution time (ms):9

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (302)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (296)
 |- readThread (3)
  |~ ClientReadThread.java (25)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (25)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (346)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (43)
   |~ ServerRemoteInterfaceRMI.java (37)
   |~ ServerRemoteObjectGIPC.java (334)
   |~ ServerRemoteObjectRMI.java (258)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (9)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 20:56:10 EDT 2022¶Test execution time (ms):3622¶"), Diff(EQUAL,"A6Expected"), Diff(DELETE,"Interfac"), Diff(INSERT,"Signatur"), Diff(EQUAL,"es did not pass completely:See console trace about lines failing  this check%0.8"), Diff(DELETE,"571428571428571"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"10¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶¶Test execution time (ms):8"), Diff(INSERT,"9¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (346)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (43)¶   |~ ServerRemoteInterfaceRMI.java (37)¶   |~ ServerRemoteObjectGIPC.java (334)¶   |~ ServerRemoteObjectRMI.java (258)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1698" _type="PauseCommand" date="Mon Apr 11 20:56:11 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="3969616">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1456]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1697" _type="ConsoleOutput" date="Mon Apr 11 20:56:11 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="3969616" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@48f9440f . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.8¶¶Test execution time (ms):9¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (346)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (43)¶   |~ ServerRemoteInterfaceRMI.java (37)¶   |~ ServerRemoteObjectGIPC.java (334)¶   |~ ServerRemoteObjectRMI.java (258)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@48f9440f . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1700" _type="PauseCommand" date="Mon Apr 11 20:56:32 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="3990260">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[20644]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1699" _type="ShellCommand" date="Mon Apr 11 20:56:32 EDT 2022" starttimestamp="1649721002230" timestamp="3990260" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1702" _type="MoveCaretCommand" caretOffset="133" date="Mon Apr 11 20:56:33 EDT 2022" docOffset="1857" starttimestamp="1649721002230" timestamp="3990779" />
  <DocumentChange __id="1666" _type="Insert" date="Mon Apr 11 20:55:47 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1811" docExpressionCount="133" docLength="1811" length="1" offset="605" starttimestamp="1649721002230" timestamp="3945582">
    <text><![CDATA[,]]></text>
  </DocumentChange>
  <Command __id="1701" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:56:32 EDT 2022" docASTNodeCount="1307" docActiveCodeLength="9482" docExpressionCount="908" docLength="10683" projectName="A6" starttimestamp="1649721002230" timestamp="3990580">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶"), Diff(INSERT,"import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶"), Diff(EQUAL,"import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(INSERT,"	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="1704" _type="PauseCommand" date="Mon Apr 11 20:56:36 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="3994100">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3321]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1705" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:56:36 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="3994313" />
  <Command __id="1703" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:56:36 EDT 2022" docASTNodeCount="943" docActiveCodeLength="6818" docExpressionCount="646" docLength="7684" projectName="A6" starttimestamp="1649721002230" timestamp="3994100">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶"), Diff(INSERT,"import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶"), Diff(EQUAL,"import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(INSERT,"	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		IPCMechanism mechanism = getIPCMechanism();
		setIPCMechanism(mechanism);
		boolean broadcast = true;
		setBroadcastMetaState(broadcast);
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}

	@Override
	public void createGIPCRegistry() throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,
			int aProposalNumber, boolean broadcast) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="1707" _type="PauseCommand" date="Mon Apr 11 20:56:51 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4008933">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14620]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1708" _type="MoveCaretCommand" caretOffset="233" date="Mon Apr 11 20:56:51 EDT 2022" docOffset="613" starttimestamp="1649721002230" timestamp="4009154" />
  <Command __id="1706" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:56:51 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1925" docExpressionCount="138" docLength="1943" projectName="A6" starttimestamp="1649721002230" timestamp="4008933">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends"), Diff(INSERT," SocketChannelConnectListener, SocketChannelWriteListener,"), Diff(EQUAL," Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	¶	//A5 fake methods:¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	void createGIPCRegistry() throws RemoteException;¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceRMI  extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	
	//A5 fake methods:
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;
	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;
	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	void createGIPCRegistry() throws RemoteException;
	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="1710" _type="PauseCommand" date="Mon Apr 11 20:56:52 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4010479">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1325]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1711" _type="MoveCaretCommand" caretOffset="606" date="Mon Apr 11 20:56:52 EDT 2022" docOffset="606" starttimestamp="1649721002230" timestamp="4010701" />
  <Command __id="1709" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:56:52 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1811" docExpressionCount="133" docLength="1811" projectName="A6" starttimestamp="1649721002230" timestamp="4010479">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC extends SocketChannelConnectListener,"), Diff(DELETE," SocketChannelWriteListener,"), Diff(EQUAL," Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})
public interface ServerRemoteInterfaceGIPC extends SocketChannelConnectListener, Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;

	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;

	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;

	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;

	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;

	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="1713" _type="PauseCommand" date="Mon Apr 11 20:56:57 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4014995">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4294]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1714" _type="MoveCaretCommand" caretOffset="233" date="Mon Apr 11 20:56:57 EDT 2022" docOffset="613" starttimestamp="1649721002230" timestamp="4015198" />
  <Command __id="1716" _type="PauseCommand" date="Mon Apr 11 20:57:01 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4018845">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3647]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1715" _type="SelectTextCommand" caretOffset="205" date="Mon Apr 11 20:57:01 EDT 2022" end="233" start="205" starttimestamp="1649721002230" timestamp="4018845" />
  <Command __id="1718" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:57:01 EDT 2022" starttimestamp="1649721002230" timestamp="4019400" />
  <Command __id="1720" _type="PauseCommand" date="Mon Apr 11 20:57:03 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4021417">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2017]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1723" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:57:04 EDT 2022" starttimestamp="1649721002230" timestamp="4022606" />
  <Command __id="1725" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:57:04 EDT 2022" starttimestamp="1649721002230" timestamp="4022612" />
  <Command __id="1712" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:56:57 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1925" docExpressionCount="138" docLength="1943" projectName="A6" starttimestamp="1649721002230" timestamp="4014995">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	¶	//A5 fake methods:¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	void createGIPCRegistry() throws RemoteException;¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1717" _type="Delete" date="Mon Apr 11 20:57:01 EDT 2022" docASTNodeCount="235" docActiveCodeLength="1897" docExpressionCount="137" docLength="1915" endLine="15" length="28" offset="585" startLine="15" starttimestamp="1649721002230" timestamp="4019392">
    <text><![CDATA[SocketChannelWriteListener, ]]></text>
  </DocumentChange>
  <Command __id="1727" _type="PauseCommand" date="Mon Apr 11 20:57:06 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4024719">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2107]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1728" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:57:07 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="4024925" />
  <Command __id="1730" _type="PauseCommand" date="Mon Apr 11 20:57:13 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4030830">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5905]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1729" _type="ShellCommand" date="Mon Apr 11 20:57:13 EDT 2022" starttimestamp="1649721002230" timestamp="4030830" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1732" _type="PauseCommand" date="Mon Apr 11 20:57:14 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4031996">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1166]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1731" _type="ShellCommand" date="Mon Apr 11 20:57:14 EDT 2022" starttimestamp="1649721002230" timestamp="4031996" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1733" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 20:57:14 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="4032082" type="Run" />
  <Command __id="1735" _type="PauseCommand" date="Mon Apr 11 20:57:16 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4034394">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2312]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1734" _type="ShellCommand" date="Mon Apr 11 20:57:16 EDT 2022" starttimestamp="1649721002230" timestamp="4034394" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1737" _type="PauseCommand" date="Mon Apr 11 20:57:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4037142">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2748]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1736" _type="ConsoleOutput" date="Mon Apr 11 20:57:19 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4037142" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 20:57:19 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@48f9440f . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 20:57:19 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1739" _type="PauseCommand" date="Mon Apr 11 20:57:21 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4039215">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2073]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1738" _type="ConsoleOutput" date="Mon Apr 11 20:57:21 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4039215" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:93
Running second pass checks Mon Apr 11 20:57:21 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 20:57:21 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 20:57:21 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:93¶Running second pass checks Mon Apr 11 20:57:21 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 20:57:21 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Apr 11 20:57:"), Diff(INSERT,"2"), Diff(EQUAL,"1"), Diff(DELETE,"9"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1740" _type="ConsoleOutput" date="Mon Apr 11 20:57:22 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4040181" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 20:57:22 EDT 2022
Generating checks:Mon Apr 11 20:57:22 EDT 2022
Finished Generating checks:Mon Apr 11 20:57:22 EDT 2022
Generating externals:Mon Apr 11 20:57:22 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:93¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 20:57:2"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 11 20:57:22 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 11 20:57:2"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 20:57:2"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1741" _type="ConsoleOutput" date="Mon Apr 11 20:57:22 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4040494" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 20:57:22 EDT 2022
Test execution time (ms):3379

A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.75
Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 20:57:22 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 20:57:22 EDT 2022¶Finished Generating checks:Mon Apr 11 20:57:22 EDT 2022¶Generating externals:Mon Apr 11 20:57:22 EDT 2022"), Diff(INSERT,"Test execution time (ms):3379¶¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.75¶Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1742" _type="ConsoleOutput" date="Mon Apr 11 20:57:22 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4040556" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862

Test execution time (ms):23
A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.8

Test execution time (ms):10
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 20:57:22 EDT 2022"), Diff(INSERT,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(INSERT,"2"), Diff(EQUAL,"3"), Diff(DELETE,"379¶"), Diff(EQUAL,"¶A6Expected"), Diff(DELETE,"Interfac"), Diff(INSERT,"Signatur"), Diff(EQUAL,"es did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"75"), Diff(INSERT,"8¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"24"), Diff(INSERT,"10"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1743" _type="ConsoleOutput" date="Mon Apr 11 20:57:22 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4040642" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (302)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (296)
 |- readThread (3)
  |~ ClientReadThread.java (25)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (25)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (346)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (43)
   |~ ServerRemoteInterfaceRMI.java (37)
   |~ ServerRemoteObjectGIPC.java (334)
   |~ ServerRemoteObjectRMI.java (258)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (9)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶¶Test execution time (ms):23¶A6ExpectedSignatures did not pass completely:See consol"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (346)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (43)¶   |~ ServerRemoteInterfaceRMI.java (37)¶   |~ ServerRemoteObjectGIPC.java (334)¶   |~ ServerRemoteObjectRMI.java (258)¶¶Attempting to match to th"), Diff(EQUAL,"e "), Diff(INSERT,"s"), Diff(EQUAL,"tr"), Diff(DELETE,"ace about lines failing  this check%0.8¶¶Test execution time (ms):10"), Diff(INSERT,"ucture:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1745" _type="PauseCommand" date="Mon Apr 11 20:57:24 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4042736">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2094]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1744" _type="ConsoleOutput" date="Mon Apr 11 20:57:24 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4042736" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3dd22c2b . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (346)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (43)¶   |~ ServerRemo"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6Expec"), Diff(EQUAL,"te"), Diff(INSERT,"d"), Diff(EQUAL,"Interface"), Diff(DELETE,"RMI.java (37)¶   |~ ServerRemoteObjectGIPC.java (334)¶   |~ ServerRemoteObjectRMI.java (258)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)"), Diff(INSERT,"s@3dd22c2b . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1747" _type="PauseCommand" date="Mon Apr 11 20:57:30 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4047954">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5218]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1746" _type="ShellCommand" date="Mon Apr 11 20:57:30 EDT 2022" starttimestamp="1649721002230" timestamp="4047954" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1726" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:57:06 EDT 2022" docASTNodeCount="943" docActiveCodeLength="6818" docExpressionCount="646" docLength="7684" projectName="A6" starttimestamp="1649721002230" timestamp="4024719">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1749" _type="PauseCommand" date="Mon Apr 11 20:57:43 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4061040">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13086]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1748" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:57:43 EDT 2022" docASTNodeCount="235" docActiveCodeLength="1897" docExpressionCount="137" docLength="1915" projectName="A6" starttimestamp="1649721002230" timestamp="4061040">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends SocketChannelConnectListener,"), Diff(DELETE," SocketChannelWriteListener,"), Diff(EQUAL," Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	¶	//A5 fake methods:¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	void createGIPCRegistry() throws RemoteException;¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceRMI  extends SocketChannelConnectListener, Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	
	//A5 fake methods:
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;
	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;
	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	void createGIPCRegistry() throws RemoteException;
	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="1750" _type="MoveCaretCommand" caretOffset="205" date="Mon Apr 11 20:57:43 EDT 2022" docOffset="585" starttimestamp="1649721002230" timestamp="4061208" />
  <Command __id="1752" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:57:44 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="4062309" />
  <Command __id="1753" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:57:44 EDT 2022" starttimestamp="1649721002230" timestamp="4062754" />
  <Command __id="1754" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:57:44 EDT 2022" starttimestamp="1649721002230" timestamp="4062758" />
  <Command __id="1751" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:57:44 EDT 2022" docASTNodeCount="1267" docActiveCodeLength="9077" docExpressionCount="886" docLength="10210" projectName="A6" starttimestamp="1649721002230" timestamp="4062097">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶"), Diff(INSERT,"import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶"), Diff(EQUAL,"import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}"), Diff(INSERT,"¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}"), Diff(EQUAL,"¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientOutCoupler;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {

	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="1756" _type="PauseCommand" date="Mon Apr 11 20:57:50 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4068239">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5481]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1757" _type="MoveCaretCommand" caretOffset="205" date="Mon Apr 11 20:57:50 EDT 2022" docOffset="585" starttimestamp="1649721002230" timestamp="4068391" />
  <Command __id="1759" _type="PauseCommand" date="Mon Apr 11 20:58:04 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4081999">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13608]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1758" _type="ShellCommand" date="Mon Apr 11 20:58:04 EDT 2022" starttimestamp="1649721002230" timestamp="4081999" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1761" _type="PauseCommand" date="Mon Apr 11 20:58:08 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4085819">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3820]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1760" _type="ShellCommand" date="Mon Apr 11 20:58:08 EDT 2022" starttimestamp="1649721002230" timestamp="4085819" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1763" _type="PauseCommand" date="Mon Apr 11 20:58:09 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4087011">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1192]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1762" _type="SelectTextCommand" caretOffset="293" date="Mon Apr 11 20:58:09 EDT 2022" end="429" start="293" starttimestamp="1649721002230" timestamp="4087011" />
  <Command __id="1755" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:57:50 EDT 2022" docASTNodeCount="235" docActiveCodeLength="1897" docExpressionCount="137" docLength="1915" projectName="A6" starttimestamp="1649721002230" timestamp="4068239">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends SocketChannelConnectListener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	¶	//A5 fake methods:¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	void createGIPCRegistry() throws RemoteException;¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1765" _type="PauseCommand" date="Mon Apr 11 20:58:12 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4090481">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3470]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1766" _type="MoveCaretCommand" caretOffset="606" date="Mon Apr 11 20:58:12 EDT 2022" docOffset="606" starttimestamp="1649721002230" timestamp="4090594" />
  <Command __id="1768" _type="PauseCommand" date="Mon Apr 11 20:58:15 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4093345">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2751]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1767" _type="SelectTextCommand" caretOffset="293" date="Mon Apr 11 20:58:15 EDT 2022" end="429" start="293" starttimestamp="1649721002230" timestamp="4093345" />
  <Command __id="1769" _type="SelectTextCommand" caretOffset="293" date="Mon Apr 11 20:58:15 EDT 2022" end="429" start="293" starttimestamp="1649721002230" timestamp="4093345" />
  <Command __id="1771" _type="PasteCommand" date="Mon Apr 11 20:58:15 EDT 2022" starttimestamp="1649721002230" timestamp="4093752" />
  <Command __id="1773" _type="PauseCommand" date="Mon Apr 11 20:58:18 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4095972">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2220]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1772" _type="SelectTextCommand" caretOffset="332" date="Mon Apr 11 20:58:18 EDT 2022" end="360" start="332" starttimestamp="1649721002230" timestamp="4095972" />
  <Command __id="1774" _type="SelectTextCommand" caretOffset="332" date="Mon Apr 11 20:58:18 EDT 2022" end="360" start="332" starttimestamp="1649721002230" timestamp="4095972" />
  <Command __id="1775" _type="CopyCommand" date="Mon Apr 11 20:58:18 EDT 2022" starttimestamp="1649721002230" timestamp="4096251" />
  <Command __id="1777" _type="PauseCommand" date="Mon Apr 11 20:58:22 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4099968">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3717]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1776" _type="SelectTextCommand" caretOffset="575" date="Mon Apr 11 20:58:22 EDT 2022" end="604" start="575" starttimestamp="1649721002230" timestamp="4099968" />
  <Command __id="1778" _type="SelectTextCommand" caretOffset="575" date="Mon Apr 11 20:58:22 EDT 2022" end="604" start="575" starttimestamp="1649721002230" timestamp="4099968" />
  <Command __id="1780" _type="PasteCommand" date="Mon Apr 11 20:58:22 EDT 2022" starttimestamp="1649721002230" timestamp="4100333" />
  <Command __id="1782" _type="InsertStringCommand" date="Mon Apr 11 20:58:22 EDT 2022" starttimestamp="1649721002230" timestamp="4100623" timestamp2="4100623">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1783" _type="InsertStringCommand" date="Mon Apr 11 20:58:22 EDT 2022" starttimestamp="1649721002230" timestamp="4100623" timestamp2="4100623">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1785" _type="InsertStringCommand" date="Mon Apr 11 20:58:23 EDT 2022" starttimestamp="1649721002230" timestamp="4100855" timestamp2="4100855">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1786" _type="InsertStringCommand" date="Mon Apr 11 20:58:23 EDT 2022" starttimestamp="1649721002230" timestamp="4100855" timestamp2="4100855">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1788" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:58:23 EDT 2022" starttimestamp="1649721002230" timestamp="4101196" />
  <Command __id="1789" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:58:23 EDT 2022" starttimestamp="1649721002230" timestamp="4101196" />
  <Command __id="1791" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:58:23 EDT 2022" starttimestamp="1649721002230" timestamp="4101368" />
  <Command __id="1792" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:58:23 EDT 2022" starttimestamp="1649721002230" timestamp="4101368" />
  <Command __id="1794" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:58:23 EDT 2022" starttimestamp="1649721002230" timestamp="4101488" />
  <Command __id="1795" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:58:23 EDT 2022" starttimestamp="1649721002230" timestamp="4101489" />
  <Command __id="1797" _type="InsertStringCommand" date="Mon Apr 11 20:58:24 EDT 2022" starttimestamp="1649721002230" timestamp="4102014" timestamp2="4102014">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1798" _type="InsertStringCommand" date="Mon Apr 11 20:58:24 EDT 2022" starttimestamp="1649721002230" timestamp="4102014" timestamp2="4102014">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1800" _type="InsertStringCommand" date="Mon Apr 11 20:58:24 EDT 2022" starttimestamp="1649721002230" timestamp="4102126" timestamp2="4102126">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1801" _type="InsertStringCommand" date="Mon Apr 11 20:58:24 EDT 2022" starttimestamp="1649721002230" timestamp="4102127" timestamp2="4102127">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1803" _type="PauseCommand" date="Mon Apr 11 20:58:27 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4105633">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3506]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1802" _type="SelectTextCommand" caretOffset="401" date="Mon Apr 11 20:58:27 EDT 2022" end="426" start="401" starttimestamp="1649721002230" timestamp="4105633" />
  <Command __id="1804" _type="SelectTextCommand" caretOffset="401" date="Mon Apr 11 20:58:27 EDT 2022" end="426" start="401" starttimestamp="1649721002230" timestamp="4105633" />
  <Command __id="1805" _type="CopyCommand" date="Mon Apr 11 20:58:28 EDT 2022" starttimestamp="1649721002230" timestamp="4105900" />
  <Command __id="1807" _type="PauseCommand" date="Mon Apr 11 20:58:31 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4109034">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3134]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1806" _type="MoveCaretCommand" caretOffset="603" date="Mon Apr 11 20:58:31 EDT 2022" docOffset="603" starttimestamp="1649721002230" timestamp="4109034" />
  <Command __id="1808" _type="MoveCaretCommand" caretOffset="603" date="Mon Apr 11 20:58:31 EDT 2022" docOffset="603" starttimestamp="1649721002230" timestamp="4109034" />
  <Command __id="1809" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 20:58:32 EDT 2022" starttimestamp="1649721002230" timestamp="4109823" />
  <Command __id="1810" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 20:58:32 EDT 2022" starttimestamp="1649721002230" timestamp="4109823" />
  <Command __id="1812" _type="PasteCommand" date="Mon Apr 11 20:58:32 EDT 2022" starttimestamp="1649721002230" timestamp="4110169" />
  <Command __id="1814" _type="InsertStringCommand" date="Mon Apr 11 20:58:33 EDT 2022" starttimestamp="1649721002230" timestamp="4111064" timestamp2="4111064">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1815" _type="InsertStringCommand" date="Mon Apr 11 20:58:33 EDT 2022" starttimestamp="1649721002230" timestamp="4111064" timestamp2="4111064">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1816" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:58:33 EDT 2022" starttimestamp="1649721002230" timestamp="4111416" />
  <Command __id="1817" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:58:33 EDT 2022" starttimestamp="1649721002230" timestamp="4111509" />
  <Command __id="1818" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:58:33 EDT 2022" starttimestamp="1649721002230" timestamp="4111591" />
  <Command __id="1820" _type="PauseCommand" date="Mon Apr 11 20:58:36 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4114551">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2960]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1819" _type="SelectTextCommand" caretOffset="575" date="Mon Apr 11 20:58:36 EDT 2022" end="630" start="575" starttimestamp="1649721002230" timestamp="4114551" />
  <Command __id="1821" _type="SelectTextCommand" caretOffset="575" date="Mon Apr 11 20:58:36 EDT 2022" end="630" start="575" starttimestamp="1649721002230" timestamp="4114551" />
  <Command __id="1822" _type="CopyCommand" date="Mon Apr 11 20:58:37 EDT 2022" starttimestamp="1649721002230" timestamp="4115355" />
  <Command __id="1764" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:58:12 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1811" docExpressionCount="133" docLength="1811" projectName="A6" starttimestamp="1649721002230" timestamp="4090481">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC extends SocketChannelConnectListener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1770" _type="Replace" date="Mon Apr 11 20:58:15 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1809" docExpressionCount="133" docLength="1809" endLine="12" insertionLength="134" int_docASTNodeCount="203" int_docActiveCodeLength="1675" int_docExpressionCount="115" int_docLength="1675" length="136" offset="293" startLine="11" starttimestamp="1649721002230" timestamp="4093737">
    <deletedText><![CDATA[import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;]]></deletedText>
    <insertedText><![CDATA[import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1779" _type="Replace" date="Mon Apr 11 20:58:22 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1808" docExpressionCount="132" docLength="1808" endLine="15" insertionLength="28" int_docASTNodeCount="221" int_docActiveCodeLength="1780" int_docExpressionCount="132" int_docLength="1780" length="29" offset="575" startLine="15" starttimestamp="1649721002230" timestamp="4100323">
    <deletedText><![CDATA[SocketChannelConnectListener,]]></deletedText>
    <insertedText><![CDATA[SocketChannelAcceptListener;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1781" _type="Insert" date="Mon Apr 11 20:58:22 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1810" docExpressionCount="132" docLength="1810" length="2" offset="603" repeat="2" starttimestamp="1649721002230" timestamp="4100617" timestamp2="4100848">
    <text><![CDATA[, ]]></text>
  </DocumentChange>
  <DocumentChange __id="1787" _type="Delete" date="Mon Apr 11 20:58:23 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1807" docExpressionCount="132" docLength="1807" endLine="15" length="3" offset="602" repeat="3" startLine="15" starttimestamp="1649721002230" timestamp="4101193" timestamp2="4101485">
    <text><![CDATA[;, ]]></text>
  </DocumentChange>
  <DocumentChange __id="1796" _type="Insert" date="Mon Apr 11 20:58:24 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1809" docExpressionCount="133" docLength="1809" length="2" offset="602" repeat="2" starttimestamp="1649721002230" timestamp="4102007" timestamp2="4102121">
    <text><![CDATA[, ]]></text>
  </DocumentChange>
  <DocumentChange __id="1811" _type="Insert" date="Mon Apr 11 20:58:32 EDT 2022" docASTNodeCount="225" docActiveCodeLength="1835" docExpressionCount="134" docLength="1835" length="26" offset="604" repeat="2" starttimestamp="1649721002230" timestamp="4110150" timestamp2="4111058">
    <text><![CDATA[SocketChannelReadListener,]]></text>
  </DocumentChange>
  <Command __id="1824" _type="PauseCommand" date="Mon Apr 11 20:58:38 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4116704">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1349]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1825" _type="MoveCaretCommand" caretOffset="427" date="Mon Apr 11 20:58:39 EDT 2022" docOffset="427" starttimestamp="1649721002230" timestamp="4116798" />
  <Command __id="1827" _type="PauseCommand" date="Mon Apr 11 20:58:42 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4120725">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3927]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1826" _type="SelectTextCommand" caretOffset="553" date="Mon Apr 11 20:58:42 EDT 2022" end="582" start="553" starttimestamp="1649721002230" timestamp="4120725" />
  <Command __id="1828" _type="SelectTextCommand" caretOffset="553" date="Mon Apr 11 20:58:42 EDT 2022" end="582" start="553" starttimestamp="1649721002230" timestamp="4120725" />
  <Command __id="1830" _type="PasteCommand" date="Mon Apr 11 20:58:43 EDT 2022" starttimestamp="1649721002230" timestamp="4121159" />
  <Command __id="1831" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:58:44 EDT 2022" starttimestamp="1649721002230" timestamp="4121811" />
  <Command __id="1832" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:58:44 EDT 2022" starttimestamp="1649721002230" timestamp="4121905" />
  <Command __id="1833" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:58:44 EDT 2022" starttimestamp="1649721002230" timestamp="4121992" />
  <Command __id="1823" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:58:38 EDT 2022" docASTNodeCount="235" docActiveCodeLength="1895" docExpressionCount="137" docLength="1913" projectName="A6" starttimestamp="1649721002230" timestamp="4116704">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannel"), Diff(DELETE,"Connec"), Diff(INSERT,"Accep"), Diff(EQUAL,"tListener;¶import inputport.nio.manager.listeners.SocketChannel"), Diff(DELETE,"Write"), Diff(INSERT,"Read"), Diff(EQUAL,"Listener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends SocketChannelConnectListener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	¶	//A5 fake methods:¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	void createGIPCRegistry() throws RemoteException;¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceRMI  extends SocketChannelConnectListener, Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	
	//A5 fake methods:
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;
	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;
	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	void createGIPCRegistry() throws RemoteException;
	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1829" _type="Replace" date="Mon Apr 11 20:58:43 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1921" docExpressionCount="138" docLength="1939" endLine="15" insertionLength="55" int_docASTNodeCount="233" int_docActiveCodeLength="1866" int_docExpressionCount="136" int_docLength="1884" length="29" offset="553" startLine="15" starttimestamp="1649721002230" timestamp="4121074">
    <deletedText><![CDATA[SocketChannelConnectListener,]]></deletedText>
    <insertedText><![CDATA[SocketChannelAcceptListener, SocketChannelReadListener,]]></insertedText>
  </DocumentChange>
  <Command __id="1835" _type="PauseCommand" date="Mon Apr 11 20:58:47 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4125484">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3492]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1836" _type="MoveCaretCommand" caretOffset="133" date="Mon Apr 11 20:58:47 EDT 2022" docOffset="1857" starttimestamp="1649721002230" timestamp="4125581" />
  <Command __id="1838" _type="PauseCommand" date="Mon Apr 11 20:58:51 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4128904">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3323]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1837" _type="ShellCommand" date="Mon Apr 11 20:58:51 EDT 2022" starttimestamp="1649721002230" timestamp="4128904" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1839" _type="ShellCommand" date="Mon Apr 11 20:58:51 EDT 2022" starttimestamp="1649721002230" timestamp="4129018" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1851" _type="PauseCommand" date="Mon Apr 11 20:58:52 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4130400">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1306]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1850" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:58:52 EDT 2022" starttimestamp="1649721002230" timestamp="4130400" />
  <Command __id="1852" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:58:52 EDT 2022" starttimestamp="1649721002230" timestamp="4130594" />
  <Command __id="1853" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:58:52 EDT 2022" starttimestamp="1649721002230" timestamp="4130625" />
  <Command __id="1855" _type="PauseCommand" date="Mon Apr 11 20:59:03 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4141131">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10506]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1854" _type="SelectTextCommand" caretOffset="10723" date="Mon Apr 11 20:59:03 EDT 2022" end="10723" start="10366" starttimestamp="1649721002230" timestamp="4141131" />
  <Command __id="1834" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:58:47 EDT 2022" docASTNodeCount="1307" docActiveCodeLength="9482" docExpressionCount="908" docLength="10683" projectName="A6" starttimestamp="1649721002230" timestamp="4125484">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1840" _type="Insert" date="Mon Apr 11 20:58:51 EDT 2022" docASTNodeCount="1340" docActiveCodeLength="9699" docExpressionCount="923" docLength="10968" length="285" offset="10676" repeat="8" starttimestamp="1649721002230" timestamp="4129070" timestamp2="4129092">
    <text><![CDATA[

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1848" _type="Insert" date="Mon Apr 11 20:58:51 EDT 2022" docASTNodeCount="1348" docActiveCodeLength="9746" docExpressionCount="930" docLength="11015" length="47" offset="46" repeat="2" starttimestamp="1649721002230" timestamp="4129094" timestamp2="4129096">
    <text><![CDATA[
import java.nio.channels.ServerSocketChannel;]]></text>
  </DocumentChange>
  <Command __id="1857" _type="PauseCommand" date="Mon Apr 11 20:59:04 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4142173">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1042]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1858" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:59:04 EDT 2022" starttimestamp="1649721002230" timestamp="4142196" />
  <Command __id="1860" _type="PauseCommand" date="Mon Apr 11 20:59:05 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4143433">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1237]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1859" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:59:05 EDT 2022" starttimestamp="1649721002230" timestamp="4143433" />
  <Command __id="1861" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:59:05 EDT 2022" starttimestamp="1649721002230" timestamp="4143527" />
  <Command __id="1862" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:59:05 EDT 2022" starttimestamp="1649721002230" timestamp="4143562" />
  <Command __id="1863" _type="ShellCommand" date="Mon Apr 11 20:59:05 EDT 2022" starttimestamp="1649721002230" timestamp="4143699" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1865" _type="PauseCommand" date="Mon Apr 11 20:59:07 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4145589">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1890]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1864" _type="ShellCommand" date="Mon Apr 11 20:59:07 EDT 2022" starttimestamp="1649721002230" timestamp="4145589" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1856" _type="Delete" date="Mon Apr 11 20:59:04 EDT 2022" docASTNodeCount="1304" docActiveCodeLength="9491" docExpressionCount="910" docLength="10658" endLine="344" length="357" offset="10366" startLine="328" starttimestamp="1649721002230" timestamp="4142173">
    <text><![CDATA[@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="1867" _type="PauseCommand" date="Mon Apr 11 20:59:08 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4146597">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1008]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1868" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 20:59:08 EDT 2022" starttimestamp="1649721002230" timestamp="4146612" />
  <Command __id="1871" _type="PauseCommand" date="Mon Apr 11 20:59:10 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4148315">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1703]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1870" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 20:59:10 EDT 2022" starttimestamp="1649721002230" timestamp="4148315" />
  <Command __id="1873" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 20:59:11 EDT 2022" starttimestamp="1649721002230" timestamp="4149171" />
  <Command __id="1874" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:59:12 EDT 2022" starttimestamp="1649721002230" timestamp="4149964" />
  <Command __id="1875" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:59:12 EDT 2022" starttimestamp="1649721002230" timestamp="4150060" />
  <Command __id="1876" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:59:12 EDT 2022" starttimestamp="1649721002230" timestamp="4150105" />
  <DocumentChange __id="1866" _type="Delete" date="Mon Apr 11 20:59:08 EDT 2022" docASTNodeCount="1304" docActiveCodeLength="9486" docExpressionCount="910" docLength="10653" endLine="330" length="5" offset="10366" repeat="3" startLine="328" starttimestamp="1649721002230" timestamp="4146597" timestamp2="4149166">
    <text><![CDATA[

	]]></text>
  </DocumentChange>
  <Command __id="1878" _type="PauseCommand" date="Mon Apr 11 20:59:14 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4152031">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1926]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1879" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:59:14 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="4152317" />
  <Command __id="1881" _type="PauseCommand" date="Mon Apr 11 20:59:17 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4155109">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2792]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1880" _type="ShellCommand" date="Mon Apr 11 20:59:17 EDT 2022" starttimestamp="1649721002230" timestamp="4155109" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1882" _type="ShellCommand" date="Mon Apr 11 20:59:17 EDT 2022" starttimestamp="1649721002230" timestamp="4155214" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1893" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:59:18 EDT 2022" starttimestamp="1649721002230" timestamp="4156266" />
  <Command __id="1894" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:59:18 EDT 2022" starttimestamp="1649721002230" timestamp="4156363" />
  <Command __id="1895" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:59:18 EDT 2022" starttimestamp="1649721002230" timestamp="4156426" />
  <Command __id="1897" _type="PauseCommand" date="Mon Apr 11 20:59:24 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4162721">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6295]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1896" _type="SelectTextCommand" caretOffset="7366" date="Mon Apr 11 20:59:24 EDT 2022" end="7724" start="7366" starttimestamp="1649721002230" timestamp="4162721" />
  <Command __id="1899" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:59:25 EDT 2022" starttimestamp="1649721002230" timestamp="4163068" />
  <Command __id="1901" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 20:59:26 EDT 2022" starttimestamp="1649721002230" timestamp="4163837" />
  <Command __id="1902" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:59:26 EDT 2022" starttimestamp="1649721002230" timestamp="4164698" />
  <Command __id="1903" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:59:27 EDT 2022" starttimestamp="1649721002230" timestamp="4164801" />
  <Command __id="1904" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:59:27 EDT 2022" starttimestamp="1649721002230" timestamp="4164883" />
  <Command __id="1877" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:59:14 EDT 2022" docASTNodeCount="943" docActiveCodeLength="6818" docExpressionCount="646" docLength="7684" projectName="A6" starttimestamp="1649721002230" timestamp="4152031">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1883" _type="Insert" date="Mon Apr 11 20:59:17 EDT 2022" docASTNodeCount="976" docActiveCodeLength="7035" docExpressionCount="661" docLength="7969" length="285" offset="7677" repeat="8" starttimestamp="1649721002230" timestamp="4155252" timestamp2="4155266">
    <text><![CDATA[

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1891" _type="Insert" date="Mon Apr 11 20:59:17 EDT 2022" docASTNodeCount="984" docActiveCodeLength="7082" docExpressionCount="668" docLength="8016" length="47" offset="53" repeat="2" starttimestamp="1649721002230" timestamp="4155268" timestamp2="4155270">
    <text><![CDATA[
import java.nio.channels.ServerSocketChannel;]]></text>
  </DocumentChange>
  <DocumentChange __id="1898" _type="Delete" date="Mon Apr 11 20:59:25 EDT 2022" docASTNodeCount="940" docActiveCodeLength="6824" docExpressionCount="648" docLength="7656" endLine="257" length="360" offset="7366" repeat="2" startLine="240" starttimestamp="1649721002230" timestamp="4163055" timestamp2="4163832">
    <text><![CDATA[	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
]]></text>
  </DocumentChange>
  <Command __id="1906" _type="PauseCommand" date="Mon Apr 11 20:59:30 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4168451">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3568]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1907" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 20:59:30 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="4168675" />
  <Command __id="1909" _type="PauseCommand" date="Mon Apr 11 20:59:46 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4183895">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[15220]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1908" _type="SelectTextCommand" caretOffset="8233" date="Mon Apr 11 20:59:46 EDT 2022" end="8591" start="8233" starttimestamp="1649721002230" timestamp="4183895" />
  <Command __id="1911" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 20:59:46 EDT 2022" starttimestamp="1649721002230" timestamp="4184366" />
  <Command __id="1913" _type="PauseCommand" date="Mon Apr 11 20:59:47 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4185428">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1062]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1912" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 20:59:47 EDT 2022" starttimestamp="1649721002230" timestamp="4185428" />
  <Command __id="1914" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:59:47 EDT 2022" starttimestamp="1649721002230" timestamp="4185509" />
  <Command __id="1915" _type="EclipseCommand" commandID="" date="Mon Apr 11 20:59:47 EDT 2022" starttimestamp="1649721002230" timestamp="4185596" />
  <Command __id="1905" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:59:30 EDT 2022" docASTNodeCount="1267" docActiveCodeLength="9077" docExpressionCount="886" docLength="10210" projectName="A6" starttimestamp="1649721002230" timestamp="4168451">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1910" _type="Delete" date="Mon Apr 11 20:59:46 EDT 2022" docASTNodeCount="1223" docActiveCodeLength="8821" docExpressionCount="866" docLength="9852" endLine="330" length="358" offset="9842" startLine="314" starttimestamp="1649721002230" timestamp="4184354">
    <text><![CDATA[	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="1917" _type="PauseCommand" date="Mon Apr 11 20:59:48 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4186632">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1036]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1918" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 20:59:48 EDT 2022" starttimestamp="1649721002230" timestamp="4186645" />
  <DocumentChange __id="1916" _type="Delete" date="Mon Apr 11 20:59:48 EDT 2022" docASTNodeCount="1223" docActiveCodeLength="8819" docExpressionCount="866" docLength="9850" endLine="315" length="2" offset="9842" startLine="314" starttimestamp="1649721002230" timestamp="4186632">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="1920" _type="PauseCommand" date="Mon Apr 11 20:59:59 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4197289">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10644]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1921" _type="MoveCaretCommand" caretOffset="7366" date="Mon Apr 11 20:59:59 EDT 2022" docOffset="7366" starttimestamp="1649721002230" timestamp="4197389" />
  <Command __id="1919" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 20:59:59 EDT 2022" docASTNodeCount="940" docActiveCodeLength="6824" docExpressionCount="648" docLength="7656" projectName="A6" starttimestamp="1649721002230" timestamp="4197289">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶"), Diff(INSERT,"import java.nio.channels.ServerSocketChannel;¶"), Diff(EQUAL,"import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(INSERT,"¶"), Diff(EQUAL,"	@Override¶	public void "), Diff(DELETE,"connected(S"), Diff(INSERT,"s"), Diff(EQUAL,"ocketChannel"), Diff(DELETE," arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected("), Diff(INSERT,"Accepted(Server"), Diff(EQUAL,"SocketChannel arg0, "), Diff(DELETE,"Exception"), Diff(INSERT,"SocketChannel"), Diff(EQUAL," arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void "), Diff(DELETE,"written"), Diff(INSERT,"socketChannelRead"), Diff(EQUAL,"(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		IPCMechanism mechanism = getIPCMechanism();
		setIPCMechanism(mechanism);
		boolean broadcast = true;
		setBroadcastMetaState(broadcast);
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}

	@Override
	public void createGIPCRegistry() throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,
			int aProposalNumber, boolean broadcast) throws RemoteException {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="1923" _type="PauseCommand" date="Mon Apr 11 21:00:21 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="4219387">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[21998]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1924" _type="MoveCaretCommand" caretOffset="8233" date="Mon Apr 11 21:00:21 EDT 2022" docOffset="9842" starttimestamp="1649721002230" timestamp="4219480" />
  <Command __id="1926" _type="PauseCommand" date="Mon Apr 11 21:00:27 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4225237">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5757]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1925" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:00:27 EDT 2022" starttimestamp="1649721002230" timestamp="4225237" />
  <Command __id="1927" _type="MoveCaretCommand" caretOffset="426" date="Mon Apr 11 21:00:27 EDT 2022" docOffset="2035" starttimestamp="1649721002230" timestamp="4225294" />
  <Command __id="1928" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:00:27 EDT 2022" starttimestamp="1649721002230" timestamp="4225338" />
  <Command __id="1929" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:00:27 EDT 2022" starttimestamp="1649721002230" timestamp="4225368" />
  <Command __id="1922" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:00:21 EDT 2022" docASTNodeCount="1223" docActiveCodeLength="8819" docExpressionCount="866" docLength="9850" projectName="A6" starttimestamp="1649721002230" timestamp="4219387">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	"), Diff(DELETE,"@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientOutCoupler;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {

	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	

}
]]></snapshot>
  </Command>
  <Command __id="1931" _type="PauseCommand" date="Mon Apr 11 21:00:33 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4230785">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5417]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1932" _type="SelectTextCommand" caretOffset="575" date="Mon Apr 11 21:00:33 EDT 2022" end="630" start="575" starttimestamp="1649721002230" timestamp="4230995" />
  <Command __id="1934" _type="PauseCommand" date="Mon Apr 11 21:00:35 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4233060">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2065]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1933" _type="MoveCaretCommand" caretOffset="583" date="Mon Apr 11 21:00:35 EDT 2022" docOffset="583" starttimestamp="1649721002230" timestamp="4233060" />
  <Command __id="1935" _type="MoveCaretCommand" caretOffset="583" date="Mon Apr 11 21:00:35 EDT 2022" docOffset="583" starttimestamp="1649721002230" timestamp="4233061" />
  <Command __id="1930" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:00:33 EDT 2022" docASTNodeCount="225" docActiveCodeLength="1835" docExpressionCount="134" docLength="1835" projectName="A6" starttimestamp="1649721002230" timestamp="4230785">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannel"), Diff(DELETE,"Connec"), Diff(INSERT,"Accep"), Diff(EQUAL,"tListener;¶import inputport.nio.manager.listeners.SocketChannel"), Diff(DELETE,"Write"), Diff(INSERT,"Read"), Diff(EQUAL,"Listener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC extends SocketChannel"), Diff(DELETE,"Connect"), Diff(INSERT,"AcceptListener, SocketChannelRead"), Diff(EQUAL,"Listener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})
public interface ServerRemoteInterfaceGIPC extends SocketChannelAcceptListener, SocketChannelReadListener, Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;

	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;

	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;

	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;

	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;

	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="1937" _type="PauseCommand" date="Mon Apr 11 21:00:41 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4239068">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6007]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1938" _type="MoveCaretCommand" caretOffset="426" date="Mon Apr 11 21:00:41 EDT 2022" docOffset="2035" starttimestamp="1649721002230" timestamp="4239167" />
  <Command __id="1941" _type="PauseCommand" date="Mon Apr 11 21:00:49 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4247588">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8421]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1940" _type="ShellCommand" date="Mon Apr 11 21:00:49 EDT 2022" starttimestamp="1649721002230" timestamp="4247588" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1943" _type="PauseCommand" date="Mon Apr 11 21:00:51 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4248977">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1389]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1942" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:00:51 EDT 2022" forward="false" matchWord="false" offset="2035" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4248977" wrapSearch="false">
    <searchString><![CDATA[sock]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1945" _type="PauseCommand" date="Mon Apr 11 21:00:52 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4250330">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1353]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1944" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:00:52 EDT 2022" forward="false" matchWord="false" offset="84" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4250330" wrapSearch="false">
    <searchString><![CDATA[sock]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1946" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:00:52 EDT 2022" forward="false" matchWord="false" offset="84" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4250687" wrapSearch="false">
    <searchString><![CDATA[sock]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1947" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:00:53 EDT 2022" forward="false" matchWord="false" offset="84" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4250975" wrapSearch="false">
    <searchString><![CDATA[sock]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1949" _type="PauseCommand" date="Mon Apr 11 21:00:54 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4252734">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1759]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1948" _type="ShellCommand" date="Mon Apr 11 21:00:54 EDT 2022" starttimestamp="1649721002230" timestamp="4252734" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1936" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:00:41 EDT 2022" docASTNodeCount="1223" docActiveCodeLength="8819" docExpressionCount="866" docLength="9850" projectName="A6" starttimestamp="1649721002230" timestamp="4239068">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1951" _type="PauseCommand" date="Mon Apr 11 21:01:15 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="4272798">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[20064]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1952" _type="MoveCaretCommand" caretOffset="7366" date="Mon Apr 11 21:01:15 EDT 2022" docOffset="7366" starttimestamp="1649721002230" timestamp="4272899" />
  <Command __id="1954" _type="PauseCommand" date="Mon Apr 11 21:01:24 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4282105">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9206]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1953" _type="SelectTextCommand" caretOffset="7368" date="Mon Apr 11 21:01:24 EDT 2022" end="7649" start="7368" starttimestamp="1649721002230" timestamp="4282105" />
  <Command __id="1955" _type="CopyCommand" date="Mon Apr 11 21:01:24 EDT 2022" starttimestamp="1649721002230" timestamp="4282635" />
  <Command __id="1950" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:01:15 EDT 2022" docASTNodeCount="940" docActiveCodeLength="6824" docExpressionCount="648" docLength="7656" projectName="A6" starttimestamp="1649721002230" timestamp="4272798">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1957" _type="PauseCommand" date="Mon Apr 11 21:01:26 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4283786">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1151]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1958" _type="SelectTextCommand" caretOffset="84" date="Mon Apr 11 21:01:26 EDT 2022" end="84" start="80" starttimestamp="1649721002230" timestamp="4283900" />
  <Command __id="1960" _type="PauseCommand" date="Mon Apr 11 21:01:29 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4287455">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3555]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1970" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:01:34 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="4292765" type="Run" />
  <Command __id="1973" _type="PauseCommand" date="Mon Apr 11 21:01:37 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4294908">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2143]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1972" _type="ShellCommand" date="Mon Apr 11 21:01:37 EDT 2022" starttimestamp="1649721002230" timestamp="4294908" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1975" _type="PauseCommand" date="Mon Apr 11 21:01:39 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4296825">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1917]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1974" _type="ConsoleOutput" date="Mon Apr 11 21:01:39 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4296825" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 21:01:38 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@3dd22c2b . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 21:01:38 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1977" _type="PauseCommand" date="Mon Apr 11 21:01:41 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4298924">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2099]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1976" _type="ConsoleOutput" date="Mon Apr 11 21:01:41 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4298924" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:95
Running second pass checks Mon Apr 11 21:01:41 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 21:01:41 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 21:01:41 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:95¶Running second pass checks Mon Apr 11 21:01:41 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 21:01:41 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Apr 11 21:01:"), Diff(DELETE,"38"), Diff(INSERT,"41"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1979" _type="PauseCommand" date="Mon Apr 11 21:01:42 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4299965">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1041]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1978" _type="ConsoleOutput" date="Mon Apr 11 21:01:42 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4299965" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 21:01:42 EDT 2022
Generating checks:Mon Apr 11 21:01:42 EDT 2022
Finished Generating checks:Mon Apr 11 21:01:42 EDT 2022
Generating externals:Mon Apr 11 21:01:42 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:95¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 21:01:4"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 11 21:01:42 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 11 21:01:4"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 21:01:4"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="1980" _type="ConsoleOutput" date="Mon Apr 11 21:01:42 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4300323" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 21:01:42 EDT 2022
Test execution time (ms):3579

A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.8571428571428571
Test execution time (ms):19
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 21:01:42 EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 21:01:42 EDT 2022¶Finished Generating checks:Mon Apr 11 21:01:42 EDT 2022¶Generating externals:Mon Apr 11 21:01:42 EDT 2022"), Diff(INSERT,"Test execution time (ms):3579¶¶A6ExpectedInterfaces did not pass completely:See console trace about lines failing  this check%0.8571428571428571¶Test execution time (ms):19"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1981" _type="ConsoleOutput" date="Mon Apr 11 21:01:42 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4300389" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862

Test execution time (ms):7
A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.8

Test execution time (ms):7

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (302)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (296)
 |- readThread (3)
  |~ ClientReadThread.java (25)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (25)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (341)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (43)
   |~ ServerRemoteInterfaceRMI.java (37)
   |~ ServerRemoteObjectGIPC.java (329)
   |~ ServerRemoteObjectRMI.java (254)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 21:01:42 EDT 2022"), Diff(INSERT,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"3579¶"), Diff(INSERT,"7"), Diff(EQUAL,"¶A6Expected"), Diff(DELETE,"Interfac"), Diff(INSERT,"Signatur"), Diff(EQUAL,"es did not pass completely:See console trace about lines failing  this check%0.8"), Diff(DELETE,"571428571428571¶Test execution time (ms):19"), Diff(INSERT,"¶¶Test execution time (ms):7¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (341)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (43)¶   |~ ServerRemoteInterfaceRMI.java (37)¶   |~ ServerRemoteObjectGIPC.java (329)¶   |~ ServerRemoteObjectRMI.java (254)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1982" _type="ConsoleOutput" date="Mon Apr 11 21:01:42 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4300449" type="ConsoleOutput">
    <outputString><![CDATA[A6ProjectOrganization did not pass completely:View console for more information%0.0

Test execution time (ms):38
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A6"), Diff(DELETE,"ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶¶Test execution time (ms):7¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.8¶¶Test execution time (ms):7¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (341)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (43)¶   |~ ServerRemoteInterfaceRMI.java (37)¶   |~ ServerRemoteObjectGIPC.java (329)¶   |~ ServerRemoteObjectRMI.java (254)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)"), Diff(INSERT,"ProjectOrganization did not pass completely:View console for more information%0.0¶¶Test execution time (ms):38"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1984" _type="PauseCommand" date="Mon Apr 11 21:01:44 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4302147">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1698]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1983" _type="ConsoleOutput" date="Mon Apr 11 21:01:44 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4302147" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@374fdb39 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ProjectOrganization did not pass completely:View console for more information%0.0¶¶Test execution time (ms):38"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@374fdb39 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1986" _type="PauseCommand" date="Mon Apr 11 21:01:50 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4307788">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5641]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1985" _type="ShellCommand" date="Mon Apr 11 21:01:50 EDT 2022" starttimestamp="1649721002230" timestamp="4307788" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1956" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:01:26 EDT 2022" docASTNodeCount="1223" docActiveCodeLength="8819" docExpressionCount="866" docLength="9850" projectName="A6" starttimestamp="1649721002230" timestamp="4283786">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1961" _type="Insert" date="Mon Apr 11 21:01:30 EDT 2022" docASTNodeCount="1223" docActiveCodeLength="8822" docExpressionCount="866" docLength="9853" length="3" offset="9840" starttimestamp="1649721002230" timestamp="4287874">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1963" _type="Replace" date="Mon Apr 11 21:01:30 EDT 2022" docASTNodeCount="1256" docActiveCodeLength="9034" docExpressionCount="881" docLength="10133" endLine="314" insertionLength="281" int_docASTNodeCount="1223" int_docActiveCodeLength="8821" int_docExpressionCount="866" int_docLength="9852" length="1" offset="9842" startLine="314" starttimestamp="1649721002230" timestamp="4288528">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1964" _type="Insert" date="Mon Apr 11 21:01:30 EDT 2022" docASTNodeCount="1264" docActiveCodeLength="9081" docExpressionCount="888" docLength="10180" length="47" offset="53" repeat="2" starttimestamp="1649721002230" timestamp="4288638" timestamp2="4288641">
    <text><![CDATA[
import java.nio.channels.ServerSocketChannel;]]></text>
  </DocumentChange>
  <Command __id="1988" _type="PauseCommand" date="Mon Apr 11 21:02:00 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4318147">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10359]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1989" _type="MoveCaretCommand" caretOffset="608" date="Mon Apr 11 21:02:00 EDT 2022" docOffset="608" starttimestamp="1649721002230" timestamp="4318341" />
  <Command __id="1991" _type="PauseCommand" date="Mon Apr 11 21:02:06 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4323924">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5583]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1990" _type="CopyCommand" date="Mon Apr 11 21:02:06 EDT 2022" starttimestamp="1649721002230" timestamp="4323924" />
  <Command __id="1993" _type="PauseCommand" date="Mon Apr 11 21:02:07 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4325131">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1207]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1987" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:02:00 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1921" docExpressionCount="138" docLength="1939" projectName="A6" starttimestamp="1649721002230" timestamp="4318147">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends SocketChannel"), Diff(DELETE,"Connect"), Diff(INSERT,"AcceptListener, SocketChannelRead"), Diff(EQUAL,"Listener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	¶	//A5 fake methods:¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	void createGIPCRegistry() throws RemoteException;¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceRMI  extends SocketChannelAcceptListener, SocketChannelReadListener, Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	
	//A5 fake methods:
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;
	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;
	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	void createGIPCRegistry() throws RemoteException;
	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="1992" _type="MoveCaretCommand" caretOffset="427" date="Mon Apr 11 21:02:07 EDT 2022" docOffset="427" starttimestamp="1649721002230" timestamp="4325131" />
  <Command __id="1994" _type="MoveCaretCommand" caretOffset="427" date="Mon Apr 11 21:02:07 EDT 2022" docOffset="427" starttimestamp="1649721002230" timestamp="4325131" />
  <Command __id="1996" _type="InsertStringCommand" date="Mon Apr 11 21:02:07 EDT 2022" starttimestamp="1649721002230" timestamp="4325449" timestamp2="4325449">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1997" _type="InsertStringCommand" date="Mon Apr 11 21:02:07 EDT 2022" starttimestamp="1649721002230" timestamp="4325449" timestamp2="4325449">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1999" _type="PasteCommand" date="Mon Apr 11 21:02:07 EDT 2022" starttimestamp="1649721002230" timestamp="4325738" />
  <Command __id="2002" _type="PauseCommand" date="Mon Apr 11 21:02:09 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4326909">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1171]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2001" _type="InsertStringCommand" date="Mon Apr 11 21:02:09 EDT 2022" starttimestamp="1649721002230" timestamp="4326909" timestamp2="4326909">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2003" _type="InsertStringCommand" date="Mon Apr 11 21:02:09 EDT 2022" starttimestamp="1649721002230" timestamp="4326909" timestamp2="4326909">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2005" _type="PauseCommand" date="Mon Apr 11 21:02:11 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4328824">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1915]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2037" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:02:15 EDT 2022" starttimestamp="1649721002230" timestamp="4333161" />
  <Command __id="2039" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:02:15 EDT 2022" starttimestamp="1649721002230" timestamp="4333166" />
  <Command __id="2041" _type="PauseCommand" date="Mon Apr 11 21:02:17 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4335615">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2449]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2040" _type="SelectTextCommand" caretOffset="468" date="Mon Apr 11 21:02:17 EDT 2022" end="494" start="468" starttimestamp="1649721002230" timestamp="4335615" />
  <Command __id="2042" _type="SelectTextCommand" caretOffset="468" date="Mon Apr 11 21:02:17 EDT 2022" end="494" start="468" starttimestamp="1649721002230" timestamp="4335615" />
  <Command __id="2043" _type="CopyCommand" date="Mon Apr 11 21:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="4335826" />
  <Command __id="2045" _type="PauseCommand" date="Mon Apr 11 21:02:21 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4339051">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3225]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2044" _type="MoveCaretCommand" caretOffset="621" date="Mon Apr 11 21:02:21 EDT 2022" docOffset="621" starttimestamp="1649721002230" timestamp="4339051" />
  <Command __id="2046" _type="MoveCaretCommand" caretOffset="621" date="Mon Apr 11 21:02:21 EDT 2022" docOffset="621" starttimestamp="1649721002230" timestamp="4339051" />
  <Command __id="2048" _type="PasteCommand" date="Mon Apr 11 21:02:21 EDT 2022" starttimestamp="1649721002230" timestamp="4339667" />
  <Command __id="2050" _type="InsertStringCommand" date="Mon Apr 11 21:02:22 EDT 2022" starttimestamp="1649721002230" timestamp="4339869" timestamp2="4339869">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2051" _type="InsertStringCommand" date="Mon Apr 11 21:02:22 EDT 2022" starttimestamp="1649721002230" timestamp="4339869" timestamp2="4339869">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2053" _type="InsertStringCommand" date="Mon Apr 11 21:02:22 EDT 2022" starttimestamp="1649721002230" timestamp="4340045" timestamp2="4340045">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2054" _type="InsertStringCommand" date="Mon Apr 11 21:02:22 EDT 2022" starttimestamp="1649721002230" timestamp="4340045" timestamp2="4340045">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2055" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:02:22 EDT 2022" starttimestamp="1649721002230" timestamp="4340724" />
  <Command __id="2056" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:02:23 EDT 2022" starttimestamp="1649721002230" timestamp="4340826" />
  <Command __id="2057" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:02:23 EDT 2022" starttimestamp="1649721002230" timestamp="4340906" />
  <Command __id="2058" _type="ShellCommand" date="Mon Apr 11 21:02:23 EDT 2022" starttimestamp="1649721002230" timestamp="4341132" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2060" _type="PauseCommand" date="Mon Apr 11 21:02:24 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4342599">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1467]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2059" _type="ShellCommand" date="Mon Apr 11 21:02:24 EDT 2022" starttimestamp="1649721002230" timestamp="4342599" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1995" _type="Insert" date="Mon Apr 11 21:02:07 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1982" docExpressionCount="138" docLength="2000" length="61" offset="427" repeat="3" starttimestamp="1649721002230" timestamp="4325438" timestamp2="4326901">
    <text><![CDATA[
inputport.nio.manager.listeners.SocketChannelWriteListener;]]></text>
  </DocumentChange>
  <DocumentChange __id="2007" _type="Insert" date="Mon Apr 11 21:02:11 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1986" docExpressionCount="138" docLength="2004" length="4" offset="429" repeat="4" starttimestamp="1649721002230" timestamp="4329336" timestamp2="4329877">
    <text><![CDATA[impr]]></text>
  </DocumentChange>
  <DocumentChange __id="2019" _type="Delete" date="Mon Apr 11 21:02:12 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1985" docExpressionCount="138" docLength="2003" endLine="13" length="1" offset="432" startLine="13" starttimestamp="1649721002230" timestamp="4330162">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <DocumentChange __id="2022" _type="Insert" date="Mon Apr 11 21:02:12 EDT 2022" docASTNodeCount="247" docActiveCodeLength="1989" docExpressionCount="147" docLength="2007" length="4" offset="432" repeat="4" starttimestamp="1649721002230" timestamp="4330369" timestamp2="4331070">
    <text><![CDATA[ort ]]></text>
  </DocumentChange>
  <DocumentChange __id="2047" _type="Insert" date="Mon Apr 11 21:02:21 EDT 2022" docASTNodeCount="249" docActiveCodeLength="2017" docExpressionCount="148" docLength="2035" length="28" offset="621" repeat="3" starttimestamp="1649721002230" timestamp="4339653" timestamp2="4340040">
    <text><![CDATA[SocketChannelWriteListener, ]]></text>
  </DocumentChange>
  <Command __id="2062" _type="PauseCommand" date="Mon Apr 11 21:02:26 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4344156">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1557]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2063" _type="MoveCaretCommand" caretOffset="583" date="Mon Apr 11 21:02:26 EDT 2022" docOffset="583" starttimestamp="1649721002230" timestamp="4344362" />
  <Command __id="2065" _type="PauseCommand" date="Mon Apr 11 21:02:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4345872">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1510]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2064" _type="MoveCaretCommand" caretOffset="575" date="Mon Apr 11 21:02:28 EDT 2022" docOffset="575" starttimestamp="1649721002230" timestamp="4345872" />
  <Command __id="2066" _type="MoveCaretCommand" caretOffset="575" date="Mon Apr 11 21:02:28 EDT 2022" docOffset="575" starttimestamp="1649721002230" timestamp="4345872" />
  <Command __id="2068" _type="PasteCommand" date="Mon Apr 11 21:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="4346167" />
  <Command __id="2070" _type="InsertStringCommand" date="Mon Apr 11 21:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="4346346" timestamp2="4346346">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2071" _type="InsertStringCommand" date="Mon Apr 11 21:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="4346346" timestamp2="4346346">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2073" _type="InsertStringCommand" date="Mon Apr 11 21:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="4346519" timestamp2="4346519">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2074" _type="InsertStringCommand" date="Mon Apr 11 21:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="4346519" timestamp2="4346519">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2076" _type="PauseCommand" date="Mon Apr 11 21:02:32 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4350612">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4093]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="2075" _type="CopyCommand" date="Mon Apr 11 21:02:32 EDT 2022" starttimestamp="1649721002230" timestamp="4350612" />
  <Command __id="2078" _type="PauseCommand" date="Mon Apr 11 21:02:34 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4351797">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1185]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2077" _type="MoveCaretCommand" caretOffset="429" date="Mon Apr 11 21:02:34 EDT 2022" docOffset="429" starttimestamp="1649721002230" timestamp="4351797" />
  <Command __id="2079" _type="MoveCaretCommand" caretOffset="429" date="Mon Apr 11 21:02:34 EDT 2022" docOffset="429" starttimestamp="1649721002230" timestamp="4351797" />
  <Command __id="2081" _type="PasteCommand" date="Mon Apr 11 21:02:34 EDT 2022" starttimestamp="1649721002230" timestamp="4352120" />
  <Command __id="2083" _type="InsertStringCommand" date="Mon Apr 11 21:02:34 EDT 2022" starttimestamp="1649721002230" timestamp="4352380" timestamp2="4352380">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2084" _type="InsertStringCommand" date="Mon Apr 11 21:02:34 EDT 2022" starttimestamp="1649721002230" timestamp="4352380" timestamp2="4352380">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2086" _type="PauseCommand" date="Mon Apr 11 21:02:35 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4353760">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1380]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2085" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:35 EDT 2022" starttimestamp="1649721002230" timestamp="4353760" />
  <Command __id="2087" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:35 EDT 2022" starttimestamp="1649721002230" timestamp="4353760" />
  <Command __id="2089" _type="InsertStringCommand" date="Mon Apr 11 21:02:36 EDT 2022" starttimestamp="1649721002230" timestamp="4354518" timestamp2="4354518">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2090" _type="InsertStringCommand" date="Mon Apr 11 21:02:36 EDT 2022" starttimestamp="1649721002230" timestamp="4354518" timestamp2="4354518">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2091" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4354922" />
  <Command __id="2092" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4354922" />
  <Command __id="2093" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355429" />
  <Command __id="2094" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355429" />
  <Command __id="2095" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355469" />
  <Command __id="2096" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355469" />
  <Command __id="2097" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355489" />
  <Command __id="2098" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355489" />
  <Command __id="2099" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355517" />
  <Command __id="2100" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355517" />
  <Command __id="2101" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355548" />
  <Command __id="2102" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355548" />
  <Command __id="2103" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355577" />
  <Command __id="2104" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355577" />
  <Command __id="2105" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355609" />
  <Command __id="2106" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355609" />
  <Command __id="2107" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355638" />
  <Command __id="2108" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355638" />
  <Command __id="2109" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355669" />
  <Command __id="2110" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355669" />
  <Command __id="2111" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355698" />
  <Command __id="2112" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355698" />
  <Command __id="2113" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355730" />
  <Command __id="2114" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355730" />
  <Command __id="2115" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355759" />
  <Command __id="2116" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:37 EDT 2022" starttimestamp="1649721002230" timestamp="4355759" />
  <Command __id="2117" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355791" />
  <Command __id="2118" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355791" />
  <Command __id="2119" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355819" />
  <Command __id="2120" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355820" />
  <Command __id="2121" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355853" />
  <Command __id="2122" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355853" />
  <Command __id="2123" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355882" />
  <Command __id="2124" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355882" />
  <Command __id="2125" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355914" />
  <Command __id="2126" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355914" />
  <Command __id="2127" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355941" />
  <Command __id="2128" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355941" />
  <Command __id="2129" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355974" />
  <Command __id="2130" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4355974" />
  <Command __id="2131" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356002" />
  <Command __id="2132" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356003" />
  <Command __id="2133" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356035" />
  <Command __id="2134" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356035" />
  <Command __id="2135" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356064" />
  <Command __id="2136" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356065" />
  <Command __id="2137" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356095" />
  <Command __id="2138" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356095" />
  <Command __id="2139" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356126" />
  <Command __id="2140" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356126" />
  <Command __id="2141" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356155" />
  <Command __id="2142" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356155" />
  <Command __id="2143" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356185" />
  <Command __id="2144" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356185" />
  <Command __id="2145" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356216" />
  <Command __id="2146" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356216" />
  <Command __id="2147" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356245" />
  <Command __id="2148" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356245" />
  <Command __id="2149" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356277" />
  <Command __id="2150" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356277" />
  <Command __id="2151" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356307" />
  <Command __id="2152" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356307" />
  <Command __id="2153" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356338" />
  <Command __id="2154" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356338" />
  <Command __id="2155" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356366" />
  <Command __id="2156" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356366" />
  <Command __id="2157" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356399" />
  <Command __id="2158" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356399" />
  <Command __id="2159" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356429" />
  <Command __id="2160" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356429" />
  <Command __id="2161" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356460" />
  <Command __id="2162" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356460" />
  <Command __id="2163" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356488" />
  <Command __id="2164" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356488" />
  <Command __id="2165" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356520" />
  <Command __id="2166" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356520" />
  <Command __id="2167" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356548" />
  <Command __id="2168" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356548" />
  <Command __id="2169" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356579" />
  <Command __id="2170" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356579" />
  <Command __id="2171" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356608" />
  <Command __id="2172" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356608" />
  <Command __id="2173" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356639" />
  <Command __id="2174" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356640" />
  <Command __id="2175" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356670" />
  <Command __id="2176" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356670" />
  <Command __id="2177" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356702" />
  <Command __id="2178" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356702" />
  <Command __id="2179" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356730" />
  <Command __id="2180" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356730" />
  <Command __id="2181" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356762" />
  <Command __id="2182" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:38 EDT 2022" starttimestamp="1649721002230" timestamp="4356762" />
  <Command __id="2183" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356791" />
  <Command __id="2184" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356792" />
  <Command __id="2185" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356823" />
  <Command __id="2186" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356823" />
  <Command __id="2187" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356852" />
  <Command __id="2188" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356852" />
  <Command __id="2189" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356885" />
  <Command __id="2190" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356885" />
  <Command __id="2191" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356913" />
  <Command __id="2192" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356913" />
  <Command __id="2193" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356945" />
  <Command __id="2194" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356945" />
  <Command __id="2195" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356974" />
  <Command __id="2196" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4356974" />
  <Command __id="2197" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357010" />
  <Command __id="2198" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357010" />
  <Command __id="2199" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357035" />
  <Command __id="2200" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357035" />
  <Command __id="2201" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357068" />
  <Command __id="2202" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357068" />
  <Command __id="2203" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357097" />
  <Command __id="2204" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357097" />
  <Command __id="2205" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357433" />
  <Command __id="2206" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357433" />
  <Command __id="2207" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357575" />
  <Command __id="2208" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 21:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="4357576" />
  <Command __id="2210" _type="InsertStringCommand" date="Mon Apr 11 21:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="4358100" timestamp2="4358100">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2211" _type="InsertStringCommand" date="Mon Apr 11 21:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="4358100" timestamp2="4358100">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2213" _type="InsertStringCommand" date="Mon Apr 11 21:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="4358255" timestamp2="4358255">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2214" _type="InsertStringCommand" date="Mon Apr 11 21:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="4358255" timestamp2="4358255">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2216" _type="InsertStringCommand" date="Mon Apr 11 21:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="4358382" timestamp2="4358382">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2217" _type="InsertStringCommand" date="Mon Apr 11 21:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="4358382" timestamp2="4358382">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2219" _type="InsertStringCommand" date="Mon Apr 11 21:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="4358445" timestamp2="4358445">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2220" _type="InsertStringCommand" date="Mon Apr 11 21:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="4358445" timestamp2="4358445">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2222" _type="InsertStringCommand" date="Mon Apr 11 21:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="4358603" timestamp2="4358603">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2223" _type="InsertStringCommand" date="Mon Apr 11 21:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="4358604" timestamp2="4358604">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2225" _type="InsertStringCommand" date="Mon Apr 11 21:02:41 EDT 2022" starttimestamp="1649721002230" timestamp="4358789" timestamp2="4358789">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2226" _type="InsertStringCommand" date="Mon Apr 11 21:02:41 EDT 2022" starttimestamp="1649721002230" timestamp="4358789" timestamp2="4358789">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2228" _type="InsertStringCommand" date="Mon Apr 11 21:02:41 EDT 2022" starttimestamp="1649721002230" timestamp="4358915" timestamp2="4358915">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2229" _type="InsertStringCommand" date="Mon Apr 11 21:02:41 EDT 2022" starttimestamp="1649721002230" timestamp="4358915" timestamp2="4358915">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2230" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:02:41 EDT 2022" starttimestamp="1649721002230" timestamp="4359480" />
  <Command __id="2231" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:02:41 EDT 2022" starttimestamp="1649721002230" timestamp="4359570" />
  <Command __id="2232" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:02:41 EDT 2022" starttimestamp="1649721002230" timestamp="4359643" />
  <Command __id="2061" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:02:26 EDT 2022" docASTNodeCount="225" docActiveCodeLength="1835" docExpressionCount="134" docLength="1835" projectName="A6" starttimestamp="1649721002230" timestamp="4344156">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC extends SocketChannelAcceptListener, SocketChannelReadListener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2067" _type="Insert" date="Mon Apr 11 21:02:28 EDT 2022" docASTNodeCount="227" docActiveCodeLength="1863" docExpressionCount="135" docLength="1863" length="28" offset="575" repeat="3" starttimestamp="1649721002230" timestamp="4346145" timestamp2="4346513">
    <text><![CDATA[SocketChannelWriteListener, ]]></text>
  </DocumentChange>
  <DocumentChange __id="2080" _type="Insert" date="Mon Apr 11 21:02:34 EDT 2022" docASTNodeCount="215" docActiveCodeLength="1923" docExpressionCount="123" docLength="1923" length="60" offset="429" repeat="2" starttimestamp="1649721002230" timestamp="4352112" timestamp2="4352369">
    <text><![CDATA[inputport.nio.manager.listeners.SocketChannelWriteListener
]]></text>
  </DocumentChange>
  <DocumentChange __id="2088" _type="Insert" date="Mon Apr 11 21:02:36 EDT 2022" docASTNodeCount="227" docActiveCodeLength="1924" docExpressionCount="135" docLength="1924" length="1" offset="487" starttimestamp="1649721002230" timestamp="4354510">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="2209" _type="Insert" date="Mon Apr 11 21:02:40 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1931" docExpressionCount="144" docLength="1931" length="7" offset="429" repeat="7" starttimestamp="1649721002230" timestamp="4358091" timestamp2="4358909">
    <text><![CDATA[import ]]></text>
  </DocumentChange>
  <Command __id="2234" _type="PauseCommand" date="Mon Apr 11 21:02:47 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4365103">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5460]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2235" _type="MoveCaretCommand" caretOffset="10366" date="Mon Apr 11 21:02:47 EDT 2022" docOffset="10366" starttimestamp="1649721002230" timestamp="4365292" />
  <Command __id="2237" _type="PauseCommand" date="Mon Apr 11 21:02:54 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4371901">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6609]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2236" _type="ShellCommand" date="Mon Apr 11 21:02:54 EDT 2022" starttimestamp="1649721002230" timestamp="4371901" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2238" _type="ShellCommand" date="Mon Apr 11 21:02:54 EDT 2022" starttimestamp="1649721002230" timestamp="4372007" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2244" _type="PauseCommand" date="Mon Apr 11 21:02:55 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4373707">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1671]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2243" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:02:55 EDT 2022" starttimestamp="1649721002230" timestamp="4373707" />
  <Command __id="2245" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:02:56 EDT 2022" starttimestamp="1649721002230" timestamp="4373801" />
  <Command __id="2246" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:02:56 EDT 2022" starttimestamp="1649721002230" timestamp="4373833" />
  <Command __id="2233" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:02:47 EDT 2022" docASTNodeCount="1304" docActiveCodeLength="9486" docExpressionCount="910" docLength="10653" projectName="A6" starttimestamp="1649721002230" timestamp="4365103">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.nio.ByteBuffer;¶"), Diff(INSERT,"import java.nio.channels.ServerSocketChannel;¶"), Diff(EQUAL,"import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void "), Diff(DELETE,"connected(S"), Diff(INSERT,"s"), Diff(EQUAL,"ocketChannel"), Diff(DELETE," arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected("), Diff(INSERT,"Accepted(Server"), Diff(EQUAL,"SocketChannel arg0, "), Diff(DELETE,"Exception"), Diff(INSERT,"SocketChannel"), Diff(EQUAL," arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void "), Diff(DELETE,"written"), Diff(INSERT,"socketChannelRead"), Diff(EQUAL,"(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ServerConfigure extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2239" _type="Insert" date="Mon Apr 11 21:02:54 EDT 2022" docASTNodeCount="1322" docActiveCodeLength="9583" docExpressionCount="918" docLength="10784" length="131" offset="10646" repeat="4" starttimestamp="1649721002230" timestamp="4372036" timestamp2="4372043">
    <text><![CDATA[

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="2248" _type="PauseCommand" date="Mon Apr 11 21:02:58 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4376061">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2227]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2249" _type="SelectTextCommand" caretOffset="7368" date="Mon Apr 11 21:02:58 EDT 2022" end="7649" start="7368" starttimestamp="1649721002230" timestamp="4376275" />
  <Command __id="2251" _type="PauseCommand" date="Mon Apr 11 21:03:04 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4381948">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5673]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2250" _type="ShellCommand" date="Mon Apr 11 21:03:04 EDT 2022" starttimestamp="1649721002230" timestamp="4381948" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2252" _type="ShellCommand" date="Mon Apr 11 21:03:04 EDT 2022" starttimestamp="1649721002230" timestamp="4382027" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2258" _type="PauseCommand" date="Mon Apr 11 21:03:05 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4383131">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1070]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2257" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:03:05 EDT 2022" starttimestamp="1649721002230" timestamp="4383131" />
  <Command __id="2259" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:03:05 EDT 2022" starttimestamp="1649721002230" timestamp="4383237" />
  <Command __id="2260" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:03:05 EDT 2022" starttimestamp="1649721002230" timestamp="4383296" />
  <Command __id="2262" _type="PauseCommand" date="Mon Apr 11 21:03:07 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4385519">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2223]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2261" _type="MoveCaretCommand" caretOffset="7782" date="Mon Apr 11 21:03:07 EDT 2022" docOffset="7782" starttimestamp="1649721002230" timestamp="4385519" />
  <Command __id="2264" _type="PauseCommand" date="Mon Apr 11 21:03:12 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4390172">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4653]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2263" _type="SelectTextCommand" caretOffset="7653" date="Mon Apr 11 21:03:12 EDT 2022" end="7780" start="7653" starttimestamp="1649721002230" timestamp="4390172" />
  <Command __id="2265" _type="CopyCommand" date="Mon Apr 11 21:03:12 EDT 2022" starttimestamp="1649721002230" timestamp="4390367" />
  <Command __id="2247" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:02:58 EDT 2022" docASTNodeCount="940" docActiveCodeLength="6824" docExpressionCount="648" docLength="7656" projectName="A6" starttimestamp="1649721002230" timestamp="4376060">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2253" _type="Insert" date="Mon Apr 11 21:03:04 EDT 2022" docASTNodeCount="958" docActiveCodeLength="6921" docExpressionCount="656" docLength="7787" length="131" offset="7649" repeat="4" starttimestamp="1649721002230" timestamp="4382061" timestamp2="4382068">
    <text><![CDATA[

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="2267" _type="PauseCommand" date="Mon Apr 11 21:03:13 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4391424">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1057]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2268" _type="MoveCaretCommand" caretOffset="10170" date="Mon Apr 11 21:03:13 EDT 2022" docOffset="10170" starttimestamp="1649721002230" timestamp="4391516" />
  <Command __id="2266" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:03:13 EDT 2022" docASTNodeCount="1264" docActiveCodeLength="9081" docExpressionCount="888" docLength="10180" projectName="A6" starttimestamp="1649721002230" timestamp="4391424">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶"), Diff(INSERT,"import java.nio.channels.ServerSocketChannel;¶"), Diff(EQUAL,"import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	"), Diff(INSERT,"@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientOutCoupler;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {

	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="2270" _type="PauseCommand" date="Mon Apr 11 21:03:14 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4392670">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1154]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="2269" _type="Insert" date="Mon Apr 11 21:03:14 EDT 2022" docASTNodeCount="1264" docActiveCodeLength="9087" docExpressionCount="888" docLength="10186" length="6" offset="10170" repeat="2" starttimestamp="1649721002230" timestamp="4392670" timestamp2="4392849">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <Command __id="2271" _type="InsertStringCommand" date="Mon Apr 11 21:03:14 EDT 2022" starttimestamp="1649721002230" timestamp="4392683" timestamp2="4392683">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2273" _type="InsertStringCommand" date="Mon Apr 11 21:03:15 EDT 2022" starttimestamp="1649721002230" timestamp="4392857" timestamp2="4392857">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2279" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:03:20 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="4398304" type="Run" />
  <Command __id="2282" _type="PauseCommand" date="Mon Apr 11 21:03:22 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4400621">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2317]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2281" _type="ShellCommand" date="Mon Apr 11 21:03:22 EDT 2022" starttimestamp="1649721002230" timestamp="4400621" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2284" _type="PauseCommand" date="Mon Apr 11 21:03:24 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4402506">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1885]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2283" _type="ConsoleOutput" date="Mon Apr 11 21:03:24 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4402506" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 21:03:24 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedInterfaces@374fdb39 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 21:03:24 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2286" _type="PauseCommand" date="Mon Apr 11 21:03:26 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4404675">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2169]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2285" _type="ConsoleOutput" date="Mon Apr 11 21:03:26 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4404675" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:95
Running second pass checks Mon Apr 11 21:03:26 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 21:03:26 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 21:03:26 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:95¶Running second pass checks Mon Apr 11 21:03:26 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 21:03:26 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Apr 11 21:03:2"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2288" _type="PauseCommand" date="Mon Apr 11 21:03:27 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4405741">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1066]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2287" _type="ConsoleOutput" date="Mon Apr 11 21:03:27 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4405741" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 21:03:27 EDT 2022
Generating checks:Mon Apr 11 21:03:27 EDT 2022
Finished Generating checks:Mon Apr 11 21:03:27 EDT 2022
Generating externals:Mon Apr 11 21:03:27 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:95¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 21:03:2"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Apr 11 21:03:27 EDT 2022¶Finished Generating check"), Diff(EQUAL,"s:Mon Apr 11 21:03:2"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 21:03:2"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2289" _type="ConsoleOutput" date="Mon Apr 11 21:03:28 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4406077" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 21:03:28 EDT 2022
Test execution time (ms):3657
Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Apr 11 21:03:27 EDT 2022¶"), Diff(EQUAL,"Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Mon Apr 11 21:03:2"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Finished Generating checks:Mon Apr 11 21:03:27 EDT 2022¶Generating externals:Mon Apr 11 21:03:27 EDT 2022"), Diff(INSERT,"Test execution time (ms):3657¶Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2290" _type="ConsoleOutput" date="Mon Apr 11 21:03:28 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4406139" type="ConsoleOutput">
    <outputString><![CDATA[A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862

Test execution time (ms):10
A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.9

Test execution time (ms):6

Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (302)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (296)
 |- readThread (3)
  |~ ClientReadThread.java (25)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (25)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (347)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceRMI.java (38)
   |~ ServerRemoteObjectGIPC.java (335)
   |~ ServerRemoteObjectRMI.java (260)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 21:03:28 EDT 2022¶Test execution time (ms):3657¶Test execution time (ms):26"), Diff(INSERT,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶¶Test execution time (ms):10¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.9¶¶Test execution time (ms):6¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (347)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceRMI.java (38)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectRMI.java (260)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2291" _type="ConsoleOutput" date="Mon Apr 11 21:03:28 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4406201" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):35
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶¶Test execution time (ms):10¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.9¶¶Test execution time (ms):6¶¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (296)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (347)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceRMI.java (38)¶   |~ ServerRemoteObjectGIPC.java (335)¶   |~ ServerRemoteObjectRMI.java (260)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)"), Diff(INSERT,"¶Test execution time (ms):35"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2293" _type="PauseCommand" date="Mon Apr 11 21:03:32 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4410369">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4168]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2292" _type="ConsoleOutput" date="Mon Apr 11 21:03:32 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4410369" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedSignatures@5b2f2280 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):35"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedSignatures@5b2f2280 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2295" _type="PauseCommand" date="Mon Apr 11 21:03:34 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4412238">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1869]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2294" _type="ConsoleOutput" date="Mon Apr 11 21:03:34 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4412238" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedSignatures@5b2f2280 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedSignatures@5b2f2280 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2297" _type="PauseCommand" date="Mon Apr 11 21:03:36 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4413874">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1636]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2296" _type="ConsoleOutput" date="Mon Apr 11 21:03:36 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4413874" type="ConsoleOutput">
    <outputString><![CDATA[A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):4
Test execution time (ms):11
Test execution time (ms):10
Test execution time (ms):8
Test execution time (ms):7
Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s21.assignment6.style.A6ExpectedSignatures@5b2f2280 . Results may change."), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):4¶Test execution time (ms):11¶Test execution time (ms):10¶Test execution time (ms):8¶Test execution time (ms):7¶Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2299" _type="PauseCommand" date="Mon Apr 11 21:04:18 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="4456560">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[42686]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2298" _type="ShellCommand" date="Mon Apr 11 21:04:18 EDT 2022" starttimestamp="1649721002230" timestamp="4456560" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2301" _type="SelectTextCommand" caretOffset="7653" date="Mon Apr 11 21:04:19 EDT 2022" end="7780" start="7653" starttimestamp="1649721002230" timestamp="4457025" />
  <Command __id="2303" _type="PauseCommand" date="Mon Apr 11 21:04:21 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4458778">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1753]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2302" _type="MoveCaretCommand" caretOffset="7645" date="Mon Apr 11 21:04:21 EDT 2022" docOffset="7645" starttimestamp="1649721002230" timestamp="4458778" />
  <Command __id="2306" _type="PauseCommand" date="Mon Apr 11 21:04:22 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4459915">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1137]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2305" _type="ShellCommand" date="Mon Apr 11 21:04:22 EDT 2022" starttimestamp="1649721002230" timestamp="4459915" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2308" _type="PauseCommand" date="Mon Apr 11 21:04:24 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4461909">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1994]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2307" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:24 EDT 2022" forward="false" matchWord="false" offset="7645" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4461909" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2310" _type="PauseCommand" date="Mon Apr 11 21:04:25 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4463494">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1585]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2309" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:25 EDT 2022" forward="false" matchWord="false" offset="7421" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4463494" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2311" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:26 EDT 2022" forward="false" matchWord="false" offset="7421" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4463853" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2313" _type="PauseCommand" date="Mon Apr 11 21:04:28 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4466566">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2713]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2312" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:28 EDT 2022" forward="true" matchWord="false" offset="7421" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4466566" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2314" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:29 EDT 2022" forward="true" matchWord="false" offset="7421" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4466937" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2315" _type="ShellCommand" date="Mon Apr 11 21:04:30 EDT 2022" starttimestamp="1649721002230" timestamp="4467908" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2274" _type="Replace" date="Mon Apr 11 21:03:15 EDT 2022" docASTNodeCount="1282" docActiveCodeLength="9179" docExpressionCount="896" docLength="10312" endLine="327" insertionLength="127" int_docASTNodeCount="1264" int_docActiveCodeLength="9086" int_docExpressionCount="888" int_docLength="10185" length="1" offset="10175" startLine="327" starttimestamp="1649721002230" timestamp="4393135">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></insertedText>
  </DocumentChange>
  <Command __id="2300" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:04:19 EDT 2022" docASTNodeCount="958" docActiveCodeLength="6921" docExpressionCount="656" docLength="7787" projectName="A6" starttimestamp="1649721002230" timestamp="4456823">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(INSERT,"	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		IPCMechanism mechanism = getIPCMechanism();
		setIPCMechanism(mechanism);
		boolean broadcast = true;
		setBroadcastMetaState(broadcast);
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}

	@Override
	public void createGIPCRegistry() throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,
			int aProposalNumber, boolean broadcast) throws RemoteException {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="2317" _type="PauseCommand" date="Mon Apr 11 21:04:34 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4471948">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4039]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2318" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:04:34 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="4472187" />
  <Command __id="2320" _type="PauseCommand" date="Mon Apr 11 21:04:35 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4473487">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1300]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2319" _type="MoveCaretCommand" caretOffset="345" date="Mon Apr 11 21:04:35 EDT 2022" docOffset="2020" starttimestamp="1649721002230" timestamp="4473487" />
  <Command __id="2321" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:04:35 EDT 2022" starttimestamp="1649721002230" timestamp="4473558" />
  <Command __id="2322" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:04:35 EDT 2022" starttimestamp="1649721002230" timestamp="4473566" />
  <Command __id="2324" _type="ShellCommand" date="Mon Apr 11 21:04:36 EDT 2022" starttimestamp="1649721002230" timestamp="4474092" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2326" _type="PauseCommand" date="Mon Apr 11 21:04:38 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4475936">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1843]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2325" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:38 EDT 2022" forward="true" matchWord="false" offset="2020" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4475935" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2328" _type="PauseCommand" date="Mon Apr 11 21:04:41 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4479443">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3508]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2327" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:41 EDT 2022" forward="true" matchWord="false" offset="3744" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4479443" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2329" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:42 EDT 2022" forward="true" matchWord="false" offset="5578" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4480252" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2331" _type="PauseCommand" date="Mon Apr 11 21:04:43 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4481299">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1047]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2330" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:43 EDT 2022" forward="true" matchWord="false" offset="7948" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4481299" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2332" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:43 EDT 2022" forward="true" matchWord="false" offset="7948" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4481717" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2333" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:44 EDT 2022" forward="true" matchWord="false" offset="7948" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4481966" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2334" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:04:44 EDT 2022" forward="true" matchWord="false" offset="7948" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4482203" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2336" _type="PauseCommand" date="Mon Apr 11 21:04:55 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4492985">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[10782]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2335" _type="ShellCommand" date="Mon Apr 11 21:04:55 EDT 2022" starttimestamp="1649721002230" timestamp="4492985" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2338" _type="PauseCommand" date="Mon Apr 11 21:05:12 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4510155">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17170]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2337" _type="MoveCaretCommand" caretOffset="6464" date="Mon Apr 11 21:05:12 EDT 2022" docOffset="8139" starttimestamp="1649721002230" timestamp="4510155" />
  <Command __id="2341" _type="PauseCommand" date="Mon Apr 11 21:05:16 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4514717">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4562]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2340" _type="ShellCommand" date="Mon Apr 11 21:05:16 EDT 2022" starttimestamp="1649721002230" timestamp="4514717" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2343" _type="PauseCommand" date="Mon Apr 11 21:05:21 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4518856">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4139]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2342" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:21 EDT 2022" forward="true" matchWord="false" offset="8139" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4518856" wrapSearch="false">
    <searchString><![CDATA[RMIRegistry]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2345" _type="PauseCommand" date="Mon Apr 11 21:05:23 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4521245">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2389]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2344" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:23 EDT 2022" forward="false" matchWord="false" offset="8139" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4521245" wrapSearch="false">
    <searchString><![CDATA[RMIRegistry]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2347" _type="PauseCommand" date="Mon Apr 11 21:05:24 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4522679">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1434]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2346" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:24 EDT 2022" forward="false" matchWord="false" offset="6041" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4522679" wrapSearch="false">
    <searchString><![CDATA[RMIRegistry]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2349" _type="PauseCommand" date="Mon Apr 11 21:05:29 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4527267">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[4588]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2348" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:29 EDT 2022" forward="false" matchWord="false" offset="6041" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4527267" wrapSearch="false">
    <searchString><![CDATA[RMIRegistryLoca]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2350" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:29 EDT 2022" forward="false" matchWord="false" offset="5724" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4527494" wrapSearch="false">
    <searchString><![CDATA[RMIRegistryLoca]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2352" _type="PauseCommand" date="Mon Apr 11 21:05:35 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4532975">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[5481]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2351" _type="ConsoleOutput" date="Mon Apr 11 21:05:35 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4532975" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOTwoClientConnection did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):112620
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6NoCheckstyleWarnings"), Diff(INSERT,"GIPCRMINIOTwoClientConnection"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"Warnings found in checkstyle text, see traced consol"), Diff(INSERT,"In Server enabling NIO, no lin"), Diff(EQUAL,"e "), Diff(INSERT,"f"), Diff(EQUAL,"ou"), Diff(DELETE,"tput%0.0¶¶Test execution time (ms):4¶Test execution time (ms):11¶Test execution time (ms):10¶Test execution time (ms):8¶Test execution time (ms):7"), Diff(INSERT,"nd matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"5"), Diff(INSERT,"112620"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2354" _type="PauseCommand" date="Mon Apr 11 21:05:39 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4536774">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3799]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2353" _type="ShellCommand" date="Mon Apr 11 21:05:39 EDT 2022" starttimestamp="1649721002230" timestamp="4536774" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2357" _type="PauseCommand" date="Mon Apr 11 21:05:42 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4539857">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3083]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2356" _type="ShellCommand" date="Mon Apr 11 21:05:42 EDT 2022" starttimestamp="1649721002230" timestamp="4539857" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2359" _type="PauseCommand" date="Mon Apr 11 21:05:43 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4541576">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1719]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2358" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:43 EDT 2022" forward="false" matchWord="false" offset="5724" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4541576" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2361" _type="PauseCommand" date="Mon Apr 11 21:05:46 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4543884">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2308]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2360" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:46 EDT 2022" forward="false" matchWord="false" offset="6885" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4543884" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2363" _type="PauseCommand" date="Mon Apr 11 21:05:49 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4546930">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3046]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2362" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:49 EDT 2022" forward="false" matchWord="false" offset="8527" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4546930" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2364" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:49 EDT 2022" forward="false" matchWord="false" offset="8527" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4547479" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2365" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:49 EDT 2022" forward="false" matchWord="false" offset="8527" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4547708" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2366" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:50 EDT 2022" forward="false" matchWord="false" offset="8527" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4547910" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2368" _type="PauseCommand" date="Mon Apr 11 21:05:52 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4550153">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2243]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2367" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:52 EDT 2022" forward="true" matchWord="false" offset="8527" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4550153" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2369" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:53 EDT 2022" forward="true" matchWord="false" offset="492" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4550947" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2370" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:53 EDT 2022" forward="true" matchWord="false" offset="832" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4551366" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2371" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:54 EDT 2022" forward="true" matchWord="false" offset="846" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4551823" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2372" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:54 EDT 2022" forward="true" matchWord="false" offset="880" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4552375" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2373" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:54 EDT 2022" forward="true" matchWord="false" offset="894" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4552718" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2374" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:55 EDT 2022" forward="true" matchWord="false" offset="926" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4553080" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2375" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:55 EDT 2022" forward="true" matchWord="false" offset="940" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4553415" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2376" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:56 EDT 2022" forward="true" matchWord="false" offset="2246" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4553975" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2377" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:56 EDT 2022" forward="true" matchWord="false" offset="2272" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4554607" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2378" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:57 EDT 2022" forward="true" matchWord="false" offset="2289" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4555427" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2379" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:58 EDT 2022" forward="true" matchWord="false" offset="2315" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4555870" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2380" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:58 EDT 2022" forward="true" matchWord="false" offset="2367" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4556271" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2381" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:58 EDT 2022" forward="true" matchWord="false" offset="2410" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4556727" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2382" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:05:59 EDT 2022" forward="true" matchWord="false" offset="2447" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4557285" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2383" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:00 EDT 2022" forward="true" matchWord="false" offset="2533" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4557937" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2384" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:00 EDT 2022" forward="true" matchWord="false" offset="2621" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4558650" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2385" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:01 EDT 2022" forward="true" matchWord="false" offset="3376" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4559363" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2386" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:02 EDT 2022" forward="true" matchWord="false" offset="3415" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4559815" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2387" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:02 EDT 2022" forward="true" matchWord="false" offset="3744" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4560267" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2388" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:02 EDT 2022" forward="true" matchWord="false" offset="3813" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4560757" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2389" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:03 EDT 2022" forward="true" matchWord="false" offset="3873" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4561227" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2390" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:03 EDT 2022" forward="true" matchWord="false" offset="3888" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4561686" wrapSearch="false">
    <searchString><![CDATA[SERVER]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2392" _type="PauseCommand" date="Mon Apr 11 21:06:08 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4566647">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[4961]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2391" _type="ShellCommand" date="Mon Apr 11 21:06:08 EDT 2022" starttimestamp="1649721002230" timestamp="4566647" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2395" _type="PauseCommand" date="Mon Apr 11 21:06:23 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4581539">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14892]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2394" _type="ShellCommand" date="Mon Apr 11 21:06:23 EDT 2022" starttimestamp="1649721002230" timestamp="4581539" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2397" _type="PauseCommand" date="Mon Apr 11 21:06:27 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4584970">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3431]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2396" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:27 EDT 2022" forward="true" matchWord="false" offset="3927" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4584970" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2399" _type="PauseCommand" date="Mon Apr 11 21:06:30 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4588136">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3166]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2398" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:30 EDT 2022" forward="true" matchWord="false" offset="4089" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4588136" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2401" _type="PauseCommand" date="Mon Apr 11 21:06:31 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4589340">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1203]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2400" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:31 EDT 2022" forward="true" matchWord="false" offset="4989" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4589339" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2402" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:32 EDT 2022" forward="true" matchWord="false" offset="5076" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4590113" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2404" _type="PauseCommand" date="Mon Apr 11 21:06:46 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4604408">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[14295]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2403" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:46 EDT 2022" forward="true" matchWord="false" offset="5245" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4604408" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2405" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:46 EDT 2022" forward="true" matchWord="false" offset="5337" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4604769" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2407" _type="PauseCommand" date="Mon Apr 11 21:06:54 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4612504">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[7735]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2406" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:06:54 EDT 2022" forward="true" matchWord="false" offset="5970" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4612504" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2409" _type="PauseCommand" date="Mon Apr 11 21:07:03 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4621385">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[8881]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2408" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:07:03 EDT 2022" forward="true" matchWord="false" offset="6028" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4621385" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2410" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:07:03 EDT 2022" forward="true" matchWord="false" offset="6028" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4621759" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2411" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:07:04 EDT 2022" forward="true" matchWord="false" offset="6028" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4622013" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2413" _type="PauseCommand" date="Mon Apr 11 21:07:07 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4624871">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2858]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2412" _type="ShellCommand" date="Mon Apr 11 21:07:07 EDT 2022" starttimestamp="1649721002230" timestamp="4624871" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2415" _type="PauseCommand" date="Mon Apr 11 21:07:08 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4626039">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1168]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2414" _type="ShellCommand" date="Mon Apr 11 21:07:08 EDT 2022" starttimestamp="1649721002230" timestamp="4626039" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2417" _type="PauseCommand" date="Mon Apr 11 21:07:27 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4645571">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[19532]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2416" _type="ConsoleOutput" date="Mon Apr 11 21:07:27 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4645571" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOTwoClientReadWriteNonAtomic did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*
RMI and GIPC are not checked because NIO failed%0.0

Test execution time (ms):112576
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOTwoClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(INSERT,"¶RMI and GIPC are not checked because NIO failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):112"), Diff(DELETE,"620"), Diff(INSERT,"576"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2419" _type="PauseCommand" date="Mon Apr 11 21:07:39 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4657753">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[12182]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2418" _type="ShellCommand" date="Mon Apr 11 21:07:39 EDT 2022" starttimestamp="1649721002230" timestamp="4657753" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2421" _type="PauseCommand" date="Mon Apr 11 21:07:41 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4659082">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1329]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2420" _type="SelectTextCommand" caretOffset="3734" date="Mon Apr 11 21:07:41 EDT 2022" end="3754" start="3734" starttimestamp="1649721002230" timestamp="4659082" />
  <Command __id="2423" _type="PauseCommand" date="Mon Apr 11 21:07:42 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4660366">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1284]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="2422" _type="CopyCommand" date="Mon Apr 11 21:07:42 EDT 2022" starttimestamp="1649721002230" timestamp="4660366" />
  <Command __id="2426" _type="PauseCommand" date="Mon Apr 11 21:07:55 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4673588">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[13222]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2425" _type="ShellCommand" date="Mon Apr 11 21:07:55 EDT 2022" starttimestamp="1649721002230" timestamp="4673588" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2428" _type="PauseCommand" date="Mon Apr 11 21:08:00 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4678691">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5103]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2427" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:08:00 EDT 2022" forward="true" matchWord="false" offset="3754" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4678691" wrapSearch="false">
    <searchString><![CDATA[RMI_SERVER_HO]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2430" _type="PauseCommand" date="Mon Apr 11 21:08:06 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4684660">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[5969]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2429" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:08:06 EDT 2022" forward="true" matchWord="false" offset="5678" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4684660" wrapSearch="false">
    <searchString><![CDATA[RMI_SERVER_HO]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2431" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:08:07 EDT 2022" forward="true" matchWord="false" offset="5755" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4685327" wrapSearch="false">
    <searchString><![CDATA[RMI_SERVER_HO]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2432" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:08:07 EDT 2022" forward="true" matchWord="false" offset="5755" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4685727" wrapSearch="false">
    <searchString><![CDATA[RMI_SERVER_HO]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2433" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:08:08 EDT 2022" forward="true" matchWord="false" offset="5755" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4686157" wrapSearch="false">
    <searchString><![CDATA[RMI_SERVER_HO]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2435" _type="PauseCommand" date="Mon Apr 11 21:08:53 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="4731062">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[44905]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2434" _type="ShellCommand" date="Mon Apr 11 21:08:53 EDT 2022" starttimestamp="1649721002230" timestamp="4731062" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2437" _type="PauseCommand" date="Mon Apr 11 21:09:15 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="4753143">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[22081]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2436" _type="ConsoleOutput" date="Mon Apr 11 21:09:15 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4753143" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOClientMetaStateNoBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):107582
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIO"), Diff(DELETE,"Two"), Diff(EQUAL,"Client"), Diff(DELETE,"ReadWriteNonAtomic"), Diff(INSERT,"MetaStateNoBroadcast"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(DELETE,"¶RMI and GIPC are not checked because NIO failed"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):1"), Diff(DELETE,"12576"), Diff(INSERT,"07582"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2439" _type="PauseCommand" date="Mon Apr 11 21:09:43 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="4781015">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[27872]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2438" _type="ShellCommand" date="Mon Apr 11 21:09:43 EDT 2022" starttimestamp="1649721002230" timestamp="4781015" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2441" _type="PauseCommand" date="Mon Apr 11 21:10:34 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="4831846">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[50831]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2440" _type="ShellCommand" date="Mon Apr 11 21:10:34 EDT 2022" starttimestamp="1649721002230" timestamp="4831846" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2443" _type="SelectTextCommand" caretOffset="7421" date="Mon Apr 11 21:10:34 EDT 2022" end="7421" start="7415" starttimestamp="1649721002230" timestamp="4832408" />
  <Command __id="2445" _type="PauseCommand" date="Mon Apr 11 21:10:47 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4845117">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[12709]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2444" _type="MoveCaretCommand" caretOffset="5285" date="Mon Apr 11 21:10:47 EDT 2022" docOffset="5285" starttimestamp="1649721002230" timestamp="4845117" />
  <Command __id="2447" _type="ShellCommand" date="Mon Apr 11 21:10:48 EDT 2022" starttimestamp="1649721002230" timestamp="4845872" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2449" _type="PauseCommand" date="Mon Apr 11 21:10:52 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4850555">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4683]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2448" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:10:52 EDT 2022" forward="false" matchWord="false" offset="5285" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4850555" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2450" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:10:53 EDT 2022" forward="false" matchWord="false" offset="4014" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4851400" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2451" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:10:54 EDT 2022" forward="false" matchWord="false" offset="4014" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4852087" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2453" _type="PauseCommand" date="Mon Apr 11 21:10:56 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4854154">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2067]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2452" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:10:56 EDT 2022" forward="true" matchWord="false" offset="4014" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4854154" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2455" _type="PauseCommand" date="Mon Apr 11 21:10:59 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4857448">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3294]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2454" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:10:59 EDT 2022" forward="true" matchWord="false" offset="5322" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4857448" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2456" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:11:00 EDT 2022" forward="true" matchWord="false" offset="5367" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4857878" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2457" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:11:00 EDT 2022" forward="true" matchWord="false" offset="5430" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4858717" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2458" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:11:01 EDT 2022" forward="true" matchWord="false" offset="5430" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4859245" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2459" _type="FindCommand" caseSensitive="false" date="Mon Apr 11 21:11:02 EDT 2022" forward="true" matchWord="false" offset="5430" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1649721002230" timestamp="4860153" wrapSearch="false">
    <searchString><![CDATA[SERVER_NAME]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2461" _type="PauseCommand" date="Mon Apr 11 21:11:08 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4865812">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[5659]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2460" _type="ConsoleOutput" date="Mon Apr 11 21:11:08 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4865812" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOClientMetaStateBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):112604
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOClientMetaState"), Diff(DELETE,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶¶Test execution time (ms):1"), Diff(DELETE,"07582"), Diff(INSERT,"12604"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2463" _type="PauseCommand" date="Mon Apr 11 21:11:21 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4879713">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13901]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2462" _type="ShellCommand" date="Mon Apr 11 21:11:21 EDT 2022" starttimestamp="1649721002230" timestamp="4879713" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2465" _type="PauseCommand" date="Mon Apr 11 21:11:24 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4881826">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2113]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2464" _type="SelectTextCommand" caretOffset="2380" date="Mon Apr 11 21:11:24 EDT 2022" end="2420" start="2380" starttimestamp="1649721002230" timestamp="4881826" />
  <Command __id="2467" _type="PauseCommand" date="Mon Apr 11 21:11:30 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4888542">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[6716]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2466" _type="SelectTextCommand" caretOffset="2815" date="Mon Apr 11 21:11:30 EDT 2022" end="2856" start="2815" starttimestamp="1649721002230" timestamp="4888542" />
  <Command __id="2468" _type="CopyCommand" date="Mon Apr 11 21:11:31 EDT 2022" starttimestamp="1649721002230" timestamp="4888976" />
  <Command __id="2469" _type="MoveCaretCommand" caretOffset="2918" date="Mon Apr 11 21:11:32 EDT 2022" docOffset="2918" starttimestamp="1649721002230" timestamp="4889877" />
  <Command __id="2471" _type="PauseCommand" date="Mon Apr 11 21:11:33 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4890931">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1054]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2470" _type="MoveCaretCommand" caretOffset="2884" date="Mon Apr 11 21:11:33 EDT 2022" docOffset="2884" starttimestamp="1649721002230" timestamp="4890931" />
  <Command __id="2473" _type="InsertStringCommand" date="Mon Apr 11 21:11:33 EDT 2022" starttimestamp="1649721002230" timestamp="4891297" timestamp2="4891297">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2475" _type="PasteCommand" date="Mon Apr 11 21:11:33 EDT 2022" starttimestamp="1649721002230" timestamp="4891595" />
  <Command __id="2316" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:04:34 EDT 2022" docASTNodeCount="1192" docActiveCodeLength="9094" docExpressionCount="840" docLength="10065" projectName="A6" starttimestamp="1649721002230" timestamp="4471947">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2442" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:10:34 EDT 2022" docASTNodeCount="958" docActiveCodeLength="6921" docExpressionCount="656" docLength="7787" projectName="A6" starttimestamp="1649721002230" timestamp="4832196">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2472" _type="Insert" date="Mon Apr 11 21:11:33 EDT 2022" docASTNodeCount="958" docActiveCodeLength="6925" docExpressionCount="656" docLength="7791" length="4" offset="2884" starttimestamp="1649721002230" timestamp="4891281">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2474" _type="Replace" date="Mon Apr 11 21:11:33 EDT 2022" docASTNodeCount="963" docActiveCodeLength="6966" docExpressionCount="660" docLength="7832" endLine="68" insertionLength="43" int_docASTNodeCount="958" int_docActiveCodeLength="6923" int_docExpressionCount="656" int_docLength="7789" length="2" offset="2886" startLine="68" starttimestamp="1649721002230" timestamp="4891586">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ServerArgsProcessor.getRegistryPort(args)]]></insertedText>
  </DocumentChange>
  <Command __id="2477" _type="PauseCommand" date="Mon Apr 11 21:11:34 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4892759">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1164]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="2476" _type="Delete" date="Mon Apr 11 21:11:34 EDT 2022" docASTNodeCount="960" docActiveCodeLength="6944" docExpressionCount="656" docLength="7810" endLine="68" length="22" offset="2907" repeat="22" startLine="68" starttimestamp="1649721002230" timestamp="4892759" timestamp2="4894313">
    <text><![CDATA[.getRegistryPort(args)]]></text>
  </DocumentChange>
  <Command __id="2478" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:34 EDT 2022" starttimestamp="1649721002230" timestamp="4892769" />
  <Command __id="2480" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893266" />
  <Command __id="2482" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893298" />
  <Command __id="2484" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893336" />
  <Command __id="2486" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893357" />
  <Command __id="2488" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893406" />
  <Command __id="2490" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893417" />
  <Command __id="2492" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893446" />
  <Command __id="2494" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893476" />
  <Command __id="2496" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893505" />
  <Command __id="2498" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893537" />
  <Command __id="2500" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893567" />
  <Command __id="2502" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893598" />
  <Command __id="2504" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893627" />
  <Command __id="2506" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893657" />
  <Command __id="2508" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893689" />
  <Command __id="2510" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893719" />
  <Command __id="2512" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:35 EDT 2022" starttimestamp="1649721002230" timestamp="4893751" />
  <Command __id="2514" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:36 EDT 2022" starttimestamp="1649721002230" timestamp="4893781" />
  <Command __id="2516" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:36 EDT 2022" starttimestamp="1649721002230" timestamp="4893809" />
  <Command __id="2518" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:36 EDT 2022" starttimestamp="1649721002230" timestamp="4893975" />
  <Command __id="2520" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:11:36 EDT 2022" starttimestamp="1649721002230" timestamp="4894316" />
  <Command __id="2522" _type="InsertStringCommand" date="Mon Apr 11 21:11:36 EDT 2022" starttimestamp="1649721002230" timestamp="4894642" timestamp2="4894642">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2523" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 11 21:11:37 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="4895189" />
  <Command __id="2526" _type="PauseCommand" date="Mon Apr 11 21:12:17 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="4935231">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[40042]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2525" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 11 21:12:17 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="4935231" />
  <Command __id="2528" _type="PauseCommand" date="Mon Apr 11 21:12:18 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4936379">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1148]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2527" _type="SelectTextCommand" caretOffset="2888" date="Mon Apr 11 21:12:18 EDT 2022" end="2909" start="2888" starttimestamp="1649721002230" timestamp="4936379" />
  <Command __id="2530" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:12:18 EDT 2022" starttimestamp="1649721002230" timestamp="4936720" />
  <Command __id="2532" _type="PauseCommand" date="Mon Apr 11 21:12:20 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4938067">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1347]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2531" _type="ShellCommand" date="Mon Apr 11 21:12:20 EDT 2022" starttimestamp="1649721002230" timestamp="4938067" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2534" _type="PauseCommand" date="Mon Apr 11 21:12:26 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4944662">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6595]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2533" _type="ShellCommand" date="Mon Apr 11 21:12:26 EDT 2022" starttimestamp="1649721002230" timestamp="4944662" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2536" _type="PauseCommand" date="Mon Apr 11 21:12:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4946023">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1361]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2535" _type="SelectTextCommand" caretOffset="2380" date="Mon Apr 11 21:12:28 EDT 2022" end="2420" start="2380" starttimestamp="1649721002230" timestamp="4946023" />
  <Command __id="2537" _type="CopyCommand" date="Mon Apr 11 21:12:28 EDT 2022" starttimestamp="1649721002230" timestamp="4946277" />
  <Command __id="2539" _type="PauseCommand" date="Mon Apr 11 21:12:29 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4947459">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1182]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2538" _type="MoveCaretCommand" caretOffset="2884" date="Mon Apr 11 21:12:29 EDT 2022" docOffset="2884" starttimestamp="1649721002230" timestamp="4947459" />
  <Command __id="2541" _type="InsertStringCommand" date="Mon Apr 11 21:12:29 EDT 2022" starttimestamp="1649721002230" timestamp="4947721" timestamp2="4947721">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2543" _type="PasteCommand" date="Mon Apr 11 21:12:30 EDT 2022" starttimestamp="1649721002230" timestamp="4948349" />
  <Command __id="2545" _type="PauseCommand" date="Mon Apr 11 21:12:32 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4950174">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1825]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2544" _type="SelectTextCommand" caretOffset="2861" date="Mon Apr 11 21:12:32 EDT 2022" end="2872" start="2861" starttimestamp="1649721002230" timestamp="4950174" />
  <Command __id="2546" _type="CopyCommand" date="Mon Apr 11 21:12:32 EDT 2022" starttimestamp="1649721002230" timestamp="4950628" />
  <Command __id="2547" _type="MoveCaretCommand" caretOffset="2888" date="Mon Apr 11 21:12:33 EDT 2022" docOffset="2888" starttimestamp="1649721002230" timestamp="4951474" />
  <Command __id="2549" _type="PasteCommand" date="Mon Apr 11 21:12:33 EDT 2022" starttimestamp="1649721002230" timestamp="4951721" />
  <Command __id="2551" _type="InsertStringCommand" date="Mon Apr 11 21:12:34 EDT 2022" starttimestamp="1649721002230" timestamp="4952099" timestamp2="4952099">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2553" _type="InsertStringCommand" date="Mon Apr 11 21:12:34 EDT 2022" starttimestamp="1649721002230" timestamp="4952319" timestamp2="4952319">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2555" _type="InsertStringCommand" date="Mon Apr 11 21:12:34 EDT 2022" starttimestamp="1649721002230" timestamp="4952503" timestamp2="4952503">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2557" _type="PauseCommand" date="Mon Apr 11 21:12:36 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4954653">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2150]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2556" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:12:36 EDT 2022" starttimestamp="1649721002230" timestamp="4954653" />
  <Command __id="2558" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:12:36 EDT 2022" starttimestamp="1649721002230" timestamp="4954748" />
  <Command __id="2559" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:12:37 EDT 2022" starttimestamp="1649721002230" timestamp="4954791" />
  <Command __id="2561" _type="PauseCommand" date="Mon Apr 11 21:12:38 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4956004">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1213]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2560" _type="MoveCaretCommand" caretOffset="2942" date="Mon Apr 11 21:12:38 EDT 2022" docOffset="2942" starttimestamp="1649721002230" timestamp="4956004" />
  <Command __id="2563" _type="InsertStringCommand" date="Mon Apr 11 21:12:38 EDT 2022" starttimestamp="1649721002230" timestamp="4956528" timestamp2="4956528">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2564" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:12:39 EDT 2022" starttimestamp="1649721002230" timestamp="4957143" />
  <Command __id="2565" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:12:39 EDT 2022" starttimestamp="1649721002230" timestamp="4957248" />
  <Command __id="2566" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:12:39 EDT 2022" starttimestamp="1649721002230" timestamp="4957289" />
  <Command __id="2568" _type="PauseCommand" date="Mon Apr 11 21:12:48 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="4966510">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9221]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2567" _type="MoveCaretCommand" caretOffset="2942" date="Mon Apr 11 21:12:48 EDT 2022" docOffset="2942" starttimestamp="1649721002230" timestamp="4966510" />
  <Command __id="2570" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:12:49 EDT 2022" starttimestamp="1649721002230" timestamp="4966825" />
  <Command __id="2572" _type="PauseCommand" date="Mon Apr 11 21:12:50 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4967973">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1148]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2571" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:12:50 EDT 2022" starttimestamp="1649721002230" timestamp="4967973" />
  <Command __id="2573" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:12:50 EDT 2022" starttimestamp="1649721002230" timestamp="4968069" />
  <Command __id="2574" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:12:50 EDT 2022" starttimestamp="1649721002230" timestamp="4968104" />
  <Command __id="2576" _type="PauseCommand" date="Mon Apr 11 21:12:52 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4970096">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1992]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2575" _type="SelectTextCommand" caretOffset="2888" date="Mon Apr 11 21:12:52 EDT 2022" end="2942" start="2888" starttimestamp="1649721002230" timestamp="4970096" />
  <Command __id="2577" _type="CopyCommand" date="Mon Apr 11 21:12:52 EDT 2022" starttimestamp="1649721002230" timestamp="4970432" />
  <DocumentChange __id="2521" _type="Insert" date="Mon Apr 11 21:11:36 EDT 2022" docASTNodeCount="962" docActiveCodeLength="6946" docExpressionCount="658" docLength="7812" length="2" offset="2907" repeat="2" starttimestamp="1649721002230" timestamp="4894636" timestamp2="4895645">
    <text><![CDATA[.g]]></text>
  </DocumentChange>
  <DocumentChange __id="2529" _type="Delete" date="Mon Apr 11 21:12:18 EDT 2022" docASTNodeCount="958" docActiveCodeLength="6925" docExpressionCount="656" docLength="7791" endLine="68" length="21" offset="2888" startLine="68" starttimestamp="1649721002230" timestamp="4936709">
    <text><![CDATA[ServerArgsProcessor.g]]></text>
  </DocumentChange>
  <DocumentChange __id="2540" _type="Insert" date="Mon Apr 11 21:12:29 EDT 2022" docASTNodeCount="958" docActiveCodeLength="6929" docExpressionCount="656" docLength="7795" length="4" offset="2884" starttimestamp="1649721002230" timestamp="4947702">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2542" _type="Replace" date="Mon Apr 11 21:12:30 EDT 2022" docASTNodeCount="963" docActiveCodeLength="6969" docExpressionCount="660" docLength="7835" endLine="68" insertionLength="42" int_docASTNodeCount="958" int_docActiveCodeLength="6927" int_docExpressionCount="656" int_docLength="7793" length="2" offset="2886" startLine="68" starttimestamp="1649721002230" timestamp="4948343">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ClientArgsProcessor.getServerHost(args))]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2548" _type="Replace" date="Mon Apr 11 21:12:33 EDT 2022" docASTNodeCount="963" docActiveCodeLength="6980" docExpressionCount="660" docLength="7846" endLine="68" insertionLength="13" int_docASTNodeCount="963" int_docActiveCodeLength="6967" int_docExpressionCount="660" int_docLength="7833" length="2" offset="2886" startLine="68" starttimestamp="1649721002230" timestamp="4951715">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		SERVER_NAME]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2550" _type="Insert" date="Mon Apr 11 21:12:34 EDT 2022" docASTNodeCount="965" docActiveCodeLength="6983" docExpressionCount="662" docLength="7849" length="3" offset="2899" repeat="3" starttimestamp="1649721002230" timestamp="4952095" timestamp2="4952499">
    <text><![CDATA[ = ]]></text>
  </DocumentChange>
  <DocumentChange __id="2562" _type="Insert" date="Mon Apr 11 21:12:38 EDT 2022" docASTNodeCount="965" docActiveCodeLength="6984" docExpressionCount="662" docLength="7850" length="1" offset="2942" starttimestamp="1649721002230" timestamp="4956520">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="2569" _type="Delete" date="Mon Apr 11 21:12:49 EDT 2022" docASTNodeCount="965" docActiveCodeLength="6983" docExpressionCount="662" docLength="7849" endLine="68" length="1" offset="2941" startLine="68" starttimestamp="1649721002230" timestamp="4966808">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="2579" _type="PauseCommand" date="Mon Apr 11 21:12:53 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4971548">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1116]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2580" _type="SelectTextCommand" caretOffset="5755" date="Mon Apr 11 21:12:53 EDT 2022" end="5755" start="5742" starttimestamp="1649721002230" timestamp="4971648" />
  <Command __id="2582" _type="PauseCommand" date="Mon Apr 11 21:12:55 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4973287">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1639]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2581" _type="MoveCaretCommand" caretOffset="3890" date="Mon Apr 11 21:12:55 EDT 2022" docOffset="3890" starttimestamp="1649721002230" timestamp="4973287" />
  <Command __id="2578" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:12:53 EDT 2022" docASTNodeCount="1192" docActiveCodeLength="9094" docExpressionCount="840" docLength="10065" projectName="A6" starttimestamp="1649721002230" timestamp="4971548">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2584" _type="PauseCommand" date="Mon Apr 11 21:12:57 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4974921">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1634]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="2583" _type="Insert" date="Mon Apr 11 21:12:57 EDT 2022" docASTNodeCount="1192" docActiveCodeLength="9098" docExpressionCount="840" docLength="10069" length="4" offset="3890" starttimestamp="1649721002230" timestamp="4974921">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="2585" _type="InsertStringCommand" date="Mon Apr 11 21:12:57 EDT 2022" starttimestamp="1649721002230" timestamp="4974935" timestamp2="4974935">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2587" _type="PasteCommand" date="Mon Apr 11 21:12:57 EDT 2022" starttimestamp="1649721002230" timestamp="4975452" />
  <Command __id="2589" _type="PauseCommand" date="Mon Apr 11 21:12:58 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4976512">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1060]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2588" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:12:58 EDT 2022" starttimestamp="1649721002230" timestamp="4976512" />
  <Command __id="2590" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:12:58 EDT 2022" starttimestamp="1649721002230" timestamp="4976607" />
  <Command __id="2591" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:12:58 EDT 2022" starttimestamp="1649721002230" timestamp="4976649" />
  <Command __id="2593" _type="PauseCommand" date="Mon Apr 11 21:13:00 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="4978350">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1701]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2592" _type="ConsoleOutput" date="Mon Apr 11 21:13:00 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="4978350" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOServerMetaStateNoBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0

Test execution time (ms):112584
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIO"), Diff(DELETE,"Client"), Diff(INSERT,"Server"), Diff(EQUAL,"MetaState"), Diff(INSERT,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0¶¶Test execution time (ms):112"), Diff(DELETE,"60"), Diff(INSERT,"58"), Diff(EQUAL,"4¶")]]]></diff>
  </Command>
  <Command __id="2595" _type="PauseCommand" date="Mon Apr 11 21:13:17 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="4995589">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[17239]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2594" _type="ShellCommand" date="Mon Apr 11 21:13:17 EDT 2022" starttimestamp="1649721002230" timestamp="4995589" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2597" _type="PauseCommand" date="Mon Apr 11 21:13:21 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="4999024">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3435]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2610" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Apr 11 21:13:30 EDT 2022" starttimestamp="1649721002230" timestamp="5007919" />
  <Command __id="2612" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:13:30 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5007967" type="Run" />
  <Command __id="2613" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:13:30 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5007967" type="Run" />
  <DocumentChange __id="2586" _type="Replace" date="Mon Apr 11 21:12:57 EDT 2022" docASTNodeCount="1199" docActiveCodeLength="9152" docExpressionCount="846" docLength="10123" endLine="90" insertionLength="56" int_docASTNodeCount="1192" int_docActiveCodeLength="9096" int_docExpressionCount="840" int_docLength="10067" length="2" offset="3892" startLine="90" starttimestamp="1649721002230" timestamp="4975338">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		SERVER_NAME = ClientArgsProcessor.getServerHost(args);]]></insertedText>
  </DocumentChange>
  <Command __id="2615" _type="PauseCommand" date="Mon Apr 11 21:13:32 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5010671">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2704]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2616" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:13:33 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="5010948" />
  <Command __id="2618" _type="PauseCommand" date="Mon Apr 11 21:13:44 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5022590">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11642]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2617" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Apr 11 21:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="5022590" />
  <Command __id="2619" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:13:45 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5023298" type="Run" />
  <Command __id="2620" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:13:45 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5023299" type="Run" />
  <Command __id="2622" _type="PauseCommand" date="Mon Apr 11 21:13:47 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5025598">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2299]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2621" _type="ShellCommand" date="Mon Apr 11 21:13:47 EDT 2022" starttimestamp="1649721002230" timestamp="5025598" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2623" _type="ShellCommand" date="Mon Apr 11 21:13:48 EDT 2022" starttimestamp="1649721002230" timestamp="5026506" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2625" _type="PauseCommand" date="Mon Apr 11 21:13:50 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5028474">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1968]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2624" _type="ShellCommand" date="Mon Apr 11 21:13:50 EDT 2022" starttimestamp="1649721002230" timestamp="5028474" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2627" _type="PauseCommand" date="Mon Apr 11 21:14:45 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="5082927">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[54453]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2626" _type="ShellCommand" date="Mon Apr 11 21:14:45 EDT 2022" starttimestamp="1649721002230" timestamp="5082927" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2629" _type="PauseCommand" date="Mon Apr 11 21:14:56 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5094452">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11525]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2628" _type="ShellCommand" date="Mon Apr 11 21:14:56 EDT 2022" starttimestamp="1649721002230" timestamp="5094452" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2630" _type="ConsoleOutput" date="Mon Apr 11 21:14:56 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5094754" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOStaticArguments did not pass completely:Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client NIO connection info in traces. Error in server (args as 'nio-port registry-host registry-port gipc-port'): Couldn't find server NIO connection info in traces.%0.7272727272727273

Test execution time (ms):63631
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOS"), Diff(DELETE,"erverMetaStateNoBroadcast did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0"), Diff(INSERT,"taticArguments did not pass completely:Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client NIO connection info in traces. Error in server (args as 'nio-port registry-host registry-port gipc-port'): Couldn't find server NIO connection info in traces.%0.7272727272727273"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"112584"), Diff(INSERT,"63631"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2632" _type="PauseCommand" date="Mon Apr 11 21:14:59 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5097257">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2503]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2633" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Apr 11 21:15:02 EDT 2022" starttimestamp="1649721002230" timestamp="5100616" />
  <Command __id="2635" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:15:02 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5100652" type="Run" />
  <Command __id="2636" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:15:02 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5100652" type="Run" />
  <Command __id="2614" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:13:32 EDT 2022" docASTNodeCount="117" docActiveCodeLength="878" docExpressionCount="75" docLength="1269" projectName="A6" starttimestamp="1649721002230" timestamp="5010671">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\checks\Checks.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL,".S22Assignment"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL,"Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class Checks {¶	public static void main(final String[] args) {¶		Tracer.showInfo(true);¶		GraderBasicsTraceUtility.setBufferTracedMessages(false);¶		final int traces = 8000;¶		Tracer.setMaxTraces(traces);¶		¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		¶		GraderBasicsTraceUtility.setBufferTracedMessages(false);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		¶		final int length = 600;¶		GraderBasicsTraceUtility.setMaxPrintedTraces(length);¶		// Change this number if all traces together are longer than 600¶		¶		final int time = 4000;¶		GraderBasicsTraceUtility.setMaxTraces(time);¶		// Change this number if your process times out prematurely¶		¶		final int timer = 50;¶		BasicProjectExecution.setProcessTimeOut(timer);¶		// You need to always call such a method¶		S22Assignment"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL,"Suite.main(args);¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package checks;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp533s22.assignment6.S22Assignment6Suite;
import trace.grader.basics.GraderBasicsTraceUtility;
import util.trace.Tracer;

public class Checks {
	public static void main(final String[] args) {
		Tracer.showInfo(true);
		GraderBasicsTraceUtility.setBufferTracedMessages(false);
		final int traces = 8000;
		Tracer.setMaxTraces(traces);
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		
		GraderBasicsTraceUtility.setBufferTracedMessages(false);
		// Change this number if a test trace gets longer than 600 and is clipped
		
		final int length = 600;
		GraderBasicsTraceUtility.setMaxPrintedTraces(length);
		// Change this number if all traces together are longer than 600
		
		final int time = 4000;
		GraderBasicsTraceUtility.setMaxTraces(time);
		// Change this number if your process times out prematurely
		
		final int timer = 50;
		BasicProjectExecution.setProcessTimeOut(timer);
		// You need to always call such a method
		S22Assignment6Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="2638" _type="PauseCommand" date="Mon Apr 11 21:15:06 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5104459">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3807]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2639" _type="MoveCaretCommand" caretOffset="3948" date="Mon Apr 11 21:15:06 EDT 2022" docOffset="3948" starttimestamp="1649721002230" timestamp="5104619" />
  <Command __id="2641" _type="PauseCommand" date="Mon Apr 11 21:15:09 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5107593">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2974]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2640" _type="MoveCaretCommand" caretOffset="3894" date="Mon Apr 11 21:15:09 EDT 2022" docOffset="3894" starttimestamp="1649721002230" timestamp="5107593" />
  <Command __id="2637" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:15:06 EDT 2022" docASTNodeCount="1199" docActiveCodeLength="9152" docExpressionCount="846" docLength="10123" projectName="A6" starttimestamp="1649721002230" timestamp="5104459">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		"), Diff(INSERT,"SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		"), Diff(EQUAL,"		//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		SERVER_NAME = ClientArgsProcessor.getServerHost(args);
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}


}
]]></snapshot>
  </Command>
  <Command __id="2643" _type="PauseCommand" date="Mon Apr 11 21:15:12 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5109937">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2344]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2644" _type="InsertStringCommand" date="Mon Apr 11 21:15:12 EDT 2022" starttimestamp="1649721002230" timestamp="5109944" timestamp2="5109944">
    <data><![CDATA[#]]></data>
  </Command>
  <DocumentChange __id="2642" _type="Insert" date="Mon Apr 11 21:15:12 EDT 2022" docASTNodeCount="1199" docActiveCodeLength="9153" docExpressionCount="846" docLength="10124" length="1" offset="3894" starttimestamp="1649721002230" timestamp="5109937">
    <text><![CDATA[#]]></text>
  </DocumentChange>
  <Command __id="2646" _type="PauseCommand" date="Mon Apr 11 21:15:13 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5111049">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1105]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="2645" _type="Delete" date="Mon Apr 11 21:15:13 EDT 2022" docASTNodeCount="1199" docActiveCodeLength="9152" docExpressionCount="846" docLength="10123" endLine="90" length="1" offset="3894" startLine="90" starttimestamp="1649721002230" timestamp="5111049">
    <text><![CDATA[#]]></text>
  </DocumentChange>
  <Command __id="2647" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:15:13 EDT 2022" starttimestamp="1649721002230" timestamp="5111053" />
  <Command __id="2649" _type="InsertStringCommand" date="Mon Apr 11 21:15:13 EDT 2022" starttimestamp="1649721002230" timestamp="5111438" timestamp2="5111438">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2651" _type="InsertStringCommand" date="Mon Apr 11 21:15:13 EDT 2022" starttimestamp="1649721002230" timestamp="5111578" timestamp2="5111578">
    <data><![CDATA[/]]></data>
  </Command>
  <DocumentChange __id="2648" _type="Insert" date="Mon Apr 11 21:15:13 EDT 2022" docASTNodeCount="1192" docActiveCodeLength="9098" docExpressionCount="840" docLength="10125" length="2" offset="3894" repeat="2" starttimestamp="1649721002230" timestamp="5111433" timestamp2="5111572">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2653" _type="PauseCommand" date="Mon Apr 11 21:15:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5113537">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1959]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2654" _type="MoveCaretCommand" caretOffset="10302" date="Mon Apr 11 21:15:15 EDT 2022" docOffset="10302" starttimestamp="1649721002230" timestamp="5113650" />
  <Command __id="2652" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:15:15 EDT 2022" docASTNodeCount="1282" docActiveCodeLength="9179" docExpressionCount="896" docLength="10312" projectName="A6" starttimestamp="1649721002230" timestamp="5113537">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	"), Diff(INSERT,"¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientOutCoupler;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {

	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="2656" _type="PauseCommand" date="Mon Apr 11 21:15:37 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="5135670">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[22020]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2657" _type="MoveCaretCommand" caretOffset="3896" date="Mon Apr 11 21:15:38 EDT 2022" docOffset="3896" starttimestamp="1649721002230" timestamp="5135776" />
  <Command __id="2655" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:15:37 EDT 2022" docASTNodeCount="1192" docActiveCodeLength="9098" docExpressionCount="840" docLength="10125" projectName="A6" starttimestamp="1649721002230" timestamp="5135670">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		"), Diff(INSERT,"//"), Diff(EQUAL,"SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		//SERVER_NAME = ClientArgsProcessor.getServerHost(args);
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}


}
]]></snapshot>
  </Command>
  <Command __id="2659" _type="PauseCommand" date="Mon Apr 11 21:15:39 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5136826">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1050]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2660" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:15:39 EDT 2022" starttimestamp="1649721002230" timestamp="5136831" />
  <Command __id="2662" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:15:39 EDT 2022" starttimestamp="1649721002230" timestamp="5137649" />
  <Command __id="2663" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:15:40 EDT 2022" starttimestamp="1649721002230" timestamp="5138564" />
  <Command __id="2664" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:15:40 EDT 2022" starttimestamp="1649721002230" timestamp="5138666" />
  <Command __id="2665" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:15:40 EDT 2022" starttimestamp="1649721002230" timestamp="5138714" />
  <Command __id="2667" _type="PauseCommand" date="Mon Apr 11 21:15:42 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5140647">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1933]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2666" _type="SelectTextCommand" caretOffset="3894" date="Mon Apr 11 21:15:42 EDT 2022" end="3948" start="3894" starttimestamp="1649721002230" timestamp="5140647" />
  <Command __id="2668" _type="CopyCommand" date="Mon Apr 11 21:15:43 EDT 2022" starttimestamp="1649721002230" timestamp="5140946" />
  <Command __id="2670" _type="MoveCaretCommand" caretOffset="10302" date="Mon Apr 11 21:15:44 EDT 2022" docOffset="10302" starttimestamp="1649721002230" timestamp="5141995" />
  <Command __id="2672" _type="PauseCommand" date="Mon Apr 11 21:15:45 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5143255">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1259]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2680" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:15:50 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5147901" type="Run" />
  <Command __id="2682" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:15:50 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5147901" type="Run" />
  <Command __id="2684" _type="PauseCommand" date="Mon Apr 11 21:15:52 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5150640">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2739]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2683" _type="ShellCommand" date="Mon Apr 11 21:15:52 EDT 2022" starttimestamp="1649721002230" timestamp="5150640" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2686" _type="PauseCommand" date="Mon Apr 11 21:16:20 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="5178527">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[27887]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2685" _type="ShellCommand" date="Mon Apr 11 21:16:20 EDT 2022" starttimestamp="1649721002230" timestamp="5178527" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2658" _type="Delete" date="Mon Apr 11 21:15:39 EDT 2022" docASTNodeCount="1199" docActiveCodeLength="9152" docExpressionCount="846" docLength="10123" endLine="90" length="2" offset="3894" repeat="2" startLine="90" starttimestamp="1649721002230" timestamp="5136826" timestamp2="5137647">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2669" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:15:44 EDT 2022" docASTNodeCount="1282" docActiveCodeLength="9179" docExpressionCount="896" docLength="10312" projectName="A6" starttimestamp="1649721002230" timestamp="5141877">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2673" _type="Insert" date="Mon Apr 11 21:15:45 EDT 2022" docASTNodeCount="1282" docActiveCodeLength="9183" docExpressionCount="896" docLength="10316" length="4" offset="3121" starttimestamp="1649721002230" timestamp="5143628">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2675" _type="Replace" date="Mon Apr 11 21:15:46 EDT 2022" docASTNodeCount="1289" docActiveCodeLength="9237" docExpressionCount="902" docLength="10370" endLine="72" insertionLength="56" int_docASTNodeCount="1282" int_docActiveCodeLength="9181" int_docExpressionCount="896" int_docLength="10314" length="2" offset="3123" startLine="72" starttimestamp="1649721002230" timestamp="5143883">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		SERVER_NAME = ClientArgsProcessor.getServerHost(args);]]></insertedText>
  </DocumentChange>
  <Command __id="2688" _type="PauseCommand" date="Mon Apr 11 21:16:33 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5191540">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13013]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2689" _type="MoveCaretCommand" caretOffset="149" date="Mon Apr 11 21:16:33 EDT 2022" docOffset="358" starttimestamp="1649721002230" timestamp="5191768" />
  <Command __id="2687" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:16:33 EDT 2022" docASTNodeCount="95" docActiveCodeLength="643" docExpressionCount="63" docLength="762" projectName="A6" starttimestamp="1649721002230" timestamp="5191540">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC"), Diff(INSERT,", DistributedTags.NIO"), Diff(EQUAL," })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class Server {
	
	
	public static void main(final String[] args) {
		
		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc
		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();

		
		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	


}
]]></snapshot>
  </Command>
  <Command __id="2691" _type="PauseCommand" date="Mon Apr 11 21:16:52 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5210159">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[18391]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2692" _type="SelectTextCommand" caretOffset="2888" date="Mon Apr 11 21:16:52 EDT 2022" end="2942" start="2888" starttimestamp="1649721002230" timestamp="5210368" />
  <Command __id="2694" _type="PauseCommand" date="Mon Apr 11 21:16:58 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5216175">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5807]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2693" _type="ConsoleOutput" date="Mon Apr 11 21:16:58 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5216175" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOStaticArguments did not pass completely:Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client NIO connection info in traces. Error in server (args as 'nio-port registry-host registry-port gipc-port'): Couldn't find server NIO connection info in traces.%0.7272727272727273

Test execution time (ms):63635
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIOStaticArguments did not pass completely:Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client NIO connection info in traces. Error in server (args as 'nio-port registry-host registry-port gipc-port'): Couldn't find server NIO connection info in traces.%0.7272727272727273¶¶Test execution time (ms):6363"), Diff(DELETE,"1"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2690" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:16:52 EDT 2022" docASTNodeCount="965" docActiveCodeLength="6983" docExpressionCount="662" docLength="7849" projectName="A6" starttimestamp="1649721002230" timestamp="5210159">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		"), Diff(INSERT,"SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶		"), Diff(EQUAL,"GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		IPCMechanism mechanism = getIPCMechanism();
		setIPCMechanism(mechanism);
		boolean broadcast = true;
		setBroadcastMetaState(broadcast);
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}

	@Override
	public void createGIPCRegistry() throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,
			int aProposalNumber, boolean broadcast) throws RemoteException {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="2696" _type="PauseCommand" date="Mon Apr 11 21:17:06 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5224594">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8419]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2697" _type="MoveCaretCommand" caretOffset="649" date="Mon Apr 11 21:17:07 EDT 2022" docOffset="649" starttimestamp="1649721002230" timestamp="5224807" />
  <Command __id="2699" _type="PauseCommand" date="Mon Apr 11 21:17:56 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="5274746">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[49939]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2698" _type="ConsoleOutput" date="Mon Apr 11 21:17:56 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5274746" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):58571
GIPCRMINIOOneClientConnection did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOStaticArguments did not pass completely:Error in client (args as 'nio-host nio-port name headless registry-host registry-port gipc-port'): Couldn't find client NIO connection info in traces. Error in server (args as 'nio-port registry-host registry-port gipc-port'): Couldn't find server NIO connection info in traces.%0.7272727272727273¶¶Test execution time (ms):63635"), Diff(INSERT,"¶Test execution time (ms):58571¶GIPCRMINIOOneClientConnection did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*%0.0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2701" _type="PauseCommand" date="Mon Apr 11 21:18:16 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5293861">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[19115]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="2700" _type="CopyCommand" date="Mon Apr 11 21:18:16 EDT 2022" starttimestamp="1649721002230" timestamp="5293861" />
  <Command __id="2703" _type="PauseCommand" date="Mon Apr 11 21:18:17 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5295269">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1408]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2702" _type="ShellCommand" date="Mon Apr 11 21:18:17 EDT 2022" starttimestamp="1649721002230" timestamp="5295269" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2705" _type="PauseCommand" date="Mon Apr 11 21:18:55 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="5333315">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[38046]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2704" _type="ConsoleOutput" date="Mon Apr 11 21:18:55 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5333315" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*
RMI and GIPC are not checked because NIO failed%0.0Steps traced since last test:

Test execution time (ms):58560

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):58571¶"), Diff(EQUAL,"GIPCRMINIOOneClient"), Diff(DELETE,"Connection"), Diff(INSERT,"ReadWriteNonAtomic"), Diff(EQUAL," did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*"), Diff(DELETE,"%0.0"), Diff(INSERT,"¶RMI and GIPC are not checked because NIO failed%0.0Steps traced since last test:¶¶Test execution time (ms):58560¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2706" _type="ShellCommand" date="Mon Apr 11 21:18:56 EDT 2022" starttimestamp="1649721002230" timestamp="5334114" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2707" _type="MoveCaretCommand" caretOffset="2022" date="Mon Apr 11 21:18:56 EDT 2022" docOffset="2022" starttimestamp="1649721002230" timestamp="5334200" />
  <Command __id="2708" _type="MoveCaretCommand" caretOffset="2022" date="Mon Apr 11 21:18:56 EDT 2022" docOffset="2022" starttimestamp="1649721002230" timestamp="5334200" />
  <Command __id="2710" _type="InsertStringCommand" date="Mon Apr 11 21:18:56 EDT 2022" starttimestamp="1649721002230" timestamp="5334763" timestamp2="5334763">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2711" _type="InsertStringCommand" date="Mon Apr 11 21:18:56 EDT 2022" starttimestamp="1649721002230" timestamp="5334763" timestamp2="5334763">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2713" _type="InsertStringCommand" date="Mon Apr 11 21:18:57 EDT 2022" starttimestamp="1649721002230" timestamp="5334911" timestamp2="5334911">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2714" _type="InsertStringCommand" date="Mon Apr 11 21:18:57 EDT 2022" starttimestamp="1649721002230" timestamp="5334911" timestamp2="5334911">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2695" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:17:06 EDT 2022" docASTNodeCount="249" docActiveCodeLength="2017" docExpressionCount="148" docLength="2035" projectName="A6" starttimestamp="1649721002230" timestamp="5224594">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;"), Diff(INSERT,"¶import inputport.nio.manager.listeners.SocketChannelWriteListener;"), Diff(EQUAL,"¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends"), Diff(INSERT," SocketChannelWriteListener,"), Diff(EQUAL," SocketChannelAcceptListener, SocketChannelReadListener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	¶	//A5 fake methods:¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	void createGIPCRegistry() throws RemoteException;¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceRMI  extends SocketChannelWriteListener, SocketChannelAcceptListener, SocketChannelReadListener, Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	
	//A5 fake methods:
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;
	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;
	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	void createGIPCRegistry() throws RemoteException;
	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2709" _type="Insert" date="Mon Apr 11 21:18:56 EDT 2022" docASTNodeCount="249" docActiveCodeLength="2023" docExpressionCount="148" docLength="2041" length="6" offset="2022" repeat="2" starttimestamp="1649721002230" timestamp="5334743" timestamp2="5334901">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <Command __id="2716" _type="PauseCommand" date="Mon Apr 11 21:19:03 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5341415">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6504]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2717" _type="SelectTextCommand" caretOffset="2888" date="Mon Apr 11 21:19:03 EDT 2022" end="2942" start="2888" starttimestamp="1649721002230" timestamp="5341519" />
  <Command __id="2719" _type="PauseCommand" date="Mon Apr 11 21:19:21 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5359444">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[17925]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2718" _type="SelectTextCommand" caretOffset="7716" date="Mon Apr 11 21:19:21 EDT 2022" end="7794" start="7716" starttimestamp="1649721002230" timestamp="5359444" />
  <Command __id="2720" _type="CopyCommand" date="Mon Apr 11 21:19:22 EDT 2022" starttimestamp="1649721002230" timestamp="5360154" />
  <Command __id="2715" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:19:03 EDT 2022" docASTNodeCount="965" docActiveCodeLength="6983" docExpressionCount="662" docLength="7849" projectName="A6" starttimestamp="1649721002230" timestamp="5341415">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2722" _type="PauseCommand" date="Mon Apr 11 21:19:23 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5361348">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1194]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2723" _type="MoveCaretCommand" caretOffset="2028" date="Mon Apr 11 21:19:23 EDT 2022" docOffset="2028" starttimestamp="1649721002230" timestamp="5361450" />
  <Command __id="2721" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:19:23 EDT 2022" docASTNodeCount="249" docActiveCodeLength="2023" docExpressionCount="148" docLength="2041" projectName="A6" starttimestamp="1649721002230" timestamp="5361348">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ServerRemoteInterfaceRMI  extends SocketChannelWriteListener, SocketChannelAcceptListener, SocketChannelReadListener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	¶	//A5 fake methods:¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	void createGIPCRegistry() throws RemoteException;¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶	¶	"), Diff(INSERT,"¶	¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceRMI  extends SocketChannelWriteListener, SocketChannelAcceptListener, SocketChannelReadListener, Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	
	//A5 fake methods:
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;
	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;
	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	void createGIPCRegistry() throws RemoteException;
	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;
	
	
	
	

}
]]></snapshot>
  </Command>
  <Command __id="2725" _type="PauseCommand" date="Mon Apr 11 21:19:24 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5362545">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1095]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2730" _type="PasteCommand" date="Mon Apr 11 21:19:24 EDT 2022" starttimestamp="1649721002230" timestamp="5362686" />
  <Command __id="2732" _type="PauseCommand" date="Mon Apr 11 21:19:27 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5365648">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2962]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2731" _type="SelectTextCommand" caretOffset="2097" date="Mon Apr 11 21:19:27 EDT 2022" end="2107" start="2097" starttimestamp="1649721002230" timestamp="5365648" />
  <Command __id="2733" _type="SelectTextCommand" caretOffset="2097" date="Mon Apr 11 21:19:27 EDT 2022" end="2107" start="2097" starttimestamp="1649721002230" timestamp="5365648" />
  <Command __id="2735" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:19:28 EDT 2022" starttimestamp="1649721002230" timestamp="5365910" />
  <Command __id="2736" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:19:28 EDT 2022" starttimestamp="1649721002230" timestamp="5365910" />
  <Command __id="2738" _type="PauseCommand" date="Mon Apr 11 21:19:30 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5368651">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2741]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2737" _type="SelectTextCommand" caretOffset="2100" date="Mon Apr 11 21:19:30 EDT 2022" end="2107" start="2100" starttimestamp="1649721002230" timestamp="5368651" />
  <Command __id="2739" _type="SelectTextCommand" caretOffset="2100" date="Mon Apr 11 21:19:30 EDT 2022" end="2107" start="2100" starttimestamp="1649721002230" timestamp="5368651" />
  <Command __id="2741" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:19:31 EDT 2022" starttimestamp="1649721002230" timestamp="5368952" />
  <Command __id="2742" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:19:31 EDT 2022" starttimestamp="1649721002230" timestamp="5368952" />
  <Command __id="2744" _type="PauseCommand" date="Mon Apr 11 21:19:32 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5370359">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1407]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="2724" _type="Replace" date="Mon Apr 11 21:19:24 EDT 2022" docASTNodeCount="267" docActiveCodeLength="2101" docExpressionCount="156" docLength="2119" endLine="35" insertionLength="79" int_docASTNodeCount="249" int_docActiveCodeLength="2022" int_docExpressionCount="148" int_docLength="2040" length="1" offset="2027" startLine="35" starttimestamp="1649721002230" timestamp="5362545">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2726" _type="Insert" date="Mon Apr 11 21:19:24 EDT 2022" docASTNodeCount="281" docActiveCodeLength="2171" docExpressionCount="168" docLength="2189" length="70" offset="26" repeat="4" starttimestamp="1649721002230" timestamp="5362634" timestamp2="5362638">
    <text><![CDATA[import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
]]></text>
  </DocumentChange>
  <DocumentChange __id="2734" _type="Delete" date="Mon Apr 11 21:19:28 EDT 2022" docASTNodeCount="279" docActiveCodeLength="2161" docExpressionCount="166" docLength="2179" endLine="37" length="10" offset="2097" startLine="37" starttimestamp="1649721002230" timestamp="5365907">
    <text><![CDATA[	@Override]]></text>
  </DocumentChange>
  <DocumentChange __id="2740" _type="Delete" date="Mon Apr 11 21:19:31 EDT 2022" docASTNodeCount="278" docActiveCodeLength="2154" docExpressionCount="166" docLength="2172" endLine="38" length="7" offset="2100" startLine="38" starttimestamp="1649721002230" timestamp="5368946">
    <text><![CDATA[public ]]></text>
  </DocumentChange>
  <Command __id="2743" _type="MoveCaretCommand" caretOffset="2159" date="Mon Apr 11 21:19:32 EDT 2022" docOffset="2159" starttimestamp="1649721002230" timestamp="5370359" />
  <Command __id="2745" _type="MoveCaretCommand" caretOffset="2159" date="Mon Apr 11 21:19:32 EDT 2022" docOffset="2159" starttimestamp="1649721002230" timestamp="5370359" />
  <Command __id="2747" _type="InsertStringCommand" date="Mon Apr 11 21:19:32 EDT 2022" starttimestamp="1649721002230" timestamp="5370699" timestamp2="5370699">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2748" _type="InsertStringCommand" date="Mon Apr 11 21:19:32 EDT 2022" starttimestamp="1649721002230" timestamp="5370699" timestamp2="5370699">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2750" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5370849" timestamp2="5370849">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2751" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5370849" timestamp2="5370849">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2753" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5370968" timestamp2="5370968">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2754" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5370968" timestamp2="5370968">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2756" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5371078" timestamp2="5371078">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2757" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5371078" timestamp2="5371078">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2759" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5371202" timestamp2="5371202">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2760" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5371202" timestamp2="5371202">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2762" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5371270" timestamp2="5371270">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="2763" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5371270" timestamp2="5371270">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="2765" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5371511" timestamp2="5371511">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2766" _type="InsertStringCommand" date="Mon Apr 11 21:19:33 EDT 2022" starttimestamp="1649721002230" timestamp="5371511" timestamp2="5371511">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2769" _type="PauseCommand" date="Mon Apr 11 21:19:35 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5372951">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1440]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2768" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5372951" timestamp2="5372951">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2770" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5372951" timestamp2="5372951">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2772" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5373177" timestamp2="5373177">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="2773" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5373177" timestamp2="5373177">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="2775" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5373392" timestamp2="5373392">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2776" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5373392" timestamp2="5373392">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2778" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5373554" timestamp2="5373554">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2779" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5373554" timestamp2="5373554">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2781" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5373643" timestamp2="5373643">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2782" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5373643" timestamp2="5373643">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2784" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5373695" timestamp2="5373695">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2785" _type="InsertStringCommand" date="Mon Apr 11 21:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="5373695" timestamp2="5373695">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2787" _type="InsertStringCommand" date="Mon Apr 11 21:19:36 EDT 2022" starttimestamp="1649721002230" timestamp="5373782" timestamp2="5373782">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2788" _type="InsertStringCommand" date="Mon Apr 11 21:19:36 EDT 2022" starttimestamp="1649721002230" timestamp="5373782" timestamp2="5373782">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2790" _type="InsertStringCommand" date="Mon Apr 11 21:19:36 EDT 2022" starttimestamp="1649721002230" timestamp="5374100" timestamp2="5374100">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2791" _type="InsertStringCommand" date="Mon Apr 11 21:19:36 EDT 2022" starttimestamp="1649721002230" timestamp="5374101" timestamp2="5374101">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2793" _type="InsertStringCommand" date="Mon Apr 11 21:19:36 EDT 2022" starttimestamp="1649721002230" timestamp="5374495" timestamp2="5374495">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2794" _type="InsertStringCommand" date="Mon Apr 11 21:19:36 EDT 2022" starttimestamp="1649721002230" timestamp="5374495" timestamp2="5374495">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2796" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:19:37 EDT 2022" starttimestamp="1649721002230" timestamp="5375211" />
  <Command __id="2797" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:19:37 EDT 2022" starttimestamp="1649721002230" timestamp="5375211" />
  <Command __id="2799" _type="InsertStringCommand" date="Mon Apr 11 21:19:37 EDT 2022" starttimestamp="1649721002230" timestamp="5375284" timestamp2="5375284">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2800" _type="InsertStringCommand" date="Mon Apr 11 21:19:37 EDT 2022" starttimestamp="1649721002230" timestamp="5375285" timestamp2="5375285">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2802" _type="InsertStringCommand" date="Mon Apr 11 21:19:37 EDT 2022" starttimestamp="1649721002230" timestamp="5375434" timestamp2="5375434">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2803" _type="InsertStringCommand" date="Mon Apr 11 21:19:37 EDT 2022" starttimestamp="1649721002230" timestamp="5375434" timestamp2="5375434">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2805" _type="InsertStringCommand" date="Mon Apr 11 21:19:37 EDT 2022" starttimestamp="1649721002230" timestamp="5375681" timestamp2="5375681">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2806" _type="InsertStringCommand" date="Mon Apr 11 21:19:37 EDT 2022" starttimestamp="1649721002230" timestamp="5375681" timestamp2="5375681">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2808" _type="InsertStringCommand" date="Mon Apr 11 21:19:37 EDT 2022" starttimestamp="1649721002230" timestamp="5375760" timestamp2="5375760">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2809" _type="InsertStringCommand" date="Mon Apr 11 21:19:37 EDT 2022" starttimestamp="1649721002230" timestamp="5375760" timestamp2="5375760">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2811" _type="InsertStringCommand" date="Mon Apr 11 21:19:38 EDT 2022" starttimestamp="1649721002230" timestamp="5375902" timestamp2="5375902">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2812" _type="InsertStringCommand" date="Mon Apr 11 21:19:38 EDT 2022" starttimestamp="1649721002230" timestamp="5375902" timestamp2="5375902">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2814" _type="InsertStringCommand" date="Mon Apr 11 21:19:38 EDT 2022" starttimestamp="1649721002230" timestamp="5375984" timestamp2="5375984">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2815" _type="InsertStringCommand" date="Mon Apr 11 21:19:38 EDT 2022" starttimestamp="1649721002230" timestamp="5375984" timestamp2="5375984">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2817" _type="InsertStringCommand" date="Mon Apr 11 21:19:38 EDT 2022" starttimestamp="1649721002230" timestamp="5376019" timestamp2="5376019">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2818" _type="InsertStringCommand" date="Mon Apr 11 21:19:38 EDT 2022" starttimestamp="1649721002230" timestamp="5376019" timestamp2="5376019">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2820" _type="InsertStringCommand" date="Mon Apr 11 21:19:38 EDT 2022" starttimestamp="1649721002230" timestamp="5376131" timestamp2="5376131">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2821" _type="InsertStringCommand" date="Mon Apr 11 21:19:38 EDT 2022" starttimestamp="1649721002230" timestamp="5376131" timestamp2="5376131">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2823" _type="InsertStringCommand" date="Mon Apr 11 21:19:38 EDT 2022" starttimestamp="1649721002230" timestamp="5376605" timestamp2="5376605">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2824" _type="InsertStringCommand" date="Mon Apr 11 21:19:38 EDT 2022" starttimestamp="1649721002230" timestamp="5376605" timestamp2="5376605">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2826" _type="PauseCommand" date="Mon Apr 11 21:19:40 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5377820">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1215]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2825" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:19:40 EDT 2022" starttimestamp="1649721002230" timestamp="5377820" />
  <Command __id="2827" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:19:40 EDT 2022" starttimestamp="1649721002230" timestamp="5377910" />
  <Command __id="2828" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:19:40 EDT 2022" starttimestamp="1649721002230" timestamp="5377978" />
  <Command __id="2830" _type="PauseCommand" date="Mon Apr 11 21:19:49 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5387566">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9588]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2829" _type="MoveCaretCommand" caretOffset="2097" date="Mon Apr 11 21:19:49 EDT 2022" docOffset="2097" starttimestamp="1649721002230" timestamp="5387566" />
  <Command __id="2831" _type="MoveCaretCommand" caretOffset="2097" date="Mon Apr 11 21:19:49 EDT 2022" docOffset="2097" starttimestamp="1649721002230" timestamp="5387566" />
  <Command __id="2833" _type="PauseCommand" date="Mon Apr 11 21:19:51 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5389468">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1902]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2832" _type="SelectTextCommand" caretOffset="2100" date="Mon Apr 11 21:19:51 EDT 2022" end="2183" start="2100" starttimestamp="1649721002230" timestamp="5389468" />
  <Command __id="2834" _type="SelectTextCommand" caretOffset="2100" date="Mon Apr 11 21:19:51 EDT 2022" end="2183" start="2100" starttimestamp="1649721002230" timestamp="5389468" />
  <Command __id="2836" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:19:51 EDT 2022" starttimestamp="1649721002230" timestamp="5389757" />
  <Command __id="2837" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:19:51 EDT 2022" starttimestamp="1649721002230" timestamp="5389757" />
  <Command __id="2838" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:19:52 EDT 2022" starttimestamp="1649721002230" timestamp="5390659" />
  <Command __id="2839" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:19:52 EDT 2022" starttimestamp="1649721002230" timestamp="5390754" />
  <Command __id="2840" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:19:53 EDT 2022" starttimestamp="1649721002230" timestamp="5390813" />
  <Command __id="2841" _type="ShellCommand" date="Mon Apr 11 21:19:53 EDT 2022" starttimestamp="1649721002230" timestamp="5390960" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2843" _type="PauseCommand" date="Mon Apr 11 21:19:58 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5396414">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5454]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2842" _type="ShellCommand" date="Mon Apr 11 21:19:58 EDT 2022" starttimestamp="1649721002230" timestamp="5396414" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2845" _type="PauseCommand" date="Mon Apr 11 21:20:04 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5402667">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6253]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2844" _type="ShellCommand" date="Mon Apr 11 21:20:04 EDT 2022" starttimestamp="1649721002230" timestamp="5402667" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2847" _type="PauseCommand" date="Mon Apr 11 21:20:07 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5404808">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2141]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2846" _type="ConsoleOutput" date="Mon Apr 11 21:20:07 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5404808" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOStaticArguments@32039b08 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOOneClientReadWriteNonAtomic did not pass completely:In Server enabling NIO, no line found matching regex: .*?\{main\}.*?SelectorFactorySet.*¶RMI and GIPC are not checked because NIO failed%0.0Steps traced since last test:¶¶Test execution time (ms):58560¶"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOStaticArguments@32039b08 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2849" _type="PauseCommand" date="Mon Apr 11 21:20:19 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5416938">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[12130]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2848" _type="ConsoleOutput" date="Mon Apr 11 21:20:19 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5416938" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@606a42ea . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIO"), Diff(DELETE,"StaticArguments@32039b08"), Diff(INSERT,"OneClientConnection@606a42ea"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2851" _type="PauseCommand" date="Mon Apr 11 21:20:27 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5425204">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8266]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2850" _type="ConsoleOutput" date="Mon Apr 11 21:20:27 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5425204" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@606a42ea . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOOneClientConnection@606a42ea . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2853" _type="PauseCommand" date="Mon Apr 11 21:20:29 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5427366">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2162]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2852" _type="ConsoleOutput" date="Mon Apr 11 21:20:29 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5427366" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOStaticArguments@32039b08 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIO"), Diff(DELETE,"OneClientConnection@606a42ea"), Diff(INSERT,"StaticArguments@32039b08"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="2855" _type="PauseCommand" date="Mon Apr 11 21:20:34 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5431967">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4601]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2854" _type="ConsoleOutput" date="Mon Apr 11 21:20:34 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5431967" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Apr 11 21:20:34 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOStaticArguments@32039b08 . Results may change."), Diff(INSERT,"Building symbol table and running first pass checks:Mon Apr 11 21:20:34 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2857" _type="PauseCommand" date="Mon Apr 11 21:20:36 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5433956">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1989]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2856" _type="ConsoleOutput" date="Mon Apr 11 21:20:36 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5433956" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:95
Running second pass checks Mon Apr 11 21:20:36 EDT 2022
Start O(n2) inter- and intra class method calls:Mon Apr 11 21:20:36 EDT 2022
End O(n2) inter- and intra class method calls:Mon Apr 11 21:20:36 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:95¶Running second pass checks Mon Apr 11 21:20:36 EDT 2022¶Start O(n2) inter- and intra class method calls:Mon Apr 11 21:20:36 EDT 2022¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Apr 11 21:20:3"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2858" _type="ConsoleOutput" date="Mon Apr 11 21:20:37 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5434795" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Apr 11 21:20:36 EDT 2022
Generating checks:Mon Apr 11 21:20:36 EDT 2022
Finished Generating checks:Mon Apr 11 21:20:36 EDT 2022
Generating externals:Mon Apr 11 21:20:36 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:95¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Apr 11 21:20:36 EDT 2022¶"), Diff(DELETE,"Start O(n2) inter- and intra class method calls:Mon Apr 11 21:20:36 EDT 2022¶End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating checks:Mon Apr 11 21:20:36 EDT 2022¶Finished Generating checks:Mon Apr 11 21:20:36 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Mon Apr 11 21:20:36 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="2859" _type="ConsoleOutput" date="Mon Apr 11 21:20:37 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5435080" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Apr 11 21:20:37 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):3174
Test execution time (ms):13
Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Apr 11 21:20:3"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2022¶"), Diff(DELETE,"Generating checks:Mon Apr 11 21:20:36 EDT 2022¶Finished Generating checks:Mon Apr 11 21:20:36 EDT 2022¶Generating externals:Mon Apr 11 21:20:36 EDT 2022"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):3174¶Test execution time (ms):13¶Test execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2860" _type="ConsoleOutput" date="Mon Apr 11 21:20:37 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5435141" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):11
Test execution time (ms):6
Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Apr 11 21:20:37 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"3174"), Diff(INSERT,"11"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"13"), Diff(INSERT,"6"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"7"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2862" _type="PauseCommand" date="Mon Apr 11 21:20:40 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5438550">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3409]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2861" _type="ConsoleOutput" date="Mon Apr 11 21:20:40 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5438550" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
Test execution time (ms):5

A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862
Test execution time (ms):6

Test execution time (ms):5
A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.9
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"11"), Diff(INSERT,"3¶Test execution time (ms):5¶¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862"), Diff(EQUAL,"¶Test execution time (ms):6¶"), Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"6"), Diff(INSERT,"5¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2863" _type="ConsoleOutput" date="Mon Apr 11 21:20:40 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="5438619" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (24)
 |- checks (1)
  |~ Checks.java (36)
 |- client (6)
  |~ Client.java (22)
  |~ ClientConfigure.java (302)
  |~ ClientOutCoupler.java (57)
  |~ ClientRemoteInterfaceGIPC.java (33)
  |~ ClientRemoteInterfaceRMI.java (29)
  |~ ClientRemoteObject.java (297)
 |- readThread (3)
  |~ ClientReadThread.java (25)
  |~ ReadThreadInterface.java (10)
  |~ ServerReadThread.java (25)
 |- registry (1)
  |~ TrickOrTreatRegistry.java (33)
 |- server (8)
  |~ OriginalSimulation.java (9)
  |~ Server.java (32)
  |~ ServerConfigure.java (347)
  |- remote (4)
   |~ ServerRemoteInterfaceGIPC.java (44)
   |~ ServerRemoteInterfaceRMI.java (43)
   |~ ServerRemoteObjectGIPC.java (336)
   |~ ServerRemoteObjectRMI.java (262)

Attempting to match to the structure:
|- .* (23)
 |- [a-z]?.*[Cc]lient.* (10)
  |~ .*Client.*.java (0)
  |~ .*Client.*.java (0)
  |~ Client.*Simulation.*.java (0)
  |~ Client.*Listener.*.java (0)
  |- [a-z]?.*[Rr]emote.* (5)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Pp]roxy.*.java (0)
   |~ .*[Rr][Mm][Ii].*.java (0)
   |~ .*[Gg][Ii][Pp][Cc].*.java (0)
   |~ .*[Nn][Ii][Oo].*.java (0)
 |- [a-z]?.*[Rr]egistry.* (1)
  |~ .*Registry.*.java (0)
 |- [a-z]?.*[Ss]erver.* (9)
  |~ .*Server.*.java (0)
  |~ .*Server.*.java (0)
  |~ .*Server.*Simulation.*.java (0)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):3¶Test execution time (ms):5¶¶A6ExpectedCalls did not pass completely:See console trace about lines failing  this check%0.13793103448275862¶Test execution time (ms):6¶¶Test execution time (ms):5¶A6ExpectedSignatures did not pass completely:See console trace about lines failing  this check%0.9"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.4782608695652174¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (24)¶ |- checks (1)¶  |~ Checks.java (36)¶ |- client (6)¶  |~ Client.java (22)¶  |~ ClientConfigure.java (302)¶  |~ ClientOutCoupler.java (57)¶  |~ ClientRemoteInterfaceGIPC.java (33)¶  |~ ClientRemoteInterfaceRMI.java (29)¶  |~ ClientRemoteObject.java (297)¶ |- readThread (3)¶  |~ ClientReadThread.java (25)¶  |~ ReadThreadInterface.java (10)¶  |~ ServerReadThread.java (25)¶ |- registry (1)¶  |~ TrickOrTreatRegistry.java (33)¶ |- server (8)¶  |~ OriginalSimulation.java (9)¶  |~ Server.java (32)¶  |~ ServerConfigure.java (347)¶  |- remote (4)¶   |~ ServerRemoteInterfaceGIPC.java (44)¶   |~ ServerRemoteInterfaceRMI.java (43)¶   |~ ServerRemoteObjectGIPC.java (336)¶   |~ ServerRemoteObjectRMI.java (262)¶¶Attempting to match to the structure:¶|- .* (23)¶ |- [a-z]?.*[Cc]lient.* (10)¶  |~ .*Client.*.java (0)¶  |~ .*Client.*.java (0)¶  |~ Client.*Simulation.*.java (0)¶  |~ Client.*Listener.*.java (0)¶  |- [a-z]?.*[Rr]emote.* (5)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Pp]roxy.*.java (0)¶   |~ .*[Rr][Mm][Ii].*.java (0)¶   |~ .*[Gg][Ii][Pp][Cc].*.java (0)¶   |~ .*[Nn][Ii][Oo].*.java (0)¶ |- [a-z]?.*[Rr]egistry.* (1)¶  |~ .*Registry.*.java (0)¶ |- [a-z]?.*[Ss]erver.* (9)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*.java (0)¶  |~ .*Server.*Simulation.*.java (0)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2865" _type="PauseCommand" date="Mon Apr 11 21:20:45 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5443754">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5135]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2864" _type="ShellCommand" date="Mon Apr 11 21:20:45 EDT 2022" starttimestamp="1649721002230" timestamp="5443754" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2866" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:20:46 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5444437" type="Run" />
  <Command __id="2867" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:20:46 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5444437" type="Run" />
  <DocumentChange __id="2746" _type="Insert" date="Mon Apr 11 21:19:32 EDT 2022" docASTNodeCount="279" docActiveCodeLength="2170" docExpressionCount="167" docLength="2188" length="16" offset="2159" repeat="16" starttimestamp="1649721002230" timestamp="5370689" timestamp2="5374489">
    <text><![CDATA[ throws RemoteEc]]></text>
  </DocumentChange>
  <DocumentChange __id="2795" _type="Delete" date="Mon Apr 11 21:19:37 EDT 2022" docASTNodeCount="279" docActiveCodeLength="2169" docExpressionCount="167" docLength="2187" endLine="38" length="1" offset="2174" startLine="38" starttimestamp="1649721002230" timestamp="5375209">
    <text><![CDATA[c]]></text>
  </DocumentChange>
  <DocumentChange __id="2798" _type="Insert" date="Mon Apr 11 21:19:37 EDT 2022" docASTNodeCount="278" docActiveCodeLength="2178" docExpressionCount="167" docLength="2196" length="9" offset="2174" repeat="9" starttimestamp="1649721002230" timestamp="5375279" timestamp2="5376596">
    <text><![CDATA[xception;]]></text>
  </DocumentChange>
  <DocumentChange __id="2835" _type="Delete" date="Mon Apr 11 21:19:51 EDT 2022" docASTNodeCount="263" docActiveCodeLength="2095" docExpressionCount="160" docLength="2113" endLine="38" length="83" offset="2100" startLine="38" starttimestamp="1649721002230" timestamp="5389748">
    <text><![CDATA[void written(SocketChannel arg0, ByteBuffer arg1, int arg2) throws RemoteException;]]></text>
  </DocumentChange>
  <Command __id="2869" _type="PauseCommand" date="Mon Apr 11 21:20:48 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5446270">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1833]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2884" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:20:52 EDT 2022" starttimestamp="1649721002230" timestamp="5450394" />
  <Command __id="2886" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:20:52 EDT 2022" starttimestamp="1649721002230" timestamp="5450398" />
  <Command __id="2887" _type="ShellCommand" date="Mon Apr 11 21:20:53 EDT 2022" starttimestamp="1649721002230" timestamp="5451148" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2889" _type="PauseCommand" date="Mon Apr 11 21:23:21 EDT 2022" range="2m-5m" starttimestamp="1649721002230" timestamp="5598854">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[147706]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2888" _type="ShellCommand" date="Mon Apr 11 21:23:21 EDT 2022" starttimestamp="1649721002230" timestamp="5598854" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2891" _type="PauseCommand" date="Mon Apr 11 21:23:33 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5611323">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12469]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2890" _type="ShellCommand" date="Mon Apr 11 21:23:33 EDT 2022" starttimestamp="1649721002230" timestamp="5611323" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2893" _type="PauseCommand" date="Mon Apr 11 21:23:39 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5616875">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5552]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2892" _type="ShellCommand" date="Mon Apr 11 21:23:39 EDT 2022" starttimestamp="1649721002230" timestamp="5616875" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2895" _type="PauseCommand" date="Mon Apr 11 21:23:49 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5627265">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10390]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2896" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:23:53 EDT 2022" starttimestamp="1649721002230" timestamp="5631450" />
  <Command __id="2898" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:23:53 EDT 2022" starttimestamp="1649721002230" timestamp="5631460" />
  <Command __id="2899" _type="ShellCommand" date="Mon Apr 11 21:23:53 EDT 2022" starttimestamp="1649721002230" timestamp="5631549" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2901" _type="PauseCommand" date="Mon Apr 11 21:24:02 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5640362">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8813]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2900" _type="ShellCommand" date="Mon Apr 11 21:24:02 EDT 2022" starttimestamp="1649721002230" timestamp="5640362" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2903" _type="PauseCommand" date="Mon Apr 11 21:24:16 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5654658">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14296]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2902" _type="ShellCommand" date="Mon Apr 11 21:24:16 EDT 2022" starttimestamp="1649721002230" timestamp="5654658" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2905" _type="PauseCommand" date="Mon Apr 11 21:24:21 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5658940">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4282]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2904" _type="ShellCommand" date="Mon Apr 11 21:24:21 EDT 2022" starttimestamp="1649721002230" timestamp="5658940" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2907" _type="PauseCommand" date="Mon Apr 11 21:24:25 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5663372">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4432]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2906" _type="ShellCommand" date="Mon Apr 11 21:24:25 EDT 2022" starttimestamp="1649721002230" timestamp="5663372" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2909" _type="PauseCommand" date="Mon Apr 11 21:24:30 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5668514">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5142]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2908" _type="ShellCommand" date="Mon Apr 11 21:24:30 EDT 2022" starttimestamp="1649721002230" timestamp="5668514" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2911" _type="PauseCommand" date="Mon Apr 11 21:24:35 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5672925">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4411]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="2910" _type="PasteCommand" date="Mon Apr 11 21:24:35 EDT 2022" starttimestamp="1649721002230" timestamp="5672925" />
  <Command __id="2913" _type="PauseCommand" date="Mon Apr 11 21:24:36 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5674670">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1745]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2912" _type="ShellCommand" date="Mon Apr 11 21:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="5674670" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2914" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="5674710" />
  <Command __id="2915" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="5674726" />
  <Command __id="2917" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:24:37 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="5675422" />
  <Command __id="2919" _type="PauseCommand" date="Mon Apr 11 21:24:39 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5677767">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2345]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2918" _type="ShellCommand" date="Mon Apr 11 21:24:39 EDT 2022" starttimestamp="1649721002230" timestamp="5677767" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2921" _type="PauseCommand" date="Mon Apr 11 21:24:42 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5680092">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2325]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2920" _type="ShellCommand" date="Mon Apr 11 21:24:42 EDT 2022" starttimestamp="1649721002230" timestamp="5680092" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2922" _type="MoveCaretCommand" caretOffset="83" date="Mon Apr 11 21:24:42 EDT 2022" docOffset="83" starttimestamp="1649721002230" timestamp="5680141" />
  <Command __id="2923" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Mon Apr 11 21:24:42 EDT 2022" starttimestamp="1649721002230" timestamp="5680392" />
  <Command __id="2925" _type="PasteCommand" date="Mon Apr 11 21:24:43 EDT 2022" starttimestamp="1649721002230" timestamp="5681058" />
  <Command __id="2927" _type="PauseCommand" date="Mon Apr 11 21:24:56 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5694216">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[13158]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2926" _type="ShellCommand" date="Mon Apr 11 21:24:56 EDT 2022" starttimestamp="1649721002230" timestamp="5694216" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2928" _type="ShellCommand" date="Mon Apr 11 21:24:56 EDT 2022" starttimestamp="1649721002230" timestamp="5694358" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2931" _type="PauseCommand" date="Mon Apr 11 21:24:58 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5696711">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Replace]]></prev>
    <pause><![CDATA[2338]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2930" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:24:58 EDT 2022" starttimestamp="1649721002230" timestamp="5696711" />
  <Command __id="2932" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:24:59 EDT 2022" starttimestamp="1649721002230" timestamp="5696806" />
  <Command __id="2933" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:24:59 EDT 2022" starttimestamp="1649721002230" timestamp="5696824" />
  <Command __id="2934" _type="ShellCommand" date="Mon Apr 11 21:24:59 EDT 2022" starttimestamp="1649721002230" timestamp="5696994" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2936" _type="PauseCommand" date="Mon Apr 11 21:25:03 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5701094">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4099]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2935" _type="ShellCommand" date="Mon Apr 11 21:25:03 EDT 2022" starttimestamp="1649721002230" timestamp="5701093" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2938" _type="PauseCommand" date="Mon Apr 11 21:25:06 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5704307">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3213]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2937" _type="ShellCommand" date="Mon Apr 11 21:25:06 EDT 2022" starttimestamp="1649721002230" timestamp="5704306" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2940" _type="PauseCommand" date="Mon Apr 11 21:25:10 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5708389">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4083]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2939" _type="ShellCommand" date="Mon Apr 11 21:25:10 EDT 2022" starttimestamp="1649721002230" timestamp="5708389" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2942" _type="PauseCommand" date="Mon Apr 11 21:25:14 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5712762">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4373]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2941" _type="ShellCommand" date="Mon Apr 11 21:25:14 EDT 2022" starttimestamp="1649721002230" timestamp="5712762" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2944" _type="PauseCommand" date="Mon Apr 11 21:25:20 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5717914">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5152]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="2943" _type="PasteCommand" date="Mon Apr 11 21:25:20 EDT 2022" starttimestamp="1649721002230" timestamp="5717914" />
  <Command __id="2945" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Mon Apr 11 21:25:21 EDT 2022" starttimestamp="1649721002230" timestamp="5718816" />
  <Command __id="2947" _type="PauseCommand" date="Mon Apr 11 21:25:26 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5724018">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5202]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="2946" _type="PasteCommand" date="Mon Apr 11 21:25:26 EDT 2022" starttimestamp="1649721002230" timestamp="5724018" />
  <Command __id="2949" _type="PauseCommand" date="Mon Apr 11 21:25:40 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5738614">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[14596]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="2950" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:25:47 EDT 2022" starttimestamp="1649721002230" timestamp="5744801" />
  <Command __id="2952" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:25:47 EDT 2022" starttimestamp="1649721002230" timestamp="5744815" />
  <Command __id="2953" _type="ShellCommand" date="Mon Apr 11 21:25:47 EDT 2022" starttimestamp="1649721002230" timestamp="5744879" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2955" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:25:47 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="5745601" />
  <Command __id="2957" _type="PauseCommand" date="Mon Apr 11 21:25:57 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5755465">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9864]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2958" _type="ShellCommand" date="Mon Apr 11 21:25:59 EDT 2022" starttimestamp="1649721002230" timestamp="5757625" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2960" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:25:59 EDT 2022" starttimestamp="1649721002230" timestamp="5757660" />
  <Command __id="2961" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 21:25:59 EDT 2022" starttimestamp="1649721002230" timestamp="5757663" />
  <Command __id="2962" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:25:59 EDT 2022" starttimestamp="1649721002230" timestamp="5757668" />
  <Command __id="2964" _type="PauseCommand" date="Mon Apr 11 21:26:03 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5761632">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3964]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2963" _type="ShellCommand" date="Mon Apr 11 21:26:03 EDT 2022" starttimestamp="1649721002230" timestamp="5761632" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2966" _type="PauseCommand" date="Mon Apr 11 21:26:06 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5764638">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3006]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2965" _type="ShellCommand" date="Mon Apr 11 21:26:06 EDT 2022" starttimestamp="1649721002230" timestamp="5764638" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2968" _type="PauseCommand" date="Mon Apr 11 21:26:11 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5769616">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4978]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2969" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:26:16 EDT 2022" starttimestamp="1649721002230" timestamp="5774632" />
  <Command __id="2971" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:26:16 EDT 2022" starttimestamp="1649721002230" timestamp="5774655" />
  <Command __id="2972" _type="ShellCommand" date="Mon Apr 11 21:26:16 EDT 2022" starttimestamp="1649721002230" timestamp="5774742" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2974" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:26:17 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="5775445" />
  <Command __id="2976" _type="PauseCommand" date="Mon Apr 11 21:26:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5777471">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2026]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2975" _type="ShellCommand" date="Mon Apr 11 21:26:19 EDT 2022" starttimestamp="1649721002230" timestamp="5777471" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2978" _type="PauseCommand" date="Mon Apr 11 21:26:22 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5780145">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2674]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2977" _type="ShellCommand" date="Mon Apr 11 21:26:22 EDT 2022" starttimestamp="1649721002230" timestamp="5780145" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2979" _type="MoveCaretCommand" caretOffset="66" date="Mon Apr 11 21:26:22 EDT 2022" docOffset="66" starttimestamp="1649721002230" timestamp="5780200" />
  <Command __id="2980" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Mon Apr 11 21:26:22 EDT 2022" starttimestamp="1649721002230" timestamp="5780412" />
  <Command __id="2982" _type="PasteCommand" date="Mon Apr 11 21:26:23 EDT 2022" starttimestamp="1649721002230" timestamp="5781036" />
  <Command __id="2984" _type="PauseCommand" date="Mon Apr 11 21:26:25 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5783539">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2503]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2983" _type="ShellCommand" date="Mon Apr 11 21:26:25 EDT 2022" starttimestamp="1649721002230" timestamp="5783539" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2985" _type="ShellCommand" date="Mon Apr 11 21:26:25 EDT 2022" starttimestamp="1649721002230" timestamp="5783624" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2987" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:26:26 EDT 2022" starttimestamp="1649721002230" timestamp="5784443" />
  <Command __id="2988" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:26:26 EDT 2022" starttimestamp="1649721002230" timestamp="5784530" />
  <Command __id="2989" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:26:26 EDT 2022" starttimestamp="1649721002230" timestamp="5784554" />
  <Command __id="2990" _type="ShellCommand" date="Mon Apr 11 21:26:26 EDT 2022" starttimestamp="1649721002230" timestamp="5784658" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2992" _type="PauseCommand" date="Mon Apr 11 21:26:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5786316">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1658]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2991" _type="ShellCommand" date="Mon Apr 11 21:26:28 EDT 2022" starttimestamp="1649721002230" timestamp="5786316" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2868" _type="Delete" date="Mon Apr 11 21:20:48 EDT 2022" docASTNodeCount="263" docActiveCodeLength="2087" docExpressionCount="160" docLength="2105" endLine="40" length="8" offset="2097" repeat="5" startLine="37" starttimestamp="1649721002230" timestamp="5446270" timestamp2="5448386">
    <text><![CDATA[
	
	
]]></text>
  </DocumentChange>
  <Command __id="2916" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:24:37 EDT 2022" docASTNodeCount="6" docActiveCodeLength="83" docExpressionCount="2" docLength="83" projectName="A6" starttimestamp="1649721002230" timestamp="5675060">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\NIOManagerPrintServerLauncherNoFactory.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

public class NIOManagerPrintServerLauncherNoFactory {

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2924" _type="Replace" date="Mon Apr 11 21:24:43 EDT 2022" docASTNodeCount="41" docActiveCodeLength="287" docExpressionCount="26" docLength="287" endLine="5" insertionLength="287" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="83" offset="0" startLine="0" starttimestamp="1649721002230" timestamp="5681047">
    <deletedText><![CDATA[package nioExample;

public class NIOManagerPrintServerLauncherNoFactory {

}
]]></deletedText>
    <insertedText><![CDATA[package examples.nio.manager.print.noFactory;

import assignments.util.mainArgs.ServerArgsProcessor;

public class NIOManagerPrintServerLauncherNoFactory {
	public static void main(String[] args) {
		new AnNIOManagerPrintServer(ServerArgsProcessor.getNIOServerPort(args));
	}

}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2929" _type="Replace" date="Mon Apr 11 21:24:56 EDT 2022" docASTNodeCount="33" docActiveCodeLength="261" docExpressionCount="18" docLength="261" endLine="0" insertionLength="10" int_docASTNodeCount="31" int_docActiveCodeLength="251" int_docExpressionCount="17" int_docLength="251" length="36" offset="8" startLine="0" starttimestamp="1649721002230" timestamp="5694373">
    <deletedText><![CDATA[examples.nio.manager.print.noFactory]]></deletedText>
    <insertedText><![CDATA[nioExample]]></insertedText>
  </DocumentChange>
  <Command __id="2954" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:25:47 EDT 2022" docASTNodeCount="6" docActiveCodeLength="77" docExpressionCount="2" docLength="77" projectName="A6" starttimestamp="1649721002230" timestamp="5745400">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\NIOManagerPrintServer\NIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package NIOManagerPrintServer;

public class NIOManagerPrintServer {

}
]]></snapshot>
  </Command>
  <Command __id="2973" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:26:17 EDT 2022" docASTNodeCount="6" docActiveCodeLength="66" docExpressionCount="2" docLength="66" projectName="A6" starttimestamp="1649721002230" timestamp="5775220">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\NIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

public class NIOManagerPrintServer {

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2981" _type="Replace" date="Mon Apr 11 21:26:23 EDT 2022" docASTNodeCount="38" docActiveCodeLength="295" docExpressionCount="30" docLength="295" endLine="5" insertionLength="295" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="66" offset="0" startLine="0" starttimestamp="1649721002230" timestamp="5781025">
    <deletedText><![CDATA[package nioExample;

public class NIOManagerPrintServer {

}
]]></deletedText>
    <insertedText><![CDATA[package examples.nio.manager.print.noFactory;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;

public interface NIOManagerPrintServer extends SocketChannelAcceptListener, SocketChannelReadListener {

}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2986" _type="Replace" date="Mon Apr 11 21:26:25 EDT 2022" docASTNodeCount="30" docActiveCodeLength="269" docExpressionCount="22" docLength="269" endLine="0" insertionLength="10" int_docASTNodeCount="28" int_docActiveCodeLength="259" int_docExpressionCount="21" int_docLength="259" length="36" offset="8" startLine="0" starttimestamp="1649721002230" timestamp="5783633">
    <deletedText><![CDATA[examples.nio.manager.print.noFactory]]></deletedText>
    <insertedText><![CDATA[nioExample]]></insertedText>
  </DocumentChange>
  <Command __id="2994" _type="PauseCommand" date="Mon Apr 11 21:26:32 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5790208">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3892]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2995" _type="MoveCaretCommand" caretOffset="261" date="Mon Apr 11 21:26:32 EDT 2022" docOffset="261" starttimestamp="1649721002230" timestamp="5790313" />
  <Command __id="2997" _type="PauseCommand" date="Mon Apr 11 21:26:36 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5794464">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4151]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2996" _type="ShellCommand" date="Mon Apr 11 21:26:36 EDT 2022" starttimestamp="1649721002230" timestamp="5794464" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2999" _type="PauseCommand" date="Mon Apr 11 21:26:40 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5798357">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3893]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2998" _type="ShellCommand" date="Mon Apr 11 21:26:40 EDT 2022" starttimestamp="1649721002230" timestamp="5798357" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3001" _type="PauseCommand" date="Mon Apr 11 21:26:44 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5801834">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3477]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3000" _type="ShellCommand" date="Mon Apr 11 21:26:44 EDT 2022" starttimestamp="1649721002230" timestamp="5801834" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3003" _type="PauseCommand" date="Mon Apr 11 21:26:49 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5807548">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5714]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="3004" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:26:50 EDT 2022" starttimestamp="1649721002230" timestamp="5808556" />
  <Command __id="3006" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:26:50 EDT 2022" starttimestamp="1649721002230" timestamp="5808576" />
  <Command __id="3007" _type="ShellCommand" date="Mon Apr 11 21:26:50 EDT 2022" starttimestamp="1649721002230" timestamp="5808642" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3009" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:26:51 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="5809222" />
  <Command __id="3011" _type="PauseCommand" date="Mon Apr 11 21:26:53 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5811002">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1780]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3010" _type="ShellCommand" date="Mon Apr 11 21:26:53 EDT 2022" starttimestamp="1649721002230" timestamp="5811002" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3013" _type="PauseCommand" date="Mon Apr 11 21:26:55 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5813541">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2539]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3012" _type="ShellCommand" date="Mon Apr 11 21:26:55 EDT 2022" starttimestamp="1649721002230" timestamp="5813541" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3014" _type="MoveCaretCommand" caretOffset="83" date="Mon Apr 11 21:26:55 EDT 2022" docOffset="83" starttimestamp="1649721002230" timestamp="5813590" />
  <Command __id="3015" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Mon Apr 11 21:26:56 EDT 2022" starttimestamp="1649721002230" timestamp="5813794" />
  <Command __id="3017" _type="PasteCommand" date="Mon Apr 11 21:26:56 EDT 2022" starttimestamp="1649721002230" timestamp="5814389" />
  <Command __id="3019" _type="PauseCommand" date="Mon Apr 11 21:26:59 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5817269">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2880]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3018" _type="ShellCommand" date="Mon Apr 11 21:26:59 EDT 2022" starttimestamp="1649721002230" timestamp="5817269" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3020" _type="ShellCommand" date="Mon Apr 11 21:26:59 EDT 2022" starttimestamp="1649721002230" timestamp="5817403" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3021" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:26:59 EDT 2022" starttimestamp="1649721002230" timestamp="5817582" />
  <Command __id="3022" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:26:59 EDT 2022" starttimestamp="1649721002230" timestamp="5817599" />
  <Command __id="3023" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 11 21:26:59 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="5817689" />
  <Command __id="3024" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Mon Apr 11 21:26:59 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="5817689" />
  <Command __id="3025" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:26:59 EDT 2022" starttimestamp="1649721002230" timestamp="5817727" />
  <Command __id="3026" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:26:59 EDT 2022" starttimestamp="1649721002230" timestamp="5817751" />
  <Command __id="3028" _type="PauseCommand" date="Mon Apr 11 21:27:22 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="5839959">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[22208]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3029" _type="ShellCommand" date="Mon Apr 11 21:27:23 EDT 2022" starttimestamp="1649721002230" timestamp="5841576" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3031" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:27:23 EDT 2022" starttimestamp="1649721002230" timestamp="5841610" />
  <Command __id="3032" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 21:27:23 EDT 2022" starttimestamp="1649721002230" timestamp="5841613" />
  <Command __id="3033" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:27:23 EDT 2022" starttimestamp="1649721002230" timestamp="5841618" />
  <Command __id="3035" _type="PauseCommand" date="Mon Apr 11 21:27:29 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5847136">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5518]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3036" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:27:37 EDT 2022" starttimestamp="1649721002230" timestamp="5855003" />
  <Command __id="3038" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:27:37 EDT 2022" starttimestamp="1649721002230" timestamp="5855018" />
  <Command __id="3039" _type="ShellCommand" date="Mon Apr 11 21:27:37 EDT 2022" starttimestamp="1649721002230" timestamp="5855090" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3041" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:27:37 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="5855737" />
  <Command __id="3043" _type="PauseCommand" date="Mon Apr 11 21:27:39 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5856977">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1240]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3042" _type="ShellCommand" date="Mon Apr 11 21:27:39 EDT 2022" starttimestamp="1649721002230" timestamp="5856977" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3045" _type="PauseCommand" date="Mon Apr 11 21:27:46 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5863894">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6917]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3044" _type="ShellCommand" date="Mon Apr 11 21:27:46 EDT 2022" starttimestamp="1649721002230" timestamp="5863894" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3046" _type="SelectTextCommand" caretOffset="23" date="Mon Apr 11 21:27:46 EDT 2022" end="83" start="23" starttimestamp="1649721002230" timestamp="5864766" />
  <Command __id="3048" _type="PasteCommand" date="Mon Apr 11 21:27:47 EDT 2022" starttimestamp="1649721002230" timestamp="5865171" />
  <Command __id="3049" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:27:47 EDT 2022" starttimestamp="1649721002230" timestamp="5865648" />
  <Command __id="3050" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:27:48 EDT 2022" starttimestamp="1649721002230" timestamp="5866231" />
  <Command __id="3051" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:27:48 EDT 2022" starttimestamp="1649721002230" timestamp="5866256" />
  <Command __id="3052" _type="ShellCommand" date="Mon Apr 11 21:27:48 EDT 2022" starttimestamp="1649721002230" timestamp="5866325" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3054" _type="PauseCommand" date="Mon Apr 11 21:27:49 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5867755">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1430]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3053" _type="ShellCommand" date="Mon Apr 11 21:27:49 EDT 2022" starttimestamp="1649721002230" timestamp="5867755" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3056" _type="PauseCommand" date="Mon Apr 11 21:27:57 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5875152">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7397]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3055" _type="ShellCommand" date="Mon Apr 11 21:27:57 EDT 2022" starttimestamp="1649721002230" timestamp="5875152" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3058" _type="PauseCommand" date="Mon Apr 11 21:28:12 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5889903">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14751]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="3059" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:28:13 EDT 2022" starttimestamp="1649721002230" timestamp="5891248" />
  <Command __id="3061" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:28:13 EDT 2022" starttimestamp="1649721002230" timestamp="5891265" />
  <Command __id="3062" _type="ShellCommand" date="Mon Apr 11 21:28:13 EDT 2022" starttimestamp="1649721002230" timestamp="5891341" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3064" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:28:14 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="5891990" />
  <Command __id="3066" _type="PauseCommand" date="Mon Apr 11 21:28:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5893239">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1249]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3065" _type="ShellCommand" date="Mon Apr 11 21:28:15 EDT 2022" starttimestamp="1649721002230" timestamp="5893239" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3068" _type="PauseCommand" date="Mon Apr 11 21:28:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5897483">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4244]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3067" _type="ShellCommand" date="Mon Apr 11 21:28:19 EDT 2022" starttimestamp="1649721002230" timestamp="5897483" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3069" _type="SelectTextCommand" caretOffset="23" date="Mon Apr 11 21:28:20 EDT 2022" end="66" start="23" starttimestamp="1649721002230" timestamp="5898143" />
  <Command __id="3071" _type="PasteCommand" date="Mon Apr 11 21:28:20 EDT 2022" starttimestamp="1649721002230" timestamp="5898559" />
  <Command __id="3072" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:28:21 EDT 2022" starttimestamp="1649721002230" timestamp="5899086" />
  <Command __id="3073" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:28:21 EDT 2022" starttimestamp="1649721002230" timestamp="5899624" />
  <Command __id="3074" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:28:21 EDT 2022" starttimestamp="1649721002230" timestamp="5899663" />
  <Command __id="3075" _type="ShellCommand" date="Mon Apr 11 21:28:21 EDT 2022" starttimestamp="1649721002230" timestamp="5899751" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3077" _type="PauseCommand" date="Mon Apr 11 21:28:23 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5901430">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1679]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3076" _type="ShellCommand" date="Mon Apr 11 21:28:23 EDT 2022" starttimestamp="1649721002230" timestamp="5901430" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3079" _type="PauseCommand" date="Mon Apr 11 21:28:29 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5907325">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5895]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3078" _type="ShellCommand" date="Mon Apr 11 21:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="5907325" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3081" _type="PauseCommand" date="Mon Apr 11 21:28:40 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5917885">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10560]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="3082" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:28:41 EDT 2022" starttimestamp="1649721002230" timestamp="5919282" />
  <Command __id="3084" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:28:41 EDT 2022" starttimestamp="1649721002230" timestamp="5919300" />
  <Command __id="3085" _type="ShellCommand" date="Mon Apr 11 21:28:41 EDT 2022" starttimestamp="1649721002230" timestamp="5919356" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3087" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:28:42 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="5920000" />
  <Command __id="3089" _type="PauseCommand" date="Mon Apr 11 21:28:43 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5921368">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1368]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3088" _type="ShellCommand" date="Mon Apr 11 21:28:43 EDT 2022" starttimestamp="1649721002230" timestamp="5921368" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3091" _type="PauseCommand" date="Mon Apr 11 21:28:47 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5925175">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3807]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3090" _type="ShellCommand" date="Mon Apr 11 21:28:47 EDT 2022" starttimestamp="1649721002230" timestamp="5925175" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3092" _type="SelectTextCommand" caretOffset="23" date="Mon Apr 11 21:28:47 EDT 2022" end="68" start="23" starttimestamp="1649721002230" timestamp="5925602" />
  <Command __id="3094" _type="PasteCommand" date="Mon Apr 11 21:28:48 EDT 2022" starttimestamp="1649721002230" timestamp="5926000" />
  <Command __id="3095" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:28:48 EDT 2022" starttimestamp="1649721002230" timestamp="5926538" />
  <Command __id="3096" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:28:49 EDT 2022" starttimestamp="1649721002230" timestamp="5927093" />
  <Command __id="3097" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:28:49 EDT 2022" starttimestamp="1649721002230" timestamp="5927128" />
  <Command __id="2993" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:26:32 EDT 2022" docASTNodeCount="33" docActiveCodeLength="261" docExpressionCount="18" docLength="261" projectName="A6" starttimestamp="1649721002230" timestamp="5790208">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\NIOManagerPrintServerLauncherNoFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶"), Diff(DELETE,"public class NIOManagerPrintServerLauncherNoFactory {¶¶}¶"), Diff(INSERT,"import assignments.util.mainArgs.ServerArgsProcessor;¶¶public class NIOManagerPrintServerLauncherNoFactory {¶	public static void main(String[] args) {¶		new AnNIOManagerPrintServer(ServerArgsProcessor.getNIOServerPort(args));¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import assignments.util.mainArgs.ServerArgsProcessor;

public class NIOManagerPrintServerLauncherNoFactory {
	public static void main(String[] args) {
		new AnNIOManagerPrintServer(ServerArgsProcessor.getNIOServerPort(args));
	}

}]]></snapshot>
  </Command>
  <Command __id="3008" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:26:51 EDT 2022" docASTNodeCount="6" docActiveCodeLength="83" docExpressionCount="2" docLength="83" projectName="A6" starttimestamp="1649721002230" timestamp="5809064">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\NIOManagerPrintClientLauncherNoFactory.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

public class NIOManagerPrintClientLauncherNoFactory {

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3016" _type="Replace" date="Mon Apr 11 21:26:56 EDT 2022" docASTNodeCount="43" docActiveCodeLength="302" docExpressionCount="28" docLength="302" endLine="5" insertionLength="302" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="83" offset="0" startLine="0" starttimestamp="1649721002230" timestamp="5814378">
    <deletedText><![CDATA[package nioExample;

public class NIOManagerPrintClientLauncherNoFactory {

}
]]></deletedText>
    <insertedText><![CDATA[package examples.nio.manager.print.noFactory;

import assignments.util.mainArgs.ClientArgsProcessor;

public class NIOManagerPrintClientLauncherNoFactory {
	public static void main(String[] args) {
		new AnNIOManagerPrintClient(ClientArgsProcessor.getNIOServerPort(args)).processInput();
	}

}]]></insertedText>
  </DocumentChange>
  <Command __id="3040" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:27:37 EDT 2022" docASTNodeCount="6" docActiveCodeLength="83" docExpressionCount="2" docLength="83" projectName="A6" starttimestamp="1649721002230" timestamp="5855496">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\NIOManagerPrintClientLauncherNoFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶public class NIOManagerPrintClientLauncherNoFactory {¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3047" _type="Replace" date="Mon Apr 11 21:27:47 EDT 2022" docASTNodeCount="35" docActiveCodeLength="276" docExpressionCount="20" docLength="276" endLine="5" insertionLength="253" int_docASTNodeCount="3" int_docActiveCodeLength="23" int_docExpressionCount="1" int_docLength="23" length="60" offset="23" startLine="2" starttimestamp="1649721002230" timestamp="5865155">
    <deletedText><![CDATA[public class NIOManagerPrintClientLauncherNoFactory {

}
]]></deletedText>
    <insertedText><![CDATA[import assignments.util.mainArgs.ClientArgsProcessor;

public class NIOManagerPrintClientLauncherNoFactory {
	public static void main(String[] args) {
		new AnNIOManagerPrintClient(ClientArgsProcessor.getNIOServerPort(args)).processInput();
	}

}]]></insertedText>
  </DocumentChange>
  <Command __id="3063" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:28:13 EDT 2022" docASTNodeCount="6" docActiveCodeLength="68" docExpressionCount="2" docLength="68" projectName="A6" starttimestamp="1649721002230" timestamp="5891766">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

public class AnNIOManagerPrintServer {

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3070" _type="Replace" date="Mon Apr 11 21:28:20 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2543" endLine="4" insertionLength="2518" int_docASTNodeCount="3" int_docActiveCodeLength="25" int_docExpressionCount="1" int_docLength="25" length="43" offset="23" startLine="2" starttimestamp="1649721002230" timestamp="5898539">
    <deletedText><![CDATA[public class AnNIOManagerPrintServer {

}]]></deletedText>
    <insertedText><![CDATA[import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;


import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}
//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}
	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		
			nioManager.enableListenableAccepts(aServerFactoryChannel,
					SelectionKey.OP_READ, // allow incoming writes that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}		
	}
	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		
	}
	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);
		
	}
	

}]]></insertedText>
  </DocumentChange>
  <Command __id="3086" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:28:42 EDT 2022" docASTNodeCount="6" docActiveCodeLength="68" docExpressionCount="2" docLength="68" projectName="A6" starttimestamp="1649721002230" timestamp="5919798">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

public class AnNIOManagerPrintClient {

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3093" _type="Replace" date="Mon Apr 11 21:28:48 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2597" docExpressionCount="279" docLength="2813" endLine="5" insertionLength="2790" int_docASTNodeCount="3" int_docActiveCodeLength="23" int_docExpressionCount="1" int_docLength="23" length="45" offset="23" startLine="2" starttimestamp="1649721002230" timestamp="5925971">
    <deletedText><![CDATA[public class AnNIOManagerPrintClient {

}
]]></deletedText>
    <insertedText><![CDATA[import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener {
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					0, // do not allow any incoming messages
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {

	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception e) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {

	}

}]]></insertedText>
  </DocumentChange>
  <Command __id="3099" _type="PauseCommand" date="Mon Apr 11 21:29:17 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="5954839">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[27711]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3098" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:29:17 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1931" docExpressionCount="144" docLength="1931" projectName="A6" starttimestamp="1649721002230" timestamp="5954839">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;"), Diff(INSERT,"¶import inputport.nio.manager.listeners.SocketChannelWriteListener;"), Diff(EQUAL,"¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC extends"), Diff(INSERT," SocketChannelWriteListener,"), Diff(EQUAL," SocketChannelAcceptListener, SocketChannelReadListener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})
public interface ServerRemoteInterfaceGIPC extends SocketChannelWriteListener, SocketChannelAcceptListener, SocketChannelReadListener, Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;

	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;

	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;

	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;

	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;

	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="3100" _type="MoveCaretCommand" caretOffset="436" date="Mon Apr 11 21:29:17 EDT 2022" docOffset="436" starttimestamp="1649721002230" timestamp="5955109" />
  <Command __id="3102" _type="MoveCaretCommand" caretOffset="2813" date="Mon Apr 11 21:29:18 EDT 2022" docOffset="2813" starttimestamp="1649721002230" timestamp="5956038" />
  <Command __id="3101" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:29:18 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2597" docExpressionCount="279" docLength="2813" projectName="A6" starttimestamp="1649721002230" timestamp="5955806">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶"), Diff(DELETE,"public class AnNIOManagerPrintClient {¶¶}¶"), Diff(INSERT,"import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener {
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					0, // do not allow any incoming messages
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {

	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception e) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {

	}

}]]></snapshot>
  </Command>
  <Command __id="3104" _type="PauseCommand" date="Mon Apr 11 21:29:34 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="5972316">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[16278]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3106" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:29:42 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5979866" type="Run" />
  <Command __id="3108" _type="RunCommand" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:29:42 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5979866" type="Run" />
  <Command __id="3110" _type="PauseCommand" date="Mon Apr 11 21:29:44 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="5982006">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2140]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3109" _type="ShellCommand" date="Mon Apr 11 21:29:44 EDT 2022" starttimestamp="1649721002230" timestamp="5982006" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3112" _type="PauseCommand" date="Mon Apr 11 21:29:46 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="5983823">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1817]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3111" _type="ShellCommand" date="Mon Apr 11 21:29:46 EDT 2022" starttimestamp="1649721002230" timestamp="5983823" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3113" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:29:46 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5984006" type="Run" />
  <Command __id="3114" _type="ProgramExecutionEvent" className="/A6/src/checks/Checks.java" date="Mon Apr 11 21:29:46 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="5984006" type="Run" />
  <Command __id="3116" _type="PauseCommand" date="Mon Apr 11 21:29:52 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="5990577">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[6571]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3120" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Apr 11 21:30:03 EDT 2022" starttimestamp="1649721002230" timestamp="6000955" />
  <Command __id="3122" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 21:30:03 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="6000967" type="Run" />
  <Command __id="3123" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 21:30:03 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="6000967" type="Run" />
  <Command __id="3125" _type="PauseCommand" date="Mon Apr 11 21:30:10 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="6008146">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[7179]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3124" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Apr 11 21:30:10 EDT 2022" starttimestamp="1649721002230" timestamp="6008146" />
  <Command __id="3126" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintServerLauncherNoFactory.java" date="Mon Apr 11 21:30:10 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="6008434" type="Run" />
  <Command __id="3127" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintServerLauncherNoFactory.java" date="Mon Apr 11 21:30:10 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="6008434" type="Run" />
  <Command __id="3129" _type="PauseCommand" date="Mon Apr 11 21:30:20 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="6018010">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[9576]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3128" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Apr 11 21:30:20 EDT 2022" starttimestamp="1649721002230" timestamp="6018010" />
  <Command __id="3130" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 21:30:20 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="6018079" type="Run" />
  <Command __id="3131" _type="ConsoleOutput" date="Mon Apr 11 21:30:21 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="6018773" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶")]]]></diff>
  </Command>
  <Command __id="3133" _type="PauseCommand" date="Mon Apr 11 21:30:28 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="6026461">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7688]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="3132" _type="ConsoleInput" date="Mon Apr 11 21:30:28 EDT 2022" starttimestamp="1649721002230" timestamp="6026461" type="Exception">
    <outputString><![CDATA[hi
]]></outputString>
  </Command>
  <Command __id="3134" _type="ConsoleOutput" date="Mon Apr 11 21:30:28 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="6026526" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶")]]]></diff>
  </Command>
  <Command __id="3135" _type="ConsoleOutput" date="Mon Apr 11 21:30:28 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="6026543" type="ConsoleOutput">
    <outputString><![CDATA[hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54097]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely"), Diff(INSERT,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54097]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3137" _type="PauseCommand" date="Mon Apr 11 21:30:46 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="6044086">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[17543]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="3136" _type="ConsoleInput" date="Mon Apr 11 21:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="6044086" type="Exception">
    <outputString><![CDATA[my name is mansi
]]></outputString>
  </Command>
  <Command __id="3138" _type="ConsoleOutput" date="Mon Apr 11 21:30:46 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="6044139" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54097]"), Diff(INSERT,"Enter a line of input to be printed remotely"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3139" _type="ConsoleOutput" date="Mon Apr 11 21:30:46 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="6044145" type="ConsoleOutput">
    <outputString><![CDATA[my name is mansi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54097]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely"), Diff(INSERT,"my name is mansi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54097]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3141" _type="PauseCommand" date="Mon Apr 11 21:34:01 EDT 2022" range="2m-5m" starttimestamp="1649721002230" timestamp="6239679">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[195534]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3140" _type="ShellCommand" date="Mon Apr 11 21:34:01 EDT 2022" starttimestamp="1649721002230" timestamp="6239679" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3143" _type="PauseCommand" date="Mon Apr 11 21:34:43 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="6281683">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[42003]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3144" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 21:34:47 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="6285011" type="Run" />
  <Command __id="3146" _type="ConsoleOutput" date="Mon Apr 11 21:34:47 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="6285744" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"my name is mansi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54097]"), Diff(INSERT,"Enter a line of input to be printed remotely"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3148" _type="PauseCommand" date="Mon Apr 11 21:34:57 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="6294881">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9137]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="3147" _type="ConsoleInput" date="Mon Apr 11 21:34:57 EDT 2022" starttimestamp="1649721002230" timestamp="6294881" type="Exception">
    <outputString><![CDATA[noooooo
]]></outputString>
  </Command>
  <Command __id="3149" _type="ConsoleOutput" date="Mon Apr 11 21:34:57 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="6294940" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶")]]]></diff>
  </Command>
  <Command __id="3150" _type="ConsoleOutput" date="Mon Apr 11 21:34:57 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="6294964" type="ConsoleOutput">
    <outputString><![CDATA[noooooo<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54125]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely"), Diff(INSERT,"noooooo<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54125]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3103" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:29:34 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2543" projectName="A6" starttimestamp="1649721002230" timestamp="5972316">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶"), Diff(DELETE,"public class AnNIOManagerPrintServer {"), Diff(INSERT,"import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶	}¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;


import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}
//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}
	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		
			nioManager.enableListenableAccepts(aServerFactoryChannel,
					SelectionKey.OP_READ, // allow incoming writes that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}		
	}
	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		
	}
	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="3152" _type="PauseCommand" date="Mon Apr 11 21:38:17 EDT 2022" range="2m-5m" starttimestamp="1649721002230" timestamp="6494908">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[199944]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3153" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:38:17 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="6495118" />
  <Command __id="3151" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:38:17 EDT 2022" docASTNodeCount="965" docActiveCodeLength="6983" docExpressionCount="662" docLength="7849" projectName="A6" starttimestamp="1649721002230" timestamp="6494908">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3155" _type="PauseCommand" date="Mon Apr 11 21:38:50 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="6528303">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[33185]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3156" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:38:50 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="6528494" />
  <Command __id="3154" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:38:50 EDT 2022" docASTNodeCount="121" docActiveCodeLength="956" docExpressionCount="82" docLength="990" projectName="A6" starttimestamp="1649721002230" timestamp="6528303">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends"), Diff(INSERT," SocketChannelConnectListener, SocketChannelWriteListener,"), Diff(EQUAL," Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="3158" _type="PauseCommand" date="Mon Apr 11 21:38:53 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="6531687">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3193]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3159" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:38:54 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="6531909" />
  <Command __id="3161" _type="PauseCommand" date="Mon Apr 11 21:39:13 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="6551393">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[19484]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3160" _type="ShellCommand" date="Mon Apr 11 21:39:13 EDT 2022" starttimestamp="1649721002230" timestamp="6551393" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3163" _type="PauseCommand" date="Mon Apr 11 21:47:32 EDT 2022" range="5m-10m" starttimestamp="1649721002230" timestamp="7050005">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[498612]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3162" _type="ShellCommand" date="Mon Apr 11 21:47:32 EDT 2022" starttimestamp="1649721002230" timestamp="7050005" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3165" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:47:32 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="7050309" />
  <Command __id="3157" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:38:53 EDT 2022" docASTNodeCount="1199" docActiveCodeLength="9152" docExpressionCount="846" docLength="10123" projectName="A6" starttimestamp="1649721002230" timestamp="6531687">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		"), Diff(DELETE,"//"), Diff(EQUAL,"SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		SERVER_NAME = ClientArgsProcessor.getServerHost(args);
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}

	@Override
	public void connected(SocketChannel arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}


}
]]></snapshot>
  </Command>
  <Command __id="3164" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:47:32 EDT 2022" docASTNodeCount="121" docActiveCodeLength="956" docExpressionCount="82" docLength="990" projectName="A6" starttimestamp="1649721002230" timestamp="7050153">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3167" _type="PauseCommand" date="Mon Apr 11 21:47:34 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="7051884">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1575]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3168" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:47:34 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="7052011" />
  <Command __id="3166" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:47:34 EDT 2022" docASTNodeCount="965" docActiveCodeLength="6983" docExpressionCount="662" docLength="7849" projectName="A6" starttimestamp="1649721002230" timestamp="7051884">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import 	util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{¶	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();¶	¶	private static  String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	¶	//int aProposalNumber = 0;¶	¶¶	¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶				//ClientArgsProcessor.getServerHost(args);¶		¶		¶	}¶	¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		clientList.add(aClient);¶		System.out.println("Client registered");¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {¶		¶		//TODO Check is this is where delay is needed¶		long aDelay = getDelay(); ¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶		¶		System.out.println("Command recieved for broadcast: "+ aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		for (ClientRemoteInterfaceRMI client : clientList) {¶			if(client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					//Need to quit¶					this.quit(0);¶				}¶				continue;¶			}¶			¶			client.inCoupler(aNewCommand, aProposalNumber);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶			¶			if (aNewCommand.charAt(0) == 'q') {¶				//Need to quit¶				this.quit(0);¶			}¶		}¶				¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶				¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶		¶		setTracing();¶¶		this.processArgs(args);¶		¶		¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			//Create remote server object¶			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();¶			//create proxy of remote server object¶			//UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			//send server to RMI server¶			//rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶			¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶			¶			System.out.println("Server proxy sent to RMI Registry");¶			¶			¶			¶		} catch(Exception e){¶			e.printStackTrace();¶		}¶		¶	}¶	¶	@Override¶	public void  start (String[] args) {¶		init(args);¶		¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo){¶		// TODO Auto-generated method stub¶		IPCMechanism mechanism = getIPCMechanism();¶		setIPCMechanism(mechanism);¶		boolean broadcast = true;¶		setBroadcastMetaState(broadcast);¶		¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void createGIPCRegistry() throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,¶			int aProposalNumber, boolean broadcast) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3170" _type="PauseCommand" date="Mon Apr 11 21:48:18 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="7096648">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[44637]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3171" _type="MoveCaretCommand" caretOffset="2541" date="Mon Apr 11 21:48:19 EDT 2022" docOffset="2541" starttimestamp="1649721002230" timestamp="7096784" />
  <Command __id="3169" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:48:18 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2543" projectName="A6" starttimestamp="1649721002230" timestamp="7096648">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3173" _type="PauseCommand" date="Mon Apr 11 21:48:20 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="7098125">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1341]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3174" _type="MoveCaretCommand" caretOffset="2813" date="Mon Apr 11 21:48:20 EDT 2022" docOffset="2813" starttimestamp="1649721002230" timestamp="7098199" />
  <Command __id="3176" _type="PauseCommand" date="Mon Apr 11 21:50:02 EDT 2022" range="1m-2m" starttimestamp="1649721002230" timestamp="7200121">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[101922]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="3175" _type="BalloonCommand" date="Mon Apr 11 21:50:02 EDT 2022" message="*******************************************
Worked 34 minutes(fixed)/49 minutes(context based) from
Mon Apr 11 20:50:02 EDT 2022 to Mon Apr 11 21:48:20 EDT 2022
Edited 1 Projects: 
	A6
Edited 9 Files: 
	C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceGIPC.java
	C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceRMI.java
	C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceRMI.java
	C:\Users\mannu\COMP_533\A6\src\client\ClientConfigure.java
	C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java
	C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java
	C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectRMI.java
	C:\Users\mannu\COMP_533\A6\src\server\ServerConfigure.java
	C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java
Number of insert: 4144
Number of delete: 1300
" starttimestamp="1649721002230" timestamp="7200121">
    <fineGrainedWorkTime><![CDATA[49]]></fineGrainedWorkTime>
    <insert><![CDATA[4144]]></insert>
    <startTime><![CDATA[1649724602353]]></startTime>
    <endTime><![CDATA[1649728100429]]></endTime>
    <workTime><![CDATA[34]]></workTime>
    <delete><![CDATA[1300]]></delete>
  </Command>
  <Command __id="3178" _type="PauseCommand" date="Mon Apr 11 21:52:03 EDT 2022" range="2m-5m" starttimestamp="1649721002230" timestamp="7321303">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[121182]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3177" _type="ShellCommand" date="Mon Apr 11 21:52:03 EDT 2022" starttimestamp="1649721002230" timestamp="7321303" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3180" _type="PauseCommand" date="Mon Apr 11 21:53:06 EDT 2022" range="1m-2m" starttimestamp="1649721002230" timestamp="7383959">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[62656]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3179" _type="ShellCommand" date="Mon Apr 11 21:53:06 EDT 2022" starttimestamp="1649721002230" timestamp="7383959" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3182" _type="PauseCommand" date="Mon Apr 11 21:53:11 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="7389486">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5527]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3181" _type="ShellCommand" date="Mon Apr 11 21:53:11 EDT 2022" starttimestamp="1649721002230" timestamp="7389486" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3184" _type="PauseCommand" date="Mon Apr 11 21:53:12 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="7390714">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1228]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3183" _type="ShellCommand" date="Mon Apr 11 21:53:12 EDT 2022" starttimestamp="1649721002230" timestamp="7390714" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3172" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:48:20 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2597" docExpressionCount="279" docLength="2813" projectName="A6" starttimestamp="1649721002230" timestamp="7098125">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="3186" _type="PauseCommand" date="Mon Apr 11 21:53:16 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="7394702">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3988]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3187" _type="MoveCaretCommand" caretOffset="2541" date="Mon Apr 11 21:53:17 EDT 2022" docOffset="2541" starttimestamp="1649721002230" timestamp="7394783" />
  <Command __id="3185" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:53:16 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2543" projectName="A6" starttimestamp="1649721002230" timestamp="7394702">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3189" _type="PauseCommand" date="Mon Apr 11 21:53:23 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="7401397">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6614]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3190" _type="MoveCaretCommand" caretOffset="2813" date="Mon Apr 11 21:53:23 EDT 2022" docOffset="2813" starttimestamp="1649721002230" timestamp="7401497" />
  <Command __id="3188" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:53:23 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2597" docExpressionCount="279" docLength="2813" projectName="A6" starttimestamp="1649721002230" timestamp="7401397">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="3192" _type="PauseCommand" date="Mon Apr 11 21:53:37 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="7415156">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13659]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3193" _type="MoveCaretCommand" caretOffset="2541" date="Mon Apr 11 21:53:37 EDT 2022" docOffset="2541" starttimestamp="1649721002230" timestamp="7415235" />
  <Command __id="3191" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:53:37 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2543" projectName="A6" starttimestamp="1649721002230" timestamp="7415156">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3195" _type="PauseCommand" date="Mon Apr 11 21:53:45 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="7423606">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8371]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3196" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:53:46 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="7423799" />
  <Command __id="3194" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:53:45 EDT 2022" docASTNodeCount="1199" docActiveCodeLength="9152" docExpressionCount="846" docLength="10123" projectName="A6" starttimestamp="1649721002230" timestamp="7423606">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3198" _type="PauseCommand" date="Mon Apr 11 21:53:50 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="7427947">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4148]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3199" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:53:50 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="7428194" />
  <Command __id="3197" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:53:50 EDT 2022" docASTNodeCount="135" docActiveCodeLength="1074" docExpressionCount="88" docLength="1108" projectName="A6" starttimestamp="1649721002230" timestamp="7427947">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3201" _type="PauseCommand" date="Mon Apr 11 21:53:56 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="7433951">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5757]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3202" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:53:56 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="7434121" />
  <Command __id="3200" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:53:56 EDT 2022" docASTNodeCount="1199" docActiveCodeLength="9152" docExpressionCount="846" docLength="10123" projectName="A6" starttimestamp="1649721002230" timestamp="7433951">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		aProposalNumber++;¶	}¶¶	@Override¶	public void connected(SocketChannel arg0) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3204" _type="PauseCommand" date="Mon Apr 11 21:54:10 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="7448301">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14180]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3203" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:54:10 EDT 2022" docASTNodeCount="135" docActiveCodeLength="1074" docExpressionCount="88" docLength="1108" projectName="A6" starttimestamp="1649721002230" timestamp="7448301">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3205" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 21:54:10 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="7448418" />
  <Command __id="3207" _type="MoveCaretCommand" caretOffset="2813" date="Mon Apr 11 21:54:11 EDT 2022" docOffset="2813" starttimestamp="1649721002230" timestamp="7449568" />
  <Command __id="3206" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:54:11 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2597" docExpressionCount="279" docLength="2813" projectName="A6" starttimestamp="1649721002230" timestamp="7449385">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="3209" _type="PauseCommand" date="Mon Apr 11 21:54:51 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="7489737">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[40169]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3210" _type="MoveCaretCommand" caretOffset="2541" date="Mon Apr 11 21:54:52 EDT 2022" docOffset="2541" starttimestamp="1649721002230" timestamp="7489811" />
  <Command __id="3212" _type="PauseCommand" date="Mon Apr 11 21:55:26 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="7524515">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[34704]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3211" _type="MoveCaretCommand" caretOffset="2255" date="Mon Apr 11 21:55:26 EDT 2022" docOffset="2255" starttimestamp="1649721002230" timestamp="7524515" />
  <Command __id="3213" _type="MoveCaretCommand" caretOffset="2255" date="Mon Apr 11 21:55:26 EDT 2022" docOffset="2255" starttimestamp="1649721002230" timestamp="7524515" />
  <Command __id="3208" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 21:54:51 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2543" projectName="A6" starttimestamp="1649721002230" timestamp="7489737">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3215" _type="PauseCommand" date="Mon Apr 11 21:55:27 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="7525688">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1173]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="3214" _type="Insert" date="Mon Apr 11 21:55:27 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2353" docExpressionCount="243" docLength="2545" length="2" offset="2255" repeat="2" starttimestamp="1649721002230" timestamp="7525688" timestamp2="7526446">
    <text><![CDATA[3\]]></text>
  </DocumentChange>
  <Command __id="3216" _type="InsertStringCommand" date="Mon Apr 11 21:55:27 EDT 2022" starttimestamp="1649721002230" timestamp="7525698" timestamp2="7525698">
    <data><![CDATA[3]]></data>
  </Command>
  <Command __id="3217" _type="InsertStringCommand" date="Mon Apr 11 21:55:27 EDT 2022" starttimestamp="1649721002230" timestamp="7525698" timestamp2="7525698">
    <data><![CDATA[3]]></data>
  </Command>
  <Command __id="3219" _type="InsertStringCommand" date="Mon Apr 11 21:55:28 EDT 2022" starttimestamp="1649721002230" timestamp="7526451" timestamp2="7526451">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="3220" _type="InsertStringCommand" date="Mon Apr 11 21:55:28 EDT 2022" starttimestamp="1649721002230" timestamp="7526451" timestamp2="7526451">
    <data><![CDATA[\]]></data>
  </Command>
  <DocumentChange __id="3221" _type="Delete" date="Mon Apr 11 21:55:29 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2543" endLine="54" length="2" offset="2255" repeat="2" startLine="54" starttimestamp="1649721002230" timestamp="7527047" timestamp2="7527218">
    <text><![CDATA[3\]]></text>
  </DocumentChange>
  <Command __id="3222" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:29 EDT 2022" starttimestamp="1649721002230" timestamp="7527050" />
  <Command __id="3223" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:29 EDT 2022" starttimestamp="1649721002230" timestamp="7527050" />
  <Command __id="3225" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:29 EDT 2022" starttimestamp="1649721002230" timestamp="7527221" />
  <Command __id="3226" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:29 EDT 2022" starttimestamp="1649721002230" timestamp="7527221" />
  <Command __id="3228" _type="InsertStringCommand" date="Mon Apr 11 21:55:30 EDT 2022" starttimestamp="1649721002230" timestamp="7527987" timestamp2="7527987">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3229" _type="InsertStringCommand" date="Mon Apr 11 21:55:30 EDT 2022" starttimestamp="1649721002230" timestamp="7527987" timestamp2="7527987">
    <data><![CDATA[/]]></data>
  </Command>
  <DocumentChange __id="3227" _type="Insert" date="Mon Apr 11 21:55:30 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2352" docExpressionCount="243" docLength="2544" length="1" offset="2255" starttimestamp="1649721002230" timestamp="7527981">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="3231" _type="PauseCommand" date="Mon Apr 11 21:55:33 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="7531369">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3382]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="3230" _type="Insert" date="Mon Apr 11 21:55:33 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2546" length="2" offset="2256" repeat="2" starttimestamp="1649721002230" timestamp="7531369" timestamp2="7531890">
    <text><![CDATA[/W]]></text>
  </DocumentChange>
  <Command __id="3232" _type="InsertStringCommand" date="Mon Apr 11 21:55:33 EDT 2022" starttimestamp="1649721002230" timestamp="7531388" timestamp2="7531388">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3233" _type="InsertStringCommand" date="Mon Apr 11 21:55:33 EDT 2022" starttimestamp="1649721002230" timestamp="7531388" timestamp2="7531388">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3235" _type="InsertStringCommand" date="Mon Apr 11 21:55:34 EDT 2022" starttimestamp="1649721002230" timestamp="7531898" timestamp2="7531898">
    <data><![CDATA[W]]></data>
  </Command>
  <Command __id="3236" _type="InsertStringCommand" date="Mon Apr 11 21:55:34 EDT 2022" starttimestamp="1649721002230" timestamp="7531899" timestamp2="7531899">
    <data><![CDATA[W]]></data>
  </Command>
  <DocumentChange __id="3237" _type="Delete" date="Mon Apr 11 21:55:34 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2545" endLine="54" length="1" offset="2257" startLine="54" starttimestamp="1649721002230" timestamp="7532602">
    <text><![CDATA[W]]></text>
  </DocumentChange>
  <Command __id="3238" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:34 EDT 2022" starttimestamp="1649721002230" timestamp="7532608" />
  <Command __id="3239" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:34 EDT 2022" starttimestamp="1649721002230" timestamp="7532608" />
  <Command __id="3241" _type="InsertStringCommand" date="Mon Apr 11 21:55:34 EDT 2022" starttimestamp="1649721002230" timestamp="7532762" timestamp2="7532762">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3242" _type="InsertStringCommand" date="Mon Apr 11 21:55:34 EDT 2022" starttimestamp="1649721002230" timestamp="7532762" timestamp2="7532762">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3244" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7532880" timestamp2="7532880">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3245" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7532880" timestamp2="7532880">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3247" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7533014" timestamp2="7533014">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="3248" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7533014" timestamp2="7533014">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="3250" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7533121" timestamp2="7533121">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3251" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7533121" timestamp2="7533121">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3253" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7533462" timestamp2="7533462">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3254" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7533462" timestamp2="7533462">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3256" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7533652" timestamp2="7533652">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3257" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7533652" timestamp2="7533652">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3259" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7533714" timestamp2="7533714">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3260" _type="InsertStringCommand" date="Mon Apr 11 21:55:35 EDT 2022" starttimestamp="1649721002230" timestamp="7533714" timestamp2="7533714">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3262" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7533879" timestamp2="7533879">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3263" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7533879" timestamp2="7533879">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3265" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7533988" timestamp2="7533988">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3266" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7533988" timestamp2="7533988">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3268" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7534085" timestamp2="7534085">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3269" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7534085" timestamp2="7534085">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3271" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7534229" timestamp2="7534229">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3272" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7534229" timestamp2="7534229">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3274" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7534264" timestamp2="7534264">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3275" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7534264" timestamp2="7534264">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3277" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7534388" timestamp2="7534388">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3278" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7534388" timestamp2="7534388">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3280" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7534644" timestamp2="7534644">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3281" _type="InsertStringCommand" date="Mon Apr 11 21:55:36 EDT 2022" starttimestamp="1649721002230" timestamp="7534644" timestamp2="7534644">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3283" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7534852" timestamp2="7534852">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3284" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7534852" timestamp2="7534852">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3286" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535050" timestamp2="7535050">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3287" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535050" timestamp2="7535050">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3289" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535188" timestamp2="7535188">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3290" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535188" timestamp2="7535188">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3292" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535315" timestamp2="7535315">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3293" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535315" timestamp2="7535315">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3295" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535417" timestamp2="7535417">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3296" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535417" timestamp2="7535417">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3298" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535502" timestamp2="7535502">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3299" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535502" timestamp2="7535502">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3301" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535589" timestamp2="7535589">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3302" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535589" timestamp2="7535589">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3304" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535704" timestamp2="7535704">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3305" _type="InsertStringCommand" date="Mon Apr 11 21:55:37 EDT 2022" starttimestamp="1649721002230" timestamp="7535704" timestamp2="7535704">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3307" _type="InsertStringCommand" date="Mon Apr 11 21:55:38 EDT 2022" starttimestamp="1649721002230" timestamp="7536032" timestamp2="7536032">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3308" _type="InsertStringCommand" date="Mon Apr 11 21:55:38 EDT 2022" starttimestamp="1649721002230" timestamp="7536032" timestamp2="7536032">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3310" _type="InsertStringCommand" date="Mon Apr 11 21:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="7536840" timestamp2="7536840">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3311" _type="InsertStringCommand" date="Mon Apr 11 21:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="7536840" timestamp2="7536840">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3313" _type="InsertStringCommand" date="Mon Apr 11 21:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="7536972" timestamp2="7536972">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3314" _type="InsertStringCommand" date="Mon Apr 11 21:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="7536973" timestamp2="7536973">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3316" _type="InsertStringCommand" date="Mon Apr 11 21:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="7537133" timestamp2="7537133">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="3317" _type="InsertStringCommand" date="Mon Apr 11 21:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="7537133" timestamp2="7537133">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="3319" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="7537502" />
  <Command __id="3320" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="7537502" />
  <Command __id="3322" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="7537672" />
  <Command __id="3323" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="7537672" />
  <Command __id="3325" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="7537849" />
  <Command __id="3326" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="7537849" />
  <Command __id="3328" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="7538045" />
  <Command __id="3329" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="7538045" />
  <Command __id="3331" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="7538220" />
  <Command __id="3332" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="7538220" />
  <Command __id="3334" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="7538399" />
  <Command __id="3335" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="7538400" />
  <Command __id="3337" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="7538561" />
  <Command __id="3338" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="7538561" />
  <Command __id="3340" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="7538934" />
  <Command __id="3341" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="7538934" />
  <Command __id="3343" _type="InsertStringCommand" date="Mon Apr 11 21:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="7539016" timestamp2="7539016">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3344" _type="InsertStringCommand" date="Mon Apr 11 21:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="7539016" timestamp2="7539016">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3346" _type="InsertStringCommand" date="Mon Apr 11 21:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="7539544" timestamp2="7539544">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3347" _type="InsertStringCommand" date="Mon Apr 11 21:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="7539544" timestamp2="7539544">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3349" _type="InsertStringCommand" date="Mon Apr 11 21:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="7539708" timestamp2="7539708">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3350" _type="InsertStringCommand" date="Mon Apr 11 21:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="7539708" timestamp2="7539708">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3352" _type="InsertStringCommand" date="Mon Apr 11 21:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="7539810" timestamp2="7539810">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3353" _type="InsertStringCommand" date="Mon Apr 11 21:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="7539810" timestamp2="7539810">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3355" _type="InsertStringCommand" date="Mon Apr 11 21:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="7539921" timestamp2="7539921">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="3356" _type="InsertStringCommand" date="Mon Apr 11 21:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="7539921" timestamp2="7539921">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="3358" _type="InsertStringCommand" date="Mon Apr 11 21:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="7540044" timestamp2="7540044">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3359" _type="InsertStringCommand" date="Mon Apr 11 21:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="7540044" timestamp2="7540044">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3361" _type="InsertStringCommand" date="Mon Apr 11 21:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="7540184" timestamp2="7540184">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3362" _type="InsertStringCommand" date="Mon Apr 11 21:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="7540184" timestamp2="7540184">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3364" _type="InsertStringCommand" date="Mon Apr 11 21:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="7540634" timestamp2="7540634">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3365" _type="InsertStringCommand" date="Mon Apr 11 21:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="7540634" timestamp2="7540634">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3367" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7540837" timestamp2="7540837">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3368" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7540837" timestamp2="7540837">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3370" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7540916" timestamp2="7540916">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3371" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7540916" timestamp2="7540916">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3373" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7541059" timestamp2="7541059">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3374" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7541059" timestamp2="7541059">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3376" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7541171" timestamp2="7541171">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3377" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7541171" timestamp2="7541171">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3379" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7541273" timestamp2="7541273">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3380" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7541273" timestamp2="7541273">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3382" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7541367" timestamp2="7541367">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3383" _type="InsertStringCommand" date="Mon Apr 11 21:55:43 EDT 2022" starttimestamp="1649721002230" timestamp="7541367" timestamp2="7541367">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3384" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:55:44 EDT 2022" starttimestamp="1649721002230" timestamp="7542095" />
  <Command __id="3385" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:55:44 EDT 2022" starttimestamp="1649721002230" timestamp="7542195" />
  <Command __id="3386" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:55:44 EDT 2022" starttimestamp="1649721002230" timestamp="7542225" />
  <Command __id="3388" _type="PauseCommand" date="Mon Apr 11 21:55:47 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="7545491">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3266]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3387" _type="MoveCaretCommand" caretOffset="2289" date="Mon Apr 11 21:55:47 EDT 2022" docOffset="2289" starttimestamp="1649721002230" timestamp="7545491" />
  <Command __id="3389" _type="MoveCaretCommand" caretOffset="2289" date="Mon Apr 11 21:55:47 EDT 2022" docOffset="2289" starttimestamp="1649721002230" timestamp="7545491" />
  <Command __id="3391" _type="PauseCommand" date="Mon Apr 11 21:55:58 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="7555949">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10458]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3390" _type="MoveCaretCommand" caretOffset="2563" date="Mon Apr 11 21:55:58 EDT 2022" docOffset="2563" starttimestamp="1649721002230" timestamp="7555949" />
  <Command __id="3392" _type="MoveCaretCommand" caretOffset="2563" date="Mon Apr 11 21:55:58 EDT 2022" docOffset="2563" starttimestamp="1649721002230" timestamp="7555950" />
  <Command __id="3394" _type="InsertStringCommand" date="Mon Apr 11 21:55:58 EDT 2022" starttimestamp="1649721002230" timestamp="7556544" timestamp2="7556544">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3395" _type="InsertStringCommand" date="Mon Apr 11 21:55:58 EDT 2022" starttimestamp="1649721002230" timestamp="7556544" timestamp2="7556544">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3397" _type="InsertStringCommand" date="Mon Apr 11 21:55:59 EDT 2022" starttimestamp="1649721002230" timestamp="7557132" timestamp2="7557132">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3398" _type="InsertStringCommand" date="Mon Apr 11 21:55:59 EDT 2022" starttimestamp="1649721002230" timestamp="7557132" timestamp2="7557132">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3400" _type="InsertStringCommand" date="Mon Apr 11 21:55:59 EDT 2022" starttimestamp="1649721002230" timestamp="7557247" timestamp2="7557247">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3401" _type="InsertStringCommand" date="Mon Apr 11 21:55:59 EDT 2022" starttimestamp="1649721002230" timestamp="7557247" timestamp2="7557247">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3403" _type="InsertStringCommand" date="Mon Apr 11 21:56:00 EDT 2022" starttimestamp="1649721002230" timestamp="7557961" timestamp2="7557961">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3404" _type="InsertStringCommand" date="Mon Apr 11 21:56:00 EDT 2022" starttimestamp="1649721002230" timestamp="7557961" timestamp2="7557961">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3406" _type="InsertStringCommand" date="Mon Apr 11 21:56:00 EDT 2022" starttimestamp="1649721002230" timestamp="7558122" timestamp2="7558122">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3407" _type="InsertStringCommand" date="Mon Apr 11 21:56:00 EDT 2022" starttimestamp="1649721002230" timestamp="7558122" timestamp2="7558122">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3409" _type="InsertStringCommand" date="Mon Apr 11 21:56:00 EDT 2022" starttimestamp="1649721002230" timestamp="7558263" timestamp2="7558263">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="3410" _type="InsertStringCommand" date="Mon Apr 11 21:56:00 EDT 2022" starttimestamp="1649721002230" timestamp="7558263" timestamp2="7558263">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="3412" _type="InsertStringCommand" date="Mon Apr 11 21:56:00 EDT 2022" starttimestamp="1649721002230" timestamp="7558384" timestamp2="7558384">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3413" _type="InsertStringCommand" date="Mon Apr 11 21:56:00 EDT 2022" starttimestamp="1649721002230" timestamp="7558384" timestamp2="7558384">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3415" _type="InsertStringCommand" date="Mon Apr 11 21:56:00 EDT 2022" starttimestamp="1649721002230" timestamp="7558730" timestamp2="7558730">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3416" _type="InsertStringCommand" date="Mon Apr 11 21:56:00 EDT 2022" starttimestamp="1649721002230" timestamp="7558730" timestamp2="7558730">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3418" _type="InsertStringCommand" date="Mon Apr 11 21:56:01 EDT 2022" starttimestamp="1649721002230" timestamp="7558867" timestamp2="7558867">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3419" _type="InsertStringCommand" date="Mon Apr 11 21:56:01 EDT 2022" starttimestamp="1649721002230" timestamp="7558867" timestamp2="7558867">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3421" _type="InsertStringCommand" date="Mon Apr 11 21:56:01 EDT 2022" starttimestamp="1649721002230" timestamp="7559306" timestamp2="7559306">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3422" _type="InsertStringCommand" date="Mon Apr 11 21:56:01 EDT 2022" starttimestamp="1649721002230" timestamp="7559306" timestamp2="7559306">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3424" _type="InsertStringCommand" date="Mon Apr 11 21:56:01 EDT 2022" starttimestamp="1649721002230" timestamp="7559456" timestamp2="7559456">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3425" _type="InsertStringCommand" date="Mon Apr 11 21:56:01 EDT 2022" starttimestamp="1649721002230" timestamp="7559456" timestamp2="7559456">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3427" _type="InsertStringCommand" date="Mon Apr 11 21:56:01 EDT 2022" starttimestamp="1649721002230" timestamp="7559575" timestamp2="7559575">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3428" _type="InsertStringCommand" date="Mon Apr 11 21:56:01 EDT 2022" starttimestamp="1649721002230" timestamp="7559576" timestamp2="7559576">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3430" _type="InsertStringCommand" date="Mon Apr 11 21:56:01 EDT 2022" starttimestamp="1649721002230" timestamp="7559729" timestamp2="7559729">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3431" _type="InsertStringCommand" date="Mon Apr 11 21:56:01 EDT 2022" starttimestamp="1649721002230" timestamp="7559729" timestamp2="7559729">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3433" _type="InsertStringCommand" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7559856" timestamp2="7559856">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3434" _type="InsertStringCommand" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7559856" timestamp2="7559856">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3436" _type="InsertStringCommand" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7559939" timestamp2="7559939">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3437" _type="InsertStringCommand" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7559939" timestamp2="7559939">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3439" _type="InsertStringCommand" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7560124" timestamp2="7560124">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3440" _type="InsertStringCommand" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7560124" timestamp2="7560124">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3442" _type="InsertStringCommand" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7560293" timestamp2="7560293">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3443" _type="InsertStringCommand" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7560293" timestamp2="7560293">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3445" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7560586" />
  <Command __id="3446" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7560586" />
  <Command __id="3448" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7560742" />
  <Command __id="3449" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 21:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="7560742" />
  <Command __id="3451" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7560920" timestamp2="7560920">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3452" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7560920" timestamp2="7560920">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3454" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561034" timestamp2="7561034">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3455" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561034" timestamp2="7561034">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3457" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561158" timestamp2="7561158">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3458" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561158" timestamp2="7561158">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3460" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561220" timestamp2="7561220">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3461" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561220" timestamp2="7561220">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3463" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561486" timestamp2="7561486">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3464" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561486" timestamp2="7561486">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3466" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561650" timestamp2="7561650">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3467" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561650" timestamp2="7561650">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3469" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561765" timestamp2="7561765">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3470" _type="InsertStringCommand" date="Mon Apr 11 21:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="7561765" timestamp2="7561765">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3472" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7561884" timestamp2="7561884">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3473" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7561884" timestamp2="7561884">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3475" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562053" timestamp2="7562053">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3476" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562053" timestamp2="7562053">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3478" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562260" timestamp2="7562260">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3479" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562260" timestamp2="7562260">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3481" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562450" timestamp2="7562450">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3482" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562450" timestamp2="7562450">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3484" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562542" timestamp2="7562542">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3485" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562542" timestamp2="7562542">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3487" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562661" timestamp2="7562661">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3488" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562661" timestamp2="7562661">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3490" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562769" timestamp2="7562769">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3491" _type="InsertStringCommand" date="Mon Apr 11 21:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="7562769" timestamp2="7562769">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3493" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7562863" timestamp2="7562863">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3494" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7562863" timestamp2="7562863">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3496" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7562946" timestamp2="7562946">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3497" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7562946" timestamp2="7562946">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3499" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563048" timestamp2="7563048">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3500" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563048" timestamp2="7563048">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3502" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563192" timestamp2="7563192">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3503" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563192" timestamp2="7563192">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3505" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563385" timestamp2="7563385">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3506" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563385" timestamp2="7563385">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3508" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563478" timestamp2="7563478">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="3509" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563478" timestamp2="7563478">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="3511" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563561" timestamp2="7563561">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3512" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563561" timestamp2="7563561">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3514" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563638" timestamp2="7563638">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3515" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563638" timestamp2="7563638">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3517" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563738" timestamp2="7563738">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3518" _type="InsertStringCommand" date="Mon Apr 11 21:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="7563738" timestamp2="7563738">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3520" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7563847" timestamp2="7563847">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3521" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7563847" timestamp2="7563847">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3523" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7563864" timestamp2="7563864">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3524" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7563864" timestamp2="7563864">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3526" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564001" timestamp2="7564001">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3527" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564001" timestamp2="7564001">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3529" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564082" timestamp2="7564082">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3530" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564082" timestamp2="7564082">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3532" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564181" timestamp2="7564181">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3533" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564181" timestamp2="7564181">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3535" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564305" timestamp2="7564305">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3536" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564305" timestamp2="7564305">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3538" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564409" timestamp2="7564409">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3539" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564409" timestamp2="7564409">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3541" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564550" timestamp2="7564550">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3542" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564550" timestamp2="7564550">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3544" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564669" timestamp2="7564669">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3545" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564669" timestamp2="7564669">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3547" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564686" timestamp2="7564686">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3548" _type="InsertStringCommand" date="Mon Apr 11 21:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="7564686" timestamp2="7564686">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="3240" _type="Insert" date="Mon Apr 11 21:55:34 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2571" length="26" offset="2257" repeat="26" starttimestamp="1649721002230" timestamp="7532753" timestamp2="7537127">
    <text><![CDATA[TODO want to save the Sock]]></text>
  </DocumentChange>
  <DocumentChange __id="3318" _type="Delete" date="Mon Apr 11 21:55:39 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2563" endLine="54" length="8" offset="2275" repeat="8" startLine="54" starttimestamp="1649721002230" timestamp="7537497" timestamp2="7538929">
    <text><![CDATA[the Sock]]></text>
  </DocumentChange>
  <DocumentChange __id="3342" _type="Insert" date="Mon Apr 11 21:55:41 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2351" docExpressionCount="243" docLength="2577" length="14" offset="2275" repeat="14" starttimestamp="1649721002230" timestamp="7539011" timestamp2="7541362">
    <text><![CDATA[aSocketChannel]]></text>
  </DocumentChange>
  <DocumentChange __id="3393" _type="Insert" date="Mon Apr 11 21:55:58 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2355" docExpressionCount="243" docLength="2597" length="20" offset="2563" repeat="17" starttimestamp="1649721002230" timestamp="7556534" timestamp2="7560286">
    <text><![CDATA[
		//TODO echo th m]]></text>
  </DocumentChange>
  <DocumentChange __id="3444" _type="Delete" date="Mon Apr 11 21:56:02 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2355" docExpressionCount="243" docLength="2595" endLine="62" length="2" offset="2581" repeat="2" startLine="62" starttimestamp="1649721002230" timestamp="7560584" timestamp2="7560739">
    <text><![CDATA[ m]]></text>
  </DocumentChange>
  <DocumentChange __id="3450" _type="Insert" date="Mon Apr 11 21:56:03 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2355" docExpressionCount="243" docLength="2628" length="33" offset="2581" repeat="33" starttimestamp="1649721002230" timestamp="7560910" timestamp2="7564681">
    <text><![CDATA[e message right back to the same ]]></text>
  </DocumentChange>
  <Command __id="3550" _type="PauseCommand" date="Mon Apr 11 21:56:19 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="7576883">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[12197]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3551" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7576897" timestamp2="7576897">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3552" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7576897" timestamp2="7576897">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3554" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7577006" timestamp2="7577006">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3555" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7577006" timestamp2="7577006">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3557" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7577063" timestamp2="7577063">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3558" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7577063" timestamp2="7577063">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3560" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7577220" timestamp2="7577220">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3561" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7577220" timestamp2="7577220">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3563" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7577358" timestamp2="7577358">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3564" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7577358" timestamp2="7577358">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3566" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7577454" timestamp2="7577454">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3567" _type="InsertStringCommand" date="Mon Apr 11 21:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="7577454" timestamp2="7577454">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3568" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 21:56:20 EDT 2022" starttimestamp="1649721002230" timestamp="7577971" />
  <Command __id="3569" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:56:20 EDT 2022" starttimestamp="1649721002230" timestamp="7578060" />
  <Command __id="3570" _type="EclipseCommand" commandID="" date="Mon Apr 11 21:56:20 EDT 2022" starttimestamp="1649721002230" timestamp="7578086" />
  <DocumentChange __id="3549" _type="Insert" date="Mon Apr 11 21:56:19 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2355" docExpressionCount="243" docLength="2634" length="6" offset="2614" repeat="6" starttimestamp="1649721002230" timestamp="7576883" timestamp2="7577447">
    <text><![CDATA[client]]></text>
  </DocumentChange>
  <Command __id="3572" _type="PauseCommand" date="Mon Apr 11 22:01:33 EDT 2022" range="5m-10m" starttimestamp="1649721002230" timestamp="7890872">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[312786]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3573" _type="MoveCaretCommand" caretOffset="2813" date="Mon Apr 11 22:01:33 EDT 2022" docOffset="2813" starttimestamp="1649721002230" timestamp="7890960" />
  <Command __id="3575" _type="PauseCommand" date="Mon Apr 11 22:01:39 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="7896909">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5949]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3574" _type="SelectTextCommand" caretOffset="1991" date="Mon Apr 11 22:01:39 EDT 2022" end="2049" start="1991" starttimestamp="1649721002230" timestamp="7896909" />
  <Command __id="3576" _type="SelectTextCommand" caretOffset="1991" date="Mon Apr 11 22:01:39 EDT 2022" end="2049" start="1991" starttimestamp="1649721002230" timestamp="7896909" />
  <Command __id="3577" _type="MoveCaretCommand" caretOffset="2044" date="Mon Apr 11 22:01:40 EDT 2022" docOffset="2044" starttimestamp="1649721002230" timestamp="7897791" />
  <Command __id="3578" _type="MoveCaretCommand" caretOffset="2044" date="Mon Apr 11 22:01:40 EDT 2022" docOffset="2044" starttimestamp="1649721002230" timestamp="7897791" />
  <Command __id="3580" _type="PauseCommand" date="Mon Apr 11 22:01:42 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="7899816">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2025]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3579" _type="SelectTextCommand" caretOffset="1991" date="Mon Apr 11 22:01:42 EDT 2022" end="2044" start="1991" starttimestamp="1649721002230" timestamp="7899816" />
  <Command __id="3581" _type="SelectTextCommand" caretOffset="1991" date="Mon Apr 11 22:01:42 EDT 2022" end="2044" start="1991" starttimestamp="1649721002230" timestamp="7899816" />
  <Command __id="3582" _type="CopyCommand" date="Mon Apr 11 22:01:42 EDT 2022" starttimestamp="1649721002230" timestamp="7900574" />
  <Command __id="3571" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:01:33 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2597" docExpressionCount="279" docLength="2813" projectName="A6" starttimestamp="1649721002230" timestamp="7890872">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="3584" _type="PauseCommand" date="Mon Apr 11 22:01:51 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="7909042">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[8468]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3585" _type="MoveCaretCommand" caretOffset="2620" date="Mon Apr 11 22:01:51 EDT 2022" docOffset="2620" starttimestamp="1649721002230" timestamp="7909139" />
  <Command __id="3583" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:01:51 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2355" docExpressionCount="243" docLength="2634" projectName="A6" starttimestamp="1649721002230" timestamp="7909042">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		"), Diff(INSERT,"//TODO want to save aSocketChannel"), Diff(EQUAL,"¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶	"), Diff(INSERT,"	//TODO echo the message right back to the same client¶	"), Diff(EQUAL,"}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;


import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}
//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}
	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		
			nioManager.enableListenableAccepts(aServerFactoryChannel,
					SelectionKey.OP_READ, // allow incoming writes that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}		
	}
	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		//TODO want to save aSocketChannel
	}
	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);
		
		//TODO echo the message right back to the same client
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="3587" _type="PauseCommand" date="Mon Apr 11 22:02:14 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="7932454">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23315]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3588" _type="InsertStringCommand" date="Mon Apr 11 22:02:14 EDT 2022" starttimestamp="1649721002230" timestamp="7932476" timestamp2="7932476">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3589" _type="InsertStringCommand" date="Mon Apr 11 22:02:14 EDT 2022" starttimestamp="1649721002230" timestamp="7932476" timestamp2="7932476">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3591" _type="InsertStringCommand" date="Mon Apr 11 22:02:15 EDT 2022" starttimestamp="1649721002230" timestamp="7933364" timestamp2="7933364">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3592" _type="InsertStringCommand" date="Mon Apr 11 22:02:15 EDT 2022" starttimestamp="1649721002230" timestamp="7933364" timestamp2="7933364">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3594" _type="InsertStringCommand" date="Mon Apr 11 22:02:15 EDT 2022" starttimestamp="1649721002230" timestamp="7933518" timestamp2="7933518">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3595" _type="InsertStringCommand" date="Mon Apr 11 22:02:15 EDT 2022" starttimestamp="1649721002230" timestamp="7933518" timestamp2="7933518">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3597" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7933975" timestamp2="7933975">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3598" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7933975" timestamp2="7933975">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3600" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934174" timestamp2="7934174">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3601" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934174" timestamp2="7934174">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3603" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934246" timestamp2="7934246">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3604" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934246" timestamp2="7934246">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3606" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934384" timestamp2="7934384">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3607" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934384" timestamp2="7934384">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3609" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934472" timestamp2="7934472">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3610" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934472" timestamp2="7934472">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3612" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934526" timestamp2="7934526">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3613" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934526" timestamp2="7934526">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3615" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934673" timestamp2="7934673">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3616" _type="InsertStringCommand" date="Mon Apr 11 22:02:16 EDT 2022" starttimestamp="1649721002230" timestamp="7934673" timestamp2="7934673">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3618" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7934798" timestamp2="7934798">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3619" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7934798" timestamp2="7934798">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3621" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7934931" timestamp2="7934931">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3622" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7934931" timestamp2="7934931">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3624" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7934999" timestamp2="7934999">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3625" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7934999" timestamp2="7934999">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3627" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7935135" timestamp2="7935135">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3628" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7935136" timestamp2="7935136">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3630" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7935235" timestamp2="7935235">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3631" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7935235" timestamp2="7935235">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3633" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7935757" timestamp2="7935757">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3634" _type="InsertStringCommand" date="Mon Apr 11 22:02:17 EDT 2022" starttimestamp="1649721002230" timestamp="7935757" timestamp2="7935757">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3636" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7935849" timestamp2="7935849">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3637" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7935849" timestamp2="7935849">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3639" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7935955" timestamp2="7935955">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3640" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7935955" timestamp2="7935955">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3642" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7936190" timestamp2="7936190">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3643" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7936190" timestamp2="7936190">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3645" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7936339" timestamp2="7936339">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3646" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7936339" timestamp2="7936339">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3648" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7936449" timestamp2="7936449">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3649" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7936449" timestamp2="7936449">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3651" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7936633" timestamp2="7936633">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3652" _type="InsertStringCommand" date="Mon Apr 11 22:02:18 EDT 2022" starttimestamp="1649721002230" timestamp="7936633" timestamp2="7936633">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3654" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7936969" timestamp2="7936969">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3655" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7936969" timestamp2="7936969">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3657" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937098" timestamp2="7937098">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3658" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937098" timestamp2="7937098">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3660" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937161" timestamp2="7937161">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3661" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937161" timestamp2="7937161">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3663" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937259" timestamp2="7937259">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3664" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937259" timestamp2="7937259">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3666" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937485" timestamp2="7937485">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3667" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937485" timestamp2="7937485">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3669" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937546" timestamp2="7937546">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3670" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937546" timestamp2="7937546">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3672" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937638" timestamp2="7937638">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3673" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937638" timestamp2="7937638">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3675" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937750" timestamp2="7937750">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3676" _type="InsertStringCommand" date="Mon Apr 11 22:02:19 EDT 2022" starttimestamp="1649721002230" timestamp="7937750" timestamp2="7937750">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3678" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7937861" timestamp2="7937861">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3679" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7937861" timestamp2="7937861">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3681" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7937931" timestamp2="7937931">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3682" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7937931" timestamp2="7937931">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3684" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938081" timestamp2="7938081">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3685" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938081" timestamp2="7938081">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3687" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938231" timestamp2="7938231">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3688" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938231" timestamp2="7938231">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3690" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938400" timestamp2="7938400">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3691" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938400" timestamp2="7938400">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3693" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938516" timestamp2="7938516">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3694" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938516" timestamp2="7938516">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3696" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938593" timestamp2="7938593">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3697" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938593" timestamp2="7938593">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3699" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938720" timestamp2="7938720">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="3700" _type="InsertStringCommand" date="Mon Apr 11 22:02:20 EDT 2022" starttimestamp="1649721002230" timestamp="7938720" timestamp2="7938720">
    <data><![CDATA[y]]></data>
  </Command>
  <DocumentChange __id="3586" _type="Insert" date="Mon Apr 11 22:02:14 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2359" docExpressionCount="243" docLength="2675" length="41" offset="2620" repeat="38" starttimestamp="1649721002230" timestamp="7932454" timestamp2="7938714">
    <text><![CDATA[
		//Turn of the servers reading ability]]></text>
  </DocumentChange>
  <Command __id="3702" _type="PauseCommand" date="Mon Apr 11 22:02:26 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="7943852">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5132]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3703" _type="InsertStringCommand" date="Mon Apr 11 22:02:26 EDT 2022" starttimestamp="1649721002230" timestamp="7943870" timestamp2="7943870">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3704" _type="InsertStringCommand" date="Mon Apr 11 22:02:26 EDT 2022" starttimestamp="1649721002230" timestamp="7943870" timestamp2="7943870">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3706" _type="InsertStringCommand" date="Mon Apr 11 22:02:26 EDT 2022" starttimestamp="1649721002230" timestamp="7944077" timestamp2="7944077">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3707" _type="InsertStringCommand" date="Mon Apr 11 22:02:26 EDT 2022" starttimestamp="1649721002230" timestamp="7944077" timestamp2="7944077">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3709" _type="InsertStringCommand" date="Mon Apr 11 22:02:26 EDT 2022" starttimestamp="1649721002230" timestamp="7944595" timestamp2="7944595">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3710" _type="InsertStringCommand" date="Mon Apr 11 22:02:26 EDT 2022" starttimestamp="1649721002230" timestamp="7944595" timestamp2="7944595">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3712" _type="InsertStringCommand" date="Mon Apr 11 22:02:26 EDT 2022" starttimestamp="1649721002230" timestamp="7944741" timestamp2="7944741">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3713" _type="InsertStringCommand" date="Mon Apr 11 22:02:26 EDT 2022" starttimestamp="1649721002230" timestamp="7944741" timestamp2="7944741">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3715" _type="InsertStringCommand" date="Mon Apr 11 22:02:27 EDT 2022" starttimestamp="1649721002230" timestamp="7945425" timestamp2="7945425">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3716" _type="InsertStringCommand" date="Mon Apr 11 22:02:27 EDT 2022" starttimestamp="1649721002230" timestamp="7945425" timestamp2="7945425">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3718" _type="InsertStringCommand" date="Mon Apr 11 22:02:27 EDT 2022" starttimestamp="1649721002230" timestamp="7945562" timestamp2="7945562">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3719" _type="InsertStringCommand" date="Mon Apr 11 22:02:27 EDT 2022" starttimestamp="1649721002230" timestamp="7945562" timestamp2="7945562">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3721" _type="InsertStringCommand" date="Mon Apr 11 22:02:27 EDT 2022" starttimestamp="1649721002230" timestamp="7945694" timestamp2="7945694">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3722" _type="InsertStringCommand" date="Mon Apr 11 22:02:27 EDT 2022" starttimestamp="1649721002230" timestamp="7945694" timestamp2="7945694">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3724" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7945799" timestamp2="7945799">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3725" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7945799" timestamp2="7945799">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3727" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7945890" timestamp2="7945890">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3728" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7945890" timestamp2="7945890">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3730" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946016" timestamp2="7946016">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3731" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946016" timestamp2="7946016">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3733" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946088" timestamp2="7946088">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3734" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946088" timestamp2="7946088">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3736" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946186" timestamp2="7946186">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3737" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946186" timestamp2="7946186">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3739" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946306" timestamp2="7946306">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3740" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946306" timestamp2="7946306">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3742" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946397" timestamp2="7946397">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3743" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946398" timestamp2="7946398">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3745" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946468" timestamp2="7946468">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3746" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946468" timestamp2="7946468">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3748" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946588" timestamp2="7946588">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3749" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946588" timestamp2="7946588">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3751" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946708" timestamp2="7946708">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3752" _type="InsertStringCommand" date="Mon Apr 11 22:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="7946708" timestamp2="7946708">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3754" _type="InsertStringCommand" date="Mon Apr 11 22:02:29 EDT 2022" starttimestamp="1649721002230" timestamp="7946772" timestamp2="7946772">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3755" _type="InsertStringCommand" date="Mon Apr 11 22:02:29 EDT 2022" starttimestamp="1649721002230" timestamp="7946772" timestamp2="7946772">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3757" _type="InsertStringCommand" date="Mon Apr 11 22:02:29 EDT 2022" starttimestamp="1649721002230" timestamp="7946825" timestamp2="7946825">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3758" _type="InsertStringCommand" date="Mon Apr 11 22:02:29 EDT 2022" starttimestamp="1649721002230" timestamp="7946825" timestamp2="7946825">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3760" _type="InsertStringCommand" date="Mon Apr 11 22:02:29 EDT 2022" starttimestamp="1649721002230" timestamp="7946951" timestamp2="7946951">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3761" _type="InsertStringCommand" date="Mon Apr 11 22:02:29 EDT 2022" starttimestamp="1649721002230" timestamp="7946951" timestamp2="7946951">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3763" _type="InsertStringCommand" date="Mon Apr 11 22:02:29 EDT 2022" starttimestamp="1649721002230" timestamp="7947060" timestamp2="7947060">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3764" _type="InsertStringCommand" date="Mon Apr 11 22:02:29 EDT 2022" starttimestamp="1649721002230" timestamp="7947060" timestamp2="7947060">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3766" _type="InsertStringCommand" date="Mon Apr 11 22:02:29 EDT 2022" starttimestamp="1649721002230" timestamp="7947172" timestamp2="7947172">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3767" _type="InsertStringCommand" date="Mon Apr 11 22:02:29 EDT 2022" starttimestamp="1649721002230" timestamp="7947172" timestamp2="7947172">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3769" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7947845" timestamp2="7947845">
    <data><![CDATA[']]></data>
  </Command>
  <Command __id="3770" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7947845" timestamp2="7947845">
    <data><![CDATA[']]></data>
  </Command>
  <Command __id="3772" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948019" timestamp2="7948019">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3773" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948019" timestamp2="7948019">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3775" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948190" timestamp2="7948190">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3776" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948191" timestamp2="7948191">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3778" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948337" timestamp2="7948337">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3779" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948337" timestamp2="7948337">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3781" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948413" timestamp2="7948413">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3782" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948413" timestamp2="7948413">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3784" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948536" timestamp2="7948536">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3785" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948536" timestamp2="7948536">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3787" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948729" timestamp2="7948729">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3788" _type="InsertStringCommand" date="Mon Apr 11 22:02:30 EDT 2022" starttimestamp="1649721002230" timestamp="7948729" timestamp2="7948729">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3790" _type="InsertStringCommand" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7948785" timestamp2="7948785">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3791" _type="InsertStringCommand" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7948785" timestamp2="7948785">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3793" _type="InsertStringCommand" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7948893" timestamp2="7948893">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3794" _type="InsertStringCommand" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7948893" timestamp2="7948893">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3796" _type="InsertStringCommand" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7948967" timestamp2="7948967">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3797" _type="InsertStringCommand" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7948967" timestamp2="7948967">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3799" _type="InsertStringCommand" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7949119" timestamp2="7949119">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3800" _type="InsertStringCommand" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7949119" timestamp2="7949119">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3802" _type="InsertStringCommand" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7949129" timestamp2="7949129">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3803" _type="InsertStringCommand" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7949129" timestamp2="7949129">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3805" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7949662" />
  <Command __id="3806" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:02:31 EDT 2022" starttimestamp="1649721002230" timestamp="7949662" />
  <Command __id="3808" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:02:32 EDT 2022" starttimestamp="1649721002230" timestamp="7949823" />
  <Command __id="3809" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:02:32 EDT 2022" starttimestamp="1649721002230" timestamp="7949823" />
  <Command __id="3811" _type="InsertStringCommand" date="Mon Apr 11 22:02:32 EDT 2022" starttimestamp="1649721002230" timestamp="7950117" timestamp2="7950117">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3812" _type="InsertStringCommand" date="Mon Apr 11 22:02:32 EDT 2022" starttimestamp="1649721002230" timestamp="7950118" timestamp2="7950118">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3814" _type="InsertStringCommand" date="Mon Apr 11 22:02:32 EDT 2022" starttimestamp="1649721002230" timestamp="7950213" timestamp2="7950213">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3815" _type="InsertStringCommand" date="Mon Apr 11 22:02:32 EDT 2022" starttimestamp="1649721002230" timestamp="7950213" timestamp2="7950213">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3817" _type="InsertStringCommand" date="Mon Apr 11 22:02:32 EDT 2022" starttimestamp="1649721002230" timestamp="7950547" timestamp2="7950547">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3818" _type="InsertStringCommand" date="Mon Apr 11 22:02:32 EDT 2022" starttimestamp="1649721002230" timestamp="7950547" timestamp2="7950547">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3820" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951017" />
  <Command __id="3821" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951017" />
  <Command __id="3823" _type="InsertStringCommand" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951113" timestamp2="7951113">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3824" _type="InsertStringCommand" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951113" timestamp2="7951113">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3826" _type="InsertStringCommand" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951228" timestamp2="7951228">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3827" _type="InsertStringCommand" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951228" timestamp2="7951228">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3829" _type="InsertStringCommand" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951385" timestamp2="7951385">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3830" _type="InsertStringCommand" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951385" timestamp2="7951385">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3832" _type="InsertStringCommand" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951533" timestamp2="7951533">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3833" _type="InsertStringCommand" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951533" timestamp2="7951533">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3835" _type="InsertStringCommand" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951691" timestamp2="7951691">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3836" _type="InsertStringCommand" date="Mon Apr 11 22:02:33 EDT 2022" starttimestamp="1649721002230" timestamp="7951691" timestamp2="7951691">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3838" _type="InsertStringCommand" date="Mon Apr 11 22:02:34 EDT 2022" starttimestamp="1649721002230" timestamp="7951810" timestamp2="7951810">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="3839" _type="InsertStringCommand" date="Mon Apr 11 22:02:34 EDT 2022" starttimestamp="1649721002230" timestamp="7951810" timestamp2="7951810">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="3841" _type="PauseCommand" date="Mon Apr 11 22:02:39 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="7957299">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5489]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3840" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Apr 11 22:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="7957299" />
  <Command __id="3842" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Apr 11 22:02:39 EDT 2022" starttimestamp="1649721002230" timestamp="7957299" />
  <DocumentChange __id="3701" _type="Insert" date="Mon Apr 11 22:02:26 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2715" length="40" offset="2661" repeat="34" starttimestamp="1649721002230" timestamp="7943852" timestamp2="7949125">
    <text><![CDATA[
		
		//turn on the client's readinga ]]></text>
  </DocumentChange>
  <DocumentChange __id="3804" _type="Delete" date="Mon Apr 11 22:02:31 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2713" endLine="65" length="2" offset="2699" repeat="2" startLine="65" starttimestamp="1649721002230" timestamp="7949659" timestamp2="7949821">
    <text><![CDATA[a ]]></text>
  </DocumentChange>
  <DocumentChange __id="3810" _type="Insert" date="Mon Apr 11 22:02:32 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2716" length="3" offset="2699" repeat="3" starttimestamp="1649721002230" timestamp="7950111" timestamp2="7950543">
    <text><![CDATA[ ai]]></text>
  </DocumentChange>
  <DocumentChange __id="3819" _type="Delete" date="Mon Apr 11 22:02:33 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2715" endLine="65" length="1" offset="2701" startLine="65" starttimestamp="1649721002230" timestamp="7951013">
    <text><![CDATA[i]]></text>
  </DocumentChange>
  <DocumentChange __id="3822" _type="Insert" date="Mon Apr 11 22:02:33 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2721" length="6" offset="2701" repeat="6" starttimestamp="1649721002230" timestamp="7951108" timestamp2="7951804">
    <text><![CDATA[bility]]></text>
  </DocumentChange>
  <Command __id="3844" _type="PauseCommand" date="Mon Apr 11 22:02:40 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="7958312">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1012]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3845" _type="InsertStringCommand" date="Mon Apr 11 22:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="7958318" timestamp2="7958318">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3846" _type="InsertStringCommand" date="Mon Apr 11 22:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="7958318" timestamp2="7958318">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3848" _type="InsertStringCommand" date="Mon Apr 11 22:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="7958454" timestamp2="7958454">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3849" _type="InsertStringCommand" date="Mon Apr 11 22:02:40 EDT 2022" starttimestamp="1649721002230" timestamp="7958454" timestamp2="7958454">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3852" _type="PauseCommand" date="Mon Apr 11 22:02:42 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="7959891">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1437]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3851" _type="InsertStringCommand" date="Mon Apr 11 22:02:42 EDT 2022" starttimestamp="1649721002230" timestamp="7959891" timestamp2="7959891">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3853" _type="InsertStringCommand" date="Mon Apr 11 22:02:42 EDT 2022" starttimestamp="1649721002230" timestamp="7959892" timestamp2="7959892">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3855" _type="InsertStringCommand" date="Mon Apr 11 22:02:42 EDT 2022" starttimestamp="1649721002230" timestamp="7960003" timestamp2="7960003">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3856" _type="InsertStringCommand" date="Mon Apr 11 22:02:42 EDT 2022" starttimestamp="1649721002230" timestamp="7960003" timestamp2="7960003">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="3843" _type="Insert" date="Mon Apr 11 22:02:40 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2725" length="4" offset="2665" repeat="4" starttimestamp="1649721002230" timestamp="7958311" timestamp2="7959997">
    <text><![CDATA[//se]]></text>
  </DocumentChange>
  <Command __id="3858" _type="PauseCommand" date="Mon Apr 11 22:02:43 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="7961265">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1262]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="3857" _type="Delete" date="Mon Apr 11 22:02:43 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2723" endLine="64" length="2" offset="2667" repeat="2" startLine="64" starttimestamp="1649721002230" timestamp="7961265" timestamp2="7961390">
    <text><![CDATA[se]]></text>
  </DocumentChange>
  <Command __id="3859" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:02:43 EDT 2022" starttimestamp="1649721002230" timestamp="7961269" />
  <Command __id="3860" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:02:43 EDT 2022" starttimestamp="1649721002230" timestamp="7961269" />
  <Command __id="3862" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:02:43 EDT 2022" starttimestamp="1649721002230" timestamp="7961392" />
  <Command __id="3863" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:02:43 EDT 2022" starttimestamp="1649721002230" timestamp="7961392" />
  <Command __id="3865" _type="PasteCommand" date="Mon Apr 11 22:02:43 EDT 2022" starttimestamp="1649721002230" timestamp="7961669" />
  <Command __id="3867" _type="PauseCommand" date="Mon Apr 11 22:02:46 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="7963817">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2148]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3866" _type="MoveCaretCommand" caretOffset="2762" date="Mon Apr 11 22:02:46 EDT 2022" docOffset="2762" starttimestamp="1649721002230" timestamp="7963817" />
  <Command __id="3868" _type="MoveCaretCommand" caretOffset="2762" date="Mon Apr 11 22:02:46 EDT 2022" docOffset="2762" starttimestamp="1649721002230" timestamp="7963817" />
  <Command __id="3870" _type="PauseCommand" date="Mon Apr 11 22:07:55 EDT 2022" range="5m-10m" starttimestamp="1649721002230" timestamp="8273514">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[309697]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3869" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:07:55 EDT 2022" starttimestamp="1649721002230" timestamp="8273514" />
  <Command __id="3871" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:07:55 EDT 2022" starttimestamp="1649721002230" timestamp="8273601" />
  <Command __id="3872" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:07:55 EDT 2022" starttimestamp="1649721002230" timestamp="8273635" />
  <DocumentChange __id="3864" _type="Insert" date="Mon Apr 11 22:02:43 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2776" length="53" offset="2667" starttimestamp="1649721002230" timestamp="7961664">
    <text><![CDATA[nioManager.write(socketChannel, aWriteMessage, this);]]></text>
  </DocumentChange>
  <Command __id="3874" _type="PauseCommand" date="Mon Apr 11 22:08:09 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="8286926">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[13291]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3875" _type="SelectTextCommand" caretOffset="1991" date="Mon Apr 11 22:08:09 EDT 2022" end="2044" start="1991" starttimestamp="1649721002230" timestamp="8287111" />
  <Command __id="3873" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:08:09 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2597" docExpressionCount="279" docLength="2813" projectName="A6" starttimestamp="1649721002230" timestamp="8286926">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="3877" _type="PauseCommand" date="Mon Apr 11 22:08:18 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="8296471">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[9360]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3878" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 22:08:18 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="8296667" />
  <Command __id="3880" _type="PauseCommand" date="Mon Apr 11 22:08:47 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="8324950">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[28283]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3879" _type="ShellCommand" date="Mon Apr 11 22:08:47 EDT 2022" starttimestamp="1649721002230" timestamp="8324950" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3882" _type="PauseCommand" date="Mon Apr 11 22:10:21 EDT 2022" range="1m-2m" starttimestamp="1649721002230" timestamp="8419576">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[94626]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3881" _type="ShellCommand" date="Mon Apr 11 22:10:21 EDT 2022" starttimestamp="1649721002230" timestamp="8419576" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3884" _type="SelectTextCommand" caretOffset="1991" date="Mon Apr 11 22:10:21 EDT 2022" end="2044" start="1991" starttimestamp="1649721002230" timestamp="8419751" />
  <Command __id="3886" _type="PauseCommand" date="Mon Apr 11 22:10:37 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="8435687">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[15936]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3885" _type="ShellCommand" date="Mon Apr 11 22:10:37 EDT 2022" starttimestamp="1649721002230" timestamp="8435687" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3888" _type="PauseCommand" date="Mon Apr 11 22:16:02 EDT 2022" range="5m-10m" starttimestamp="1649721002230" timestamp="8760225">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[324538]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3887" _type="ShellCommand" date="Mon Apr 11 22:16:02 EDT 2022" starttimestamp="1649721002230" timestamp="8760225" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3890" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 22:16:02 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="8760667" />
  <Command __id="3876" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:08:18 EDT 2022" docASTNodeCount="30" docActiveCodeLength="269" docExpressionCount="22" docLength="269" projectName="A6" starttimestamp="1649721002230" timestamp="8296471">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\NIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶"), Diff(DELETE,"public class NIOManagerPrintServ"), Diff(INSERT,"import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶¶public interface NIOManagerPrintServer extends SocketChannelAcceptListener, SocketChannelReadListen"), Diff(EQUAL,"er {¶¶}"), Diff(DELETE,"¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;

public interface NIOManagerPrintServer extends SocketChannelAcceptListener, SocketChannelReadListener {

}]]></snapshot>
  </Command>
  <Command __id="3883" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:10:21 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2597" docExpressionCount="279" docLength="2813" projectName="A6" starttimestamp="1649721002230" timestamp="8419659">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="3889" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:16:02 EDT 2022" docASTNodeCount="135" docActiveCodeLength="1074" docExpressionCount="88" docLength="1108" projectName="A6" starttimestamp="1649721002230" timestamp="8760490">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends SocketChannelConnectListener, SocketChannelWriteListener, Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3892" _type="PauseCommand" date="Mon Apr 11 22:16:09 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="8767389">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6722]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3893" _type="SelectTextCommand" caretOffset="1991" date="Mon Apr 11 22:16:09 EDT 2022" end="2044" start="1991" starttimestamp="1649721002230" timestamp="8767464" />
  <Command __id="3891" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:16:09 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2597" docExpressionCount="279" docLength="2813" projectName="A6" starttimestamp="1649721002230" timestamp="8767389">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="3895" _type="PauseCommand" date="Mon Apr 11 22:16:31 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="8788777">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[21312]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3896" _type="MoveCaretCommand" caretOffset="2762" date="Mon Apr 11 22:16:31 EDT 2022" docOffset="2762" starttimestamp="1649721002230" timestamp="8788866" />
  <Command __id="3894" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:16:31 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2776" projectName="A6" starttimestamp="1649721002230" timestamp="8788776">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶	"), Diff(INSERT,"	//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶	"), Diff(EQUAL,"}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;


import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}
//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}
	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		
			nioManager.enableListenableAccepts(aServerFactoryChannel,
					SelectionKey.OP_READ, // allow incoming writes that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}		
	}
	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		//TODO want to save aSocketChannel
	}
	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);
		
		//TODO echo the message right back to the same client
		//Turn of the servers reading ability
		//nioManager.write(socketChannel, aWriteMessage, this);
		//turn on the client's reading ability
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="3898" _type="PauseCommand" date="Mon Apr 11 22:16:36 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="8794530">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5664]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3899" _type="MoveCaretCommand" caretOffset="0" date="Mon Apr 11 22:16:36 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="8794608" />
  <Command __id="3901" _type="PauseCommand" date="Mon Apr 11 22:16:41 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8799232">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4624]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3900" _type="SelectTextCommand" caretOffset="141" date="Mon Apr 11 22:16:41 EDT 2022" end="195" start="141" starttimestamp="1649721002230" timestamp="8799232" />
  <Command __id="3902" _type="CopyCommand" date="Mon Apr 11 22:16:42 EDT 2022" starttimestamp="1649721002230" timestamp="8799801" />
  <Command __id="3897" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:16:36 EDT 2022" docASTNodeCount="30" docActiveCodeLength="269" docExpressionCount="22" docLength="269" projectName="A6" starttimestamp="1649721002230" timestamp="8794530">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\NIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶¶public interface NIOManagerPrintServer extends SocketChannelAcceptListener, SocketChannelReadListener {¶¶}")]]]></diff>
  </Command>
  <Command __id="3904" _type="PauseCommand" date="Mon Apr 11 22:16:43 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8801527">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1726]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3905" _type="SelectTextCommand" caretOffset="1991" date="Mon Apr 11 22:16:43 EDT 2022" end="2044" start="1991" starttimestamp="1649721002230" timestamp="8801610" />
  <Command __id="3907" _type="PauseCommand" date="Mon Apr 11 22:16:46 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8804710">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3100]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3906" _type="MoveCaretCommand" caretOffset="1246" date="Mon Apr 11 22:16:46 EDT 2022" docOffset="1246" starttimestamp="1649721002230" timestamp="8804710" />
  <Command __id="3908" _type="MoveCaretCommand" caretOffset="1246" date="Mon Apr 11 22:16:46 EDT 2022" docOffset="1246" starttimestamp="1649721002230" timestamp="8804710" />
  <Command __id="3910" _type="InsertStringCommand" date="Mon Apr 11 22:16:47 EDT 2022" starttimestamp="1649721002230" timestamp="8805378" timestamp2="8805378">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3911" _type="InsertStringCommand" date="Mon Apr 11 22:16:47 EDT 2022" starttimestamp="1649721002230" timestamp="8805378" timestamp2="8805378">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3913" _type="InsertStringCommand" date="Mon Apr 11 22:16:48 EDT 2022" starttimestamp="1649721002230" timestamp="8806105" timestamp2="8806105">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3914" _type="InsertStringCommand" date="Mon Apr 11 22:16:48 EDT 2022" starttimestamp="1649721002230" timestamp="8806105" timestamp2="8806105">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3916" _type="InsertStringCommand" date="Mon Apr 11 22:16:49 EDT 2022" starttimestamp="1649721002230" timestamp="8806808" timestamp2="8806808">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="3917" _type="InsertStringCommand" date="Mon Apr 11 22:16:49 EDT 2022" starttimestamp="1649721002230" timestamp="8806808" timestamp2="8806808">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="3921" _type="PasteCommand" date="Mon Apr 11 22:16:49 EDT 2022" starttimestamp="1649721002230" timestamp="8807708" />
  <Command __id="3923" _type="PauseCommand" date="Mon Apr 11 22:16:51 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8809296">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1588]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3922" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:16:51 EDT 2022" starttimestamp="1649721002230" timestamp="8809296" />
  <Command __id="3924" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:16:51 EDT 2022" starttimestamp="1649721002230" timestamp="8809394" />
  <Command __id="3925" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:16:51 EDT 2022" starttimestamp="1649721002230" timestamp="8809420" />
  <Command __id="3927" _type="PauseCommand" date="Mon Apr 11 22:16:55 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8813635">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4215]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3926" _type="ShellCommand" date="Mon Apr 11 22:16:55 EDT 2022" starttimestamp="1649721002230" timestamp="8813635" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3928" _type="ShellCommand" date="Mon Apr 11 22:16:56 EDT 2022" starttimestamp="1649721002230" timestamp="8813785" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3938" _type="PauseCommand" date="Mon Apr 11 22:17:01 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="8819167">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[5338]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3937" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:17:01 EDT 2022" starttimestamp="1649721002230" timestamp="8819167" />
  <Command __id="3939" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:17:01 EDT 2022" starttimestamp="1649721002230" timestamp="8819263" />
  <Command __id="3940" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:17:01 EDT 2022" starttimestamp="1649721002230" timestamp="8819288" />
  <Command __id="3941" _type="ShellCommand" date="Mon Apr 11 22:17:01 EDT 2022" starttimestamp="1649721002230" timestamp="8819384" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3943" _type="PauseCommand" date="Mon Apr 11 22:17:03 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8821073">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1689]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3942" _type="ShellCommand" date="Mon Apr 11 22:17:03 EDT 2022" starttimestamp="1649721002230" timestamp="8821073" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3903" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:16:43 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2597" docExpressionCount="279" docLength="2813" projectName="A6" starttimestamp="1649721002230" timestamp="8801527">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶}")]]]></diff>
  </Command>
  <DocumentChange __id="3909" _type="Insert" date="Mon Apr 11 22:16:47 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2598" docExpressionCount="279" docLength="2814" length="1" offset="1246" starttimestamp="1649721002230" timestamp="8805373">
    <text><![CDATA[,]]></text>
  </DocumentChange>
  <DocumentChange __id="3912" _type="Replace" date="Mon Apr 11 22:16:48 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2599" docExpressionCount="279" docLength="2815" endLine="25" insertionLength="2" int_docASTNodeCount="390" int_docActiveCodeLength="2597" int_docExpressionCount="279" int_docLength="2813" length="1" offset="1247" startLine="25" starttimestamp="1649721002230" timestamp="8806097">
    <deletedText><![CDATA[ ]]></deletedText>
    <insertedText><![CDATA[
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3915" _type="Insert" date="Mon Apr 11 22:16:49 EDT 2022" docASTNodeCount="390" docActiveCodeLength="2600" docExpressionCount="279" docLength="2816" length="1" offset="1249" starttimestamp="1649721002230" timestamp="8806802">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="3918" _type="Replace" date="Mon Apr 11 22:16:49 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2653" docExpressionCount="281" docLength="2869" endLine="26" insertionLength="54" int_docASTNodeCount="390" int_docActiveCodeLength="2599" int_docExpressionCount="279" int_docLength="2815" length="1" offset="1249" startLine="26" starttimestamp="1649721002230" timestamp="8807580">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[SocketChannelAcceptListener, SocketChannelReadListener]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3919" _type="Insert" date="Mon Apr 11 22:16:49 EDT 2022" docASTNodeCount="404" docActiveCodeLength="2722" docExpressionCount="290" docLength="2938" length="69" offset="790" repeat="2" starttimestamp="1649721002230" timestamp="8807643" timestamp2="8807645">
    <text><![CDATA[
import inputport.nio.manager.listeners.SocketChannelAcceptListener;]]></text>
  </DocumentChange>
  <DocumentChange __id="3929" _type="Insert" date="Mon Apr 11 22:16:56 EDT 2022" docASTNodeCount="437" docActiveCodeLength="2939" docExpressionCount="305" docLength="3223" length="285" offset="2933" repeat="8" starttimestamp="1649721002230" timestamp="8813829" timestamp2="8813838">
    <text><![CDATA[

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="3945" _type="PauseCommand" date="Mon Apr 11 22:17:05 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8822851">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1778]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3946" _type="MoveCaretCommand" caretOffset="2762" date="Mon Apr 11 22:17:05 EDT 2022" docOffset="2762" starttimestamp="1649721002230" timestamp="8822937" />
  <Command __id="3948" _type="PauseCommand" date="Mon Apr 11 22:17:11 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="8829552">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6615]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3947" _type="SelectTextCommand" caretOffset="2202" date="Mon Apr 11 22:17:11 EDT 2022" end="2251" start="2202" starttimestamp="1649721002230" timestamp="8829552" />
  <Command __id="3949" _type="SelectTextCommand" caretOffset="2202" date="Mon Apr 11 22:17:11 EDT 2022" end="2251" start="2202" starttimestamp="1649721002230" timestamp="8829552" />
  <Command __id="3951" _type="PauseCommand" date="Mon Apr 11 22:17:13 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8831584">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2032]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="3950" _type="CopyCommand" date="Mon Apr 11 22:17:13 EDT 2022" starttimestamp="1649721002230" timestamp="8831584" />
  <Command __id="3944" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:17:05 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2776" projectName="A6" starttimestamp="1649721002230" timestamp="8822851">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3953" _type="PauseCommand" date="Mon Apr 11 22:17:21 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="8839698">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[8114]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3954" _type="MoveCaretCommand" caretOffset="1372" date="Mon Apr 11 22:17:22 EDT 2022" docOffset="1372" starttimestamp="1649721002230" timestamp="8839777" />
  <Command __id="3956" _type="PauseCommand" date="Mon Apr 11 22:17:25 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8843713">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3936]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3955" _type="MoveCaretCommand" caretOffset="3210" date="Mon Apr 11 22:17:25 EDT 2022" docOffset="3210" starttimestamp="1649721002230" timestamp="8843713" />
  <Command __id="3957" _type="MoveCaretCommand" caretOffset="3210" date="Mon Apr 11 22:17:25 EDT 2022" docOffset="3210" starttimestamp="1649721002230" timestamp="8843713" />
  <Command __id="3959" _type="InsertStringCommand" date="Mon Apr 11 22:17:26 EDT 2022" starttimestamp="1649721002230" timestamp="8844328" timestamp2="8844328">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3960" _type="InsertStringCommand" date="Mon Apr 11 22:17:26 EDT 2022" starttimestamp="1649721002230" timestamp="8844328" timestamp2="8844328">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3952" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:17:21 EDT 2022" docASTNodeCount="437" docActiveCodeLength="2939" docExpressionCount="305" docLength="3223" projectName="A6" starttimestamp="1649721002230" timestamp="8839698">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶"), Diff(INSERT,"import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶"), Diff(EQUAL,"import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener"), Diff(DELETE," "), Diff(INSERT,",¶SocketChannelAcceptListener, SocketChannelReadListener"), Diff(EQUAL,"{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶"), Diff(INSERT,"	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					0, // do not allow any incoming messages
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {

	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception e) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {

	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

}]]></snapshot>
  </Command>
  <DocumentChange __id="3958" _type="Insert" date="Mon Apr 11 22:17:26 EDT 2022" docASTNodeCount="437" docActiveCodeLength="2943" docExpressionCount="305" docLength="3227" length="4" offset="3210" starttimestamp="1649721002230" timestamp="8844306">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="3962" _type="PauseCommand" date="Mon Apr 11 22:17:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8846122">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1793]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3963" _type="PasteCommand" date="Mon Apr 11 22:17:28 EDT 2022" starttimestamp="1649721002230" timestamp="8846129" />
  <Command __id="3964" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:17:28 EDT 2022" starttimestamp="1649721002230" timestamp="8846745" />
  <Command __id="3965" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:17:29 EDT 2022" starttimestamp="1649721002230" timestamp="8846848" />
  <Command __id="3966" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:17:29 EDT 2022" starttimestamp="1649721002230" timestamp="8846878" />
  <DocumentChange __id="3961" _type="Replace" date="Mon Apr 11 22:17:28 EDT 2022" docASTNodeCount="443" docActiveCodeLength="2992" docExpressionCount="310" docLength="3276" endLine="95" insertionLength="51" int_docASTNodeCount="437" int_docActiveCodeLength="2941" int_docExpressionCount="305" int_docLength="3225" length="2" offset="3212" startLine="95" starttimestamp="1649721002230" timestamp="8846121">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		nioManager.addReadListener(aSocketChannel, this);]]></insertedText>
  </DocumentChange>
  <Command __id="3968" _type="PauseCommand" date="Mon Apr 11 22:17:35 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="8852927">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6049]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3969" _type="SelectTextCommand" caretOffset="2202" date="Mon Apr 11 22:17:35 EDT 2022" end="2251" start="2202" starttimestamp="1649721002230" timestamp="8853010" />
  <Command __id="3967" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:17:35 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2776" projectName="A6" starttimestamp="1649721002230" timestamp="8852927">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3971" _type="PauseCommand" date="Mon Apr 11 22:17:37 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8855550">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2540]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3972" _type="MoveCaretCommand" caretOffset="3263" date="Mon Apr 11 22:17:37 EDT 2022" docOffset="3263" starttimestamp="1649721002230" timestamp="8855637" />
  <Command __id="3974" _type="PauseCommand" date="Mon Apr 11 22:17:40 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8858534">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2897]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3973" _type="SelectTextCommand" caretOffset="3241" date="Mon Apr 11 22:17:40 EDT 2022" end="3255" start="3241" starttimestamp="1649721002230" timestamp="8858534" />
  <Command __id="3975" _type="SelectTextCommand" caretOffset="3241" date="Mon Apr 11 22:17:40 EDT 2022" end="3255" start="3241" starttimestamp="1649721002230" timestamp="8858534" />
  <Command __id="3977" _type="InsertStringCommand" date="Mon Apr 11 22:17:41 EDT 2022" starttimestamp="1649721002230" timestamp="8859006" timestamp2="8859006">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3978" _type="InsertStringCommand" date="Mon Apr 11 22:17:41 EDT 2022" starttimestamp="1649721002230" timestamp="8859006" timestamp2="8859006">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3980" _type="InsertStringCommand" date="Mon Apr 11 22:17:41 EDT 2022" starttimestamp="1649721002230" timestamp="8859148" timestamp2="8859148">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3981" _type="InsertStringCommand" date="Mon Apr 11 22:17:41 EDT 2022" starttimestamp="1649721002230" timestamp="8859148" timestamp2="8859148">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3983" _type="InsertStringCommand" date="Mon Apr 11 22:17:41 EDT 2022" starttimestamp="1649721002230" timestamp="8859343" timestamp2="8859343">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3984" _type="InsertStringCommand" date="Mon Apr 11 22:17:41 EDT 2022" starttimestamp="1649721002230" timestamp="8859343" timestamp2="8859343">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3986" _type="InsertStringCommand" date="Mon Apr 11 22:17:42 EDT 2022" starttimestamp="1649721002230" timestamp="8859851" timestamp2="8859851">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="3987" _type="InsertStringCommand" date="Mon Apr 11 22:17:42 EDT 2022" starttimestamp="1649721002230" timestamp="8859851" timestamp2="8859851">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="3989" _type="PauseCommand" date="Mon Apr 11 22:17:43 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8861186">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1335]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3988" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:17:43 EDT 2022" starttimestamp="1649721002230" timestamp="8861186" />
  <Command __id="3990" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:17:43 EDT 2022" starttimestamp="1649721002230" timestamp="8861283" />
  <Command __id="3991" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:17:43 EDT 2022" starttimestamp="1649721002230" timestamp="8861307" />
  <Command __id="3992" _type="ShellCommand" date="Mon Apr 11 22:17:43 EDT 2022" starttimestamp="1649721002230" timestamp="8861461" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3994" _type="PauseCommand" date="Mon Apr 11 22:17:45 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8863321">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1860]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3993" _type="ShellCommand" date="Mon Apr 11 22:17:45 EDT 2022" starttimestamp="1649721002230" timestamp="8863321" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3970" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:17:37 EDT 2022" docASTNodeCount="443" docActiveCodeLength="2992" docExpressionCount="310" docLength="3276" projectName="A6" starttimestamp="1649721002230" timestamp="8855550">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		"), Diff(INSERT,"nioManager.addReadListener(aSocketChannel, this);¶		"), Diff(EQUAL,"¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					0, // do not allow any incoming messages
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {

	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception e) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {

	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		
	}

}]]></snapshot>
  </Command>
  <DocumentChange __id="3976" _type="Replace" date="Mon Apr 11 22:17:41 EDT 2022" docASTNodeCount="443" docActiveCodeLength="2979" docExpressionCount="310" docLength="3263" endLine="95" insertionLength="1" int_docASTNodeCount="442" int_docActiveCodeLength="2978" int_docExpressionCount="309" int_docLength="3262" length="14" offset="3241" startLine="95" starttimestamp="1649721002230" timestamp="8858997">
    <deletedText><![CDATA[aSocketChannel]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3979" _type="Insert" date="Mon Apr 11 22:17:41 EDT 2022" docASTNodeCount="443" docActiveCodeLength="2982" docExpressionCount="310" docLength="3266" length="3" offset="3242" repeat="3" starttimestamp="1649721002230" timestamp="8859144" timestamp2="8859846">
    <text><![CDATA[rg1]]></text>
  </DocumentChange>
  <Command __id="3996" _type="PauseCommand" date="Mon Apr 11 22:17:49 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8867240">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3919]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3997" _type="SelectTextCommand" caretOffset="2202" date="Mon Apr 11 22:17:49 EDT 2022" end="2251" start="2202" starttimestamp="1649721002230" timestamp="8867335" />
  <Command __id="3999" _type="PauseCommand" date="Mon Apr 11 22:17:55 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="8872834">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5499]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3998" _type="SelectTextCommand" caretOffset="2407" date="Mon Apr 11 22:17:55 EDT 2022" end="2559" start="2407" starttimestamp="1649721002230" timestamp="8872834" />
  <Command __id="4000" _type="SelectTextCommand" caretOffset="2407" date="Mon Apr 11 22:17:55 EDT 2022" end="2559" start="2407" starttimestamp="1649721002230" timestamp="8872834" />
  <Command __id="4001" _type="CopyCommand" date="Mon Apr 11 22:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="8873211" />
  <Command __id="4003" _type="MoveCaretCommand" caretOffset="3245" date="Mon Apr 11 22:17:56 EDT 2022" docOffset="3245" starttimestamp="1649721002230" timestamp="8874265" />
  <Command __id="4005" _type="PauseCommand" date="Mon Apr 11 22:17:57 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8875383">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1118]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4004" _type="MoveCaretCommand" caretOffset="3066" date="Mon Apr 11 22:17:57 EDT 2022" docOffset="3066" starttimestamp="1649721002230" timestamp="8875383" />
  <Command __id="4006" _type="MoveCaretCommand" caretOffset="3066" date="Mon Apr 11 22:17:57 EDT 2022" docOffset="3066" starttimestamp="1649721002230" timestamp="8875383" />
  <Command __id="4008" _type="InsertStringCommand" date="Mon Apr 11 22:17:58 EDT 2022" starttimestamp="1649721002230" timestamp="8876157" timestamp2="8876157">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4009" _type="InsertStringCommand" date="Mon Apr 11 22:17:58 EDT 2022" starttimestamp="1649721002230" timestamp="8876157" timestamp2="8876157">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4011" _type="PasteCommand" date="Mon Apr 11 22:17:58 EDT 2022" starttimestamp="1649721002230" timestamp="8876683" />
  <Command __id="4012" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:17:59 EDT 2022" starttimestamp="1649721002230" timestamp="8877361" />
  <Command __id="4013" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:17:59 EDT 2022" starttimestamp="1649721002230" timestamp="8877458" />
  <Command __id="4014" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:17:59 EDT 2022" starttimestamp="1649721002230" timestamp="8877480" />
  <Command __id="4016" _type="PauseCommand" date="Mon Apr 11 22:18:28 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="8906538">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[29058]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4015" _type="SelectTextCommand" caretOffset="3370" date="Mon Apr 11 22:18:28 EDT 2022" end="3409" start="3370" starttimestamp="1649721002230" timestamp="8906538" />
  <Command __id="4017" _type="SelectTextCommand" caretOffset="3370" date="Mon Apr 11 22:18:28 EDT 2022" end="3409" start="3370" starttimestamp="1649721002230" timestamp="8906538" />
  <Command __id="4018" _type="CopyCommand" date="Mon Apr 11 22:18:29 EDT 2022" starttimestamp="1649721002230" timestamp="8907493" />
  <Command __id="4020" _type="PauseCommand" date="Mon Apr 11 22:18:39 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="8917495">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[10001]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4019" _type="SelectTextCommand" caretOffset="3206" date="Mon Apr 11 22:18:39 EDT 2022" end="3220" start="3206" starttimestamp="1649721002230" timestamp="8917494" />
  <Command __id="4021" _type="SelectTextCommand" caretOffset="3206" date="Mon Apr 11 22:18:39 EDT 2022" end="3220" start="3206" starttimestamp="1649721002230" timestamp="8917495" />
  <Command __id="4023" _type="InsertStringCommand" date="Mon Apr 11 22:18:40 EDT 2022" starttimestamp="1649721002230" timestamp="8917912" timestamp2="8917912">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4024" _type="InsertStringCommand" date="Mon Apr 11 22:18:40 EDT 2022" starttimestamp="1649721002230" timestamp="8917912" timestamp2="8917912">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4026" _type="InsertStringCommand" date="Mon Apr 11 22:18:40 EDT 2022" starttimestamp="1649721002230" timestamp="8917981" timestamp2="8917981">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4027" _type="InsertStringCommand" date="Mon Apr 11 22:18:40 EDT 2022" starttimestamp="1649721002230" timestamp="8917981" timestamp2="8917981">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4029" _type="InsertStringCommand" date="Mon Apr 11 22:18:40 EDT 2022" starttimestamp="1649721002230" timestamp="8918199" timestamp2="8918199">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4030" _type="InsertStringCommand" date="Mon Apr 11 22:18:40 EDT 2022" starttimestamp="1649721002230" timestamp="8918199" timestamp2="8918199">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4032" _type="InsertStringCommand" date="Mon Apr 11 22:18:41 EDT 2022" starttimestamp="1649721002230" timestamp="8918999" timestamp2="8918999">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4033" _type="InsertStringCommand" date="Mon Apr 11 22:18:41 EDT 2022" starttimestamp="1649721002230" timestamp="8918999" timestamp2="8918999">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4035" _type="PauseCommand" date="Mon Apr 11 22:18:44 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8921900">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2901]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4034" _type="SelectTextCommand" caretOffset="3149" date="Mon Apr 11 22:18:44 EDT 2022" end="3155" start="3149" starttimestamp="1649721002230" timestamp="8921900" />
  <Command __id="4036" _type="SelectTextCommand" caretOffset="3149" date="Mon Apr 11 22:18:44 EDT 2022" end="3155" start="3149" starttimestamp="1649721002230" timestamp="8921901" />
  <Command __id="4038" _type="InsertStringCommand" date="Mon Apr 11 22:18:44 EDT 2022" starttimestamp="1649721002230" timestamp="8922073" timestamp2="8922073">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4039" _type="InsertStringCommand" date="Mon Apr 11 22:18:44 EDT 2022" starttimestamp="1649721002230" timestamp="8922073" timestamp2="8922073">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4041" _type="InsertStringCommand" date="Mon Apr 11 22:18:44 EDT 2022" starttimestamp="1649721002230" timestamp="8922162" timestamp2="8922162">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4042" _type="InsertStringCommand" date="Mon Apr 11 22:18:44 EDT 2022" starttimestamp="1649721002230" timestamp="8922163" timestamp2="8922163">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4044" _type="InsertStringCommand" date="Mon Apr 11 22:18:44 EDT 2022" starttimestamp="1649721002230" timestamp="8922368" timestamp2="8922368">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4045" _type="InsertStringCommand" date="Mon Apr 11 22:18:44 EDT 2022" starttimestamp="1649721002230" timestamp="8922368" timestamp2="8922368">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4047" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 22:18:45 EDT 2022" starttimestamp="1649721002230" timestamp="8923326" />
  <Command __id="4049" _type="InsertStringCommand" date="Mon Apr 11 22:18:45 EDT 2022" starttimestamp="1649721002230" timestamp="8923490" timestamp2="8923490">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="4050" _type="InsertStringCommand" date="Mon Apr 11 22:18:45 EDT 2022" starttimestamp="1649721002230" timestamp="8923490" timestamp2="8923490">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="4052" _type="PauseCommand" date="Mon Apr 11 22:18:48 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8925946">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2456]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4051" _type="SelectTextCommand" caretOffset="3105" date="Mon Apr 11 22:18:48 EDT 2022" end="3113" start="3105" starttimestamp="1649721002230" timestamp="8925946" />
  <Command __id="4053" _type="SelectTextCommand" caretOffset="3105" date="Mon Apr 11 22:18:48 EDT 2022" end="3113" start="3105" starttimestamp="1649721002230" timestamp="8925946" />
  <Command __id="4055" _type="InsertStringCommand" date="Mon Apr 11 22:18:48 EDT 2022" starttimestamp="1649721002230" timestamp="8926054" timestamp2="8926054">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4056" _type="InsertStringCommand" date="Mon Apr 11 22:18:48 EDT 2022" starttimestamp="1649721002230" timestamp="8926054" timestamp2="8926054">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4058" _type="InsertStringCommand" date="Mon Apr 11 22:18:48 EDT 2022" starttimestamp="1649721002230" timestamp="8926149" timestamp2="8926149">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4059" _type="InsertStringCommand" date="Mon Apr 11 22:18:48 EDT 2022" starttimestamp="1649721002230" timestamp="8926149" timestamp2="8926149">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4061" _type="InsertStringCommand" date="Mon Apr 11 22:18:49 EDT 2022" starttimestamp="1649721002230" timestamp="8927017" timestamp2="8927017">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4062" _type="InsertStringCommand" date="Mon Apr 11 22:18:49 EDT 2022" starttimestamp="1649721002230" timestamp="8927017" timestamp2="8927017">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4065" _type="PauseCommand" date="Mon Apr 11 22:18:50 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8928019">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1002]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4064" _type="InsertStringCommand" date="Mon Apr 11 22:18:50 EDT 2022" starttimestamp="1649721002230" timestamp="8928019" timestamp2="8928019">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="4066" _type="InsertStringCommand" date="Mon Apr 11 22:18:50 EDT 2022" starttimestamp="1649721002230" timestamp="8928019" timestamp2="8928019">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="4068" _type="PauseCommand" date="Mon Apr 11 22:18:55 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8932780">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4760]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4067" _type="SelectTextCommand" caretOffset="3119" date="Mon Apr 11 22:18:55 EDT 2022" end="3126" start="3119" starttimestamp="1649721002230" timestamp="8932779" />
  <Command __id="4069" _type="SelectTextCommand" caretOffset="3119" date="Mon Apr 11 22:18:55 EDT 2022" end="3126" start="3119" starttimestamp="1649721002230" timestamp="8932780" />
  <Command __id="4071" _type="InsertStringCommand" date="Mon Apr 11 22:18:55 EDT 2022" starttimestamp="1649721002230" timestamp="8932870" timestamp2="8932870">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4072" _type="InsertStringCommand" date="Mon Apr 11 22:18:55 EDT 2022" starttimestamp="1649721002230" timestamp="8932870" timestamp2="8932870">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4074" _type="InsertStringCommand" date="Mon Apr 11 22:18:55 EDT 2022" starttimestamp="1649721002230" timestamp="8932970" timestamp2="8932970">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4075" _type="InsertStringCommand" date="Mon Apr 11 22:18:55 EDT 2022" starttimestamp="1649721002230" timestamp="8932970" timestamp2="8932970">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4077" _type="InsertStringCommand" date="Mon Apr 11 22:18:55 EDT 2022" starttimestamp="1649721002230" timestamp="8933200" timestamp2="8933200">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4078" _type="InsertStringCommand" date="Mon Apr 11 22:18:55 EDT 2022" starttimestamp="1649721002230" timestamp="8933200" timestamp2="8933200">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4080" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 22:18:56 EDT 2022" starttimestamp="1649721002230" timestamp="8934132" />
  <Command __id="4082" _type="InsertStringCommand" date="Mon Apr 11 22:18:56 EDT 2022" starttimestamp="1649721002230" timestamp="8934288" timestamp2="8934288">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="4083" _type="InsertStringCommand" date="Mon Apr 11 22:18:56 EDT 2022" starttimestamp="1649721002230" timestamp="8934288" timestamp2="8934288">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="4085" _type="PauseCommand" date="Mon Apr 11 22:18:58 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8936524">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2236]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4084" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:18:58 EDT 2022" starttimestamp="1649721002230" timestamp="8936524" />
  <Command __id="4086" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:18:58 EDT 2022" starttimestamp="1649721002230" timestamp="8936616" />
  <Command __id="4087" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:18:58 EDT 2022" starttimestamp="1649721002230" timestamp="8936647" />
  <Command __id="4089" _type="PauseCommand" date="Mon Apr 11 22:19:00 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8938478">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1831]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4088" _type="SelectTextCommand" caretOffset="3349" date="Mon Apr 11 22:19:00 EDT 2022" end="3388" start="3349" starttimestamp="1649721002230" timestamp="8938478" />
  <Command __id="4090" _type="SelectTextCommand" caretOffset="3349" date="Mon Apr 11 22:19:00 EDT 2022" end="3388" start="3349" starttimestamp="1649721002230" timestamp="8938479" />
  <Command __id="4091" _type="CopyCommand" date="Mon Apr 11 22:19:00 EDT 2022" starttimestamp="1649721002230" timestamp="8938710" />
  <Command __id="4093" _type="PauseCommand" date="Mon Apr 11 22:19:04 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8942435">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3725]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4092" _type="MoveCaretCommand" caretOffset="2723" date="Mon Apr 11 22:19:04 EDT 2022" docOffset="2723" starttimestamp="1649721002230" timestamp="8942435" />
  <Command __id="4094" _type="MoveCaretCommand" caretOffset="2723" date="Mon Apr 11 22:19:04 EDT 2022" docOffset="2723" starttimestamp="1649721002230" timestamp="8942436" />
  <Command __id="4096" _type="InsertStringCommand" date="Mon Apr 11 22:19:05 EDT 2022" starttimestamp="1649721002230" timestamp="8942808" timestamp2="8942808">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4097" _type="InsertStringCommand" date="Mon Apr 11 22:19:05 EDT 2022" starttimestamp="1649721002230" timestamp="8942808" timestamp2="8942808">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4099" _type="PasteCommand" date="Mon Apr 11 22:19:05 EDT 2022" starttimestamp="1649721002230" timestamp="8943540" />
  <Command __id="4101" _type="InsertStringCommand" date="Mon Apr 11 22:19:06 EDT 2022" starttimestamp="1649721002230" timestamp="8944370" timestamp2="8944370">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4102" _type="InsertStringCommand" date="Mon Apr 11 22:19:06 EDT 2022" starttimestamp="1649721002230" timestamp="8944370" timestamp2="8944370">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4104" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945071" timestamp2="8945071">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4105" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945071" timestamp2="8945071">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4107" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945218" timestamp2="8945218">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="4108" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945218" timestamp2="8945218">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="4110" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945304" timestamp2="8945304">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4111" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945304" timestamp2="8945304">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4113" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945460" timestamp2="8945460">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4114" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945460" timestamp2="8945460">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4116" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945556" timestamp2="8945556">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4117" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945556" timestamp2="8945556">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4119" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945681" timestamp2="8945681">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4120" _type="InsertStringCommand" date="Mon Apr 11 22:19:07 EDT 2022" starttimestamp="1649721002230" timestamp="8945681" timestamp2="8945681">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4122" _type="InsertStringCommand" date="Mon Apr 11 22:19:08 EDT 2022" starttimestamp="1649721002230" timestamp="8945854" timestamp2="8945854">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4123" _type="InsertStringCommand" date="Mon Apr 11 22:19:08 EDT 2022" starttimestamp="1649721002230" timestamp="8945854" timestamp2="8945854">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4124" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 11 22:19:08 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="8945859" />
  <Command __id="4128" _type="PauseCommand" date="Mon Apr 11 22:19:09 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8946927">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1068]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4127" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 11 22:19:09 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="8946927" />
  <Command __id="3995" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:17:49 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2776" projectName="A6" starttimestamp="1649721002230" timestamp="8867240">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4002" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:17:56 EDT 2022" docASTNodeCount="443" docActiveCodeLength="2982" docExpressionCount="310" docLength="3266" projectName="A6" starttimestamp="1649721002230" timestamp="8874192">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(a"), Diff(DELETE,"SocketChannel"), Diff(INSERT,"rg1"), Diff(EQUAL,", this);¶		¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					0, // do not allow any incoming messages
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {

	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception e) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {

	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(arg1, this);
		
	}

}]]></snapshot>
  </Command>
  <DocumentChange __id="4007" _type="Insert" date="Mon Apr 11 22:17:58 EDT 2022" docASTNodeCount="443" docActiveCodeLength="2986" docExpressionCount="310" docLength="3270" length="4" offset="3066" starttimestamp="1649721002230" timestamp="8876144">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="4010" _type="Replace" date="Mon Apr 11 22:17:58 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3138" docExpressionCount="330" docLength="3422" endLine="89" insertionLength="154" int_docASTNodeCount="443" int_docActiveCodeLength="2984" int_docExpressionCount="310" int_docLength="3268" length="2" offset="3068" startLine="89" starttimestamp="1649721002230" timestamp="8876614">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4022" _type="Replace" date="Mon Apr 11 22:18:40 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3125" docExpressionCount="330" docLength="3409" endLine="91" insertionLength="1" int_docASTNodeCount="467" int_docActiveCodeLength="3124" int_docExpressionCount="329" int_docLength="3408" length="14" offset="3206" startLine="91" starttimestamp="1649721002230" timestamp="8917891">
    <deletedText><![CDATA[aSocketChannel]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4025" _type="Insert" date="Mon Apr 11 22:18:40 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3128" docExpressionCount="330" docLength="3412" length="3" offset="3207" repeat="3" starttimestamp="1649721002230" timestamp="8917975" timestamp2="8918994">
    <text><![CDATA[rg0]]></text>
  </DocumentChange>
  <DocumentChange __id="4037" _type="Replace" date="Mon Apr 11 22:18:44 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3123" docExpressionCount="330" docLength="3407" endLine="90" insertionLength="1" int_docASTNodeCount="468" int_docActiveCodeLength="3122" int_docExpressionCount="330" int_docLength="3406" length="6" offset="3149" startLine="90" starttimestamp="1649721002230" timestamp="8922068">
    <deletedText><![CDATA[aLengt]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4040" _type="Insert" date="Mon Apr 11 22:18:44 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3125" docExpressionCount="330" docLength="3409" length="2" offset="3150" repeat="2" starttimestamp="1649721002230" timestamp="8922160" timestamp2="8922364">
    <text><![CDATA[rg]]></text>
  </DocumentChange>
  <DocumentChange __id="4046" _type="Delete" date="Mon Apr 11 22:18:45 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3124" docExpressionCount="330" docLength="3408" endLine="90" length="1" offset="3152" startLine="90" starttimestamp="1649721002230" timestamp="8923317">
    <text><![CDATA[h]]></text>
  </DocumentChange>
  <DocumentChange __id="4048" _type="Insert" date="Mon Apr 11 22:18:45 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3125" docExpressionCount="330" docLength="3409" length="1" offset="3152" starttimestamp="1649721002230" timestamp="8923483">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="4054" _type="Replace" date="Mon Apr 11 22:18:48 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3118" docExpressionCount="330" docLength="3402" endLine="89" insertionLength="1" int_docASTNodeCount="467" int_docActiveCodeLength="3117" int_docExpressionCount="329" int_docLength="3401" length="8" offset="3105" startLine="89" starttimestamp="1649721002230" timestamp="8926045">
    <deletedText><![CDATA[aMessage]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4057" _type="Insert" date="Mon Apr 11 22:18:48 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3121" docExpressionCount="330" docLength="3405" length="3" offset="3106" repeat="3" starttimestamp="1649721002230" timestamp="8926146" timestamp2="8928012">
    <text><![CDATA[rg1]]></text>
  </DocumentChange>
  <DocumentChange __id="4070" _type="Replace" date="Mon Apr 11 22:18:55 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3115" docExpressionCount="330" docLength="3399" endLine="89" insertionLength="1" int_docASTNodeCount="468" int_docActiveCodeLength="3114" int_docExpressionCount="330" int_docLength="3398" length="7" offset="3119" startLine="89" starttimestamp="1649721002230" timestamp="8932863">
    <deletedText><![CDATA[aMessag]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4073" _type="Insert" date="Mon Apr 11 22:18:55 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3117" docExpressionCount="330" docLength="3401" length="2" offset="3120" repeat="2" starttimestamp="1649721002230" timestamp="8932964" timestamp2="8933195">
    <text><![CDATA[rg]]></text>
  </DocumentChange>
  <DocumentChange __id="4079" _type="Delete" date="Mon Apr 11 22:18:56 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3116" docExpressionCount="330" docLength="3400" endLine="89" length="1" offset="3122" startLine="89" starttimestamp="1649721002230" timestamp="8934128">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="4081" _type="Insert" date="Mon Apr 11 22:18:56 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3117" docExpressionCount="330" docLength="3401" length="1" offset="3122" starttimestamp="1649721002230" timestamp="8934282">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="4095" _type="Insert" date="Mon Apr 11 22:19:05 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3119" docExpressionCount="330" docLength="3403" length="2" offset="2723" starttimestamp="1649721002230" timestamp="8942807">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="4098" _type="Replace" date="Mon Apr 11 22:19:05 EDT 2022" docASTNodeCount="474" docActiveCodeLength="3158" docExpressionCount="335" docLength="3442" endLine="73" insertionLength="41" int_docASTNodeCount="468" int_docActiveCodeLength="3117" int_docExpressionCount="330" int_docLength="3401" length="2" offset="2723" startLine="73" starttimestamp="1649721002230" timestamp="8943536">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		nioManager.addReadListener(arg1, this);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4100" _type="Insert" date="Mon Apr 11 22:19:06 EDT 2022" docASTNodeCount="478" docActiveCodeLength="3171" docExpressionCount="338" docLength="3455" length="13" offset="2764" repeat="10" starttimestamp="1649721002230" timestamp="8944358" timestamp2="8946356">
    <text><![CDATA[
		System.ou]]></text>
  </DocumentChange>
  <DocumentChange __id="4129" _type="Replace" date="Mon Apr 11 22:19:09 EDT 2022" docASTNodeCount="478" docActiveCodeLength="3172" docExpressionCount="338" docLength="3456" endLine="74" insertionLength="3" int_docASTNodeCount="476" int_docActiveCodeLength="3169" int_docExpressionCount="336" int_docLength="3453" length="2" offset="2775" startLine="74" starttimestamp="1649721002230" timestamp="8946931">
    <deletedText><![CDATA[ou]]></deletedText>
    <insertedText><![CDATA[out]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4132" _type="Insert" date="Mon Apr 11 22:19:09 EDT 2022" docASTNodeCount="480" docActiveCodeLength="3178" docExpressionCount="340" docLength="3462" length="6" offset="2778" repeat="6" starttimestamp="1649721002230" timestamp="8947166" timestamp2="8948714">
    <text><![CDATA[.prinl]]></text>
  </DocumentChange>
  <DocumentChange __id="4141" _type="Delete" date="Mon Apr 11 22:19:11 EDT 2022" docASTNodeCount="480" docActiveCodeLength="3177" docExpressionCount="340" docLength="3461" endLine="74" length="1" offset="2783" startLine="74" starttimestamp="1649721002230" timestamp="8949449">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="4130" _type="InsertStringCommand" date="Mon Apr 11 22:19:09 EDT 2022" starttimestamp="1649721002230" timestamp="8946936" timestamp2="8946936">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4131" _type="InsertStringCommand" date="Mon Apr 11 22:19:09 EDT 2022" starttimestamp="1649721002230" timestamp="8946937" timestamp2="8946937">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4133" _type="InsertStringCommand" date="Mon Apr 11 22:19:09 EDT 2022" starttimestamp="1649721002230" timestamp="8947174" timestamp2="8947174">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4134" _type="InsertStringCommand" date="Mon Apr 11 22:19:09 EDT 2022" starttimestamp="1649721002230" timestamp="8947174" timestamp2="8947174">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4135" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 11 22:19:09 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="8947179" />
  <Command __id="4142" _type="PauseCommand" date="Mon Apr 11 22:19:11 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8949449">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2270]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4149" _type="PauseCommand" date="Mon Apr 11 22:19:13 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8951444">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1855]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4148" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 11 22:19:13 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="8951444" />
  <Command __id="4152" _type="PauseCommand" date="Mon Apr 11 22:19:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8953017">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1573]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4151" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953017" timestamp2="8953017">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4153" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953017" timestamp2="8953017">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4155" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953237" timestamp2="8953237">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4156" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953237" timestamp2="8953237">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4158" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953309" timestamp2="8953309">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4159" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953309" timestamp2="8953309">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4161" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953410" timestamp2="8953410">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4162" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953410" timestamp2="8953410">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4164" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953516" timestamp2="8953516">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4165" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953516" timestamp2="8953516">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4167" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953622" timestamp2="8953622">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4168" _type="InsertStringCommand" date="Mon Apr 11 22:19:15 EDT 2022" starttimestamp="1649721002230" timestamp="8953622" timestamp2="8953622">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4170" _type="InsertStringCommand" date="Mon Apr 11 22:19:16 EDT 2022" starttimestamp="1649721002230" timestamp="8954160" timestamp2="8954160">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4171" _type="InsertStringCommand" date="Mon Apr 11 22:19:16 EDT 2022" starttimestamp="1649721002230" timestamp="8954160" timestamp2="8954160">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4173" _type="InsertStringCommand" date="Mon Apr 11 22:19:16 EDT 2022" starttimestamp="1649721002230" timestamp="8954264" timestamp2="8954264">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4174" _type="InsertStringCommand" date="Mon Apr 11 22:19:16 EDT 2022" starttimestamp="1649721002230" timestamp="8954264" timestamp2="8954264">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4176" _type="InsertStringCommand" date="Mon Apr 11 22:19:16 EDT 2022" starttimestamp="1649721002230" timestamp="8954447" timestamp2="8954447">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4177" _type="InsertStringCommand" date="Mon Apr 11 22:19:16 EDT 2022" starttimestamp="1649721002230" timestamp="8954447" timestamp2="8954447">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4179" _type="InsertStringCommand" date="Mon Apr 11 22:19:16 EDT 2022" starttimestamp="1649721002230" timestamp="8954557" timestamp2="8954557">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4180" _type="InsertStringCommand" date="Mon Apr 11 22:19:16 EDT 2022" starttimestamp="1649721002230" timestamp="8954557" timestamp2="8954557">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4182" _type="InsertStringCommand" date="Mon Apr 11 22:19:16 EDT 2022" starttimestamp="1649721002230" timestamp="8954727" timestamp2="8954727">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4183" _type="InsertStringCommand" date="Mon Apr 11 22:19:16 EDT 2022" starttimestamp="1649721002230" timestamp="8954727" timestamp2="8954727">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4185" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8954781" timestamp2="8954781">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4186" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8954781" timestamp2="8954781">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4188" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8954995" timestamp2="8954995">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4189" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8954996" timestamp2="8954996">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4191" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8955185" timestamp2="8955185">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4192" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8955185" timestamp2="8955185">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4194" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8955310" timestamp2="8955310">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4195" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8955310" timestamp2="8955310">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4197" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8955442" timestamp2="8955442">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4198" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8955442" timestamp2="8955442">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4200" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8955535" timestamp2="8955535">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4201" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8955535" timestamp2="8955535">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4203" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8955605" timestamp2="8955605">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4204" _type="InsertStringCommand" date="Mon Apr 11 22:19:17 EDT 2022" starttimestamp="1649721002230" timestamp="8955605" timestamp2="8955605">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4206" _type="InsertStringCommand" date="Mon Apr 11 22:19:18 EDT 2022" starttimestamp="1649721002230" timestamp="8956337" timestamp2="8956337">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4207" _type="InsertStringCommand" date="Mon Apr 11 22:19:18 EDT 2022" starttimestamp="1649721002230" timestamp="8956337" timestamp2="8956337">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4209" _type="InsertStringCommand" date="Mon Apr 11 22:19:18 EDT 2022" starttimestamp="1649721002230" timestamp="8956537" timestamp2="8956537">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4210" _type="InsertStringCommand" date="Mon Apr 11 22:19:18 EDT 2022" starttimestamp="1649721002230" timestamp="8956537" timestamp2="8956537">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4212" _type="InsertStringCommand" date="Mon Apr 11 22:19:18 EDT 2022" starttimestamp="1649721002230" timestamp="8956632" timestamp2="8956632">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4213" _type="InsertStringCommand" date="Mon Apr 11 22:19:18 EDT 2022" starttimestamp="1649721002230" timestamp="8956632" timestamp2="8956632">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4215" _type="InsertStringCommand" date="Mon Apr 11 22:19:19 EDT 2022" starttimestamp="1649721002230" timestamp="8956876" timestamp2="8956876">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4216" _type="InsertStringCommand" date="Mon Apr 11 22:19:19 EDT 2022" starttimestamp="1649721002230" timestamp="8956876" timestamp2="8956876">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4218" _type="InsertStringCommand" date="Mon Apr 11 22:19:19 EDT 2022" starttimestamp="1649721002230" timestamp="8957016" timestamp2="8957016">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4219" _type="InsertStringCommand" date="Mon Apr 11 22:19:19 EDT 2022" starttimestamp="1649721002230" timestamp="8957016" timestamp2="8957016">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4221" _type="InsertStringCommand" date="Mon Apr 11 22:19:19 EDT 2022" starttimestamp="1649721002230" timestamp="8957097" timestamp2="8957097">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4222" _type="InsertStringCommand" date="Mon Apr 11 22:19:19 EDT 2022" starttimestamp="1649721002230" timestamp="8957097" timestamp2="8957097">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4223" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:19:20 EDT 2022" starttimestamp="1649721002230" timestamp="8957837" />
  <Command __id="4224" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:19:20 EDT 2022" starttimestamp="1649721002230" timestamp="8957943" />
  <Command __id="4225" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:19:20 EDT 2022" starttimestamp="1649721002230" timestamp="8957978" />
  <Command __id="4226" _type="ShellCommand" date="Mon Apr 11 22:19:20 EDT 2022" starttimestamp="1649721002230" timestamp="8958198" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4228" _type="PauseCommand" date="Mon Apr 11 22:19:22 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8960649">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2451]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4227" _type="ShellCommand" date="Mon Apr 11 22:19:22 EDT 2022" starttimestamp="1649721002230" timestamp="8960649" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4230" _type="PauseCommand" date="Mon Apr 11 22:19:26 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8964281">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3632]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <DocumentChange __id="4143" _type="Insert" date="Mon Apr 11 22:19:11 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3208" docExpressionCount="341" docLength="3492" length="31" offset="2783" repeat="29" starttimestamp="1649721002230" timestamp="8949589" timestamp2="8957093">
    <text><![CDATA[tln("Client Connect to Server")]]></text>
  </DocumentChange>
  <DocumentChange __id="4232" _type="Replace" date="Mon Apr 11 22:19:26 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3205" docExpressionCount="341" docLength="3489" endLine="73" insertionLength="1" int_docASTNodeCount="480" int_docActiveCodeLength="3204" int_docExpressionCount="340" int_docLength="3488" length="4" offset="2752" startLine="73" starttimestamp="1649721002230" timestamp="8964452">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <Command __id="4229" _type="SelectTextCommand" caretOffset="2752" date="Mon Apr 11 22:19:26 EDT 2022" end="2756" start="2752" starttimestamp="1649721002230" timestamp="8964281" />
  <Command __id="4231" _type="SelectTextCommand" caretOffset="2752" date="Mon Apr 11 22:19:26 EDT 2022" end="2756" start="2752" starttimestamp="1649721002230" timestamp="8964281" />
  <Command __id="4233" _type="InsertStringCommand" date="Mon Apr 11 22:19:26 EDT 2022" starttimestamp="1649721002230" timestamp="8964467" timestamp2="8964467">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4234" _type="InsertStringCommand" date="Mon Apr 11 22:19:26 EDT 2022" starttimestamp="1649721002230" timestamp="8964469" timestamp2="8964469">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4236" _type="InsertStringCommand" date="Mon Apr 11 22:19:27 EDT 2022" starttimestamp="1649721002230" timestamp="8965429" timestamp2="8965429">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4237" _type="InsertStringCommand" date="Mon Apr 11 22:19:27 EDT 2022" starttimestamp="1649721002230" timestamp="8965429" timestamp2="8965429">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4239" _type="InsertStringCommand" date="Mon Apr 11 22:19:27 EDT 2022" starttimestamp="1649721002230" timestamp="8965434" timestamp2="8965434">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4240" _type="InsertStringCommand" date="Mon Apr 11 22:19:27 EDT 2022" starttimestamp="1649721002230" timestamp="8965434" timestamp2="8965434">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4242" _type="InsertStringCommand" date="Mon Apr 11 22:19:27 EDT 2022" starttimestamp="1649721002230" timestamp="8965440" timestamp2="8965440">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4243" _type="InsertStringCommand" date="Mon Apr 11 22:19:27 EDT 2022" starttimestamp="1649721002230" timestamp="8965440" timestamp2="8965440">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4246" _type="PauseCommand" date="Mon Apr 11 22:19:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8966594">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1154]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4245" _type="InsertStringCommand" date="Mon Apr 11 22:19:28 EDT 2022" starttimestamp="1649721002230" timestamp="8966594" timestamp2="8966594">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="4247" _type="InsertStringCommand" date="Mon Apr 11 22:19:28 EDT 2022" starttimestamp="1649721002230" timestamp="8966594" timestamp2="8966594">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="4249" _type="InsertStringCommand" date="Mon Apr 11 22:19:28 EDT 2022" starttimestamp="1649721002230" timestamp="8966732" timestamp2="8966732">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4250" _type="InsertStringCommand" date="Mon Apr 11 22:19:28 EDT 2022" starttimestamp="1649721002230" timestamp="8966733" timestamp2="8966733">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4252" _type="InsertStringCommand" date="Mon Apr 11 22:19:29 EDT 2022" starttimestamp="1649721002230" timestamp="8966897" timestamp2="8966897">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4253" _type="InsertStringCommand" date="Mon Apr 11 22:19:29 EDT 2022" starttimestamp="1649721002230" timestamp="8966897" timestamp2="8966897">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4255" _type="InsertStringCommand" date="Mon Apr 11 22:19:29 EDT 2022" starttimestamp="1649721002230" timestamp="8967651" timestamp2="8967651">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4256" _type="InsertStringCommand" date="Mon Apr 11 22:19:29 EDT 2022" starttimestamp="1649721002230" timestamp="8967651" timestamp2="8967651">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="4258" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8967814" timestamp2="8967814">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4259" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8967814" timestamp2="8967814">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4261" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8967901" timestamp2="8967901">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4262" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8967901" timestamp2="8967901">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4264" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8968028" timestamp2="8968028">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4265" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8968028" timestamp2="8968028">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4267" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8968192" timestamp2="8968192">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4268" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8968192" timestamp2="8968192">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4270" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8968379" timestamp2="8968379">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4271" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8968379" timestamp2="8968379">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4273" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8968493" timestamp2="8968493">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4274" _type="InsertStringCommand" date="Mon Apr 11 22:19:30 EDT 2022" starttimestamp="1649721002230" timestamp="8968493" timestamp2="8968493">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4276" _type="PauseCommand" date="Mon Apr 11 22:19:32 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8969812">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1319]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4275" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:19:32 EDT 2022" starttimestamp="1649721002230" timestamp="8969812" />
  <Command __id="4277" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:19:32 EDT 2022" starttimestamp="1649721002230" timestamp="8969913" />
  <Command __id="4278" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:19:32 EDT 2022" starttimestamp="1649721002230" timestamp="8969945" />
  <Command __id="4280" _type="PauseCommand" date="Mon Apr 11 22:19:34 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="8972070">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2125]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4279" _type="MoveCaretCommand" caretOffset="2824" date="Mon Apr 11 22:19:34 EDT 2022" docOffset="2824" starttimestamp="1649721002230" timestamp="8972070" />
  <Command __id="4281" _type="MoveCaretCommand" caretOffset="2824" date="Mon Apr 11 22:19:34 EDT 2022" docOffset="2824" starttimestamp="1649721002230" timestamp="8972070" />
  <Command __id="4283" _type="InsertStringCommand" date="Mon Apr 11 22:19:34 EDT 2022" starttimestamp="1649721002230" timestamp="8972567" timestamp2="8972567">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4284" _type="InsertStringCommand" date="Mon Apr 11 22:19:34 EDT 2022" starttimestamp="1649721002230" timestamp="8972567" timestamp2="8972567">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4285" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="8973389" />
  <Command __id="4286" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="8973486" />
  <Command __id="4287" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="8973507" />
  <Command __id="4288" _type="ShellCommand" date="Mon Apr 11 22:19:35 EDT 2022" starttimestamp="1649721002230" timestamp="8973638" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4290" _type="PauseCommand" date="Mon Apr 11 22:19:37 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="8975130">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1492]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4303" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintServerLauncherNoFactory.java" date="Mon Apr 11 22:19:56 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="8994745" type="Run" />
  <Command __id="4305" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintServerLauncherNoFactory.java" date="Mon Apr 11 22:19:56 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="8994745" type="Run" />
  <Command __id="4307" _type="PauseCommand" date="Mon Apr 11 22:20:05 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9003515">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[8770]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4306" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Apr 11 22:20:05 EDT 2022" starttimestamp="1649721002230" timestamp="9003515" />
  <Command __id="4308" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 22:20:05 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="9003604" type="Run" />
  <Command __id="4309" _type="ConsoleOutput" date="Mon Apr 11 22:20:06 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9004331" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"noooooo<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54125]"), Diff(INSERT,"Enter a line of input to be printed remotely¶Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4311" _type="PauseCommand" date="Mon Apr 11 22:20:20 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="9018438">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14107]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="4310" _type="ConsoleInput" date="Mon Apr 11 22:20:20 EDT 2022" starttimestamp="1649721002230" timestamp="9018438" type="Exception">
    <outputString><![CDATA[hi
]]></outputString>
  </Command>
  <Command __id="4312" _type="ConsoleOutput" date="Mon Apr 11 22:20:20 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9018499" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶"), Diff(DELETE,"Client Connect to Server¶")]]]></diff>
  </Command>
  <Command __id="4313" _type="ConsoleOutput" date="Mon Apr 11 22:20:20 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9018521" type="ConsoleOutput">
    <outputString><![CDATA[hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54541]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely"), Diff(INSERT,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54541]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4315" _type="PauseCommand" date="Mon Apr 11 22:20:33 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="9030828">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[12307]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4314" _type="MoveCaretCommand" caretOffset="3031" date="Mon Apr 11 22:20:33 EDT 2022" docOffset="3031" starttimestamp="1649721002230" timestamp="9030828" />
  <Command __id="4316" _type="MoveCaretCommand" caretOffset="3031" date="Mon Apr 11 22:20:33 EDT 2022" docOffset="3031" starttimestamp="1649721002230" timestamp="9030828" />
  <Command __id="4318" _type="InsertStringCommand" date="Mon Apr 11 22:20:33 EDT 2022" starttimestamp="1649721002230" timestamp="9031239" timestamp2="9031239">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4319" _type="InsertStringCommand" date="Mon Apr 11 22:20:33 EDT 2022" starttimestamp="1649721002230" timestamp="9031239" timestamp2="9031239">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4321" _type="InsertStringCommand" date="Mon Apr 11 22:20:33 EDT 2022" starttimestamp="1649721002230" timestamp="9031567" timestamp2="9031567">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4322" _type="InsertStringCommand" date="Mon Apr 11 22:20:33 EDT 2022" starttimestamp="1649721002230" timestamp="9031567" timestamp2="9031567">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4324" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:20:34 EDT 2022" starttimestamp="1649721002230" timestamp="9032246" />
  <Command __id="4325" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:20:34 EDT 2022" starttimestamp="1649721002230" timestamp="9032246" />
  <Command __id="4327" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:20:34 EDT 2022" starttimestamp="1649721002230" timestamp="9032662" />
  <Command __id="4328" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:20:34 EDT 2022" starttimestamp="1649721002230" timestamp="9032662" />
  <Command __id="4330" _type="InsertStringCommand" date="Mon Apr 11 22:20:35 EDT 2022" starttimestamp="1649721002230" timestamp="9033345" timestamp2="9033345">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4331" _type="InsertStringCommand" date="Mon Apr 11 22:20:35 EDT 2022" starttimestamp="1649721002230" timestamp="9033345" timestamp2="9033345">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4333" _type="PauseCommand" date="Mon Apr 11 22:20:49 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="9047211">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[13866]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4332" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:20:49 EDT 2022" starttimestamp="1649721002230" timestamp="9047211" />
  <Command __id="4334" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:20:49 EDT 2022" starttimestamp="1649721002230" timestamp="9047304" />
  <Command __id="4335" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:20:49 EDT 2022" starttimestamp="1649721002230" timestamp="9047326" />
  <DocumentChange __id="4235" _type="Insert" date="Mon Apr 11 22:19:27 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3218" docExpressionCount="341" docLength="3502" length="13" offset="2753" repeat="13" starttimestamp="1649721002230" timestamp="8965425" timestamp2="8968488">
    <text><![CDATA[SocketChannel]]></text>
  </DocumentChange>
  <DocumentChange __id="4282" _type="Insert" date="Mon Apr 11 22:19:34 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3219" docExpressionCount="341" docLength="3503" length="1" offset="2824" starttimestamp="1649721002230" timestamp="8972560">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="4317" _type="Insert" date="Mon Apr 11 22:20:33 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3222" docExpressionCount="341" docLength="3506" length="3" offset="3031" repeat="2" starttimestamp="1649721002230" timestamp="9031236" timestamp2="9031566">
    <text><![CDATA[			]]></text>
  </DocumentChange>
  <DocumentChange __id="4323" _type="Delete" date="Mon Apr 11 22:20:34 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3220" docExpressionCount="341" docLength="3504" endLine="84" length="2" offset="3032" repeat="2" startLine="84" starttimestamp="1649721002230" timestamp="9032240" timestamp2="9032657">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="4329" _type="Replace" date="Mon Apr 11 22:20:35 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3221" docExpressionCount="341" docLength="3505" endLine="84" insertionLength="2" int_docASTNodeCount="481" int_docActiveCodeLength="3219" int_docExpressionCount="341" int_docLength="3503" length="1" offset="3031" startLine="84" starttimestamp="1649721002230" timestamp="9033338">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[		]]></insertedText>
  </DocumentChange>
  <Command __id="4337" _type="PauseCommand" date="Mon Apr 11 22:20:52 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9050705">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3379]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="4336" _type="Insert" date="Mon Apr 11 22:20:52 EDT 2022" docASTNodeCount="485" docActiveCodeLength="3232" docExpressionCount="344" docLength="3516" length="11" offset="3033" repeat="11" starttimestamp="1649721002230" timestamp="9050705" timestamp2="9053174">
    <text><![CDATA[System.outl]]></text>
  </DocumentChange>
  <Command __id="4338" _type="InsertStringCommand" date="Mon Apr 11 22:20:52 EDT 2022" starttimestamp="1649721002230" timestamp="9050724" timestamp2="9050724">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4339" _type="InsertStringCommand" date="Mon Apr 11 22:20:52 EDT 2022" starttimestamp="1649721002230" timestamp="9050724" timestamp2="9050724">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4341" _type="InsertStringCommand" date="Mon Apr 11 22:20:53 EDT 2022" starttimestamp="1649721002230" timestamp="9050966" timestamp2="9050966">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="4342" _type="InsertStringCommand" date="Mon Apr 11 22:20:53 EDT 2022" starttimestamp="1649721002230" timestamp="9050966" timestamp2="9050966">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="4344" _type="InsertStringCommand" date="Mon Apr 11 22:20:53 EDT 2022" starttimestamp="1649721002230" timestamp="9051124" timestamp2="9051124">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4345" _type="InsertStringCommand" date="Mon Apr 11 22:20:53 EDT 2022" starttimestamp="1649721002230" timestamp="9051124" timestamp2="9051124">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4347" _type="InsertStringCommand" date="Mon Apr 11 22:20:53 EDT 2022" starttimestamp="1649721002230" timestamp="9051279" timestamp2="9051279">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4348" _type="InsertStringCommand" date="Mon Apr 11 22:20:53 EDT 2022" starttimestamp="1649721002230" timestamp="9051279" timestamp2="9051279">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4350" _type="InsertStringCommand" date="Mon Apr 11 22:20:54 EDT 2022" starttimestamp="1649721002230" timestamp="9051912" timestamp2="9051912">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4351" _type="InsertStringCommand" date="Mon Apr 11 22:20:54 EDT 2022" starttimestamp="1649721002230" timestamp="9051912" timestamp2="9051912">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4353" _type="InsertStringCommand" date="Mon Apr 11 22:20:54 EDT 2022" starttimestamp="1649721002230" timestamp="9052036" timestamp2="9052036">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4354" _type="InsertStringCommand" date="Mon Apr 11 22:20:54 EDT 2022" starttimestamp="1649721002230" timestamp="9052036" timestamp2="9052036">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4356" _type="InsertStringCommand" date="Mon Apr 11 22:20:54 EDT 2022" starttimestamp="1649721002230" timestamp="9052208" timestamp2="9052208">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4357" _type="InsertStringCommand" date="Mon Apr 11 22:20:54 EDT 2022" starttimestamp="1649721002230" timestamp="9052208" timestamp2="9052208">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4358" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 11 22:20:54 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="9052211" />
  <Command __id="4364" _type="PauseCommand" date="Mon Apr 11 22:20:55 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9053217">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1006]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4363" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 11 22:20:55 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="9053217" />
  <DocumentChange __id="4365" _type="Delete" date="Mon Apr 11 22:20:55 EDT 2022" docASTNodeCount="485" docActiveCodeLength="3231" docExpressionCount="344" docLength="3515" endLine="84" length="1" offset="3043" startLine="84" starttimestamp="1649721002230" timestamp="9053706">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="4366" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:20:55 EDT 2022" starttimestamp="1649721002230" timestamp="9053710" />
  <Command __id="4367" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:20:55 EDT 2022" starttimestamp="1649721002230" timestamp="9053710" />
  <Command __id="4369" _type="InsertStringCommand" date="Mon Apr 11 22:20:56 EDT 2022" starttimestamp="1649721002230" timestamp="9053974" timestamp2="9053974">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4370" _type="InsertStringCommand" date="Mon Apr 11 22:20:56 EDT 2022" starttimestamp="1649721002230" timestamp="9053974" timestamp2="9053974">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4371" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 11 22:20:56 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="9053978" />
  <Command __id="4382" _type="PauseCommand" date="Mon Apr 11 22:21:00 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9057888">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3910]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4381" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 11 22:21:00 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="9057888" />
  <Command __id="4385" _type="PauseCommand" date="Mon Apr 11 22:21:01 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9058905">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1017]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4384" _type="InsertStringCommand" date="Mon Apr 11 22:21:01 EDT 2022" starttimestamp="1649721002230" timestamp="9058905" timestamp2="9058905">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4386" _type="InsertStringCommand" date="Mon Apr 11 22:21:01 EDT 2022" starttimestamp="1649721002230" timestamp="9058905" timestamp2="9058905">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4388" _type="InsertStringCommand" date="Mon Apr 11 22:21:01 EDT 2022" starttimestamp="1649721002230" timestamp="9059215" timestamp2="9059215">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4389" _type="InsertStringCommand" date="Mon Apr 11 22:21:01 EDT 2022" starttimestamp="1649721002230" timestamp="9059215" timestamp2="9059215">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4391" _type="InsertStringCommand" date="Mon Apr 11 22:21:01 EDT 2022" starttimestamp="1649721002230" timestamp="9059310" timestamp2="9059310">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4392" _type="InsertStringCommand" date="Mon Apr 11 22:21:01 EDT 2022" starttimestamp="1649721002230" timestamp="9059310" timestamp2="9059310">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4394" _type="InsertStringCommand" date="Mon Apr 11 22:21:01 EDT 2022" starttimestamp="1649721002230" timestamp="9059576" timestamp2="9059576">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4395" _type="InsertStringCommand" date="Mon Apr 11 22:21:01 EDT 2022" starttimestamp="1649721002230" timestamp="9059576" timestamp2="9059576">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4397" _type="InsertStringCommand" date="Mon Apr 11 22:21:01 EDT 2022" starttimestamp="1649721002230" timestamp="9059710" timestamp2="9059710">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4398" _type="InsertStringCommand" date="Mon Apr 11 22:21:01 EDT 2022" starttimestamp="1649721002230" timestamp="9059710" timestamp2="9059710">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4400" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9059799" timestamp2="9059799">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4401" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9059799" timestamp2="9059799">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4403" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9059965" timestamp2="9059965">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4404" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9059965" timestamp2="9059965">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4406" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060112" timestamp2="9060112">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4407" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060112" timestamp2="9060112">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4409" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060206" timestamp2="9060206">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4410" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060206" timestamp2="9060206">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4412" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060251" timestamp2="9060251">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4413" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060252" timestamp2="9060252">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4415" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060438" timestamp2="9060438">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4416" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060438" timestamp2="9060438">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4418" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060581" timestamp2="9060581">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4419" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060581" timestamp2="9060581">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4421" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060697" timestamp2="9060697">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4422" _type="InsertStringCommand" date="Mon Apr 11 22:21:02 EDT 2022" starttimestamp="1649721002230" timestamp="9060697" timestamp2="9060697">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4424" _type="InsertStringCommand" date="Mon Apr 11 22:21:03 EDT 2022" starttimestamp="1649721002230" timestamp="9060792" timestamp2="9060792">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4425" _type="InsertStringCommand" date="Mon Apr 11 22:21:03 EDT 2022" starttimestamp="1649721002230" timestamp="9060792" timestamp2="9060792">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4427" _type="InsertStringCommand" date="Mon Apr 11 22:21:03 EDT 2022" starttimestamp="1649721002230" timestamp="9060874" timestamp2="9060874">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4428" _type="InsertStringCommand" date="Mon Apr 11 22:21:03 EDT 2022" starttimestamp="1649721002230" timestamp="9060874" timestamp2="9060874">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="4368" _type="Insert" date="Mon Apr 11 22:20:56 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3258" docExpressionCount="347" docLength="3542" length="27" offset="3043" repeat="25" starttimestamp="1649721002230" timestamp="9053966" timestamp2="9060870">
    <text><![CDATA[.println("server channel ")]]></text>
  </DocumentChange>
  <Command __id="4430" _type="PauseCommand" date="Mon Apr 11 22:21:33 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="9091170">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[30296]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4431" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:33 EDT 2022" starttimestamp="1649721002230" timestamp="9091175" />
  <Command __id="4432" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:33 EDT 2022" starttimestamp="1649721002230" timestamp="9091175" />
  <Command __id="4434" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:33 EDT 2022" starttimestamp="1649721002230" timestamp="9091683" />
  <Command __id="4435" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:33 EDT 2022" starttimestamp="1649721002230" timestamp="9091683" />
  <Command __id="4437" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:33 EDT 2022" starttimestamp="1649721002230" timestamp="9091712" />
  <Command __id="4438" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:33 EDT 2022" starttimestamp="1649721002230" timestamp="9091712" />
  <Command __id="4440" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:33 EDT 2022" starttimestamp="1649721002230" timestamp="9091743" />
  <Command __id="4441" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:33 EDT 2022" starttimestamp="1649721002230" timestamp="9091743" />
  <Command __id="4443" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091775" />
  <Command __id="4444" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091775" />
  <Command __id="4446" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091805" />
  <Command __id="4447" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091805" />
  <Command __id="4449" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091833" />
  <Command __id="4450" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091833" />
  <Command __id="4452" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091863" />
  <Command __id="4453" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091863" />
  <Command __id="4455" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091895" />
  <Command __id="4456" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091895" />
  <Command __id="4458" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091925" />
  <Command __id="4459" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091925" />
  <Command __id="4461" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091956" />
  <Command __id="4462" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9091956" />
  <Command __id="4464" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9092119" />
  <Command __id="4465" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9092119" />
  <Command __id="4467" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9092275" />
  <Command __id="4468" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9092275" />
  <Command __id="4470" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9092428" />
  <Command __id="4471" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9092428" />
  <Command __id="4473" _type="InsertStringCommand" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9092668" timestamp2="9092668">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4474" _type="InsertStringCommand" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9092668" timestamp2="9092668">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4476" _type="InsertStringCommand" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9092761" timestamp2="9092761">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4477" _type="InsertStringCommand" date="Mon Apr 11 22:21:34 EDT 2022" starttimestamp="1649721002230" timestamp="9092761" timestamp2="9092761">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4479" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:35 EDT 2022" starttimestamp="1649721002230" timestamp="9093076" />
  <Command __id="4480" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:35 EDT 2022" starttimestamp="1649721002230" timestamp="9093076" />
  <Command __id="4482" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:35 EDT 2022" starttimestamp="1649721002230" timestamp="9093246" />
  <Command __id="4483" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:35 EDT 2022" starttimestamp="1649721002230" timestamp="9093246" />
  <Command __id="4485" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:35 EDT 2022" starttimestamp="1649721002230" timestamp="9093392" />
  <Command __id="4486" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:35 EDT 2022" starttimestamp="1649721002230" timestamp="9093392" />
  <Command __id="4488" _type="InsertStringCommand" date="Mon Apr 11 22:21:35 EDT 2022" starttimestamp="1649721002230" timestamp="9093530" timestamp2="9093530">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4489" _type="InsertStringCommand" date="Mon Apr 11 22:21:35 EDT 2022" starttimestamp="1649721002230" timestamp="9093530" timestamp2="9093530">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4491" _type="InsertStringCommand" date="Mon Apr 11 22:21:35 EDT 2022" starttimestamp="1649721002230" timestamp="9093696" timestamp2="9093696">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4492" _type="InsertStringCommand" date="Mon Apr 11 22:21:35 EDT 2022" starttimestamp="1649721002230" timestamp="9093696" timestamp2="9093696">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4494" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9093825" timestamp2="9093825">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4495" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9093825" timestamp2="9093825">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4497" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9093909" timestamp2="9093909">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4498" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9093909" timestamp2="9093909">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4500" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094036" timestamp2="9094036">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4501" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094036" timestamp2="9094036">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4503" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094135" timestamp2="9094135">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4504" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094136" timestamp2="9094136">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4506" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094226" timestamp2="9094226">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4507" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094226" timestamp2="9094226">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4509" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094393" timestamp2="9094393">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4510" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094393" timestamp2="9094393">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4512" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094491" timestamp2="9094491">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4513" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094491" timestamp2="9094491">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4515" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094542" timestamp2="9094542">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4516" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094542" timestamp2="9094542">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4518" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094739" timestamp2="9094739">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4519" _type="InsertStringCommand" date="Mon Apr 11 22:21:36 EDT 2022" starttimestamp="1649721002230" timestamp="9094739" timestamp2="9094739">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4521" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9094860" timestamp2="9094860">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4522" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9094860" timestamp2="9094860">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4524" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095009" timestamp2="9095009">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4525" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095009" timestamp2="9095009">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4527" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095084" timestamp2="9095084">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4528" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095084" timestamp2="9095084">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4530" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095193" timestamp2="9095193">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4531" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095193" timestamp2="9095193">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4533" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095495" timestamp2="9095495">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4534" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095495" timestamp2="9095495">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4536" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095575" timestamp2="9095575">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4537" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095575" timestamp2="9095575">
    <data><![CDATA[a]]></data>
  </Command>
  <DocumentChange __id="4429" _type="Delete" date="Mon Apr 11 22:21:33 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3244" docExpressionCount="347" docLength="3528" endLine="84" length="14" offset="3054" repeat="14" startLine="84" starttimestamp="1649721002230" timestamp="9091170" timestamp2="9092425">
    <text><![CDATA[erver channel ]]></text>
  </DocumentChange>
  <DocumentChange __id="4472" _type="Insert" date="Mon Apr 11 22:21:34 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3246" docExpressionCount="347" docLength="3530" length="2" offset="3054" repeat="2" starttimestamp="1649721002230" timestamp="9092664" timestamp2="9092758">
    <text><![CDATA[cl]]></text>
  </DocumentChange>
  <DocumentChange __id="4478" _type="Delete" date="Mon Apr 11 22:21:35 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3243" docExpressionCount="347" docLength="3527" endLine="84" length="3" offset="3053" repeat="3" startLine="84" starttimestamp="1649721002230" timestamp="9093073" timestamp2="9093390">
    <text><![CDATA[scl]]></text>
  </DocumentChange>
  <Command __id="4539" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095676" timestamp2="9095676">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4540" _type="InsertStringCommand" date="Mon Apr 11 22:21:37 EDT 2022" starttimestamp="1649721002230" timestamp="9095676" timestamp2="9095676">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4542" _type="InsertStringCommand" date="Mon Apr 11 22:21:38 EDT 2022" starttimestamp="1649721002230" timestamp="9095871" timestamp2="9095871">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4543" _type="InsertStringCommand" date="Mon Apr 11 22:21:38 EDT 2022" starttimestamp="1649721002230" timestamp="9095871" timestamp2="9095871">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4546" _type="PauseCommand" date="Mon Apr 11 22:21:39 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9097211">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1340]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4545" _type="InsertStringCommand" date="Mon Apr 11 22:21:39 EDT 2022" starttimestamp="1649721002230" timestamp="9097211" timestamp2="9097211">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="4547" _type="InsertStringCommand" date="Mon Apr 11 22:21:39 EDT 2022" starttimestamp="1649721002230" timestamp="9097211" timestamp2="9097211">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="4549" _type="InsertStringCommand" date="Mon Apr 11 22:21:39 EDT 2022" starttimestamp="1649721002230" timestamp="9097321" timestamp2="9097321">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4550" _type="InsertStringCommand" date="Mon Apr 11 22:21:39 EDT 2022" starttimestamp="1649721002230" timestamp="9097321" timestamp2="9097321">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4552" _type="InsertStringCommand" date="Mon Apr 11 22:21:39 EDT 2022" starttimestamp="1649721002230" timestamp="9097428" timestamp2="9097428">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4553" _type="InsertStringCommand" date="Mon Apr 11 22:21:39 EDT 2022" starttimestamp="1649721002230" timestamp="9097428" timestamp2="9097428">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4555" _type="InsertStringCommand" date="Mon Apr 11 22:21:39 EDT 2022" starttimestamp="1649721002230" timestamp="9097544" timestamp2="9097544">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4556" _type="InsertStringCommand" date="Mon Apr 11 22:21:39 EDT 2022" starttimestamp="1649721002230" timestamp="9097544" timestamp2="9097544">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4558" _type="InsertStringCommand" date="Mon Apr 11 22:21:39 EDT 2022" starttimestamp="1649721002230" timestamp="9097673" timestamp2="9097673">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4559" _type="InsertStringCommand" date="Mon Apr 11 22:21:39 EDT 2022" starttimestamp="1649721002230" timestamp="9097673" timestamp2="9097673">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4561" _type="InsertStringCommand" date="Mon Apr 11 22:21:40 EDT 2022" starttimestamp="1649721002230" timestamp="9097842" timestamp2="9097842">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4562" _type="InsertStringCommand" date="Mon Apr 11 22:21:40 EDT 2022" starttimestamp="1649721002230" timestamp="9097842" timestamp2="9097842">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4564" _type="InsertStringCommand" date="Mon Apr 11 22:21:40 EDT 2022" starttimestamp="1649721002230" timestamp="9097935" timestamp2="9097935">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4565" _type="InsertStringCommand" date="Mon Apr 11 22:21:40 EDT 2022" starttimestamp="1649721002230" timestamp="9097935" timestamp2="9097935">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4567" _type="PauseCommand" date="Mon Apr 11 22:21:41 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9099004">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1069]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4566" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:21:41 EDT 2022" starttimestamp="1649721002230" timestamp="9099004" />
  <Command __id="4568" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:21:41 EDT 2022" starttimestamp="1649721002230" timestamp="9099005" />
  <Command __id="4570" _type="InsertStringCommand" date="Mon Apr 11 22:21:41 EDT 2022" starttimestamp="1649721002230" timestamp="9099328" timestamp2="9099328">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4571" _type="InsertStringCommand" date="Mon Apr 11 22:21:41 EDT 2022" starttimestamp="1649721002230" timestamp="9099328" timestamp2="9099328">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4572" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.goto.lineStart" date="Mon Apr 11 22:21:42 EDT 2022" starttimestamp="1649721002230" timestamp="9100158" />
  <Command __id="4574" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:42 EDT 2022" starttimestamp="1649721002230" timestamp="9100464" />
  <Command __id="4575" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:42 EDT 2022" starttimestamp="1649721002230" timestamp="9100464" />
  <DocumentChange __id="4487" _type="Insert" date="Mon Apr 11 22:21:35 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3269" docExpressionCount="347" docLength="3553" length="26" offset="3053" repeat="26" starttimestamp="1649721002230" timestamp="9093528" timestamp2="9097932">
    <text><![CDATA[client channel has written]]></text>
  </DocumentChange>
  <DocumentChange __id="4569" _type="Insert" date="Mon Apr 11 22:21:41 EDT 2022" docASTNodeCount="487" docActiveCodeLength="3270" docExpressionCount="346" docLength="3554" length="1" offset="3080" starttimestamp="1649721002230" timestamp="9099322">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="4573" _type="Delete" date="Mon Apr 11 22:21:42 EDT 2022" docASTNodeCount="489" docActiveCodeLength="3269" docExpressionCount="348" docLength="3553" endLine="84" length="1" offset="3051" startLine="84" starttimestamp="1649721002230" timestamp="9100461">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <Command __id="4577" _type="PauseCommand" date="Mon Apr 11 22:21:43 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9101711">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1247]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4578" _type="InsertStringCommand" date="Mon Apr 11 22:21:43 EDT 2022" starttimestamp="1649721002230" timestamp="9101722" timestamp2="9101722">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4579" _type="InsertStringCommand" date="Mon Apr 11 22:21:43 EDT 2022" starttimestamp="1649721002230" timestamp="9101722" timestamp2="9101722">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4581" _type="PauseCommand" date="Mon Apr 11 22:21:45 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9103302">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1580]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4580" _type="MoveCaretCommand" caretOffset="3082" date="Mon Apr 11 22:21:45 EDT 2022" docOffset="3082" starttimestamp="1649721002230" timestamp="9103302" />
  <Command __id="4582" _type="MoveCaretCommand" caretOffset="3082" date="Mon Apr 11 22:21:45 EDT 2022" docOffset="3082" starttimestamp="1649721002230" timestamp="9103302" />
  <Command __id="4583" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:21:45 EDT 2022" starttimestamp="1649721002230" timestamp="9103766" />
  <Command __id="4584" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:21:45 EDT 2022" starttimestamp="1649721002230" timestamp="9103766" />
  <Command __id="4586" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:46 EDT 2022" starttimestamp="1649721002230" timestamp="9104039" />
  <Command __id="4587" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:21:46 EDT 2022" starttimestamp="1649721002230" timestamp="9104039" />
  <Command __id="4588" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:21:46 EDT 2022" starttimestamp="1649721002230" timestamp="9104355" />
  <Command __id="4589" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:21:46 EDT 2022" starttimestamp="1649721002230" timestamp="9104355" />
  <Command __id="4591" _type="InsertStringCommand" date="Mon Apr 11 22:21:47 EDT 2022" starttimestamp="1649721002230" timestamp="9104861" timestamp2="9104861">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4592" _type="InsertStringCommand" date="Mon Apr 11 22:21:47 EDT 2022" starttimestamp="1649721002230" timestamp="9104861" timestamp2="9104861">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4594" _type="PauseCommand" date="Mon Apr 11 22:21:48 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9106027">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1166]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4617" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 22:22:13 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="9130977" type="Run" />
  <Command __id="4619" _type="ConsoleOutput" date="Mon Apr 11 22:22:13 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9131661" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶Client Connect to Server¶")]]]></diff>
  </Command>
  <Command __id="4621" _type="PauseCommand" date="Mon Apr 11 22:22:21 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9138985">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7324]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="4620" _type="ConsoleInput" date="Mon Apr 11 22:22:21 EDT 2022" starttimestamp="1649721002230" timestamp="9138985" type="Exception">
    <outputString><![CDATA[hi
]]></outputString>
  </Command>
  <Command __id="4622" _type="ConsoleOutput" date="Mon Apr 11 22:22:21 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9139051" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶"), Diff(DELETE,"C"), Diff(INSERT,"c"), Diff(EQUAL,"lient "), Diff(DELETE,"Connect to Server"), Diff(INSERT,"channel has written"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4623" _type="ConsoleOutput" date="Mon Apr 11 22:22:21 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9139057" type="ConsoleOutput">
    <outputString><![CDATA[hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54564]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶client channel has written"), Diff(INSERT,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54564]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4625" _type="PauseCommand" date="Mon Apr 11 22:22:30 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9148648">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9591]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4624" _type="MoveCaretCommand" caretOffset="3079" date="Mon Apr 11 22:22:30 EDT 2022" docOffset="3079" starttimestamp="1649721002230" timestamp="9148648" />
  <Command __id="4626" _type="MoveCaretCommand" caretOffset="3079" date="Mon Apr 11 22:22:30 EDT 2022" docOffset="3079" starttimestamp="1649721002230" timestamp="9148648" />
  <DocumentChange __id="4576" _type="Insert" date="Mon Apr 11 22:21:43 EDT 2022" docASTNodeCount="487" docActiveCodeLength="3270" docExpressionCount="346" docLength="3554" length="1" offset="3051" starttimestamp="1649721002230" timestamp="9101711">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <DocumentChange __id="4585" _type="Delete" date="Mon Apr 11 22:21:46 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3269" docExpressionCount="347" docLength="3553" endLine="84" length="1" offset="3080" startLine="84" starttimestamp="1649721002230" timestamp="9104034">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="4590" _type="Insert" date="Mon Apr 11 22:21:47 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" length="1" offset="3081" starttimestamp="1649721002230" timestamp="9104855">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="4628" _type="PauseCommand" date="Mon Apr 11 22:22:58 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="9175949">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[27301]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="4627" _type="Insert" date="Mon Apr 11 22:22:58 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3272" docExpressionCount="347" docLength="3556" length="2" offset="3079" repeat="2" starttimestamp="1649721002230" timestamp="9175949" timestamp2="9176726">
    <text><![CDATA[: ]]></text>
  </DocumentChange>
  <Command __id="4629" _type="InsertStringCommand" date="Mon Apr 11 22:22:58 EDT 2022" starttimestamp="1649721002230" timestamp="9175955" timestamp2="9175955">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="4630" _type="InsertStringCommand" date="Mon Apr 11 22:22:58 EDT 2022" starttimestamp="1649721002230" timestamp="9175955" timestamp2="9175955">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="4632" _type="InsertStringCommand" date="Mon Apr 11 22:22:58 EDT 2022" starttimestamp="1649721002230" timestamp="9176737" timestamp2="9176737">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4633" _type="InsertStringCommand" date="Mon Apr 11 22:22:58 EDT 2022" starttimestamp="1649721002230" timestamp="9176737" timestamp2="9176737">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4634" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:22:59 EDT 2022" starttimestamp="1649721002230" timestamp="9177265" />
  <Command __id="4635" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:22:59 EDT 2022" starttimestamp="1649721002230" timestamp="9177265" />
  <Command __id="4637" _type="InsertStringCommand" date="Mon Apr 11 22:23:00 EDT 2022" starttimestamp="1649721002230" timestamp="9177999" timestamp2="9177999">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="4638" _type="InsertStringCommand" date="Mon Apr 11 22:23:00 EDT 2022" starttimestamp="1649721002230" timestamp="9177999" timestamp2="9177999">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="4640" _type="InsertStringCommand" date="Mon Apr 11 22:23:00 EDT 2022" starttimestamp="1649721002230" timestamp="9178123" timestamp2="9178123">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4641" _type="InsertStringCommand" date="Mon Apr 11 22:23:00 EDT 2022" starttimestamp="1649721002230" timestamp="9178123" timestamp2="9178123">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="4636" _type="Insert" date="Mon Apr 11 22:23:00 EDT 2022" docASTNodeCount="489" docActiveCodeLength="3274" docExpressionCount="348" docLength="3558" length="2" offset="3082" repeat="2" starttimestamp="1649721002230" timestamp="9177991" timestamp2="9178120">
    <text><![CDATA[, ]]></text>
  </DocumentChange>
  <Command __id="4643" _type="PauseCommand" date="Mon Apr 11 22:23:03 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9181403">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3280]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="4642" _type="Insert" date="Mon Apr 11 22:23:03 EDT 2022" docASTNodeCount="489" docActiveCodeLength="3276" docExpressionCount="348" docLength="3560" length="2" offset="3084" starttimestamp="1649721002230" timestamp="9181403">
    <text><![CDATA[""]]></text>
  </DocumentChange>
  <Command __id="4644" _type="InsertStringCommand" date="Mon Apr 11 22:23:03 EDT 2022" starttimestamp="1649721002230" timestamp="9181409" timestamp2="9181409">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4645" _type="InsertStringCommand" date="Mon Apr 11 22:23:03 EDT 2022" starttimestamp="1649721002230" timestamp="9181409" timestamp2="9181409">
    <data><![CDATA["]]></data>
  </Command>
  <DocumentChange __id="4646" _type="Delete" date="Mon Apr 11 22:23:04 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3272" docExpressionCount="347" docLength="3556" endLine="84" length="4" offset="3082" repeat="4" startLine="84" starttimestamp="1649721002230" timestamp="9181870" timestamp2="9182804">
    <text><![CDATA[, ""]]></text>
  </DocumentChange>
  <Command __id="4648" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:23:04 EDT 2022" starttimestamp="1649721002230" timestamp="9181881" />
  <Command __id="4649" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:23:04 EDT 2022" starttimestamp="1649721002230" timestamp="9181881" />
  <Command __id="4651" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:23:04 EDT 2022" starttimestamp="1649721002230" timestamp="9182618" />
  <Command __id="4652" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:23:04 EDT 2022" starttimestamp="1649721002230" timestamp="9182619" />
  <Command __id="4654" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:23:05 EDT 2022" starttimestamp="1649721002230" timestamp="9182808" />
  <Command __id="4655" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:23:05 EDT 2022" starttimestamp="1649721002230" timestamp="9182808" />
  <Command __id="4656" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:23:05 EDT 2022" starttimestamp="1649721002230" timestamp="9183737" />
  <Command __id="4657" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:23:05 EDT 2022" starttimestamp="1649721002230" timestamp="9183737" />
  <Command __id="4659" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:23:06 EDT 2022" starttimestamp="1649721002230" timestamp="9184062" />
  <Command __id="4660" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:23:06 EDT 2022" starttimestamp="1649721002230" timestamp="9184062" />
  <Command __id="4662" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:23:06 EDT 2022" starttimestamp="1649721002230" timestamp="9184219" />
  <Command __id="4663" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:23:06 EDT 2022" starttimestamp="1649721002230" timestamp="9184219" />
  <Command __id="4664" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:23:07 EDT 2022" starttimestamp="1649721002230" timestamp="9184915" />
  <Command __id="4665" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:23:07 EDT 2022" starttimestamp="1649721002230" timestamp="9185012" />
  <Command __id="4666" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:23:07 EDT 2022" starttimestamp="1649721002230" timestamp="9185043" />
  <Command __id="4668" _type="PauseCommand" date="Mon Apr 11 22:23:09 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9186983">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1940]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4667" _type="ShellCommand" date="Mon Apr 11 22:23:09 EDT 2022" starttimestamp="1649721002230" timestamp="9186983" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4670" _type="PauseCommand" date="Mon Apr 11 22:24:04 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="9242727">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[55744]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4669" _type="ShellCommand" date="Mon Apr 11 22:24:04 EDT 2022" starttimestamp="1649721002230" timestamp="9242727" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4672" _type="SelectTextCommand" caretOffset="2407" date="Mon Apr 11 22:24:05 EDT 2022" end="2559" start="2407" starttimestamp="1649721002230" timestamp="9242894" />
  <DocumentChange __id="4658" _type="Delete" date="Mon Apr 11 22:23:06 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" endLine="84" length="2" offset="3079" repeat="2" startLine="84" starttimestamp="1649721002230" timestamp="9184058" timestamp2="9184216">
    <text><![CDATA[: ]]></text>
  </DocumentChange>
  <Command __id="4671" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:24:05 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2776" projectName="A6" starttimestamp="1649721002230" timestamp="9242801">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4674" _type="PauseCommand" date="Mon Apr 11 22:24:10 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9247863">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4969]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4675" _type="MoveCaretCommand" caretOffset="3079" date="Mon Apr 11 22:24:10 EDT 2022" docOffset="3079" starttimestamp="1649721002230" timestamp="9247956" />
  <Command __id="4677" _type="PauseCommand" date="Mon Apr 11 22:24:25 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="9263353">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[15397]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4676" _type="SelectTextCommand" caretOffset="2116" date="Mon Apr 11 22:24:25 EDT 2022" end="2169" start="2116" starttimestamp="1649721002230" timestamp="9263353" />
  <Command __id="4678" _type="SelectTextCommand" caretOffset="2116" date="Mon Apr 11 22:24:25 EDT 2022" end="2169" start="2116" starttimestamp="1649721002230" timestamp="9263353" />
  <Command __id="4679" _type="CopyCommand" date="Mon Apr 11 22:24:25 EDT 2022" starttimestamp="1649721002230" timestamp="9263598" />
  <Command __id="4681" _type="SelectTextCommand" caretOffset="2407" date="Mon Apr 11 22:24:26 EDT 2022" end="2559" start="2407" starttimestamp="1649721002230" timestamp="9264457" />
  <Command __id="4683" _type="PauseCommand" date="Mon Apr 11 22:24:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9265945">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1488]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4682" _type="MoveCaretCommand" caretOffset="2762" date="Mon Apr 11 22:24:28 EDT 2022" docOffset="2762" starttimestamp="1649721002230" timestamp="9265945" />
  <Command __id="4684" _type="MoveCaretCommand" caretOffset="2762" date="Mon Apr 11 22:24:28 EDT 2022" docOffset="2762" starttimestamp="1649721002230" timestamp="9265945" />
  <Command __id="4686" _type="InsertStringCommand" date="Mon Apr 11 22:24:28 EDT 2022" starttimestamp="1649721002230" timestamp="9266238" timestamp2="9266238">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4687" _type="InsertStringCommand" date="Mon Apr 11 22:24:28 EDT 2022" starttimestamp="1649721002230" timestamp="9266238" timestamp2="9266238">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4689" _type="InsertStringCommand" date="Mon Apr 11 22:24:28 EDT 2022" starttimestamp="1649721002230" timestamp="9266404" timestamp2="9266404">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4690" _type="InsertStringCommand" date="Mon Apr 11 22:24:28 EDT 2022" starttimestamp="1649721002230" timestamp="9266404" timestamp2="9266404">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4692" _type="PasteCommand" date="Mon Apr 11 22:24:28 EDT 2022" starttimestamp="1649721002230" timestamp="9266620" />
  <Command __id="4694" _type="PauseCommand" date="Mon Apr 11 22:24:31 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9269598">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2978]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4693" _type="MoveCaretCommand" caretOffset="2787" date="Mon Apr 11 22:24:31 EDT 2022" docOffset="2787" starttimestamp="1649721002230" timestamp="9269598" />
  <Command __id="4695" _type="MoveCaretCommand" caretOffset="2787" date="Mon Apr 11 22:24:31 EDT 2022" docOffset="2787" starttimestamp="1649721002230" timestamp="9269598" />
  <Command __id="4697" _type="InsertStringCommand" date="Mon Apr 11 22:24:32 EDT 2022" starttimestamp="1649721002230" timestamp="9270242" timestamp2="9270242">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4698" _type="InsertStringCommand" date="Mon Apr 11 22:24:32 EDT 2022" starttimestamp="1649721002230" timestamp="9270242" timestamp2="9270242">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4700" _type="PauseCommand" date="Mon Apr 11 22:24:39 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9276996">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6754]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4699" _type="SelectTextCommand" caretOffset="2804" date="Mon Apr 11 22:24:39 EDT 2022" end="2809" start="2804" starttimestamp="1649721002230" timestamp="9276996" />
  <Command __id="4701" _type="SelectTextCommand" caretOffset="2804" date="Mon Apr 11 22:24:39 EDT 2022" end="2809" start="2804" starttimestamp="1649721002230" timestamp="9276997" />
  <Command __id="4703" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:24:39 EDT 2022" starttimestamp="1649721002230" timestamp="9277348" />
  <Command __id="4704" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:24:39 EDT 2022" starttimestamp="1649721002230" timestamp="9277348" />
  <Command __id="4706" _type="PauseCommand" date="Mon Apr 11 22:24:42 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9280216">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2868]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4705" _type="MoveCaretCommand" caretOffset="2766" date="Mon Apr 11 22:24:42 EDT 2022" docOffset="2766" starttimestamp="1649721002230" timestamp="9280216" />
  <Command __id="4707" _type="MoveCaretCommand" caretOffset="2766" date="Mon Apr 11 22:24:42 EDT 2022" docOffset="2766" starttimestamp="1649721002230" timestamp="9280216" />
  <Command __id="4709" _type="PauseCommand" date="Mon Apr 11 22:24:43 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9281345">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1129]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4708" _type="MoveCaretCommand" caretOffset="2789" date="Mon Apr 11 22:24:43 EDT 2022" docOffset="2789" starttimestamp="1649721002230" timestamp="9281345" />
  <Command __id="4710" _type="MoveCaretCommand" caretOffset="2789" date="Mon Apr 11 22:24:43 EDT 2022" docOffset="2789" starttimestamp="1649721002230" timestamp="9281345" />
  <Command __id="4712" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:24:43 EDT 2022" starttimestamp="1649721002230" timestamp="9281589" />
  <Command __id="4713" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:24:43 EDT 2022" starttimestamp="1649721002230" timestamp="9281589" />
  <Command __id="4715" _type="InsertStringCommand" date="Mon Apr 11 22:24:44 EDT 2022" starttimestamp="1649721002230" timestamp="9281857" timestamp2="9281857">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4716" _type="InsertStringCommand" date="Mon Apr 11 22:24:44 EDT 2022" starttimestamp="1649721002230" timestamp="9281857" timestamp2="9281857">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4718" _type="PauseCommand" date="Mon Apr 11 22:24:45 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9283193">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1336]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4717" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:24:45 EDT 2022" starttimestamp="1649721002230" timestamp="9283193" />
  <Command __id="4719" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:24:45 EDT 2022" starttimestamp="1649721002230" timestamp="9283289" />
  <Command __id="4720" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:24:45 EDT 2022" starttimestamp="1649721002230" timestamp="9283310" />
  <Command __id="4673" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:24:10 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" projectName="A6" starttimestamp="1649721002230" timestamp="9247863">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶"), Diff(INSERT,"		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");"), Diff(EQUAL,"¶"), Diff(DELETE,""), Diff(EQUAL,"	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶"), Diff(INSERT,"		System.out.println("client channel has written");"), Diff(EQUAL,"¶"), Diff(DELETE,""), Diff(EQUAL,"	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶"), Diff(DELETE,""), Diff(EQUAL,"		// TODO Auto-generated method stub¶		"), Diff(INSERT,"String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		"), Diff(EQUAL,"¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					0, // do not allow any incoming messages
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception e) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {
		System.out.println("client channel has written");
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		String aMessageString = new String(arg1.array(), arg1.position(),
				arg2);
		System.out.println(aMessageString + "<--" + arg0);
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(arg1, this);
		
	}

}]]></snapshot>
  </Command>
  <Command __id="4680" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:24:26 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2367" docExpressionCount="243" docLength="2776" projectName="A6" starttimestamp="1649721002230" timestamp="9264375">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="4685" _type="Insert" date="Mon Apr 11 22:24:28 EDT 2022" docASTNodeCount="330" docActiveCodeLength="2375" docExpressionCount="243" docLength="2784" length="8" offset="2762" repeat="2" starttimestamp="1649721002230" timestamp="9266225" timestamp2="9266395">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="4691" _type="Replace" date="Mon Apr 11 22:24:28 EDT 2022" docASTNodeCount="337" docActiveCodeLength="2428" docExpressionCount="249" docLength="2837" endLine="67" insertionLength="55" int_docASTNodeCount="330" int_docActiveCodeLength="2373" int_docExpressionCount="243" int_docLength="2782" length="2" offset="2768" startLine="67" starttimestamp="1649721002230" timestamp="9266614">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		nioManager.write(socketChannel, aWriteMessage, this);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4696" _type="Insert" date="Mon Apr 11 22:24:32 EDT 2022" docASTNodeCount="337" docActiveCodeLength="2429" docExpressionCount="249" docLength="2838" length="1" offset="2787" starttimestamp="1649721002230" timestamp="9270233">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="4702" _type="Delete" date="Mon Apr 11 22:24:39 EDT 2022" docASTNodeCount="337" docActiveCodeLength="2424" docExpressionCount="249" docLength="2833" endLine="67" length="5" offset="2804" startLine="67" starttimestamp="1649721002230" timestamp="9277342">
    <text><![CDATA[Write]]></text>
  </DocumentChange>
  <DocumentChange __id="4711" _type="Delete" date="Mon Apr 11 22:24:43 EDT 2022" docASTNodeCount="337" docActiveCodeLength="2423" docExpressionCount="249" docLength="2832" endLine="67" length="1" offset="2788" startLine="67" starttimestamp="1649721002230" timestamp="9281587">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="4714" _type="Insert" date="Mon Apr 11 22:24:44 EDT 2022" docASTNodeCount="337" docActiveCodeLength="2424" docExpressionCount="249" docLength="2833" length="1" offset="2788" starttimestamp="1649721002230" timestamp="9281851">
    <text><![CDATA[S]]></text>
  </DocumentChange>
  <Command __id="4722" _type="PauseCommand" date="Mon Apr 11 22:24:56 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="9294739">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11429]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4723" _type="SelectTextCommand" caretOffset="2116" date="Mon Apr 11 22:24:57 EDT 2022" end="2169" start="2116" starttimestamp="1649721002230" timestamp="9294844" />
  <Command __id="4721" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:24:56 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" projectName="A6" starttimestamp="1649721002230" timestamp="9294739">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="4725" _type="PauseCommand" date="Mon Apr 11 22:25:19 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="9317694">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[22849]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4726" _type="MoveCaretCommand" caretOffset="2789" date="Mon Apr 11 22:25:20 EDT 2022" docOffset="2789" starttimestamp="1649721002230" timestamp="9317774" />
  <Command __id="4728" _type="PauseCommand" date="Mon Apr 11 22:25:38 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="9336155">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[18381]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4727" _type="MoveCaretCommand" caretOffset="2563" date="Mon Apr 11 22:25:38 EDT 2022" docOffset="2563" starttimestamp="1649721002230" timestamp="9336155" />
  <Command __id="4729" _type="MoveCaretCommand" caretOffset="2563" date="Mon Apr 11 22:25:38 EDT 2022" docOffset="2563" starttimestamp="1649721002230" timestamp="9336155" />
  <Command __id="4724" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:25:19 EDT 2022" docASTNodeCount="337" docActiveCodeLength="2424" docExpressionCount="249" docLength="2833" projectName="A6" starttimestamp="1649721002230" timestamp="9317693">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶	"), Diff(INSERT,"	¶		nioManager.write(aSocketChannel, aMessage, this);¶	"), Diff(EQUAL,"}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;


import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}
//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}
	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		
			nioManager.enableListenableAccepts(aServerFactoryChannel,
					SelectionKey.OP_READ, // allow incoming writes that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}		
	}
	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		//TODO want to save aSocketChannel
	}
	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);
		
		//TODO echo the message right back to the same client
		//Turn of the servers reading ability
		//nioManager.write(socketChannel, aWriteMessage, this);
		//turn on the client's reading ability
		
		nioManager.write(aSocketChannel, aMessage, this);
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="4731" _type="PauseCommand" date="Mon Apr 11 22:25:56 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="9354372">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[18217]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4732" _type="SelectTextCommand" caretOffset="141" date="Mon Apr 11 22:25:56 EDT 2022" end="195" start="141" starttimestamp="1649721002230" timestamp="9354548" />
  <Command __id="4730" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:25:56 EDT 2022" docASTNodeCount="30" docActiveCodeLength="269" docExpressionCount="22" docLength="269" projectName="A6" starttimestamp="1649721002230" timestamp="9354372">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\NIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶¶public interface NIOManagerPrintServer extends SocketChannelAcceptListener, SocketChannelReadListener {¶¶}")]]]></diff>
  </Command>
  <Command __id="4734" _type="PauseCommand" date="Mon Apr 11 22:26:05 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9363219">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[8671]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4735" _type="SelectTextCommand" caretOffset="2116" date="Mon Apr 11 22:26:05 EDT 2022" end="2169" start="2116" starttimestamp="1649721002230" timestamp="9363404" />
  <Command __id="4737" _type="PauseCommand" date="Mon Apr 11 22:26:11 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9369435">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[6031]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4736" _type="SelectTextCommand" caretOffset="1289" date="Mon Apr 11 22:26:11 EDT 2022" end="1315" start="1289" starttimestamp="1649721002230" timestamp="9369435" />
  <Command __id="4738" _type="SelectTextCommand" caretOffset="1289" date="Mon Apr 11 22:26:11 EDT 2022" end="1315" start="1289" starttimestamp="1649721002230" timestamp="9369435" />
  <Command __id="4740" _type="PauseCommand" date="Mon Apr 11 22:26:12 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9370546">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1111]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="4739" _type="CopyCommand" date="Mon Apr 11 22:26:12 EDT 2022" starttimestamp="1649721002230" timestamp="9370546" />
  <Command __id="4733" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:26:05 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" projectName="A6" starttimestamp="1649721002230" timestamp="9363219">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="4742" _type="PauseCommand" date="Mon Apr 11 22:26:16 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9374373">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3827]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4743" _type="SelectTextCommand" caretOffset="141" date="Mon Apr 11 22:26:16 EDT 2022" end="195" start="141" starttimestamp="1649721002230" timestamp="9374455" />
  <Command __id="4745" _type="PauseCommand" date="Mon Apr 11 22:26:24 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9381800">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[7345]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4744" _type="MoveCaretCommand" caretOffset="196" date="Mon Apr 11 22:26:24 EDT 2022" docOffset="263" starttimestamp="1649721002230" timestamp="9381800" />
  <Command __id="4746" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:26:24 EDT 2022" starttimestamp="1649721002230" timestamp="9382420" />
  <Command __id="4748" _type="InsertStringCommand" date="Mon Apr 11 22:26:24 EDT 2022" starttimestamp="1649721002230" timestamp="9382728" timestamp2="9382728">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="4750" _type="InsertStringCommand" date="Mon Apr 11 22:26:25 EDT 2022" starttimestamp="1649721002230" timestamp="9382889" timestamp2="9382889">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4752" _type="PasteCommand" date="Mon Apr 11 22:26:25 EDT 2022" starttimestamp="1649721002230" timestamp="9383190" />
  <Command __id="4753" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:26:26 EDT 2022" starttimestamp="1649721002230" timestamp="9383922" />
  <Command __id="4754" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:26:26 EDT 2022" starttimestamp="1649721002230" timestamp="9384011" />
  <Command __id="4755" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:26:26 EDT 2022" starttimestamp="1649721002230" timestamp="9384055" />
  <Command __id="4757" _type="PauseCommand" date="Mon Apr 11 22:26:32 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9390654">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6599]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4756" _type="ShellCommand" date="Mon Apr 11 22:26:32 EDT 2022" starttimestamp="1649721002230" timestamp="9390654" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4758" _type="ShellCommand" date="Mon Apr 11 22:26:33 EDT 2022" starttimestamp="1649721002230" timestamp="9390777" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4762" _type="PauseCommand" date="Mon Apr 11 22:26:34 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9392412">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1620]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4761" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:26:34 EDT 2022" starttimestamp="1649721002230" timestamp="9392412" />
  <Command __id="4763" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:26:34 EDT 2022" starttimestamp="1649721002230" timestamp="9392498" />
  <Command __id="4764" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:26:34 EDT 2022" starttimestamp="1649721002230" timestamp="9392544" />
  <Command __id="4765" _type="ShellCommand" date="Mon Apr 11 22:26:34 EDT 2022" starttimestamp="1649721002230" timestamp="9392694" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4767" _type="PauseCommand" date="Mon Apr 11 22:26:36 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9394271">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1577]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4766" _type="ShellCommand" date="Mon Apr 11 22:26:36 EDT 2022" starttimestamp="1649721002230" timestamp="9394271" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4741" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:26:16 EDT 2022" docASTNodeCount="30" docActiveCodeLength="269" docExpressionCount="22" docLength="269" projectName="A6" starttimestamp="1649721002230" timestamp="9374373">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\NIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶¶public interface NIOManagerPrintServer extends SocketChannelAcceptListener, SocketChannelReadListener {¶¶}")]]]></diff>
  </Command>
  <DocumentChange __id="4747" _type="Insert" date="Mon Apr 11 22:26:24 EDT 2022" docASTNodeCount="32" docActiveCodeLength="297" docExpressionCount="23" docLength="297" length="28" offset="262" repeat="3" starttimestamp="1649721002230" timestamp="9382724" timestamp2="9383185">
    <text><![CDATA[, SocketChannelWriteListener]]></text>
  </DocumentChange>
  <DocumentChange __id="4759" _type="Insert" date="Mon Apr 11 22:26:33 EDT 2022" docASTNodeCount="42" docActiveCodeLength="365" docExpressionCount="32" docLength="365" length="68" offset="157" repeat="2" starttimestamp="1649721002230" timestamp="9390792" timestamp2="9390792">
    <text><![CDATA[
import inputport.nio.manager.listeners.SocketChannelWriteListener;]]></text>
  </DocumentChange>
  <Command __id="4769" _type="PauseCommand" date="Mon Apr 11 22:26:37 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9395402">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1130]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4770" _type="MoveCaretCommand" caretOffset="2563" date="Mon Apr 11 22:26:37 EDT 2022" docOffset="2563" starttimestamp="1649721002230" timestamp="9395493" />
  <Command __id="4772" _type="PauseCommand" date="Mon Apr 11 22:26:40 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9398487">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2994]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4771" _type="ShellCommand" date="Mon Apr 11 22:26:40 EDT 2022" starttimestamp="1649721002230" timestamp="9398487" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4773" _type="ShellCommand" date="Mon Apr 11 22:26:40 EDT 2022" starttimestamp="1649721002230" timestamp="9398593" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4779" _type="PauseCommand" date="Mon Apr 11 22:26:42 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9400383">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1765]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4793" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 22:27:14 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="9432731" type="Run" />
  <Command __id="4795" _type="ConsoleOutput" date="Mon Apr 11 22:27:15 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9433388" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54564]"), Diff(INSERT,"Enter a line of input to be printed remotely¶Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4797" _type="PauseCommand" date="Mon Apr 11 22:27:23 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9441171">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7783]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="4796" _type="ConsoleInput" date="Mon Apr 11 22:27:23 EDT 2022" starttimestamp="1649721002230" timestamp="9441171" type="Exception">
    <outputString><![CDATA[hi
]]></outputString>
  </Command>
  <Command __id="4798" _type="ConsoleOutput" date="Mon Apr 11 22:27:23 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9441225" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶"), Diff(DELETE,"C"), Diff(INSERT,"c"), Diff(EQUAL,"lient "), Diff(DELETE,"Connect to Server"), Diff(INSERT,"channel has written"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4799" _type="ConsoleOutput" date="Mon Apr 11 22:27:23 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9441250" type="ConsoleOutput">
    <outputString><![CDATA[hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54602]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶client channel has written"), Diff(INSERT,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54602]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4768" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:26:37 EDT 2022" docASTNodeCount="337" docActiveCodeLength="2424" docExpressionCount="249" docLength="2833" projectName="A6" starttimestamp="1649721002230" timestamp="9395401">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		¶		nioManager.write(aSocketChannel, aMessage, this);¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="4774" _type="Insert" date="Mon Apr 11 22:26:40 EDT 2022" docASTNodeCount="355" docActiveCodeLength="2519" docExpressionCount="257" docLength="2962" length="129" offset="2823" repeat="4" starttimestamp="1649721002230" timestamp="9398618" timestamp2="9398620">
    <text><![CDATA[
	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="4801" _type="PauseCommand" date="Mon Apr 11 22:27:57 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="9475158">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[33908]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4802" _type="SelectTextCommand" caretOffset="1289" date="Mon Apr 11 22:27:57 EDT 2022" end="1315" start="1289" starttimestamp="1649721002230" timestamp="9475276" />
  <Command __id="4800" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:27:57 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" projectName="A6" starttimestamp="1649721002230" timestamp="9475158">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="4804" _type="PauseCommand" date="Mon Apr 11 22:28:04 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9481959">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[6683]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4805" _type="MoveCaretCommand" caretOffset="2563" date="Mon Apr 11 22:28:04 EDT 2022" docOffset="2563" starttimestamp="1649721002230" timestamp="9482040" />
  <Command __id="4803" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:28:04 EDT 2022" docASTNodeCount="355" docActiveCodeLength="2519" docExpressionCount="257" docLength="2962" projectName="A6" starttimestamp="1649721002230" timestamp="9481959">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		¶		nioManager.write(aSocketChannel, aMessage, this);¶	}¶	"), Diff(INSERT,"@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;


import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}
//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}
	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		
			nioManager.enableListenableAccepts(aServerFactoryChannel,
					SelectionKey.OP_READ, // allow incoming writes that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}		
	}
	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		//TODO want to save aSocketChannel
	}
	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);
		
		//TODO echo the message right back to the same client
		//Turn of the servers reading ability
		//nioManager.write(socketChannel, aWriteMessage, this);
		//turn on the client's reading ability
		
		nioManager.write(aSocketChannel, aMessage, this);
	}
	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="4807" _type="PauseCommand" date="Mon Apr 11 22:28:15 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="9493077">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11037]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4808" _type="SelectTextCommand" caretOffset="1289" date="Mon Apr 11 22:28:15 EDT 2022" end="1315" start="1289" starttimestamp="1649721002230" timestamp="9493154" />
  <Command __id="4810" _type="PauseCommand" date="Mon Apr 11 22:29:07 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="9544894">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[51740]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4809" _type="SelectTextCommand" caretOffset="2046" date="Mon Apr 11 22:29:07 EDT 2022" end="2111" start="2046" starttimestamp="1649721002230" timestamp="9544894" />
  <Command __id="4811" _type="SelectTextCommand" caretOffset="2046" date="Mon Apr 11 22:29:07 EDT 2022" end="2111" start="2046" starttimestamp="1649721002230" timestamp="9544894" />
  <Command __id="4812" _type="CopyCommand" date="Mon Apr 11 22:29:07 EDT 2022" starttimestamp="1649721002230" timestamp="9545270" />
  <Command __id="4814" _type="MoveCaretCommand" caretOffset="2563" date="Mon Apr 11 22:29:08 EDT 2022" docOffset="2563" starttimestamp="1649721002230" timestamp="9546302" />
  <Command __id="4816" _type="PauseCommand" date="Mon Apr 11 22:29:11 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9549627">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3325]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4815" _type="MoveCaretCommand" caretOffset="2766" date="Mon Apr 11 22:29:11 EDT 2022" docOffset="2766" starttimestamp="1649721002230" timestamp="9549627" />
  <Command __id="4817" _type="MoveCaretCommand" caretOffset="2766" date="Mon Apr 11 22:29:11 EDT 2022" docOffset="2766" starttimestamp="1649721002230" timestamp="9549627" />
  <Command __id="4819" _type="InsertStringCommand" date="Mon Apr 11 22:29:12 EDT 2022" starttimestamp="1649721002230" timestamp="9550093" timestamp2="9550093">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4820" _type="InsertStringCommand" date="Mon Apr 11 22:29:12 EDT 2022" starttimestamp="1649721002230" timestamp="9550093" timestamp2="9550093">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4822" _type="PasteCommand" date="Mon Apr 11 22:29:12 EDT 2022" starttimestamp="1649721002230" timestamp="9550411" />
  <Command __id="4824" _type="PauseCommand" date="Mon Apr 11 22:29:13 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9551475">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1064]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4823" _type="MoveCaretCommand" caretOffset="2766" date="Mon Apr 11 22:29:13 EDT 2022" docOffset="2766" starttimestamp="1649721002230" timestamp="9551475" />
  <Command __id="4825" _type="MoveCaretCommand" caretOffset="2766" date="Mon Apr 11 22:29:13 EDT 2022" docOffset="2766" starttimestamp="1649721002230" timestamp="9551475" />
  <Command __id="4827" _type="InsertStringCommand" date="Mon Apr 11 22:29:14 EDT 2022" starttimestamp="1649721002230" timestamp="9552330" timestamp2="9552330">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4828" _type="InsertStringCommand" date="Mon Apr 11 22:29:14 EDT 2022" starttimestamp="1649721002230" timestamp="9552330" timestamp2="9552330">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4830" _type="InsertStringCommand" date="Mon Apr 11 22:29:14 EDT 2022" starttimestamp="1649721002230" timestamp="9552565" timestamp2="9552565">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4831" _type="InsertStringCommand" date="Mon Apr 11 22:29:14 EDT 2022" starttimestamp="1649721002230" timestamp="9552565" timestamp2="9552565">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4833" _type="InsertStringCommand" date="Mon Apr 11 22:29:14 EDT 2022" starttimestamp="1649721002230" timestamp="9552751" timestamp2="9552751">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4834" _type="InsertStringCommand" date="Mon Apr 11 22:29:14 EDT 2022" starttimestamp="1649721002230" timestamp="9552751" timestamp2="9552751">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4836" _type="InsertStringCommand" date="Mon Apr 11 22:29:15 EDT 2022" starttimestamp="1649721002230" timestamp="9552853" timestamp2="9552853">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4837" _type="InsertStringCommand" date="Mon Apr 11 22:29:15 EDT 2022" starttimestamp="1649721002230" timestamp="9552853" timestamp2="9552853">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4839" _type="InsertStringCommand" date="Mon Apr 11 22:29:15 EDT 2022" starttimestamp="1649721002230" timestamp="9552944" timestamp2="9552944">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4840" _type="InsertStringCommand" date="Mon Apr 11 22:29:15 EDT 2022" starttimestamp="1649721002230" timestamp="9552944" timestamp2="9552944">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4842" _type="InsertStringCommand" date="Mon Apr 11 22:29:15 EDT 2022" starttimestamp="1649721002230" timestamp="9553023" timestamp2="9553023">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4843" _type="InsertStringCommand" date="Mon Apr 11 22:29:15 EDT 2022" starttimestamp="1649721002230" timestamp="9553023" timestamp2="9553023">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4845" _type="InsertStringCommand" date="Mon Apr 11 22:29:16 EDT 2022" starttimestamp="1649721002230" timestamp="9553972" timestamp2="9553972">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4846" _type="InsertStringCommand" date="Mon Apr 11 22:29:16 EDT 2022" starttimestamp="1649721002230" timestamp="9553972" timestamp2="9553972">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4848" _type="InsertStringCommand" date="Mon Apr 11 22:29:16 EDT 2022" starttimestamp="1649721002230" timestamp="9554202" timestamp2="9554202">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4849" _type="InsertStringCommand" date="Mon Apr 11 22:29:16 EDT 2022" starttimestamp="1649721002230" timestamp="9554202" timestamp2="9554202">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4851" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:17 EDT 2022" starttimestamp="1649721002230" timestamp="9554787" />
  <Command __id="4852" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:17 EDT 2022" starttimestamp="1649721002230" timestamp="9554787" />
  <Command __id="4806" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:28:15 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" projectName="A6" starttimestamp="1649721002230" timestamp="9493077">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="4813" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:29:08 EDT 2022" docASTNodeCount="355" docActiveCodeLength="2519" docExpressionCount="257" docLength="2962" projectName="A6" starttimestamp="1649721002230" timestamp="9546225">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		¶		nioManager.write(aSocketChannel, aMessage, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="4818" _type="Insert" date="Mon Apr 11 22:29:12 EDT 2022" docASTNodeCount="355" docActiveCodeLength="2523" docExpressionCount="257" docLength="2966" length="4" offset="2766" starttimestamp="1649721002230" timestamp="9550084">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="4821" _type="Replace" date="Mon Apr 11 22:29:12 EDT 2022" docASTNodeCount="366" docActiveCodeLength="2588" docExpressionCount="265" docLength="3031" endLine="67" insertionLength="67" int_docASTNodeCount="355" int_docActiveCodeLength="2521" int_docExpressionCount="257" int_docLength="2964" length="2" offset="2768" startLine="67" starttimestamp="1649721002230" timestamp="9550336">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4826" _type="Insert" date="Mon Apr 11 22:29:14 EDT 2022" docASTNodeCount="371" docActiveCodeLength="2596" docExpressionCount="267" docLength="3039" length="8" offset="2766" repeat="8" starttimestamp="1649721002230" timestamp="9552323" timestamp2="9554193">
    <text><![CDATA[String s]]></text>
  </DocumentChange>
  <DocumentChange __id="4850" _type="Delete" date="Mon Apr 11 22:29:17 EDT 2022" docASTNodeCount="369" docActiveCodeLength="2595" docExpressionCount="267" docLength="3038" endLine="66" length="1" offset="2773" startLine="66" starttimestamp="1649721002230" timestamp="9554785">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <Command __id="4854" _type="PauseCommand" date="Mon Apr 11 22:29:18 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9556266">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1479]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4855" _type="InsertStringCommand" date="Mon Apr 11 22:29:18 EDT 2022" starttimestamp="1649721002230" timestamp="9556273" timestamp2="9556273">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4856" _type="InsertStringCommand" date="Mon Apr 11 22:29:18 EDT 2022" starttimestamp="1649721002230" timestamp="9556273" timestamp2="9556273">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4858" _type="InsertStringCommand" date="Mon Apr 11 22:29:18 EDT 2022" starttimestamp="1649721002230" timestamp="9556472" timestamp2="9556472">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4859" _type="InsertStringCommand" date="Mon Apr 11 22:29:18 EDT 2022" starttimestamp="1649721002230" timestamp="9556472" timestamp2="9556472">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4861" _type="InsertStringCommand" date="Mon Apr 11 22:29:18 EDT 2022" starttimestamp="1649721002230" timestamp="9556538" timestamp2="9556538">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4862" _type="InsertStringCommand" date="Mon Apr 11 22:29:18 EDT 2022" starttimestamp="1649721002230" timestamp="9556538" timestamp2="9556538">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4864" _type="InsertStringCommand" date="Mon Apr 11 22:29:18 EDT 2022" starttimestamp="1649721002230" timestamp="9556634" timestamp2="9556634">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4865" _type="InsertStringCommand" date="Mon Apr 11 22:29:18 EDT 2022" starttimestamp="1649721002230" timestamp="9556634" timestamp2="9556634">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4867" _type="InsertStringCommand" date="Mon Apr 11 22:29:19 EDT 2022" starttimestamp="1649721002230" timestamp="9556822" timestamp2="9556822">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4868" _type="InsertStringCommand" date="Mon Apr 11 22:29:19 EDT 2022" starttimestamp="1649721002230" timestamp="9556822" timestamp2="9556822">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4870" _type="InsertStringCommand" date="Mon Apr 11 22:29:19 EDT 2022" starttimestamp="1649721002230" timestamp="9557003" timestamp2="9557003">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="4871" _type="InsertStringCommand" date="Mon Apr 11 22:29:19 EDT 2022" starttimestamp="1649721002230" timestamp="9557003" timestamp2="9557003">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="4873" _type="InsertStringCommand" date="Mon Apr 11 22:29:19 EDT 2022" starttimestamp="1649721002230" timestamp="9557151" timestamp2="9557151">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4874" _type="InsertStringCommand" date="Mon Apr 11 22:29:19 EDT 2022" starttimestamp="1649721002230" timestamp="9557151" timestamp2="9557151">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4876" _type="InsertStringCommand" date="Mon Apr 11 22:29:19 EDT 2022" starttimestamp="1649721002230" timestamp="9557442" timestamp2="9557442">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4877" _type="InsertStringCommand" date="Mon Apr 11 22:29:19 EDT 2022" starttimestamp="1649721002230" timestamp="9557442" timestamp2="9557442">
    <data><![CDATA["]]></data>
  </Command>
  <DocumentChange __id="4853" _type="Insert" date="Mon Apr 11 22:29:18 EDT 2022" docASTNodeCount="372" docActiveCodeLength="2604" docExpressionCount="268" docLength="3047" length="9" offset="2773" repeat="8" starttimestamp="1649721002230" timestamp="9556266" timestamp2="9557440">
    <text><![CDATA[line = ""]]></text>
  </DocumentChange>
  <Command __id="4879" _type="PauseCommand" date="Mon Apr 11 22:29:22 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9559852">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2410]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="4878" _type="Insert" date="Mon Apr 11 22:29:22 EDT 2022" docASTNodeCount="372" docActiveCodeLength="2613" docExpressionCount="268" docLength="3056" length="9" offset="2781" repeat="9" starttimestamp="1649721002230" timestamp="9559852" timestamp2="9561166">
    <text><![CDATA[The serev]]></text>
  </DocumentChange>
  <Command __id="4880" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9559870" timestamp2="9559870">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="4881" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9559870" timestamp2="9559870">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="4883" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560003" timestamp2="9560003">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4884" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560003" timestamp2="9560003">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4886" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560089" timestamp2="9560089">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4887" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560089" timestamp2="9560089">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4889" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560185" timestamp2="9560185">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4890" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560185" timestamp2="9560185">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4892" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560268" timestamp2="9560268">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4893" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560268" timestamp2="9560268">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4895" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560341" timestamp2="9560341">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4896" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560341" timestamp2="9560341">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4898" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560429" timestamp2="9560429">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4899" _type="InsertStringCommand" date="Mon Apr 11 22:29:22 EDT 2022" starttimestamp="1649721002230" timestamp="9560429" timestamp2="9560429">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4901" _type="InsertStringCommand" date="Mon Apr 11 22:29:23 EDT 2022" starttimestamp="1649721002230" timestamp="9560788" timestamp2="9560788">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4902" _type="InsertStringCommand" date="Mon Apr 11 22:29:23 EDT 2022" starttimestamp="1649721002230" timestamp="9560788" timestamp2="9560788">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4904" _type="InsertStringCommand" date="Mon Apr 11 22:29:23 EDT 2022" starttimestamp="1649721002230" timestamp="9561170" timestamp2="9561170">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4905" _type="InsertStringCommand" date="Mon Apr 11 22:29:23 EDT 2022" starttimestamp="1649721002230" timestamp="9561170" timestamp2="9561170">
    <data><![CDATA[v]]></data>
  </Command>
  <DocumentChange __id="4906" _type="Delete" date="Mon Apr 11 22:29:23 EDT 2022" docASTNodeCount="372" docActiveCodeLength="2611" docExpressionCount="268" docLength="3054" endLine="66" length="2" offset="2788" repeat="2" startLine="66" starttimestamp="1649721002230" timestamp="9561174" timestamp2="9561599">
    <text><![CDATA[ev]]></text>
  </DocumentChange>
  <Command __id="4907" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:23 EDT 2022" starttimestamp="1649721002230" timestamp="9561177" />
  <Command __id="4908" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:23 EDT 2022" starttimestamp="1649721002230" timestamp="9561177" />
  <Command __id="4910" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:23 EDT 2022" starttimestamp="1649721002230" timestamp="9561602" />
  <Command __id="4911" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:23 EDT 2022" starttimestamp="1649721002230" timestamp="9561602" />
  <Command __id="4913" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9561807" timestamp2="9561807">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4914" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9561807" timestamp2="9561807">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4916" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562024" timestamp2="9562024">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4917" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562024" timestamp2="9562024">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4919" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562106" timestamp2="9562106">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4920" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562106" timestamp2="9562106">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4922" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562235" timestamp2="9562235">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4923" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562235" timestamp2="9562235">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4925" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562321" timestamp2="9562321">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4926" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562321" timestamp2="9562321">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4928" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562381" timestamp2="9562381">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4929" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562381" timestamp2="9562381">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4931" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562507" timestamp2="9562507">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4932" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562507" timestamp2="9562507">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4934" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562651" timestamp2="9562651">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4935" _type="InsertStringCommand" date="Mon Apr 11 22:29:24 EDT 2022" starttimestamp="1649721002230" timestamp="9562651" timestamp2="9562651">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4937" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9562784" timestamp2="9562784">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4938" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9562784" timestamp2="9562784">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4940" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563063" timestamp2="9563063">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4941" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563063" timestamp2="9563063">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4943" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563350" timestamp2="9563350">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4944" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563350" timestamp2="9563350">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4946" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563473" timestamp2="9563473">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4947" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563473" timestamp2="9563473">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4949" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563536" timestamp2="9563536">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4950" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563537" timestamp2="9563537">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4952" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563635" timestamp2="9563635">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4953" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563635" timestamp2="9563635">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4955" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563714" timestamp2="9563714">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4956" _type="InsertStringCommand" date="Mon Apr 11 22:29:25 EDT 2022" starttimestamp="1649721002230" timestamp="9563714" timestamp2="9563714">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4958" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9563810" timestamp2="9563810">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4959" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9563810" timestamp2="9563810">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4961" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9563904" timestamp2="9563904">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4962" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9563904" timestamp2="9563904">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4964" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564010" timestamp2="9564010">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4965" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564010" timestamp2="9564010">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4967" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564106" timestamp2="9564106">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4968" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564106" timestamp2="9564106">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4970" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564230" timestamp2="9564230">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4971" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564230" timestamp2="9564230">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4973" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564442" timestamp2="9564442">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4974" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564442" timestamp2="9564442">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4976" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564546" timestamp2="9564546">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4977" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564547" timestamp2="9564547">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4979" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564633" timestamp2="9564633">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4980" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564633" timestamp2="9564633">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4982" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564718" timestamp2="9564718">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4983" _type="InsertStringCommand" date="Mon Apr 11 22:29:26 EDT 2022" starttimestamp="1649721002230" timestamp="9564718" timestamp2="9564718">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4985" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9564828" timestamp2="9564828">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4986" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9564829" timestamp2="9564829">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4988" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9564959" timestamp2="9564959">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4989" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9564959" timestamp2="9564959">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4991" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565031" timestamp2="9565031">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4992" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565031" timestamp2="9565031">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4994" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565103" timestamp2="9565103">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4995" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565103" timestamp2="9565103">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4997" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565254" timestamp2="9565254">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4998" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565254" timestamp2="9565254">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5000" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565342" timestamp2="9565342">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5001" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565342" timestamp2="9565342">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5003" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565393" timestamp2="9565393">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5004" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565393" timestamp2="9565393">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5006" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565533" timestamp2="9565533">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5007" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565533" timestamp2="9565533">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5009" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565661" timestamp2="9565661">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5010" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565661" timestamp2="9565661">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5012" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565728" timestamp2="9565728">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5013" _type="InsertStringCommand" date="Mon Apr 11 22:29:27 EDT 2022" starttimestamp="1649721002230" timestamp="9565728" timestamp2="9565728">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5015" _type="InsertStringCommand" date="Mon Apr 11 22:29:28 EDT 2022" starttimestamp="1649721002230" timestamp="9565852" timestamp2="9565852">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5016" _type="InsertStringCommand" date="Mon Apr 11 22:29:28 EDT 2022" starttimestamp="1649721002230" timestamp="9565852" timestamp2="9565852">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5018" _type="PauseCommand" date="Mon Apr 11 22:29:29 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9566933">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1081]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5017" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:29:29 EDT 2022" starttimestamp="1649721002230" timestamp="9566933" />
  <Command __id="5019" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:29:29 EDT 2022" starttimestamp="1649721002230" timestamp="9566934" />
  <Command __id="5021" _type="InsertStringCommand" date="Mon Apr 11 22:29:29 EDT 2022" starttimestamp="1649721002230" timestamp="9567489" timestamp2="9567489">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5022" _type="InsertStringCommand" date="Mon Apr 11 22:29:29 EDT 2022" starttimestamp="1649721002230" timestamp="9567489" timestamp2="9567489">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5024" _type="PauseCommand" date="Mon Apr 11 22:29:33 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9571638">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4149]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5023" _type="SelectTextCommand" caretOffset="2872" date="Mon Apr 11 22:29:33 EDT 2022" end="2878" start="2872" starttimestamp="1649721002230" timestamp="9571638" />
  <Command __id="5025" _type="SelectTextCommand" caretOffset="2872" date="Mon Apr 11 22:29:33 EDT 2022" end="2878" start="2872" starttimestamp="1649721002230" timestamp="9571638" />
  <Command __id="5027" _type="InsertStringCommand" date="Mon Apr 11 22:29:34 EDT 2022" starttimestamp="1649721002230" timestamp="9572028" timestamp2="9572028">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5028" _type="InsertStringCommand" date="Mon Apr 11 22:29:34 EDT 2022" starttimestamp="1649721002230" timestamp="9572028" timestamp2="9572028">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5030" _type="PauseCommand" date="Mon Apr 11 22:29:35 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9573382">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1354]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5029" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:29:35 EDT 2022" starttimestamp="1649721002230" timestamp="9573382" />
  <Command __id="5031" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:29:35 EDT 2022" starttimestamp="1649721002230" timestamp="9573481" />
  <Command __id="5032" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:29:35 EDT 2022" starttimestamp="1649721002230" timestamp="9573502" />
  <Command __id="5034" _type="PauseCommand" date="Mon Apr 11 22:29:43 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9580983">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7481]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5033" _type="MoveCaretCommand" caretOffset="2927" date="Mon Apr 11 22:29:43 EDT 2022" docOffset="2927" starttimestamp="1649721002230" timestamp="9580983" />
  <Command __id="5035" _type="MoveCaretCommand" caretOffset="2927" date="Mon Apr 11 22:29:43 EDT 2022" docOffset="2927" starttimestamp="1649721002230" timestamp="9580984" />
  <Command __id="5037" _type="InsertStringCommand" date="Mon Apr 11 22:29:43 EDT 2022" starttimestamp="1649721002230" timestamp="9581559" timestamp2="9581559">
    <data><![CDATA[W]]></data>
  </Command>
  <Command __id="5038" _type="InsertStringCommand" date="Mon Apr 11 22:29:43 EDT 2022" starttimestamp="1649721002230" timestamp="9581559" timestamp2="9581559">
    <data><![CDATA[W]]></data>
  </Command>
  <Command __id="5040" _type="InsertStringCommand" date="Mon Apr 11 22:29:44 EDT 2022" starttimestamp="1649721002230" timestamp="9581928" timestamp2="9581928">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5041" _type="InsertStringCommand" date="Mon Apr 11 22:29:44 EDT 2022" starttimestamp="1649721002230" timestamp="9581929" timestamp2="9581929">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5043" _type="InsertStringCommand" date="Mon Apr 11 22:29:44 EDT 2022" starttimestamp="1649721002230" timestamp="9582087" timestamp2="9582087">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5044" _type="InsertStringCommand" date="Mon Apr 11 22:29:44 EDT 2022" starttimestamp="1649721002230" timestamp="9582087" timestamp2="9582087">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5046" _type="InsertStringCommand" date="Mon Apr 11 22:29:44 EDT 2022" starttimestamp="1649721002230" timestamp="9582195" timestamp2="9582195">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5047" _type="InsertStringCommand" date="Mon Apr 11 22:29:44 EDT 2022" starttimestamp="1649721002230" timestamp="9582195" timestamp2="9582195">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5049" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:44 EDT 2022" starttimestamp="1649721002230" timestamp="9582631" />
  <Command __id="5050" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:44 EDT 2022" starttimestamp="1649721002230" timestamp="9582631" />
  <Command __id="5052" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9582780" />
  <Command __id="5053" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9582780" />
  <Command __id="5055" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9582894" />
  <Command __id="5056" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9582894" />
  <Command __id="5058" _type="InsertStringCommand" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9583005" timestamp2="9583005">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5059" _type="InsertStringCommand" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9583005" timestamp2="9583005">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5061" _type="InsertStringCommand" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9583124" timestamp2="9583124">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5062" _type="InsertStringCommand" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9583124" timestamp2="9583124">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5064" _type="InsertStringCommand" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9583235" timestamp2="9583235">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5065" _type="InsertStringCommand" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9583235" timestamp2="9583235">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5067" _type="InsertStringCommand" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9583307" timestamp2="9583307">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5068" _type="InsertStringCommand" date="Mon Apr 11 22:29:45 EDT 2022" starttimestamp="1649721002230" timestamp="9583307" timestamp2="9583307">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5070" _type="PauseCommand" date="Mon Apr 11 22:29:46 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9584522">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1215]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5069" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:29:46 EDT 2022" starttimestamp="1649721002230" timestamp="9584522" />
  <Command __id="5071" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:29:46 EDT 2022" starttimestamp="1649721002230" timestamp="9584675" />
  <Command __id="5072" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:29:46 EDT 2022" starttimestamp="1649721002230" timestamp="9584701" />
  <Command __id="5073" _type="ShellCommand" date="Mon Apr 11 22:29:47 EDT 2022" starttimestamp="1649721002230" timestamp="9584795" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5075" _type="PauseCommand" date="Mon Apr 11 22:29:48 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9586463">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1668]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5074" _type="ShellCommand" date="Mon Apr 11 22:29:48 EDT 2022" starttimestamp="1649721002230" timestamp="9586463" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5077" _type="PauseCommand" date="Mon Apr 11 22:29:50 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9588207">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1743]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5087" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 22:30:43 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="9641621" type="Run" />
  <Command __id="5089" _type="ConsoleOutput" date="Mon Apr 11 22:30:44 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9642379" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54602]"), Diff(INSERT,"Enter a line of input to be printed remotely¶Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5091" _type="PauseCommand" date="Mon Apr 11 22:30:49 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9647161">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4782]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="5090" _type="ConsoleInput" date="Mon Apr 11 22:30:49 EDT 2022" starttimestamp="1649721002230" timestamp="9647161" type="Exception">
    <outputString><![CDATA[hi
]]></outputString>
  </Command>
  <Command __id="5092" _type="ConsoleOutput" date="Mon Apr 11 22:30:49 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9647214" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶"), Diff(DELETE,"C"), Diff(INSERT,"c"), Diff(EQUAL,"lient "), Diff(DELETE,"Connect to Server"), Diff(INSERT,"channel has written"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5093" _type="ConsoleOutput" date="Mon Apr 11 22:30:49 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9647235" type="ConsoleOutput">
    <outputString><![CDATA[hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54630]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶client channel has written"), Diff(INSERT,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54630]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5095" _type="PauseCommand" date="Mon Apr 11 22:32:01 EDT 2022" range="1m-2m" starttimestamp="1649721002230" timestamp="9719473">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[72238]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5094" _type="MoveCaretCommand" caretOffset="3076" date="Mon Apr 11 22:32:01 EDT 2022" docOffset="3076" starttimestamp="1649721002230" timestamp="9719473" />
  <Command __id="5096" _type="MoveCaretCommand" caretOffset="3076" date="Mon Apr 11 22:32:01 EDT 2022" docOffset="3076" starttimestamp="1649721002230" timestamp="9719473" />
  <Command __id="5098" _type="InsertStringCommand" date="Mon Apr 11 22:32:02 EDT 2022" starttimestamp="1649721002230" timestamp="9720434" timestamp2="9720434">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5099" _type="InsertStringCommand" date="Mon Apr 11 22:32:02 EDT 2022" starttimestamp="1649721002230" timestamp="9720434" timestamp2="9720434">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5102" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9720927" />
  <Command __id="5103" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9720927" />
  <Command __id="5105" _type="InsertStringCommand" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9721186" timestamp2="9721186">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5106" _type="InsertStringCommand" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9721186" timestamp2="9721186">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5108" _type="InsertStringCommand" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9721394" timestamp2="9721394">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="5109" _type="InsertStringCommand" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9721394" timestamp2="9721394">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="5111" _type="InsertStringCommand" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9721456" timestamp2="9721456">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5112" _type="InsertStringCommand" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9721456" timestamp2="9721456">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5114" _type="InsertStringCommand" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9721595" timestamp2="9721595">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5115" _type="InsertStringCommand" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9721595" timestamp2="9721595">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5117" _type="InsertStringCommand" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9721692" timestamp2="9721692">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5118" _type="InsertStringCommand" date="Mon Apr 11 22:32:03 EDT 2022" starttimestamp="1649721002230" timestamp="9721692" timestamp2="9721692">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5120" _type="InsertStringCommand" date="Mon Apr 11 22:32:04 EDT 2022" starttimestamp="1649721002230" timestamp="9721784" timestamp2="9721784">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5121" _type="InsertStringCommand" date="Mon Apr 11 22:32:04 EDT 2022" starttimestamp="1649721002230" timestamp="9721784" timestamp2="9721784">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5123" _type="InsertStringCommand" date="Mon Apr 11 22:32:04 EDT 2022" starttimestamp="1649721002230" timestamp="9721915" timestamp2="9721915">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5124" _type="InsertStringCommand" date="Mon Apr 11 22:32:04 EDT 2022" starttimestamp="1649721002230" timestamp="9721915" timestamp2="9721915">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5125" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 11 22:32:04 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="9721918" />
  <Command __id="5130" _type="PauseCommand" date="Mon Apr 11 22:32:05 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9723129">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1211]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="5129" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 11 22:32:05 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="9723129" />
  <Command __id="5132" _type="InsertStringCommand" date="Mon Apr 11 22:32:05 EDT 2022" starttimestamp="1649721002230" timestamp="9723137" timestamp2="9723137">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5133" _type="InsertStringCommand" date="Mon Apr 11 22:32:05 EDT 2022" starttimestamp="1649721002230" timestamp="9723137" timestamp2="9723137">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5134" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Apr 11 22:32:05 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="9723164" />
  <Command __id="5143" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Apr 11 22:32:06 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="9724769" />
  <Command __id="5145" _type="InsertStringCommand" date="Mon Apr 11 22:32:07 EDT 2022" starttimestamp="1649721002230" timestamp="9725021" timestamp2="9725021">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5146" _type="InsertStringCommand" date="Mon Apr 11 22:32:07 EDT 2022" starttimestamp="1649721002230" timestamp="9725022" timestamp2="9725022">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5149" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:32:07 EDT 2022" starttimestamp="1649721002230" timestamp="9725365" />
  <Command __id="5150" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:32:07 EDT 2022" starttimestamp="1649721002230" timestamp="9725365" />
  <Command __id="5152" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:32:07 EDT 2022" starttimestamp="1649721002230" timestamp="9725567" />
  <Command __id="5153" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:32:07 EDT 2022" starttimestamp="1649721002230" timestamp="9725567" />
  <Command __id="5155" _type="InsertStringCommand" date="Mon Apr 11 22:32:08 EDT 2022" starttimestamp="1649721002230" timestamp="9726107" timestamp2="9726107">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5156" _type="InsertStringCommand" date="Mon Apr 11 22:32:08 EDT 2022" starttimestamp="1649721002230" timestamp="9726107" timestamp2="9726107">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5157" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:32:08 EDT 2022" starttimestamp="1649721002230" timestamp="9726689" />
  <Command __id="5158" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:32:08 EDT 2022" starttimestamp="1649721002230" timestamp="9726690" />
  <Command __id="5160" _type="InsertStringCommand" date="Mon Apr 11 22:32:09 EDT 2022" starttimestamp="1649721002230" timestamp="9726930" timestamp2="9726930">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5161" _type="InsertStringCommand" date="Mon Apr 11 22:32:09 EDT 2022" starttimestamp="1649721002230" timestamp="9726930" timestamp2="9726930">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5162" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:32:09 EDT 2022" starttimestamp="1649721002230" timestamp="9727161" />
  <Command __id="5163" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:32:09 EDT 2022" starttimestamp="1649721002230" timestamp="9727161" />
  <Command __id="5164" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:32:09 EDT 2022" starttimestamp="1649721002230" timestamp="9727345" />
  <Command __id="5165" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:32:09 EDT 2022" starttimestamp="1649721002230" timestamp="9727345" />
  <Command __id="5166" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:32:09 EDT 2022" starttimestamp="1649721002230" timestamp="9727584" />
  <Command __id="5167" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:32:09 EDT 2022" starttimestamp="1649721002230" timestamp="9727584" />
  <Command __id="5168" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="9728036" />
  <Command __id="5169" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="9728036" />
  <Command __id="5171" _type="InsertStringCommand" date="Mon Apr 11 22:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="9728393" timestamp2="9728393">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5172" _type="InsertStringCommand" date="Mon Apr 11 22:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="9728393" timestamp2="9728393">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5173" _type="InsertStringCommand" date="Mon Apr 11 22:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="9728506" timestamp2="9728506">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5174" _type="InsertStringCommand" date="Mon Apr 11 22:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="9728507" timestamp2="9728507">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5175" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="9728718" />
  <Command __id="5176" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:32:10 EDT 2022" starttimestamp="1649721002230" timestamp="9728718" />
  <Command __id="5178" _type="InsertStringCommand" date="Mon Apr 11 22:32:11 EDT 2022" starttimestamp="1649721002230" timestamp="9729507" timestamp2="9729507">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5179" _type="InsertStringCommand" date="Mon Apr 11 22:32:11 EDT 2022" starttimestamp="1649721002230" timestamp="9729507" timestamp2="9729507">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5181" _type="InsertStringCommand" date="Mon Apr 11 22:32:11 EDT 2022" starttimestamp="1649721002230" timestamp="9729624" timestamp2="9729624">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5182" _type="InsertStringCommand" date="Mon Apr 11 22:32:11 EDT 2022" starttimestamp="1649721002230" timestamp="9729624" timestamp2="9729624">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5184" _type="InsertStringCommand" date="Mon Apr 11 22:32:11 EDT 2022" starttimestamp="1649721002230" timestamp="9729736" timestamp2="9729736">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="5185" _type="InsertStringCommand" date="Mon Apr 11 22:32:11 EDT 2022" starttimestamp="1649721002230" timestamp="9729736" timestamp2="9729736">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="5187" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9729945" timestamp2="9729945">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="5188" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9729945" timestamp2="9729945">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="5190" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730102" timestamp2="9730102">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5191" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730102" timestamp2="9730102">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5193" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730216" timestamp2="9730216">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="5194" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730216" timestamp2="9730216">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="5196" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730334" timestamp2="9730334">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5197" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730334" timestamp2="9730334">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5199" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730429" timestamp2="9730429">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5200" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730429" timestamp2="9730429">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5202" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730503" timestamp2="9730503">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5203" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730503" timestamp2="9730503">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5205" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730706" timestamp2="9730706">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="5206" _type="InsertStringCommand" date="Mon Apr 11 22:32:12 EDT 2022" starttimestamp="1649721002230" timestamp="9730706" timestamp2="9730706">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="5208" _type="InsertStringCommand" date="Mon Apr 11 22:32:13 EDT 2022" starttimestamp="1649721002230" timestamp="9730968" timestamp2="9730968">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="5209" _type="InsertStringCommand" date="Mon Apr 11 22:32:13 EDT 2022" starttimestamp="1649721002230" timestamp="9730968" timestamp2="9730968">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="5211" _type="InsertStringCommand" date="Mon Apr 11 22:32:13 EDT 2022" starttimestamp="1649721002230" timestamp="9731116" timestamp2="9731116">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5212" _type="InsertStringCommand" date="Mon Apr 11 22:32:13 EDT 2022" starttimestamp="1649721002230" timestamp="9731116" timestamp2="9731116">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5214" _type="InsertStringCommand" date="Mon Apr 11 22:32:13 EDT 2022" starttimestamp="1649721002230" timestamp="9731312" timestamp2="9731312">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="5215" _type="InsertStringCommand" date="Mon Apr 11 22:32:13 EDT 2022" starttimestamp="1649721002230" timestamp="9731312" timestamp2="9731312">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="5217" _type="InsertStringCommand" date="Mon Apr 11 22:32:13 EDT 2022" starttimestamp="1649721002230" timestamp="9731439" timestamp2="9731439">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="5218" _type="InsertStringCommand" date="Mon Apr 11 22:32:13 EDT 2022" starttimestamp="1649721002230" timestamp="9731439" timestamp2="9731439">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="5220" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9731861" />
  <Command __id="5221" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9731861" />
  <Command __id="5223" _type="InsertStringCommand" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9731903" timestamp2="9731903">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5224" _type="InsertStringCommand" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9731903" timestamp2="9731903">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5226" _type="InsertStringCommand" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9732058" timestamp2="9732058">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5227" _type="InsertStringCommand" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9732058" timestamp2="9732058">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5229" _type="InsertStringCommand" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9732297" timestamp2="9732297">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5230" _type="InsertStringCommand" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9732297" timestamp2="9732297">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5232" _type="InsertStringCommand" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9732521" timestamp2="9732521">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="5233" _type="InsertStringCommand" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9732521" timestamp2="9732521">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="5235" _type="InsertStringCommand" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9732670" timestamp2="9732670">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="5236" _type="InsertStringCommand" date="Mon Apr 11 22:32:14 EDT 2022" starttimestamp="1649721002230" timestamp="9732670" timestamp2="9732670">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="5238" _type="InsertStringCommand" date="Mon Apr 11 22:32:15 EDT 2022" starttimestamp="1649721002230" timestamp="9732838" timestamp2="9732838">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5239" _type="InsertStringCommand" date="Mon Apr 11 22:32:15 EDT 2022" starttimestamp="1649721002230" timestamp="9732838" timestamp2="9732838">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5241" _type="InsertStringCommand" date="Mon Apr 11 22:32:15 EDT 2022" starttimestamp="1649721002230" timestamp="9733018" timestamp2="9733018">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5285" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 22:32:44 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="9762266" type="Run" />
  <Command __id="5287" _type="ConsoleOutput" date="Mon Apr 11 22:32:45 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9763031" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54630]:An existing connection was forcibly closed by the remote host"), Diff(INSERT,"Enter a line of input to be printed remotely¶Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5289" _type="PauseCommand" date="Mon Apr 11 22:32:56 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="9774226">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[11195]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="5288" _type="ConsoleInput" date="Mon Apr 11 22:32:56 EDT 2022" starttimestamp="1649721002230" timestamp="9774226" type="Exception">
    <outputString><![CDATA[hi hi hi
]]></outputString>
  </Command>
  <Command __id="5290" _type="ConsoleOutput" date="Mon Apr 11 22:32:56 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9774279" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶"), Diff(DELETE,"C"), Diff(INSERT,"c"), Diff(EQUAL,"lient "), Diff(DELETE,"Connect to Server"), Diff(INSERT,"channel has written"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5291" _type="ConsoleOutput" date="Mon Apr 11 22:32:56 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9774295" type="ConsoleOutput">
    <outputString><![CDATA[hi hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54650]
SERVER SENT MESSAGE TO CLIENT
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶client channel has written"), Diff(INSERT,"hi hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54650]¶SERVER SENT MESSAGE TO CLIENT"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5293" _type="PauseCommand" date="Mon Apr 11 22:34:46 EDT 2022" range="1m-2m" starttimestamp="1649721002230" timestamp="9884090">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[109795]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5292" _type="SelectTextCommand" caretOffset="2407" date="Mon Apr 11 22:34:46 EDT 2022" end="2495" start="2407" starttimestamp="1649721002230" timestamp="9884090" />
  <Command __id="5294" _type="SelectTextCommand" caretOffset="2407" date="Mon Apr 11 22:34:46 EDT 2022" end="2495" start="2407" starttimestamp="1649721002230" timestamp="9884090" />
  <Command __id="5295" _type="CopyCommand" date="Mon Apr 11 22:34:46 EDT 2022" starttimestamp="1649721002230" timestamp="9884388" />
  <Command __id="5297" _type="PauseCommand" date="Mon Apr 11 22:34:49 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9887562">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3174]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5296" _type="MoveCaretCommand" caretOffset="3021" date="Mon Apr 11 22:34:49 EDT 2022" docOffset="3021" starttimestamp="1649721002230" timestamp="9887562" />
  <Command __id="5298" _type="MoveCaretCommand" caretOffset="3021" date="Mon Apr 11 22:34:49 EDT 2022" docOffset="3021" starttimestamp="1649721002230" timestamp="9887562" />
  <Command __id="5299" _type="MoveCaretCommand" caretOffset="3072" date="Mon Apr 11 22:34:50 EDT 2022" docOffset="3072" starttimestamp="1649721002230" timestamp="9888291" />
  <Command __id="5300" _type="MoveCaretCommand" caretOffset="3072" date="Mon Apr 11 22:34:50 EDT 2022" docOffset="3072" starttimestamp="1649721002230" timestamp="9888291" />
  <Command __id="5302" _type="InsertStringCommand" date="Mon Apr 11 22:34:50 EDT 2022" starttimestamp="1649721002230" timestamp="9888623" timestamp2="9888623">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5303" _type="InsertStringCommand" date="Mon Apr 11 22:34:50 EDT 2022" starttimestamp="1649721002230" timestamp="9888623" timestamp2="9888623">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5305" _type="PasteCommand" date="Mon Apr 11 22:34:51 EDT 2022" starttimestamp="1649721002230" timestamp="9889342" />
  <Command __id="5307" _type="PauseCommand" date="Mon Apr 11 22:34:54 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9892545">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3203]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5306" _type="SelectTextCommand" caretOffset="3017" date="Mon Apr 11 22:34:54 EDT 2022" end="3021" start="3017" starttimestamp="1649721002230" timestamp="9892545" />
  <Command __id="5308" _type="SelectTextCommand" caretOffset="3017" date="Mon Apr 11 22:34:54 EDT 2022" end="3021" start="3017" starttimestamp="1649721002230" timestamp="9892545" />
  <Command __id="5310" _type="InsertStringCommand" date="Mon Apr 11 22:34:54 EDT 2022" starttimestamp="1649721002230" timestamp="9892672" timestamp2="9892672">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5311" _type="InsertStringCommand" date="Mon Apr 11 22:34:54 EDT 2022" starttimestamp="1649721002230" timestamp="9892672" timestamp2="9892672">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5313" _type="InsertStringCommand" date="Mon Apr 11 22:34:55 EDT 2022" starttimestamp="1649721002230" timestamp="9893070" timestamp2="9893070">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="5314" _type="InsertStringCommand" date="Mon Apr 11 22:34:55 EDT 2022" starttimestamp="1649721002230" timestamp="9893070" timestamp2="9893070">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="5316" _type="InsertStringCommand" date="Mon Apr 11 22:34:55 EDT 2022" starttimestamp="1649721002230" timestamp="9893251" timestamp2="9893251">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5317" _type="InsertStringCommand" date="Mon Apr 11 22:34:55 EDT 2022" starttimestamp="1649721002230" timestamp="9893251" timestamp2="9893251">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5319" _type="InsertStringCommand" date="Mon Apr 11 22:34:55 EDT 2022" starttimestamp="1649721002230" timestamp="9893391" timestamp2="9893391">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5320" _type="InsertStringCommand" date="Mon Apr 11 22:34:55 EDT 2022" starttimestamp="1649721002230" timestamp="9893391" timestamp2="9893391">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5322" _type="InsertStringCommand" date="Mon Apr 11 22:34:55 EDT 2022" starttimestamp="1649721002230" timestamp="9893618" timestamp2="9893618">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5323" _type="InsertStringCommand" date="Mon Apr 11 22:34:55 EDT 2022" starttimestamp="1649721002230" timestamp="9893618" timestamp2="9893618">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5325" _type="InsertStringCommand" date="Mon Apr 11 22:34:55 EDT 2022" starttimestamp="1649721002230" timestamp="9893732" timestamp2="9893732">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5326" _type="InsertStringCommand" date="Mon Apr 11 22:34:55 EDT 2022" starttimestamp="1649721002230" timestamp="9893732" timestamp2="9893732">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5328" _type="InsertStringCommand" date="Mon Apr 11 22:34:56 EDT 2022" starttimestamp="1649721002230" timestamp="9893803" timestamp2="9893803">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5329" _type="InsertStringCommand" date="Mon Apr 11 22:34:56 EDT 2022" starttimestamp="1649721002230" timestamp="9893803" timestamp2="9893803">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5331" _type="InsertStringCommand" date="Mon Apr 11 22:34:56 EDT 2022" starttimestamp="1649721002230" timestamp="9893903" timestamp2="9893903">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5332" _type="InsertStringCommand" date="Mon Apr 11 22:34:56 EDT 2022" starttimestamp="1649721002230" timestamp="9893903" timestamp2="9893903">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5334" _type="PauseCommand" date="Mon Apr 11 22:34:58 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9896637">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2734]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5333" _type="SelectTextCommand" caretOffset="3032" date="Mon Apr 11 22:34:58 EDT 2022" end="3035" start="3032" starttimestamp="1649721002230" timestamp="9896637" />
  <Command __id="5335" _type="SelectTextCommand" caretOffset="3032" date="Mon Apr 11 22:34:58 EDT 2022" end="3035" start="3032" starttimestamp="1649721002230" timestamp="9896638" />
  <Command __id="5337" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:34:59 EDT 2022" starttimestamp="1649721002230" timestamp="9897276" />
  <Command __id="5338" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:34:59 EDT 2022" starttimestamp="1649721002230" timestamp="9897276" />
  <Command __id="5340" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:34:59 EDT 2022" starttimestamp="1649721002230" timestamp="9897401" />
  <Command __id="5341" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:34:59 EDT 2022" starttimestamp="1649721002230" timestamp="9897402" />
  <Command __id="5343" _type="InsertStringCommand" date="Mon Apr 11 22:34:59 EDT 2022" starttimestamp="1649721002230" timestamp="9897598" timestamp2="9897598">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5344" _type="InsertStringCommand" date="Mon Apr 11 22:34:59 EDT 2022" starttimestamp="1649721002230" timestamp="9897599" timestamp2="9897599">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5346" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898052" timestamp2="9898052">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="5347" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898052" timestamp2="9898052">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="5349" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898236" timestamp2="9898236">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5350" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898236" timestamp2="9898236">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5352" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898329" timestamp2="9898329">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5353" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898329" timestamp2="9898329">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5355" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898448" timestamp2="9898448">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5356" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898448" timestamp2="9898448">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5358" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898658" timestamp2="9898658">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5359" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898658" timestamp2="9898658">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5361" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898764" timestamp2="9898764">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5362" _type="InsertStringCommand" date="Mon Apr 11 22:35:00 EDT 2022" starttimestamp="1649721002230" timestamp="9898764" timestamp2="9898764">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5364" _type="PauseCommand" date="Mon Apr 11 22:35:02 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9900021">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1257]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5363" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:35:02 EDT 2022" starttimestamp="1649721002230" timestamp="9900021" />
  <Command __id="5365" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:35:02 EDT 2022" starttimestamp="1649721002230" timestamp="9900122" />
  <Command __id="5366" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:35:02 EDT 2022" starttimestamp="1649721002230" timestamp="9900151" />
  <Command __id="5368" _type="PauseCommand" date="Mon Apr 11 22:35:06 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="9904563">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4412]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5367" _type="MoveCaretCommand" caretOffset="3224" date="Mon Apr 11 22:35:06 EDT 2022" docOffset="3224" starttimestamp="1649721002230" timestamp="9904563" />
  <Command __id="5369" _type="MoveCaretCommand" caretOffset="3224" date="Mon Apr 11 22:35:06 EDT 2022" docOffset="3224" starttimestamp="1649721002230" timestamp="9904563" />
  <DocumentChange __id="4912" _type="Insert" date="Mon Apr 11 22:29:24 EDT 2022" docASTNodeCount="372" docActiveCodeLength="2646" docExpressionCount="268" docLength="3089" length="35" offset="2788" repeat="35" starttimestamp="1649721002230" timestamp="9561802" timestamp2="9565850">
    <text><![CDATA[ver is sending a message to clients]]></text>
  </DocumentChange>
  <DocumentChange __id="5020" _type="Insert" date="Mon Apr 11 22:29:29 EDT 2022" docASTNodeCount="372" docActiveCodeLength="2647" docExpressionCount="268" docLength="3090" length="1" offset="2824" starttimestamp="1649721002230" timestamp="9567483">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="5026" _type="Replace" date="Mon Apr 11 22:29:34 EDT 2022" docASTNodeCount="372" docActiveCodeLength="2642" docExpressionCount="268" docLength="3085" endLine="67" insertionLength="1" int_docASTNodeCount="372" int_docActiveCodeLength="2641" int_docExpressionCount="268" int_docLength="3084" length="6" offset="2872" startLine="67" starttimestamp="1649721002230" timestamp="9572021">
    <deletedText><![CDATA[aNextL]]></deletedText>
    <insertedText><![CDATA[l]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5036" _type="Insert" date="Mon Apr 11 22:29:43 EDT 2022" docASTNodeCount="372" docActiveCodeLength="2646" docExpressionCount="268" docLength="3089" length="4" offset="2927" repeat="4" starttimestamp="1649721002230" timestamp="9581555" timestamp2="9582190">
    <text><![CDATA[Wtit]]></text>
  </DocumentChange>
  <DocumentChange __id="5048" _type="Delete" date="Mon Apr 11 22:29:44 EDT 2022" docASTNodeCount="372" docActiveCodeLength="2643" docExpressionCount="268" docLength="3086" endLine="68" length="3" offset="2928" repeat="3" startLine="68" starttimestamp="1649721002230" timestamp="9582627" timestamp2="9582890">
    <text><![CDATA[tit]]></text>
  </DocumentChange>
  <DocumentChange __id="5057" _type="Insert" date="Mon Apr 11 22:29:45 EDT 2022" docASTNodeCount="372" docActiveCodeLength="2647" docExpressionCount="268" docLength="3090" length="4" offset="2928" repeat="4" starttimestamp="1649721002230" timestamp="9583001" timestamp2="9583301">
    <text><![CDATA[rite]]></text>
  </DocumentChange>
  <DocumentChange __id="5097" _type="Insert" date="Mon Apr 11 22:32:02 EDT 2022" docASTNodeCount="376" docActiveCodeLength="2649" docExpressionCount="271" docLength="3092" length="2" offset="3076" starttimestamp="1649721002230" timestamp="9720432">
    <text><![CDATA[""]]></text>
  </DocumentChange>
  <DocumentChange __id="5100" _type="Delete" date="Mon Apr 11 22:32:03 EDT 2022" docASTNodeCount="372" docActiveCodeLength="2647" docExpressionCount="268" docLength="3090" endLine="73" length="2" offset="3076" repeat="2" startLine="73" starttimestamp="1649721002230" timestamp="9720919" timestamp2="9720925">
    <text><![CDATA[""]]></text>
  </DocumentChange>
  <DocumentChange __id="5104" _type="Insert" date="Mon Apr 11 22:32:03 EDT 2022" docASTNodeCount="376" docActiveCodeLength="2657" docExpressionCount="271" docLength="3100" length="10" offset="3076" repeat="10" starttimestamp="1649721002230" timestamp="9721179" timestamp2="9722331">
    <text><![CDATA[System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="5131" _type="Replace" date="Mon Apr 11 22:32:05 EDT 2022" docASTNodeCount="376" docActiveCodeLength="2658" docExpressionCount="271" docLength="3101" endLine="73" insertionLength="4" int_docASTNodeCount="374" int_docActiveCodeLength="2654" int_docExpressionCount="269" int_docLength="3097" length="3" offset="3083" startLine="73" starttimestamp="1649721002230" timestamp="9723132">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5135" _type="Insert" date="Mon Apr 11 22:32:06 EDT 2022" docASTNodeCount="378" docActiveCodeLength="2668" docExpressionCount="273" docLength="3111" length="10" offset="3087" repeat="9" starttimestamp="1649721002230" timestamp="9723958" timestamp2="9725018">
    <text><![CDATA[printlnl()]]></text>
  </DocumentChange>
  <DocumentChange __id="5147" _type="Delete" date="Mon Apr 11 22:32:07 EDT 2022" docASTNodeCount="378" docActiveCodeLength="2665" docExpressionCount="273" docLength="3108" endLine="73" length="3" offset="3094" repeat="3" startLine="73" starttimestamp="1649721002230" timestamp="9725360" timestamp2="9725564">
    <text><![CDATA[l()]]></text>
  </DocumentChange>
  <DocumentChange __id="5154" _type="Insert" date="Mon Apr 11 22:32:08 EDT 2022" docASTNodeCount="379" docActiveCodeLength="2684" docExpressionCount="274" docLength="3127" length="19" offset="3094" repeat="17" starttimestamp="1649721002230" timestamp="9726098" timestamp2="9731433">
    <text><![CDATA[("SERVER SENT MA");]]></text>
  </DocumentChange>
  <DocumentChange __id="5219" _type="Delete" date="Mon Apr 11 22:32:14 EDT 2022" docASTNodeCount="379" docActiveCodeLength="2683" docExpressionCount="274" docLength="3126" endLine="73" length="1" offset="3109" startLine="73" starttimestamp="1649721002230" timestamp="9731857">
    <text><![CDATA[A]]></text>
  </DocumentChange>
  <DocumentChange __id="5222" _type="Insert" date="Mon Apr 11 22:32:14 EDT 2022" docASTNodeCount="379" docActiveCodeLength="2699" docExpressionCount="274" docLength="3142" length="16" offset="3109" repeat="16" starttimestamp="1649721002230" timestamp="9731899" timestamp2="9734078">
    <text><![CDATA[ESSAGE TO CLIENT]]></text>
  </DocumentChange>
  <DocumentChange __id="5301" _type="Insert" date="Mon Apr 11 22:34:50 EDT 2022" docASTNodeCount="379" docActiveCodeLength="2703" docExpressionCount="274" docLength="3146" length="4" offset="3072" starttimestamp="1649721002230" timestamp="9888610">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="5304" _type="Replace" date="Mon Apr 11 22:34:51 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2791" docExpressionCount="285" docLength="3234" endLine="73" insertionLength="90" int_docASTNodeCount="379" int_docActiveCodeLength="2701" int_docExpressionCount="274" int_docLength="3144" length="2" offset="3074" startLine="73" starttimestamp="1649721002230" timestamp="9889333">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5309" _type="Replace" date="Mon Apr 11 22:34:54 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2788" docExpressionCount="285" docLength="3231" endLine="71" insertionLength="1" int_docASTNodeCount="365" int_docActiveCodeLength="2787" int_docExpressionCount="265" int_docLength="3230" length="4" offset="3017" startLine="71" starttimestamp="1649721002230" timestamp="9892664">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5312" _type="Insert" date="Mon Apr 11 22:34:55 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2795" docExpressionCount="285" docLength="3238" length="7" offset="3018" repeat="7" starttimestamp="1649721002230" timestamp="9893064" timestamp2="9893897">
    <text><![CDATA[Message]]></text>
  </DocumentChange>
  <DocumentChange __id="5336" _type="Delete" date="Mon Apr 11 22:34:59 EDT 2022" docASTNodeCount="369" docActiveCodeLength="2791" docExpressionCount="267" docLength="3234" endLine="71" length="4" offset="3031" repeat="2" startLine="71" starttimestamp="1649721002230" timestamp="9897269" timestamp2="9897398">
    <text><![CDATA[arg2]]></text>
  </DocumentChange>
  <DocumentChange __id="5342" _type="Insert" date="Mon Apr 11 22:34:59 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2798" docExpressionCount="285" docLength="3241" length="7" offset="3031" repeat="7" starttimestamp="1649721002230" timestamp="9897593" timestamp2="9898758">
    <text><![CDATA[aLength]]></text>
  </DocumentChange>
  <Command __id="5371" _type="PauseCommand" date="Mon Apr 11 22:35:07 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9905706">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1143]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="5370" _type="Insert" date="Mon Apr 11 22:35:07 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2800" docExpressionCount="285" docLength="3243" length="2" offset="3224" repeat="2" starttimestamp="1649721002230" timestamp="9905706" timestamp2="9905942">
    <text><![CDATA[: ]]></text>
  </DocumentChange>
  <Command __id="5372" _type="InsertStringCommand" date="Mon Apr 11 22:35:07 EDT 2022" starttimestamp="1649721002230" timestamp="9905711" timestamp2="9905711">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="5373" _type="InsertStringCommand" date="Mon Apr 11 22:35:07 EDT 2022" starttimestamp="1649721002230" timestamp="9905711" timestamp2="9905711">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="5375" _type="InsertStringCommand" date="Mon Apr 11 22:35:08 EDT 2022" starttimestamp="1649721002230" timestamp="9905945" timestamp2="9905945">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5376" _type="InsertStringCommand" date="Mon Apr 11 22:35:08 EDT 2022" starttimestamp="1649721002230" timestamp="9905945" timestamp2="9905945">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5377" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:35:08 EDT 2022" starttimestamp="1649721002230" timestamp="9906367" />
  <Command __id="5378" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:35:08 EDT 2022" starttimestamp="1649721002230" timestamp="9906367" />
  <Command __id="5380" _type="InsertStringCommand" date="Mon Apr 11 22:35:09 EDT 2022" starttimestamp="1649721002230" timestamp="9906923" timestamp2="9906923">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="5381" _type="InsertStringCommand" date="Mon Apr 11 22:35:09 EDT 2022" starttimestamp="1649721002230" timestamp="9906924" timestamp2="9906924">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="5383" _type="InsertStringCommand" date="Mon Apr 11 22:35:09 EDT 2022" starttimestamp="1649721002230" timestamp="9907049" timestamp2="9907049">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5384" _type="InsertStringCommand" date="Mon Apr 11 22:35:09 EDT 2022" starttimestamp="1649721002230" timestamp="9907049" timestamp2="9907049">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5386" _type="InsertStringCommand" date="Mon Apr 11 22:35:09 EDT 2022" starttimestamp="1649721002230" timestamp="9907434" timestamp2="9907434">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5387" _type="InsertStringCommand" date="Mon Apr 11 22:35:09 EDT 2022" starttimestamp="1649721002230" timestamp="9907434" timestamp2="9907434">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5389" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9907784" timestamp2="9907784">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="5390" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9907784" timestamp2="9907784">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="5392" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9907931" timestamp2="9907931">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5393" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9907931" timestamp2="9907931">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5395" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9907982" timestamp2="9907982">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5396" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9907982" timestamp2="9907982">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5398" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9908183" timestamp2="9908183">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5399" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9908183" timestamp2="9908183">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5401" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9908406" timestamp2="9908406">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5402" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9908406" timestamp2="9908406">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5404" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9908475" timestamp2="9908475">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5405" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9908475" timestamp2="9908475">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5407" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9908562" timestamp2="9908562">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5408" _type="InsertStringCommand" date="Mon Apr 11 22:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="9908562" timestamp2="9908562">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5410" _type="InsertStringCommand" date="Mon Apr 11 22:35:11 EDT 2022" starttimestamp="1649721002230" timestamp="9909338" timestamp2="9909338">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5411" _type="InsertStringCommand" date="Mon Apr 11 22:35:11 EDT 2022" starttimestamp="1649721002230" timestamp="9909338" timestamp2="9909338">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5413" _type="InsertStringCommand" date="Mon Apr 11 22:35:11 EDT 2022" starttimestamp="1649721002230" timestamp="9909569" timestamp2="9909569">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5414" _type="InsertStringCommand" date="Mon Apr 11 22:35:11 EDT 2022" starttimestamp="1649721002230" timestamp="9909569" timestamp2="9909569">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5416" _type="InsertStringCommand" date="Mon Apr 11 22:35:11 EDT 2022" starttimestamp="1649721002230" timestamp="9909751" timestamp2="9909751">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5417" _type="InsertStringCommand" date="Mon Apr 11 22:35:11 EDT 2022" starttimestamp="1649721002230" timestamp="9909752" timestamp2="9909752">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5419" _type="InsertStringCommand" date="Mon Apr 11 22:35:12 EDT 2022" starttimestamp="1649721002230" timestamp="9909849" timestamp2="9909849">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5420" _type="InsertStringCommand" date="Mon Apr 11 22:35:12 EDT 2022" starttimestamp="1649721002230" timestamp="9909849" timestamp2="9909849">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5422" _type="InsertStringCommand" date="Mon Apr 11 22:35:12 EDT 2022" starttimestamp="1649721002230" timestamp="9910004" timestamp2="9910004">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5423" _type="InsertStringCommand" date="Mon Apr 11 22:35:12 EDT 2022" starttimestamp="1649721002230" timestamp="9910004" timestamp2="9910004">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5425" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:35:12 EDT 2022" starttimestamp="1649721002230" timestamp="9910322" />
  <Command __id="5426" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:35:12 EDT 2022" starttimestamp="1649721002230" timestamp="9910322" />
  <Command __id="5428" _type="InsertStringCommand" date="Mon Apr 11 22:35:12 EDT 2022" starttimestamp="1649721002230" timestamp="9910497" timestamp2="9910497">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5429" _type="InsertStringCommand" date="Mon Apr 11 22:35:12 EDT 2022" starttimestamp="1649721002230" timestamp="9910497" timestamp2="9910497">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5431" _type="InsertStringCommand" date="Mon Apr 11 22:35:12 EDT 2022" starttimestamp="1649721002230" timestamp="9910580" timestamp2="9910580">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5432" _type="InsertStringCommand" date="Mon Apr 11 22:35:12 EDT 2022" starttimestamp="1649721002230" timestamp="9910581" timestamp2="9910581">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5433" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:35:13 EDT 2022" starttimestamp="1649721002230" timestamp="9911309" />
  <Command __id="5434" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:35:13 EDT 2022" starttimestamp="1649721002230" timestamp="9911411" />
  <Command __id="5435" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:35:13 EDT 2022" starttimestamp="1649721002230" timestamp="9911442" />
  <Command __id="5436" _type="ShellCommand" date="Mon Apr 11 22:35:13 EDT 2022" starttimestamp="1649721002230" timestamp="9911582" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5438" _type="PauseCommand" date="Mon Apr 11 22:35:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9912823">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1239]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5437" _type="ShellCommand" date="Mon Apr 11 22:35:15 EDT 2022" starttimestamp="1649721002230" timestamp="9912821" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5440" _type="PauseCommand" date="Mon Apr 11 22:35:17 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9914806">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1985]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5439" _type="MoveCaretCommand" caretOffset="3228" date="Mon Apr 11 22:35:17 EDT 2022" docOffset="3228" starttimestamp="1649721002230" timestamp="9914806" />
  <Command __id="5441" _type="MoveCaretCommand" caretOffset="3228" date="Mon Apr 11 22:35:17 EDT 2022" docOffset="3228" starttimestamp="1649721002230" timestamp="9914806" />
  <Command __id="5443" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:35:17 EDT 2022" starttimestamp="1649721002230" timestamp="9915206" />
  <Command __id="5444" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:35:17 EDT 2022" starttimestamp="1649721002230" timestamp="9915206" />
  <Command __id="5446" _type="InsertStringCommand" date="Mon Apr 11 22:35:17 EDT 2022" starttimestamp="1649721002230" timestamp="9915424" timestamp2="9915424">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5447" _type="InsertStringCommand" date="Mon Apr 11 22:35:17 EDT 2022" starttimestamp="1649721002230" timestamp="9915424" timestamp2="9915424">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5449" _type="PauseCommand" date="Mon Apr 11 22:35:18 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9916518">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1093]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5448" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:35:18 EDT 2022" starttimestamp="1649721002230" timestamp="9916517" />
  <Command __id="5450" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:35:18 EDT 2022" starttimestamp="1649721002230" timestamp="9916624" />
  <Command __id="5451" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:35:18 EDT 2022" starttimestamp="1649721002230" timestamp="9916646" />
  <Command __id="5453" _type="PauseCommand" date="Mon Apr 11 22:35:20 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="9918389">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1743]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5464" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 22:35:28 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="9926201" type="Run" />
  <Command __id="5466" _type="ConsoleOutput" date="Mon Apr 11 22:35:29 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9927013" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54650]:An existing connection was forcibly closed by the remote host"), Diff(INSERT,"Enter a line of input to be printed remotely¶Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5468" _type="PauseCommand" date="Mon Apr 11 22:35:34 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="9932768">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5755]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="5467" _type="ConsoleInput" date="Mon Apr 11 22:35:34 EDT 2022" starttimestamp="1649721002230" timestamp="9932768" type="Exception">
    <outputString><![CDATA[hi hi hi
]]></outputString>
  </Command>
  <Command __id="5469" _type="ConsoleOutput" date="Mon Apr 11 22:35:35 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="9932821" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶"), Diff(DELETE,"C"), Diff(INSERT,"c"), Diff(EQUAL,"lient "), Diff(DELETE,"Connect to Server"), Diff(INSERT,"channel has written"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5470" _type="ExceptionCommand" date="Mon Apr 11 22:35:35 EDT 2022" starttimestamp="1649721002230" timestamp="9932861" type="Exception">
    <exceptionString><![CDATA[hi hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54673]
java.lang.StringIndexOutOfBoundsException: offset 0, count 3096, length 42
	at java.base/java.lang.String.checkBoundsOffCount(String.java:3304)
	at java.base/java.lang.String.<init>(String.java:591)
	at nioExample.AnNIOManagerPrintServer.written(AnNIOManagerPrintServer.java:74)
	at inputport.nio.manager.commands.classes.AWriteCommand.execute(AWriteCommand.java:102)
	at inputport.nio.manager.ASelectionWriteManager.processChannelBufferedWrites(ASelectionWriteManager.java:143)
	at inputport.nio.manager.ASelectionWriteManager.processChannelBufferedWrites(ASelectionWriteManager.java:136)
	at inputport.nio.manager.ASelectionManager.processSelectedOperation(ASelectionManager.java:87)
	at inputport.nio.manager.ASelectionManager.run(ASelectionManager.java:110)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5472" _type="PauseCommand" date="Mon Apr 11 22:36:42 EDT 2022" range="1m-2m" starttimestamp="1649721002230" timestamp="10000368">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[67507]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5471" _type="SelectTextCommand" caretOffset="3171" date="Mon Apr 11 22:36:42 EDT 2022" end="3171" start="3169" starttimestamp="1649721002230" timestamp="10000368" />
  <Command __id="5473" _type="SelectTextCommand" caretOffset="3171" date="Mon Apr 11 22:36:42 EDT 2022" end="3171" start="3169" starttimestamp="1649721002230" timestamp="10000368" />
  <Command __id="5475" _type="PauseCommand" date="Mon Apr 11 22:36:44 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10001998">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1630]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5474" _type="MoveCaretCommand" caretOffset="3169" date="Mon Apr 11 22:36:44 EDT 2022" docOffset="3169" starttimestamp="1649721002230" timestamp="10001998" />
  <Command __id="5476" _type="MoveCaretCommand" caretOffset="3169" date="Mon Apr 11 22:36:44 EDT 2022" docOffset="3169" starttimestamp="1649721002230" timestamp="10001998" />
  <Command __id="5478" _type="PauseCommand" date="Mon Apr 11 22:36:46 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10003965">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1967]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5477" _type="SelectTextCommand" caretOffset="3134" date="Mon Apr 11 22:36:46 EDT 2022" end="3169" start="3134" starttimestamp="1649721002230" timestamp="10003965" />
  <Command __id="5479" _type="SelectTextCommand" caretOffset="3134" date="Mon Apr 11 22:36:46 EDT 2022" end="3169" start="3134" starttimestamp="1649721002230" timestamp="10003965" />
  <Command __id="5481" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:36:46 EDT 2022" starttimestamp="1649721002230" timestamp="10004271" />
  <Command __id="5482" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:36:46 EDT 2022" starttimestamp="1649721002230" timestamp="10004271" />
  <Command __id="5484" _type="PauseCommand" date="Mon Apr 11 22:36:48 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10005815">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1544]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5483" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:36:48 EDT 2022" starttimestamp="1649721002230" timestamp="10005815" />
  <Command __id="5485" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:36:48 EDT 2022" starttimestamp="1649721002230" timestamp="10005899" />
  <Command __id="5486" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:36:48 EDT 2022" starttimestamp="1649721002230" timestamp="10005926" />
  <Command __id="5488" _type="PauseCommand" date="Mon Apr 11 22:36:49 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10007735">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1809]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5499" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 22:36:58 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="10016186" type="Run" />
  <Command __id="5501" _type="ConsoleOutput" date="Mon Apr 11 22:36:59 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="10016956" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54673]:An existing connection was forcibly closed by the remote host"), Diff(INSERT,"Enter a line of input to be printed remotely¶Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5503" _type="PauseCommand" date="Mon Apr 11 22:37:04 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="10022587">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5631]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="5502" _type="ConsoleInput" date="Mon Apr 11 22:37:04 EDT 2022" starttimestamp="1649721002230" timestamp="10022587" type="Exception">
    <outputString><![CDATA[hi hi
]]></outputString>
  </Command>
  <Command __id="5504" _type="ConsoleOutput" date="Mon Apr 11 22:37:04 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="10022650" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶"), Diff(DELETE,"C"), Diff(INSERT,"c"), Diff(EQUAL,"lient "), Diff(DELETE,"Connect to Server"), Diff(INSERT,"channel has written"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5505" _type="ConsoleOutput" date="Mon Apr 11 22:37:04 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="10022655" type="ConsoleOutput">
    <outputString><![CDATA[hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54700]
SERVER SENT MESSAGE TO CLIENT: The server is sending a message to clients
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶client channel has written"), Diff(INSERT,"hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54700]¶SERVER SENT MESSAGE TO CLIENT: The server is sending a message to clients"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="5379" _type="Insert" date="Mon Apr 11 22:35:09 EDT 2022" docASTNodeCount="395" docActiveCodeLength="2815" docExpressionCount="286" docLength="3258" length="15" offset="3227" repeat="15" starttimestamp="1649721002230" timestamp="9906916" timestamp2="9909998">
    <text><![CDATA[, aMessageStrig]]></text>
  </DocumentChange>
  <DocumentChange __id="5424" _type="Delete" date="Mon Apr 11 22:35:12 EDT 2022" docASTNodeCount="395" docActiveCodeLength="2814" docExpressionCount="286" docLength="3257" endLine="75" length="1" offset="3241" startLine="75" starttimestamp="1649721002230" timestamp="9910319">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <DocumentChange __id="5427" _type="Insert" date="Mon Apr 11 22:35:12 EDT 2022" docASTNodeCount="395" docActiveCodeLength="2816" docExpressionCount="286" docLength="3259" length="2" offset="3241" repeat="2" starttimestamp="1649721002230" timestamp="9910491" timestamp2="9910575">
    <text><![CDATA[ng]]></text>
  </DocumentChange>
  <DocumentChange __id="5442" _type="Delete" date="Mon Apr 11 22:35:17 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2815" docExpressionCount="285" docLength="3258" endLine="75" length="1" offset="3227" startLine="75" starttimestamp="1649721002230" timestamp="9915196">
    <text><![CDATA[,]]></text>
  </DocumentChange>
  <DocumentChange __id="5445" _type="Insert" date="Mon Apr 11 22:35:17 EDT 2022" docASTNodeCount="396" docActiveCodeLength="2816" docExpressionCount="287" docLength="3259" length="1" offset="3227" starttimestamp="1649721002230" timestamp="9915410">
    <text><![CDATA[+]]></text>
  </DocumentChange>
  <DocumentChange __id="5480" _type="Delete" date="Mon Apr 11 22:36:46 EDT 2022" docASTNodeCount="392" docActiveCodeLength="2781" docExpressionCount="283" docLength="3224" endLine="74" length="35" offset="3134" startLine="73" starttimestamp="1649721002230" timestamp="10004263">
    <text><![CDATA[, aMessage.position(),
				aLength]]></text>
  </DocumentChange>
  <Command __id="5507" _type="PauseCommand" date="Mon Apr 11 22:37:37 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="10055270">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[32615]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5508" _type="SelectTextCommand" caretOffset="2046" date="Mon Apr 11 22:37:37 EDT 2022" end="2111" start="2046" starttimestamp="1649721002230" timestamp="10055407" />
  <Command __id="5506" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:37:37 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" projectName="A6" starttimestamp="1649721002230" timestamp="10055270">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="5510" _type="PauseCommand" date="Mon Apr 11 22:38:15 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="10093202">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[37795]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5511" _type="MoveCaretCommand" caretOffset="3134" date="Mon Apr 11 22:38:15 EDT 2022" docOffset="3134" starttimestamp="1649721002230" timestamp="10093320" />
  <Command __id="5509" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:38:15 EDT 2022" docASTNodeCount="392" docActiveCodeLength="2781" docExpressionCount="283" docLength="3224" projectName="A6" starttimestamp="1649721002230" timestamp="10093202">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		"), Diff(INSERT,"String line = "The server is sending a message to clients";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());"), Diff(EQUAL,"¶		nioManager.write(aSocketChannel, a"), Diff(INSERT,"Write"), Diff(EQUAL,"Message, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer a"), Diff(DELETE,"rg1"), Diff(INSERT,"Message"), Diff(EQUAL,", int a"), Diff(DELETE,"rg2"), Diff(INSERT,"Length"), Diff(EQUAL,") {¶		// TODO Auto-generated method stub¶		"), Diff(INSERT,"String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString);"), Diff(EQUAL,"¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;


import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}
//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}
	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		
			nioManager.enableListenableAccepts(aServerFactoryChannel,
					SelectionKey.OP_READ, // allow incoming writes that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}		
	}
	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		//TODO want to save aSocketChannel
	}
	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);
		
		//TODO echo the message right back to the same client
		//Turn of the servers reading ability
		//nioManager.write(socketChannel, aWriteMessage, this);
		//turn on the client's reading ability
		String line = "The server is sending a message to clients";
		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());
		nioManager.write(aSocketChannel, aWriteMessage, this);
	}
	@Override
	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString);
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="5513" _type="PauseCommand" date="Mon Apr 11 22:38:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="10097561">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4241]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5514" _type="SelectTextCommand" caretOffset="2046" date="Mon Apr 11 22:38:19 EDT 2022" end="2111" start="2046" starttimestamp="1649721002230" timestamp="10097649" />
  <Command __id="5512" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:38:19 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" projectName="A6" starttimestamp="1649721002230" timestamp="10097561">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="5516" _type="PauseCommand" date="Mon Apr 11 22:38:21 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10099246">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1597]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5517" _type="MoveCaretCommand" caretOffset="3134" date="Mon Apr 11 22:38:21 EDT 2022" docOffset="3134" starttimestamp="1649721002230" timestamp="10099326" />
  <Command __id="5515" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:38:21 EDT 2022" docASTNodeCount="392" docActiveCodeLength="2781" docExpressionCount="283" docLength="3224" projectName="A6" starttimestamp="1649721002230" timestamp="10099246">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		String line = "The server is sending a message to clients";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());¶		nioManager.write(aSocketChannel, aWriteMessage, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString);¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5519" _type="PauseCommand" date="Mon Apr 11 22:40:00 EDT 2022" range="1m-2m" starttimestamp="1649721002230" timestamp="10198662">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[99336]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5520" _type="SelectTextCommand" caretOffset="2046" date="Mon Apr 11 22:40:01 EDT 2022" end="2111" start="2046" starttimestamp="1649721002230" timestamp="10198815" />
  <Command __id="5518" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:40:00 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" projectName="A6" starttimestamp="1649721002230" timestamp="10198662">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="5522" _type="PauseCommand" date="Mon Apr 11 22:41:59 EDT 2022" range="1m-2m" starttimestamp="1649721002230" timestamp="10317006">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[118191]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5523" _type="MoveCaretCommand" caretOffset="3134" date="Mon Apr 11 22:41:59 EDT 2022" docOffset="3134" starttimestamp="1649721002230" timestamp="10317109" />
  <Command __id="5521" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:41:59 EDT 2022" docASTNodeCount="392" docActiveCodeLength="2781" docExpressionCount="283" docLength="3224" projectName="A6" starttimestamp="1649721002230" timestamp="10317006">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		String line = "The server is sending a message to clients";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());¶		nioManager.write(aSocketChannel, aWriteMessage, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString);¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5525" _type="PauseCommand" date="Mon Apr 11 22:42:07 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="10325111">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8002]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5526" _type="SelectTextCommand" caretOffset="2046" date="Mon Apr 11 22:42:07 EDT 2022" end="2111" start="2046" starttimestamp="1649721002230" timestamp="10325221" />
  <Command __id="5524" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:42:07 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" projectName="A6" starttimestamp="1649721002230" timestamp="10325111">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="5528" _type="PauseCommand" date="Mon Apr 11 22:42:10 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="10328053">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2832]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5529" _type="MoveCaretCommand" caretOffset="3134" date="Mon Apr 11 22:42:10 EDT 2022" docOffset="3134" starttimestamp="1649721002230" timestamp="10328172" />
  <Command __id="5531" _type="PauseCommand" date="Mon Apr 11 22:42:12 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10329928">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1756]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5530" _type="MoveCaretCommand" caretOffset="3208" date="Mon Apr 11 22:42:12 EDT 2022" docOffset="3208" starttimestamp="1649721002230" timestamp="10329928" />
  <Command __id="5532" _type="MoveCaretCommand" caretOffset="3208" date="Mon Apr 11 22:42:12 EDT 2022" docOffset="3208" starttimestamp="1649721002230" timestamp="10329928" />
  <Command __id="5527" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:42:10 EDT 2022" docASTNodeCount="392" docActiveCodeLength="2781" docExpressionCount="283" docLength="3224" projectName="A6" starttimestamp="1649721002230" timestamp="10328053">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		String line = "The server is sending a message to clients";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());¶		nioManager.write(aSocketChannel, aWriteMessage, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString);¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5534" _type="PauseCommand" date="Mon Apr 11 22:42:14 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="10332149">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2221]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="5535" _type="InsertStringCommand" date="Mon Apr 11 22:42:14 EDT 2022" starttimestamp="1649721002230" timestamp="10332165" timestamp2="10332165">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5536" _type="InsertStringCommand" date="Mon Apr 11 22:42:14 EDT 2022" starttimestamp="1649721002230" timestamp="10332165" timestamp2="10332165">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5538" _type="InsertStringCommand" date="Mon Apr 11 22:42:14 EDT 2022" starttimestamp="1649721002230" timestamp="10332474" timestamp2="10332474">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5539" _type="InsertStringCommand" date="Mon Apr 11 22:42:14 EDT 2022" starttimestamp="1649721002230" timestamp="10332474" timestamp2="10332474">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5542" _type="PauseCommand" date="Mon Apr 11 22:42:16 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10333815">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1341]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="5541" _type="InsertStringCommand" date="Mon Apr 11 22:42:16 EDT 2022" starttimestamp="1649721002230" timestamp="10333815" timestamp2="10333815">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5543" _type="InsertStringCommand" date="Mon Apr 11 22:42:16 EDT 2022" starttimestamp="1649721002230" timestamp="10333815" timestamp2="10333815">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5545" _type="InsertStringCommand" date="Mon Apr 11 22:42:16 EDT 2022" starttimestamp="1649721002230" timestamp="10333949" timestamp2="10333949">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5546" _type="InsertStringCommand" date="Mon Apr 11 22:42:16 EDT 2022" starttimestamp="1649721002230" timestamp="10333950" timestamp2="10333950">
    <data><![CDATA[-]]></data>
  </Command>
  <DocumentChange __id="5533" _type="Insert" date="Mon Apr 11 22:42:14 EDT 2022" docASTNodeCount="393" docActiveCodeLength="2785" docExpressionCount="284" docLength="3228" length="4" offset="3208" repeat="4" starttimestamp="1649721002230" timestamp="10332149" timestamp2="10333942">
    <text><![CDATA[+ --]]></text>
  </DocumentChange>
  <Command __id="5548" _type="PauseCommand" date="Mon Apr 11 22:42:17 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10335079">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1129]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="5547" _type="Delete" date="Mon Apr 11 22:42:17 EDT 2022" docASTNodeCount="393" docActiveCodeLength="2783" docExpressionCount="284" docLength="3226" endLine="74" length="2" offset="3210" repeat="2" startLine="74" starttimestamp="1649721002230" timestamp="10335079" timestamp2="10335221">
    <text><![CDATA[--]]></text>
  </DocumentChange>
  <Command __id="5549" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:42:17 EDT 2022" starttimestamp="1649721002230" timestamp="10335092" />
  <Command __id="5550" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:42:17 EDT 2022" starttimestamp="1649721002230" timestamp="10335092" />
  <Command __id="5552" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:42:17 EDT 2022" starttimestamp="1649721002230" timestamp="10335225" />
  <Command __id="5553" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:42:17 EDT 2022" starttimestamp="1649721002230" timestamp="10335225" />
  <Command __id="5555" _type="InsertStringCommand" date="Mon Apr 11 22:42:17 EDT 2022" starttimestamp="1649721002230" timestamp="10335766" timestamp2="10335766">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5556" _type="InsertStringCommand" date="Mon Apr 11 22:42:17 EDT 2022" starttimestamp="1649721002230" timestamp="10335766" timestamp2="10335766">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5557" _type="InsertStringCommand" date="Mon Apr 11 22:42:18 EDT 2022" starttimestamp="1649721002230" timestamp="10335907" timestamp2="10335907">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5558" _type="InsertStringCommand" date="Mon Apr 11 22:42:18 EDT 2022" starttimestamp="1649721002230" timestamp="10335907" timestamp2="10335907">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5559" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:42:18 EDT 2022" starttimestamp="1649721002230" timestamp="10336250" />
  <Command __id="5560" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Apr 11 22:42:18 EDT 2022" starttimestamp="1649721002230" timestamp="10336250" />
  <Command __id="5562" _type="InsertStringCommand" date="Mon Apr 11 22:42:19 EDT 2022" starttimestamp="1649721002230" timestamp="10336774" timestamp2="10336774">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5563" _type="InsertStringCommand" date="Mon Apr 11 22:42:19 EDT 2022" starttimestamp="1649721002230" timestamp="10336774" timestamp2="10336774">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5565" _type="InsertStringCommand" date="Mon Apr 11 22:42:19 EDT 2022" starttimestamp="1649721002230" timestamp="10336909" timestamp2="10336909">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5566" _type="InsertStringCommand" date="Mon Apr 11 22:42:19 EDT 2022" starttimestamp="1649721002230" timestamp="10336909" timestamp2="10336909">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5568" _type="InsertStringCommand" date="Mon Apr 11 22:42:19 EDT 2022" starttimestamp="1649721002230" timestamp="10337343" timestamp2="10337343">
    <data><![CDATA[>]]></data>
  </Command>
  <Command __id="5569" _type="InsertStringCommand" date="Mon Apr 11 22:42:19 EDT 2022" starttimestamp="1649721002230" timestamp="10337343" timestamp2="10337343">
    <data><![CDATA[>]]></data>
  </Command>
  <Command __id="5570" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:42:19 EDT 2022" starttimestamp="1649721002230" timestamp="10337722" />
  <Command __id="5571" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Apr 11 22:42:19 EDT 2022" starttimestamp="1649721002230" timestamp="10337722" />
  <Command __id="5573" _type="InsertStringCommand" date="Mon Apr 11 22:42:20 EDT 2022" starttimestamp="1649721002230" timestamp="10338499" timestamp2="10338499">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5574" _type="InsertStringCommand" date="Mon Apr 11 22:42:20 EDT 2022" starttimestamp="1649721002230" timestamp="10338499" timestamp2="10338499">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5576" _type="InsertStringCommand" date="Mon Apr 11 22:42:20 EDT 2022" starttimestamp="1649721002230" timestamp="10338766" timestamp2="10338766">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5577" _type="InsertStringCommand" date="Mon Apr 11 22:42:20 EDT 2022" starttimestamp="1649721002230" timestamp="10338766" timestamp2="10338766">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5579" _type="InsertStringCommand" date="Mon Apr 11 22:42:21 EDT 2022" starttimestamp="1649721002230" timestamp="10338896" timestamp2="10338896">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5580" _type="InsertStringCommand" date="Mon Apr 11 22:42:21 EDT 2022" starttimestamp="1649721002230" timestamp="10338897" timestamp2="10338897">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5582" _type="InsertStringCommand" date="Mon Apr 11 22:42:21 EDT 2022" starttimestamp="1649721002230" timestamp="10339408" timestamp2="10339408">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5583" _type="InsertStringCommand" date="Mon Apr 11 22:42:21 EDT 2022" starttimestamp="1649721002230" timestamp="10339408" timestamp2="10339408">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5585" _type="InsertStringCommand" date="Mon Apr 11 22:42:21 EDT 2022" starttimestamp="1649721002230" timestamp="10339541" timestamp2="10339541">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5586" _type="InsertStringCommand" date="Mon Apr 11 22:42:21 EDT 2022" starttimestamp="1649721002230" timestamp="10339541" timestamp2="10339541">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5588" _type="InsertStringCommand" date="Mon Apr 11 22:42:22 EDT 2022" starttimestamp="1649721002230" timestamp="10339814" timestamp2="10339814">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5589" _type="InsertStringCommand" date="Mon Apr 11 22:42:22 EDT 2022" starttimestamp="1649721002230" timestamp="10339815" timestamp2="10339815">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5591" _type="InsertStringCommand" date="Mon Apr 11 22:42:22 EDT 2022" starttimestamp="1649721002230" timestamp="10339942" timestamp2="10339942">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5592" _type="InsertStringCommand" date="Mon Apr 11 22:42:22 EDT 2022" starttimestamp="1649721002230" timestamp="10339942" timestamp2="10339942">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5594" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:42:23 EDT 2022" starttimestamp="1649721002230" timestamp="10340885" />
  <Command __id="5595" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:42:23 EDT 2022" starttimestamp="1649721002230" timestamp="10340885" />
  <Command __id="5597" _type="InsertStringCommand" date="Mon Apr 11 22:42:23 EDT 2022" starttimestamp="1649721002230" timestamp="10341676" timestamp2="10341676">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5598" _type="InsertStringCommand" date="Mon Apr 11 22:42:23 EDT 2022" starttimestamp="1649721002230" timestamp="10341676" timestamp2="10341676">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5600" _type="PauseCommand" date="Mon Apr 11 22:42:25 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10343139">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1463]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5599" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:42:25 EDT 2022" starttimestamp="1649721002230" timestamp="10343139" />
  <Command __id="5601" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:42:25 EDT 2022" starttimestamp="1649721002230" timestamp="10343243" />
  <Command __id="5602" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:42:25 EDT 2022" starttimestamp="1649721002230" timestamp="10343266" />
  <DocumentChange __id="5554" _type="Insert" date="Mon Apr 11 22:42:17 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2795" docExpressionCount="285" docLength="3238" length="12" offset="3210" repeat="11" starttimestamp="1649721002230" timestamp="10335762" timestamp2="10339938">
    <text><![CDATA["-->" + arge]]></text>
  </DocumentChange>
  <DocumentChange __id="5593" _type="Delete" date="Mon Apr 11 22:42:23 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2794" docExpressionCount="285" docLength="3237" endLine="74" length="1" offset="3221" startLine="74" starttimestamp="1649721002230" timestamp="10340882">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="5596" _type="Insert" date="Mon Apr 11 22:42:23 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2795" docExpressionCount="285" docLength="3238" length="1" offset="3221" starttimestamp="1649721002230" timestamp="10341669">
    <text><![CDATA[0]]></text>
  </DocumentChange>
  <Command __id="5604" _type="PauseCommand" date="Mon Apr 11 22:42:29 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="10347473">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4207]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5605" _type="SelectTextCommand" caretOffset="2046" date="Mon Apr 11 22:42:29 EDT 2022" end="2111" start="2046" starttimestamp="1649721002230" timestamp="10347606" />
  <Command __id="5607" _type="PauseCommand" date="Mon Apr 11 22:42:35 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="10352962">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5356]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5606" _type="MoveCaretCommand" caretOffset="3545" date="Mon Apr 11 22:42:35 EDT 2022" docOffset="3545" starttimestamp="1649721002230" timestamp="10352962" />
  <Command __id="5608" _type="MoveCaretCommand" caretOffset="3545" date="Mon Apr 11 22:42:35 EDT 2022" docOffset="3545" starttimestamp="1649721002230" timestamp="10352962" />
  <Command __id="5610" _type="PauseCommand" date="Mon Apr 11 22:42:54 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="10372659">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[19697]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5609" _type="SelectTextCommand" caretOffset="3502" date="Mon Apr 11 22:42:54 EDT 2022" end="3541" start="3502" starttimestamp="1649721002230" timestamp="10372659" />
  <Command __id="5611" _type="SelectTextCommand" caretOffset="3502" date="Mon Apr 11 22:42:54 EDT 2022" end="3541" start="3502" starttimestamp="1649721002230" timestamp="10372659" />
  <Command __id="5612" _type="CopyCommand" date="Mon Apr 11 22:42:55 EDT 2022" starttimestamp="1649721002230" timestamp="10372893" />
  <Command __id="5603" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:42:29 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" projectName="A6" starttimestamp="1649721002230" timestamp="10347473">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="5614" _type="PauseCommand" date="Mon Apr 11 22:43:41 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="10418795">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[45902]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5618" _type="ShellCommand" date="Mon Apr 11 22:47:37 EDT 2022" starttimestamp="1649721002230" timestamp="10655469" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5621" _type="SelectTextCommand" caretOffset="3502" date="Mon Apr 11 22:47:37 EDT 2022" end="3541" start="3502" starttimestamp="1649721002230" timestamp="10655710" />
  <Command __id="5623" _type="PauseCommand" date="Mon Apr 11 22:48:07 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="10684790">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[29080]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5622" _type="MoveCaretCommand" caretOffset="2536" date="Mon Apr 11 22:48:07 EDT 2022" docOffset="2536" starttimestamp="1649721002230" timestamp="10684790" />
  <Command __id="5624" _type="MoveCaretCommand" caretOffset="2536" date="Mon Apr 11 22:48:07 EDT 2022" docOffset="2536" starttimestamp="1649721002230" timestamp="10684790" />
  <Command __id="5626" _type="PauseCommand" date="Mon Apr 11 22:48:09 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="10687127">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2337]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5625" _type="MoveCaretCommand" caretOffset="2535" date="Mon Apr 11 22:48:09 EDT 2022" docOffset="2535" starttimestamp="1649721002230" timestamp="10687127" />
  <Command __id="5627" _type="MoveCaretCommand" caretOffset="2535" date="Mon Apr 11 22:48:09 EDT 2022" docOffset="2535" starttimestamp="1649721002230" timestamp="10687127" />
  <Command __id="5629" _type="InsertStringCommand" date="Mon Apr 11 22:48:10 EDT 2022" starttimestamp="1649721002230" timestamp="10687881" timestamp2="10687881">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="5630" _type="InsertStringCommand" date="Mon Apr 11 22:48:10 EDT 2022" starttimestamp="1649721002230" timestamp="10687881" timestamp2="10687881">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="5632" _type="InsertStringCommand" date="Mon Apr 11 22:48:10 EDT 2022" starttimestamp="1649721002230" timestamp="10687993" timestamp2="10687993">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="5633" _type="InsertStringCommand" date="Mon Apr 11 22:48:10 EDT 2022" starttimestamp="1649721002230" timestamp="10687993" timestamp2="10687993">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="5613" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:43:41 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2795" docExpressionCount="285" docLength="3238" projectName="A6" starttimestamp="1649721002230" timestamp="10418795">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		String line = "The server is sending a message to clients";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());¶		nioManager.write(aSocketChannel, aWriteMessage, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString"), Diff(INSERT,"+ "-->" + arg0"), Diff(EQUAL,");¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;


import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}
//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}
	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		
			nioManager.enableListenableAccepts(aServerFactoryChannel,
					SelectionKey.OP_READ, // allow incoming writes that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}		
	}
	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		//TODO want to save aSocketChannel
	}
	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);
		
		//TODO echo the message right back to the same client
		//Turn of the servers reading ability
		//nioManager.write(socketChannel, aWriteMessage, this);
		//turn on the client's reading ability
		String line = "The server is sending a message to clients";
		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());
		nioManager.write(aSocketChannel, aWriteMessage, this);
	}
	@Override
	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString+ "-->" + arg0);
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="5620" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:47:37 EDT 2022" docASTNodeCount="488" docActiveCodeLength="3270" docExpressionCount="347" docLength="3554" projectName="A6" starttimestamp="1649721002230" timestamp="10655560">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
  </Command>
  <DocumentChange __id="5628" _type="Insert" date="Mon Apr 11 22:48:10 EDT 2022" docASTNodeCount="487" docActiveCodeLength="3267" docExpressionCount="346" docLength="3556" length="2" offset="2535" repeat="2" starttimestamp="1649721002230" timestamp="10687874" timestamp2="10687988">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="5635" _type="PauseCommand" date="Mon Apr 11 22:48:14 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="10691773">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3780]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5636" _type="MoveCaretCommand" caretOffset="3222" date="Mon Apr 11 22:48:14 EDT 2022" docOffset="3222" starttimestamp="1649721002230" timestamp="10691892" />
  <Command __id="5638" _type="PauseCommand" date="Mon Apr 11 22:48:19 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="10696942">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5050]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5637" _type="SelectTextCommand" caretOffset="1933" date="Mon Apr 11 22:48:19 EDT 2022" end="1954" start="1933" starttimestamp="1649721002230" timestamp="10696942" />
  <Command __id="5639" _type="SelectTextCommand" caretOffset="1933" date="Mon Apr 11 22:48:19 EDT 2022" end="1954" start="1933" starttimestamp="1649721002230" timestamp="10696942" />
  <Command __id="5640" _type="CopyCommand" date="Mon Apr 11 22:48:19 EDT 2022" starttimestamp="1649721002230" timestamp="10697138" />
  <Command __id="5634" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:48:14 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2795" docExpressionCount="285" docLength="3238" projectName="A6" starttimestamp="1649721002230" timestamp="10691773">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		String line = "The server is sending a message to clients";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());¶		nioManager.write(aSocketChannel, aWriteMessage, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString+ "-->" + arg0);¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5642" _type="PauseCommand" date="Mon Apr 11 22:48:20 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10698263">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1125]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5643" _type="MoveCaretCommand" caretOffset="2537" date="Mon Apr 11 22:48:20 EDT 2022" docOffset="2537" starttimestamp="1649721002230" timestamp="10698351" />
  <Command __id="5645" _type="PauseCommand" date="Mon Apr 11 22:48:22 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10699955">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1604]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5644" _type="MoveCaretCommand" caretOffset="2577" date="Mon Apr 11 22:48:22 EDT 2022" docOffset="2577" starttimestamp="1649721002230" timestamp="10699955" />
  <Command __id="5646" _type="MoveCaretCommand" caretOffset="2577" date="Mon Apr 11 22:48:22 EDT 2022" docOffset="2577" starttimestamp="1649721002230" timestamp="10699955" />
  <Command __id="5648" _type="InsertStringCommand" date="Mon Apr 11 22:48:22 EDT 2022" starttimestamp="1649721002230" timestamp="10700227" timestamp2="10700227">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5649" _type="InsertStringCommand" date="Mon Apr 11 22:48:22 EDT 2022" starttimestamp="1649721002230" timestamp="10700227" timestamp2="10700227">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5651" _type="PasteCommand" date="Mon Apr 11 22:48:22 EDT 2022" starttimestamp="1649721002230" timestamp="10700585" />
  <Command __id="5653" _type="PauseCommand" date="Mon Apr 11 22:48:24 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10702086">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1501]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5652" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:48:24 EDT 2022" starttimestamp="1649721002230" timestamp="10702086" />
  <Command __id="5654" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:48:24 EDT 2022" starttimestamp="1649721002230" timestamp="10702186" />
  <Command __id="5655" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:48:24 EDT 2022" starttimestamp="1649721002230" timestamp="10702217" />
  <Command __id="5657" _type="PauseCommand" date="Mon Apr 11 22:48:27 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="10705216">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2999]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5660" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Mon Apr 11 22:48:31 EDT 2022" starttimestamp="1649721002230" timestamp="10709715" />
  <Command __id="5662" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 22:48:31 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="10709734" type="Run" />
  <Command __id="5663" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 22:48:31 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="10709734" type="Run" />
  <Command __id="5641" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:48:20 EDT 2022" docASTNodeCount="487" docActiveCodeLength="3267" docExpressionCount="346" docLength="3556" projectName="A6" starttimestamp="1649721002230" timestamp="10698263">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					"), Diff(INSERT,"//"), Diff(EQUAL,"0, // do not allow any incoming messages¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception e) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {
		System.out.println("client channel has written");
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		String aMessageString = new String(arg1.array(), arg1.position(),
				arg2);
		System.out.println(aMessageString + "<--" + arg0);
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(arg1, this);
		
	}

}]]></snapshot>
  </Command>
  <DocumentChange __id="5647" _type="Insert" date="Mon Apr 11 22:48:22 EDT 2022" docASTNodeCount="487" docActiveCodeLength="3274" docExpressionCount="346" docLength="3563" length="7" offset="2577" starttimestamp="1649721002230" timestamp="10700218">
    <text><![CDATA[
					]]></text>
  </DocumentChange>
  <DocumentChange __id="5650" _type="Replace" date="Mon Apr 11 22:48:22 EDT 2022" docASTNodeCount="490" docActiveCodeLength="3295" docExpressionCount="349" docLength="3584" endLine="65" insertionLength="26" int_docASTNodeCount="487" int_docActiveCodeLength="3269" int_docExpressionCount="346" int_docLength="3558" length="5" offset="2579" startLine="65" starttimestamp="1649721002230" timestamp="10700505">
    <deletedText><![CDATA[					]]></deletedText>
    <insertedText><![CDATA[					SelectionKey.OP_READ,]]></insertedText>
  </DocumentChange>
  <Command __id="5665" _type="PauseCommand" date="Mon Apr 11 22:48:33 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10710974">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1240]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5670" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 22:48:43 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="10721508" type="Run" />
  <Command __id="5672" _type="ConsoleOutput" date="Mon Apr 11 22:48:44 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="10722232" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54700]¶SERVER SENT MESSAGE TO CLIENT: The server is sending a message to clients"), Diff(INSERT,"Enter a line of input to be printed remotely¶Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5674" _type="PauseCommand" date="Mon Apr 11 22:48:50 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="10727807">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5575]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="5677" _type="BalloonCommand" date="Mon Apr 11 22:50:02 EDT 2022" message="*******************************************
Worked 40 minutes(fixed)/42 minutes(context based) from
Mon Apr 11 21:50:02 EDT 2022 to Mon Apr 11 22:48:50 EDT 2022
Edited 1 Projects: 
	A6
Edited 3 Files: 
	C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java
	C:\Users\mannu\COMP_533\A6\src\nioExample\NIOManagerPrintServer.java
	C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java
Number of insert: 1204
Number of delete: 111
" starttimestamp="1649721002230" timestamp="10800131">
    <fineGrainedWorkTime><![CDATA[42]]></fineGrainedWorkTime>
    <insert><![CDATA[1204]]></insert>
    <startTime><![CDATA[1649728202351]]></startTime>
    <endTime><![CDATA[1649731730123]]></endTime>
    <workTime><![CDATA[40]]></workTime>
    <delete><![CDATA[111]]></delete>
  </Command>
  <Command __id="5664" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:48:33 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2795" docExpressionCount="285" docLength="3238" projectName="A6" starttimestamp="1649721002230" timestamp="10710974">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		String line = "The server is sending a message to clients";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());¶		nioManager.write(aSocketChannel, aWriteMessage, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString+ "-->" + arg0);¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5680" _type="PauseCommand" date="Mon Apr 11 22:50:38 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="10836164">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[36033]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5681" _type="MoveCaretCommand" caretOffset="2605" date="Mon Apr 11 22:50:38 EDT 2022" docOffset="2605" starttimestamp="1649721002230" timestamp="10836273" />
  <Command __id="5683" _type="PauseCommand" date="Mon Apr 11 22:50:47 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="10845465">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9192]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5682" _type="SelectTextCommand" caretOffset="3494" date="Mon Apr 11 22:50:47 EDT 2022" end="3571" start="3494" starttimestamp="1649721002230" timestamp="10845465" />
  <Command __id="5684" _type="SelectTextCommand" caretOffset="3494" date="Mon Apr 11 22:50:47 EDT 2022" end="3571" start="3494" starttimestamp="1649721002230" timestamp="10845465" />
  <Command __id="5686" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:50:48 EDT 2022" starttimestamp="1649721002230" timestamp="10845819" />
  <Command __id="5687" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Apr 11 22:50:48 EDT 2022" starttimestamp="1649721002230" timestamp="10845819" />
  <Command __id="5689" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Mon Apr 11 22:50:48 EDT 2022" starttimestamp="1649721002230" timestamp="10846692" />
  <Command __id="5691" _type="PauseCommand" date="Mon Apr 11 22:50:50 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10847962">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1270]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5690" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Apr 11 22:50:50 EDT 2022" starttimestamp="1649721002230" timestamp="10847962" />
  <Command __id="5692" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:50:50 EDT 2022" starttimestamp="1649721002230" timestamp="10848065" />
  <Command __id="5693" _type="EclipseCommand" commandID="" date="Mon Apr 11 22:50:50 EDT 2022" starttimestamp="1649721002230" timestamp="10848086" />
  <Command __id="5695" _type="PauseCommand" date="Mon Apr 11 22:50:52 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="10850059">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1973]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5706" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Mon Apr 11 22:51:02 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="10860735" type="Run" />
  <Command __id="5708" _type="ConsoleOutput" date="Mon Apr 11 22:51:03 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="10861503" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54807]:An existing connection was forcibly closed by the remote host"), Diff(INSERT,"Enter a line of input to be printed remotely¶Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5710" _type="PauseCommand" date="Mon Apr 11 22:51:09 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="10867723">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6220]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="5709" _type="ConsoleInput" date="Mon Apr 11 22:51:09 EDT 2022" starttimestamp="1649721002230" timestamp="10867723" type="Exception">
    <outputString><![CDATA[hi hi
]]></outputString>
  </Command>
  <Command __id="5711" _type="ConsoleOutput" date="Mon Apr 11 22:51:10 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="10867802" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
The server is sending a message to clients<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:54829 remote=localhost/127.0.0.1:9000]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶"), Diff(DELETE,"C"), Diff(INSERT,"c"), Diff(EQUAL,"lient "), Diff(DELETE,"Connect to Server"), Diff(INSERT,"channel has written¶The server is sending a message to clients<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:54829 remote=localhost/127.0.0.1:9000]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5712" _type="ConsoleOutput" date="Mon Apr 11 22:51:10 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="10867807" type="ConsoleOutput">
    <outputString><![CDATA[hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54829]
SERVER SENT MESSAGE TO CLIENT: The server is sending a message to clients-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54829]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶client channel has written¶"), Diff(INSERT,"hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54829]¶SERVER SENT MESSAGE TO CLIENT: "), Diff(EQUAL,"The server is sending a message to clients"), Diff(DELETE,"<"), Diff(EQUAL,"--"), Diff(INSERT,">"), Diff(EQUAL,"java.nio.channels.SocketChannel[connected local=/127.0.0.1:"), Diff(DELETE,"54829"), Diff(INSERT,"9000"), Diff(EQUAL," remote="), Diff(DELETE,"localhost"), Diff(EQUAL,"/127.0.0.1:"), Diff(DELETE,"9000"), Diff(INSERT,"54829"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="5679" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 22:50:38 EDT 2022" docASTNodeCount="490" docActiveCodeLength="3295" docExpressionCount="349" docLength="3584" projectName="A6" starttimestamp="1649721002230" timestamp="10836164">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶¶	protected AnNIOManagerPrintClient(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶//	}¶¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			String aNextLine = scanner.nextLine();¶			// wrap writes to the buffer and then flips it¶			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			nioManager.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					"), Diff(INSERT,"SelectionKey.OP_READ,¶					"), Diff(EQUAL,"this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("Client Connect to Server");¶	}¶¶	@Override¶	public void notConnected(SocketChannel theSocketChannel, Exception e) {¶¶	}¶¶	@Override¶	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {¶		System.out.println("client channel has written");¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(arg1.array(), arg1.position(),¶				arg2);¶		System.out.println(aMessageString + "<--" + arg0);¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(arg1, this);¶		¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception e) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {
		System.out.println("client channel has written");
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		String aMessageString = new String(arg1.array(), arg1.position(),
				arg2);
		System.out.println(aMessageString + "<--" + arg0);
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(arg1, this);
		
	}

}]]></snapshot>
  </Command>
  <DocumentChange __id="5685" _type="Delete" date="Mon Apr 11 22:50:48 EDT 2022" docASTNodeCount="484" docActiveCodeLength="3250" docExpressionCount="344" docLength="3505" endLine="101" length="79" offset="3494" repeat="2" startLine="99" starttimestamp="1649721002230" timestamp="10845809" timestamp2="10846686">
    <text><![CDATA[// TODO Auto-generated method stub
		nioManager.addReadListener(arg1, this);
]]></text>
  </DocumentChange>
  <Command __id="5714" _type="PauseCommand" date="Mon Apr 11 23:00:25 EDT 2022" range="5m-10m" starttimestamp="1649721002230" timestamp="11423272">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[555465]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5715" _type="SelectTextCommand" caretOffset="1933" date="Mon Apr 11 23:00:25 EDT 2022" end="1954" start="1933" starttimestamp="1649721002230" timestamp="11423420" />
  <Command __id="5717" _type="PauseCommand" date="Mon Apr 11 23:00:53 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="11451230">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[27810]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5716" _type="SelectTextCommand" caretOffset="2926" date="Mon Apr 11 23:00:53 EDT 2022" end="2939" start="2926" starttimestamp="1649721002230" timestamp="11451230" />
  <Command __id="5718" _type="SelectTextCommand" caretOffset="2926" date="Mon Apr 11 23:00:53 EDT 2022" end="2939" start="2926" starttimestamp="1649721002230" timestamp="11451230" />
  <Command __id="5713" _type="DiffBasedFileOpenCommand" date="Mon Apr 11 23:00:25 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2795" docExpressionCount="285" docLength="3238" projectName="A6" starttimestamp="1649721002230" timestamp="11423272">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		String line = "The server is sending a message to clients";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());¶		nioManager.write(aSocketChannel, aWriteMessage, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString+ "-->" + arg0);¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5720" _type="PauseCommand" date="Mon Apr 11 23:00:54 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="11452566">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1336]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="5719" _type="Replace" date="Mon Apr 11 23:00:54 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2783" docExpressionCount="285" docLength="3226" endLine="68" insertionLength="1" int_docASTNodeCount="393" int_docActiveCodeLength="2782" int_docExpressionCount="284" int_docLength="3225" length="13" offset="2926" startLine="68" starttimestamp="1649721002230" timestamp="11452566">
    <deletedText><![CDATA[aWriteMessage]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <Command __id="5721" _type="InsertStringCommand" date="Mon Apr 11 23:00:54 EDT 2022" starttimestamp="1649721002230" timestamp="11452594" timestamp2="11452594">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5722" _type="InsertStringCommand" date="Mon Apr 11 23:00:54 EDT 2022" starttimestamp="1649721002230" timestamp="11452594" timestamp2="11452594">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5724" _type="InsertStringCommand" date="Mon Apr 11 23:00:55 EDT 2022" starttimestamp="1649721002230" timestamp="11453414" timestamp2="11453414">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="5725" _type="InsertStringCommand" date="Mon Apr 11 23:00:55 EDT 2022" starttimestamp="1649721002230" timestamp="11453414" timestamp2="11453414">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="5727" _type="InsertStringCommand" date="Mon Apr 11 23:00:55 EDT 2022" starttimestamp="1649721002230" timestamp="11453630" timestamp2="11453630">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5728" _type="InsertStringCommand" date="Mon Apr 11 23:00:55 EDT 2022" starttimestamp="1649721002230" timestamp="11453630" timestamp2="11453630">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5730" _type="InsertStringCommand" date="Mon Apr 11 23:00:55 EDT 2022" starttimestamp="1649721002230" timestamp="11453726" timestamp2="11453726">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5731" _type="InsertStringCommand" date="Mon Apr 11 23:00:55 EDT 2022" starttimestamp="1649721002230" timestamp="11453727" timestamp2="11453727">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5733" _type="InsertStringCommand" date="Mon Apr 11 23:00:56 EDT 2022" starttimestamp="1649721002230" timestamp="11454077" timestamp2="11454077">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5734" _type="InsertStringCommand" date="Mon Apr 11 23:00:56 EDT 2022" starttimestamp="1649721002230" timestamp="11454077" timestamp2="11454077">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5736" _type="InsertStringCommand" date="Mon Apr 11 23:00:56 EDT 2022" starttimestamp="1649721002230" timestamp="11454229" timestamp2="11454229">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5737" _type="InsertStringCommand" date="Mon Apr 11 23:00:56 EDT 2022" starttimestamp="1649721002230" timestamp="11454229" timestamp2="11454229">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5739" _type="InsertStringCommand" date="Mon Apr 11 23:00:56 EDT 2022" starttimestamp="1649721002230" timestamp="11454332" timestamp2="11454332">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5740" _type="InsertStringCommand" date="Mon Apr 11 23:00:56 EDT 2022" starttimestamp="1649721002230" timestamp="11454332" timestamp2="11454332">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5742" _type="InsertStringCommand" date="Mon Apr 11 23:00:56 EDT 2022" starttimestamp="1649721002230" timestamp="11454446" timestamp2="11454446">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5743" _type="InsertStringCommand" date="Mon Apr 11 23:00:56 EDT 2022" starttimestamp="1649721002230" timestamp="11454446" timestamp2="11454446">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5745" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11454821" timestamp2="11454821">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5746" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11454821" timestamp2="11454821">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5748" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11455085" timestamp2="11455085">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5749" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11455085" timestamp2="11455085">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5751" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11455262" timestamp2="11455262">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5752" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11455262" timestamp2="11455262">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5754" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11455379" timestamp2="11455379">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5755" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11455379" timestamp2="11455379">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5757" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11455463" timestamp2="11455463">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5758" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11455463" timestamp2="11455463">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5760" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11455547" timestamp2="11455547">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5761" _type="InsertStringCommand" date="Mon Apr 11 23:00:57 EDT 2022" starttimestamp="1649721002230" timestamp="11455547" timestamp2="11455547">
    <data><![CDATA[g]]></data>
  </Command>
  <DocumentChange __id="5723" _type="Insert" date="Mon Apr 11 23:00:55 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2796" docExpressionCount="285" docLength="3239" length="13" offset="2927" repeat="13" starttimestamp="1649721002230" timestamp="11453410" timestamp2="11455543">
    <text><![CDATA[MessageString]]></text>
  </DocumentChange>
  <Command __id="5763" _type="PauseCommand" date="Mon Apr 11 23:01:08 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="11466117">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[10570]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="5762" _type="Delete" date="Mon Apr 11 23:01:08 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2783" docExpressionCount="285" docLength="3226" endLine="68" length="13" offset="2927" startLine="68" starttimestamp="1649721002230" timestamp="11466117">
    <text><![CDATA[MessageString]]></text>
  </DocumentChange>
  <Command __id="5764" _type="UndoCommand" date="Mon Apr 11 23:01:08 EDT 2022" starttimestamp="1649721002230" timestamp="11466124" />
  <Command __id="5766" _type="UndoCommand" date="Mon Apr 11 23:01:09 EDT 2022" starttimestamp="1649721002230" timestamp="11466822" />
  <Command __id="5768" _type="PauseCommand" date="Mon Apr 11 23:10:48 EDT 2022" range="5m-10m" starttimestamp="1649721002230" timestamp="12046762">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[579940]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5767" _type="ShellCommand" date="Mon Apr 11 23:10:48 EDT 2022" starttimestamp="1649721002230" timestamp="12046762" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5770" _type="PauseCommand" date="Tue Apr 12 09:10:56 EDT 2022" range=">1h" starttimestamp="1649721002230" timestamp="48054637">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[36007875]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5769" _type="ShellCommand" date="Tue Apr 12 09:10:56 EDT 2022" starttimestamp="1649721002230" timestamp="48054637" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5772" _type="PauseCommand" date="Tue Apr 12 09:11:53 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="48110945">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[56308]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="5771" _type="BalloonCommand" date="Tue Apr 12 09:11:53 EDT 2022" message="*******************************************
Worked 0 minutes(fixed)/1 minutes(context based) from
Mon Apr 11 22:50:02 EDT 2022 to Tue Apr 12 09:10:56 EDT 2022
Edited 1 Projects: 
	A6
Edited 2 Files: 
	C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintClient.java
	C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java
Number of insert: 13
Number of delete: 92
" starttimestamp="1649721002230" timestamp="48110945">
    <fineGrainedWorkTime><![CDATA[1]]></fineGrainedWorkTime>
    <insert><![CDATA[13]]></insert>
    <startTime><![CDATA[1649731802361]]></startTime>
    <endTime><![CDATA[1649769056867]]></endTime>
    <workTime><![CDATA[0]]></workTime>
    <delete><![CDATA[92]]></delete>
  </Command>
  <Command __id="5774" _type="PauseCommand" date="Tue Apr 12 09:28:58 EDT 2022" range="10m-20m" starttimestamp="1649721002230" timestamp="49135805">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[1024860]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5773" _type="ShellCommand" date="Tue Apr 12 09:28:58 EDT 2022" starttimestamp="1649721002230" timestamp="49135805" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5776" _type="PauseCommand" date="Tue Apr 12 09:30:37 EDT 2022" range="1m-2m" starttimestamp="1649721002230" timestamp="49235653">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[99848]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5781" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Apr 12 09:30:39 EDT 2022" starttimestamp="1649721002230" timestamp="49237680" />
  <Command __id="5783" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintServerLauncherNoFactory.java" date="Tue Apr 12 09:30:39 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="49237705" type="Run" />
  <Command __id="5784" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintServerLauncherNoFactory.java" date="Tue Apr 12 09:30:39 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="49237705" type="Run" />
  <Command __id="5786" _type="PauseCommand" date="Tue Apr 12 09:30:44 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49241911">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4206]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5785" _type="ShellCommand" date="Tue Apr 12 09:30:44 EDT 2022" starttimestamp="1649721002230" timestamp="49241911" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5788" _type="PauseCommand" date="Tue Apr 12 09:33:37 EDT 2022" range="2m-5m" starttimestamp="1649721002230" timestamp="49415593">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[173682]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5787" _type="ShellCommand" date="Tue Apr 12 09:33:37 EDT 2022" starttimestamp="1649721002230" timestamp="49415593" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="5765" _type="Replace" date="Mon Apr 11 23:01:09 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2795" docExpressionCount="285" docLength="3238" endLine="68" insertionLength="13" int_docASTNodeCount="393" int_docActiveCodeLength="2782" int_docExpressionCount="284" int_docLength="3225" length="1" offset="2926" startLine="68" starttimestamp="1649721002230" timestamp="11466814">
    <deletedText><![CDATA[a]]></deletedText>
    <insertedText><![CDATA[aWriteMessage]]></insertedText>
  </DocumentChange>
  <Command __id="5790" _type="PauseCommand" date="Tue Apr 12 09:33:46 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="49424017">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8424]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5791" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 09:33:47 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="49425004" />
  <Command __id="5793" _type="PauseCommand" date="Tue Apr 12 09:33:54 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="49432691">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7687]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5792" _type="SelectTextCommand" caretOffset="353" date="Tue Apr 12 09:33:54 EDT 2022" end="444" start="353" starttimestamp="1649721002230" timestamp="49432691" />
  <Command __id="5794" _type="CopyCommand" date="Tue Apr 12 09:33:55 EDT 2022" starttimestamp="1649721002230" timestamp="49433054" />
  <Command __id="5789" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 09:33:46 EDT 2022" docASTNodeCount="1289" docActiveCodeLength="9237" docExpressionCount="902" docLength="10370" projectName="A6" starttimestamp="1649721002230" timestamp="49424017">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		"), Diff(INSERT,"SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		"), Diff(EQUAL,"GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientOutCoupler;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {

	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="5796" _type="PauseCommand" date="Tue Apr 12 09:33:56 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49434565">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1511]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5797" _type="MoveCaretCommand" caretOffset="223" date="Tue Apr 12 09:33:56 EDT 2022" docOffset="358" starttimestamp="1649721002230" timestamp="49434754" />
  <Command __id="5795" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 09:33:56 EDT 2022" docASTNodeCount="42" docActiveCodeLength="365" docExpressionCount="32" docLength="365" projectName="A6" starttimestamp="1649721002230" timestamp="49434565">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\NIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;"), Diff(INSERT,"¶import inputport.nio.manager.listeners.SocketChannelWriteListener;"), Diff(EQUAL,"¶¶public interface NIOManagerPrintServer extends SocketChannelAcceptListener, SocketChannelReadListener"), Diff(INSERT,", SocketChannelWriteListener"), Diff(EQUAL," {¶¶}")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

public interface NIOManagerPrintServer extends SocketChannelAcceptListener, SocketChannelReadListener, SocketChannelWriteListener {

}]]></snapshot>
  </Command>
  <Command __id="5799" _type="PauseCommand" date="Tue Apr 12 09:34:00 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49438195">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3441]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5798" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 09:34:00 EDT 2022" docASTNodeCount="1289" docActiveCodeLength="9237" docExpressionCount="902" docLength="10370" projectName="A6" starttimestamp="1649721002230" timestamp="49438195">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5800" _type="SelectTextCommand" caretOffset="353" date="Tue Apr 12 09:34:01 EDT 2022" end="444" start="353" starttimestamp="1649721002230" timestamp="49438872" />
  <Command __id="5802" _type="SelectTextCommand" caretOffset="2939" date="Tue Apr 12 09:34:02 EDT 2022" end="2939" start="2926" starttimestamp="1649721002230" timestamp="49439927" />
  <Command __id="5804" _type="PauseCommand" date="Tue Apr 12 09:34:07 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="49445212">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5285]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5803" _type="MoveCaretCommand" caretOffset="1058" date="Tue Apr 12 09:34:07 EDT 2022" docOffset="1058" starttimestamp="1649721002230" timestamp="49445212" />
  <Command __id="5805" _type="MoveCaretCommand" caretOffset="1058" date="Tue Apr 12 09:34:07 EDT 2022" docOffset="1058" starttimestamp="1649721002230" timestamp="49445212" />
  <Command __id="5807" _type="InsertStringCommand" date="Tue Apr 12 09:34:07 EDT 2022" starttimestamp="1649721002230" timestamp="49445561" timestamp2="49445561">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5808" _type="InsertStringCommand" date="Tue Apr 12 09:34:07 EDT 2022" starttimestamp="1649721002230" timestamp="49445561" timestamp2="49445561">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5810" _type="InsertStringCommand" date="Tue Apr 12 09:34:07 EDT 2022" starttimestamp="1649721002230" timestamp="49445709" timestamp2="49445709">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5811" _type="InsertStringCommand" date="Tue Apr 12 09:34:07 EDT 2022" starttimestamp="1649721002230" timestamp="49445709" timestamp2="49445709">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5813" _type="InsertStringCommand" date="Tue Apr 12 09:34:08 EDT 2022" starttimestamp="1649721002230" timestamp="49446109" timestamp2="49446109">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5814" _type="InsertStringCommand" date="Tue Apr 12 09:34:08 EDT 2022" starttimestamp="1649721002230" timestamp="49446109" timestamp2="49446109">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5815" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Apr 12 09:34:08 EDT 2022" starttimestamp="1649721002230" timestamp="49446469" />
  <Command __id="5816" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Apr 12 09:34:08 EDT 2022" starttimestamp="1649721002230" timestamp="49446469" />
  <Command __id="5826" _type="PasteCommand" date="Tue Apr 12 09:34:09 EDT 2022" starttimestamp="1649721002230" timestamp="49447622" />
  <Command __id="5828" _type="PauseCommand" date="Tue Apr 12 09:34:12 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49450422">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2800]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5827" _type="MoveCaretCommand" caretOffset="1202" date="Tue Apr 12 09:34:12 EDT 2022" docOffset="1202" starttimestamp="1649721002230" timestamp="49450422" />
  <Command __id="5829" _type="MoveCaretCommand" caretOffset="1202" date="Tue Apr 12 09:34:12 EDT 2022" docOffset="1202" starttimestamp="1649721002230" timestamp="49450424" />
  <Command __id="5831" _type="PauseCommand" date="Tue Apr 12 09:34:14 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49452029">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1605]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5830" _type="MoveCaretCommand" caretOffset="1199" date="Tue Apr 12 09:34:14 EDT 2022" docOffset="1199" starttimestamp="1649721002230" timestamp="49452029" />
  <Command __id="5832" _type="MoveCaretCommand" caretOffset="1199" date="Tue Apr 12 09:34:14 EDT 2022" docOffset="1199" starttimestamp="1649721002230" timestamp="49452029" />
  <Command __id="5834" _type="PauseCommand" date="Tue Apr 12 09:34:16 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49453782">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1753]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5833" _type="SelectTextCommand" caretOffset="1189" date="Tue Apr 12 09:34:16 EDT 2022" end="1202" start="1189" starttimestamp="1649721002230" timestamp="49453782" />
  <Command __id="5835" _type="SelectTextCommand" caretOffset="1189" date="Tue Apr 12 09:34:16 EDT 2022" end="1202" start="1189" starttimestamp="1649721002230" timestamp="49453782" />
  <Command __id="5801" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 09:34:01 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2795" docExpressionCount="285" docLength="3238" projectName="A6" starttimestamp="1649721002230" timestamp="49439759">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶¶¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		String line = "The server is sending a message to clients";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());¶		nioManager.write(aSocketChannel, aWriteMessage, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString+ "-->" + arg0);¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="5806" _type="Insert" date="Tue Apr 12 09:34:07 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2804" docExpressionCount="285" docLength="3247" length="9" offset="1058" repeat="3" starttimestamp="1649721002230" timestamp="49445527" timestamp2="49446094">
    <text><![CDATA[
	
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="5817" _type="Replace" date="Tue Apr 12 09:34:09 EDT 2022" docASTNodeCount="408" docActiveCodeLength="2895" docExpressionCount="291" docLength="3338" endLine="25" insertionLength="92" int_docASTNodeCount="394" int_docActiveCodeLength="2803" int_docExpressionCount="285" int_docLength="3246" length="1" offset="1063" startLine="25" starttimestamp="1649721002230" timestamp="49447194">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5818" _type="Delete" date="Tue Apr 12 09:34:09 EDT 2022" docASTNodeCount="408" docActiveCodeLength="2889" docExpressionCount="291" docLength="3332" endLine="10" length="6" offset="243" startLine="7" starttimestamp="1649721002230" timestamp="49447427">
    <text><![CDATA[


]]></text>
  </DocumentChange>
  <DocumentChange __id="5819" _type="Insert" date="Tue Apr 12 09:34:09 EDT 2022" docASTNodeCount="424" docActiveCodeLength="2988" docExpressionCount="304" docLength="3431" length="99" offset="243" repeat="7" starttimestamp="1649721002230" timestamp="49447431" timestamp2="49447445">
    <text><![CDATA[
import java.util.ArrayList;
import java.util.List;

import client.ClientRemoteInterfaceGIPC;
]]></text>
  </DocumentChange>
  <Command __id="5837" _type="PauseCommand" date="Tue Apr 12 09:34:18 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49456006">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2224]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="5836" _type="Replace" date="Tue Apr 12 09:34:18 EDT 2022" docASTNodeCount="424" docActiveCodeLength="2976" docExpressionCount="304" docLength="3419" endLine="27" insertionLength="1" int_docASTNodeCount="410" int_docActiveCodeLength="2975" int_docExpressionCount="298" int_docLength="3418" length="13" offset="1189" startLine="27" starttimestamp="1649721002230" timestamp="49456006">
    <deletedText><![CDATA[clientListRMI]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <Command __id="5838" _type="InsertStringCommand" date="Tue Apr 12 09:34:18 EDT 2022" starttimestamp="1649721002230" timestamp="49456025" timestamp2="49456025">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5839" _type="InsertStringCommand" date="Tue Apr 12 09:34:18 EDT 2022" starttimestamp="1649721002230" timestamp="49456025" timestamp2="49456025">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5867" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:34:22 EDT 2022" starttimestamp="1649721002230" timestamp="49460169" />
  <Command __id="5869" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:34:22 EDT 2022" starttimestamp="1649721002230" timestamp="49460268" />
  <Command __id="5870" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:34:22 EDT 2022" starttimestamp="1649721002230" timestamp="49460350" />
  <Command __id="5872" _type="PauseCommand" date="Tue Apr 12 09:34:32 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="49470430">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10080]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5877" _type="SelectTextCommand" caretOffset="4343" date="Tue Apr 12 09:34:34 EDT 2022" end="4343" start="4330" starttimestamp="1649721002230" timestamp="49472097" />
  <Command __id="5878" _type="SelectTextCommand" caretOffset="4343" date="Tue Apr 12 09:34:34 EDT 2022" end="4343" start="4330" starttimestamp="1649721002230" timestamp="49472403" />
  <Command __id="5875" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 09:34:34 EDT 2022" projectName="null" starttimestamp="1649721002230" timestamp="49471936">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="5880" _type="PauseCommand" date="Tue Apr 12 09:34:36 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49474297">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1894]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5881" _type="MoveCaretCommand" caretOffset="2528" date="Tue Apr 12 09:34:36 EDT 2022" docOffset="2528" starttimestamp="1649721002230" timestamp="49474743" />
  <Command __id="5883" _type="PauseCommand" date="Tue Apr 12 09:34:44 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="49481784">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7041]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5882" _type="SelectTextCommand" caretOffset="1162" date="Tue Apr 12 09:34:44 EDT 2022" end="1187" start="1162" starttimestamp="1649721002230" timestamp="49481784" />
  <Command __id="5885" _type="PauseCommand" date="Tue Apr 12 09:34:46 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49484745">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2961]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5886" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:34:48 EDT 2022" starttimestamp="1649721002230" timestamp="49486263" />
  <Command __id="5888" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:34:48 EDT 2022" starttimestamp="1649721002230" timestamp="49486312" />
  <Command __id="5889" _type="ShellCommand" date="Tue Apr 12 09:34:48 EDT 2022" starttimestamp="1649721002230" timestamp="49486649" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5891" _type="PauseCommand" date="Tue Apr 12 09:34:50 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49488664">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2015]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5890" _type="ShellCommand" date="Tue Apr 12 09:34:50 EDT 2022" starttimestamp="1649721002230" timestamp="49488664" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5893" _type="PauseCommand" date="Tue Apr 12 09:35:03 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="49500772">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12108]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5892" _type="MoveCaretCommand" caretOffset="2455" date="Tue Apr 12 09:35:03 EDT 2022" docOffset="2455" starttimestamp="1649721002230" timestamp="49500772" />
  <Command __id="5894" _type="InsertStringCommand" date="Tue Apr 12 09:35:03 EDT 2022" starttimestamp="1649721002230" timestamp="49501263" timestamp2="49501263">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5896" _type="PauseCommand" date="Tue Apr 12 09:35:05 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49502855">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1592]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="5895" _type="InsertStringCommand" date="Tue Apr 12 09:35:05 EDT 2022" starttimestamp="1649721002230" timestamp="49502855" timestamp2="49502855">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5897" _type="InsertStringCommand" date="Tue Apr 12 09:35:05 EDT 2022" starttimestamp="1649721002230" timestamp="49503056" timestamp2="49503056">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5898" _type="InsertStringCommand" date="Tue Apr 12 09:35:05 EDT 2022" starttimestamp="1649721002230" timestamp="49503342" timestamp2="49503342">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5899" _type="InsertStringCommand" date="Tue Apr 12 09:35:06 EDT 2022" starttimestamp="1649721002230" timestamp="49503818" timestamp2="49503818">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5900" _type="InsertStringCommand" date="Tue Apr 12 09:35:06 EDT 2022" starttimestamp="1649721002230" timestamp="49503951" timestamp2="49503951">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="5901" _type="InsertStringCommand" date="Tue Apr 12 09:35:06 EDT 2022" starttimestamp="1649721002230" timestamp="49504061" timestamp2="49504061">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5902" _type="InsertStringCommand" date="Tue Apr 12 09:35:06 EDT 2022" starttimestamp="1649721002230" timestamp="49504208" timestamp2="49504208">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5903" _type="InsertStringCommand" date="Tue Apr 12 09:35:06 EDT 2022" starttimestamp="1649721002230" timestamp="49504495" timestamp2="49504495">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="5904" _type="InsertStringCommand" date="Tue Apr 12 09:35:06 EDT 2022" starttimestamp="1649721002230" timestamp="49504647" timestamp2="49504647">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5905" _type="InsertStringCommand" date="Tue Apr 12 09:35:06 EDT 2022" starttimestamp="1649721002230" timestamp="49504747" timestamp2="49504747">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5906" _type="InsertStringCommand" date="Tue Apr 12 09:35:07 EDT 2022" starttimestamp="1649721002230" timestamp="49504914" timestamp2="49504914">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5907" _type="InsertStringCommand" date="Tue Apr 12 09:35:07 EDT 2022" starttimestamp="1649721002230" timestamp="49505010" timestamp2="49505010">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5909" _type="PauseCommand" date="Tue Apr 12 09:35:10 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49507847">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2837]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="5908" _type="InsertStringCommand" date="Tue Apr 12 09:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="49507847" timestamp2="49507847">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5910" _type="InsertStringCommand" date="Tue Apr 12 09:35:10 EDT 2022" starttimestamp="1649721002230" timestamp="49507914" timestamp2="49507914">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5912" _type="PauseCommand" date="Tue Apr 12 09:35:11 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49509362">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1448]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="5911" _type="InsertStringCommand" date="Tue Apr 12 09:35:11 EDT 2022" starttimestamp="1649721002230" timestamp="49509362" timestamp2="49509362">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5914" _type="PauseCommand" date="Tue Apr 12 09:35:12 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49510452">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1090]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="5917" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:35:14 EDT 2022" starttimestamp="1649721002230" timestamp="49512617" />
  <Command __id="5919" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:35:14 EDT 2022" starttimestamp="1649721002230" timestamp="49512679" />
  <Command __id="5921" _type="PauseCommand" date="Tue Apr 12 09:35:18 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49515821">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3142]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5920" _type="SelectTextCommand" caretOffset="2423" date="Tue Apr 12 09:35:18 EDT 2022" end="2436" start="2423" starttimestamp="1649721002230" timestamp="49515821" />
  <Command __id="5922" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:35:18 EDT 2022" starttimestamp="1649721002230" timestamp="49516269" />
  <Command __id="5924" _type="PauseCommand" date="Tue Apr 12 09:35:19 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49517310">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1041]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5923" _type="MoveCaretCommand" caretOffset="2446" date="Tue Apr 12 09:35:19 EDT 2022" docOffset="2446" starttimestamp="1649721002230" timestamp="49517310" />
  <Command __id="5925" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:35:19 EDT 2022" starttimestamp="1649721002230" timestamp="49517550" />
  <Command __id="5926" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:35:20 EDT 2022" starttimestamp="1649721002230" timestamp="49517854" />
  <Command __id="5927" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:35:20 EDT 2022" starttimestamp="1649721002230" timestamp="49518169" />
  <Command __id="5929" _type="PauseCommand" date="Tue Apr 12 09:35:22 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49519776">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1607]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5928" _type="MoveCaretCommand" caretOffset="2417" date="Tue Apr 12 09:35:22 EDT 2022" docOffset="2417" starttimestamp="1649721002230" timestamp="49519776" />
  <Command __id="5930" _type="InsertStringCommand" date="Tue Apr 12 09:35:22 EDT 2022" starttimestamp="1649721002230" timestamp="49520143" timestamp2="49520143">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5931" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:35:23 EDT 2022" starttimestamp="1649721002230" timestamp="49520953" />
  <Command __id="5932" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:35:23 EDT 2022" starttimestamp="1649721002230" timestamp="49520991" />
  <Command __id="5933" _type="ShellCommand" date="Tue Apr 12 09:35:23 EDT 2022" starttimestamp="1649721002230" timestamp="49521441" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5935" _type="PauseCommand" date="Tue Apr 12 09:35:25 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49523075">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1634]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5934" _type="ShellCommand" date="Tue Apr 12 09:35:25 EDT 2022" starttimestamp="1649721002230" timestamp="49523075" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5937" _type="PauseCommand" date="Tue Apr 12 09:35:35 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="49533126">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10051]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5936" _type="MoveCaretCommand" caretOffset="2954" date="Tue Apr 12 09:35:35 EDT 2022" docOffset="2954" starttimestamp="1649721002230" timestamp="49533126" />
  <Command __id="5938" _type="InsertStringCommand" date="Tue Apr 12 09:35:35 EDT 2022" starttimestamp="1649721002230" timestamp="49533549" timestamp2="49533549">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5940" _type="PauseCommand" date="Tue Apr 12 09:35:40 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49537934">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4384]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5939" _type="ShellCommand" date="Tue Apr 12 09:35:40 EDT 2022" starttimestamp="1649721002230" timestamp="49537933" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5942" _type="PauseCommand" date="Tue Apr 12 09:35:45 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="49543754">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5821]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5941" _type="ShellCommand" date="Tue Apr 12 09:35:45 EDT 2022" starttimestamp="1649721002230" timestamp="49543754" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5879" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 09:34:36 EDT 2022" docASTNodeCount="424" docActiveCodeLength="2985" docExpressionCount="304" docLength="3428" projectName="A6" starttimestamp="1649721002230" timestamp="49474297">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶"), Diff(DELETE,"¶"), Diff(INSERT,"import java.util.ArrayList;¶import java.util.List;¶¶import client.ClientRemoteInterfaceGIPC;"), Diff(EQUAL,"¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	"), Diff(INSERT,"¶	List<ClientRemoteInterfaceGIPC> socketList = new ArrayList<ClientRemoteInterfaceGIPC>();¶	¶	"), Diff(EQUAL,"protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		//TODO want to save aSocketChannel¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		String line = "The server is sending a message to clients";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());¶		nioManager.write(aSocketChannel, aWriteMessage, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString+ "-->" + arg0);¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;

import client.ClientRemoteInterfaceGIPC;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {
	
	List<ClientRemoteInterfaceGIPC> socketList = new ArrayList<ClientRemoteInterfaceGIPC>();
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}
//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}
	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		
			nioManager.enableListenableAccepts(aServerFactoryChannel,
					SelectionKey.OP_READ, // allow incoming writes that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}		
	}
	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		//TODO want to save aSocketChannel
	}
	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);
		
		//TODO echo the message right back to the same client
		//Turn of the servers reading ability
		//nioManager.write(socketChannel, aWriteMessage, this);
		//turn on the client's reading ability
		String line = "The server is sending a message to clients";
		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());
		nioManager.write(aSocketChannel, aWriteMessage, this);
	}
	@Override
	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString+ "-->" + arg0);
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="5944" _type="PauseCommand" date="Tue Apr 12 09:35:47 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49545334">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1580]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5945" _type="SelectTextCommand" caretOffset="353" date="Tue Apr 12 09:35:47 EDT 2022" end="444" start="353" starttimestamp="1649721002230" timestamp="49545680" />
  <Command __id="5947" _type="PauseCommand" date="Tue Apr 12 09:35:56 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="49554442">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[8762]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5946" _type="SelectTextCommand" caretOffset="3013" date="Tue Apr 12 09:35:56 EDT 2022" end="3065" start="3013" starttimestamp="1649721002230" timestamp="49554442" />
  <Command __id="5948" _type="SelectTextCommand" caretOffset="3013" date="Tue Apr 12 09:35:56 EDT 2022" end="3065" start="3013" starttimestamp="1649721002230" timestamp="49554450" />
  <Command __id="5949" _type="CopyCommand" date="Tue Apr 12 09:35:57 EDT 2022" starttimestamp="1649721002230" timestamp="49554834" />
  <Command __id="5951" _type="MoveCaretCommand" caretOffset="2958" date="Tue Apr 12 09:35:58 EDT 2022" docOffset="2958" starttimestamp="1649721002230" timestamp="49555903" />
  <Command __id="5943" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 09:35:47 EDT 2022" docASTNodeCount="1289" docActiveCodeLength="9237" docExpressionCount="902" docLength="10370" projectName="A6" starttimestamp="1649721002230" timestamp="49545334">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {¶¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client.changeIPCMechanism(mechanism);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5950" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 09:35:57 EDT 2022" docASTNodeCount="429" docActiveCodeLength="3004" docExpressionCount="308" docLength="3434" projectName="A6" starttimestamp="1649721002230" timestamp="49555699">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶¶import client.ClientRemoteInterfaceGIPC;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶	¶	List<"), Diff(DELETE,"ClientRemoteInterfaceGIPC"), Diff(INSERT,"SocketChannel"), Diff(EQUAL,"> socketList = new ArrayList<"), Diff(DELETE,"ClientRemoteInterfaceGIPC"), Diff(INSERT,"SocketChannel"), Diff(EQUAL,">();¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		¶			nioManager.enableListenableAccepts(aServerFactoryChannel,¶					SelectionKey.OP_READ, // allow incoming writes that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}		¶	}¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶		"), Diff(DELETE,"//TODO want to save "), Diff(INSERT,"¶		//save aSocketChannel¶		socketList.add("), Diff(EQUAL,"aSocketChannel"), Diff(INSERT,");"), Diff(EQUAL,"¶	}¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		String aMessageString = new String(aMessage.array(), aMessage.position(),¶				aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶		¶		//TODO echo the message right back to the same client¶		//Turn of the servers reading ability¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability¶		"), Diff(INSERT,"¶		"), Diff(EQUAL,"String line = "The server is sending a message to clients";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());¶		nioManager.write(aSocketChannel, aWriteMessage, this);¶	}¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString+ "-->" + arg0);¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;

import client.ClientRemoteInterfaceGIPC;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {
	
	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}
//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}
	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);		
			nioManager.enableListenableAccepts(aServerFactoryChannel,
					SelectionKey.OP_READ, // allow incoming writes that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}		
	}
	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		
		//save aSocketChannel
		socketList.add(aSocketChannel);
	}
	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		String aMessageString = new String(aMessage.array(), aMessage.position(),
				aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);
		
		//TODO echo the message right back to the same client
		//Turn of the servers reading ability
		//nioManager.write(socketChannel, aWriteMessage, this);
		//turn on the client's reading ability
		
		String line = "The server is sending a message to clients";
		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());
		nioManager.write(aSocketChannel, aWriteMessage, this);
	}
	@Override
	public void written(SocketChannel arg0, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: "+ aMessageString+ "-->" + arg0);
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="5953" _type="PauseCommand" date="Tue Apr 12 09:35:59 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49557241">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1338]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="5954" _type="PasteCommand" date="Tue Apr 12 09:35:59 EDT 2022" starttimestamp="1649721002230" timestamp="49557535" />
  <DocumentChange __id="5952" _type="Replace" date="Tue Apr 12 09:35:59 EDT 2022" docASTNodeCount="437" docActiveCodeLength="3056" docExpressionCount="314" docLength="3486" endLine="73" insertionLength="54" int_docASTNodeCount="429" int_docActiveCodeLength="3002" int_docExpressionCount="308" int_docLength="3432" length="2" offset="2956" startLine="73" starttimestamp="1649721002230" timestamp="49557241">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		for (ClientRemoteInterfaceGIPC client : clientList) ]]></insertedText>
  </DocumentChange>
  <Command __id="5956" _type="PauseCommand" date="Tue Apr 12 09:36:01 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49558892">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1357]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="5957" _type="InsertStringCommand" date="Tue Apr 12 09:36:01 EDT 2022" starttimestamp="1649721002230" timestamp="49558905" timestamp2="49558905">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="5958" _type="InsertStringCommand" date="Tue Apr 12 09:36:01 EDT 2022" starttimestamp="1649721002230" timestamp="49558905" timestamp2="49558905">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="5960" _type="InsertStringCommand" date="Tue Apr 12 09:36:01 EDT 2022" starttimestamp="1649721002230" timestamp="49559589" timestamp2="49559589">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="5961" _type="InsertStringCommand" date="Tue Apr 12 09:36:01 EDT 2022" starttimestamp="1649721002230" timestamp="49559589" timestamp2="49559589">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="5962" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 09:36:02 EDT 2022" starttimestamp="1649721002230" timestamp="49560052" />
  <Command __id="5963" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 09:36:02 EDT 2022" starttimestamp="1649721002230" timestamp="49560052" />
  <Command __id="5965" _type="InsertStringCommand" date="Tue Apr 12 09:36:02 EDT 2022" starttimestamp="1649721002230" timestamp="49560423" timestamp2="49560423">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5966" _type="InsertStringCommand" date="Tue Apr 12 09:36:02 EDT 2022" starttimestamp="1649721002230" timestamp="49560423" timestamp2="49560423">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5968" _type="PauseCommand" date="Tue Apr 12 09:36:08 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="49565791">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5368]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5967" _type="SelectTextCommand" caretOffset="2963" date="Tue Apr 12 09:36:08 EDT 2022" end="2988" start="2963" starttimestamp="1649721002230" timestamp="49565791" />
  <Command __id="5969" _type="SelectTextCommand" caretOffset="2963" date="Tue Apr 12 09:36:08 EDT 2022" end="2988" start="2963" starttimestamp="1649721002230" timestamp="49565791" />
  <Command __id="5971" _type="InsertStringCommand" date="Tue Apr 12 09:36:08 EDT 2022" starttimestamp="1649721002230" timestamp="49566246" timestamp2="49566246">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5972" _type="InsertStringCommand" date="Tue Apr 12 09:36:08 EDT 2022" starttimestamp="1649721002230" timestamp="49566246" timestamp2="49566246">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5974" _type="InsertStringCommand" date="Tue Apr 12 09:36:08 EDT 2022" starttimestamp="1649721002230" timestamp="49566435" timestamp2="49566435">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5975" _type="InsertStringCommand" date="Tue Apr 12 09:36:08 EDT 2022" starttimestamp="1649721002230" timestamp="49566435" timestamp2="49566435">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5977" _type="InsertStringCommand" date="Tue Apr 12 09:36:08 EDT 2022" starttimestamp="1649721002230" timestamp="49566544" timestamp2="49566544">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5978" _type="InsertStringCommand" date="Tue Apr 12 09:36:08 EDT 2022" starttimestamp="1649721002230" timestamp="49566544" timestamp2="49566544">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5980" _type="InsertStringCommand" date="Tue Apr 12 09:36:08 EDT 2022" starttimestamp="1649721002230" timestamp="49566688" timestamp2="49566688">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="5981" _type="InsertStringCommand" date="Tue Apr 12 09:36:08 EDT 2022" starttimestamp="1649721002230" timestamp="49566688" timestamp2="49566688">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="5983" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49566805" timestamp2="49566805">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5984" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49566805" timestamp2="49566805">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5986" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49566914" timestamp2="49566914">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5987" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49566914" timestamp2="49566914">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5989" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49567319" timestamp2="49567319">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="5990" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49567319" timestamp2="49567319">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="5992" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49567528" timestamp2="49567528">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5993" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49567528" timestamp2="49567528">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5995" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49567641" timestamp2="49567641">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5996" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49567641" timestamp2="49567641">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5998" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49567753" timestamp2="49567753">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5999" _type="InsertStringCommand" date="Tue Apr 12 09:36:09 EDT 2022" starttimestamp="1649721002230" timestamp="49567754" timestamp2="49567754">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6001" _type="InsertStringCommand" date="Tue Apr 12 09:36:10 EDT 2022" starttimestamp="1649721002230" timestamp="49567860" timestamp2="49567860">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6002" _type="InsertStringCommand" date="Tue Apr 12 09:36:10 EDT 2022" starttimestamp="1649721002230" timestamp="49567860" timestamp2="49567860">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6004" _type="InsertStringCommand" date="Tue Apr 12 09:36:10 EDT 2022" starttimestamp="1649721002230" timestamp="49567934" timestamp2="49567934">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6005" _type="InsertStringCommand" date="Tue Apr 12 09:36:10 EDT 2022" starttimestamp="1649721002230" timestamp="49567936" timestamp2="49567936">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6007" _type="InsertStringCommand" date="Tue Apr 12 09:36:10 EDT 2022" starttimestamp="1649721002230" timestamp="49568037" timestamp2="49568037">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6008" _type="InsertStringCommand" date="Tue Apr 12 09:36:10 EDT 2022" starttimestamp="1649721002230" timestamp="49568038" timestamp2="49568038">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6009" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 09:36:10 EDT 2022" starttimestamp="1649721002230" timestamp="49568518" />
  <Command __id="6010" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 09:36:10 EDT 2022" starttimestamp="1649721002230" timestamp="49568518" />
  <Command __id="6012" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:11 EDT 2022" starttimestamp="1649721002230" timestamp="49568817" />
  <Command __id="6014" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:11 EDT 2022" starttimestamp="1649721002230" timestamp="49568969" />
  <Command __id="6016" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:11 EDT 2022" starttimestamp="1649721002230" timestamp="49569103" />
  <Command __id="6018" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:11 EDT 2022" starttimestamp="1649721002230" timestamp="49569256" />
  <Command __id="6020" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:11 EDT 2022" starttimestamp="1649721002230" timestamp="49569409" />
  <Command __id="6022" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:11 EDT 2022" starttimestamp="1649721002230" timestamp="49569713" />
  <Command __id="6024" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49569945" timestamp2="49569945">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6025" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49569945" timestamp2="49569945">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6027" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49570105" timestamp2="49570105">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6028" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49570105" timestamp2="49570105">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6030" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49570270" timestamp2="49570270">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6031" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49570270" timestamp2="49570270">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6033" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49570396" timestamp2="49570396">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="6034" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49570396" timestamp2="49570396">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="6036" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49570501" timestamp2="49570501">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6037" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49570501" timestamp2="49570501">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6039" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49570681" timestamp2="49570681">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6040" _type="InsertStringCommand" date="Tue Apr 12 09:36:12 EDT 2022" starttimestamp="1649721002230" timestamp="49570681" timestamp2="49570681">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6041" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 09:36:13 EDT 2022" starttimestamp="1649721002230" timestamp="49571185" />
  <Command __id="6042" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 09:36:13 EDT 2022" starttimestamp="1649721002230" timestamp="49571198" />
  <Command __id="6043" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 09:36:13 EDT 2022" starttimestamp="1649721002230" timestamp="49571329" />
  <Command __id="6044" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 09:36:13 EDT 2022" starttimestamp="1649721002230" timestamp="49571329" />
  <Command __id="6045" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 09:36:13 EDT 2022" starttimestamp="1649721002230" timestamp="49571484" />
  <Command __id="6046" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 09:36:13 EDT 2022" starttimestamp="1649721002230" timestamp="49571484" />
  <Command __id="6048" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:14 EDT 2022" starttimestamp="1649721002230" timestamp="49571954" />
  <Command __id="6050" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:14 EDT 2022" starttimestamp="1649721002230" timestamp="49572117" />
  <Command __id="6052" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:14 EDT 2022" starttimestamp="1649721002230" timestamp="49572278" />
  <Command __id="6054" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:14 EDT 2022" starttimestamp="1649721002230" timestamp="49572447" />
  <Command __id="6056" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:14 EDT 2022" starttimestamp="1649721002230" timestamp="49572592" />
  <Command __id="6058" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 09:36:15 EDT 2022" starttimestamp="1649721002230" timestamp="49572795" />
  <Command __id="6060" _type="InsertStringCommand" date="Tue Apr 12 09:36:15 EDT 2022" starttimestamp="1649721002230" timestamp="49573164" timestamp2="49573164">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6061" _type="InsertStringCommand" date="Tue Apr 12 09:36:15 EDT 2022" starttimestamp="1649721002230" timestamp="49573164" timestamp2="49573164">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6063" _type="InsertStringCommand" date="Tue Apr 12 09:36:15 EDT 2022" starttimestamp="1649721002230" timestamp="49573329" timestamp2="49573329">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6064" _type="InsertStringCommand" date="Tue Apr 12 09:36:15 EDT 2022" starttimestamp="1649721002230" timestamp="49573329" timestamp2="49573329">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6066" _type="InsertStringCommand" date="Tue Apr 12 09:36:15 EDT 2022" starttimestamp="1649721002230" timestamp="49573427" timestamp2="49573427">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6067" _type="InsertStringCommand" date="Tue Apr 12 09:36:15 EDT 2022" starttimestamp="1649721002230" timestamp="49573428" timestamp2="49573428">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6069" _type="InsertStringCommand" date="Tue Apr 12 09:36:15 EDT 2022" starttimestamp="1649721002230" timestamp="49573695" timestamp2="49573695">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6070" _type="InsertStringCommand" date="Tue Apr 12 09:36:15 EDT 2022" starttimestamp="1649721002230" timestamp="49573695" timestamp2="49573695">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6072" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:36:16 EDT 2022" starttimestamp="1649721002230" timestamp="49573980" />
  <Command __id="6073" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:36:16 EDT 2022" starttimestamp="1649721002230" timestamp="49573980" />
  <Command __id="6075" _type="InsertStringCommand" date="Tue Apr 12 09:36:16 EDT 2022" starttimestamp="1649721002230" timestamp="49574391" timestamp2="49574391">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="6076" _type="InsertStringCommand" date="Tue Apr 12 09:36:16 EDT 2022" starttimestamp="1649721002230" timestamp="49574391" timestamp2="49574391">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="6078" _type="InsertStringCommand" date="Tue Apr 12 09:36:16 EDT 2022" starttimestamp="1649721002230" timestamp="49574495" timestamp2="49574495">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6079" _type="InsertStringCommand" date="Tue Apr 12 09:36:16 EDT 2022" starttimestamp="1649721002230" timestamp="49574497" timestamp2="49574497">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6081" _type="InsertStringCommand" date="Tue Apr 12 09:36:16 EDT 2022" starttimestamp="1649721002230" timestamp="49574664" timestamp2="49574664">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6082" _type="InsertStringCommand" date="Tue Apr 12 09:36:16 EDT 2022" starttimestamp="1649721002230" timestamp="49574664" timestamp2="49574664">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6084" _type="PauseCommand" date="Tue Apr 12 09:36:18 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49575914">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1250]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="6083" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:36:18 EDT 2022" starttimestamp="1649721002230" timestamp="49575914" />
  <Command __id="6085" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:36:18 EDT 2022" starttimestamp="1649721002230" timestamp="49575996" />
  <Command __id="6086" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:36:18 EDT 2022" starttimestamp="1649721002230" timestamp="49576038" />
  <Command __id="6088" _type="PauseCommand" date="Tue Apr 12 09:36:22 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49580623">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4585]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6087" _type="SelectTextCommand" caretOffset="3013" date="Tue Apr 12 09:36:22 EDT 2022" end="3194" start="3013" starttimestamp="1649721002230" timestamp="49580623" />
  <Command __id="6089" _type="SelectTextCommand" caretOffset="3013" date="Tue Apr 12 09:36:22 EDT 2022" end="3194" start="3013" starttimestamp="1649721002230" timestamp="49580623" />
  <Command __id="6091" _type="CutCommand" date="Tue Apr 12 09:36:23 EDT 2022" starttimestamp="1649721002230" timestamp="49581358" />
  <Command __id="6093" _type="PauseCommand" date="Tue Apr 12 09:36:24 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49582363">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1005]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6092" _type="MoveCaretCommand" caretOffset="3004" date="Tue Apr 12 09:36:24 EDT 2022" docOffset="3004" starttimestamp="1649721002230" timestamp="49582363" />
  <Command __id="6094" _type="MoveCaretCommand" caretOffset="3004" date="Tue Apr 12 09:36:24 EDT 2022" docOffset="3004" starttimestamp="1649721002230" timestamp="49582363" />
  <Command __id="6096" _type="PasteCommand" date="Tue Apr 12 09:36:25 EDT 2022" starttimestamp="1649721002230" timestamp="49583145" />
  <Command __id="6098" _type="PauseCommand" date="Tue Apr 12 09:36:28 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49586400">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3255]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6097" _type="SelectTextCommand" caretOffset="3150" date="Tue Apr 12 09:36:28 EDT 2022" end="3164" start="3150" starttimestamp="1649721002230" timestamp="49586400" />
  <Command __id="6099" _type="SelectTextCommand" caretOffset="3150" date="Tue Apr 12 09:36:28 EDT 2022" end="3164" start="3150" starttimestamp="1649721002230" timestamp="49586401" />
  <Command __id="6101" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587038" timestamp2="49587038">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6102" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587038" timestamp2="49587038">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6104" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587176" timestamp2="49587176">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6105" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587176" timestamp2="49587176">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6107" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587195" timestamp2="49587195">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6108" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587195" timestamp2="49587195">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6110" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587316" timestamp2="49587316">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="6111" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587316" timestamp2="49587316">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="6113" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587420" timestamp2="49587420">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6114" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587420" timestamp2="49587420">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6116" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587572" timestamp2="49587572">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6117" _type="InsertStringCommand" date="Tue Apr 12 09:36:29 EDT 2022" starttimestamp="1649721002230" timestamp="49587572" timestamp2="49587572">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6119" _type="PauseCommand" date="Tue Apr 12 09:36:31 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49588807">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1235]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="6118" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:36:31 EDT 2022" starttimestamp="1649721002230" timestamp="49588807" />
  <Command __id="6120" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:36:31 EDT 2022" starttimestamp="1649721002230" timestamp="49588807" />
  <Command __id="6121" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:36:31 EDT 2022" starttimestamp="1649721002230" timestamp="49588867" />
  <Command __id="6122" _type="ShellCommand" date="Tue Apr 12 09:36:31 EDT 2022" starttimestamp="1649721002230" timestamp="49589209" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6124" _type="PauseCommand" date="Tue Apr 12 09:36:33 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49591065">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1856]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6123" _type="ShellCommand" date="Tue Apr 12 09:36:33 EDT 2022" starttimestamp="1649721002230" timestamp="49591065" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6126" _type="PauseCommand" date="Tue Apr 12 09:36:44 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="49602648">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11583]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6125" _type="SelectTextCommand" caretOffset="3241" date="Tue Apr 12 09:36:44 EDT 2022" end="3245" start="3241" starttimestamp="1649721002230" timestamp="49602648" />
  <Command __id="6127" _type="SelectTextCommand" caretOffset="3241" date="Tue Apr 12 09:36:44 EDT 2022" end="3245" start="3241" starttimestamp="1649721002230" timestamp="49602648" />
  <Command __id="6129" _type="InsertStringCommand" date="Tue Apr 12 09:36:45 EDT 2022" starttimestamp="1649721002230" timestamp="49603057" timestamp2="49603057">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6130" _type="InsertStringCommand" date="Tue Apr 12 09:36:45 EDT 2022" starttimestamp="1649721002230" timestamp="49603057" timestamp2="49603057">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6132" _type="InsertStringCommand" date="Tue Apr 12 09:36:45 EDT 2022" starttimestamp="1649721002230" timestamp="49603552" timestamp2="49603552">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6133" _type="InsertStringCommand" date="Tue Apr 12 09:36:45 EDT 2022" starttimestamp="1649721002230" timestamp="49603552" timestamp2="49603552">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6135" _type="InsertStringCommand" date="Tue Apr 12 09:36:45 EDT 2022" starttimestamp="1649721002230" timestamp="49603709" timestamp2="49603709">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6136" _type="InsertStringCommand" date="Tue Apr 12 09:36:45 EDT 2022" starttimestamp="1649721002230" timestamp="49603709" timestamp2="49603709">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6138" _type="InsertStringCommand" date="Tue Apr 12 09:36:46 EDT 2022" starttimestamp="1649721002230" timestamp="49603815" timestamp2="49603815">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="6139" _type="InsertStringCommand" date="Tue Apr 12 09:36:46 EDT 2022" starttimestamp="1649721002230" timestamp="49603815" timestamp2="49603815">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="6141" _type="InsertStringCommand" date="Tue Apr 12 09:36:46 EDT 2022" starttimestamp="1649721002230" timestamp="49603961" timestamp2="49603961">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6142" _type="InsertStringCommand" date="Tue Apr 12 09:36:46 EDT 2022" starttimestamp="1649721002230" timestamp="49603961" timestamp2="49603961">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6144" _type="InsertStringCommand" date="Tue Apr 12 09:36:46 EDT 2022" starttimestamp="1649721002230" timestamp="49604117" timestamp2="49604117">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6145" _type="InsertStringCommand" date="Tue Apr 12 09:36:46 EDT 2022" starttimestamp="1649721002230" timestamp="49604117" timestamp2="49604117">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6147" _type="PauseCommand" date="Tue Apr 12 09:36:49 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49607171">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3054]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <DocumentChange __id="5955" _type="Insert" date="Tue Apr 12 09:36:01 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3067" docExpressionCount="311" docLength="3497" length="11" offset="3010" repeat="3" starttimestamp="1649721002230" timestamp="49558892" timestamp2="49560406">
    <text><![CDATA[{
			
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="5970" _type="Replace" date="Tue Apr 12 09:36:08 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3043" docExpressionCount="311" docLength="3473" endLine="73" insertionLength="1" int_docASTNodeCount="436" int_docActiveCodeLength="3042" int_docExpressionCount="311" int_docLength="3472" length="25" offset="2963" startLine="73" starttimestamp="1649721002230" timestamp="49566232">
    <deletedText><![CDATA[ClientRemoteInterfaceGIPC]]></deletedText>
    <insertedText><![CDATA[S]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5973" _type="Insert" date="Tue Apr 12 09:36:08 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3055" docExpressionCount="311" docLength="3485" length="12" offset="2964" repeat="12" starttimestamp="1649721002230" timestamp="49566432" timestamp2="49568030">
    <text><![CDATA[ocketChannel]]></text>
  </DocumentChange>
  <DocumentChange __id="6011" _type="Delete" date="Tue Apr 12 09:36:11 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3049" docExpressionCount="311" docLength="3479" endLine="73" length="6" offset="2977" repeat="6" startLine="73" starttimestamp="1649721002230" timestamp="49568807" timestamp2="49569706">
    <text><![CDATA[client]]></text>
  </DocumentChange>
  <DocumentChange __id="6023" _type="Insert" date="Tue Apr 12 09:36:12 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3055" docExpressionCount="311" docLength="3485" length="6" offset="2977" repeat="6" starttimestamp="1649721002230" timestamp="49569928" timestamp2="49570661">
    <text><![CDATA[socket]]></text>
  </DocumentChange>
  <DocumentChange __id="6047" _type="Delete" date="Tue Apr 12 09:36:14 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3049" docExpressionCount="311" docLength="3479" endLine="73" length="6" offset="2986" repeat="6" startLine="73" starttimestamp="1649721002230" timestamp="49571945" timestamp2="49572786">
    <text><![CDATA[client]]></text>
  </DocumentChange>
  <DocumentChange __id="6059" _type="Insert" date="Tue Apr 12 09:36:15 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3053" docExpressionCount="311" docLength="3483" length="4" offset="2986" repeat="4" starttimestamp="1649721002230" timestamp="49573142" timestamp2="49573675">
    <text><![CDATA[soce]]></text>
  </DocumentChange>
  <DocumentChange __id="6071" _type="Delete" date="Tue Apr 12 09:36:16 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3052" docExpressionCount="311" docLength="3482" endLine="73" length="1" offset="2989" startLine="73" starttimestamp="1649721002230" timestamp="49573972">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="6074" _type="Insert" date="Tue Apr 12 09:36:16 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3055" docExpressionCount="311" docLength="3485" length="3" offset="2989" repeat="3" starttimestamp="1649721002230" timestamp="49574373" timestamp2="49574654">
    <text><![CDATA[ket]]></text>
  </DocumentChange>
  <DocumentChange __id="6090" _type="Delete" date="Tue Apr 12 09:36:23 EDT 2022" docASTNodeCount="412" docActiveCodeLength="2874" docExpressionCount="294" docLength="3304" endLine="78" length="181" offset="3013" startLine="76" starttimestamp="1649721002230" timestamp="49581313">
    <text><![CDATA[String line = "The server is sending a message to clients";
		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());
		nioManager.write(aSocketChannel, aWriteMessage, this);]]></text>
  </DocumentChange>
  <DocumentChange __id="6095" _type="Replace" date="Tue Apr 12 09:36:25 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3057" docExpressionCount="311" docLength="3487" endLine="74" insertionLength="186" int_docASTNodeCount="412" int_docActiveCodeLength="2871" int_docExpressionCount="294" int_docLength="3301" length="3" offset="3001" startLine="74" starttimestamp="1649721002230" timestamp="49583123">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			String line = "The server is sending a message to clients";
			ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());
			nioManager.write(aSocketChannel, aWriteMessage, this);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6100" _type="Replace" date="Tue Apr 12 09:36:29 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3044" docExpressionCount="311" docLength="3474" endLine="76" insertionLength="1" int_docASTNodeCount="435" int_docActiveCodeLength="3043" int_docExpressionCount="310" int_docLength="3473" length="14" offset="3150" startLine="76" starttimestamp="1649721002230" timestamp="49586999">
    <deletedText><![CDATA[aSocketChannel]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6103" _type="Insert" date="Tue Apr 12 09:36:29 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3049" docExpressionCount="311" docLength="3479" length="5" offset="3151" repeat="5" starttimestamp="1649721002230" timestamp="49587165" timestamp2="49587555">
    <text><![CDATA[ocket]]></text>
  </DocumentChange>
  <DocumentChange __id="6128" _type="Replace" date="Tue Apr 12 09:36:45 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3046" docExpressionCount="311" docLength="3476" endLine="81" insertionLength="1" int_docASTNodeCount="403" int_docActiveCodeLength="3045" int_docExpressionCount="289" int_docLength="3475" length="4" offset="3241" startLine="81" starttimestamp="1649721002230" timestamp="49603049">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6131" _type="Insert" date="Tue Apr 12 09:36:45 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3051" docExpressionCount="311" docLength="3481" length="5" offset="3242" repeat="5" starttimestamp="1649721002230" timestamp="49603535" timestamp2="49604099">
    <text><![CDATA[ocket]]></text>
  </DocumentChange>
  <DocumentChange __id="6149" _type="Replace" date="Tue Apr 12 09:36:49 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3048" docExpressionCount="311" docLength="3478" endLine="84" insertionLength="1" int_docASTNodeCount="435" int_docActiveCodeLength="3047" int_docExpressionCount="310" int_docLength="3477" length="4" offset="3461" startLine="84" starttimestamp="1649721002230" timestamp="49607320">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <Command __id="6174" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Tue Apr 12 09:37:12 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="49630742" type="Run" />
  <Command __id="6177" _type="PauseCommand" date="Tue Apr 12 09:37:14 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49631865">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1123]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="6176" _type="ConsoleOutput" date="Tue Apr 12 09:37:14 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="49631865" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:54829]:An existing connection was forcibly closed by the remote host"), Diff(INSERT,"Enter a line of input to be printed remotely¶Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6178" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Tue Apr 12 09:37:14 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="49632456" type="Run" />
  <Command __id="6179" _type="ConsoleOutput" date="Tue Apr 12 09:37:15 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="49633414" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶"), Diff(DELETE,"Client Connect to Server¶")]]]></diff>
  </Command>
  <Command __id="6180" _type="ConsoleOutput" date="Tue Apr 12 09:37:15 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="49633671" type="ConsoleOutput">
    <outputString><![CDATA[Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely"), Diff(INSERT,"Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6182" _type="PauseCommand" date="Tue Apr 12 09:37:23 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="49641145">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7474]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="6181" _type="ConsoleInput" date="Tue Apr 12 09:37:23 EDT 2022" starttimestamp="1649721002230" timestamp="49641145" type="Exception">
    <outputString><![CDATA[hi
]]></outputString>
  </Command>
  <Command __id="6183" _type="ConsoleOutput" date="Tue Apr 12 09:37:23 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="49641211" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
The server is sending a message to clients<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:56917 remote=localhost/127.0.0.1:9000]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client Connect to Server"), Diff(INSERT,"Enter a line of input to be printed remotely¶client channel has written¶The server is sending a message to clients<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:56917 remote=localhost/127.0.0.1:9000]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6184" _type="ConsoleOutput" date="Tue Apr 12 09:37:23 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="49641260" type="ConsoleOutput">
    <outputString><![CDATA[hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56917]
SERVER SENT MESSAGE TO CLIENT: The server is sending a message to clients-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56917]
SERVER SENT MESSAGE TO CLIENT: The server is sending a message to clients-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56914]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶client channel has written¶"), Diff(INSERT,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56917]¶SERVER SENT MESSAGE TO CLIENT: The server is sending a message to clients-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56917]¶SERVER SENT MESSAGE TO CLIENT: "), Diff(EQUAL,"The server is sending a message to clients"), Diff(DELETE,"<"), Diff(EQUAL,"--"), Diff(INSERT,">"), Diff(EQUAL,"java.nio.channels.SocketChannel[connected local=/127.0.0.1:"), Diff(DELETE,"56917"), Diff(INSERT,"9000"), Diff(EQUAL," remote="), Diff(DELETE,"localhost"), Diff(EQUAL,"/127.0.0.1:"), Diff(DELETE,"9000"), Diff(INSERT,"56914"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="6185" _type="ConsoleOutput" date="Tue Apr 12 09:37:23 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="49641264" type="ConsoleOutput">
    <outputString><![CDATA[The server is sending a message to clients<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:56914 remote=localhost/127.0.0.1:9000]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56917]¶SERVER SENT MESSAGE TO CLIENT: "), Diff(EQUAL,"The server is sending a message to clients"), Diff(INSERT,"<"), Diff(EQUAL,"--"), Diff(DELETE,">"), Diff(EQUAL,"java.nio.channels.SocketChannel[connected local=/127.0.0.1:"), Diff(DELETE,"9000 remote=/127.0.0.1:56917]¶SERVER SENT MESSAGE TO CLIENT: The server is sending a message to clients-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56914"), Diff(INSERT,"56914 remote=localhost/127.0.0.1:9000"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="6187" _type="PauseCommand" date="Tue Apr 12 09:37:57 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="49674773">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[33509]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="6186" _type="ConsoleInput" date="Tue Apr 12 09:37:57 EDT 2022" starttimestamp="1649721002230" timestamp="49674773" type="Exception">
    <outputString><![CDATA[boooooop
]]></outputString>
  </Command>
  <Command __id="6188" _type="ConsoleOutput" date="Tue Apr 12 09:37:57 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="49674833" type="ConsoleOutput">
    <outputString><![CDATA[The server is sending a message to clients<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:56917 remote=localhost/127.0.0.1:9000]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"The server is sending a message to clients<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:5691"), Diff(DELETE,"4"), Diff(INSERT,"7"), Diff(EQUAL," remote=localhost/127.0.0.1:9000]¶")]]]></diff>
  </Command>
  <Command __id="6189" _type="ConsoleOutput" date="Tue Apr 12 09:37:57 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="49674837" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
The server is sending a message to clients<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:56914 remote=localhost/127.0.0.1:9000]
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Enter a line of input to be printed remotely¶client channel has written¶"), Diff(EQUAL,"The server is sending a message to clients<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:5691"), Diff(DELETE,"7"), Diff(INSERT,"4"), Diff(EQUAL," remote=localhost/127.0.0.1:9000]¶")]]]></diff>
  </Command>
  <Command __id="6190" _type="ConsoleOutput" date="Tue Apr 12 09:37:57 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="49674891" type="ConsoleOutput">
    <outputString><![CDATA[boooooop<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56914]
SERVER SENT MESSAGE TO CLIENT: The server is sending a message to clients-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56917]
SERVER SENT MESSAGE TO CLIENT: The server is sending a message to clients-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56914]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶client channel has written¶"), Diff(INSERT,"boooooop<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56914]¶SERVER SENT MESSAGE TO CLIENT: The server is sending a message to clients-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:56917]¶SERVER SENT MESSAGE TO CLIENT: "), Diff(EQUAL,"The server is sending a message to clients"), Diff(DELETE,"<"), Diff(EQUAL,"--"), Diff(INSERT,">"), Diff(EQUAL,"java.nio.channels.SocketChannel[connected local=/127.0.0.1:"), Diff(DELETE,"56914"), Diff(INSERT,"9000"), Diff(EQUAL," remote="), Diff(DELETE,"localhost"), Diff(EQUAL,"/127.0.0.1:"), Diff(DELETE,"9000"), Diff(INSERT,"56914"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="6192" _type="PauseCommand" date="Tue Apr 12 09:38:26 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="49704733">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[29842]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="6152" _type="Insert" date="Tue Apr 12 09:36:49 EDT 2022" docASTNodeCount="436" docActiveCodeLength="3053" docExpressionCount="311" docLength="3483" length="5" offset="3462" repeat="5" starttimestamp="1649721002230" timestamp="49607451" timestamp2="49608672">
    <text><![CDATA[ocket]]></text>
  </DocumentChange>
  <Command __id="6191" _type="MoveCaretCommand" caretOffset="2999" date="Tue Apr 12 09:38:26 EDT 2022" docOffset="2999" starttimestamp="1649721002230" timestamp="49704733" />
  <Command __id="6193" _type="MoveCaretCommand" caretOffset="2999" date="Tue Apr 12 09:38:26 EDT 2022" docOffset="2999" starttimestamp="1649721002230" timestamp="49704733" />
  <Command __id="6195" _type="InsertStringCommand" date="Tue Apr 12 09:38:27 EDT 2022" starttimestamp="1649721002230" timestamp="49705216" timestamp2="49705216">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6196" _type="InsertStringCommand" date="Tue Apr 12 09:38:27 EDT 2022" starttimestamp="1649721002230" timestamp="49705216" timestamp2="49705216">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6199" _type="PauseCommand" date="Tue Apr 12 09:38:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49706663">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1447]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="6198" _type="InsertStringCommand" date="Tue Apr 12 09:38:28 EDT 2022" starttimestamp="1649721002230" timestamp="49706663" timestamp2="49706663">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6200" _type="InsertStringCommand" date="Tue Apr 12 09:38:28 EDT 2022" starttimestamp="1649721002230" timestamp="49706664" timestamp2="49706664">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6202" _type="InsertStringCommand" date="Tue Apr 12 09:38:28 EDT 2022" starttimestamp="1649721002230" timestamp="49706741" timestamp2="49706741">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6203" _type="InsertStringCommand" date="Tue Apr 12 09:38:28 EDT 2022" starttimestamp="1649721002230" timestamp="49706741" timestamp2="49706741">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6206" _type="PauseCommand" date="Tue Apr 12 09:38:30 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49707856">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1115]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="6205" _type="InsertStringCommand" date="Tue Apr 12 09:38:30 EDT 2022" starttimestamp="1649721002230" timestamp="49707856" timestamp2="49707856">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6207" _type="InsertStringCommand" date="Tue Apr 12 09:38:30 EDT 2022" starttimestamp="1649721002230" timestamp="49707856" timestamp2="49707856">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6209" _type="InsertStringCommand" date="Tue Apr 12 09:38:30 EDT 2022" starttimestamp="1649721002230" timestamp="49708088" timestamp2="49708088">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6210" _type="InsertStringCommand" date="Tue Apr 12 09:38:30 EDT 2022" starttimestamp="1649721002230" timestamp="49708088" timestamp2="49708088">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6211" _type="InsertStringCommand" date="Tue Apr 12 09:38:30 EDT 2022" starttimestamp="1649721002230" timestamp="49708139" timestamp2="49708139">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6212" _type="InsertStringCommand" date="Tue Apr 12 09:38:30 EDT 2022" starttimestamp="1649721002230" timestamp="49708139" timestamp2="49708139">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6213" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 09:38:30 EDT 2022" starttimestamp="1649721002230" timestamp="49708522" />
  <Command __id="6214" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 09:38:30 EDT 2022" starttimestamp="1649721002230" timestamp="49708522" />
  <Command __id="6216" _type="InsertStringCommand" date="Tue Apr 12 09:38:31 EDT 2022" starttimestamp="1649721002230" timestamp="49708994" timestamp2="49708994">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6217" _type="InsertStringCommand" date="Tue Apr 12 09:38:31 EDT 2022" starttimestamp="1649721002230" timestamp="49708994" timestamp2="49708994">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6219" _type="InsertStringCommand" date="Tue Apr 12 09:38:32 EDT 2022" starttimestamp="1649721002230" timestamp="49709786" timestamp2="49709786">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6220" _type="InsertStringCommand" date="Tue Apr 12 09:38:32 EDT 2022" starttimestamp="1649721002230" timestamp="49709786" timestamp2="49709786">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6222" _type="InsertStringCommand" date="Tue Apr 12 09:38:32 EDT 2022" starttimestamp="1649721002230" timestamp="49709916" timestamp2="49709916">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6223" _type="InsertStringCommand" date="Tue Apr 12 09:38:32 EDT 2022" starttimestamp="1649721002230" timestamp="49709916" timestamp2="49709916">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6225" _type="InsertStringCommand" date="Tue Apr 12 09:38:32 EDT 2022" starttimestamp="1649721002230" timestamp="49710026" timestamp2="49710026">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="6226" _type="InsertStringCommand" date="Tue Apr 12 09:38:32 EDT 2022" starttimestamp="1649721002230" timestamp="49710026" timestamp2="49710026">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="6228" _type="InsertStringCommand" date="Tue Apr 12 09:38:32 EDT 2022" starttimestamp="1649721002230" timestamp="49710171" timestamp2="49710171">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6229" _type="InsertStringCommand" date="Tue Apr 12 09:38:32 EDT 2022" starttimestamp="1649721002230" timestamp="49710173" timestamp2="49710173">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6231" _type="InsertStringCommand" date="Tue Apr 12 09:38:32 EDT 2022" starttimestamp="1649721002230" timestamp="49710311" timestamp2="49710311">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6232" _type="InsertStringCommand" date="Tue Apr 12 09:38:32 EDT 2022" starttimestamp="1649721002230" timestamp="49710311" timestamp2="49710311">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="6194" _type="Insert" date="Tue Apr 12 09:38:27 EDT 2022" docASTNodeCount="440" docActiveCodeLength="3069" docExpressionCount="315" docLength="3499" length="16" offset="2999" repeat="11" starttimestamp="1649721002230" timestamp="49705196" timestamp2="49710306">
    <text><![CDATA[
			if (socket)]]></text>
  </DocumentChange>
  <Command __id="6234" _type="PauseCommand" date="Tue Apr 12 09:38:35 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49713569">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3258]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="6235" _type="InsertStringCommand" date="Tue Apr 12 09:38:35 EDT 2022" starttimestamp="1649721002230" timestamp="49713577" timestamp2="49713577">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6236" _type="InsertStringCommand" date="Tue Apr 12 09:38:35 EDT 2022" starttimestamp="1649721002230" timestamp="49713577" timestamp2="49713577">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6237" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 09:38:35 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="49713586" />
  <Command __id="6239" _type="PauseCommand" date="Tue Apr 12 09:38:38 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49716295">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2709]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="6238" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 09:38:38 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="49716295" />
  <Command __id="6241" _type="InsertStringCommand" date="Tue Apr 12 09:38:38 EDT 2022" starttimestamp="1649721002230" timestamp="49716607" timestamp2="49716607">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6242" _type="InsertStringCommand" date="Tue Apr 12 09:38:38 EDT 2022" starttimestamp="1649721002230" timestamp="49716607" timestamp2="49716607">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6244" _type="InsertStringCommand" date="Tue Apr 12 09:38:39 EDT 2022" starttimestamp="1649721002230" timestamp="49717069" timestamp2="49717069">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6245" _type="InsertStringCommand" date="Tue Apr 12 09:38:39 EDT 2022" starttimestamp="1649721002230" timestamp="49717070" timestamp2="49717070">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6247" _type="PauseCommand" date="Tue Apr 12 09:38:40 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49718250">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1180]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="6246" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:40 EDT 2022" starttimestamp="1649721002230" timestamp="49718250" />
  <Command __id="6248" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:40 EDT 2022" starttimestamp="1649721002230" timestamp="49718250" />
  <Command __id="6249" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Apr 12 09:38:40 EDT 2022" starttimestamp="1649721002230" timestamp="49718324" />
  <Command __id="6250" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Apr 12 09:38:40 EDT 2022" starttimestamp="1649721002230" timestamp="49718324" />
  <Command __id="6251" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:40 EDT 2022" starttimestamp="1649721002230" timestamp="49718511" />
  <Command __id="6252" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:40 EDT 2022" starttimestamp="1649721002230" timestamp="49718511" />
  <Command __id="6253" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:40 EDT 2022" starttimestamp="1649721002230" timestamp="49718700" />
  <Command __id="6254" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:40 EDT 2022" starttimestamp="1649721002230" timestamp="49718700" />
  <Command __id="6255" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:41 EDT 2022" starttimestamp="1649721002230" timestamp="49718889" />
  <Command __id="6256" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:41 EDT 2022" starttimestamp="1649721002230" timestamp="49718889" />
  <Command __id="6257" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:41 EDT 2022" starttimestamp="1649721002230" timestamp="49719515" />
  <Command __id="6258" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:41 EDT 2022" starttimestamp="1649721002230" timestamp="49719515" />
  <Command __id="6259" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:41 EDT 2022" starttimestamp="1649721002230" timestamp="49719699" />
  <Command __id="6260" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:38:41 EDT 2022" starttimestamp="1649721002230" timestamp="49719699" />
  <Command __id="6262" _type="InsertStringCommand" date="Tue Apr 12 09:38:42 EDT 2022" starttimestamp="1649721002230" timestamp="49720145" timestamp2="49720145">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6263" _type="InsertStringCommand" date="Tue Apr 12 09:38:42 EDT 2022" starttimestamp="1649721002230" timestamp="49720146" timestamp2="49720146">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6265" _type="PauseCommand" date="Tue Apr 12 09:38:44 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49721922">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1776]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6264" _type="MoveCaretCommand" caretOffset="3008" date="Tue Apr 12 09:38:44 EDT 2022" docOffset="3008" starttimestamp="1649721002230" timestamp="49721922" />
  <Command __id="6266" _type="MoveCaretCommand" caretOffset="3008" date="Tue Apr 12 09:38:44 EDT 2022" docOffset="3008" starttimestamp="1649721002230" timestamp="49721922" />
  <Command __id="6268" _type="InsertStringCommand" date="Tue Apr 12 09:38:44 EDT 2022" starttimestamp="1649721002230" timestamp="49722732" timestamp2="49722732">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="6269" _type="InsertStringCommand" date="Tue Apr 12 09:38:44 EDT 2022" starttimestamp="1649721002230" timestamp="49722732" timestamp2="49722732">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="6270" _type="MoveCaretCommand" caretOffset="3039" date="Tue Apr 12 09:38:45 EDT 2022" docOffset="3039" starttimestamp="1649721002230" timestamp="49723725" />
  <Command __id="6271" _type="MoveCaretCommand" caretOffset="3039" date="Tue Apr 12 09:38:45 EDT 2022" docOffset="3039" starttimestamp="1649721002230" timestamp="49723725" />
  <Command __id="6273" _type="InsertStringCommand" date="Tue Apr 12 09:38:46 EDT 2022" starttimestamp="1649721002230" timestamp="49724400" timestamp2="49724400">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="6274" _type="InsertStringCommand" date="Tue Apr 12 09:38:46 EDT 2022" starttimestamp="1649721002230" timestamp="49724400" timestamp2="49724400">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="6276" _type="PauseCommand" date="Tue Apr 12 09:38:48 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49725907">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1507]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6275" _type="MoveCaretCommand" caretOffset="3221" date="Tue Apr 12 09:38:48 EDT 2022" docOffset="3221" starttimestamp="1649721002230" timestamp="49725907" />
  <Command __id="6277" _type="MoveCaretCommand" caretOffset="3221" date="Tue Apr 12 09:38:48 EDT 2022" docOffset="3221" starttimestamp="1649721002230" timestamp="49725908" />
  <Command __id="6279" _type="InsertStringCommand" date="Tue Apr 12 09:38:48 EDT 2022" starttimestamp="1649721002230" timestamp="49726517" timestamp2="49726517">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6280" _type="InsertStringCommand" date="Tue Apr 12 09:38:48 EDT 2022" starttimestamp="1649721002230" timestamp="49726518" timestamp2="49726518">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6282" _type="InsertStringCommand" date="Tue Apr 12 09:38:49 EDT 2022" starttimestamp="1649721002230" timestamp="49727319" timestamp2="49727319">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="6283" _type="InsertStringCommand" date="Tue Apr 12 09:38:49 EDT 2022" starttimestamp="1649721002230" timestamp="49727319" timestamp2="49727319">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="6285" _type="PauseCommand" date="Tue Apr 12 09:38:52 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49730216">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2897]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6284" _type="SelectTextCommand" caretOffset="3046" date="Tue Apr 12 09:38:52 EDT 2022" end="3221" start="3046" starttimestamp="1649721002230" timestamp="49730216" />
  <Command __id="6286" _type="SelectTextCommand" caretOffset="3046" date="Tue Apr 12 09:38:52 EDT 2022" end="3221" start="3046" starttimestamp="1649721002230" timestamp="49730216" />
  <Command __id="6290" _type="InsertStringCommand" date="Tue Apr 12 09:38:52 EDT 2022" starttimestamp="1649721002230" timestamp="49730567" timestamp2="49730567">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="6291" _type="InsertStringCommand" date="Tue Apr 12 09:38:52 EDT 2022" starttimestamp="1649721002230" timestamp="49730567" timestamp2="49730567">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="6293" _type="PauseCommand" date="Tue Apr 12 09:38:53 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49731604">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1037]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6292" _type="MoveCaretCommand" caretOffset="2954" date="Tue Apr 12 09:38:53 EDT 2022" docOffset="2954" starttimestamp="1649721002230" timestamp="49731604" />
  <Command __id="6294" _type="MoveCaretCommand" caretOffset="2954" date="Tue Apr 12 09:38:53 EDT 2022" docOffset="2954" starttimestamp="1649721002230" timestamp="49731604" />
  <Command __id="6295" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:38:54 EDT 2022" starttimestamp="1649721002230" timestamp="49732151" />
  <Command __id="6296" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:38:54 EDT 2022" starttimestamp="1649721002230" timestamp="49732235" />
  <Command __id="6297" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:38:54 EDT 2022" starttimestamp="1649721002230" timestamp="49732281" />
  <Command __id="6299" _type="PauseCommand" date="Tue Apr 12 09:39:30 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="49768298">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[36017]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6298" _type="SelectTextCommand" caretOffset="2759" date="Tue Apr 12 09:39:30 EDT 2022" end="2954" start="2759" starttimestamp="1649721002230" timestamp="49768298" />
  <Command __id="6300" _type="SelectTextCommand" caretOffset="2759" date="Tue Apr 12 09:39:30 EDT 2022" end="2954" start="2759" starttimestamp="1649721002230" timestamp="49768298" />
  <DocumentChange __id="6233" _type="Insert" date="Tue Apr 12 09:38:35 EDT 2022" docASTNodeCount="438" docActiveCodeLength="3070" docExpressionCount="313" docLength="3500" length="1" offset="3014" starttimestamp="1649721002230" timestamp="49713569">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="6240" _type="Insert" date="Tue Apr 12 09:38:38 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3081" docExpressionCount="318" docLength="3511" length="11" offset="3015" starttimestamp="1649721002230" timestamp="49716311">
    <text><![CDATA[equals(obj)]]></text>
  </DocumentChange>
  <DocumentChange __id="6243" _type="Replace" date="Tue Apr 12 09:38:39 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3079" docExpressionCount="318" docLength="3509" endLine="74" insertionLength="1" int_docASTNodeCount="442" int_docActiveCodeLength="3078" int_docExpressionCount="317" int_docLength="3508" length="3" offset="3022" startLine="74" starttimestamp="1649721002230" timestamp="49717049">
    <deletedText><![CDATA[obj]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6261" _type="Replace" date="Tue Apr 12 09:38:42 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3092" docExpressionCount="318" docLength="3522" endLine="74" insertionLength="14" int_docASTNodeCount="442" int_docActiveCodeLength="3078" int_docExpressionCount="317" int_docLength="3508" length="1" offset="3022" startLine="74" starttimestamp="1649721002230" timestamp="49720117">
    <deletedText><![CDATA[a]]></deletedText>
    <insertedText><![CDATA[aSocketChannel]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6267" _type="Insert" date="Tue Apr 12 09:38:44 EDT 2022" docASTNodeCount="444" docActiveCodeLength="3093" docExpressionCount="319" docLength="3523" length="1" offset="3008" starttimestamp="1649721002230" timestamp="49722706">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <DocumentChange __id="6272" _type="Insert" date="Tue Apr 12 09:38:46 EDT 2022" docASTNodeCount="444" docActiveCodeLength="3095" docExpressionCount="316" docLength="3525" length="2" offset="3039" starttimestamp="1649721002230" timestamp="49724381">
    <text><![CDATA[ {]]></text>
  </DocumentChange>
  <DocumentChange __id="6278" _type="Insert" date="Tue Apr 12 09:38:48 EDT 2022" docASTNodeCount="444" docActiveCodeLength="3100" docExpressionCount="316" docLength="3530" length="5" offset="3221" starttimestamp="1649721002230" timestamp="49726491">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="6281" _type="Replace" date="Tue Apr 12 09:38:49 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3101" docExpressionCount="316" docLength="3531" endLine="78" insertionLength="4" int_docASTNodeCount="444" int_docActiveCodeLength="3097" int_docExpressionCount="316" int_docLength="3527" length="3" offset="3223" startLine="78" starttimestamp="1649721002230" timestamp="49727296">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6287" _type="Insert" date="Tue Apr 12 09:38:52 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3102" docExpressionCount="316" docLength="3532" length="1" offset="3043" starttimestamp="1649721002230" timestamp="49730547">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="6288" _type="Insert" date="Tue Apr 12 09:38:52 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3103" docExpressionCount="316" docLength="3533" length="1" offset="3108" starttimestamp="1649721002230" timestamp="49730548">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="6289" _type="Insert" date="Tue Apr 12 09:38:52 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3104" docExpressionCount="316" docLength="3534" length="1" offset="3174" starttimestamp="1649721002230" timestamp="49730549">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <Command __id="6302" _type="PauseCommand" date="Tue Apr 12 09:39:35 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49772862">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4564]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="6301" _type="Delete" date="Tue Apr 12 09:39:35 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3092" docExpressionCount="316" docLength="3339" endLine="72" length="195" offset="2759" startLine="69" starttimestamp="1649721002230" timestamp="49772862">
    <text><![CDATA[//TODO echo the message right back to the same client
		//Turn of the servers reading ability
		//nioManager.write(socketChannel, aWriteMessage, this);
		//turn on the client's reading ability]]></text>
  </DocumentChange>
  <Command __id="6303" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:35 EDT 2022" starttimestamp="1649721002230" timestamp="49772885" />
  <Command __id="6304" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:35 EDT 2022" starttimestamp="1649721002230" timestamp="49772885" />
  <DocumentChange __id="6305" _type="Insert" date="Tue Apr 12 09:39:36 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3092" docExpressionCount="316" docLength="3345" length="6" offset="2759" repeat="6" starttimestamp="1649721002230" timestamp="49773785" timestamp2="49774989">
    <text><![CDATA[//Send]]></text>
  </DocumentChange>
  <Command __id="6306" _type="InsertStringCommand" date="Tue Apr 12 09:39:36 EDT 2022" starttimestamp="1649721002230" timestamp="49773795" timestamp2="49773795">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="6307" _type="InsertStringCommand" date="Tue Apr 12 09:39:36 EDT 2022" starttimestamp="1649721002230" timestamp="49773796" timestamp2="49773796">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="6309" _type="InsertStringCommand" date="Tue Apr 12 09:39:36 EDT 2022" starttimestamp="1649721002230" timestamp="49773930" timestamp2="49773930">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="6310" _type="InsertStringCommand" date="Tue Apr 12 09:39:36 EDT 2022" starttimestamp="1649721002230" timestamp="49773930" timestamp2="49773930">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="6312" _type="InsertStringCommand" date="Tue Apr 12 09:39:36 EDT 2022" starttimestamp="1649721002230" timestamp="49774350" timestamp2="49774350">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6313" _type="InsertStringCommand" date="Tue Apr 12 09:39:36 EDT 2022" starttimestamp="1649721002230" timestamp="49774350" timestamp2="49774350">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6315" _type="InsertStringCommand" date="Tue Apr 12 09:39:36 EDT 2022" starttimestamp="1649721002230" timestamp="49774646" timestamp2="49774646">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6316" _type="InsertStringCommand" date="Tue Apr 12 09:39:36 EDT 2022" starttimestamp="1649721002230" timestamp="49774646" timestamp2="49774646">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6318" _type="InsertStringCommand" date="Tue Apr 12 09:39:37 EDT 2022" starttimestamp="1649721002230" timestamp="49774816" timestamp2="49774816">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6319" _type="InsertStringCommand" date="Tue Apr 12 09:39:37 EDT 2022" starttimestamp="1649721002230" timestamp="49774816" timestamp2="49774816">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6321" _type="InsertStringCommand" date="Tue Apr 12 09:39:37 EDT 2022" starttimestamp="1649721002230" timestamp="49775009" timestamp2="49775009">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6322" _type="InsertStringCommand" date="Tue Apr 12 09:39:37 EDT 2022" starttimestamp="1649721002230" timestamp="49775009" timestamp2="49775009">
    <data><![CDATA[d]]></data>
  </Command>
  <DocumentChange __id="6323" _type="Delete" date="Tue Apr 12 09:39:37 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3092" docExpressionCount="316" docLength="3341" endLine="69" length="4" offset="2761" repeat="4" startLine="69" starttimestamp="1649721002230" timestamp="49775711" timestamp2="49776227">
    <text><![CDATA[Send]]></text>
  </DocumentChange>
  <Command __id="6324" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:37 EDT 2022" starttimestamp="1649721002230" timestamp="49775721" />
  <Command __id="6325" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:37 EDT 2022" starttimestamp="1649721002230" timestamp="49775723" />
  <Command __id="6327" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:38 EDT 2022" starttimestamp="1649721002230" timestamp="49775885" />
  <Command __id="6328" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:38 EDT 2022" starttimestamp="1649721002230" timestamp="49775885" />
  <Command __id="6330" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:38 EDT 2022" starttimestamp="1649721002230" timestamp="49776046" />
  <Command __id="6331" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:38 EDT 2022" starttimestamp="1649721002230" timestamp="49776046" />
  <Command __id="6333" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:38 EDT 2022" starttimestamp="1649721002230" timestamp="49776239" />
  <Command __id="6334" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:38 EDT 2022" starttimestamp="1649721002230" timestamp="49776239" />
  <DocumentChange __id="6335" _type="Insert" date="Tue Apr 12 09:39:38 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3092" docExpressionCount="316" docLength="3347" length="6" offset="2761" repeat="6" starttimestamp="1649721002230" timestamp="49776360" timestamp2="49778295">
    <text><![CDATA[Echo e]]></text>
  </DocumentChange>
  <Command __id="6336" _type="InsertStringCommand" date="Tue Apr 12 09:39:38 EDT 2022" starttimestamp="1649721002230" timestamp="49776375" timestamp2="49776375">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6337" _type="InsertStringCommand" date="Tue Apr 12 09:39:38 EDT 2022" starttimestamp="1649721002230" timestamp="49776375" timestamp2="49776375">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6340" _type="PauseCommand" date="Tue Apr 12 09:39:39 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="49777388">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1013]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="6339" _type="InsertStringCommand" date="Tue Apr 12 09:39:39 EDT 2022" starttimestamp="1649721002230" timestamp="49777388" timestamp2="49777388">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6341" _type="InsertStringCommand" date="Tue Apr 12 09:39:39 EDT 2022" starttimestamp="1649721002230" timestamp="49777388" timestamp2="49777388">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6343" _type="InsertStringCommand" date="Tue Apr 12 09:39:39 EDT 2022" starttimestamp="1649721002230" timestamp="49777551" timestamp2="49777551">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="6344" _type="InsertStringCommand" date="Tue Apr 12 09:39:39 EDT 2022" starttimestamp="1649721002230" timestamp="49777551" timestamp2="49777551">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="6346" _type="InsertStringCommand" date="Tue Apr 12 09:39:39 EDT 2022" starttimestamp="1649721002230" timestamp="49777686" timestamp2="49777686">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6347" _type="InsertStringCommand" date="Tue Apr 12 09:39:39 EDT 2022" starttimestamp="1649721002230" timestamp="49777686" timestamp2="49777686">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6349" _type="InsertStringCommand" date="Tue Apr 12 09:39:40 EDT 2022" starttimestamp="1649721002230" timestamp="49777903" timestamp2="49777903">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6350" _type="InsertStringCommand" date="Tue Apr 12 09:39:40 EDT 2022" starttimestamp="1649721002230" timestamp="49777904" timestamp2="49777904">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6352" _type="InsertStringCommand" date="Tue Apr 12 09:39:40 EDT 2022" starttimestamp="1649721002230" timestamp="49778316" timestamp2="49778316">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6353" _type="InsertStringCommand" date="Tue Apr 12 09:39:40 EDT 2022" starttimestamp="1649721002230" timestamp="49778316" timestamp2="49778316">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="6354" _type="Delete" date="Tue Apr 12 09:39:40 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3092" docExpressionCount="316" docLength="3346" endLine="69" length="1" offset="2766" startLine="69" starttimestamp="1649721002230" timestamp="49778619">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <Command __id="6355" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:40 EDT 2022" starttimestamp="1649721002230" timestamp="49778637" />
  <Command __id="6356" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:40 EDT 2022" starttimestamp="1649721002230" timestamp="49778637" />
  <DocumentChange __id="6357" _type="Insert" date="Tue Apr 12 09:39:40 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3092" docExpressionCount="316" docLength="3351" length="5" offset="2766" repeat="5" starttimestamp="1649721002230" timestamp="49778693" timestamp2="49779417">
    <text><![CDATA[reciv]]></text>
  </DocumentChange>
  <Command __id="6358" _type="InsertStringCommand" date="Tue Apr 12 09:39:40 EDT 2022" starttimestamp="1649721002230" timestamp="49778709" timestamp2="49778709">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6359" _type="InsertStringCommand" date="Tue Apr 12 09:39:40 EDT 2022" starttimestamp="1649721002230" timestamp="49778709" timestamp2="49778709">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6361" _type="InsertStringCommand" date="Tue Apr 12 09:39:41 EDT 2022" starttimestamp="1649721002230" timestamp="49778773" timestamp2="49778773">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6362" _type="InsertStringCommand" date="Tue Apr 12 09:39:41 EDT 2022" starttimestamp="1649721002230" timestamp="49778773" timestamp2="49778773">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6364" _type="InsertStringCommand" date="Tue Apr 12 09:39:41 EDT 2022" starttimestamp="1649721002230" timestamp="49779023" timestamp2="49779023">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6365" _type="InsertStringCommand" date="Tue Apr 12 09:39:41 EDT 2022" starttimestamp="1649721002230" timestamp="49779023" timestamp2="49779023">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6367" _type="InsertStringCommand" date="Tue Apr 12 09:39:41 EDT 2022" starttimestamp="1649721002230" timestamp="49779150" timestamp2="49779150">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6368" _type="InsertStringCommand" date="Tue Apr 12 09:39:41 EDT 2022" starttimestamp="1649721002230" timestamp="49779150" timestamp2="49779150">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6370" _type="InsertStringCommand" date="Tue Apr 12 09:39:41 EDT 2022" starttimestamp="1649721002230" timestamp="49779436" timestamp2="49779436">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="6371" _type="InsertStringCommand" date="Tue Apr 12 09:39:41 EDT 2022" starttimestamp="1649721002230" timestamp="49779436" timestamp2="49779436">
    <data><![CDATA[v]]></data>
  </Command>
  <DocumentChange __id="6372" _type="Delete" date="Tue Apr 12 09:39:42 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3092" docExpressionCount="316" docLength="3350" endLine="69" length="1" offset="2770" startLine="69" starttimestamp="1649721002230" timestamp="49779800">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <Command __id="6373" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49779821" />
  <Command __id="6374" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49779822" />
  <Command __id="6376" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49779872" timestamp2="49779872">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6377" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49779872" timestamp2="49779872">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6379" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49780062" timestamp2="49780062">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="6380" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49780062" timestamp2="49780062">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="6382" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49780148" timestamp2="49780148">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6383" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49780148" timestamp2="49780148">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6385" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49780327" timestamp2="49780327">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6386" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49780327" timestamp2="49780327">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6388" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49780577" timestamp2="49780577">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6389" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49780577" timestamp2="49780577">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6391" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49780658" timestamp2="49780658">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6392" _type="InsertStringCommand" date="Tue Apr 12 09:39:42 EDT 2022" starttimestamp="1649721002230" timestamp="49780658" timestamp2="49780658">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6394" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49780831" timestamp2="49780831">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6395" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49780831" timestamp2="49780831">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6397" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49780988" timestamp2="49780988">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6398" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49780988" timestamp2="49780988">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6400" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49781140" timestamp2="49781140">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6401" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49781140" timestamp2="49781140">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6403" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49781246" timestamp2="49781246">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6404" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49781247" timestamp2="49781247">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6406" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49781328" timestamp2="49781328">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6407" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49781328" timestamp2="49781328">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6409" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49781475" timestamp2="49781475">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6410" _type="InsertStringCommand" date="Tue Apr 12 09:39:43 EDT 2022" starttimestamp="1649721002230" timestamp="49781475" timestamp2="49781475">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6412" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49781791" timestamp2="49781791">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6413" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49781793" timestamp2="49781793">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6415" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49781850" timestamp2="49781850">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6416" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49781850" timestamp2="49781850">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6418" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49781953" timestamp2="49781953">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6419" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49781953" timestamp2="49781953">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6421" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782028" timestamp2="49782028">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6422" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782028" timestamp2="49782028">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6424" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782137" timestamp2="49782137">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6425" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782137" timestamp2="49782137">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6427" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782267" timestamp2="49782267">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6428" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782267" timestamp2="49782267">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6430" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782374" timestamp2="49782374">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6431" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782374" timestamp2="49782374">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6433" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782638" timestamp2="49782638">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6434" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782638" timestamp2="49782638">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6436" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782716" timestamp2="49782716">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6437" _type="InsertStringCommand" date="Tue Apr 12 09:39:44 EDT 2022" starttimestamp="1649721002230" timestamp="49782716" timestamp2="49782716">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6439" _type="InsertStringCommand" date="Tue Apr 12 09:39:45 EDT 2022" starttimestamp="1649721002230" timestamp="49782828" timestamp2="49782828">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6440" _type="InsertStringCommand" date="Tue Apr 12 09:39:45 EDT 2022" starttimestamp="1649721002230" timestamp="49782828" timestamp2="49782828">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6442" _type="InsertStringCommand" date="Tue Apr 12 09:39:45 EDT 2022" starttimestamp="1649721002230" timestamp="49782953" timestamp2="49782953">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6443" _type="InsertStringCommand" date="Tue Apr 12 09:39:45 EDT 2022" starttimestamp="1649721002230" timestamp="49782954" timestamp2="49782954">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6445" _type="InsertStringCommand" date="Tue Apr 12 09:39:45 EDT 2022" starttimestamp="1649721002230" timestamp="49783074" timestamp2="49783074">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6446" _type="InsertStringCommand" date="Tue Apr 12 09:39:45 EDT 2022" starttimestamp="1649721002230" timestamp="49783074" timestamp2="49783074">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6448" _type="InsertStringCommand" date="Tue Apr 12 09:39:45 EDT 2022" starttimestamp="1649721002230" timestamp="49783176" timestamp2="49783176">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6449" _type="InsertStringCommand" date="Tue Apr 12 09:39:45 EDT 2022" starttimestamp="1649721002230" timestamp="49783178" timestamp2="49783178">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6451" _type="InsertStringCommand" date="Tue Apr 12 09:39:45 EDT 2022" starttimestamp="1649721002230" timestamp="49783630" timestamp2="49783630">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6452" _type="InsertStringCommand" date="Tue Apr 12 09:39:45 EDT 2022" starttimestamp="1649721002230" timestamp="49783630" timestamp2="49783630">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6454" _type="InsertStringCommand" date="Tue Apr 12 09:39:46 EDT 2022" starttimestamp="1649721002230" timestamp="49783791" timestamp2="49783791">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6455" _type="InsertStringCommand" date="Tue Apr 12 09:39:46 EDT 2022" starttimestamp="1649721002230" timestamp="49783791" timestamp2="49783791">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6457" _type="InsertStringCommand" date="Tue Apr 12 09:39:46 EDT 2022" starttimestamp="1649721002230" timestamp="49784139" timestamp2="49784139">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6458" _type="InsertStringCommand" date="Tue Apr 12 09:39:46 EDT 2022" starttimestamp="1649721002230" timestamp="49784139" timestamp2="49784139">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6460" _type="InsertStringCommand" date="Tue Apr 12 09:39:46 EDT 2022" starttimestamp="1649721002230" timestamp="49784353" timestamp2="49784353">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6461" _type="InsertStringCommand" date="Tue Apr 12 09:39:46 EDT 2022" starttimestamp="1649721002230" timestamp="49784353" timestamp2="49784353">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6463" _type="InsertStringCommand" date="Tue Apr 12 09:39:46 EDT 2022" starttimestamp="1649721002230" timestamp="49784547" timestamp2="49784547">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6464" _type="InsertStringCommand" date="Tue Apr 12 09:39:46 EDT 2022" starttimestamp="1649721002230" timestamp="49784547" timestamp2="49784547">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6466" _type="InsertStringCommand" date="Tue Apr 12 09:39:46 EDT 2022" starttimestamp="1649721002230" timestamp="49784708" timestamp2="49784708">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6467" _type="InsertStringCommand" date="Tue Apr 12 09:39:46 EDT 2022" starttimestamp="1649721002230" timestamp="49784708" timestamp2="49784708">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6469" _type="InsertStringCommand" date="Tue Apr 12 09:39:47 EDT 2022" starttimestamp="1649721002230" timestamp="49785274" timestamp2="49785274">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6470" _type="InsertStringCommand" date="Tue Apr 12 09:39:47 EDT 2022" starttimestamp="1649721002230" timestamp="49785274" timestamp2="49785274">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6472" _type="InsertStringCommand" date="Tue Apr 12 09:39:47 EDT 2022" starttimestamp="1649721002230" timestamp="49785508" timestamp2="49785508">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6473" _type="InsertStringCommand" date="Tue Apr 12 09:39:47 EDT 2022" starttimestamp="1649721002230" timestamp="49785508" timestamp2="49785508">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6475" _type="InsertStringCommand" date="Tue Apr 12 09:39:47 EDT 2022" starttimestamp="1649721002230" timestamp="49785669" timestamp2="49785669">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6476" _type="InsertStringCommand" date="Tue Apr 12 09:39:47 EDT 2022" starttimestamp="1649721002230" timestamp="49785669" timestamp2="49785669">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6478" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49785791" timestamp2="49785791">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6479" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49785791" timestamp2="49785791">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6481" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49785868" timestamp2="49785868">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6482" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49785868" timestamp2="49785868">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6484" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786008" timestamp2="49786008">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6485" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786009" timestamp2="49786009">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6487" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786197" timestamp2="49786197">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6488" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786197" timestamp2="49786197">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6490" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786247" timestamp2="49786247">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6491" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786247" timestamp2="49786247">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6493" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786402" timestamp2="49786402">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6494" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786402" timestamp2="49786402">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6496" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786481" timestamp2="49786481">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6497" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786482" timestamp2="49786482">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6499" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786591" timestamp2="49786591">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6500" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786591" timestamp2="49786591">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6502" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786665" timestamp2="49786665">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6503" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786665" timestamp2="49786665">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6505" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786763" timestamp2="49786763">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6506" _type="InsertStringCommand" date="Tue Apr 12 09:39:48 EDT 2022" starttimestamp="1649721002230" timestamp="49786764" timestamp2="49786764">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6508" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49786904" timestamp2="49786904">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6509" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49786904" timestamp2="49786904">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6511" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49786979" timestamp2="49786979">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6512" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49786979" timestamp2="49786979">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6514" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49787144" timestamp2="49787144">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6515" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49787145" timestamp2="49787145">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6517" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49787302" timestamp2="49787302">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6518" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49787302" timestamp2="49787302">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6520" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49787469" timestamp2="49787469">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6521" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49787471" timestamp2="49787471">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6523" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49787515" timestamp2="49787515">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6524" _type="InsertStringCommand" date="Tue Apr 12 09:39:49 EDT 2022" starttimestamp="1649721002230" timestamp="49787515" timestamp2="49787515">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6526" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49787889" timestamp2="49787889">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6527" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49787890" timestamp2="49787890">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6529" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49788048" timestamp2="49788048">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6530" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49788048" timestamp2="49788048">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6532" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49788225" timestamp2="49788225">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6533" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49788225" timestamp2="49788225">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6535" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49788334" timestamp2="49788334">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6536" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49788334" timestamp2="49788334">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6538" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49788493" timestamp2="49788493">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6539" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49788493" timestamp2="49788493">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6541" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49788635" timestamp2="49788635">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6542" _type="InsertStringCommand" date="Tue Apr 12 09:39:50 EDT 2022" starttimestamp="1649721002230" timestamp="49788635" timestamp2="49788635">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6544" _type="InsertStringCommand" date="Tue Apr 12 09:39:51 EDT 2022" starttimestamp="1649721002230" timestamp="49788792" timestamp2="49788792">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6545" _type="InsertStringCommand" date="Tue Apr 12 09:39:51 EDT 2022" starttimestamp="1649721002230" timestamp="49788792" timestamp2="49788792">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6547" _type="InsertStringCommand" date="Tue Apr 12 09:39:51 EDT 2022" starttimestamp="1649721002230" timestamp="49788858" timestamp2="49788858">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6548" _type="InsertStringCommand" date="Tue Apr 12 09:39:51 EDT 2022" starttimestamp="1649721002230" timestamp="49788858" timestamp2="49788858">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6550" _type="InsertStringCommand" date="Tue Apr 12 09:39:51 EDT 2022" starttimestamp="1649721002230" timestamp="49789165" timestamp2="49789165">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6551" _type="InsertStringCommand" date="Tue Apr 12 09:39:51 EDT 2022" starttimestamp="1649721002230" timestamp="49789165" timestamp2="49789165">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6552" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:39:52 EDT 2022" starttimestamp="1649721002230" timestamp="49789961" />
  <Command __id="6553" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:39:52 EDT 2022" starttimestamp="1649721002230" timestamp="49790022" />
  <Command __id="6554" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:39:52 EDT 2022" starttimestamp="1649721002230" timestamp="49790108" />
  <Command __id="6556" _type="PauseCommand" date="Tue Apr 12 09:39:55 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="49793185">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3077]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="6578" _type="ConsoleOutput" date="Tue Apr 12 09:40:17 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="49815534" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶Client Connect to Server¶")]]]></diff>
  </Command>
  <Command __id="6581" _type="PauseCommand" date="Tue Apr 12 09:40:23 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="49820872">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5338]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="6586" _type="ShellCommand" date="Tue Apr 12 09:45:02 EDT 2022" starttimestamp="1649721002230" timestamp="50100238" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6589" _type="PauseCommand" date="Tue Apr 12 09:55:23 EDT 2022" range="10m-20m" starttimestamp="1649721002230" timestamp="50721667">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[621429]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6588" _type="ShellCommand" date="Tue Apr 12 09:55:23 EDT 2022" starttimestamp="1649721002230" timestamp="50721667" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6590" _type="MoveCaretCommand" caretOffset="3047" date="Tue Apr 12 09:55:24 EDT 2022" docOffset="3047" starttimestamp="1649721002230" timestamp="50721867" />
  <Command __id="6591" _type="MoveCaretCommand" caretOffset="3047" date="Tue Apr 12 09:55:24 EDT 2022" docOffset="3047" starttimestamp="1649721002230" timestamp="50721867" />
  <Command __id="6593" _type="PauseCommand" date="Tue Apr 12 09:55:33 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="50731474">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9607]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6592" _type="MoveCaretCommand" caretOffset="1221" date="Tue Apr 12 09:55:33 EDT 2022" docOffset="1221" starttimestamp="1649721002230" timestamp="50731474" />
  <Command __id="6594" _type="MoveCaretCommand" caretOffset="1221" date="Tue Apr 12 09:55:33 EDT 2022" docOffset="1221" starttimestamp="1649721002230" timestamp="50731474" />
  <Command __id="6596" _type="InsertStringCommand" date="Tue Apr 12 09:55:33 EDT 2022" starttimestamp="1649721002230" timestamp="50731723" timestamp2="50731723">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6597" _type="InsertStringCommand" date="Tue Apr 12 09:55:33 EDT 2022" starttimestamp="1649721002230" timestamp="50731723" timestamp2="50731723">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6599" _type="PasteCommand" date="Tue Apr 12 09:55:34 EDT 2022" starttimestamp="1649721002230" timestamp="50732020" />
  <Command __id="6601" _type="PauseCommand" date="Tue Apr 12 09:55:38 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50736321">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4301]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6600" _type="SelectTextCommand" caretOffset="1243" date="Tue Apr 12 09:55:38 EDT 2022" end="1250" start="1243" starttimestamp="1649721002230" timestamp="50736321" />
  <Command __id="6602" _type="SelectTextCommand" caretOffset="1243" date="Tue Apr 12 09:55:38 EDT 2022" end="1250" start="1243" starttimestamp="1649721002230" timestamp="50736323" />
  <DocumentChange __id="6375" _type="Insert" date="Tue Apr 12 09:39:42 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3092" docExpressionCount="316" docLength="3409" length="59" offset="2770" repeat="59" starttimestamp="1649721002230" timestamp="49779864" timestamp2="49789142">
    <text><![CDATA[eve message to all clients (except original message sender)]]></text>
  </DocumentChange>
  <DocumentChange __id="6595" _type="Insert" date="Tue Apr 12 09:55:33 EDT 2022" docASTNodeCount="443" docActiveCodeLength="3095" docExpressionCount="316" docLength="3412" length="3" offset="1221" starttimestamp="1649721002230" timestamp="50731690">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="6598" _type="Replace" date="Tue Apr 12 09:55:34 EDT 2022" docASTNodeCount="458" docActiveCodeLength="3171" docExpressionCount="323" docLength="3488" endLine="28" insertionLength="77" int_docASTNodeCount="443" int_docActiveCodeLength="3094" int_docExpressionCount="316" int_docLength="3411" length="1" offset="1223" startLine="28" starttimestamp="1649721002230" timestamp="50732003">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	ArrayBlockingQueue<Integer> abq = new ArrayBlockingQueue<Integer>(capacity);]]></insertedText>
  </DocumentChange>
  <Command __id="6604" _type="PauseCommand" date="Tue Apr 12 09:55:39 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50737383">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1060]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="6603" _type="Replace" date="Tue Apr 12 09:55:39 EDT 2022" docASTNodeCount="458" docActiveCodeLength="3165" docExpressionCount="323" docLength="3482" endLine="28" insertionLength="1" int_docASTNodeCount="456" int_docActiveCodeLength="3164" int_docExpressionCount="322" int_docLength="3481" length="7" offset="1243" startLine="28" starttimestamp="1649721002230" timestamp="50737383">
    <deletedText><![CDATA[Integer]]></deletedText>
    <insertedText><![CDATA[B]]></insertedText>
  </DocumentChange>
  <Command __id="6605" _type="InsertStringCommand" date="Tue Apr 12 09:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="50737407" timestamp2="50737407">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6606" _type="InsertStringCommand" date="Tue Apr 12 09:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="50737407" timestamp2="50737407">
    <data><![CDATA[B]]></data>
  </Command>
  <DocumentChange __id="6607" _type="Insert" date="Tue Apr 12 09:55:39 EDT 2022" docASTNodeCount="458" docActiveCodeLength="3169" docExpressionCount="323" docLength="3486" length="4" offset="1244" repeat="4" starttimestamp="1649721002230" timestamp="50737631" timestamp2="50738015">
    <text><![CDATA[ytle]]></text>
  </DocumentChange>
  <Command __id="6608" _type="InsertStringCommand" date="Tue Apr 12 09:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="50737650" timestamp2="50737650">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="6609" _type="InsertStringCommand" date="Tue Apr 12 09:55:39 EDT 2022" starttimestamp="1649721002230" timestamp="50737650" timestamp2="50737650">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="6611" _type="InsertStringCommand" date="Tue Apr 12 09:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="50737797" timestamp2="50737797">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6612" _type="InsertStringCommand" date="Tue Apr 12 09:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="50737797" timestamp2="50737797">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6614" _type="InsertStringCommand" date="Tue Apr 12 09:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="50737916" timestamp2="50737916">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6615" _type="InsertStringCommand" date="Tue Apr 12 09:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="50737916" timestamp2="50737916">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6617" _type="InsertStringCommand" date="Tue Apr 12 09:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="50738034" timestamp2="50738034">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6618" _type="InsertStringCommand" date="Tue Apr 12 09:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="50738034" timestamp2="50738034">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="6619" _type="Delete" date="Tue Apr 12 09:55:40 EDT 2022" docASTNodeCount="458" docActiveCodeLength="3167" docExpressionCount="323" docLength="3484" endLine="28" length="2" offset="1246" repeat="2" startLine="28" starttimestamp="1649721002230" timestamp="50738509" timestamp2="50738633">
    <text><![CDATA[le]]></text>
  </DocumentChange>
  <Command __id="6620" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="50738516" />
  <Command __id="6621" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="50738516" />
  <Command __id="6623" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="50738633" />
  <Command __id="6624" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:55:40 EDT 2022" starttimestamp="1649721002230" timestamp="50738633" />
  <Command __id="6626" _type="InsertStringCommand" date="Tue Apr 12 09:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="50739077" timestamp2="50739077">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6627" _type="InsertStringCommand" date="Tue Apr 12 09:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="50739077" timestamp2="50739077">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6629" _type="InsertStringCommand" date="Tue Apr 12 09:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="50739418" timestamp2="50739418">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6630" _type="InsertStringCommand" date="Tue Apr 12 09:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="50739418" timestamp2="50739418">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6632" _type="InsertStringCommand" date="Tue Apr 12 09:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="50739629" timestamp2="50739629">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6633" _type="InsertStringCommand" date="Tue Apr 12 09:55:41 EDT 2022" starttimestamp="1649721002230" timestamp="50739629" timestamp2="50739629">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6635" _type="InsertStringCommand" date="Tue Apr 12 09:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="50739960" timestamp2="50739960">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6636" _type="InsertStringCommand" date="Tue Apr 12 09:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="50739960" timestamp2="50739960">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6638" _type="InsertStringCommand" date="Tue Apr 12 09:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="50740130" timestamp2="50740130">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6639" _type="InsertStringCommand" date="Tue Apr 12 09:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="50740132" timestamp2="50740132">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6641" _type="InsertStringCommand" date="Tue Apr 12 09:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="50740293" timestamp2="50740293">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6642" _type="InsertStringCommand" date="Tue Apr 12 09:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="50740293" timestamp2="50740293">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6644" _type="InsertStringCommand" date="Tue Apr 12 09:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="50740380" timestamp2="50740380">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6645" _type="InsertStringCommand" date="Tue Apr 12 09:55:42 EDT 2022" starttimestamp="1649721002230" timestamp="50740381" timestamp2="50740381">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6647" _type="PauseCommand" date="Tue Apr 12 09:55:46 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50743772">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3391]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6646" _type="SelectTextCommand" caretOffset="1284" date="Tue Apr 12 09:55:46 EDT 2022" end="1291" start="1284" starttimestamp="1649721002230" timestamp="50743772" />
  <Command __id="6648" _type="SelectTextCommand" caretOffset="1284" date="Tue Apr 12 09:55:46 EDT 2022" end="1291" start="1284" starttimestamp="1649721002230" timestamp="50743774" />
  <Command __id="6650" _type="InsertStringCommand" date="Tue Apr 12 09:55:46 EDT 2022" starttimestamp="1649721002230" timestamp="50743944" timestamp2="50743944">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6651" _type="InsertStringCommand" date="Tue Apr 12 09:55:46 EDT 2022" starttimestamp="1649721002230" timestamp="50743944" timestamp2="50743944">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6653" _type="InsertStringCommand" date="Tue Apr 12 09:55:46 EDT 2022" starttimestamp="1649721002230" timestamp="50744230" timestamp2="50744230">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="6654" _type="InsertStringCommand" date="Tue Apr 12 09:55:46 EDT 2022" starttimestamp="1649721002230" timestamp="50744230" timestamp2="50744230">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="6656" _type="InsertStringCommand" date="Tue Apr 12 09:55:46 EDT 2022" starttimestamp="1649721002230" timestamp="50744597" timestamp2="50744597">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6657" _type="InsertStringCommand" date="Tue Apr 12 09:55:46 EDT 2022" starttimestamp="1649721002230" timestamp="50744597" timestamp2="50744597">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6659" _type="InsertStringCommand" date="Tue Apr 12 09:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="50744828" timestamp2="50744828">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6660" _type="InsertStringCommand" date="Tue Apr 12 09:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="50744828" timestamp2="50744828">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6662" _type="InsertStringCommand" date="Tue Apr 12 09:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="50745211" timestamp2="50745211">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6663" _type="InsertStringCommand" date="Tue Apr 12 09:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="50745211" timestamp2="50745211">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6665" _type="InsertStringCommand" date="Tue Apr 12 09:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="50745379" timestamp2="50745379">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6666" _type="InsertStringCommand" date="Tue Apr 12 09:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="50745379" timestamp2="50745379">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6668" _type="InsertStringCommand" date="Tue Apr 12 09:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="50745493" timestamp2="50745493">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6669" _type="InsertStringCommand" date="Tue Apr 12 09:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="50745493" timestamp2="50745493">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6671" _type="InsertStringCommand" date="Tue Apr 12 09:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="50745640" timestamp2="50745640">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6672" _type="InsertStringCommand" date="Tue Apr 12 09:55:47 EDT 2022" starttimestamp="1649721002230" timestamp="50745640" timestamp2="50745640">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6674" _type="InsertStringCommand" date="Tue Apr 12 09:55:48 EDT 2022" starttimestamp="1649721002230" timestamp="50745828" timestamp2="50745828">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6675" _type="InsertStringCommand" date="Tue Apr 12 09:55:48 EDT 2022" starttimestamp="1649721002230" timestamp="50745829" timestamp2="50745829">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6677" _type="InsertStringCommand" date="Tue Apr 12 09:55:48 EDT 2022" starttimestamp="1649721002230" timestamp="50745920" timestamp2="50745920">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6678" _type="InsertStringCommand" date="Tue Apr 12 09:55:48 EDT 2022" starttimestamp="1649721002230" timestamp="50745920" timestamp2="50745920">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6680" _type="PauseCommand" date="Tue Apr 12 09:55:50 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50748508">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2588]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6679" _type="SelectTextCommand" caretOffset="1296" date="Tue Apr 12 09:55:50 EDT 2022" end="1304" start="1296" starttimestamp="1649721002230" timestamp="50748508" />
  <Command __id="6681" _type="SelectTextCommand" caretOffset="1296" date="Tue Apr 12 09:55:50 EDT 2022" end="1304" start="1296" starttimestamp="1649721002230" timestamp="50748523" />
  <Command __id="6683" _type="InsertStringCommand" date="Tue Apr 12 09:55:51 EDT 2022" starttimestamp="1649721002230" timestamp="50748934" timestamp2="50748934">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="6684" _type="InsertStringCommand" date="Tue Apr 12 09:55:51 EDT 2022" starttimestamp="1649721002230" timestamp="50748934" timestamp2="50748934">
    <data><![CDATA[5]]></data>
  </Command>
  <DocumentChange __id="6625" _type="Insert" date="Tue Apr 12 09:55:41 EDT 2022" docASTNodeCount="458" docActiveCodeLength="3174" docExpressionCount="323" docLength="3491" length="7" offset="1246" repeat="7" starttimestamp="1649721002230" timestamp="50739055" timestamp2="50740363">
    <text><![CDATA[eBuffer]]></text>
  </DocumentChange>
  <DocumentChange __id="6649" _type="Replace" date="Tue Apr 12 09:55:46 EDT 2022" docASTNodeCount="458" docActiveCodeLength="3168" docExpressionCount="323" docLength="3485" endLine="28" insertionLength="1" int_docASTNodeCount="456" int_docActiveCodeLength="3167" int_docExpressionCount="322" int_docLength="3484" length="7" offset="1284" startLine="28" starttimestamp="1649721002230" timestamp="50743933">
    <deletedText><![CDATA[Integer]]></deletedText>
    <insertedText><![CDATA[B]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6652" _type="Insert" date="Tue Apr 12 09:55:46 EDT 2022" docASTNodeCount="458" docActiveCodeLength="3177" docExpressionCount="323" docLength="3494" length="9" offset="1285" repeat="9" starttimestamp="1649721002230" timestamp="50744223" timestamp2="50745904">
    <text><![CDATA[yteBuffer]]></text>
  </DocumentChange>
  <DocumentChange __id="6682" _type="Replace" date="Tue Apr 12 09:55:51 EDT 2022" docASTNodeCount="458" docActiveCodeLength="3170" docExpressionCount="323" docLength="3487" endLine="28" insertionLength="1" int_docASTNodeCount="457" int_docActiveCodeLength="3169" int_docExpressionCount="322" int_docLength="3486" length="8" offset="1296" startLine="28" starttimestamp="1649721002230" timestamp="50748922">
    <deletedText><![CDATA[capacity]]></deletedText>
    <insertedText><![CDATA[5]]></insertedText>
  </DocumentChange>
  <Command __id="6686" _type="PauseCommand" date="Tue Apr 12 09:55:52 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50750013">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1079]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="6685" _type="Insert" date="Tue Apr 12 09:55:52 EDT 2022" docASTNodeCount="458" docActiveCodeLength="3173" docExpressionCount="323" docLength="3490" length="3" offset="1297" repeat="3" starttimestamp="1649721002230" timestamp="50750013" timestamp2="50750112">
    <text><![CDATA[000]]></text>
  </DocumentChange>
  <Command __id="6687" _type="InsertStringCommand" date="Tue Apr 12 09:55:52 EDT 2022" starttimestamp="1649721002230" timestamp="50750029" timestamp2="50750029">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="6688" _type="InsertStringCommand" date="Tue Apr 12 09:55:52 EDT 2022" starttimestamp="1649721002230" timestamp="50750029" timestamp2="50750029">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="6690" _type="InsertStringCommand" date="Tue Apr 12 09:55:52 EDT 2022" starttimestamp="1649721002230" timestamp="50750100" timestamp2="50750100">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="6691" _type="InsertStringCommand" date="Tue Apr 12 09:55:52 EDT 2022" starttimestamp="1649721002230" timestamp="50750100" timestamp2="50750100">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="6693" _type="InsertStringCommand" date="Tue Apr 12 09:55:52 EDT 2022" starttimestamp="1649721002230" timestamp="50750127" timestamp2="50750127">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="6694" _type="InsertStringCommand" date="Tue Apr 12 09:55:52 EDT 2022" starttimestamp="1649721002230" timestamp="50750127" timestamp2="50750127">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="6696" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:55:53 EDT 2022" starttimestamp="1649721002230" timestamp="50750804" />
  <Command __id="6697" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:55:53 EDT 2022" starttimestamp="1649721002230" timestamp="50750804" />
  <Command __id="6698" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:55:53 EDT 2022" starttimestamp="1649721002230" timestamp="50751674" />
  <Command __id="6699" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:55:53 EDT 2022" starttimestamp="1649721002230" timestamp="50751739" />
  <Command __id="6700" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:55:54 EDT 2022" starttimestamp="1649721002230" timestamp="50751812" />
  <Command __id="6702" _type="PauseCommand" date="Tue Apr 12 09:55:57 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50755432">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3620]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6706" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:55:59 EDT 2022" starttimestamp="1649721002230" timestamp="50757187" />
  <Command __id="6708" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:55:59 EDT 2022" starttimestamp="1649721002230" timestamp="50757232" />
  <Command __id="6709" _type="ShellCommand" date="Tue Apr 12 09:55:59 EDT 2022" starttimestamp="1649721002230" timestamp="50757438" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6710" _type="ShellCommand" date="Tue Apr 12 09:55:59 EDT 2022" starttimestamp="1649721002230" timestamp="50757645" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6711" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:55:59 EDT 2022" starttimestamp="1649721002230" timestamp="50757673" />
  <Command __id="6712" _type="ShellCommand" date="Tue Apr 12 09:56:00 EDT 2022" starttimestamp="1649721002230" timestamp="50758656" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6713" _type="ShellCommand" date="Tue Apr 12 09:56:01 EDT 2022" starttimestamp="1649721002230" timestamp="50758783" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6714" _type="MoveCaretCommand" caretOffset="1307" date="Tue Apr 12 09:56:02 EDT 2022" docOffset="1307" starttimestamp="1649721002230" timestamp="50759777" />
  <Command __id="6715" _type="MoveCaretCommand" caretOffset="1307" date="Tue Apr 12 09:56:02 EDT 2022" docOffset="1307" starttimestamp="1649721002230" timestamp="50759777" />
  <Command __id="6717" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="50760199" />
  <Command __id="6718" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="50760199" />
  <Command __id="6720" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="50760466" />
  <Command __id="6721" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="50760466" />
  <Command __id="6723" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="50760642" />
  <Command __id="6724" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:02 EDT 2022" starttimestamp="1649721002230" timestamp="50760642" />
  <Command __id="6726" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50760790" timestamp2="50760790">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6727" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50760790" timestamp2="50760790">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6729" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50760958" timestamp2="50760958">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6730" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50760958" timestamp2="50760958">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6732" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50761067" timestamp2="50761067">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6733" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50761067" timestamp2="50761067">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6735" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50761317" timestamp2="50761317">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6736" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50761317" timestamp2="50761317">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6738" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50761416" timestamp2="50761416">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6739" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50761416" timestamp2="50761416">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6741" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50761600" timestamp2="50761600">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6742" _type="InsertStringCommand" date="Tue Apr 12 09:56:03 EDT 2022" starttimestamp="1649721002230" timestamp="50761600" timestamp2="50761600">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6744" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50761796" timestamp2="50761796">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6745" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50761796" timestamp2="50761796">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6747" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762095" timestamp2="50762095">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6748" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762095" timestamp2="50762095">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6750" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762248" timestamp2="50762248">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6751" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762248" timestamp2="50762248">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6753" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762361" timestamp2="50762361">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6754" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762361" timestamp2="50762361">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6756" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762527" timestamp2="50762527">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6757" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762527" timestamp2="50762527">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6759" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762672" timestamp2="50762672">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6760" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762672" timestamp2="50762672">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6762" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762751" timestamp2="50762751">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6763" _type="InsertStringCommand" date="Tue Apr 12 09:56:04 EDT 2022" starttimestamp="1649721002230" timestamp="50762751" timestamp2="50762751">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6764" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="50763630" />
  <Command __id="6765" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:56:05 EDT 2022" starttimestamp="1649721002230" timestamp="50763687" />
  <Command __id="6766" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:56:06 EDT 2022" starttimestamp="1649721002230" timestamp="50763781" />
  <Command __id="6768" _type="PauseCommand" date="Tue Apr 12 09:56:08 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50766470">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2689]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6767" _type="SelectTextCommand" caretOffset="1304" date="Tue Apr 12 09:56:08 EDT 2022" end="1317" start="1304" starttimestamp="1649721002230" timestamp="50766470" />
  <Command __id="6769" _type="SelectTextCommand" caretOffset="1304" date="Tue Apr 12 09:56:08 EDT 2022" end="1317" start="1304" starttimestamp="1649721002230" timestamp="50766470" />
  <Command __id="6770" _type="CopyCommand" date="Tue Apr 12 09:56:08 EDT 2022" starttimestamp="1649721002230" timestamp="50766505" />
  <Command __id="6772" _type="PauseCommand" date="Tue Apr 12 09:56:19 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="50777044">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[10539]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6771" _type="MoveCaretCommand" caretOffset="2894" date="Tue Apr 12 09:56:19 EDT 2022" docOffset="2894" starttimestamp="1649721002230" timestamp="50777044" />
  <Command __id="6773" _type="MoveCaretCommand" caretOffset="2894" date="Tue Apr 12 09:56:19 EDT 2022" docOffset="2894" starttimestamp="1649721002230" timestamp="50777044" />
  <Command __id="6775" _type="InsertStringCommand" date="Tue Apr 12 09:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="50777587" timestamp2="50777587">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6776" _type="InsertStringCommand" date="Tue Apr 12 09:56:19 EDT 2022" starttimestamp="1649721002230" timestamp="50777587" timestamp2="50777587">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6778" _type="PasteCommand" date="Tue Apr 12 09:56:20 EDT 2022" starttimestamp="1649721002230" timestamp="50777892" />
  <Command __id="6780" _type="PauseCommand" date="Tue Apr 12 09:56:22 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50780304">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2412]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6779" _type="MoveCaretCommand" caretOffset="2734" date="Tue Apr 12 09:56:22 EDT 2022" docOffset="2734" starttimestamp="1649721002230" timestamp="50780304" />
  <Command __id="6781" _type="MoveCaretCommand" caretOffset="2734" date="Tue Apr 12 09:56:22 EDT 2022" docOffset="2734" starttimestamp="1649721002230" timestamp="50780305" />
  <Command __id="6783" _type="InsertStringCommand" date="Tue Apr 12 09:56:22 EDT 2022" starttimestamp="1649721002230" timestamp="50780562" timestamp2="50780562">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6784" _type="InsertStringCommand" date="Tue Apr 12 09:56:22 EDT 2022" starttimestamp="1649721002230" timestamp="50780562" timestamp2="50780562">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="6695" _type="Delete" date="Tue Apr 12 09:55:53 EDT 2022" docASTNodeCount="458" docActiveCodeLength="3172" docExpressionCount="323" docLength="3489" endLine="28" length="1" offset="1299" startLine="28" starttimestamp="1649721002230" timestamp="50750783">
    <text><![CDATA[0]]></text>
  </DocumentChange>
  <DocumentChange __id="6704" _type="Insert" date="Tue Apr 12 09:55:57 EDT 2022" docASTNodeCount="466" docActiveCodeLength="3221" docExpressionCount="330" docLength="3538" length="49" offset="296" repeat="2" starttimestamp="1649721002230" timestamp="50755607" timestamp2="50755607">
    <text><![CDATA[
import java.util.concurrent.ArrayBlockingQueue;]]></text>
  </DocumentChange>
  <DocumentChange __id="6716" _type="Delete" date="Tue Apr 12 09:56:02 EDT 2022" docASTNodeCount="451" docActiveCodeLength="3218" docExpressionCount="323" docLength="3535" endLine="29" length="3" offset="1304" repeat="3" startLine="29" starttimestamp="1649721002230" timestamp="50760191" timestamp2="50760633">
    <text><![CDATA[abq]]></text>
  </DocumentChange>
  <DocumentChange __id="6725" _type="Insert" date="Tue Apr 12 09:56:03 EDT 2022" docASTNodeCount="466" docActiveCodeLength="3231" docExpressionCount="330" docLength="3548" length="13" offset="1304" repeat="13" starttimestamp="1649721002230" timestamp="50760783" timestamp2="50762727">
    <text><![CDATA[boundedBuffer]]></text>
  </DocumentChange>
  <DocumentChange __id="6774" _type="Insert" date="Tue Apr 12 09:56:19 EDT 2022" docASTNodeCount="466" docActiveCodeLength="3235" docExpressionCount="330" docLength="3552" length="4" offset="2894" starttimestamp="1649721002230" timestamp="50777567">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="6777" _type="Replace" date="Tue Apr 12 09:56:20 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3248" docExpressionCount="331" docLength="3565" endLine="71" insertionLength="15" int_docASTNodeCount="466" int_docActiveCodeLength="3233" int_docExpressionCount="330" int_docLength="3550" length="2" offset="2896" startLine="71" starttimestamp="1649721002230" timestamp="50777873">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		boundedBuffer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6782" _type="Insert" date="Tue Apr 12 09:56:22 EDT 2022" docASTNodeCount="468" docActiveCodeLength="3252" docExpressionCount="331" docLength="3569" length="4" offset="2734" starttimestamp="1649721002230" timestamp="50780534">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="6786" _type="PauseCommand" date="Tue Apr 12 09:56:24 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50782740">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2178]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="6787" _type="InsertStringCommand" date="Tue Apr 12 09:56:25 EDT 2022" starttimestamp="1649721002230" timestamp="50782791" timestamp2="50782791">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6788" _type="InsertStringCommand" date="Tue Apr 12 09:56:25 EDT 2022" starttimestamp="1649721002230" timestamp="50782791" timestamp2="50782791">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6790" _type="InsertStringCommand" date="Tue Apr 12 09:56:25 EDT 2022" starttimestamp="1649721002230" timestamp="50783024" timestamp2="50783024">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="6791" _type="InsertStringCommand" date="Tue Apr 12 09:56:25 EDT 2022" starttimestamp="1649721002230" timestamp="50783024" timestamp2="50783024">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="6793" _type="InsertStringCommand" date="Tue Apr 12 09:56:25 EDT 2022" starttimestamp="1649721002230" timestamp="50783158" timestamp2="50783158">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6794" _type="InsertStringCommand" date="Tue Apr 12 09:56:25 EDT 2022" starttimestamp="1649721002230" timestamp="50783158" timestamp2="50783158">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6796" _type="InsertStringCommand" date="Tue Apr 12 09:56:25 EDT 2022" starttimestamp="1649721002230" timestamp="50783265" timestamp2="50783265">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6797" _type="InsertStringCommand" date="Tue Apr 12 09:56:25 EDT 2022" starttimestamp="1649721002230" timestamp="50783265" timestamp2="50783265">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6799" _type="InsertStringCommand" date="Tue Apr 12 09:56:25 EDT 2022" starttimestamp="1649721002230" timestamp="50783741" timestamp2="50783741">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6800" _type="InsertStringCommand" date="Tue Apr 12 09:56:25 EDT 2022" starttimestamp="1649721002230" timestamp="50783741" timestamp2="50783741">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="6802" _type="InsertStringCommand" date="Tue Apr 12 09:56:26 EDT 2022" starttimestamp="1649721002230" timestamp="50783852" timestamp2="50783852">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6803" _type="InsertStringCommand" date="Tue Apr 12 09:56:26 EDT 2022" starttimestamp="1649721002230" timestamp="50783852" timestamp2="50783852">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6805" _type="InsertStringCommand" date="Tue Apr 12 09:56:26 EDT 2022" starttimestamp="1649721002230" timestamp="50783960" timestamp2="50783960">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6806" _type="InsertStringCommand" date="Tue Apr 12 09:56:26 EDT 2022" starttimestamp="1649721002230" timestamp="50783960" timestamp2="50783960">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6808" _type="InsertStringCommand" date="Tue Apr 12 09:56:26 EDT 2022" starttimestamp="1649721002230" timestamp="50784131" timestamp2="50784131">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6809" _type="InsertStringCommand" date="Tue Apr 12 09:56:26 EDT 2022" starttimestamp="1649721002230" timestamp="50784131" timestamp2="50784131">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6811" _type="InsertStringCommand" date="Tue Apr 12 09:56:26 EDT 2022" starttimestamp="1649721002230" timestamp="50784232" timestamp2="50784232">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6812" _type="InsertStringCommand" date="Tue Apr 12 09:56:26 EDT 2022" starttimestamp="1649721002230" timestamp="50784232" timestamp2="50784232">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6814" _type="InsertStringCommand" date="Tue Apr 12 09:56:26 EDT 2022" starttimestamp="1649721002230" timestamp="50784342" timestamp2="50784342">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6815" _type="InsertStringCommand" date="Tue Apr 12 09:56:26 EDT 2022" starttimestamp="1649721002230" timestamp="50784342" timestamp2="50784342">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6817" _type="InsertStringCommand" date="Tue Apr 12 09:56:27 EDT 2022" starttimestamp="1649721002230" timestamp="50784826" timestamp2="50784826">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6818" _type="InsertStringCommand" date="Tue Apr 12 09:56:27 EDT 2022" starttimestamp="1649721002230" timestamp="50784826" timestamp2="50784826">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6820" _type="InsertStringCommand" date="Tue Apr 12 09:56:27 EDT 2022" starttimestamp="1649721002230" timestamp="50784957" timestamp2="50784957">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6821" _type="InsertStringCommand" date="Tue Apr 12 09:56:27 EDT 2022" starttimestamp="1649721002230" timestamp="50784957" timestamp2="50784957">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6823" _type="InsertStringCommand" date="Tue Apr 12 09:56:27 EDT 2022" starttimestamp="1649721002230" timestamp="50785145" timestamp2="50785145">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6824" _type="InsertStringCommand" date="Tue Apr 12 09:56:27 EDT 2022" starttimestamp="1649721002230" timestamp="50785147" timestamp2="50785147">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6826" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:27 EDT 2022" starttimestamp="1649721002230" timestamp="50785483" />
  <Command __id="6827" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:27 EDT 2022" starttimestamp="1649721002230" timestamp="50785483" />
  <Command __id="6829" _type="InsertStringCommand" date="Tue Apr 12 09:56:27 EDT 2022" starttimestamp="1649721002230" timestamp="50785641" timestamp2="50785641">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6830" _type="InsertStringCommand" date="Tue Apr 12 09:56:27 EDT 2022" starttimestamp="1649721002230" timestamp="50785641" timestamp2="50785641">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6832" _type="InsertStringCommand" date="Tue Apr 12 09:56:28 EDT 2022" starttimestamp="1649721002230" timestamp="50785803" timestamp2="50785803">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6833" _type="InsertStringCommand" date="Tue Apr 12 09:56:28 EDT 2022" starttimestamp="1649721002230" timestamp="50785803" timestamp2="50785803">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6835" _type="InsertStringCommand" date="Tue Apr 12 09:56:28 EDT 2022" starttimestamp="1649721002230" timestamp="50785947" timestamp2="50785947">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="6836" _type="InsertStringCommand" date="Tue Apr 12 09:56:28 EDT 2022" starttimestamp="1649721002230" timestamp="50785947" timestamp2="50785947">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="6838" _type="InsertStringCommand" date="Tue Apr 12 09:56:28 EDT 2022" starttimestamp="1649721002230" timestamp="50786139" timestamp2="50786139">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6839" _type="InsertStringCommand" date="Tue Apr 12 09:56:28 EDT 2022" starttimestamp="1649721002230" timestamp="50786140" timestamp2="50786140">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6841" _type="InsertStringCommand" date="Tue Apr 12 09:56:28 EDT 2022" starttimestamp="1649721002230" timestamp="50786561" timestamp2="50786561">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="6842" _type="InsertStringCommand" date="Tue Apr 12 09:56:28 EDT 2022" starttimestamp="1649721002230" timestamp="50786561" timestamp2="50786561">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="6844" _type="InsertStringCommand" date="Tue Apr 12 09:56:29 EDT 2022" starttimestamp="1649721002230" timestamp="50786773" timestamp2="50786773">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6845" _type="InsertStringCommand" date="Tue Apr 12 09:56:29 EDT 2022" starttimestamp="1649721002230" timestamp="50786774" timestamp2="50786774">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6847" _type="InsertStringCommand" date="Tue Apr 12 09:56:29 EDT 2022" starttimestamp="1649721002230" timestamp="50787048" timestamp2="50787048">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6848" _type="InsertStringCommand" date="Tue Apr 12 09:56:29 EDT 2022" starttimestamp="1649721002230" timestamp="50787048" timestamp2="50787048">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6850" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:29 EDT 2022" starttimestamp="1649721002230" timestamp="50787374" />
  <Command __id="6851" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:29 EDT 2022" starttimestamp="1649721002230" timestamp="50787374" />
  <Command __id="6853" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:29 EDT 2022" starttimestamp="1649721002230" timestamp="50787537" />
  <Command __id="6854" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:29 EDT 2022" starttimestamp="1649721002230" timestamp="50787537" />
  <Command __id="6856" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:29 EDT 2022" starttimestamp="1649721002230" timestamp="50787685" />
  <Command __id="6857" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:29 EDT 2022" starttimestamp="1649721002230" timestamp="50787685" />
  <Command __id="6859" _type="InsertStringCommand" date="Tue Apr 12 09:56:30 EDT 2022" starttimestamp="1649721002230" timestamp="50788082" timestamp2="50788082">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="6860" _type="InsertStringCommand" date="Tue Apr 12 09:56:30 EDT 2022" starttimestamp="1649721002230" timestamp="50788084" timestamp2="50788084">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="6862" _type="InsertStringCommand" date="Tue Apr 12 09:56:30 EDT 2022" starttimestamp="1649721002230" timestamp="50788265" timestamp2="50788265">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6863" _type="InsertStringCommand" date="Tue Apr 12 09:56:30 EDT 2022" starttimestamp="1649721002230" timestamp="50788265" timestamp2="50788265">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6865" _type="InsertStringCommand" date="Tue Apr 12 09:56:30 EDT 2022" starttimestamp="1649721002230" timestamp="50788492" timestamp2="50788492">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="6866" _type="InsertStringCommand" date="Tue Apr 12 09:56:30 EDT 2022" starttimestamp="1649721002230" timestamp="50788492" timestamp2="50788492">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="6868" _type="InsertStringCommand" date="Tue Apr 12 09:56:31 EDT 2022" starttimestamp="1649721002230" timestamp="50789343" timestamp2="50789343">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="6869" _type="InsertStringCommand" date="Tue Apr 12 09:56:31 EDT 2022" starttimestamp="1649721002230" timestamp="50789343" timestamp2="50789343">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="6871" _type="InsertStringCommand" date="Tue Apr 12 09:56:31 EDT 2022" starttimestamp="1649721002230" timestamp="50789552" timestamp2="50789552">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6872" _type="InsertStringCommand" date="Tue Apr 12 09:56:31 EDT 2022" starttimestamp="1649721002230" timestamp="50789552" timestamp2="50789552">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6874" _type="InsertStringCommand" date="Tue Apr 12 09:56:31 EDT 2022" starttimestamp="1649721002230" timestamp="50789738" timestamp2="50789738">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6875" _type="InsertStringCommand" date="Tue Apr 12 09:56:31 EDT 2022" starttimestamp="1649721002230" timestamp="50789738" timestamp2="50789738">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6877" _type="InsertStringCommand" date="Tue Apr 12 09:56:32 EDT 2022" starttimestamp="1649721002230" timestamp="50789926" timestamp2="50789926">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6878" _type="InsertStringCommand" date="Tue Apr 12 09:56:32 EDT 2022" starttimestamp="1649721002230" timestamp="50789926" timestamp2="50789926">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6880" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:32 EDT 2022" starttimestamp="1649721002230" timestamp="50790233" />
  <Command __id="6881" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:32 EDT 2022" starttimestamp="1649721002230" timestamp="50790233" />
  <Command __id="6883" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:32 EDT 2022" starttimestamp="1649721002230" timestamp="50790388" />
  <Command __id="6884" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:32 EDT 2022" starttimestamp="1649721002230" timestamp="50790388" />
  <Command __id="6886" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:32 EDT 2022" starttimestamp="1649721002230" timestamp="50790554" />
  <Command __id="6887" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:32 EDT 2022" starttimestamp="1649721002230" timestamp="50790554" />
  <Command __id="6889" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:32 EDT 2022" starttimestamp="1649721002230" timestamp="50790720" />
  <Command __id="6890" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:32 EDT 2022" starttimestamp="1649721002230" timestamp="50790720" />
  <Command __id="6892" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:33 EDT 2022" starttimestamp="1649721002230" timestamp="50790855" />
  <Command __id="6893" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:56:33 EDT 2022" starttimestamp="1649721002230" timestamp="50790856" />
  <Command __id="6895" _type="InsertStringCommand" date="Tue Apr 12 09:56:33 EDT 2022" starttimestamp="1649721002230" timestamp="50790989" timestamp2="50790989">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6896" _type="InsertStringCommand" date="Tue Apr 12 09:56:33 EDT 2022" starttimestamp="1649721002230" timestamp="50790990" timestamp2="50790990">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6898" _type="InsertStringCommand" date="Tue Apr 12 09:56:33 EDT 2022" starttimestamp="1649721002230" timestamp="50791248" timestamp2="50791248">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="6899" _type="InsertStringCommand" date="Tue Apr 12 09:56:33 EDT 2022" starttimestamp="1649721002230" timestamp="50791248" timestamp2="50791248">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="6901" _type="InsertStringCommand" date="Tue Apr 12 09:56:33 EDT 2022" starttimestamp="1649721002230" timestamp="50791365" timestamp2="50791365">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6902" _type="InsertStringCommand" date="Tue Apr 12 09:56:33 EDT 2022" starttimestamp="1649721002230" timestamp="50791365" timestamp2="50791365">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6904" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50791802" timestamp2="50791802">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6905" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50791802" timestamp2="50791802">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6907" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50791969" timestamp2="50791969">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6908" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50791969" timestamp2="50791969">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6910" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50792097" timestamp2="50792097">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6911" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50792098" timestamp2="50792098">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6913" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50792162" timestamp2="50792162">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6914" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50792162" timestamp2="50792162">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6916" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50792251" timestamp2="50792251">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6917" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50792251" timestamp2="50792251">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6919" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50792525" timestamp2="50792525">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6920" _type="InsertStringCommand" date="Tue Apr 12 09:56:34 EDT 2022" starttimestamp="1649721002230" timestamp="50792525" timestamp2="50792525">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6921" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 09:56:34 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="50792538" />
  <Command __id="6925" _type="PauseCommand" date="Tue Apr 12 09:56:40 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="50798655">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[6117]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6924" _type="ShellCommand" date="Tue Apr 12 09:56:40 EDT 2022" starttimestamp="1649721002230" timestamp="50798655" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6926" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 09:56:41 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="50798818" />
  <Command __id="6928" _type="PauseCommand" date="Tue Apr 12 09:57:17 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="50835419">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[36601]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="6927" _type="ShellCommand" date="Tue Apr 12 09:57:17 EDT 2022" starttimestamp="1649721002230" timestamp="50835419" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6930" _type="PauseCommand" date="Tue Apr 12 09:57:21 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50839523">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4104]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="6785" _type="Insert" date="Tue Apr 12 09:56:24 EDT 2022" docASTNodeCount="473" docActiveCodeLength="3265" docExpressionCount="333" docLength="3582" length="13" offset="2738" repeat="13" starttimestamp="1649721002230" timestamp="50782740" timestamp2="50785127">
    <text><![CDATA[ByteBuffer cp]]></text>
  </DocumentChange>
  <DocumentChange __id="6825" _type="Delete" date="Tue Apr 12 09:56:27 EDT 2022" docASTNodeCount="473" docActiveCodeLength="3264" docExpressionCount="333" docLength="3581" endLine="67" length="1" offset="2750" startLine="67" starttimestamp="1649721002230" timestamp="50785479">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="6828" _type="Insert" date="Tue Apr 12 09:56:27 EDT 2022" docASTNodeCount="476" docActiveCodeLength="3271" docExpressionCount="335" docLength="3588" length="7" offset="2750" repeat="7" starttimestamp="1649721002230" timestamp="50785636" timestamp2="50787028">
    <text><![CDATA[opy - a]]></text>
  </DocumentChange>
  <DocumentChange __id="6849" _type="Delete" date="Tue Apr 12 09:56:29 EDT 2022" docASTNodeCount="473" docActiveCodeLength="3268" docExpressionCount="333" docLength="3585" endLine="67" length="3" offset="2754" repeat="3" startLine="67" starttimestamp="1649721002230" timestamp="50787361" timestamp2="50787675">
    <text><![CDATA[- a]]></text>
  </DocumentChange>
  <DocumentChange __id="6858" _type="Insert" date="Tue Apr 12 09:56:30 EDT 2022" docASTNodeCount="474" docActiveCodeLength="3275" docExpressionCount="334" docLength="3592" length="7" offset="2754" repeat="7" starttimestamp="1649721002230" timestamp="50788064" timestamp2="50789907">
    <text><![CDATA[= AMess]]></text>
  </DocumentChange>
  <DocumentChange __id="6879" _type="Delete" date="Tue Apr 12 09:56:32 EDT 2022" docASTNodeCount="472" docActiveCodeLength="3270" docExpressionCount="334" docLength="3587" endLine="67" length="5" offset="2756" repeat="5" startLine="67" starttimestamp="1649721002230" timestamp="50790221" timestamp2="50790843">
    <text><![CDATA[AMess]]></text>
  </DocumentChange>
  <DocumentChange __id="6894" _type="Insert" date="Tue Apr 12 09:56:33 EDT 2022" docASTNodeCount="476" docActiveCodeLength="3281" docExpressionCount="336" docLength="3598" length="11" offset="2756" repeat="11" starttimestamp="1649721002230" timestamp="50790973" timestamp2="50793953">
    <text><![CDATA[aMessage.de]]></text>
  </DocumentChange>
  <Command __id="6929" _type="MoveCaretCommand" caretOffset="345" date="Tue Apr 12 09:57:21 EDT 2022" docOffset="345" starttimestamp="1649721002230" timestamp="50839523" />
  <Command __id="6931" _type="MoveCaretCommand" caretOffset="345" date="Tue Apr 12 09:57:21 EDT 2022" docOffset="345" starttimestamp="1649721002230" timestamp="50839523" />
  <Command __id="6933" _type="InsertStringCommand" date="Tue Apr 12 09:57:22 EDT 2022" starttimestamp="1649721002230" timestamp="50839790" timestamp2="50839790">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6934" _type="InsertStringCommand" date="Tue Apr 12 09:57:22 EDT 2022" starttimestamp="1649721002230" timestamp="50839790" timestamp2="50839790">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6937" _type="PauseCommand" date="Tue Apr 12 09:57:23 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50841027">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1237]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="6936" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841027" timestamp2="50841027">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6938" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841027" timestamp2="50841027">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6940" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841165" timestamp2="50841165">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6941" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841165" timestamp2="50841165">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6943" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841251" timestamp2="50841251">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6944" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841251" timestamp2="50841251">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6946" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841274" timestamp2="50841274">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6947" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841274" timestamp2="50841274">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6949" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841393" timestamp2="50841393">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6950" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841393" timestamp2="50841393">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6952" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841568" timestamp2="50841568">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6953" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841568" timestamp2="50841568">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6955" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841695" timestamp2="50841695">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6956" _type="InsertStringCommand" date="Tue Apr 12 09:57:23 EDT 2022" starttimestamp="1649721002230" timestamp="50841695" timestamp2="50841695">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6958" _type="PasteCommand" date="Tue Apr 12 09:57:24 EDT 2022" starttimestamp="1649721002230" timestamp="50842053" />
  <Command __id="6960" _type="InsertStringCommand" date="Tue Apr 12 09:57:24 EDT 2022" starttimestamp="1649721002230" timestamp="50842380" timestamp2="50842380">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="6961" _type="InsertStringCommand" date="Tue Apr 12 09:57:24 EDT 2022" starttimestamp="1649721002230" timestamp="50842380" timestamp2="50842380">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="6963" _type="PauseCommand" date="Tue Apr 12 09:57:29 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50847122">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4742]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6962" _type="SelectTextCommand" caretOffset="374" date="Tue Apr 12 09:57:29 EDT 2022" end="377" start="374" starttimestamp="1649721002230" timestamp="50847122" />
  <Command __id="6964" _type="SelectTextCommand" caretOffset="374" date="Tue Apr 12 09:57:29 EDT 2022" end="377" start="374" starttimestamp="1649721002230" timestamp="50847123" />
  <Command __id="6966" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:57:30 EDT 2022" starttimestamp="1649721002230" timestamp="50847856" />
  <Command __id="6967" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:57:30 EDT 2022" starttimestamp="1649721002230" timestamp="50847856" />
  <Command __id="6969" _type="PauseCommand" date="Tue Apr 12 09:57:32 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50850174">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2318]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6968" _type="SelectTextCommand" caretOffset="354" date="Tue Apr 12 09:57:32 EDT 2022" end="373" start="354" starttimestamp="1649721002230" timestamp="50850174" />
  <Command __id="6970" _type="SelectTextCommand" caretOffset="354" date="Tue Apr 12 09:57:32 EDT 2022" end="373" start="354" starttimestamp="1649721002230" timestamp="50850174" />
  <Command __id="6972" _type="CutCommand" date="Tue Apr 12 09:57:33 EDT 2022" starttimestamp="1649721002230" timestamp="50850993" />
  <Command __id="6974" _type="PauseCommand" date="Tue Apr 12 09:57:36 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50853938">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[2945]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="6973" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 09:57:36 EDT 2022" starttimestamp="1649721002230" timestamp="50853938" />
  <Command __id="6975" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 09:57:36 EDT 2022" starttimestamp="1649721002230" timestamp="50853938" />
  <DocumentChange __id="6932" _type="Insert" date="Tue Apr 12 09:57:21 EDT 2022" docASTNodeCount="478" docActiveCodeLength="3330" docExpressionCount="337" docLength="3647" length="49" offset="345" repeat="10" starttimestamp="1649721002230" timestamp="50839762" timestamp2="50842364">
    <text><![CDATA[
import MiscAssignmentUtils in assignments.util;]]></text>
  </DocumentChange>
  <DocumentChange __id="6965" _type="Delete" date="Tue Apr 12 09:57:30 EDT 2022" docASTNodeCount="478" docActiveCodeLength="3327" docExpressionCount="337" docLength="3644" endLine="11" length="3" offset="374" startLine="11" starttimestamp="1649721002230" timestamp="50847846">
    <text><![CDATA[in ]]></text>
  </DocumentChange>
  <DocumentChange __id="6971" _type="Delete" date="Tue Apr 12 09:57:33 EDT 2022" docASTNodeCount="480" docActiveCodeLength="3308" docExpressionCount="339" docLength="3625" endLine="11" length="19" offset="354" startLine="11" starttimestamp="1649721002230" timestamp="50850985">
    <text><![CDATA[MiscAssignmentUtils]]></text>
  </DocumentChange>
  <Command __id="6977" _type="PauseCommand" date="Tue Apr 12 09:57:37 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50855525">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1587]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="6978" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:57:37 EDT 2022" starttimestamp="1649721002230" timestamp="50855537" />
  <Command __id="6979" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:57:37 EDT 2022" starttimestamp="1649721002230" timestamp="50855538" />
  <Command __id="6981" _type="PauseCommand" date="Tue Apr 12 09:57:38 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50856769">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1231]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="6989" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:57:41 EDT 2022" starttimestamp="1649721002230" timestamp="50859530" />
  <Command __id="6991" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:57:41 EDT 2022" starttimestamp="1649721002230" timestamp="50859589" />
  <Command __id="6992" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 09:57:41 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="50859658" />
  <Command __id="6993" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:57:41 EDT 2022" starttimestamp="1649721002230" timestamp="50859700" />
  <Command __id="6995" _type="PauseCommand" date="Tue Apr 12 09:57:45 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50862852">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3152]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6994" _type="SelectTextCommand" caretOffset="371" date="Tue Apr 12 09:57:45 EDT 2022" end="390" start="371" starttimestamp="1649721002230" timestamp="50862852" />
  <Command __id="6996" _type="SelectTextCommand" caretOffset="371" date="Tue Apr 12 09:57:45 EDT 2022" end="390" start="371" starttimestamp="1649721002230" timestamp="50862853" />
  <Command __id="6997" _type="CopyCommand" date="Tue Apr 12 09:57:45 EDT 2022" starttimestamp="1649721002230" timestamp="50863112" />
  <Command __id="6999" _type="PauseCommand" date="Tue Apr 12 09:57:49 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50866955">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3843]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="6998" _type="SelectTextCommand" caretOffset="2802" date="Tue Apr 12 09:57:49 EDT 2022" end="2813" start="2802" starttimestamp="1649721002230" timestamp="50866955" />
  <Command __id="7000" _type="SelectTextCommand" caretOffset="2802" date="Tue Apr 12 09:57:49 EDT 2022" end="2813" start="2802" starttimestamp="1649721002230" timestamp="50866955" />
  <Command __id="7002" _type="PasteCommand" date="Tue Apr 12 09:57:49 EDT 2022" starttimestamp="1649721002230" timestamp="50867364" />
  <Command __id="7004" _type="InsertStringCommand" date="Tue Apr 12 09:57:49 EDT 2022" starttimestamp="1649721002230" timestamp="50867731" timestamp2="50867731">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7005" _type="InsertStringCommand" date="Tue Apr 12 09:57:49 EDT 2022" starttimestamp="1649721002230" timestamp="50867731" timestamp2="50867731">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7006" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 09:57:49 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="50867747" />
  <Command __id="7008" _type="PauseCommand" date="Tue Apr 12 09:57:52 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50869796">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2049]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="7007" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 09:57:52 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="50869796" />
  <Command __id="7010" _type="InsertStringCommand" date="Tue Apr 12 09:57:52 EDT 2022" starttimestamp="1649721002230" timestamp="50869953" timestamp2="50869953">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7011" _type="InsertStringCommand" date="Tue Apr 12 09:57:52 EDT 2022" starttimestamp="1649721002230" timestamp="50869953" timestamp2="50869953">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7013" _type="InsertStringCommand" date="Tue Apr 12 09:57:52 EDT 2022" starttimestamp="1649721002230" timestamp="50870263" timestamp2="50870263">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7014" _type="InsertStringCommand" date="Tue Apr 12 09:57:52 EDT 2022" starttimestamp="1649721002230" timestamp="50870263" timestamp2="50870263">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7016" _type="PauseCommand" date="Tue Apr 12 09:57:53 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50871569">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1306]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7015" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:57:53 EDT 2022" starttimestamp="1649721002230" timestamp="50871569" />
  <Command __id="7017" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 09:57:53 EDT 2022" starttimestamp="1649721002230" timestamp="50871569" />
  <Command __id="7019" _type="InsertStringCommand" date="Tue Apr 12 09:57:54 EDT 2022" starttimestamp="1649721002230" timestamp="50871893" timestamp2="50871893">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7020" _type="InsertStringCommand" date="Tue Apr 12 09:57:54 EDT 2022" starttimestamp="1649721002230" timestamp="50871893" timestamp2="50871893">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="6976" _type="Delete" date="Tue Apr 12 09:57:37 EDT 2022" docASTNodeCount="480" docActiveCodeLength="3307" docExpressionCount="339" docLength="3624" endLine="11" length="1" offset="354" startLine="11" starttimestamp="1649721002230" timestamp="50855525">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="6983" _type="Insert" date="Tue Apr 12 09:57:39 EDT 2022" docASTNodeCount="482" docActiveCodeLength="3327" docExpressionCount="341" docLength="3644" length="20" offset="370" repeat="2" starttimestamp="1649721002230" timestamp="50857262" timestamp2="50857639">
    <text><![CDATA[.MiscAssignmentUtils]]></text>
  </DocumentChange>
  <DocumentChange __id="7001" _type="Replace" date="Tue Apr 12 09:57:49 EDT 2022" docASTNodeCount="480" docActiveCodeLength="3335" docExpressionCount="339" docLength="3652" endLine="68" insertionLength="19" int_docASTNodeCount="478" int_docActiveCodeLength="3316" int_docExpressionCount="339" int_docLength="3633" length="11" offset="2802" startLine="68" starttimestamp="1649721002230" timestamp="50867339">
    <deletedText><![CDATA[aMessage.de]]></deletedText>
    <insertedText><![CDATA[MiscAssignmentUtils]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7003" _type="Insert" date="Tue Apr 12 09:57:49 EDT 2022" docASTNodeCount="480" docActiveCodeLength="3336" docExpressionCount="341" docLength="3653" length="1" offset="2821" starttimestamp="1649721002230" timestamp="50867723">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="7009" _type="Insert" date="Tue Apr 12 09:57:52 EDT 2022" docASTNodeCount="483" docActiveCodeLength="3362" docExpressionCount="342" docLength="3679" length="26" offset="2822" starttimestamp="1649721002230" timestamp="50869828">
    <text><![CDATA[deepDuplicate(aByteBuffer)]]></text>
  </DocumentChange>
  <DocumentChange __id="7012" _type="Replace" date="Tue Apr 12 09:57:52 EDT 2022" docASTNodeCount="483" docActiveCodeLength="3352" docExpressionCount="342" docLength="3669" endLine="68" insertionLength="1" int_docASTNodeCount="482" int_docActiveCodeLength="3351" int_docExpressionCount="341" int_docLength="3668" length="11" offset="2836" startLine="68" starttimestamp="1649721002230" timestamp="50870250">
    <deletedText><![CDATA[aByteBuffer]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7018" _type="Replace" date="Tue Apr 12 09:57:54 EDT 2022" docASTNodeCount="483" docActiveCodeLength="3359" docExpressionCount="342" docLength="3676" endLine="68" insertionLength="8" int_docASTNodeCount="482" int_docActiveCodeLength="3351" int_docExpressionCount="341" int_docLength="3668" length="1" offset="2836" startLine="68" starttimestamp="1649721002230" timestamp="50871882">
    <deletedText><![CDATA[a]]></deletedText>
    <insertedText><![CDATA[aMessage]]></insertedText>
  </DocumentChange>
  <Command __id="7022" _type="PauseCommand" date="Tue Apr 12 09:57:55 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50872918">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1025]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="7023" _type="InsertStringCommand" date="Tue Apr 12 09:57:55 EDT 2022" starttimestamp="1649721002230" timestamp="50872934" timestamp2="50872934">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="7024" _type="InsertStringCommand" date="Tue Apr 12 09:57:55 EDT 2022" starttimestamp="1649721002230" timestamp="50872934" timestamp2="50872934">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="7025" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:57:55 EDT 2022" starttimestamp="1649721002230" timestamp="50873597" />
  <Command __id="7026" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:57:55 EDT 2022" starttimestamp="1649721002230" timestamp="50873728" />
  <Command __id="7027" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:57:56 EDT 2022" starttimestamp="1649721002230" timestamp="50873778" />
  <Command __id="7029" _type="PauseCommand" date="Tue Apr 12 09:58:00 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50878234">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4456]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7028" _type="MoveCaretCommand" caretOffset="3023" date="Tue Apr 12 09:58:00 EDT 2022" docOffset="3023" starttimestamp="1649721002230" timestamp="50878234" />
  <Command __id="7030" _type="MoveCaretCommand" caretOffset="3023" date="Tue Apr 12 09:58:00 EDT 2022" docOffset="3023" starttimestamp="1649721002230" timestamp="50878234" />
  <Command __id="7032" _type="InsertStringCommand" date="Tue Apr 12 09:58:01 EDT 2022" starttimestamp="1649721002230" timestamp="50879110" timestamp2="50879110">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7033" _type="InsertStringCommand" date="Tue Apr 12 09:58:01 EDT 2022" starttimestamp="1649721002230" timestamp="50879110" timestamp2="50879110">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7034" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 09:58:01 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="50879220" />
  <Command __id="7036" _type="PauseCommand" date="Tue Apr 12 09:58:03 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50880877">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1657]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="7035" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 09:58:03 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="50880877" />
  <Command __id="7038" _type="InsertStringCommand" date="Tue Apr 12 09:58:03 EDT 2022" starttimestamp="1649721002230" timestamp="50881033" timestamp2="50881033">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7039" _type="InsertStringCommand" date="Tue Apr 12 09:58:03 EDT 2022" starttimestamp="1649721002230" timestamp="50881033" timestamp2="50881033">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="7021" _type="Insert" date="Tue Apr 12 09:57:55 EDT 2022" docASTNodeCount="483" docActiveCodeLength="3360" docExpressionCount="342" docLength="3677" length="1" offset="2845" starttimestamp="1649721002230" timestamp="50872918">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="7031" _type="Insert" date="Tue Apr 12 09:58:01 EDT 2022" docASTNodeCount="486" docActiveCodeLength="3367" docExpressionCount="345" docLength="3684" length="7" offset="3023" repeat="2" starttimestamp="1649721002230" timestamp="50879093" timestamp2="50880892">
    <text><![CDATA[.add(e)]]></text>
  </DocumentChange>
  <Command __id="7041" _type="PauseCommand" date="Tue Apr 12 09:58:05 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50883001">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1968]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="7040" _type="Replace" date="Tue Apr 12 09:58:05 EDT 2022" docASTNodeCount="486" docActiveCodeLength="3367" docExpressionCount="345" docLength="3684" endLine="73" insertionLength="1" int_docASTNodeCount="485" int_docActiveCodeLength="3366" int_docExpressionCount="344" int_docLength="3683" length="1" offset="3028" startLine="73" starttimestamp="1649721002230" timestamp="50883001">
    <deletedText><![CDATA[e]]></deletedText>
    <insertedText><![CDATA[c]]></insertedText>
  </DocumentChange>
  <Command __id="7042" _type="InsertStringCommand" date="Tue Apr 12 09:58:05 EDT 2022" starttimestamp="1649721002230" timestamp="50883022" timestamp2="50883022">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7043" _type="InsertStringCommand" date="Tue Apr 12 09:58:05 EDT 2022" starttimestamp="1649721002230" timestamp="50883022" timestamp2="50883022">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7045" _type="InsertStringCommand" date="Tue Apr 12 09:58:05 EDT 2022" starttimestamp="1649721002230" timestamp="50883129" timestamp2="50883129">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7046" _type="InsertStringCommand" date="Tue Apr 12 09:58:05 EDT 2022" starttimestamp="1649721002230" timestamp="50883129" timestamp2="50883129">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7048" _type="InsertStringCommand" date="Tue Apr 12 09:58:05 EDT 2022" starttimestamp="1649721002230" timestamp="50883230" timestamp2="50883230">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7049" _type="InsertStringCommand" date="Tue Apr 12 09:58:05 EDT 2022" starttimestamp="1649721002230" timestamp="50883230" timestamp2="50883230">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7051" _type="InsertStringCommand" date="Tue Apr 12 09:58:05 EDT 2022" starttimestamp="1649721002230" timestamp="50883394" timestamp2="50883394">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="7052" _type="InsertStringCommand" date="Tue Apr 12 09:58:05 EDT 2022" starttimestamp="1649721002230" timestamp="50883394" timestamp2="50883394">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="7054" _type="PauseCommand" date="Tue Apr 12 09:58:06 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50884651">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1257]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7059" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:58:08 EDT 2022" starttimestamp="1649721002230" timestamp="50886693" />
  <Command __id="7061" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:58:08 EDT 2022" starttimestamp="1649721002230" timestamp="50886741" />
  <Command __id="7062" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:58:08 EDT 2022" starttimestamp="1649721002230" timestamp="50886763" />
  <Command __id="7063" _type="ShellCommand" date="Tue Apr 12 09:58:09 EDT 2022" starttimestamp="1649721002230" timestamp="50886979" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7065" _type="PauseCommand" date="Tue Apr 12 09:58:11 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50888918">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1939]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7064" _type="ShellCommand" date="Tue Apr 12 09:58:11 EDT 2022" starttimestamp="1649721002230" timestamp="50888918" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7067" _type="PauseCommand" date="Tue Apr 12 09:58:14 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50891812">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2894]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7066" _type="SelectTextCommand" caretOffset="3010" date="Tue Apr 12 09:58:14 EDT 2022" end="3034" start="3010" starttimestamp="1649721002230" timestamp="50891812" />
  <Command __id="7068" _type="SelectTextCommand" caretOffset="3010" date="Tue Apr 12 09:58:14 EDT 2022" end="3034" start="3010" starttimestamp="1649721002230" timestamp="50891812" />
  <Command __id="7070" _type="CutCommand" date="Tue Apr 12 09:58:14 EDT 2022" starttimestamp="1649721002230" timestamp="50892227" />
  <Command __id="7072" _type="PauseCommand" date="Tue Apr 12 09:58:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50893430">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1203]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7071" _type="MoveCaretCommand" caretOffset="2846" date="Tue Apr 12 09:58:15 EDT 2022" docOffset="2846" starttimestamp="1649721002230" timestamp="50893430" />
  <Command __id="7073" _type="MoveCaretCommand" caretOffset="2846" date="Tue Apr 12 09:58:15 EDT 2022" docOffset="2846" starttimestamp="1649721002230" timestamp="50893430" />
  <Command __id="7075" _type="InsertStringCommand" date="Tue Apr 12 09:58:15 EDT 2022" starttimestamp="1649721002230" timestamp="50893686" timestamp2="50893686">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7076" _type="InsertStringCommand" date="Tue Apr 12 09:58:15 EDT 2022" starttimestamp="1649721002230" timestamp="50893686" timestamp2="50893686">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7078" _type="PasteCommand" date="Tue Apr 12 09:58:16 EDT 2022" starttimestamp="1649721002230" timestamp="50894012" />
  <Command __id="7080" _type="PauseCommand" date="Tue Apr 12 09:58:17 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50895601">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1589]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7079" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:58:17 EDT 2022" starttimestamp="1649721002230" timestamp="50895601" />
  <Command __id="7081" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:58:17 EDT 2022" starttimestamp="1649721002230" timestamp="50895666" />
  <Command __id="7082" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:58:17 EDT 2022" starttimestamp="1649721002230" timestamp="50895704" />
  <Command __id="7084" _type="InsertStringCommand" date="Tue Apr 12 09:58:18 EDT 2022" starttimestamp="1649721002230" timestamp="50895886" timestamp2="50895886">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7085" _type="InsertStringCommand" date="Tue Apr 12 09:58:18 EDT 2022" starttimestamp="1649721002230" timestamp="50895886" timestamp2="50895886">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7086" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 09:58:18 EDT 2022" starttimestamp="1649721002230" timestamp="50896687" />
  <Command __id="7087" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:58:18 EDT 2022" starttimestamp="1649721002230" timestamp="50896755" />
  <Command __id="7088" _type="EclipseCommand" commandID="" date="Tue Apr 12 09:58:19 EDT 2022" starttimestamp="1649721002230" timestamp="50896796" />
  <Command __id="7090" _type="PauseCommand" date="Tue Apr 12 09:59:10 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="50947938">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[51142]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7089" _type="ShellCommand" date="Tue Apr 12 09:59:10 EDT 2022" starttimestamp="1649721002230" timestamp="50947938" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7092" _type="PauseCommand" date="Tue Apr 12 09:59:36 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="50973838">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[25900]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7091" _type="ShellCommand" date="Tue Apr 12 09:59:36 EDT 2022" starttimestamp="1649721002230" timestamp="50973838" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7094" _type="PauseCommand" date="Tue Apr 12 09:59:42 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="50980441">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6603]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7093" _type="SelectTextCommand" caretOffset="3216" date="Tue Apr 12 09:59:42 EDT 2022" end="3220" start="3216" starttimestamp="1649721002230" timestamp="50980441" />
  <Command __id="7095" _type="SelectTextCommand" caretOffset="3216" date="Tue Apr 12 09:59:42 EDT 2022" end="3220" start="3216" starttimestamp="1649721002230" timestamp="50980441" />
  <Command __id="7097" _type="PauseCommand" date="Tue Apr 12 09:59:45 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50983022">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2581]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7096" _type="MoveCaretCommand" caretOffset="3334" date="Tue Apr 12 09:59:45 EDT 2022" docOffset="3334" starttimestamp="1649721002230" timestamp="50983022" />
  <Command __id="7098" _type="MoveCaretCommand" caretOffset="3334" date="Tue Apr 12 09:59:45 EDT 2022" docOffset="3334" starttimestamp="1649721002230" timestamp="50983023" />
  <Command __id="7100" _type="InsertStringCommand" date="Tue Apr 12 09:59:45 EDT 2022" starttimestamp="1649721002230" timestamp="50983273" timestamp2="50983273">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7101" _type="InsertStringCommand" date="Tue Apr 12 09:59:45 EDT 2022" starttimestamp="1649721002230" timestamp="50983273" timestamp2="50983273">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7103" _type="InsertStringCommand" date="Tue Apr 12 09:59:45 EDT 2022" starttimestamp="1649721002230" timestamp="50983541" timestamp2="50983541">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="7104" _type="InsertStringCommand" date="Tue Apr 12 09:59:45 EDT 2022" starttimestamp="1649721002230" timestamp="50983541" timestamp2="50983541">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="7106" _type="InsertStringCommand" date="Tue Apr 12 09:59:46 EDT 2022" starttimestamp="1649721002230" timestamp="50983790" timestamp2="50983790">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="7107" _type="InsertStringCommand" date="Tue Apr 12 09:59:46 EDT 2022" starttimestamp="1649721002230" timestamp="50983790" timestamp2="50983790">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="7109" _type="InsertStringCommand" date="Tue Apr 12 09:59:46 EDT 2022" starttimestamp="1649721002230" timestamp="50984003" timestamp2="50984003">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7110" _type="InsertStringCommand" date="Tue Apr 12 09:59:46 EDT 2022" starttimestamp="1649721002230" timestamp="50984003" timestamp2="50984003">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7112" _type="InsertStringCommand" date="Tue Apr 12 09:59:46 EDT 2022" starttimestamp="1649721002230" timestamp="50984212" timestamp2="50984212">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7113" _type="InsertStringCommand" date="Tue Apr 12 09:59:46 EDT 2022" starttimestamp="1649721002230" timestamp="50984213" timestamp2="50984213">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7115" _type="InsertStringCommand" date="Tue Apr 12 09:59:47 EDT 2022" starttimestamp="1649721002230" timestamp="50985011" timestamp2="50985011">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="7116" _type="InsertStringCommand" date="Tue Apr 12 09:59:47 EDT 2022" starttimestamp="1649721002230" timestamp="50985012" timestamp2="50985012">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="7118" _type="InsertStringCommand" date="Tue Apr 12 09:59:47 EDT 2022" starttimestamp="1649721002230" timestamp="50985148" timestamp2="50985148">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7119" _type="InsertStringCommand" date="Tue Apr 12 09:59:47 EDT 2022" starttimestamp="1649721002230" timestamp="50985148" timestamp2="50985148">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7121" _type="InsertStringCommand" date="Tue Apr 12 09:59:47 EDT 2022" starttimestamp="1649721002230" timestamp="50985451" timestamp2="50985451">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7122" _type="InsertStringCommand" date="Tue Apr 12 09:59:47 EDT 2022" starttimestamp="1649721002230" timestamp="50985452" timestamp2="50985452">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7124" _type="InsertStringCommand" date="Tue Apr 12 09:59:48 EDT 2022" starttimestamp="1649721002230" timestamp="50986274" timestamp2="50986274">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7125" _type="InsertStringCommand" date="Tue Apr 12 09:59:48 EDT 2022" starttimestamp="1649721002230" timestamp="50986274" timestamp2="50986274">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7127" _type="InsertStringCommand" date="Tue Apr 12 09:59:48 EDT 2022" starttimestamp="1649721002230" timestamp="50986453" timestamp2="50986453">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7128" _type="InsertStringCommand" date="Tue Apr 12 09:59:48 EDT 2022" starttimestamp="1649721002230" timestamp="50986453" timestamp2="50986453">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7130" _type="InsertStringCommand" date="Tue Apr 12 09:59:48 EDT 2022" starttimestamp="1649721002230" timestamp="50986550" timestamp2="50986550">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7131" _type="InsertStringCommand" date="Tue Apr 12 09:59:48 EDT 2022" starttimestamp="1649721002230" timestamp="50986550" timestamp2="50986550">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7133" _type="InsertStringCommand" date="Tue Apr 12 09:59:49 EDT 2022" starttimestamp="1649721002230" timestamp="50987327" timestamp2="50987327">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7134" _type="InsertStringCommand" date="Tue Apr 12 09:59:49 EDT 2022" starttimestamp="1649721002230" timestamp="50987329" timestamp2="50987329">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7136" _type="InsertStringCommand" date="Tue Apr 12 09:59:49 EDT 2022" starttimestamp="1649721002230" timestamp="50987567" timestamp2="50987567">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7137" _type="InsertStringCommand" date="Tue Apr 12 09:59:49 EDT 2022" starttimestamp="1649721002230" timestamp="50987567" timestamp2="50987567">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7139" _type="InsertStringCommand" date="Tue Apr 12 09:59:49 EDT 2022" starttimestamp="1649721002230" timestamp="50987699" timestamp2="50987699">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7140" _type="InsertStringCommand" date="Tue Apr 12 09:59:49 EDT 2022" starttimestamp="1649721002230" timestamp="50987699" timestamp2="50987699">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7142" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50987844" timestamp2="50987844">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7143" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50987844" timestamp2="50987844">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7145" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50987936" timestamp2="50987936">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="7146" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50987936" timestamp2="50987936">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="7148" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988036" timestamp2="50988036">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7149" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988036" timestamp2="50988036">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7151" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988085" timestamp2="50988085">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7152" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988085" timestamp2="50988085">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7154" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988167" timestamp2="50988167">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7155" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988167" timestamp2="50988167">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7157" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988275" timestamp2="50988275">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7158" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988275" timestamp2="50988275">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7160" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988528" timestamp2="50988528">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="7161" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988528" timestamp2="50988528">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="7163" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988656" timestamp2="50988656">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7164" _type="InsertStringCommand" date="Tue Apr 12 09:59:50 EDT 2022" starttimestamp="1649721002230" timestamp="50988656" timestamp2="50988656">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7166" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50988822" timestamp2="50988822">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7167" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50988822" timestamp2="50988822">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7169" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989013" timestamp2="50989013">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7170" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989014" timestamp2="50989014">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7172" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989102" timestamp2="50989102">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7173" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989103" timestamp2="50989103">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7175" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989180" timestamp2="50989180">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="7176" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989180" timestamp2="50989180">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="7178" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989249" timestamp2="50989249">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7179" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989249" timestamp2="50989249">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7181" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989402" timestamp2="50989402">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7182" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989402" timestamp2="50989402">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7184" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989660" timestamp2="50989660">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="7185" _type="InsertStringCommand" date="Tue Apr 12 09:59:51 EDT 2022" starttimestamp="1649721002230" timestamp="50989660" timestamp2="50989660">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="7187" _type="InsertStringCommand" date="Tue Apr 12 09:59:52 EDT 2022" starttimestamp="1649721002230" timestamp="50990167" timestamp2="50990167">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7188" _type="InsertStringCommand" date="Tue Apr 12 09:59:52 EDT 2022" starttimestamp="1649721002230" timestamp="50990167" timestamp2="50990167">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="7044" _type="Insert" date="Tue Apr 12 09:58:05 EDT 2022" docASTNodeCount="486" docActiveCodeLength="3370" docExpressionCount="345" docLength="3687" length="3" offset="3029" repeat="3" starttimestamp="1649721002230" timestamp="50883125" timestamp2="50883390">
    <text><![CDATA[opy]]></text>
  </DocumentChange>
  <DocumentChange __id="7056" _type="Insert" date="Tue Apr 12 09:58:07 EDT 2022" docASTNodeCount="486" docActiveCodeLength="3371" docExpressionCount="345" docLength="3688" length="1" offset="3033" starttimestamp="1649721002230" timestamp="50885409">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="7069" _type="Delete" date="Tue Apr 12 09:58:14 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3347" docExpressionCount="341" docLength="3664" endLine="73" length="24" offset="3010" startLine="73" starttimestamp="1649721002230" timestamp="50892218">
    <text><![CDATA[boundedBuffer.add(copy);]]></text>
  </DocumentChange>
  <DocumentChange __id="7074" _type="Insert" date="Tue Apr 12 09:58:15 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3351" docExpressionCount="341" docLength="3668" length="4" offset="2846" starttimestamp="1649721002230" timestamp="50893656">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="7077" _type="Replace" date="Tue Apr 12 09:58:16 EDT 2022" docASTNodeCount="486" docActiveCodeLength="3375" docExpressionCount="345" docLength="3692" endLine="69" insertionLength="26" int_docASTNodeCount="481" int_docActiveCodeLength="3349" int_docExpressionCount="341" int_docLength="3666" length="2" offset="2848" startLine="69" starttimestamp="1649721002230" timestamp="50893998">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		boundedBuffer.add(copy);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7083" _type="Insert" date="Tue Apr 12 09:58:18 EDT 2022" docASTNodeCount="486" docActiveCodeLength="3379" docExpressionCount="345" docLength="3696" length="4" offset="2874" starttimestamp="1649721002230" timestamp="50895876">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="7099" _type="Insert" date="Tue Apr 12 09:59:45 EDT 2022" docASTNodeCount="490" docActiveCodeLength="3414" docExpressionCount="347" docLength="3731" length="35" offset="3334" repeat="30" starttimestamp="1649721002230" timestamp="50983257" timestamp2="50990144">
    <text><![CDATA[
				ByteBuffer originalMessage = ]]></text>
  </DocumentChange>
  <Command __id="7190" _type="PauseCommand" date="Tue Apr 12 09:59:54 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50992151">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1984]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="7189" _type="Insert" date="Tue Apr 12 09:59:54 EDT 2022" docASTNodeCount="492" docActiveCodeLength="3423" docExpressionCount="348" docLength="3740" length="9" offset="3369" repeat="9" starttimestamp="1649721002230" timestamp="50992151" timestamp2="50993919">
    <text><![CDATA[boundedbu]]></text>
  </DocumentChange>
  <Command __id="7191" _type="InsertStringCommand" date="Tue Apr 12 09:59:54 EDT 2022" starttimestamp="1649721002230" timestamp="50992167" timestamp2="50992167">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7192" _type="InsertStringCommand" date="Tue Apr 12 09:59:54 EDT 2022" starttimestamp="1649721002230" timestamp="50992167" timestamp2="50992167">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7194" _type="InsertStringCommand" date="Tue Apr 12 09:59:54 EDT 2022" starttimestamp="1649721002230" timestamp="50992291" timestamp2="50992291">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7195" _type="InsertStringCommand" date="Tue Apr 12 09:59:54 EDT 2022" starttimestamp="1649721002230" timestamp="50992291" timestamp2="50992291">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7197" _type="InsertStringCommand" date="Tue Apr 12 09:59:54 EDT 2022" starttimestamp="1649721002230" timestamp="50992378" timestamp2="50992378">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7198" _type="InsertStringCommand" date="Tue Apr 12 09:59:54 EDT 2022" starttimestamp="1649721002230" timestamp="50992378" timestamp2="50992378">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7200" _type="InsertStringCommand" date="Tue Apr 12 09:59:54 EDT 2022" starttimestamp="1649721002230" timestamp="50992571" timestamp2="50992571">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7201" _type="InsertStringCommand" date="Tue Apr 12 09:59:54 EDT 2022" starttimestamp="1649721002230" timestamp="50992571" timestamp2="50992571">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7203" _type="InsertStringCommand" date="Tue Apr 12 09:59:54 EDT 2022" starttimestamp="1649721002230" timestamp="50992709" timestamp2="50992709">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7204" _type="InsertStringCommand" date="Tue Apr 12 09:59:54 EDT 2022" starttimestamp="1649721002230" timestamp="50992709" timestamp2="50992709">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7206" _type="InsertStringCommand" date="Tue Apr 12 09:59:55 EDT 2022" starttimestamp="1649721002230" timestamp="50992875" timestamp2="50992875">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7207" _type="InsertStringCommand" date="Tue Apr 12 09:59:55 EDT 2022" starttimestamp="1649721002230" timestamp="50992875" timestamp2="50992875">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7209" _type="InsertStringCommand" date="Tue Apr 12 09:59:55 EDT 2022" starttimestamp="1649721002230" timestamp="50993042" timestamp2="50993042">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7210" _type="InsertStringCommand" date="Tue Apr 12 09:59:55 EDT 2022" starttimestamp="1649721002230" timestamp="50993042" timestamp2="50993042">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7212" _type="InsertStringCommand" date="Tue Apr 12 09:59:55 EDT 2022" starttimestamp="1649721002230" timestamp="50993620" timestamp2="50993620">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7213" _type="InsertStringCommand" date="Tue Apr 12 09:59:55 EDT 2022" starttimestamp="1649721002230" timestamp="50993620" timestamp2="50993620">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7215" _type="InsertStringCommand" date="Tue Apr 12 09:59:56 EDT 2022" starttimestamp="1649721002230" timestamp="50993938" timestamp2="50993938">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7216" _type="InsertStringCommand" date="Tue Apr 12 09:59:56 EDT 2022" starttimestamp="1649721002230" timestamp="50993938" timestamp2="50993938">
    <data><![CDATA[u]]></data>
  </Command>
  <DocumentChange __id="7217" _type="Delete" date="Tue Apr 12 09:59:56 EDT 2022" docASTNodeCount="492" docActiveCodeLength="3421" docExpressionCount="348" docLength="3738" endLine="81" length="2" offset="3376" repeat="2" startLine="81" starttimestamp="1649721002230" timestamp="50994189" timestamp2="50994317">
    <text><![CDATA[bu]]></text>
  </DocumentChange>
  <Command __id="7218" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:59:56 EDT 2022" starttimestamp="1649721002230" timestamp="50994203" />
  <Command __id="7219" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:59:56 EDT 2022" starttimestamp="1649721002230" timestamp="50994203" />
  <Command __id="7221" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:59:56 EDT 2022" starttimestamp="1649721002230" timestamp="50994321" />
  <Command __id="7222" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 09:59:56 EDT 2022" starttimestamp="1649721002230" timestamp="50994321" />
  <Command __id="7224" _type="InsertStringCommand" date="Tue Apr 12 09:59:56 EDT 2022" starttimestamp="1649721002230" timestamp="50994717" timestamp2="50994717">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="7225" _type="InsertStringCommand" date="Tue Apr 12 09:59:56 EDT 2022" starttimestamp="1649721002230" timestamp="50994717" timestamp2="50994717">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="7227" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50994864" timestamp2="50994864">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7228" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50994864" timestamp2="50994864">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7230" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50995014" timestamp2="50995014">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7231" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50995014" timestamp2="50995014">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7233" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50995151" timestamp2="50995151">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7234" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50995151" timestamp2="50995151">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7236" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50995304" timestamp2="50995304">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7237" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50995304" timestamp2="50995304">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7239" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50995422" timestamp2="50995422">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7240" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50995422" timestamp2="50995422">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7242" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50995638" timestamp2="50995638">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7243" _type="InsertStringCommand" date="Tue Apr 12 09:59:57 EDT 2022" starttimestamp="1649721002230" timestamp="50995638" timestamp2="50995638">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7244" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 09:59:57 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="50995644" />
  <DocumentChange __id="7223" _type="Insert" date="Tue Apr 12 09:59:56 EDT 2022" docASTNodeCount="492" docActiveCodeLength="3428" docExpressionCount="349" docLength="3745" length="7" offset="3376" repeat="7" starttimestamp="1649721002230" timestamp="50994692" timestamp2="50995622">
    <text><![CDATA[Buffer.]]></text>
  </DocumentChange>
  <Command __id="7246" _type="PauseCommand" date="Tue Apr 12 10:00:00 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="50998339">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2695]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="7249" _type="PauseCommand" date="Tue Apr 12 10:00:01 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="50999688">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1349]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="7256" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:00:05 EDT 2022" starttimestamp="1649721002230" timestamp="51002855" />
  <Command __id="7258" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:00:05 EDT 2022" starttimestamp="1649721002230" timestamp="51002914" />
  <Command __id="7259" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:00:05 EDT 2022" starttimestamp="1649721002230" timestamp="51002921" />
  <Command __id="7261" _type="PauseCommand" date="Tue Apr 12 10:00:09 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51007678">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4757]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7260" _type="ShellCommand" date="Tue Apr 12 10:00:09 EDT 2022" starttimestamp="1649721002230" timestamp="51007678" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7262" _type="ShellCommand" date="Tue Apr 12 10:00:10 EDT 2022" starttimestamp="1649721002230" timestamp="51007927" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7274" _type="PauseCommand" date="Tue Apr 12 10:00:11 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51009098">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1114]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7276" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:00:13 EDT 2022" starttimestamp="1649721002230" timestamp="51011294" />
  <Command __id="7278" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:00:13 EDT 2022" starttimestamp="1649721002230" timestamp="51011337" />
  <Command __id="7279" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:00:13 EDT 2022" starttimestamp="1649721002230" timestamp="51011356" />
  <Command __id="7280" _type="ShellCommand" date="Tue Apr 12 10:00:13 EDT 2022" starttimestamp="1649721002230" timestamp="51011541" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7282" _type="PauseCommand" date="Tue Apr 12 10:00:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51013154">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1613]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7281" _type="ShellCommand" date="Tue Apr 12 10:00:15 EDT 2022" starttimestamp="1649721002230" timestamp="51013154" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7284" _type="PauseCommand" date="Tue Apr 12 10:00:24 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="51022108">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8954]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7283" _type="SelectTextCommand" caretOffset="3340" date="Tue Apr 12 10:00:24 EDT 2022" end="3517" start="3340" starttimestamp="1649721002230" timestamp="51022108" />
  <Command __id="7285" _type="SelectTextCommand" caretOffset="3340" date="Tue Apr 12 10:00:24 EDT 2022" end="3517" start="3340" starttimestamp="1649721002230" timestamp="51022108" />
  <Command __id="7287" _type="CutCommand" date="Tue Apr 12 10:00:24 EDT 2022" starttimestamp="1649721002230" timestamp="51022741" />
  <Command __id="7289" _type="PauseCommand" date="Tue Apr 12 10:00:27 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51025386">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[2645]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7288" _type="MoveCaretCommand" caretOffset="3042" date="Tue Apr 12 10:00:27 EDT 2022" docOffset="3042" starttimestamp="1649721002230" timestamp="51025386" />
  <Command __id="7290" _type="MoveCaretCommand" caretOffset="3042" date="Tue Apr 12 10:00:27 EDT 2022" docOffset="3042" starttimestamp="1649721002230" timestamp="51025386" />
  <Command __id="7292" _type="InsertStringCommand" date="Tue Apr 12 10:00:27 EDT 2022" starttimestamp="1649721002230" timestamp="51025640" timestamp2="51025640">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7293" _type="InsertStringCommand" date="Tue Apr 12 10:00:27 EDT 2022" starttimestamp="1649721002230" timestamp="51025641" timestamp2="51025641">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7295" _type="InsertStringCommand" date="Tue Apr 12 10:00:28 EDT 2022" starttimestamp="1649721002230" timestamp="51026138" timestamp2="51026138">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7296" _type="InsertStringCommand" date="Tue Apr 12 10:00:28 EDT 2022" starttimestamp="1649721002230" timestamp="51026138" timestamp2="51026138">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7298" _type="InsertStringCommand" date="Tue Apr 12 10:00:28 EDT 2022" starttimestamp="1649721002230" timestamp="51026304" timestamp2="51026304">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7299" _type="InsertStringCommand" date="Tue Apr 12 10:00:28 EDT 2022" starttimestamp="1649721002230" timestamp="51026304" timestamp2="51026304">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7301" _type="InsertStringCommand" date="Tue Apr 12 10:00:28 EDT 2022" starttimestamp="1649721002230" timestamp="51026761" timestamp2="51026761">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="7302" _type="InsertStringCommand" date="Tue Apr 12 10:00:28 EDT 2022" starttimestamp="1649721002230" timestamp="51026761" timestamp2="51026761">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="7304" _type="InsertStringCommand" date="Tue Apr 12 10:00:29 EDT 2022" starttimestamp="1649721002230" timestamp="51026927" timestamp2="51026927">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7305" _type="InsertStringCommand" date="Tue Apr 12 10:00:29 EDT 2022" starttimestamp="1649721002230" timestamp="51026928" timestamp2="51026928">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7307" _type="InsertStringCommand" date="Tue Apr 12 10:00:29 EDT 2022" starttimestamp="1649721002230" timestamp="51027024" timestamp2="51027024">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7308" _type="InsertStringCommand" date="Tue Apr 12 10:00:29 EDT 2022" starttimestamp="1649721002230" timestamp="51027024" timestamp2="51027024">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7310" _type="InsertStringCommand" date="Tue Apr 12 10:00:30 EDT 2022" starttimestamp="1649721002230" timestamp="51027848" timestamp2="51027848">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7311" _type="InsertStringCommand" date="Tue Apr 12 10:00:30 EDT 2022" starttimestamp="1649721002230" timestamp="51027848" timestamp2="51027848">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7313" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51028774" timestamp2="51028774">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7314" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51028775" timestamp2="51028775">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7316" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51028831" timestamp2="51028831">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7317" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51028831" timestamp2="51028831">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7319" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51028941" timestamp2="51028941">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7320" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51028941" timestamp2="51028941">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7322" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029093" timestamp2="51029093">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7323" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029093" timestamp2="51029093">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7325" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029179" timestamp2="51029179">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7326" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029180" timestamp2="51029180">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7328" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029256" timestamp2="51029256">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7329" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029256" timestamp2="51029256">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7331" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029320" timestamp2="51029320">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7332" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029321" timestamp2="51029321">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7334" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029437" timestamp2="51029437">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7335" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029438" timestamp2="51029438">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7337" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029594" timestamp2="51029594">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7338" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029594" timestamp2="51029594">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7340" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029706" timestamp2="51029706">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7341" _type="InsertStringCommand" date="Tue Apr 12 10:00:31 EDT 2022" starttimestamp="1649721002230" timestamp="51029706" timestamp2="51029706">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7343" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51029816" timestamp2="51029816">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7344" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51029816" timestamp2="51029816">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7346" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51029901" timestamp2="51029901">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="7347" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51029901" timestamp2="51029901">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="7349" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51029951" timestamp2="51029951">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7350" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51029952" timestamp2="51029952">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7352" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030098" timestamp2="51030098">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7353" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030098" timestamp2="51030098">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7355" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030239" timestamp2="51030239">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7356" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030239" timestamp2="51030239">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7358" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030322" timestamp2="51030322">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7359" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030322" timestamp2="51030322">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7361" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030409" timestamp2="51030409">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7362" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030411" timestamp2="51030411">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7364" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030570" timestamp2="51030570">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7365" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030570" timestamp2="51030570">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7367" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030638" timestamp2="51030638">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7368" _type="InsertStringCommand" date="Tue Apr 12 10:00:32 EDT 2022" starttimestamp="1649721002230" timestamp="51030638" timestamp2="51030638">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7370" _type="InsertStringCommand" date="Tue Apr 12 10:00:33 EDT 2022" starttimestamp="1649721002230" timestamp="51030800" timestamp2="51030800">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7371" _type="InsertStringCommand" date="Tue Apr 12 10:00:33 EDT 2022" starttimestamp="1649721002230" timestamp="51030800" timestamp2="51030800">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7373" _type="InsertStringCommand" date="Tue Apr 12 10:00:33 EDT 2022" starttimestamp="1649721002230" timestamp="51030975" timestamp2="51030975">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7374" _type="InsertStringCommand" date="Tue Apr 12 10:00:33 EDT 2022" starttimestamp="1649721002230" timestamp="51030975" timestamp2="51030975">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7376" _type="InsertStringCommand" date="Tue Apr 12 10:00:33 EDT 2022" starttimestamp="1649721002230" timestamp="51031073" timestamp2="51031073">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7377" _type="InsertStringCommand" date="Tue Apr 12 10:00:33 EDT 2022" starttimestamp="1649721002230" timestamp="51031074" timestamp2="51031074">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7379" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51031808" timestamp2="51031808">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7380" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51031808" timestamp2="51031808">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="7382" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51031900" timestamp2="51031900">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7383" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51031900" timestamp2="51031900">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7385" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51032040" timestamp2="51032040">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7386" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51032040" timestamp2="51032040">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7388" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51032190" timestamp2="51032190">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7389" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51032191" timestamp2="51032191">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7391" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51032381" timestamp2="51032381">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7392" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51032382" timestamp2="51032382">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7394" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51032455" timestamp2="51032455">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7395" _type="InsertStringCommand" date="Tue Apr 12 10:00:34 EDT 2022" starttimestamp="1649721002230" timestamp="51032455" timestamp2="51032455">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7397" _type="InsertStringCommand" date="Tue Apr 12 10:00:35 EDT 2022" starttimestamp="1649721002230" timestamp="51033429" timestamp2="51033429">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7398" _type="InsertStringCommand" date="Tue Apr 12 10:00:35 EDT 2022" starttimestamp="1649721002230" timestamp="51033430" timestamp2="51033430">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7400" _type="PasteCommand" date="Tue Apr 12 10:00:35 EDT 2022" starttimestamp="1649721002230" timestamp="51033769" />
  <Command __id="7402" _type="PauseCommand" date="Tue Apr 12 10:01:12 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="51070055">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[36286]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7401" _type="MoveCaretCommand" caretOffset="3482" date="Tue Apr 12 10:01:12 EDT 2022" docOffset="3482" starttimestamp="1649721002230" timestamp="51070055" />
  <Command __id="7403" _type="MoveCaretCommand" caretOffset="3482" date="Tue Apr 12 10:01:12 EDT 2022" docOffset="3482" starttimestamp="1649721002230" timestamp="51070055" />
  <Command __id="7404" _type="MoveCaretCommand" caretOffset="3419" date="Tue Apr 12 10:01:13 EDT 2022" docOffset="3419" starttimestamp="1649721002230" timestamp="51070974" />
  <Command __id="7405" _type="MoveCaretCommand" caretOffset="3419" date="Tue Apr 12 10:01:13 EDT 2022" docOffset="3419" starttimestamp="1649721002230" timestamp="51070974" />
  <Command __id="7406" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 10:01:13 EDT 2022" starttimestamp="1649721002230" timestamp="51071698" />
  <Command __id="7407" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 10:01:13 EDT 2022" starttimestamp="1649721002230" timestamp="51071698" />
  <Command __id="7409" _type="InsertStringCommand" date="Tue Apr 12 10:01:14 EDT 2022" starttimestamp="1649721002230" timestamp="51072403" timestamp2="51072403">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7410" _type="InsertStringCommand" date="Tue Apr 12 10:01:14 EDT 2022" starttimestamp="1649721002230" timestamp="51072403" timestamp2="51072403">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7412" _type="InsertStringCommand" date="Tue Apr 12 10:01:14 EDT 2022" starttimestamp="1649721002230" timestamp="51072528" timestamp2="51072528">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7413" _type="InsertStringCommand" date="Tue Apr 12 10:01:14 EDT 2022" starttimestamp="1649721002230" timestamp="51072528" timestamp2="51072528">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7414" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 10:01:14 EDT 2022" starttimestamp="1649721002230" timestamp="51072741" />
  <Command __id="7415" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Apr 12 10:01:14 EDT 2022" starttimestamp="1649721002230" timestamp="51072741" />
  <Command __id="7416" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 10:01:15 EDT 2022" starttimestamp="1649721002230" timestamp="51072981" />
  <Command __id="7417" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 10:01:15 EDT 2022" starttimestamp="1649721002230" timestamp="51072981" />
  <Command __id="7418" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 10:01:15 EDT 2022" starttimestamp="1649721002230" timestamp="51073231" />
  <Command __id="7419" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 10:01:15 EDT 2022" starttimestamp="1649721002230" timestamp="51073231" />
  <Command __id="7421" _type="InsertStringCommand" date="Tue Apr 12 10:01:15 EDT 2022" starttimestamp="1649721002230" timestamp="51073720" timestamp2="51073720">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7422" _type="InsertStringCommand" date="Tue Apr 12 10:01:15 EDT 2022" starttimestamp="1649721002230" timestamp="51073720" timestamp2="51073720">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7424" _type="InsertStringCommand" date="Tue Apr 12 10:01:16 EDT 2022" starttimestamp="1649721002230" timestamp="51073844" timestamp2="51073844">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7425" _type="InsertStringCommand" date="Tue Apr 12 10:01:16 EDT 2022" starttimestamp="1649721002230" timestamp="51073844" timestamp2="51073844">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7427" _type="PauseCommand" date="Tue Apr 12 10:01:18 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51075855">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2011]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7426" _type="SelectTextCommand" caretOffset="3584" date="Tue Apr 12 10:01:18 EDT 2022" end="3597" start="3584" starttimestamp="1649721002230" timestamp="51075855" />
  <Command __id="7428" _type="SelectTextCommand" caretOffset="3584" date="Tue Apr 12 10:01:18 EDT 2022" end="3597" start="3584" starttimestamp="1649721002230" timestamp="51075857" />
  <Command __id="7430" _type="InsertStringCommand" date="Tue Apr 12 10:01:18 EDT 2022" starttimestamp="1649721002230" timestamp="51076585" timestamp2="51076585">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7431" _type="InsertStringCommand" date="Tue Apr 12 10:01:18 EDT 2022" starttimestamp="1649721002230" timestamp="51076586" timestamp2="51076586">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7433" _type="InsertStringCommand" date="Tue Apr 12 10:01:18 EDT 2022" starttimestamp="1649721002230" timestamp="51076749" timestamp2="51076749">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7434" _type="InsertStringCommand" date="Tue Apr 12 10:01:18 EDT 2022" starttimestamp="1649721002230" timestamp="51076750" timestamp2="51076750">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7436" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51076889" timestamp2="51076889">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7437" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51076890" timestamp2="51076890">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7439" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077009" timestamp2="51077009">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="7440" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077009" timestamp2="51077009">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="7442" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077083" timestamp2="51077083">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7443" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077083" timestamp2="51077083">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7445" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077129" timestamp2="51077129">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7446" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077129" timestamp2="51077129">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7448" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077269" timestamp2="51077269">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7449" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077269" timestamp2="51077269">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7451" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077355" timestamp2="51077355">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7452" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077355" timestamp2="51077355">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7454" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077691" timestamp2="51077691">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="7455" _type="InsertStringCommand" date="Tue Apr 12 10:01:19 EDT 2022" starttimestamp="1649721002230" timestamp="51077691" timestamp2="51077691">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="7457" _type="InsertStringCommand" date="Tue Apr 12 10:01:20 EDT 2022" starttimestamp="1649721002230" timestamp="51077821" timestamp2="51077821">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7458" _type="InsertStringCommand" date="Tue Apr 12 10:01:20 EDT 2022" starttimestamp="1649721002230" timestamp="51077821" timestamp2="51077821">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7460" _type="InsertStringCommand" date="Tue Apr 12 10:01:20 EDT 2022" starttimestamp="1649721002230" timestamp="51077976" timestamp2="51077976">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7461" _type="InsertStringCommand" date="Tue Apr 12 10:01:20 EDT 2022" starttimestamp="1649721002230" timestamp="51077976" timestamp2="51077976">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7474" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:01:21 EDT 2022" starttimestamp="1649721002230" timestamp="51079712" />
  <Command __id="7476" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:01:22 EDT 2022" starttimestamp="1649721002230" timestamp="51079790" />
  <Command __id="7477" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:01:22 EDT 2022" starttimestamp="1649721002230" timestamp="51079865" />
  <Command __id="7479" _type="PauseCommand" date="Tue Apr 12 10:01:37 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="51095469">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[15604]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7478" _type="SelectTextCommand" caretOffset="3094" date="Tue Apr 12 10:01:37 EDT 2022" end="3120" start="3094" starttimestamp="1649721002230" timestamp="51095469" />
  <Command __id="7480" _type="SelectTextCommand" caretOffset="3094" date="Tue Apr 12 10:01:37 EDT 2022" end="3120" start="3094" starttimestamp="1649721002230" timestamp="51095469" />
  <Command __id="7481" _type="CopyCommand" date="Tue Apr 12 10:01:38 EDT 2022" starttimestamp="1649721002230" timestamp="51095905" />
  <Command __id="7483" _type="PauseCommand" date="Tue Apr 12 10:01:39 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51097018">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1113]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7514" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:01:43 EDT 2022" starttimestamp="1649721002230" timestamp="51100927" />
  <Command __id="7516" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:01:43 EDT 2022" starttimestamp="1649721002230" timestamp="51100997" />
  <Command __id="7517" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:01:43 EDT 2022" starttimestamp="1649721002230" timestamp="51101071" />
  <Command __id="7518" _type="ShellCommand" date="Tue Apr 12 10:01:43 EDT 2022" starttimestamp="1649721002230" timestamp="51101298" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7520" _type="PauseCommand" date="Tue Apr 12 10:01:45 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51103261">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1963]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7519" _type="ShellCommand" date="Tue Apr 12 10:01:45 EDT 2022" starttimestamp="1649721002230" timestamp="51103261" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7522" _type="PauseCommand" date="Tue Apr 12 10:01:51 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="51109378">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6117]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7521" _type="SelectTextCommand" caretOffset="3132" date="Tue Apr 12 10:01:51 EDT 2022" end="3143" start="3132" starttimestamp="1649721002230" timestamp="51109378" />
  <Command __id="7523" _type="SelectTextCommand" caretOffset="3132" date="Tue Apr 12 10:01:51 EDT 2022" end="3143" start="3132" starttimestamp="1649721002230" timestamp="51109378" />
  <Command __id="7525" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:51 EDT 2022" starttimestamp="1649721002230" timestamp="51109621" />
  <Command __id="7526" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:51 EDT 2022" starttimestamp="1649721002230" timestamp="51109621" />
  <Command __id="7528" _type="PauseCommand" date="Tue Apr 12 10:01:53 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51110926">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1305]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7527" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:01:53 EDT 2022" starttimestamp="1649721002230" timestamp="51110926" />
  <Command __id="7529" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:01:53 EDT 2022" starttimestamp="1649721002230" timestamp="51110932" />
  <Command __id="7530" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:01:53 EDT 2022" starttimestamp="1649721002230" timestamp="51110988" />
  <Command __id="7532" _type="PauseCommand" date="Tue Apr 12 10:01:56 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51114333">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3345]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7531" _type="MoveCaretCommand" caretOffset="3580" date="Tue Apr 12 10:01:56 EDT 2022" docOffset="3580" starttimestamp="1649721002230" timestamp="51114333" />
  <Command __id="7533" _type="MoveCaretCommand" caretOffset="3580" date="Tue Apr 12 10:01:56 EDT 2022" docOffset="3580" starttimestamp="1649721002230" timestamp="51114333" />
  <Command __id="7535" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:56 EDT 2022" starttimestamp="1649721002230" timestamp="51114656" />
  <Command __id="7536" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:56 EDT 2022" starttimestamp="1649721002230" timestamp="51114656" />
  <Command __id="7538" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:57 EDT 2022" starttimestamp="1649721002230" timestamp="51114835" />
  <Command __id="7539" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:57 EDT 2022" starttimestamp="1649721002230" timestamp="51114835" />
  <Command __id="7541" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:57 EDT 2022" starttimestamp="1649721002230" timestamp="51115012" />
  <Command __id="7542" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:57 EDT 2022" starttimestamp="1649721002230" timestamp="51115012" />
  <Command __id="7544" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:57 EDT 2022" starttimestamp="1649721002230" timestamp="51115294" />
  <Command __id="7545" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:57 EDT 2022" starttimestamp="1649721002230" timestamp="51115294" />
  <Command __id="7547" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:58 EDT 2022" starttimestamp="1649721002230" timestamp="51116010" />
  <Command __id="7548" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:01:58 EDT 2022" starttimestamp="1649721002230" timestamp="51116010" />
  <Command __id="7549" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:01:59 EDT 2022" starttimestamp="1649721002230" timestamp="51116785" />
  <Command __id="7550" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:01:59 EDT 2022" starttimestamp="1649721002230" timestamp="51116844" />
  <Command __id="7551" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:01:59 EDT 2022" starttimestamp="1649721002230" timestamp="51116989" />
  <Command __id="7552" _type="ShellCommand" date="Tue Apr 12 10:01:59 EDT 2022" starttimestamp="1649721002230" timestamp="51117173" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7554" _type="PauseCommand" date="Tue Apr 12 10:02:01 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51118828">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1655]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7553" _type="ShellCommand" date="Tue Apr 12 10:02:01 EDT 2022" starttimestamp="1649721002230" timestamp="51118828" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7556" _type="PauseCommand" date="Tue Apr 12 10:02:02 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51120629">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1801]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7582" _type="ConsoleOutput" date="Tue Apr 12 10:02:23 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="51141057" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶Client Connect to Server¶")]]]></diff>
  </Command>
  <Command __id="7584" _type="ConsoleOutput" date="Tue Apr 12 10:02:23 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="51141552" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶Client Connect to Server¶")]]]></diff>
  </Command>
  <Command __id="7586" _type="PauseCommand" date="Tue Apr 12 10:02:28 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51146026">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4474]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="7585" _type="ConsoleInput" date="Tue Apr 12 10:02:28 EDT 2022" starttimestamp="1649721002230" timestamp="51146026" type="Exception">
    <outputString><![CDATA[hi
]]></outputString>
  </Command>
  <Command __id="7587" _type="ConsoleOutput" date="Tue Apr 12 10:02:28 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="51146101" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶"), Diff(DELETE,"C"), Diff(INSERT,"c"), Diff(EQUAL,"lient "), Diff(DELETE,"Connect to Server"), Diff(INSERT,"channel has written"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7588" _type="ConsoleOutput" date="Tue Apr 12 10:02:28 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="51146115" type="ConsoleOutput">
    <outputString><![CDATA[hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57070]
SERVER SENT MESSAGE TO CLIENT: hi-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57064]
SERVER SENT MESSAGE TO CLIENT: hi-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57069]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶client channel has written"), Diff(INSERT,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57070]¶SERVER SENT MESSAGE TO CLIENT: hi-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57064]¶SERVER SENT MESSAGE TO CLIENT: hi-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57069]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7589" _type="ConsoleOutput" date="Tue Apr 12 10:02:28 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="51146655" type="ConsoleOutput">
    <outputString><![CDATA[hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:57064 remote=localhost/127.0.0.1:9000]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:"), Diff(DELETE,"9000"), Diff(INSERT,"57064"), Diff(EQUAL," remote="), Diff(DELETE,"/127.0.0.1:57070]¶SERVER SENT MESSAGE TO CLIENT: hi-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57064]¶SERVER SENT MESSAGE TO CLIENT: hi-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57069"), Diff(INSERT,"localhost/127.0.0.1:9000"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="7590" _type="ConsoleOutput" date="Tue Apr 12 10:02:28 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="51146655" type="ConsoleOutput">
    <outputString><![CDATA[hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:57069 remote=localhost/127.0.0.1:9000]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:5706"), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL," remote=localhost/127.0.0.1:9000]¶")]]]></diff>
  </Command>
  <Command __id="7592" _type="PauseCommand" date="Tue Apr 12 10:02:56 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="51173823">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[27168]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7591" _type="SelectTextCommand" caretOffset="3441" date="Tue Apr 12 10:02:56 EDT 2022" end="3574" start="3441" starttimestamp="1649721002230" timestamp="51173823" />
  <Command __id="7593" _type="SelectTextCommand" caretOffset="3441" date="Tue Apr 12 10:02:56 EDT 2022" end="3574" start="3441" starttimestamp="1649721002230" timestamp="51173823" />
  <Command __id="7595" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:02:56 EDT 2022" starttimestamp="1649721002230" timestamp="51174145" />
  <Command __id="7596" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:02:56 EDT 2022" starttimestamp="1649721002230" timestamp="51174145" />
  <Command __id="7598" _type="PauseCommand" date="Tue Apr 12 10:02:59 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51177352">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3207]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7597" _type="SelectTextCommand" caretOffset="3211" date="Tue Apr 12 10:02:59 EDT 2022" end="3248" start="3211" starttimestamp="1649721002230" timestamp="51177352" />
  <Command __id="7599" _type="SelectTextCommand" caretOffset="3211" date="Tue Apr 12 10:02:59 EDT 2022" end="3248" start="3211" starttimestamp="1649721002230" timestamp="51177352" />
  <Command __id="7601" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:02:59 EDT 2022" starttimestamp="1649721002230" timestamp="51177620" />
  <Command __id="7602" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:02:59 EDT 2022" starttimestamp="1649721002230" timestamp="51177620" />
  <Command __id="7604" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 10:03:00 EDT 2022" starttimestamp="1649721002230" timestamp="51178338" />
  <Command __id="7605" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:03:01 EDT 2022" starttimestamp="1649721002230" timestamp="51179118" />
  <Command __id="7606" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:03:01 EDT 2022" starttimestamp="1649721002230" timestamp="51179170" />
  <Command __id="7607" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:03:01 EDT 2022" starttimestamp="1649721002230" timestamp="51179255" />
  <Command __id="7609" _type="PauseCommand" date="Tue Apr 12 10:03:17 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="51194922">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[15667]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7614" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:03:19 EDT 2022" starttimestamp="1649721002230" timestamp="51196927" />
  <Command __id="7616" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:03:19 EDT 2022" starttimestamp="1649721002230" timestamp="51197020" />
  <Command __id="7617" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:03:19 EDT 2022" starttimestamp="1649721002230" timestamp="51197129" />
  <Command __id="7618" _type="ShellCommand" date="Tue Apr 12 10:03:19 EDT 2022" starttimestamp="1649721002230" timestamp="51197346" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7620" _type="PauseCommand" date="Tue Apr 12 10:03:21 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51199113">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1767]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7619" _type="ShellCommand" date="Tue Apr 12 10:03:21 EDT 2022" starttimestamp="1649721002230" timestamp="51199113" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7622" _type="PauseCommand" date="Tue Apr 12 10:03:23 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51200903">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1790]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="7245" _type="Insert" date="Tue Apr 12 10:00:00 EDT 2022" docASTNodeCount="494" docActiveCodeLength="3430" docExpressionCount="350" docLength="3747" length="2" offset="3383" repeat="2" starttimestamp="1649721002230" timestamp="50998339" timestamp2="50998480">
    <text><![CDATA[ta]]></text>
  </DocumentChange>
  <DocumentChange __id="7250" _type="Replace" date="Tue Apr 12 10:00:01 EDT 2022" docASTNodeCount="494" docActiveCodeLength="3434" docExpressionCount="350" docLength="3751" endLine="81" insertionLength="6" int_docASTNodeCount="492" int_docActiveCodeLength="3428" int_docExpressionCount="349" int_docLength="3745" length="2" offset="3383" startLine="81" starttimestamp="1649721002230" timestamp="50999712">
    <deletedText><![CDATA[ta]]></deletedText>
    <insertedText><![CDATA[take()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7253" _type="Insert" date="Tue Apr 12 10:00:02 EDT 2022" docASTNodeCount="494" docActiveCodeLength="3435" docExpressionCount="350" docLength="3752" length="1" offset="3389" starttimestamp="1649721002230" timestamp="51000403">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="7263" _type="Delete" date="Tue Apr 12 10:00:10 EDT 2022" docASTNodeCount="486" docActiveCodeLength="3385" docExpressionCount="345" docLength="3702" endLine="81" length="50" offset="3340" startLine="81" starttimestamp="1649721002230" timestamp="51007976">
    <text><![CDATA[ByteBuffer originalMessage = boundedBuffer.take();]]></text>
  </DocumentChange>
  <DocumentChange __id="7264" _type="Insert" date="Tue Apr 12 10:00:10 EDT 2022" docASTNodeCount="506" docActiveCodeLength="3528" docExpressionCount="355" docLength="3879" length="177" offset="3340" repeat="9" starttimestamp="1649721002230" timestamp="51007984" timestamp2="51008044">
    <text><![CDATA[try {
					ByteBuffer originalMessage = boundedBuffer.take();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}]]></text>
  </DocumentChange>
  <DocumentChange __id="7286" _type="Delete" date="Tue Apr 12 10:00:24 EDT 2022" docASTNodeCount="486" docActiveCodeLength="3385" docExpressionCount="345" docLength="3702" endLine="86" length="177" offset="3340" startLine="81" starttimestamp="1649721002230" timestamp="51022649">
    <text><![CDATA[try {
					ByteBuffer originalMessage = boundedBuffer.take();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}]]></text>
  </DocumentChange>
  <DocumentChange __id="7291" _type="Insert" date="Tue Apr 12 10:00:27 EDT 2022" docASTNodeCount="486" docActiveCodeLength="3393" docExpressionCount="345" docLength="3744" length="42" offset="3042" repeat="36" starttimestamp="1649721002230" timestamp="51025610" timestamp2="51033401">
    <text><![CDATA[
		//Pop value off the bounded buffer
		]]></text>
  </DocumentChange>
  <DocumentChange __id="7399" _type="Replace" date="Tue Apr 12 10:00:35 EDT 2022" docASTNodeCount="506" docActiveCodeLength="3526" docExpressionCount="355" docLength="3911" endLine="77" insertionLength="169" int_docASTNodeCount="486" int_docActiveCodeLength="3391" int_docExpressionCount="345" int_docLength="3742" length="2" offset="3082" startLine="77" starttimestamp="1649721002230" timestamp="51033706">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		try {
			ByteBuffer originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7408" _type="Insert" date="Tue Apr 12 10:01:14 EDT 2022" docASTNodeCount="500" docActiveCodeLength="3467" docExpressionCount="352" docLength="3913" length="2" offset="3418" repeat="2" starttimestamp="1649721002230" timestamp="51072388" timestamp2="51072512">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="7420" _type="Insert" date="Tue Apr 12 10:01:15 EDT 2022" docASTNodeCount="489" docActiveCodeLength="3407" docExpressionCount="344" docLength="3915" length="2" offset="3485" repeat="2" starttimestamp="1649721002230" timestamp="51073716" timestamp2="51073825">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="7429" _type="Replace" date="Tue Apr 12 10:01:18 EDT 2022" docASTNodeCount="489" docActiveCodeLength="3395" docExpressionCount="344" docLength="3903" endLine="89" insertionLength="1" int_docASTNodeCount="488" int_docActiveCodeLength="3394" int_docExpressionCount="343" int_docLength="3902" length="13" offset="3584" startLine="89" starttimestamp="1649721002230" timestamp="51076566">
    <deletedText><![CDATA[aWriteMessage]]></deletedText>
    <insertedText><![CDATA[o]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7432" _type="Insert" date="Tue Apr 12 10:01:18 EDT 2022" docASTNodeCount="489" docActiveCodeLength="3409" docExpressionCount="344" docLength="3917" length="14" offset="3585" repeat="14" starttimestamp="1649721002230" timestamp="51076736" timestamp2="51078416">
    <text><![CDATA[riginalMessage]]></text>
  </DocumentChange>
  <DocumentChange __id="7485" _type="Insert" date="Tue Apr 12 10:01:39 EDT 2022" docASTNodeCount="489" docActiveCodeLength="3413" docExpressionCount="344" docLength="3921" length="4" offset="3080" starttimestamp="1649721002230" timestamp="51097318">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="7488" _type="Replace" date="Tue Apr 12 10:01:39 EDT 2022" docASTNodeCount="494" docActiveCodeLength="3439" docExpressionCount="346" docLength="3947" endLine="77" insertionLength="28" int_docASTNodeCount="489" int_docActiveCodeLength="3411" int_docExpressionCount="344" int_docLength="3919" length="2" offset="3082" startLine="77" starttimestamp="1649721002230" timestamp="51097654">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ByteBuffer originalMessage]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7490" _type="Insert" date="Tue Apr 12 10:01:40 EDT 2022" docASTNodeCount="495" docActiveCodeLength="3447" docExpressionCount="347" docLength="3955" length="8" offset="3110" repeat="8" starttimestamp="1649721002230" timestamp="51098306" timestamp2="51099553">
    <text><![CDATA[ = null;]]></text>
  </DocumentChange>
  <DocumentChange __id="7524" _type="Delete" date="Tue Apr 12 10:01:51 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3436" docExpressionCount="347" docLength="3944" endLine="79" length="11" offset="3132" startLine="79" starttimestamp="1649721002230" timestamp="51109610">
    <text><![CDATA[ByteBuffer ]]></text>
  </DocumentChange>
  <DocumentChange __id="7534" _type="Delete" date="Tue Apr 12 10:01:56 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3430" docExpressionCount="347" docLength="3938" endLine="89" length="6" offset="3574" repeat="5" startLine="88" starttimestamp="1649721002230" timestamp="51114647" timestamp2="51115998">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="7594" _type="Delete" date="Tue Apr 12 10:02:56 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3420" docExpressionCount="347" docLength="3805" endLine="88" length="133" offset="3441" startLine="87" starttimestamp="1649721002230" timestamp="51174128">
    <text><![CDATA[				//String line = "The server is sending a message to clients";
				//ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());]]></text>
  </DocumentChange>
  <DocumentChange __id="7600" _type="Delete" date="Tue Apr 12 10:02:59 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3415" docExpressionCount="347" docLength="3766" endLine="82" length="39" offset="3211" repeat="2" startLine="81" starttimestamp="1649721002230" timestamp="51177609" timestamp2="51178331">
    <text><![CDATA[			// TODO Auto-generated catch block
]]></text>
  </DocumentChange>
  <DocumentChange __id="7611" _type="Delete" date="Tue Apr 12 10:03:17 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3413" docExpressionCount="347" docLength="3764" endLine="86" length="2" offset="3400" startLine="85" starttimestamp="1649721002230" timestamp="51195207">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <DocumentChange __id="7625" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3410" docExpressionCount="347" docLength="3761" endLine="99" insertionLength="4" int_docASTNodeCount="493" int_docActiveCodeLength="3406" int_docExpressionCount="347" int_docLength="3757" length="7" offset="3754" startLine="96" starttimestamp="1649721002230" timestamp="51202115">
    <deletedText><![CDATA[
	

]]></deletedText>
    <insertedText><![CDATA[

]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7626" _type="Insert" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3411" docExpressionCount="347" docLength="3762" length="1" offset="3732" starttimestamp="1649721002230" timestamp="51202126">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="7627" _type="Insert" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3412" docExpressionCount="347" docLength="3763" length="1" offset="3716" starttimestamp="1649721002230" timestamp="51202129">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="7628" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3414" docExpressionCount="347" docLength="3765" endLine="91" insertionLength="5" int_docASTNodeCount="493" int_docActiveCodeLength="3409" int_docExpressionCount="347" int_docLength="3760" length="3" offset="3473" startLine="90" starttimestamp="1649721002230" timestamp="51202129">
    <deletedText><![CDATA[
	]]></deletedText>
    <insertedText><![CDATA[

	]]></insertedText>
  </DocumentChange>
  <Command __id="7621" _type="MoveCaretCommand" caretOffset="3239" date="Tue Apr 12 10:03:23 EDT 2022" docOffset="3239" starttimestamp="1649721002230" timestamp="51200903" />
  <Command __id="7623" _type="MoveCaretCommand" caretOffset="3239" date="Tue Apr 12 10:03:23 EDT 2022" docOffset="3239" starttimestamp="1649721002230" timestamp="51200903" />
  <Command __id="7624" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Tue Apr 12 10:03:23 EDT 2022" starttimestamp="1649721002230" timestamp="51201160" />
  <Command __id="7648" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.format" date="Tue Apr 12 10:03:24 EDT 2022" starttimestamp="1649721002230" timestamp="51202239" />
  <Command __id="7649" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Tue Apr 12 10:03:25 EDT 2022" starttimestamp="1649721002230" timestamp="51203160" />
  <Command __id="7651" _type="PauseCommand" date="Tue Apr 12 10:03:26 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51204327">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1167]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7650" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:03:26 EDT 2022" starttimestamp="1649721002230" timestamp="51204327" />
  <Command __id="7652" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:03:26 EDT 2022" starttimestamp="1649721002230" timestamp="51204417" />
  <Command __id="7653" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:03:26 EDT 2022" starttimestamp="1649721002230" timestamp="51204465" />
  <Command __id="7654" _type="MoveCaretCommand" caretOffset="3221" date="Tue Apr 12 10:03:27 EDT 2022" docOffset="3221" starttimestamp="1649721002230" timestamp="51204989" />
  <Command __id="7655" _type="MoveCaretCommand" caretOffset="3221" date="Tue Apr 12 10:03:27 EDT 2022" docOffset="3221" starttimestamp="1649721002230" timestamp="51204989" />
  <Command __id="7657" _type="PauseCommand" date="Tue Apr 12 10:04:08 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="51246717">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[41728]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7656" _type="ShellCommand" date="Tue Apr 12 10:04:08 EDT 2022" starttimestamp="1649721002230" timestamp="51246717" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7659" _type="PauseCommand" date="Tue Apr 12 10:05:03 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="51301352">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[54635]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7670" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Apr 12 10:05:12 EDT 2022" starttimestamp="1649721002230" timestamp="51310468" />
  <Command __id="7672" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Tue Apr 12 10:05:12 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="51310494" type="Run" />
  <Command __id="7673" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Tue Apr 12 10:05:12 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="51310494" type="Run" />
  <Command __id="7674" _type="ConsoleOutput" date="Tue Apr 12 10:05:12 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="51310533" type="ConsoleOutput">
    <outputString><![CDATA[AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57070]:An existing connection was forcibly closed by the remote host
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:570"), Diff(DELETE,"69"), Diff(INSERT,"70"), Diff(EQUAL,"]:An existing connection was forcibly closed by the remote host¶")]]]></diff>
  </Command>
  <DocumentChange __id="7629" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3412" docExpressionCount="347" docLength="3763" endLine="90" insertionLength="5" int_docASTNodeCount="493" int_docActiveCodeLength="3407" int_docExpressionCount="347" int_docLength="3758" length="7" offset="3465" startLine="88" starttimestamp="1649721002230" timestamp="51202129">
    <deletedText><![CDATA[
		
	]]></deletedText>
    <insertedText><![CDATA[

	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7630" _type="Insert" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3412" docExpressionCount="347" docLength="3764" length="1" offset="3245" starttimestamp="1649721002230" timestamp="51202136">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="7631" _type="Insert" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3412" docExpressionCount="347" docLength="3765" length="1" offset="3048" starttimestamp="1649721002230" timestamp="51202136">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="7632" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3406" docExpressionCount="347" docLength="3759" endLine="76" insertionLength="6" int_docASTNodeCount="493" int_docActiveCodeLength="3400" int_docExpressionCount="347" int_docLength="3753" length="12" offset="3034" startLine="73" starttimestamp="1649721002230" timestamp="51202136">
    <deletedText><![CDATA[
		
		
		]]></deletedText>
    <insertedText><![CDATA[

		]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7633" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3401" docExpressionCount="347" docLength="3754" endLine="72" insertionLength="1" int_docASTNodeCount="493" int_docActiveCodeLength="3400" int_docExpressionCount="347" int_docLength="3753" length="6" offset="2955" startLine="71" starttimestamp="1649721002230" timestamp="51202145">
    <deletedText><![CDATA[
				]]></deletedText>
    <insertedText><![CDATA[ ]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7634" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3399" docExpressionCount="347" docLength="3752" endLine="71" insertionLength="6" int_docASTNodeCount="493" int_docActiveCodeLength="3393" int_docExpressionCount="347" int_docLength="3746" length="8" offset="2874" startLine="69" starttimestamp="1649721002230" timestamp="51202145">
    <deletedText><![CDATA[
		
		]]></deletedText>
    <insertedText><![CDATA[

		]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7635" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3401" docExpressionCount="347" docLength="3754" endLine="66" insertionLength="5" int_docASTNodeCount="493" int_docActiveCodeLength="3396" int_docExpressionCount="347" int_docLength="3749" length="3" offset="2670" startLine="65" starttimestamp="1649721002230" timestamp="51202145">
    <deletedText><![CDATA[
	]]></deletedText>
    <insertedText><![CDATA[

	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7636" _type="Insert" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3401" docExpressionCount="347" docLength="3755" length="1" offset="2612" starttimestamp="1649721002230" timestamp="51202145">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="7637" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3399" docExpressionCount="347" docLength="3753" endLine="63" insertionLength="6" int_docASTNodeCount="493" int_docActiveCodeLength="3393" int_docExpressionCount="347" int_docLength="3747" length="8" offset="2602" startLine="61" starttimestamp="1649721002230" timestamp="51202145">
    <deletedText><![CDATA[
		
		]]></deletedText>
    <insertedText><![CDATA[

		]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7638" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3401" docExpressionCount="347" docLength="3755" endLine="59" insertionLength="5" int_docASTNodeCount="493" int_docActiveCodeLength="3396" int_docExpressionCount="347" int_docLength="3750" length="3" offset="2427" startLine="58" starttimestamp="1649721002230" timestamp="51202165">
    <deletedText><![CDATA[
	]]></deletedText>
    <insertedText><![CDATA[

	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7639" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3399" docExpressionCount="347" docLength="3753" endLine="58" insertionLength="3" int_docASTNodeCount="493" int_docActiveCodeLength="3396" int_docExpressionCount="347" int_docLength="3750" length="5" offset="2421" startLine="57" starttimestamp="1649721002230" timestamp="51202168">
    <deletedText><![CDATA[		
	]]></deletedText>
    <insertedText><![CDATA[
	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7640" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3424" docExpressionCount="347" docLength="3780" endLine="52" insertionLength="28" int_docASTNodeCount="493" int_docActiveCodeLength="3399" int_docExpressionCount="347" int_docLength="3752" length="1" offset="2330" startLine="52" starttimestamp="1649721002230" timestamp="51202169">
    <deletedText><![CDATA[ ]]></deletedText>
    <insertedText><![CDATA[
																							// ]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7641" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3418" docExpressionCount="347" docLength="3774" endLine="52" insertionLength="1" int_docASTNodeCount="493" int_docActiveCodeLength="3417" int_docExpressionCount="347" int_docLength="3773" length="7" offset="2277" startLine="51" starttimestamp="1649721002230" timestamp="51202172">
    <deletedText><![CDATA[
					]]></deletedText>
    <insertedText><![CDATA[ ]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7642" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3416" docExpressionCount="347" docLength="3772" endLine="51" insertionLength="5" int_docASTNodeCount="493" int_docActiveCodeLength="3411" int_docExpressionCount="347" int_docLength="3767" length="7" offset="2213" startLine="50" starttimestamp="1649721002230" timestamp="51202172">
    <deletedText><![CDATA[		
			]]></deletedText>
    <insertedText><![CDATA[
			]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7643" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3418" docExpressionCount="347" docLength="3774" endLine="45" insertionLength="5" int_docASTNodeCount="493" int_docActiveCodeLength="3413" int_docExpressionCount="347" int_docLength="3769" length="3" offset="1845" startLine="44" starttimestamp="1649721002230" timestamp="51202190">
    <deletedText><![CDATA[
	]]></deletedText>
    <insertedText><![CDATA[

	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7644" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3420" docExpressionCount="347" docLength="3776" endLine="38" insertionLength="4" int_docASTNodeCount="493" int_docActiveCodeLength="3416" int_docExpressionCount="347" int_docLength="3772" length="2" offset="1601" startLine="37" starttimestamp="1649721002230" timestamp="51202205">
    <deletedText><![CDATA[
]]></deletedText>
    <insertedText><![CDATA[

]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7645" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3422" docExpressionCount="347" docLength="3778" endLine="33" insertionLength="5" int_docASTNodeCount="493" int_docActiveCodeLength="3417" int_docExpressionCount="347" int_docLength="3773" length="3" offset="1479" startLine="32" starttimestamp="1649721002230" timestamp="51202210">
    <deletedText><![CDATA[
	]]></deletedText>
    <insertedText><![CDATA[

	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7646" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3421" docExpressionCount="347" docLength="3777" endLine="32" insertionLength="5" int_docASTNodeCount="493" int_docActiveCodeLength="3416" int_docExpressionCount="347" int_docLength="3772" length="6" offset="1406" startLine="30" starttimestamp="1649721002230" timestamp="51202215">
    <deletedText><![CDATA[
	
	]]></deletedText>
    <insertedText><![CDATA[

	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7647" _type="Replace" date="Tue Apr 12 10:03:24 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3420" docExpressionCount="347" docLength="3776" endLine="29" insertionLength="5" int_docASTNodeCount="493" int_docActiveCodeLength="3415" int_docExpressionCount="347" int_docLength="3771" length="6" offset="1246" startLine="27" starttimestamp="1649721002230" timestamp="51202218">
    <deletedText><![CDATA[
	
	]]></deletedText>
    <insertedText><![CDATA[

	]]></insertedText>
  </DocumentChange>
  <Command __id="7676" _type="PauseCommand" date="Tue Apr 12 10:05:21 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="51319270">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8737]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7677" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:05:21 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="51319672" />
  <Command __id="7679" _type="PauseCommand" date="Tue Apr 12 10:05:35 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="51333169">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13497]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7680" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:05:47 EDT 2022" starttimestamp="1649721002230" timestamp="51345400" />
  <Command __id="7682" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:05:47 EDT 2022" starttimestamp="1649721002230" timestamp="51345452" />
  <Command __id="7683" _type="ShellCommand" date="Tue Apr 12 10:05:47 EDT 2022" starttimestamp="1649721002230" timestamp="51345551" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7685" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:05:48 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="51346605" />
  <Command __id="7687" _type="PauseCommand" date="Tue Apr 12 10:05:50 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51347782">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1177]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7675" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:05:21 EDT 2022" docASTNodeCount="68" docActiveCodeLength="454" docExpressionCount="45" docLength="522" projectName="A6" starttimestamp="1649721002230" timestamp="51319270">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="7684" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:05:48 EDT 2022" docASTNodeCount="6" docActiveCodeLength="68" docExpressionCount="2" docLength="68" projectName="A6" starttimestamp="1649721002230" timestamp="51346312">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

public class exampleServerReadThread {

}
]]></snapshot>
  </Command>
  <Command __id="7686" _type="MoveCaretCommand" caretOffset="60" date="Tue Apr 12 10:05:50 EDT 2022" docOffset="60" starttimestamp="1649721002230" timestamp="51347782" />
  <Command __id="7689" _type="InsertStringCommand" date="Tue Apr 12 10:05:50 EDT 2022" starttimestamp="1649721002230" timestamp="51347985" timestamp2="51347985">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7691" _type="InsertStringCommand" date="Tue Apr 12 10:05:50 EDT 2022" starttimestamp="1649721002230" timestamp="51348201" timestamp2="51348201">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="7693" _type="InsertStringCommand" date="Tue Apr 12 10:05:50 EDT 2022" starttimestamp="1649721002230" timestamp="51348446" timestamp2="51348446">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7695" _type="InsertStringCommand" date="Tue Apr 12 10:05:50 EDT 2022" starttimestamp="1649721002230" timestamp="51348573" timestamp2="51348573">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7697" _type="InsertStringCommand" date="Tue Apr 12 10:05:50 EDT 2022" starttimestamp="1649721002230" timestamp="51348704" timestamp2="51348704">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7699" _type="InsertStringCommand" date="Tue Apr 12 10:05:51 EDT 2022" starttimestamp="1649721002230" timestamp="51348785" timestamp2="51348785">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7701" _type="InsertStringCommand" date="Tue Apr 12 10:05:51 EDT 2022" starttimestamp="1649721002230" timestamp="51348856" timestamp2="51348856">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7704" _type="PauseCommand" date="Tue Apr 12 10:05:53 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51350787">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1931]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="7703" _type="InsertStringCommand" date="Tue Apr 12 10:05:53 EDT 2022" starttimestamp="1649721002230" timestamp="51350787" timestamp2="51350787">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7706" _type="InsertStringCommand" date="Tue Apr 12 10:05:53 EDT 2022" starttimestamp="1649721002230" timestamp="51351098" timestamp2="51351098">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="7708" _type="InsertStringCommand" date="Tue Apr 12 10:05:53 EDT 2022" starttimestamp="1649721002230" timestamp="51351327" timestamp2="51351327">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7710" _type="InsertStringCommand" date="Tue Apr 12 10:05:53 EDT 2022" starttimestamp="1649721002230" timestamp="51351405" timestamp2="51351405">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7712" _type="InsertStringCommand" date="Tue Apr 12 10:05:53 EDT 2022" starttimestamp="1649721002230" timestamp="51351631" timestamp2="51351631">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7714" _type="InsertStringCommand" date="Tue Apr 12 10:05:54 EDT 2022" starttimestamp="1649721002230" timestamp="51352046" timestamp2="51352046">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="7716" _type="InsertStringCommand" date="Tue Apr 12 10:05:54 EDT 2022" starttimestamp="1649721002230" timestamp="51352238" timestamp2="51352238">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="7718" _type="InsertStringCommand" date="Tue Apr 12 10:05:54 EDT 2022" starttimestamp="1649721002230" timestamp="51352312" timestamp2="51352312">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7720" _type="InsertStringCommand" date="Tue Apr 12 10:05:54 EDT 2022" starttimestamp="1649721002230" timestamp="51352385" timestamp2="51352385">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7722" _type="InsertStringCommand" date="Tue Apr 12 10:05:54 EDT 2022" starttimestamp="1649721002230" timestamp="51352443" timestamp2="51352443">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7724" _type="InsertStringCommand" date="Tue Apr 12 10:05:54 EDT 2022" starttimestamp="1649721002230" timestamp="51352619" timestamp2="51352619">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7726" _type="InsertStringCommand" date="Tue Apr 12 10:05:55 EDT 2022" starttimestamp="1649721002230" timestamp="51352936" timestamp2="51352936">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="7728" _type="InsertStringCommand" date="Tue Apr 12 10:05:55 EDT 2022" starttimestamp="1649721002230" timestamp="51353120" timestamp2="51353120">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7730" _type="InsertStringCommand" date="Tue Apr 12 10:05:55 EDT 2022" starttimestamp="1649721002230" timestamp="51353197" timestamp2="51353197">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7732" _type="InsertStringCommand" date="Tue Apr 12 10:05:55 EDT 2022" starttimestamp="1649721002230" timestamp="51353318" timestamp2="51353318">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7734" _type="InsertStringCommand" date="Tue Apr 12 10:05:55 EDT 2022" starttimestamp="1649721002230" timestamp="51353421" timestamp2="51353421">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7736" _type="InsertStringCommand" date="Tue Apr 12 10:05:55 EDT 2022" starttimestamp="1649721002230" timestamp="51353581" timestamp2="51353581">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7738" _type="InsertStringCommand" date="Tue Apr 12 10:05:55 EDT 2022" starttimestamp="1649721002230" timestamp="51353667" timestamp2="51353667">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7740" _type="InsertStringCommand" date="Tue Apr 12 10:05:56 EDT 2022" starttimestamp="1649721002230" timestamp="51353857" timestamp2="51353857">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7742" _type="InsertStringCommand" date="Tue Apr 12 10:05:56 EDT 2022" starttimestamp="1649721002230" timestamp="51354040" timestamp2="51354040">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7744" _type="PauseCommand" date="Tue Apr 12 10:06:11 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="51369403">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[15363]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7743" _type="MoveCaretCommand" caretOffset="68" date="Tue Apr 12 10:06:11 EDT 2022" docOffset="68" starttimestamp="1649721002230" timestamp="51369403" />
  <DocumentChange __id="7688" _type="Insert" date="Tue Apr 12 10:05:50 EDT 2022" docASTNodeCount="8" docActiveCodeLength="95" docExpressionCount="3" docLength="95" length="27" offset="60" repeat="27" starttimestamp="1649721002230" timestamp="51347977" timestamp2="51354034">
    <text><![CDATA[extends ReadThreadInterface]]></text>
  </DocumentChange>
  <Command __id="7746" _type="PauseCommand" date="Tue Apr 12 10:06:12 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51370448">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1045]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="7747" _type="InsertStringCommand" date="Tue Apr 12 10:06:12 EDT 2022" starttimestamp="1649721002230" timestamp="51370479" timestamp2="51370479">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7749" _type="InsertStringCommand" date="Tue Apr 12 10:06:12 EDT 2022" starttimestamp="1649721002230" timestamp="51370524" timestamp2="51370524">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7751" _type="InsertStringCommand" date="Tue Apr 12 10:06:12 EDT 2022" starttimestamp="1649721002230" timestamp="51370611" timestamp2="51370611">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7753" _type="InsertStringCommand" date="Tue Apr 12 10:06:13 EDT 2022" starttimestamp="1649721002230" timestamp="51370819" timestamp2="51370819">
    <data><![CDATA[d]]></data>
  </Command>
  <DocumentChange __id="7745" _type="Insert" date="Tue Apr 12 10:06:12 EDT 2022" docASTNodeCount="8" docActiveCodeLength="99" docExpressionCount="3" docLength="99" length="4" offset="68" repeat="4" starttimestamp="1649721002230" timestamp="51370448" timestamp2="51370816">
    <text><![CDATA[read]]></text>
  </DocumentChange>
  <Command __id="7755" _type="PauseCommand" date="Tue Apr 12 10:06:14 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51371869">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1050]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="7756" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:06:14 EDT 2022" starttimestamp="1649721002230" timestamp="51371873" />
  <Command __id="7758" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:06:14 EDT 2022" starttimestamp="1649721002230" timestamp="51372181" />
  <Command __id="7760" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:06:14 EDT 2022" starttimestamp="1649721002230" timestamp="51372351" />
  <Command __id="7762" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:06:14 EDT 2022" starttimestamp="1649721002230" timestamp="51372547" />
  <Command __id="7764" _type="PauseCommand" date="Tue Apr 12 10:06:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51376898">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4351]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7763" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:06:19 EDT 2022" starttimestamp="1649721002230" timestamp="51376898" />
  <Command __id="7765" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:06:19 EDT 2022" starttimestamp="1649721002230" timestamp="51376983" />
  <Command __id="7766" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:06:19 EDT 2022" starttimestamp="1649721002230" timestamp="51377000" />
  <Command __id="7768" _type="PauseCommand" date="Tue Apr 12 10:06:22 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51380593">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3593]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7767" _type="MoveCaretCommand" caretOffset="95" date="Tue Apr 12 10:06:22 EDT 2022" docOffset="95" starttimestamp="1649721002230" timestamp="51380593" />
  <Command __id="7770" _type="PauseCommand" date="Tue Apr 12 10:06:25 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51383156">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2563]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7769" _type="ShellCommand" date="Tue Apr 12 10:06:25 EDT 2022" starttimestamp="1649721002230" timestamp="51383156" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7771" _type="ShellCommand" date="Tue Apr 12 10:06:25 EDT 2022" starttimestamp="1649721002230" timestamp="51383295" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7772" _type="ShellCommand" date="Tue Apr 12 10:06:25 EDT 2022" starttimestamp="1649721002230" timestamp="51383541" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7774" _type="PauseCommand" date="Tue Apr 12 10:06:28 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51385909">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2368]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7773" _type="ShellCommand" date="Tue Apr 12 10:06:28 EDT 2022" starttimestamp="1649721002230" timestamp="51385909" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="7754" _type="Delete" date="Tue Apr 12 10:06:14 EDT 2022" docASTNodeCount="8" docActiveCodeLength="95" docExpressionCount="3" docLength="95" endLine="2" length="4" offset="68" repeat="4" startLine="2" starttimestamp="1649721002230" timestamp="51371869" timestamp2="51372543">
    <text><![CDATA[read]]></text>
  </DocumentChange>
  <Command __id="7776" _type="PauseCommand" date="Tue Apr 12 10:06:32 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51390364">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4455]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7777" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:06:33 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="51390914" />
  <Command __id="7775" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:06:32 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1931" docExpressionCount="144" docLength="1931" projectName="A6" starttimestamp="1649721002230" timestamp="51390364">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})¶public interface ServerRemoteInterfaceGIPC extends SocketChannelWriteListener, SocketChannelAcceptListener, SocketChannelReadListener, Remote{¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;¶	¶	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶	¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;¶	¶	void processArgs(String[] args) throws RemoteException;¶	public void start(String[] args) throws RemoteException;¶	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;¶	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;¶¶	void createGIPCRegistry() throws RemoteException;¶¶	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,¶			boolean broadcast) throws RemoteException;¶¶	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;¶¶	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;¶¶	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;¶¶	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="7779" _type="PauseCommand" date="Tue Apr 12 10:06:39 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="51396897">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5983]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7780" _type="MoveCaretCommand" caretOffset="95" date="Tue Apr 12 10:06:39 EDT 2022" docOffset="95" starttimestamp="1649721002230" timestamp="51397403" />
  <Command __id="7782" _type="PauseCommand" date="Tue Apr 12 10:06:40 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51398502">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1099]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7781" _type="MoveCaretCommand" caretOffset="19" date="Tue Apr 12 10:06:40 EDT 2022" docOffset="19" starttimestamp="1649721002230" timestamp="51398502" />
  <Command __id="7783" _type="InsertStringCommand" date="Tue Apr 12 10:06:41 EDT 2022" starttimestamp="1649721002230" timestamp="51398820" timestamp2="51398820">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7784" _type="InsertStringCommand" date="Tue Apr 12 10:06:41 EDT 2022" starttimestamp="1649721002230" timestamp="51398952" timestamp2="51398952">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7785" _type="InsertStringCommand" date="Tue Apr 12 10:06:41 EDT 2022" starttimestamp="1649721002230" timestamp="51399241" timestamp2="51399241">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7786" _type="InsertStringCommand" date="Tue Apr 12 10:06:41 EDT 2022" starttimestamp="1649721002230" timestamp="51399394" timestamp2="51399394">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7787" _type="InsertStringCommand" date="Tue Apr 12 10:06:41 EDT 2022" starttimestamp="1649721002230" timestamp="51399567" timestamp2="51399567">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7788" _type="InsertStringCommand" date="Tue Apr 12 10:06:41 EDT 2022" starttimestamp="1649721002230" timestamp="51399614" timestamp2="51399614">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7789" _type="InsertStringCommand" date="Tue Apr 12 10:06:42 EDT 2022" starttimestamp="1649721002230" timestamp="51399782" timestamp2="51399782">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7790" _type="InsertStringCommand" date="Tue Apr 12 10:06:42 EDT 2022" starttimestamp="1649721002230" timestamp="51400005" timestamp2="51400005">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7791" _type="InsertStringCommand" date="Tue Apr 12 10:06:42 EDT 2022" starttimestamp="1649721002230" timestamp="51400081" timestamp2="51400081">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7792" _type="InsertStringCommand" date="Tue Apr 12 10:06:43 EDT 2022" starttimestamp="1649721002230" timestamp="51400883" timestamp2="51400883">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7793" _type="InsertStringCommand" date="Tue Apr 12 10:06:43 EDT 2022" starttimestamp="1649721002230" timestamp="51401009" timestamp2="51401009">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7794" _type="InsertStringCommand" date="Tue Apr 12 10:06:43 EDT 2022" starttimestamp="1649721002230" timestamp="51401039" timestamp2="51401039">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7795" _type="InsertStringCommand" date="Tue Apr 12 10:06:43 EDT 2022" starttimestamp="1649721002230" timestamp="51401241" timestamp2="51401241">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7796" _type="InsertStringCommand" date="Tue Apr 12 10:06:43 EDT 2022" starttimestamp="1649721002230" timestamp="51401582" timestamp2="51401582">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="7797" _type="InsertStringCommand" date="Tue Apr 12 10:06:44 EDT 2022" starttimestamp="1649721002230" timestamp="51401781" timestamp2="51401781">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="7798" _type="InsertStringCommand" date="Tue Apr 12 10:06:44 EDT 2022" starttimestamp="1649721002230" timestamp="51401822" timestamp2="51401822">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7799" _type="InsertStringCommand" date="Tue Apr 12 10:06:44 EDT 2022" starttimestamp="1649721002230" timestamp="51401933" timestamp2="51401933">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7800" _type="InsertStringCommand" date="Tue Apr 12 10:06:44 EDT 2022" starttimestamp="1649721002230" timestamp="51401966" timestamp2="51401966">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7801" _type="InsertStringCommand" date="Tue Apr 12 10:06:44 EDT 2022" starttimestamp="1649721002230" timestamp="51402144" timestamp2="51402144">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7802" _type="InsertStringCommand" date="Tue Apr 12 10:06:45 EDT 2022" starttimestamp="1649721002230" timestamp="51403037" timestamp2="51403037">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7804" _type="PauseCommand" date="Tue Apr 12 10:06:47 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51405362">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2325]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="7806" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:06:49 EDT 2022" starttimestamp="1649721002230" timestamp="51407008" />
  <Command __id="7808" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:06:49 EDT 2022" starttimestamp="1649721002230" timestamp="51407045" />
  <Command __id="7810" _type="PauseCommand" date="Tue Apr 12 10:06:53 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51411422">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4377]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7809" _type="ShellCommand" date="Tue Apr 12 10:06:53 EDT 2022" starttimestamp="1649721002230" timestamp="51411422" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7811" _type="ShellCommand" date="Tue Apr 12 10:06:53 EDT 2022" starttimestamp="1649721002230" timestamp="51411570" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7812" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:06:54 EDT 2022" starttimestamp="1649721002230" timestamp="51412382" />
  <Command __id="7813" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:06:54 EDT 2022" starttimestamp="1649721002230" timestamp="51412417" />
  <Command __id="7814" _type="ShellCommand" date="Tue Apr 12 10:06:55 EDT 2022" starttimestamp="1649721002230" timestamp="51413078" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7815" _type="ShellCommand" date="Tue Apr 12 10:06:55 EDT 2022" starttimestamp="1649721002230" timestamp="51413257" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7817" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:06:55 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="51413753" />
  <Command __id="7819" _type="PauseCommand" date="Tue Apr 12 10:06:57 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51415281">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1527]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7818" _type="ShellCommand" date="Tue Apr 12 10:06:57 EDT 2022" starttimestamp="1649721002230" timestamp="51415280" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7820" _type="ShellCommand" date="Tue Apr 12 10:06:57 EDT 2022" starttimestamp="1649721002230" timestamp="51415381" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7778" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:06:39 EDT 2022" docASTNodeCount="8" docActiveCodeLength="95" docExpressionCount="3" docLength="95" projectName="A6" starttimestamp="1649721002230" timestamp="51396897">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶public class exampleServerReadThread "), Diff(INSERT,"extends ReadThreadInterface"), Diff(EQUAL,"{¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

public class exampleServerReadThread extends ReadThreadInterface{

}
]]></snapshot>
  </Command>
  <Command __id="7816" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:06:55 EDT 2022" docASTNodeCount="68" docActiveCodeLength="454" docExpressionCount="45" docLength="522" projectName="A6" starttimestamp="1649721002230" timestamp="51413378">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="7822" _type="PauseCommand" date="Tue Apr 12 10:06:58 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51416441">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1060]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7823" _type="MoveCaretCommand" caretOffset="61" date="Tue Apr 12 10:06:58 EDT 2022" docOffset="61" starttimestamp="1649721002230" timestamp="51416615" />
  <Command __id="7825" _type="PauseCommand" date="Tue Apr 12 10:07:01 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51419205">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2590]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="7845" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:07:35 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="51453713" />
  <Command __id="7843" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:07:35 EDT 2022" docASTNodeCount="61" docActiveCodeLength="390" docExpressionCount="30" docLength="390" projectName="A2" starttimestamp="1649721002230" timestamp="51453331">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A2\src\comp533\mvc\ModelViewController.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package comp533.mvc;

public class ModelViewController {
	public static void main(final String[] args) {
		
		
		final ViewInterface view = new View();
		
		final ModelInterface model = new Model();
		model.addPropertyChangeListener(view);
		
		final ControllerInterface controller = new Controller();
		controller.setModel(model);
		controller.processInput();
		
		
	}
}
]]></snapshot>
  </Command>
  <Command __id="7847" _type="PauseCommand" date="Tue Apr 12 10:07:38 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51456367">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2654]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7851" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:08:40 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="51518331" />
  <Command __id="7849" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:08:40 EDT 2022" docASTNodeCount="100" docActiveCodeLength="612" docExpressionCount="55" docLength="612" projectName="A2" starttimestamp="1649721002230" timestamp="51517927">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A2\src\comp533\mvc\TokenCountingMapper.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package comp533.mvc;

import gradingTools.comp533s19.assignment0.AMapReduceTracer; 

public class TokenCountingMapper extends AMapReduceTracer implements TokenCountingMapperInterface<String, Integer>{
	final static int ONE = 1;
	
	@Override
	public KeyValueInterface<String, Integer> map(final java.lang.String aString) {
		final KeyValueInterface<String, Integer> keyVal = new KeyValue<String, Integer>();
		keyVal.setKey(aString);
		keyVal.setValue(ONE);
		
		traceMap(aString ,keyVal);
		return keyVal;
	}
	
	@Override
	public String toString() {
		return TOKEN_COUNTING_MAPPER; 
	}

}
]]></snapshot>
  </Command>
  <Command __id="7853" _type="PauseCommand" date="Tue Apr 12 10:08:44 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51522707">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4376]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7864" _type="BalloonCommand" date="Tue Apr 12 10:11:53 EDT 2022" message="*******************************************
Worked 25 minutes(fixed)/31 minutes(context based) from
Tue Apr 12 09:11:53 EDT 2022 to Tue Apr 12 10:10:24 EDT 2022
Edited 1 Projects: 
	A6
Edited 2 Files: 
	C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java
	C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java
Number of insert: 1167
Number of delete: 887
" starttimestamp="1649721002230" timestamp="51710956">
    <fineGrainedWorkTime><![CDATA[31]]></fineGrainedWorkTime>
    <insert><![CDATA[1167]]></insert>
    <startTime><![CDATA[1649769113175]]></startTime>
    <endTime><![CDATA[1649772624599]]></endTime>
    <workTime><![CDATA[25]]></workTime>
    <delete><![CDATA[887]]></delete>
  </Command>
  <Command __id="7860" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:10:23 EDT 2022" docASTNodeCount="1386" docActiveCodeLength="8118" docExpressionCount="794" docLength="8637" projectName="A2" starttimestamp="1649721002230" timestamp="51621171">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A2\src\comp533\mvc\Model.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package comp533.mvc;

import java.beans.PropertyChangeSupport;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;

import comp533.barrier.Barrier;
import comp533.barrier.BarrierInterface;
import comp533.joiner.Joiner;
import comp533.joiner.JoinerInterface;
import comp533.salve.Slave;
import comp533.salve.SlaveInterface;

import java.util.HashMap;
import java.util.LinkedList;
import java.beans.PropertyChangeListener;
//import java.beans.PropertyChangeEvent;
import gradingTools.comp533s19.assignment0.AMapReduceTracer;

public class Model extends AMapReduceTracer implements ModelInterface {
	private PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);
	private String inputString = null;
	private Map<String, Integer> result = new HashMap<String, Integer>();
	final String space = " ";
	boolean slavesStarted = false;

	// properties from A2
	int aNumThreads = 0;
	List<Thread> threads = new ArrayList<Thread>();
	List<SlaveInterface> slaves = new ArrayList<SlaveInterface>();
	BarrierInterface barrier;
	JoinerInterface joiner;
	BlockingQueue<KeyValueInterface<String, Integer>> aKeyValueQueue = new ArrayBlockingQueue<KeyValueInterface<String, Integer>>(
			BUFFER_SIZE);
	List<LinkedList<KeyValueInterface<String, Integer>>> aReductionQueueList = new ArrayList<LinkedList<KeyValueInterface<String, Integer>>>();

	@Override
	public int getNumThreads() {
		return aNumThreads;
	}

	@Override
	public void setNumThreads(final int numThreads) {
		// barrier = new Barrier(numThreads);
		// joiner = new Joiner(numThreads);
		/*
		 * traceBarrierCreated(barrier, numThreads); traceJoinerCreated(joiner,
		 * numThreads);
		 */

		final String oldValue = Integer.toString(aNumThreads);
		String oldThreads = threads.toString();
		if (threads.isEmpty()) {
			oldThreads = null;
			aNumThreads = numThreads;
		}

		threads = new ArrayList<Thread>();
		for (int i = 0; i < numThreads; i++) {
			final String name = "Slave" + Integer.toString(i);

			final SlaveInterface newSlave = new Slave(i, this);
			slaves.add(newSlave);

			final Thread slaveThread = new Thread(newSlave);
			slaveThread.setName(name);
			threads.add(slaveThread);

			// Add separate reduction queue to Reduction queue list for each slave thread
			aReductionQueueList.add(new LinkedList<KeyValueInterface<String, Integer>>());
		}
		final String label = "NumThreads";
		final String newValue = Integer.toString(aNumThreads);

		final String labelThread = "Threads";
		final String newThreads = threads.toString();

		propertyChangeSupport.firePropertyChange(label, oldValue, newValue);
		propertyChangeSupport.firePropertyChange(labelThread, oldThreads, newThreads);
	}

	@Override
	public List<Thread> getThreads() {
		return threads;
	}

	@Override
	public Map<String, Integer> getResult() {
		return result;
	}

	@Override
	public void addPropertyChangeListener(final PropertyChangeListener newListener) {
		propertyChangeSupport.addPropertyChangeListener(newListener);
	}

	@Override
	public void setInputString(final String newVal) {
		barrier = new Barrier(aNumThreads);
		joiner = new Joiner(aNumThreads);
		traceBarrierCreated(barrier, aNumThreads);
		traceJoinerCreated(joiner, aNumThreads);

		final String oldResult = result.toString();
		final String oldInputString = inputString;
		inputString = newVal;
		final String label = "InputString";

		propertyChangeSupport.firePropertyChange(label, oldInputString, newVal);

		// A2 tasks
		// 1
		aKeyValueQueue = new ArrayBlockingQueue<KeyValueInterface<String, Integer>>(BUFFER_SIZE);
		aReductionQueueList = new ArrayList<LinkedList<KeyValueInterface<String, Integer>>>();
		aKeyValueQueue.clear();
		aReductionQueueList.clear();
		result.clear();

		if (!slavesStarted) {
			for (int i = 0; i < threads.size(); i++) {
				// TODO this cannot happen multiple times:
				threads.get(i).start();
			}
			slavesStarted = true;
		}

	

		aReductionQueueList = notifySlaves(slaves, aReductionQueueList);

		// 3
		final String tokens = inputString;
		final List<String> listOfToken = Arrays.asList(tokens.split(space));
		

		aKeyValueQueue = mapping(aKeyValueQueue, listOfToken, slaves);

	
		// 5
		aKeyValueQueue = enqueuer(threads, slaves, aKeyValueQueue);


		// 6
		joiner.join();
		result = combineReductionQueueList(aReductionQueueList, result);

		final String resultLabel = "Result";

		propertyChangeSupport.firePropertyChange(resultLabel, oldResult, result.toString());

	}

	@Override
	public String toString() {// overriding the toString() method
		return MODEL;
	}

	@Override
	public BarrierInterface getBarrier() {
		return barrier;
	}

	@Override
	public JoinerInterface getJoiner() {
		return joiner;
	}

	@Override
	public BlockingQueue getKeyValueQueue() {
		return aKeyValueQueue;
	}

	@Override
	public List<LinkedList<KeyValueInterface<String, Integer>>> getReductionQueueList() {
		return aReductionQueueList;
	}

	@Override
	public void computeResult() {
		// TODO Auto-generated method stub

	}

	@Override
	public void terminate() {
		// TODO Auto-generated method stub
		for (int i = 0; i < threads.size(); i++) {
			threads.get(i).interrupt();

		}
	}

	@Override
	public Map<String, Integer> combineReductionQueueList(
			final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueueList,
			final Map<String, Integer> aResult) {
		Map<String, Integer> results = aResult;
		for (int i = 0; i < reductionQueueList.size(); i++) {
			final LinkedList<KeyValueInterface<String, Integer>> linkedList = reductionQueueList.get(i);

			results = getResults(reductionQueueList, aResult, i);
			traceAddedToMap(results, linkedList);
		}
		return results;
	}

	@Override
	public Map<String, Integer> getResults(
			final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueueList,
			final Map<String, Integer> resultMap, final int index) {
		final LinkedList<KeyValueInterface<String, Integer>> linkedList = reductionQueueList.get(index);
		final Map<String, Integer> results = resultMap;
		for (int listIndex = 0; listIndex < linkedList.size(); listIndex++) {
			results.put(linkedList.get(listIndex).getKey(), linkedList.get(listIndex).getValue());
		}
		return results;

	}

	@Override
	public BlockingQueue<KeyValueInterface<String, Integer>> enqueuer(final List<Thread> aThreads,
			final List<SlaveInterface> aSlaves, final BlockingQueue<KeyValueInterface<String, Integer>> keyValueQueue) {

		final BlockingQueue<KeyValueInterface<String, Integer>> keyValQueue = keyValueQueue;
		for (int i = 0; i < aThreads.size(); i++) {
			final KeyValueInterface<String, Integer> keyVal = new KeyValue<String, Integer>();
			keyVal.setKey(null);
			keyVal.setValue(null);
			try {
				traceEnqueueRequest(keyVal);
				keyValQueue.put(keyVal);
				traceEnqueue(keyValQueue);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			aSlaves.get(i).notifySlave();
		}
		return keyValQueue;

	}

	@Override
	public List<LinkedList<KeyValueInterface<String, Integer>>> notifySlaves(final List<SlaveInterface> aSlaves,
			final List<LinkedList<KeyValueInterface<String, Integer>>> redQueue) {
		final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueue = redQueue;
		for (int i = 0; i < aSlaves.size(); i++) {
			aSlaves.get(i).notifySlave();
			reductionQueue.add(i, new LinkedList<KeyValueInterface<String, Integer>>());
		}
		return reductionQueue;
	}

	@Override
	public BlockingQueue<KeyValueInterface<String, Integer>> mapping(
			final BlockingQueue<KeyValueInterface<String, Integer>> keyValueQueue, final List<String> listOfToken,
			final List<SlaveInterface> salves) {
		
		final TokenCountingMapperInterface<String, Integer> mapper = TokenCountingMapperFactory.getMapper();
		
		for (int i = 0; i < listOfToken.size(); i++) {
			final int slaveNum = i % slaves.size();
			slaves.get(slaveNum).notifySlave();
			final KeyValueInterface<String, Integer> keyVal = mapper.map(listOfToken.get(i));

			try {
				traceEnqueueRequest(keyVal);
				aKeyValueQueue.put(keyVal);
				traceEnqueue(keyValueQueue);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			slaves.get(slaveNum).notifySlave();
		}
		return aKeyValueQueue;
	}
}
]]></snapshot>
  </Command>
  <Command __id="7867" _type="PauseCommand" date="Tue Apr 12 10:12:39 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="51757094">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[46138]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7868" _type="MoveCaretCommand" caretOffset="3221" date="Tue Apr 12 10:12:39 EDT 2022" docOffset="3221" starttimestamp="1649721002230" timestamp="51757293" />
  <Command __id="7870" _type="PauseCommand" date="Tue Apr 12 10:12:44 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51761922">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4629]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7869" _type="MoveCaretCommand" caretOffset="3480" date="Tue Apr 12 10:12:44 EDT 2022" docOffset="3480" starttimestamp="1649721002230" timestamp="51761922" />
  <Command __id="7871" _type="MoveCaretCommand" caretOffset="3480" date="Tue Apr 12 10:12:44 EDT 2022" docOffset="3480" starttimestamp="1649721002230" timestamp="51761922" />
  <Command __id="7872" _type="MoveCaretCommand" caretOffset="3478" date="Tue Apr 12 10:12:44 EDT 2022" docOffset="3478" starttimestamp="1649721002230" timestamp="51762749" />
  <Command __id="7873" _type="MoveCaretCommand" caretOffset="3478" date="Tue Apr 12 10:12:44 EDT 2022" docOffset="3478" starttimestamp="1649721002230" timestamp="51762749" />
  <Command __id="7875" _type="InsertStringCommand" date="Tue Apr 12 10:12:45 EDT 2022" starttimestamp="1649721002230" timestamp="51763443" timestamp2="51763443">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7876" _type="InsertStringCommand" date="Tue Apr 12 10:12:45 EDT 2022" starttimestamp="1649721002230" timestamp="51763443" timestamp2="51763443">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7878" _type="InsertStringCommand" date="Tue Apr 12 10:12:45 EDT 2022" starttimestamp="1649721002230" timestamp="51763585" timestamp2="51763585">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7879" _type="InsertStringCommand" date="Tue Apr 12 10:12:45 EDT 2022" starttimestamp="1649721002230" timestamp="51763585" timestamp2="51763585">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7881" _type="InsertStringCommand" date="Tue Apr 12 10:12:46 EDT 2022" starttimestamp="1649721002230" timestamp="51764372" timestamp2="51764372">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7882" _type="InsertStringCommand" date="Tue Apr 12 10:12:46 EDT 2022" starttimestamp="1649721002230" timestamp="51764372" timestamp2="51764372">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7884" _type="InsertStringCommand" date="Tue Apr 12 10:12:46 EDT 2022" starttimestamp="1649721002230" timestamp="51764544" timestamp2="51764544">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7885" _type="InsertStringCommand" date="Tue Apr 12 10:12:46 EDT 2022" starttimestamp="1649721002230" timestamp="51764544" timestamp2="51764544">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="7887" _type="InsertStringCommand" date="Tue Apr 12 10:12:47 EDT 2022" starttimestamp="1649721002230" timestamp="51764994" timestamp2="51764994">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7888" _type="InsertStringCommand" date="Tue Apr 12 10:12:47 EDT 2022" starttimestamp="1649721002230" timestamp="51764994" timestamp2="51764994">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7894" _type="PasteCommand" date="Tue Apr 12 10:12:47 EDT 2022" starttimestamp="1649721002230" timestamp="51765639" />
  <Command __id="7896" _type="PauseCommand" date="Tue Apr 12 10:12:52 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="51770763">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[5124]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="7895" _type="SelectTextCommand" caretOffset="3565" date="Tue Apr 12 10:12:52 EDT 2022" end="3579" start="3565" starttimestamp="1649721002230" timestamp="51770763" />
  <Command __id="7897" _type="SelectTextCommand" caretOffset="3565" date="Tue Apr 12 10:12:52 EDT 2022" end="3579" start="3565" starttimestamp="1649721002230" timestamp="51770764" />
  <Command __id="7899" _type="PauseCommand" date="Tue Apr 12 10:12:59 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="51777153">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[6389]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7898" _type="MoveCaretCommand" caretOffset="3579" date="Tue Apr 12 10:12:59 EDT 2022" docOffset="3579" starttimestamp="1649721002230" timestamp="51777153" />
  <Command __id="7900" _type="MoveCaretCommand" caretOffset="3579" date="Tue Apr 12 10:12:59 EDT 2022" docOffset="3579" starttimestamp="1649721002230" timestamp="51777153" />
  <Command __id="7902" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:00 EDT 2022" starttimestamp="1649721002230" timestamp="51778149" />
  <Command __id="7903" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:00 EDT 2022" starttimestamp="1649721002230" timestamp="51778149" />
  <Command __id="7905" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:00 EDT 2022" starttimestamp="1649721002230" timestamp="51778316" />
  <Command __id="7906" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:00 EDT 2022" starttimestamp="1649721002230" timestamp="51778316" />
  <Command __id="7908" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:00 EDT 2022" starttimestamp="1649721002230" timestamp="51778477" />
  <Command __id="7909" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:00 EDT 2022" starttimestamp="1649721002230" timestamp="51778477" />
  <Command __id="7911" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:00 EDT 2022" starttimestamp="1649721002230" timestamp="51778626" />
  <Command __id="7912" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:00 EDT 2022" starttimestamp="1649721002230" timestamp="51778627" />
  <Command __id="7914" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51778775" />
  <Command __id="7915" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51778775" />
  <Command __id="7917" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51778939" />
  <Command __id="7918" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51778939" />
  <Command __id="7920" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51779099" />
  <Command __id="7921" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51779099" />
  <Command __id="7923" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51779268" />
  <Command __id="7924" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51779268" />
  <Command __id="7926" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51779427" />
  <Command __id="7927" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51779427" />
  <Command __id="7929" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51779585" />
  <Command __id="7930" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51779585" />
  <Command __id="7932" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51779727" />
  <Command __id="7933" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:01 EDT 2022" starttimestamp="1649721002230" timestamp="51779727" />
  <Command __id="7935" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:02 EDT 2022" starttimestamp="1649721002230" timestamp="51779875" />
  <Command __id="7936" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:02 EDT 2022" starttimestamp="1649721002230" timestamp="51779884" />
  <Command __id="7938" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:02 EDT 2022" starttimestamp="1649721002230" timestamp="51780017" />
  <Command __id="7939" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:02 EDT 2022" starttimestamp="1649721002230" timestamp="51780017" />
  <Command __id="7941" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:02 EDT 2022" starttimestamp="1649721002230" timestamp="51780418" />
  <Command __id="7942" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:02 EDT 2022" starttimestamp="1649721002230" timestamp="51780418" />
  <Command __id="7944" _type="InsertStringCommand" date="Tue Apr 12 10:13:02 EDT 2022" starttimestamp="1649721002230" timestamp="51780571" timestamp2="51780571">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="7945" _type="InsertStringCommand" date="Tue Apr 12 10:13:02 EDT 2022" starttimestamp="1649721002230" timestamp="51780571" timestamp2="51780571">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="7947" _type="InsertStringCommand" date="Tue Apr 12 10:13:03 EDT 2022" starttimestamp="1649721002230" timestamp="51780921" timestamp2="51780921">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7948" _type="InsertStringCommand" date="Tue Apr 12 10:13:03 EDT 2022" starttimestamp="1649721002230" timestamp="51780922" timestamp2="51780922">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7950" _type="InsertStringCommand" date="Tue Apr 12 10:13:03 EDT 2022" starttimestamp="1649721002230" timestamp="51781211" timestamp2="51781211">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7951" _type="InsertStringCommand" date="Tue Apr 12 10:13:03 EDT 2022" starttimestamp="1649721002230" timestamp="51781211" timestamp2="51781211">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7953" _type="InsertStringCommand" date="Tue Apr 12 10:13:03 EDT 2022" starttimestamp="1649721002230" timestamp="51781663" timestamp2="51781663">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7954" _type="InsertStringCommand" date="Tue Apr 12 10:13:03 EDT 2022" starttimestamp="1649721002230" timestamp="51781663" timestamp2="51781663">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7956" _type="InsertStringCommand" date="Tue Apr 12 10:13:04 EDT 2022" starttimestamp="1649721002230" timestamp="51782042" timestamp2="51782042">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="7957" _type="InsertStringCommand" date="Tue Apr 12 10:13:04 EDT 2022" starttimestamp="1649721002230" timestamp="51782042" timestamp2="51782042">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="7959" _type="InsertStringCommand" date="Tue Apr 12 10:13:04 EDT 2022" starttimestamp="1649721002230" timestamp="51782310" timestamp2="51782310">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="7960" _type="InsertStringCommand" date="Tue Apr 12 10:13:04 EDT 2022" starttimestamp="1649721002230" timestamp="51782310" timestamp2="51782310">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="7962" _type="InsertStringCommand" date="Tue Apr 12 10:13:04 EDT 2022" starttimestamp="1649721002230" timestamp="51782429" timestamp2="51782429">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7963" _type="InsertStringCommand" date="Tue Apr 12 10:13:04 EDT 2022" starttimestamp="1649721002230" timestamp="51782429" timestamp2="51782429">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7965" _type="InsertStringCommand" date="Tue Apr 12 10:13:04 EDT 2022" starttimestamp="1649721002230" timestamp="51782657" timestamp2="51782657">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7966" _type="InsertStringCommand" date="Tue Apr 12 10:13:04 EDT 2022" starttimestamp="1649721002230" timestamp="51782657" timestamp2="51782657">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7968" _type="InsertStringCommand" date="Tue Apr 12 10:13:04 EDT 2022" starttimestamp="1649721002230" timestamp="51782719" timestamp2="51782719">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7969" _type="InsertStringCommand" date="Tue Apr 12 10:13:04 EDT 2022" starttimestamp="1649721002230" timestamp="51782719" timestamp2="51782719">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7971" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51782922" timestamp2="51782922">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7972" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51782931" timestamp2="51782931">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7974" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51783263" timestamp2="51783263">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="7975" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51783263" timestamp2="51783263">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="7977" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51783434" timestamp2="51783434">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7978" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51783434" timestamp2="51783434">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7980" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51783514" timestamp2="51783514">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7981" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51783514" timestamp2="51783514">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7983" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51783696" timestamp2="51783696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7984" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51783696" timestamp2="51783696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7986" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51783734" timestamp2="51783734">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7987" _type="InsertStringCommand" date="Tue Apr 12 10:13:05 EDT 2022" starttimestamp="1649721002230" timestamp="51783734" timestamp2="51783734">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7989" _type="InsertStringCommand" date="Tue Apr 12 10:13:06 EDT 2022" starttimestamp="1649721002230" timestamp="51783945" timestamp2="51783945">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7990" _type="InsertStringCommand" date="Tue Apr 12 10:13:06 EDT 2022" starttimestamp="1649721002230" timestamp="51783945" timestamp2="51783945">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7992" _type="InsertStringCommand" date="Tue Apr 12 10:13:06 EDT 2022" starttimestamp="1649721002230" timestamp="51783983" timestamp2="51783983">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7993" _type="InsertStringCommand" date="Tue Apr 12 10:13:06 EDT 2022" starttimestamp="1649721002230" timestamp="51783984" timestamp2="51783984">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7995" _type="InsertStringCommand" date="Tue Apr 12 10:13:06 EDT 2022" starttimestamp="1649721002230" timestamp="51784185" timestamp2="51784185">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7996" _type="InsertStringCommand" date="Tue Apr 12 10:13:06 EDT 2022" starttimestamp="1649721002230" timestamp="51784185" timestamp2="51784185">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7998" _type="InsertStringCommand" date="Tue Apr 12 10:13:06 EDT 2022" starttimestamp="1649721002230" timestamp="51784396" timestamp2="51784396">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7999" _type="InsertStringCommand" date="Tue Apr 12 10:13:06 EDT 2022" starttimestamp="1649721002230" timestamp="51784396" timestamp2="51784396">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8001" _type="PauseCommand" date="Tue Apr 12 10:13:11 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51788921">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4525]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8000" _type="MoveCaretCommand" caretOffset="3605" date="Tue Apr 12 10:13:11 EDT 2022" docOffset="3605" starttimestamp="1649721002230" timestamp="51788921" />
  <Command __id="8002" _type="MoveCaretCommand" caretOffset="3605" date="Tue Apr 12 10:13:11 EDT 2022" docOffset="3605" starttimestamp="1649721002230" timestamp="51788923" />
  <Command __id="7866" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:12:39 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3420" docExpressionCount="347" docLength="3776" projectName="A6" starttimestamp="1649721002230" timestamp="51757094">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;"), Diff(INSERT,"¶import java.util.concurrent.ArrayBlockingQueue;¶import assignments.util.MiscAssignmentUtils;"), Diff(EQUAL,"¶¶import client.ClientRemoteInterfaceGIPC;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶"), Diff(DELETE,"	"), Diff(EQUAL,"¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	"), Diff(INSERT,"ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶"), Diff(EQUAL,"¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶"), Diff(INSERT,"¶"), Diff(EQUAL,"	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶"), Diff(INSERT,"¶"), Diff(EQUAL,"//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶"), Diff(INSERT,"¶"), Diff(EQUAL,"	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);"), Diff(DELETE,"		"), Diff(EQUAL,"¶			nioManager.enableListenableAccepts(aServerFactoryChannel,"), Diff(DELETE,"¶					"), Diff(INSERT," "), Diff(EQUAL,"SelectionKey.OP_READ, // allow incoming writes"), Diff(INSERT,"¶																							//"), Diff(EQUAL," that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}"), Diff(DELETE,"		"), Diff(EQUAL,"¶	}¶"), Diff(INSERT,"¶"), Diff(EQUAL,"	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶"), Diff(DELETE,"		"), Diff(EQUAL,"¶		//"), Diff(INSERT," "), Diff(EQUAL,"save aSocketChannel¶		socketList.add(aSocketChannel);¶	}¶"), Diff(INSERT,"¶"), Diff(EQUAL,"	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶"), Diff(INSERT,"		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶"), Diff(EQUAL,"		String aMessageString = new String(aMessage.array(), aMessage.position(),"), Diff(DELETE,"¶				"), Diff(INSERT," "), Diff(EQUAL,"aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶"), Diff(DELETE,"		"), Diff(EQUAL,"¶		//"), Diff(DELETE,"TODO echo the message right back to the same client¶		//Turn of the servers reading ability"), Diff(INSERT," Pop value off the bounded buffer¶		ByteBuffer originalMessage = null;¶		try {"), Diff(EQUAL,"¶		"), Diff(INSERT,"	"), Diff(DELETE,"//nioManager.write(socketChannel, aWriteMessage, this);¶		//turn on the client's reading ability"), Diff(INSERT,"originalMessage = boundedBuffer.take();¶		} catch (InterruptedException e) {¶			e.printStackTrace();"), Diff(EQUAL,"¶		"), Diff(INSERT,"}"), Diff(EQUAL,"¶		"), Diff(DELETE,"String line = "The server is sending a"), Diff(INSERT,"// Echo recieve"), Diff(EQUAL," message to "), Diff(INSERT,"all "), Diff(EQUAL,"clients"), Diff(DELETE,"";¶		ByteBuffer aWriteMessage = ByteBuffer.wrap(line.getBytes());"), Diff(INSERT," (except original message sender)¶		for (SocketChannel socket : socketList) {¶			if (!socket.equals(aSocketChannel)) {"), Diff(EQUAL,"¶		"), Diff(INSERT,"	"), Diff(INSERT,"	"), Diff(EQUAL,"nioManager.write("), Diff(DELETE,"aS"), Diff(INSERT,"s"), Diff(EQUAL,"ocket"), Diff(DELETE,"Channel, aWrite"), Diff(INSERT,", original"), Diff(EQUAL,"Message, this);¶"), Diff(INSERT,"			}¶		}¶¶"), Diff(EQUAL,"	}¶"), Diff(INSERT,"¶"), Diff(EQUAL,"	@Override¶	public void written(SocketChannel "), Diff(DELETE,"arg0"), Diff(INSERT,"socket"), Diff(EQUAL,", ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: ""), Diff(INSERT," "), Diff(EQUAL,"+ aMessageString"), Diff(INSERT," "), Diff(EQUAL,"+ "-->" + "), Diff(DELETE,"arg0"), Diff(INSERT,"socket"), Diff(EQUAL,");¶	}"), Diff(DELETE,"¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import assignments.util.MiscAssignmentUtils;

import client.ClientRemoteInterfaceGIPC;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {

	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);

	protected NIOManager nioManager = NIOManagerFactory.getSingleton();

	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		// Pop value off the bounded buffer
		ByteBuffer originalMessage = null;
		try {
			originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		// Echo recieve message to all clients (except original message sender)
		for (SocketChannel socket : socketList) {
			if (!socket.equals(aSocketChannel)) {
				nioManager.write(socket, originalMessage, this);
			}
		}

	}

	@Override
	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="7874" _type="Insert" date="Tue Apr 12 10:12:45 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3432" docExpressionCount="347" docLength="3790" length="14" offset="3478" repeat="5" starttimestamp="1649721002230" timestamp="51763412" timestamp2="51764960">
    <text><![CDATA[
		
		//
		]]></text>
  </DocumentChange>
  <DocumentChange __id="7889" _type="Replace" date="Tue Apr 12 10:12:47 EDT 2022" docASTNodeCount="524" docActiveCodeLength="3592" docExpressionCount="366" docLength="3950" endLine="94" insertionLength="162" int_docASTNodeCount="493" int_docActiveCodeLength="3430" int_docExpressionCount="347" int_docLength="3788" length="2" offset="3490" startLine="94" starttimestamp="1649721002230" timestamp="51765237">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		final SlaveInterface newSlave = new Slave(i, this);
		slaves.add(newSlave);

		final Thread slaveThread = new Thread(newSlave);
		slaveThread.setName(name);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7890" _type="Insert" date="Tue Apr 12 10:12:47 EDT 2022" docASTNodeCount="536" docActiveCodeLength="3659" docExpressionCount="376" docLength="4017" length="67" offset="435" repeat="4" starttimestamp="1649721002230" timestamp="51765513" timestamp2="51765521">
    <text><![CDATA[
import comp533.salve.Slave;
import comp533.salve.SlaveInterface;]]></text>
  </DocumentChange>
  <DocumentChange __id="7901" _type="Delete" date="Tue Apr 12 10:13:00 EDT 2022" docASTNodeCount="534" docActiveCodeLength="3645" docExpressionCount="375" docLength="4003" endLine="96" length="14" offset="3565" repeat="14" startLine="96" starttimestamp="1649721002230" timestamp="51778149" timestamp2="51780409">
    <text><![CDATA[SlaveInterface]]></text>
  </DocumentChange>
  <DocumentChange __id="7943" _type="Insert" date="Tue Apr 12 10:13:02 EDT 2022" docASTNodeCount="536" docActiveCodeLength="3664" docExpressionCount="376" docLength="4022" length="19" offset="3565" repeat="19" starttimestamp="1649721002230" timestamp="51780557" timestamp2="51784376">
    <text><![CDATA[ReadThreadInterface]]></text>
  </DocumentChange>
  <Command __id="8004" _type="PauseCommand" date="Tue Apr 12 10:13:16 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="51794557">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5634]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="8003" _type="Delete" date="Tue Apr 12 10:13:16 EDT 2022" docASTNodeCount="511" docActiveCodeLength="3659" docExpressionCount="359" docLength="4017" endLine="96" length="5" offset="3600" repeat="5" startLine="96" starttimestamp="1649721002230" timestamp="51794557" timestamp2="51795245">
    <text><![CDATA[Slave]]></text>
  </DocumentChange>
  <Command __id="8005" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:16 EDT 2022" starttimestamp="1649721002230" timestamp="51794577" />
  <Command __id="8006" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:16 EDT 2022" starttimestamp="1649721002230" timestamp="51794577" />
  <Command __id="8008" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:16 EDT 2022" starttimestamp="1649721002230" timestamp="51794752" />
  <Command __id="8009" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:16 EDT 2022" starttimestamp="1649721002230" timestamp="51794752" />
  <Command __id="8011" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:17 EDT 2022" starttimestamp="1649721002230" timestamp="51794933" />
  <Command __id="8012" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:17 EDT 2022" starttimestamp="1649721002230" timestamp="51794933" />
  <Command __id="8014" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:17 EDT 2022" starttimestamp="1649721002230" timestamp="51795106" />
  <Command __id="8015" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:17 EDT 2022" starttimestamp="1649721002230" timestamp="51795106" />
  <Command __id="8017" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:17 EDT 2022" starttimestamp="1649721002230" timestamp="51795253" />
  <Command __id="8018" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:17 EDT 2022" starttimestamp="1649721002230" timestamp="51795253" />
  <Command __id="8020" _type="InsertStringCommand" date="Tue Apr 12 10:13:17 EDT 2022" starttimestamp="1649721002230" timestamp="51795635" timestamp2="51795635">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8021" _type="InsertStringCommand" date="Tue Apr 12 10:13:17 EDT 2022" starttimestamp="1649721002230" timestamp="51795635" timestamp2="51795635">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8023" _type="InsertStringCommand" date="Tue Apr 12 10:13:18 EDT 2022" starttimestamp="1649721002230" timestamp="51795875" timestamp2="51795875">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8024" _type="InsertStringCommand" date="Tue Apr 12 10:13:18 EDT 2022" starttimestamp="1649721002230" timestamp="51795875" timestamp2="51795875">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8026" _type="InsertStringCommand" date="Tue Apr 12 10:13:18 EDT 2022" starttimestamp="1649721002230" timestamp="51796231" timestamp2="51796231">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8027" _type="InsertStringCommand" date="Tue Apr 12 10:13:18 EDT 2022" starttimestamp="1649721002230" timestamp="51796231" timestamp2="51796231">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8029" _type="InsertStringCommand" date="Tue Apr 12 10:13:18 EDT 2022" starttimestamp="1649721002230" timestamp="51796407" timestamp2="51796407">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="8030" _type="InsertStringCommand" date="Tue Apr 12 10:13:18 EDT 2022" starttimestamp="1649721002230" timestamp="51796407" timestamp2="51796407">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="8032" _type="InsertStringCommand" date="Tue Apr 12 10:13:18 EDT 2022" starttimestamp="1649721002230" timestamp="51796590" timestamp2="51796590">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8033" _type="InsertStringCommand" date="Tue Apr 12 10:13:18 EDT 2022" starttimestamp="1649721002230" timestamp="51796590" timestamp2="51796590">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8035" _type="InsertStringCommand" date="Tue Apr 12 10:13:18 EDT 2022" starttimestamp="1649721002230" timestamp="51796743" timestamp2="51796743">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="8036" _type="InsertStringCommand" date="Tue Apr 12 10:13:18 EDT 2022" starttimestamp="1649721002230" timestamp="51796743" timestamp2="51796743">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="8038" _type="InsertStringCommand" date="Tue Apr 12 10:13:19 EDT 2022" starttimestamp="1649721002230" timestamp="51796812" timestamp2="51796812">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8039" _type="InsertStringCommand" date="Tue Apr 12 10:13:19 EDT 2022" starttimestamp="1649721002230" timestamp="51796812" timestamp2="51796812">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8041" _type="InsertStringCommand" date="Tue Apr 12 10:13:19 EDT 2022" starttimestamp="1649721002230" timestamp="51797309" timestamp2="51797309">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="8042" _type="InsertStringCommand" date="Tue Apr 12 10:13:19 EDT 2022" starttimestamp="1649721002230" timestamp="51797309" timestamp2="51797309">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="8044" _type="InsertStringCommand" date="Tue Apr 12 10:13:19 EDT 2022" starttimestamp="1649721002230" timestamp="51797494" timestamp2="51797494">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8045" _type="InsertStringCommand" date="Tue Apr 12 10:13:19 EDT 2022" starttimestamp="1649721002230" timestamp="51797494" timestamp2="51797494">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8047" _type="InsertStringCommand" date="Tue Apr 12 10:13:19 EDT 2022" starttimestamp="1649721002230" timestamp="51797580" timestamp2="51797580">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8048" _type="InsertStringCommand" date="Tue Apr 12 10:13:19 EDT 2022" starttimestamp="1649721002230" timestamp="51797580" timestamp2="51797580">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8050" _type="InsertStringCommand" date="Tue Apr 12 10:13:20 EDT 2022" starttimestamp="1649721002230" timestamp="51797794" timestamp2="51797794">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="8051" _type="InsertStringCommand" date="Tue Apr 12 10:13:20 EDT 2022" starttimestamp="1649721002230" timestamp="51797794" timestamp2="51797794">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="8053" _type="InsertStringCommand" date="Tue Apr 12 10:13:20 EDT 2022" starttimestamp="1649721002230" timestamp="51797965" timestamp2="51797965">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8054" _type="InsertStringCommand" date="Tue Apr 12 10:13:20 EDT 2022" starttimestamp="1649721002230" timestamp="51797965" timestamp2="51797965">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8056" _type="InsertStringCommand" date="Tue Apr 12 10:13:20 EDT 2022" starttimestamp="1649721002230" timestamp="51798042" timestamp2="51798042">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8057" _type="InsertStringCommand" date="Tue Apr 12 10:13:20 EDT 2022" starttimestamp="1649721002230" timestamp="51798042" timestamp2="51798042">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8059" _type="InsertStringCommand" date="Tue Apr 12 10:13:20 EDT 2022" starttimestamp="1649721002230" timestamp="51798474" timestamp2="51798474">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="8060" _type="InsertStringCommand" date="Tue Apr 12 10:13:20 EDT 2022" starttimestamp="1649721002230" timestamp="51798474" timestamp2="51798474">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="8062" _type="InsertStringCommand" date="Tue Apr 12 10:13:20 EDT 2022" starttimestamp="1649721002230" timestamp="51798695" timestamp2="51798695">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8063" _type="InsertStringCommand" date="Tue Apr 12 10:13:20 EDT 2022" starttimestamp="1649721002230" timestamp="51798696" timestamp2="51798696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8065" _type="InsertStringCommand" date="Tue Apr 12 10:13:21 EDT 2022" starttimestamp="1649721002230" timestamp="51798803" timestamp2="51798803">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8066" _type="InsertStringCommand" date="Tue Apr 12 10:13:21 EDT 2022" starttimestamp="1649721002230" timestamp="51798803" timestamp2="51798803">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8068" _type="InsertStringCommand" date="Tue Apr 12 10:13:21 EDT 2022" starttimestamp="1649721002230" timestamp="51798995" timestamp2="51798995">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8069" _type="InsertStringCommand" date="Tue Apr 12 10:13:21 EDT 2022" starttimestamp="1649721002230" timestamp="51798995" timestamp2="51798995">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8071" _type="InsertStringCommand" date="Tue Apr 12 10:13:21 EDT 2022" starttimestamp="1649721002230" timestamp="51799564" timestamp2="51799564">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8072" _type="InsertStringCommand" date="Tue Apr 12 10:13:21 EDT 2022" starttimestamp="1649721002230" timestamp="51799564" timestamp2="51799564">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8074" _type="InsertStringCommand" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51799804" timestamp2="51799804">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8075" _type="InsertStringCommand" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51799804" timestamp2="51799804">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8077" _type="InsertStringCommand" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51799830" timestamp2="51799830">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8078" _type="InsertStringCommand" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51799830" timestamp2="51799830">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8080" _type="InsertStringCommand" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51799921" timestamp2="51799921">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8081" _type="InsertStringCommand" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51799921" timestamp2="51799921">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8083" _type="InsertStringCommand" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51800006" timestamp2="51800006">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8084" _type="InsertStringCommand" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51800007" timestamp2="51800007">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8086" _type="InsertStringCommand" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51800178" timestamp2="51800178">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8087" _type="InsertStringCommand" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51800178" timestamp2="51800178">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8088" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51800711" />
  <Command __id="8089" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 10:13:22 EDT 2022" starttimestamp="1649721002230" timestamp="51800711" />
  <Command __id="8104" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:13:25 EDT 2022" starttimestamp="1649721002230" timestamp="51803572" />
  <Command __id="8106" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:13:25 EDT 2022" starttimestamp="1649721002230" timestamp="51803604" />
  <Command __id="8107" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:13:25 EDT 2022" starttimestamp="1649721002230" timestamp="51803637" />
  <Command __id="8109" _type="PauseCommand" date="Tue Apr 12 10:13:29 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51807678">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4041]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8108" _type="ShellCommand" date="Tue Apr 12 10:13:29 EDT 2022" starttimestamp="1649721002230" timestamp="51807678" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8110" _type="ShellCommand" date="Tue Apr 12 10:13:30 EDT 2022" starttimestamp="1649721002230" timestamp="51807842" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8114" _type="PauseCommand" date="Tue Apr 12 10:13:32 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51810673">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2804]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8113" _type="SelectTextCommand" caretOffset="3625" date="Tue Apr 12 10:13:32 EDT 2022" end="3632" start="3625" starttimestamp="1649721002230" timestamp="51810673" />
  <Command __id="8115" _type="SelectTextCommand" caretOffset="3625" date="Tue Apr 12 10:13:32 EDT 2022" end="3632" start="3625" starttimestamp="1649721002230" timestamp="51810673" />
  <Command __id="8117" _type="InsertStringCommand" date="Tue Apr 12 10:13:33 EDT 2022" starttimestamp="1649721002230" timestamp="51811412" timestamp2="51811412">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8118" _type="InsertStringCommand" date="Tue Apr 12 10:13:33 EDT 2022" starttimestamp="1649721002230" timestamp="51811412" timestamp2="51811412">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8120" _type="InsertStringCommand" date="Tue Apr 12 10:13:33 EDT 2022" starttimestamp="1649721002230" timestamp="51811527" timestamp2="51811527">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8121" _type="InsertStringCommand" date="Tue Apr 12 10:13:33 EDT 2022" starttimestamp="1649721002230" timestamp="51811527" timestamp2="51811527">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8123" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 10:13:34 EDT 2022" starttimestamp="1649721002230" timestamp="51812210" />
  <Command __id="8125" _type="InsertStringCommand" date="Tue Apr 12 10:13:34 EDT 2022" starttimestamp="1649721002230" timestamp="51812408" timestamp2="51812408">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8126" _type="InsertStringCommand" date="Tue Apr 12 10:13:34 EDT 2022" starttimestamp="1649721002230" timestamp="51812409" timestamp2="51812409">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8128" _type="InsertStringCommand" date="Tue Apr 12 10:13:35 EDT 2022" starttimestamp="1649721002230" timestamp="51812856" timestamp2="51812856">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8129" _type="InsertStringCommand" date="Tue Apr 12 10:13:35 EDT 2022" starttimestamp="1649721002230" timestamp="51812856" timestamp2="51812856">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8131" _type="InsertStringCommand" date="Tue Apr 12 10:13:35 EDT 2022" starttimestamp="1649721002230" timestamp="51813307" timestamp2="51813307">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8132" _type="InsertStringCommand" date="Tue Apr 12 10:13:35 EDT 2022" starttimestamp="1649721002230" timestamp="51813307" timestamp2="51813307">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8134" _type="InsertStringCommand" date="Tue Apr 12 10:13:35 EDT 2022" starttimestamp="1649721002230" timestamp="51813572" timestamp2="51813572">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8135" _type="InsertStringCommand" date="Tue Apr 12 10:13:35 EDT 2022" starttimestamp="1649721002230" timestamp="51813572" timestamp2="51813572">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8137" _type="InsertStringCommand" date="Tue Apr 12 10:13:35 EDT 2022" starttimestamp="1649721002230" timestamp="51813659" timestamp2="51813659">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8138" _type="InsertStringCommand" date="Tue Apr 12 10:13:35 EDT 2022" starttimestamp="1649721002230" timestamp="51813659" timestamp2="51813659">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8140" _type="InsertStringCommand" date="Tue Apr 12 10:13:36 EDT 2022" starttimestamp="1649721002230" timestamp="51813786" timestamp2="51813786">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8141" _type="InsertStringCommand" date="Tue Apr 12 10:13:36 EDT 2022" starttimestamp="1649721002230" timestamp="51813787" timestamp2="51813787">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8143" _type="InsertStringCommand" date="Tue Apr 12 10:13:36 EDT 2022" starttimestamp="1649721002230" timestamp="51813877" timestamp2="51813877">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8144" _type="InsertStringCommand" date="Tue Apr 12 10:13:36 EDT 2022" starttimestamp="1649721002230" timestamp="51813877" timestamp2="51813877">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8146" _type="InsertStringCommand" date="Tue Apr 12 10:13:36 EDT 2022" starttimestamp="1649721002230" timestamp="51814050" timestamp2="51814050">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8147" _type="InsertStringCommand" date="Tue Apr 12 10:13:36 EDT 2022" starttimestamp="1649721002230" timestamp="51814050" timestamp2="51814050">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8149" _type="PauseCommand" date="Tue Apr 12 10:13:39 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51816929">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2879]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8148" _type="SelectTextCommand" caretOffset="3672" date="Tue Apr 12 10:13:39 EDT 2022" end="3693" start="3672" starttimestamp="1649721002230" timestamp="51816929" />
  <Command __id="8150" _type="SelectTextCommand" caretOffset="3672" date="Tue Apr 12 10:13:39 EDT 2022" end="3693" start="3672" starttimestamp="1649721002230" timestamp="51816931" />
  <Command __id="8152" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:39 EDT 2022" starttimestamp="1649721002230" timestamp="51817129" />
  <Command __id="8153" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:39 EDT 2022" starttimestamp="1649721002230" timestamp="51817129" />
  <Command __id="8155" _type="PauseCommand" date="Tue Apr 12 10:13:40 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51818245">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1116]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8154" _type="MoveCaretCommand" caretOffset="3595" date="Tue Apr 12 10:13:40 EDT 2022" docOffset="3595" starttimestamp="1649721002230" timestamp="51818245" />
  <Command __id="8156" _type="MoveCaretCommand" caretOffset="3595" date="Tue Apr 12 10:13:40 EDT 2022" docOffset="3595" starttimestamp="1649721002230" timestamp="51818245" />
  <Command __id="8158" _type="InsertStringCommand" date="Tue Apr 12 10:13:40 EDT 2022" starttimestamp="1649721002230" timestamp="51818637" timestamp2="51818637">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8159" _type="InsertStringCommand" date="Tue Apr 12 10:13:40 EDT 2022" starttimestamp="1649721002230" timestamp="51818637" timestamp2="51818637">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8161" _type="InsertStringCommand" date="Tue Apr 12 10:13:41 EDT 2022" starttimestamp="1649721002230" timestamp="51818858" timestamp2="51818858">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8162" _type="InsertStringCommand" date="Tue Apr 12 10:13:41 EDT 2022" starttimestamp="1649721002230" timestamp="51818858" timestamp2="51818858">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8164" _type="InsertStringCommand" date="Tue Apr 12 10:13:41 EDT 2022" starttimestamp="1649721002230" timestamp="51818925" timestamp2="51818925">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8165" _type="InsertStringCommand" date="Tue Apr 12 10:13:41 EDT 2022" starttimestamp="1649721002230" timestamp="51818925" timestamp2="51818925">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8167" _type="InsertStringCommand" date="Tue Apr 12 10:13:41 EDT 2022" starttimestamp="1649721002230" timestamp="51818996" timestamp2="51818996">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8168" _type="InsertStringCommand" date="Tue Apr 12 10:13:41 EDT 2022" starttimestamp="1649721002230" timestamp="51818996" timestamp2="51818996">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8170" _type="InsertStringCommand" date="Tue Apr 12 10:13:41 EDT 2022" starttimestamp="1649721002230" timestamp="51819462" timestamp2="51819462">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8171" _type="InsertStringCommand" date="Tue Apr 12 10:13:41 EDT 2022" starttimestamp="1649721002230" timestamp="51819462" timestamp2="51819462">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8173" _type="InsertStringCommand" date="Tue Apr 12 10:13:42 EDT 2022" starttimestamp="1649721002230" timestamp="51820081" timestamp2="51820081">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8174" _type="InsertStringCommand" date="Tue Apr 12 10:13:42 EDT 2022" starttimestamp="1649721002230" timestamp="51820081" timestamp2="51820081">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8176" _type="InsertStringCommand" date="Tue Apr 12 10:13:42 EDT 2022" starttimestamp="1649721002230" timestamp="51820288" timestamp2="51820288">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8177" _type="InsertStringCommand" date="Tue Apr 12 10:13:42 EDT 2022" starttimestamp="1649721002230" timestamp="51820289" timestamp2="51820289">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8179" _type="InsertStringCommand" date="Tue Apr 12 10:13:42 EDT 2022" starttimestamp="1649721002230" timestamp="51820375" timestamp2="51820375">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8180" _type="InsertStringCommand" date="Tue Apr 12 10:13:42 EDT 2022" starttimestamp="1649721002230" timestamp="51820375" timestamp2="51820375">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8182" _type="InsertStringCommand" date="Tue Apr 12 10:13:42 EDT 2022" starttimestamp="1649721002230" timestamp="51820471" timestamp2="51820471">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="8183" _type="InsertStringCommand" date="Tue Apr 12 10:13:42 EDT 2022" starttimestamp="1649721002230" timestamp="51820471" timestamp2="51820471">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="8185" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:43 EDT 2022" starttimestamp="1649721002230" timestamp="51820790" />
  <Command __id="8186" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:43 EDT 2022" starttimestamp="1649721002230" timestamp="51820790" />
  <Command __id="8188" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:43 EDT 2022" starttimestamp="1649721002230" timestamp="51820965" />
  <Command __id="8189" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:43 EDT 2022" starttimestamp="1649721002230" timestamp="51820965" />
  <Command __id="8191" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:43 EDT 2022" starttimestamp="1649721002230" timestamp="51821114" />
  <Command __id="8192" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:43 EDT 2022" starttimestamp="1649721002230" timestamp="51821116" />
  <Command __id="8194" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:43 EDT 2022" starttimestamp="1649721002230" timestamp="51821287" />
  <Command __id="8195" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:43 EDT 2022" starttimestamp="1649721002230" timestamp="51821287" />
  <Command __id="8197" _type="InsertStringCommand" date="Tue Apr 12 10:13:43 EDT 2022" starttimestamp="1649721002230" timestamp="51821411" timestamp2="51821411">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8198" _type="InsertStringCommand" date="Tue Apr 12 10:13:43 EDT 2022" starttimestamp="1649721002230" timestamp="51821411" timestamp2="51821411">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8200" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51821796" timestamp2="51821796">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8201" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51821796" timestamp2="51821796">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8203" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51822130" timestamp2="51822130">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8204" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51822130" timestamp2="51822130">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8206" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51822213" timestamp2="51822213">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8207" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51822214" timestamp2="51822214">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8209" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51822259" timestamp2="51822259">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="8210" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51822259" timestamp2="51822259">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="8212" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51822464" timestamp2="51822464">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8213" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51822464" timestamp2="51822464">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8215" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51822713" timestamp2="51822713">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8216" _type="InsertStringCommand" date="Tue Apr 12 10:13:44 EDT 2022" starttimestamp="1649721002230" timestamp="51822713" timestamp2="51822713">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8218" _type="InsertStringCommand" date="Tue Apr 12 10:13:45 EDT 2022" starttimestamp="1649721002230" timestamp="51822779" timestamp2="51822779">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8219" _type="InsertStringCommand" date="Tue Apr 12 10:13:45 EDT 2022" starttimestamp="1649721002230" timestamp="51822779" timestamp2="51822779">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8221" _type="InsertStringCommand" date="Tue Apr 12 10:13:45 EDT 2022" starttimestamp="1649721002230" timestamp="51822859" timestamp2="51822859">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8222" _type="InsertStringCommand" date="Tue Apr 12 10:13:45 EDT 2022" starttimestamp="1649721002230" timestamp="51822859" timestamp2="51822859">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8224" _type="InsertStringCommand" date="Tue Apr 12 10:13:45 EDT 2022" starttimestamp="1649721002230" timestamp="51823061" timestamp2="51823061">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8225" _type="InsertStringCommand" date="Tue Apr 12 10:13:45 EDT 2022" starttimestamp="1649721002230" timestamp="51823061" timestamp2="51823061">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8227" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51823958" timestamp2="51823958">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8228" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51823959" timestamp2="51823959">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8230" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51824215" timestamp2="51824215">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8231" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51824215" timestamp2="51824215">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8233" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51824230" timestamp2="51824230">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8234" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51824230" timestamp2="51824230">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8236" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51824350" timestamp2="51824350">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8237" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51824350" timestamp2="51824350">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8239" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51824407" timestamp2="51824407">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8240" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51824408" timestamp2="51824408">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8242" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51824626" timestamp2="51824626">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8243" _type="InsertStringCommand" date="Tue Apr 12 10:13:46 EDT 2022" starttimestamp="1649721002230" timestamp="51824626" timestamp2="51824626">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8246" _type="PauseCommand" date="Tue Apr 12 10:13:47 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51825634">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1008]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="8245" _type="InsertStringCommand" date="Tue Apr 12 10:13:47 EDT 2022" starttimestamp="1649721002230" timestamp="51825634" timestamp2="51825634">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="8247" _type="InsertStringCommand" date="Tue Apr 12 10:13:47 EDT 2022" starttimestamp="1649721002230" timestamp="51825634" timestamp2="51825634">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="8249" _type="InsertStringCommand" date="Tue Apr 12 10:13:48 EDT 2022" starttimestamp="1649721002230" timestamp="51825937" timestamp2="51825937">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="8250" _type="InsertStringCommand" date="Tue Apr 12 10:13:48 EDT 2022" starttimestamp="1649721002230" timestamp="51825937" timestamp2="51825937">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="8252" _type="InsertStringCommand" date="Tue Apr 12 10:13:48 EDT 2022" starttimestamp="1649721002230" timestamp="51826185" timestamp2="51826185">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8253" _type="InsertStringCommand" date="Tue Apr 12 10:13:48 EDT 2022" starttimestamp="1649721002230" timestamp="51826185" timestamp2="51826185">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8255" _type="InsertStringCommand" date="Tue Apr 12 10:13:48 EDT 2022" starttimestamp="1649721002230" timestamp="51826333" timestamp2="51826333">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8256" _type="InsertStringCommand" date="Tue Apr 12 10:13:48 EDT 2022" starttimestamp="1649721002230" timestamp="51826333" timestamp2="51826333">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8258" _type="InsertStringCommand" date="Tue Apr 12 10:13:48 EDT 2022" starttimestamp="1649721002230" timestamp="51826464" timestamp2="51826464">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8259" _type="InsertStringCommand" date="Tue Apr 12 10:13:48 EDT 2022" starttimestamp="1649721002230" timestamp="51826464" timestamp2="51826464">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8261" _type="InsertStringCommand" date="Tue Apr 12 10:13:48 EDT 2022" starttimestamp="1649721002230" timestamp="51826699" timestamp2="51826699">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="8262" _type="InsertStringCommand" date="Tue Apr 12 10:13:48 EDT 2022" starttimestamp="1649721002230" timestamp="51826699" timestamp2="51826699">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="8264" _type="InsertStringCommand" date="Tue Apr 12 10:13:49 EDT 2022" starttimestamp="1649721002230" timestamp="51826805" timestamp2="51826805">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="8265" _type="InsertStringCommand" date="Tue Apr 12 10:13:49 EDT 2022" starttimestamp="1649721002230" timestamp="51826805" timestamp2="51826805">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="8267" _type="InsertStringCommand" date="Tue Apr 12 10:13:49 EDT 2022" starttimestamp="1649721002230" timestamp="51826881" timestamp2="51826881">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8268" _type="InsertStringCommand" date="Tue Apr 12 10:13:49 EDT 2022" starttimestamp="1649721002230" timestamp="51826881" timestamp2="51826881">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8270" _type="PauseCommand" date="Tue Apr 12 10:13:51 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51829769">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2888]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8296" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:13:54 EDT 2022" starttimestamp="1649721002230" timestamp="51832295" />
  <Command __id="8298" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:13:54 EDT 2022" starttimestamp="1649721002230" timestamp="51832374" />
  <Command __id="8299" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:13:54 EDT 2022" starttimestamp="1649721002230" timestamp="51832476" />
  <Command __id="8300" _type="ShellCommand" date="Tue Apr 12 10:13:54 EDT 2022" starttimestamp="1649721002230" timestamp="51832738" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8302" _type="PauseCommand" date="Tue Apr 12 10:13:56 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51834522">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1784]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8301" _type="ShellCommand" date="Tue Apr 12 10:13:56 EDT 2022" starttimestamp="1649721002230" timestamp="51834522" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8304" _type="PauseCommand" date="Tue Apr 12 10:13:57 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51835528">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1006]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8303" _type="MoveCaretCommand" caretOffset="3616" date="Tue Apr 12 10:13:57 EDT 2022" docOffset="3616" starttimestamp="1649721002230" timestamp="51835528" />
  <Command __id="8305" _type="MoveCaretCommand" caretOffset="3616" date="Tue Apr 12 10:13:57 EDT 2022" docOffset="3616" starttimestamp="1649721002230" timestamp="51835528" />
  <Command __id="8307" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51835843" />
  <Command __id="8308" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51835844" />
  <Command __id="8310" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51835954" />
  <Command __id="8311" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51835954" />
  <Command __id="8313" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51836089" />
  <Command __id="8314" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51836089" />
  <Command __id="8316" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51836242" />
  <Command __id="8317" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51836242" />
  <Command __id="8319" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51836403" />
  <Command __id="8320" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51836403" />
  <Command __id="8322" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51836559" />
  <Command __id="8323" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51836559" />
  <Command __id="8325" _type="InsertStringCommand" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51836760" timestamp2="51836760">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8326" _type="InsertStringCommand" date="Tue Apr 12 10:13:58 EDT 2022" starttimestamp="1649721002230" timestamp="51836761" timestamp2="51836761">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8328" _type="InsertStringCommand" date="Tue Apr 12 10:13:59 EDT 2022" starttimestamp="1649721002230" timestamp="51836871" timestamp2="51836871">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8329" _type="InsertStringCommand" date="Tue Apr 12 10:13:59 EDT 2022" starttimestamp="1649721002230" timestamp="51836871" timestamp2="51836871">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8331" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:59 EDT 2022" starttimestamp="1649721002230" timestamp="51837371" />
  <Command __id="8332" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:13:59 EDT 2022" starttimestamp="1649721002230" timestamp="51837371" />
  <Command __id="8334" _type="InsertStringCommand" date="Tue Apr 12 10:13:59 EDT 2022" starttimestamp="1649721002230" timestamp="51837644" timestamp2="51837644">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8335" _type="InsertStringCommand" date="Tue Apr 12 10:13:59 EDT 2022" starttimestamp="1649721002230" timestamp="51837644" timestamp2="51837644">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8337" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51837787" timestamp2="51837787">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8338" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51837787" timestamp2="51837787">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8340" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51837861" timestamp2="51837861">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8341" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51837863" timestamp2="51837863">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8343" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51837930" timestamp2="51837930">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8344" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51837930" timestamp2="51837930">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8346" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51837994" timestamp2="51837994">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8347" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51837994" timestamp2="51837994">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8349" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51838174" timestamp2="51838174">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8350" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51838174" timestamp2="51838174">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8352" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51838285" timestamp2="51838285">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8353" _type="InsertStringCommand" date="Tue Apr 12 10:14:00 EDT 2022" starttimestamp="1649721002230" timestamp="51838285" timestamp2="51838285">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8355" _type="PauseCommand" date="Tue Apr 12 10:14:03 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51841013">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2728]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8354" _type="SelectTextCommand" caretOffset="3743" date="Tue Apr 12 10:14:03 EDT 2022" end="3751" start="3743" starttimestamp="1649721002230" timestamp="51841013" />
  <Command __id="8356" _type="SelectTextCommand" caretOffset="3743" date="Tue Apr 12 10:14:03 EDT 2022" end="3751" start="3743" starttimestamp="1649721002230" timestamp="51841013" />
  <Command __id="8358" _type="InsertStringCommand" date="Tue Apr 12 10:14:03 EDT 2022" starttimestamp="1649721002230" timestamp="51841313" timestamp2="51841313">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8359" _type="InsertStringCommand" date="Tue Apr 12 10:14:03 EDT 2022" starttimestamp="1649721002230" timestamp="51841313" timestamp2="51841313">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8361" _type="InsertStringCommand" date="Tue Apr 12 10:14:03 EDT 2022" starttimestamp="1649721002230" timestamp="51841407" timestamp2="51841407">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8362" _type="InsertStringCommand" date="Tue Apr 12 10:14:03 EDT 2022" starttimestamp="1649721002230" timestamp="51841407" timestamp2="51841407">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8364" _type="InsertStringCommand" date="Tue Apr 12 10:14:03 EDT 2022" starttimestamp="1649721002230" timestamp="51841417" timestamp2="51841417">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8365" _type="InsertStringCommand" date="Tue Apr 12 10:14:03 EDT 2022" starttimestamp="1649721002230" timestamp="51841417" timestamp2="51841417">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8367" _type="InsertStringCommand" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842314" timestamp2="51842314">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8368" _type="InsertStringCommand" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842314" timestamp2="51842314">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8370" _type="InsertStringCommand" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842349" timestamp2="51842349">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8371" _type="InsertStringCommand" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842349" timestamp2="51842349">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8373" _type="InsertStringCommand" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842363" timestamp2="51842363">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8374" _type="InsertStringCommand" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842363" timestamp2="51842363">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8376" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842379" />
  <Command __id="8377" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842379" />
  <Command __id="8379" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842396" />
  <Command __id="8380" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842396" />
  <Command __id="8382" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842696" />
  <Command __id="8383" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:04 EDT 2022" starttimestamp="1649721002230" timestamp="51842696" />
  <Command __id="8385" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51842870" />
  <Command __id="8386" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51842870" />
  <Command __id="8388" _type="InsertStringCommand" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51843158" timestamp2="51843158">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8389" _type="InsertStringCommand" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51843158" timestamp2="51843158">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8391" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51843307" />
  <Command __id="8392" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51843309" />
  <Command __id="8394" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51843439" />
  <Command __id="8395" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51843439" />
  <Command __id="8397" _type="InsertStringCommand" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51843519" timestamp2="51843519">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8398" _type="InsertStringCommand" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51843521" timestamp2="51843521">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8400" _type="InsertStringCommand" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51843559" timestamp2="51843559">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8401" _type="InsertStringCommand" date="Tue Apr 12 10:14:05 EDT 2022" starttimestamp="1649721002230" timestamp="51843559" timestamp2="51843559">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8403" _type="InsertStringCommand" date="Tue Apr 12 10:14:06 EDT 2022" starttimestamp="1649721002230" timestamp="51843962" timestamp2="51843962">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8404" _type="InsertStringCommand" date="Tue Apr 12 10:14:06 EDT 2022" starttimestamp="1649721002230" timestamp="51843962" timestamp2="51843962">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8406" _type="InsertStringCommand" date="Tue Apr 12 10:14:06 EDT 2022" starttimestamp="1649721002230" timestamp="51844126" timestamp2="51844126">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8407" _type="InsertStringCommand" date="Tue Apr 12 10:14:06 EDT 2022" starttimestamp="1649721002230" timestamp="51844126" timestamp2="51844126">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8409" _type="InsertStringCommand" date="Tue Apr 12 10:14:06 EDT 2022" starttimestamp="1649721002230" timestamp="51844212" timestamp2="51844212">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8410" _type="InsertStringCommand" date="Tue Apr 12 10:14:06 EDT 2022" starttimestamp="1649721002230" timestamp="51844213" timestamp2="51844213">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8412" _type="PauseCommand" date="Tue Apr 12 10:14:09 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51847012">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2799]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8411" _type="SelectTextCommand" caretOffset="3718" date="Tue Apr 12 10:14:09 EDT 2022" end="3729" start="3718" starttimestamp="1649721002230" timestamp="51847012" />
  <Command __id="8413" _type="SelectTextCommand" caretOffset="3718" date="Tue Apr 12 10:14:09 EDT 2022" end="3729" start="3718" starttimestamp="1649721002230" timestamp="51847014" />
  <Command __id="8415" _type="PauseCommand" date="Tue Apr 12 10:14:10 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51848563">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1549]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="8019" _type="Insert" date="Tue Apr 12 10:13:17 EDT 2022" docASTNodeCount="536" docActiveCodeLength="3682" docExpressionCount="376" docLength="4040" length="23" offset="3600" repeat="23" starttimestamp="1649721002230" timestamp="51795614" timestamp2="51800162">
    <text><![CDATA[exampleServerReadThread]]></text>
  </DocumentChange>
  <DocumentChange __id="8090" _type="Delete" date="Tue Apr 12 10:13:23 EDT 2022" docASTNodeCount="534" docActiveCodeLength="3675" docExpressionCount="374" docLength="4033" endLine="96" length="7" offset="3624" repeat="7" startLine="96" starttimestamp="1649721002230" timestamp="51801240" timestamp2="51802442">
    <text><![CDATA[i, this]]></text>
  </DocumentChange>
  <DocumentChange __id="8111" _type="Insert" date="Tue Apr 12 10:13:30 EDT 2022" docASTNodeCount="538" docActiveCodeLength="3715" docExpressionCount="377" docLength="4073" length="40" offset="1095" repeat="2" starttimestamp="1649721002230" timestamp="51807869" timestamp2="51807869">
    <text><![CDATA[
import readThread.ReadThreadInterface;]]></text>
  </DocumentChange>
  <DocumentChange __id="8116" _type="Replace" date="Tue Apr 12 10:13:33 EDT 2022" docASTNodeCount="538" docActiveCodeLength="3709" docExpressionCount="377" docLength="4067" endLine="97" insertionLength="1" int_docASTNodeCount="538" int_docActiveCodeLength="3708" int_docExpressionCount="377" int_docLength="4066" length="7" offset="3625" startLine="97" starttimestamp="1649721002230" timestamp="51811396">
    <deletedText><![CDATA[newSlav]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8119" _type="Insert" date="Tue Apr 12 10:13:33 EDT 2022" docASTNodeCount="538" docActiveCodeLength="3710" docExpressionCount="377" docLength="4068" length="1" offset="3626" starttimestamp="1649721002230" timestamp="51811510">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="8122" _type="Delete" date="Tue Apr 12 10:13:34 EDT 2022" docASTNodeCount="538" docActiveCodeLength="3709" docExpressionCount="377" docLength="4067" endLine="97" length="1" offset="3627" startLine="97" starttimestamp="1649721002230" timestamp="51812199">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="8124" _type="Insert" date="Tue Apr 12 10:13:34 EDT 2022" docASTNodeCount="538" docActiveCodeLength="3717" docExpressionCount="377" docLength="4075" length="8" offset="3627" repeat="8" starttimestamp="1649721002230" timestamp="51812390" timestamp2="51814029">
    <text><![CDATA[adThread]]></text>
  </DocumentChange>
  <DocumentChange __id="8151" _type="Delete" date="Tue Apr 12 10:13:39 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3696" docExpressionCount="373" docLength="4054" endLine="98" length="21" offset="3672" startLine="98" starttimestamp="1649721002230" timestamp="51817123">
    <text><![CDATA[slaves.add(newSlave);]]></text>
  </DocumentChange>
  <DocumentChange __id="8157" _type="Insert" date="Tue Apr 12 10:13:40 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3696" docExpressionCount="373" docLength="4063" length="9" offset="3595" repeat="9" starttimestamp="1649721002230" timestamp="51818616" timestamp2="51820458">
    <text><![CDATA[Creat new]]></text>
  </DocumentChange>
  <DocumentChange __id="8184" _type="Delete" date="Tue Apr 12 10:13:43 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3696" docExpressionCount="373" docLength="4059" endLine="96" length="4" offset="3600" repeat="4" startLine="96" starttimestamp="1649721002230" timestamp="51820779" timestamp2="51821278">
    <text><![CDATA[ new]]></text>
  </DocumentChange>
  <DocumentChange __id="8196" _type="Insert" date="Tue Apr 12 10:13:43 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3696" docExpressionCount="373" docLength="4083" length="24" offset="3600" repeat="24" starttimestamp="1649721002230" timestamp="51821403" timestamp2="51826871">
    <text><![CDATA[e new readTrheadRunnable]]></text>
  </DocumentChange>
  <DocumentChange __id="8272" _type="Delete" date="Tue Apr 12 10:13:52 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3690" docExpressionCount="373" docLength="4077" endLine="97" length="6" offset="3658" repeat="6" startLine="97" starttimestamp="1649721002230" timestamp="51830003" timestamp2="51830985">
    <text><![CDATA[Thread]]></text>
  </DocumentChange>
  <DocumentChange __id="8290" _type="Insert" date="Tue Apr 12 10:13:53 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3692" docExpressionCount="373" docLength="4079" length="2" offset="3658" repeat="2" starttimestamp="1649721002230" timestamp="51831126" timestamp2="51831177">
    <text><![CDATA[er]]></text>
  </DocumentChange>
  <DocumentChange __id="8306" _type="Delete" date="Tue Apr 12 10:13:58 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3692" docExpressionCount="373" docLength="4073" endLine="96" length="6" offset="3610" repeat="6" startLine="96" starttimestamp="1649721002230" timestamp="51835826" timestamp2="51836553">
    <text><![CDATA[Trhead]]></text>
  </DocumentChange>
  <DocumentChange __id="8324" _type="Insert" date="Tue Apr 12 10:13:58 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3692" docExpressionCount="373" docLength="4075" length="2" offset="3610" repeat="2" starttimestamp="1649721002230" timestamp="51836749" timestamp2="51836855">
    <text><![CDATA[  ]]></text>
  </DocumentChange>
  <DocumentChange __id="8330" _type="Delete" date="Tue Apr 12 10:13:59 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3692" docExpressionCount="373" docLength="4074" endLine="96" length="1" offset="3611" startLine="96" starttimestamp="1649721002230" timestamp="51837356">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="8333" _type="Insert" date="Tue Apr 12 10:13:59 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3692" docExpressionCount="373" docLength="4081" length="7" offset="3611" repeat="7" starttimestamp="1649721002230" timestamp="51837628" timestamp2="51838279">
    <text><![CDATA[thread ]]></text>
  </DocumentChange>
  <DocumentChange __id="8357" _type="Replace" date="Tue Apr 12 10:14:03 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3685" docExpressionCount="373" docLength="4074" endLine="100" insertionLength="1" int_docASTNodeCount="532" int_docActiveCodeLength="3684" int_docExpressionCount="372" int_docLength="4073" length="8" offset="3743" startLine="100" starttimestamp="1649721002230" timestamp="51841298">
    <deletedText><![CDATA[newSlave]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8360" _type="Insert" date="Tue Apr 12 10:14:03 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3690" docExpressionCount="373" docLength="4079" length="5" offset="3744" repeat="5" starttimestamp="1649721002230" timestamp="51841402" timestamp2="51842354">
    <text><![CDATA[aeder]]></text>
  </DocumentChange>
  <DocumentChange __id="8375" _type="Delete" date="Tue Apr 12 10:14:04 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3686" docExpressionCount="373" docLength="4075" endLine="100" length="4" offset="3745" repeat="4" startLine="100" starttimestamp="1649721002230" timestamp="51842372" timestamp2="51842862">
    <text><![CDATA[eder]]></text>
  </DocumentChange>
  <DocumentChange __id="8387" _type="Insert" date="Tue Apr 12 10:14:05 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3687" docExpressionCount="373" docLength="4076" length="1" offset="3745" starttimestamp="1649721002230" timestamp="51843147">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="8390" _type="Delete" date="Tue Apr 12 10:14:05 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3685" docExpressionCount="373" docLength="4074" endLine="100" length="2" offset="3744" repeat="2" startLine="100" starttimestamp="1649721002230" timestamp="51843295" timestamp2="51843435">
    <text><![CDATA[ae]]></text>
  </DocumentChange>
  <DocumentChange __id="8396" _type="Insert" date="Tue Apr 12 10:14:05 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3690" docExpressionCount="373" docLength="4079" length="5" offset="3744" repeat="5" starttimestamp="1649721002230" timestamp="51843512" timestamp2="51844197">
    <text><![CDATA[eader]]></text>
  </DocumentChange>
  <DocumentChange __id="8417" _type="Delete" date="Tue Apr 12 10:14:11 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3685" docExpressionCount="373" docLength="4074" endLine="100" length="5" offset="3718" repeat="5" startLine="100" starttimestamp="1649721002230" timestamp="51848924" timestamp2="51849558">
    <text><![CDATA[slave]]></text>
  </DocumentChange>
  <Command __id="8414" _type="MoveCaretCommand" caretOffset="3723" date="Tue Apr 12 10:14:10 EDT 2022" docOffset="3723" starttimestamp="1649721002230" timestamp="51848563" />
  <Command __id="8416" _type="MoveCaretCommand" caretOffset="3723" date="Tue Apr 12 10:14:10 EDT 2022" docOffset="3723" starttimestamp="1649721002230" timestamp="51848563" />
  <Command __id="8418" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:11 EDT 2022" starttimestamp="1649721002230" timestamp="51848931" />
  <Command __id="8419" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:11 EDT 2022" starttimestamp="1649721002230" timestamp="51848931" />
  <Command __id="8421" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:11 EDT 2022" starttimestamp="1649721002230" timestamp="51849098" />
  <Command __id="8422" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:11 EDT 2022" starttimestamp="1649721002230" timestamp="51849098" />
  <Command __id="8424" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:11 EDT 2022" starttimestamp="1649721002230" timestamp="51849259" />
  <Command __id="8425" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:11 EDT 2022" starttimestamp="1649721002230" timestamp="51849259" />
  <Command __id="8427" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:11 EDT 2022" starttimestamp="1649721002230" timestamp="51849421" />
  <Command __id="8428" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:11 EDT 2022" starttimestamp="1649721002230" timestamp="51849421" />
  <Command __id="8430" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:11 EDT 2022" starttimestamp="1649721002230" timestamp="51849569" />
  <Command __id="8431" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:11 EDT 2022" starttimestamp="1649721002230" timestamp="51849569" />
  <Command __id="8433" _type="InsertStringCommand" date="Tue Apr 12 10:14:12 EDT 2022" starttimestamp="1649721002230" timestamp="51849780" timestamp2="51849780">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8434" _type="InsertStringCommand" date="Tue Apr 12 10:14:12 EDT 2022" starttimestamp="1649721002230" timestamp="51849780" timestamp2="51849780">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8436" _type="InsertStringCommand" date="Tue Apr 12 10:14:12 EDT 2022" starttimestamp="1649721002230" timestamp="51849825" timestamp2="51849825">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8437" _type="InsertStringCommand" date="Tue Apr 12 10:14:12 EDT 2022" starttimestamp="1649721002230" timestamp="51849826" timestamp2="51849826">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8439" _type="InsertStringCommand" date="Tue Apr 12 10:14:12 EDT 2022" starttimestamp="1649721002230" timestamp="51849902" timestamp2="51849902">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8440" _type="InsertStringCommand" date="Tue Apr 12 10:14:12 EDT 2022" starttimestamp="1649721002230" timestamp="51849902" timestamp2="51849902">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8442" _type="InsertStringCommand" date="Tue Apr 12 10:14:12 EDT 2022" starttimestamp="1649721002230" timestamp="51850097" timestamp2="51850097">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8443" _type="InsertStringCommand" date="Tue Apr 12 10:14:12 EDT 2022" starttimestamp="1649721002230" timestamp="51850097" timestamp2="51850097">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8445" _type="PauseCommand" date="Tue Apr 12 10:14:13 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51851129">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1032]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="8444" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:14:13 EDT 2022" starttimestamp="1649721002230" timestamp="51851129" />
  <Command __id="8446" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:14:13 EDT 2022" starttimestamp="1649721002230" timestamp="51851204" />
  <Command __id="8447" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:14:13 EDT 2022" starttimestamp="1649721002230" timestamp="51851257" />
  <Command __id="8449" _type="PauseCommand" date="Tue Apr 12 10:14:16 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51854544">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3286]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8448" _type="SelectTextCommand" caretOffset="3754" date="Tue Apr 12 10:14:16 EDT 2022" end="3759" start="3754" starttimestamp="1649721002230" timestamp="51854543" />
  <Command __id="8450" _type="SelectTextCommand" caretOffset="3754" date="Tue Apr 12 10:14:16 EDT 2022" end="3759" start="3754" starttimestamp="1649721002230" timestamp="51854544" />
  <Command __id="8452" _type="InsertStringCommand" date="Tue Apr 12 10:14:16 EDT 2022" starttimestamp="1649721002230" timestamp="51854609" timestamp2="51854609">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8453" _type="InsertStringCommand" date="Tue Apr 12 10:14:16 EDT 2022" starttimestamp="1649721002230" timestamp="51854609" timestamp2="51854609">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8455" _type="InsertStringCommand" date="Tue Apr 12 10:14:16 EDT 2022" starttimestamp="1649721002230" timestamp="51854699" timestamp2="51854699">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8456" _type="InsertStringCommand" date="Tue Apr 12 10:14:16 EDT 2022" starttimestamp="1649721002230" timestamp="51854699" timestamp2="51854699">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8458" _type="InsertStringCommand" date="Tue Apr 12 10:14:17 EDT 2022" starttimestamp="1649721002230" timestamp="51854847" timestamp2="51854847">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8459" _type="InsertStringCommand" date="Tue Apr 12 10:14:17 EDT 2022" starttimestamp="1649721002230" timestamp="51854847" timestamp2="51854847">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8461" _type="InsertStringCommand" date="Tue Apr 12 10:14:17 EDT 2022" starttimestamp="1649721002230" timestamp="51854992" timestamp2="51854992">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8462" _type="InsertStringCommand" date="Tue Apr 12 10:14:17 EDT 2022" starttimestamp="1649721002230" timestamp="51854992" timestamp2="51854992">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8464" _type="PauseCommand" date="Tue Apr 12 10:14:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51857136">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2144]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <DocumentChange __id="8432" _type="Insert" date="Tue Apr 12 10:14:11 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3689" docExpressionCount="373" docLength="4078" length="4" offset="3718" repeat="4" starttimestamp="1649721002230" timestamp="51849747" timestamp2="51850090">
    <text><![CDATA[read]]></text>
  </DocumentChange>
  <DocumentChange __id="8451" _type="Replace" date="Tue Apr 12 10:14:16 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3685" docExpressionCount="373" docLength="4074" endLine="101" insertionLength="1" int_docASTNodeCount="533" int_docActiveCodeLength="3684" int_docExpressionCount="373" int_docLength="4073" length="5" offset="3754" startLine="101" starttimestamp="1649721002230" timestamp="51854601">
    <deletedText><![CDATA[slave]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8454" _type="Insert" date="Tue Apr 12 10:14:16 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3688" docExpressionCount="373" docLength="4077" length="3" offset="3755" repeat="3" starttimestamp="1649721002230" timestamp="51854693" timestamp2="51854983">
    <text><![CDATA[ead]]></text>
  </DocumentChange>
  <DocumentChange __id="8466" _type="Delete" date="Tue Apr 12 10:14:20 EDT 2022" docASTNodeCount="532" docActiveCodeLength="3684" docExpressionCount="372" docLength="4073" endLine="101" length="4" offset="3773" startLine="101" starttimestamp="1649721002230" timestamp="51857836">
    <text><![CDATA[name]]></text>
  </DocumentChange>
  <Command __id="8463" _type="SelectTextCommand" caretOffset="3773" date="Tue Apr 12 10:14:19 EDT 2022" end="3777" start="3773" starttimestamp="1649721002230" timestamp="51857136" />
  <Command __id="8465" _type="SelectTextCommand" caretOffset="3773" date="Tue Apr 12 10:14:19 EDT 2022" end="3777" start="3773" starttimestamp="1649721002230" timestamp="51857136" />
  <Command __id="8467" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:20 EDT 2022" starttimestamp="1649721002230" timestamp="51857858" />
  <Command __id="8468" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:20 EDT 2022" starttimestamp="1649721002230" timestamp="51857858" />
  <Command __id="8470" _type="InsertStringCommand" date="Tue Apr 12 10:14:20 EDT 2022" starttimestamp="1649721002230" timestamp="51858196" timestamp2="51858196">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="8471" _type="InsertStringCommand" date="Tue Apr 12 10:14:20 EDT 2022" starttimestamp="1649721002230" timestamp="51858196" timestamp2="51858196">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="8474" _type="PauseCommand" date="Tue Apr 12 10:14:21 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51859588">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1392]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="8473" _type="InsertStringCommand" date="Tue Apr 12 10:14:21 EDT 2022" starttimestamp="1649721002230" timestamp="51859588" timestamp2="51859588">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8475" _type="InsertStringCommand" date="Tue Apr 12 10:14:21 EDT 2022" starttimestamp="1649721002230" timestamp="51859588" timestamp2="51859588">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8477" _type="InsertStringCommand" date="Tue Apr 12 10:14:21 EDT 2022" starttimestamp="1649721002230" timestamp="51859696" timestamp2="51859696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8478" _type="InsertStringCommand" date="Tue Apr 12 10:14:21 EDT 2022" starttimestamp="1649721002230" timestamp="51859696" timestamp2="51859696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8480" _type="InsertStringCommand" date="Tue Apr 12 10:14:21 EDT 2022" starttimestamp="1649721002230" timestamp="51859724" timestamp2="51859724">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8481" _type="InsertStringCommand" date="Tue Apr 12 10:14:21 EDT 2022" starttimestamp="1649721002230" timestamp="51859724" timestamp2="51859724">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8483" _type="InsertStringCommand" date="Tue Apr 12 10:14:22 EDT 2022" starttimestamp="1649721002230" timestamp="51859922" timestamp2="51859922">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8484" _type="InsertStringCommand" date="Tue Apr 12 10:14:22 EDT 2022" starttimestamp="1649721002230" timestamp="51859922" timestamp2="51859922">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8486" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51860776" timestamp2="51860776">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8487" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51860776" timestamp2="51860776">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8489" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51861102" timestamp2="51861102">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8490" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51861102" timestamp2="51861102">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8492" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51861192" timestamp2="51861192">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8493" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51861192" timestamp2="51861192">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8495" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51861291" timestamp2="51861291">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8496" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51861291" timestamp2="51861291">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8498" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51861331" timestamp2="51861331">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8499" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51861331" timestamp2="51861331">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8501" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51861521" timestamp2="51861521">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8502" _type="InsertStringCommand" date="Tue Apr 12 10:14:23 EDT 2022" starttimestamp="1649721002230" timestamp="51861522" timestamp2="51861522">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8503" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:14:24 EDT 2022" starttimestamp="1649721002230" timestamp="51862491" />
  <Command __id="8504" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:14:24 EDT 2022" starttimestamp="1649721002230" timestamp="51862494" />
  <Command __id="8505" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:14:24 EDT 2022" starttimestamp="1649721002230" timestamp="51862554" />
  <Command __id="8506" _type="ShellCommand" date="Tue Apr 12 10:14:25 EDT 2022" starttimestamp="1649721002230" timestamp="51862845" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8508" _type="PauseCommand" date="Tue Apr 12 10:14:26 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51864043">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1198]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8507" _type="ShellCommand" date="Tue Apr 12 10:14:26 EDT 2022" starttimestamp="1649721002230" timestamp="51864043" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8510" _type="PauseCommand" date="Tue Apr 12 10:14:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51865929">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1886]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="8469" _type="Insert" date="Tue Apr 12 10:14:20 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3696" docExpressionCount="373" docLength="4085" length="12" offset="3773" repeat="11" starttimestamp="1649721002230" timestamp="51858185" timestamp2="51861517">
    <text><![CDATA["readThread"]]></text>
  </DocumentChange>
  <DocumentChange __id="8512" _type="Insert" date="Tue Apr 12 10:14:28 EDT 2022" docASTNodeCount="528" docActiveCodeLength="3663" docExpressionCount="369" docLength="4087" length="2" offset="3754" repeat="2" starttimestamp="1649721002230" timestamp="51866391" timestamp2="51866551">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="8509" _type="MoveCaretCommand" caretOffset="3754" date="Tue Apr 12 10:14:28 EDT 2022" docOffset="3754" starttimestamp="1649721002230" timestamp="51865929" />
  <Command __id="8511" _type="MoveCaretCommand" caretOffset="3754" date="Tue Apr 12 10:14:28 EDT 2022" docOffset="3754" starttimestamp="1649721002230" timestamp="51865929" />
  <Command __id="8513" _type="InsertStringCommand" date="Tue Apr 12 10:14:28 EDT 2022" starttimestamp="1649721002230" timestamp="51866413" timestamp2="51866413">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8514" _type="InsertStringCommand" date="Tue Apr 12 10:14:28 EDT 2022" starttimestamp="1649721002230" timestamp="51866413" timestamp2="51866413">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8516" _type="InsertStringCommand" date="Tue Apr 12 10:14:28 EDT 2022" starttimestamp="1649721002230" timestamp="51866566" timestamp2="51866566">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8517" _type="InsertStringCommand" date="Tue Apr 12 10:14:28 EDT 2022" starttimestamp="1649721002230" timestamp="51866566" timestamp2="51866566">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8518" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:14:29 EDT 2022" starttimestamp="1649721002230" timestamp="51867044" />
  <Command __id="8519" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:14:29 EDT 2022" starttimestamp="1649721002230" timestamp="51867109" />
  <Command __id="8520" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:14:29 EDT 2022" starttimestamp="1649721002230" timestamp="51867261" />
  <Command __id="8521" _type="MoveCaretCommand" caretOffset="3701" date="Tue Apr 12 10:14:30 EDT 2022" docOffset="3701" starttimestamp="1649721002230" timestamp="51867936" />
  <Command __id="8522" _type="MoveCaretCommand" caretOffset="3701" date="Tue Apr 12 10:14:30 EDT 2022" docOffset="3701" starttimestamp="1649721002230" timestamp="51867936" />
  <Command __id="8524" _type="InsertStringCommand" date="Tue Apr 12 10:14:30 EDT 2022" starttimestamp="1649721002230" timestamp="51868592" timestamp2="51868592">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="8525" _type="InsertStringCommand" date="Tue Apr 12 10:14:30 EDT 2022" starttimestamp="1649721002230" timestamp="51868592" timestamp2="51868592">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="8527" _type="InsertStringCommand" date="Tue Apr 12 10:14:31 EDT 2022" starttimestamp="1649721002230" timestamp="51869329" timestamp2="51869329">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8528" _type="InsertStringCommand" date="Tue Apr 12 10:14:31 EDT 2022" starttimestamp="1649721002230" timestamp="51869329" timestamp2="51869329">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8530" _type="InsertStringCommand" date="Tue Apr 12 10:14:31 EDT 2022" starttimestamp="1649721002230" timestamp="51869692" timestamp2="51869692">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8531" _type="InsertStringCommand" date="Tue Apr 12 10:14:31 EDT 2022" starttimestamp="1649721002230" timestamp="51869693" timestamp2="51869693">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8534" _type="PauseCommand" date="Tue Apr 12 10:14:33 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51870974">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1281]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="8533" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51870974" timestamp2="51870974">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8535" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51870974" timestamp2="51870974">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="8537" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51871191" timestamp2="51871191">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8538" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51871192" timestamp2="51871192">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8540" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51871269" timestamp2="51871269">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8541" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51871269" timestamp2="51871269">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8543" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51871384" timestamp2="51871384">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8544" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51871384" timestamp2="51871384">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8546" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51871537" timestamp2="51871537">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8547" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51871537" timestamp2="51871537">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8549" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51871707" timestamp2="51871707">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8550" _type="InsertStringCommand" date="Tue Apr 12 10:14:33 EDT 2022" starttimestamp="1649721002230" timestamp="51871707" timestamp2="51871707">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8552" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51871868" timestamp2="51871868">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8553" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51871868" timestamp2="51871868">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8555" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872119" timestamp2="51872119">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8556" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872119" timestamp2="51872119">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8558" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872192" timestamp2="51872192">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8559" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872192" timestamp2="51872192">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8561" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872227" timestamp2="51872227">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="8562" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872227" timestamp2="51872227">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="8564" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872394" timestamp2="51872394">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8565" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872394" timestamp2="51872394">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8567" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872670" timestamp2="51872670">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8568" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872670" timestamp2="51872670">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8570" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872762" timestamp2="51872762">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8571" _type="InsertStringCommand" date="Tue Apr 12 10:14:34 EDT 2022" starttimestamp="1649721002230" timestamp="51872762" timestamp2="51872762">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8573" _type="InsertStringCommand" date="Tue Apr 12 10:14:35 EDT 2022" starttimestamp="1649721002230" timestamp="51873036" timestamp2="51873036">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8574" _type="InsertStringCommand" date="Tue Apr 12 10:14:35 EDT 2022" starttimestamp="1649721002230" timestamp="51873036" timestamp2="51873036">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8576" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:35 EDT 2022" starttimestamp="1649721002230" timestamp="51873407" />
  <Command __id="8577" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:14:35 EDT 2022" starttimestamp="1649721002230" timestamp="51873407" />
  <Command __id="8579" _type="InsertStringCommand" date="Tue Apr 12 10:14:35 EDT 2022" starttimestamp="1649721002230" timestamp="51873478" timestamp2="51873478">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8580" _type="InsertStringCommand" date="Tue Apr 12 10:14:35 EDT 2022" starttimestamp="1649721002230" timestamp="51873478" timestamp2="51873478">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8582" _type="InsertStringCommand" date="Tue Apr 12 10:14:35 EDT 2022" starttimestamp="1649721002230" timestamp="51873706" timestamp2="51873706">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8583" _type="InsertStringCommand" date="Tue Apr 12 10:14:35 EDT 2022" starttimestamp="1649721002230" timestamp="51873706" timestamp2="51873706">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8585" _type="InsertStringCommand" date="Tue Apr 12 10:14:36 EDT 2022" starttimestamp="1649721002230" timestamp="51874294" timestamp2="51874294">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8586" _type="InsertStringCommand" date="Tue Apr 12 10:14:36 EDT 2022" starttimestamp="1649721002230" timestamp="51874294" timestamp2="51874294">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8588" _type="InsertStringCommand" date="Tue Apr 12 10:14:36 EDT 2022" starttimestamp="1649721002230" timestamp="51874547" timestamp2="51874547">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8589" _type="InsertStringCommand" date="Tue Apr 12 10:14:36 EDT 2022" starttimestamp="1649721002230" timestamp="51874547" timestamp2="51874547">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8591" _type="InsertStringCommand" date="Tue Apr 12 10:14:36 EDT 2022" starttimestamp="1649721002230" timestamp="51874598" timestamp2="51874598">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8592" _type="InsertStringCommand" date="Tue Apr 12 10:14:36 EDT 2022" starttimestamp="1649721002230" timestamp="51874599" timestamp2="51874599">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8594" _type="InsertStringCommand" date="Tue Apr 12 10:14:36 EDT 2022" starttimestamp="1649721002230" timestamp="51874701" timestamp2="51874701">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8595" _type="InsertStringCommand" date="Tue Apr 12 10:14:36 EDT 2022" starttimestamp="1649721002230" timestamp="51874701" timestamp2="51874701">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8597" _type="InsertStringCommand" date="Tue Apr 12 10:14:37 EDT 2022" starttimestamp="1649721002230" timestamp="51874771" timestamp2="51874771">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8598" _type="InsertStringCommand" date="Tue Apr 12 10:14:37 EDT 2022" starttimestamp="1649721002230" timestamp="51874771" timestamp2="51874771">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8600" _type="InsertStringCommand" date="Tue Apr 12 10:14:37 EDT 2022" starttimestamp="1649721002230" timestamp="51874959" timestamp2="51874959">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8601" _type="InsertStringCommand" date="Tue Apr 12 10:14:37 EDT 2022" starttimestamp="1649721002230" timestamp="51874959" timestamp2="51874959">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8602" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:14:37 EDT 2022" starttimestamp="1649721002230" timestamp="51875748" />
  <Command __id="8603" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:14:38 EDT 2022" starttimestamp="1649721002230" timestamp="51875808" />
  <Command __id="8604" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:14:38 EDT 2022" starttimestamp="1649721002230" timestamp="51875898" />
  <Command __id="8606" _type="PauseCommand" date="Tue Apr 12 10:14:58 EDT 2022" range="20s-30s" starttimestamp="1649721002230" timestamp="51896570">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[20672]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8605" _type="SelectTextCommand" caretOffset="3593" date="Tue Apr 12 10:14:58 EDT 2022" end="3775" start="3593" starttimestamp="1649721002230" timestamp="51896570" />
  <Command __id="8607" _type="SelectTextCommand" caretOffset="3593" date="Tue Apr 12 10:14:58 EDT 2022" end="3775" start="3593" starttimestamp="1649721002230" timestamp="51896571" />
  <Command __id="8609" _type="CutCommand" date="Tue Apr 12 10:14:58 EDT 2022" starttimestamp="1649721002230" timestamp="51896729" />
  <DocumentChange __id="8523" _type="Insert" date="Tue Apr 12 10:14:30 EDT 2022" docASTNodeCount="528" docActiveCodeLength="3665" docExpressionCount="369" docLength="4105" length="18" offset="3701" repeat="17" starttimestamp="1649721002230" timestamp="51868592" timestamp2="51873012">
    <text><![CDATA[		//Create new red]]></text>
  </DocumentChange>
  <DocumentChange __id="8575" _type="Delete" date="Tue Apr 12 10:14:35 EDT 2022" docASTNodeCount="528" docActiveCodeLength="3665" docExpressionCount="369" docLength="4104" endLine="99" length="1" offset="3718" startLine="99" starttimestamp="1649721002230" timestamp="51873397">
    <text><![CDATA[d]]></text>
  </DocumentChange>
  <DocumentChange __id="8578" _type="Insert" date="Tue Apr 12 10:14:35 EDT 2022" docASTNodeCount="528" docActiveCodeLength="3665" docExpressionCount="369" docLength="4112" length="8" offset="3718" repeat="8" starttimestamp="1649721002230" timestamp="51873461" timestamp2="51874939">
    <text><![CDATA[adThread]]></text>
  </DocumentChange>
  <DocumentChange __id="8608" _type="Delete" date="Tue Apr 12 10:14:58 EDT 2022" docASTNodeCount="509" docActiveCodeLength="3539" docExpressionCount="360" docLength="3930" endLine="100" length="182" offset="3593" startLine="96" starttimestamp="1649721002230" timestamp="51896711">
    <text><![CDATA[//Create new read thread Runnable
		final ReadThreadInterface reader = new exampleServerReadThread();
		
		//Create new readThread
		final Thread readThread = new Thread(reader);]]></text>
  </DocumentChange>
  <Command __id="8611" _type="PauseCommand" date="Tue Apr 12 10:15:01 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51899408">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[2679]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="8612" _type="UndoCommand" date="Tue Apr 12 10:15:01 EDT 2022" starttimestamp="1649721002230" timestamp="51899440" />
  <Command __id="8614" _type="PauseCommand" date="Tue Apr 12 10:15:04 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51902111">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2670]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8613" _type="SelectTextCommand" caretOffset="3593" date="Tue Apr 12 10:15:04 EDT 2022" end="3814" start="3593" starttimestamp="1649721002230" timestamp="51902110" />
  <Command __id="8615" _type="SelectTextCommand" caretOffset="3593" date="Tue Apr 12 10:15:04 EDT 2022" end="3814" start="3593" starttimestamp="1649721002230" timestamp="51902112" />
  <DocumentChange __id="8610" _type="Insert" date="Tue Apr 12 10:15:01 EDT 2022" docASTNodeCount="528" docActiveCodeLength="3665" docExpressionCount="369" docLength="4112" length="182" offset="3593" starttimestamp="1649721002230" timestamp="51899408">
    <text><![CDATA[//Create new read thread Runnable
		final ReadThreadInterface reader = new exampleServerReadThread();
		
		//Create new readThread
		final Thread readThread = new Thread(reader);]]></text>
  </DocumentChange>
  <Command __id="8617" _type="PauseCommand" date="Tue Apr 12 10:15:06 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51904155">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2043]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="8618" _type="CutCommand" date="Tue Apr 12 10:15:06 EDT 2022" starttimestamp="1649721002230" timestamp="51904194" />
  <Command __id="8620" _type="PauseCommand" date="Tue Apr 12 10:15:13 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="51911395">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[7201]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8619" _type="MoveCaretCommand" caretOffset="2551" date="Tue Apr 12 10:15:13 EDT 2022" docOffset="2551" starttimestamp="1649721002230" timestamp="51911395" />
  <Command __id="8621" _type="MoveCaretCommand" caretOffset="2551" date="Tue Apr 12 10:15:13 EDT 2022" docOffset="2551" starttimestamp="1649721002230" timestamp="51911395" />
  <Command __id="8623" _type="InsertStringCommand" date="Tue Apr 12 10:15:14 EDT 2022" starttimestamp="1649721002230" timestamp="51911875" timestamp2="51911875">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8624" _type="InsertStringCommand" date="Tue Apr 12 10:15:14 EDT 2022" starttimestamp="1649721002230" timestamp="51911875" timestamp2="51911875">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8626" _type="InsertStringCommand" date="Tue Apr 12 10:15:14 EDT 2022" starttimestamp="1649721002230" timestamp="51912010" timestamp2="51912010">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8627" _type="InsertStringCommand" date="Tue Apr 12 10:15:14 EDT 2022" starttimestamp="1649721002230" timestamp="51912010" timestamp2="51912010">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8629" _type="PasteCommand" date="Tue Apr 12 10:15:15 EDT 2022" starttimestamp="1649721002230" timestamp="51912842" />
  <Command __id="8631" _type="PauseCommand" date="Tue Apr 12 10:15:16 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51914467">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1625]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8663" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:15:21 EDT 2022" starttimestamp="1649721002230" timestamp="51919382" />
  <Command __id="8664" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:15:21 EDT 2022" starttimestamp="1649721002230" timestamp="51919442" />
  <Command __id="8665" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:15:21 EDT 2022" starttimestamp="1649721002230" timestamp="51919546" />
  <Command __id="8667" _type="PauseCommand" date="Tue Apr 12 10:16:06 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="51964375">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[44829]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8666" _type="SelectTextCommand" caretOffset="2602" date="Tue Apr 12 10:16:06 EDT 2022" end="2743" start="2602" starttimestamp="1649721002230" timestamp="51964375" />
  <Command __id="8668" _type="SelectTextCommand" caretOffset="2602" date="Tue Apr 12 10:16:06 EDT 2022" end="2743" start="2602" starttimestamp="1649721002230" timestamp="51964376" />
  <Command __id="8670" _type="PauseCommand" date="Tue Apr 12 10:16:07 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51965487">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1111]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8669" _type="MoveCaretCommand" caretOffset="2722" date="Tue Apr 12 10:16:07 EDT 2022" docOffset="2722" starttimestamp="1649721002230" timestamp="51965487" />
  <Command __id="8671" _type="MoveCaretCommand" caretOffset="2722" date="Tue Apr 12 10:16:07 EDT 2022" docOffset="2722" starttimestamp="1649721002230" timestamp="51965487" />
  <Command __id="8673" _type="PauseCommand" date="Tue Apr 12 10:16:08 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51966720">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1233]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8672" _type="SelectTextCommand" caretOffset="2698" date="Tue Apr 12 10:16:08 EDT 2022" end="2722" start="2698" starttimestamp="1649721002230" timestamp="51966720" />
  <Command __id="8674" _type="SelectTextCommand" caretOffset="2698" date="Tue Apr 12 10:16:08 EDT 2022" end="2722" start="2698" starttimestamp="1649721002230" timestamp="51966720" />
  <Command __id="8675" _type="CopyCommand" date="Tue Apr 12 10:16:09 EDT 2022" starttimestamp="1649721002230" timestamp="51967266" />
  <Command __id="8677" _type="PauseCommand" date="Tue Apr 12 10:16:12 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51970246">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2980]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8676" _type="MoveCaretCommand" caretOffset="1514" date="Tue Apr 12 10:16:12 EDT 2022" docOffset="1514" starttimestamp="1649721002230" timestamp="51970246" />
  <Command __id="8678" _type="MoveCaretCommand" caretOffset="1514" date="Tue Apr 12 10:16:12 EDT 2022" docOffset="1514" starttimestamp="1649721002230" timestamp="51970246" />
  <Command __id="8680" _type="InsertStringCommand" date="Tue Apr 12 10:16:13 EDT 2022" starttimestamp="1649721002230" timestamp="51971083" timestamp2="51971083">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="8681" _type="InsertStringCommand" date="Tue Apr 12 10:16:13 EDT 2022" starttimestamp="1649721002230" timestamp="51971083" timestamp2="51971083">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="8683" _type="PasteCommand" date="Tue Apr 12 10:16:14 EDT 2022" starttimestamp="1649721002230" timestamp="51971929" />
  <Command __id="8685" _type="InsertStringCommand" date="Tue Apr 12 10:16:14 EDT 2022" starttimestamp="1649721002230" timestamp="51972420" timestamp2="51972420">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8686" _type="InsertStringCommand" date="Tue Apr 12 10:16:14 EDT 2022" starttimestamp="1649721002230" timestamp="51972420" timestamp2="51972420">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8688" _type="PauseCommand" date="Tue Apr 12 10:16:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51973684">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1264]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8687" _type="MoveCaretCommand" caretOffset="1539" date="Tue Apr 12 10:16:15 EDT 2022" docOffset="1539" starttimestamp="1649721002230" timestamp="51973684" />
  <Command __id="8689" _type="MoveCaretCommand" caretOffset="1539" date="Tue Apr 12 10:16:15 EDT 2022" docOffset="1539" starttimestamp="1649721002230" timestamp="51973685" />
  <DocumentChange __id="8616" _type="Delete" date="Tue Apr 12 10:15:06 EDT 2022" docASTNodeCount="509" docActiveCodeLength="3535" docExpressionCount="360" docLength="3891" endLine="101" length="221" offset="3593" startLine="96" starttimestamp="1649721002230" timestamp="51904155">
    <text><![CDATA[//Create new read thread Runnable
		final ReadThreadInterface reader = new exampleServerReadThread();
		
		//Create new readThread
		final Thread readThread = new Thread(reader);
		//readThread.setName("readThread");]]></text>
  </DocumentChange>
  <DocumentChange __id="8622" _type="Insert" date="Tue Apr 12 10:15:14 EDT 2022" docASTNodeCount="509" docActiveCodeLength="3543" docExpressionCount="360" docLength="3899" length="8" offset="2551" repeat="2" starttimestamp="1649721002230" timestamp="51911836" timestamp2="51911990">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="8628" _type="Replace" date="Tue Apr 12 10:15:15 EDT 2022" docASTNodeCount="528" docActiveCodeLength="3683" docExpressionCount="369" docLength="4130" endLine="65" insertionLength="233" int_docASTNodeCount="509" int_docActiveCodeLength="3541" int_docExpressionCount="360" int_docLength="3897" length="2" offset="2557" startLine="65" starttimestamp="1649721002230" timestamp="51912794">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		//Create new read thread Runnable
				final ReadThreadInterface reader = new exampleServerReadThread();
				
				//Create new readThread
				final Thread readThread = new Thread(reader);
				//readThread.setName("readThread");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8633" _type="Delete" date="Tue Apr 12 10:15:17 EDT 2022" docASTNodeCount="528" docActiveCodeLength="3681" docExpressionCount="369" docLength="4128" endLine="66" length="2" offset="2596" repeat="2" startLine="66" starttimestamp="1649721002230" timestamp="51914821" timestamp2="51915109">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="8647" _type="Delete" date="Tue Apr 12 10:15:18 EDT 2022" docASTNodeCount="528" docActiveCodeLength="3679" docExpressionCount="369" docLength="4126" endLine="68" length="2" offset="2671" repeat="2" startLine="68" starttimestamp="1649721002230" timestamp="51916579" timestamp2="51916812">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="8653" _type="Delete" date="Tue Apr 12 10:15:19 EDT 2022" docASTNodeCount="528" docActiveCodeLength="3677" docExpressionCount="369" docLength="4124" endLine="69" length="2" offset="2698" repeat="2" startLine="69" starttimestamp="1649721002230" timestamp="51917450" timestamp2="51917615">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="8659" _type="Delete" date="Tue Apr 12 10:15:20 EDT 2022" docASTNodeCount="528" docActiveCodeLength="3675" docExpressionCount="369" docLength="4122" endLine="70" length="2" offset="2747" repeat="2" startLine="70" starttimestamp="1649721002230" timestamp="51918264" timestamp2="51918431">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="8679" _type="Insert" date="Tue Apr 12 10:16:13 EDT 2022" docASTNodeCount="528" docActiveCodeLength="3676" docExpressionCount="369" docLength="4123" length="1" offset="1514" starttimestamp="1649721002230" timestamp="51971074">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="8682" _type="Replace" date="Tue Apr 12 10:16:14 EDT 2022" docASTNodeCount="534" docActiveCodeLength="3700" docExpressionCount="371" docLength="4147" endLine="34" insertionLength="25" int_docASTNodeCount="528" int_docActiveCodeLength="3675" int_docExpressionCount="369" int_docLength="4122" length="1" offset="1514" startLine="34" starttimestamp="1649721002230" timestamp="51971918">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	final Thread readThread ]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8684" _type="Insert" date="Tue Apr 12 10:16:14 EDT 2022" docASTNodeCount="534" docActiveCodeLength="3703" docExpressionCount="371" docLength="4150" length="3" offset="1539" starttimestamp="1649721002230" timestamp="51972395">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <Command __id="8691" _type="PauseCommand" date="Tue Apr 12 10:16:18 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51975896">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2211]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="8712" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:16:20 EDT 2022" starttimestamp="1649721002230" timestamp="51978701" />
  <Command __id="8714" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:16:21 EDT 2022" starttimestamp="1649721002230" timestamp="51978778" />
  <Command __id="8715" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:16:21 EDT 2022" starttimestamp="1649721002230" timestamp="51978852" />
  <Command __id="8717" _type="PauseCommand" date="Tue Apr 12 10:16:25 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51983524">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4672]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8716" _type="SelectTextCommand" caretOffset="2733" date="Tue Apr 12 10:16:25 EDT 2022" end="2746" start="2733" starttimestamp="1649721002230" timestamp="51983524" />
  <Command __id="8718" _type="SelectTextCommand" caretOffset="2733" date="Tue Apr 12 10:16:25 EDT 2022" end="2746" start="2733" starttimestamp="1649721002230" timestamp="51983524" />
  <Command __id="8720" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:16:26 EDT 2022" starttimestamp="1649721002230" timestamp="51983804" />
  <Command __id="8721" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:16:26 EDT 2022" starttimestamp="1649721002230" timestamp="51983804" />
  <Command __id="8723" _type="PauseCommand" date="Tue Apr 12 10:16:27 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51984921">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1117]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="8722" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:16:27 EDT 2022" starttimestamp="1649721002230" timestamp="51984921" />
  <Command __id="8724" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:16:27 EDT 2022" starttimestamp="1649721002230" timestamp="51985001" />
  <Command __id="8725" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:16:27 EDT 2022" starttimestamp="1649721002230" timestamp="51985042" />
  <Command __id="8727" _type="PauseCommand" date="Tue Apr 12 10:16:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51986084">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1042]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8726" _type="ShellCommand" date="Tue Apr 12 10:16:28 EDT 2022" starttimestamp="1649721002230" timestamp="51986084" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8729" _type="PauseCommand" date="Tue Apr 12 10:16:30 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="51988007">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1923]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8728" _type="ShellCommand" date="Tue Apr 12 10:16:30 EDT 2022" starttimestamp="1649721002230" timestamp="51988007" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8731" _type="PauseCommand" date="Tue Apr 12 10:16:33 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="51991584">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3577]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8735" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:16:35 EDT 2022" starttimestamp="1649721002230" timestamp="51993396" />
  <Command __id="8737" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:16:35 EDT 2022" starttimestamp="1649721002230" timestamp="51993487" />
  <Command __id="8738" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:16:35 EDT 2022" starttimestamp="1649721002230" timestamp="51993591" />
  <Command __id="8740" _type="PauseCommand" date="Tue Apr 12 10:16:48 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="52006233">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[12642]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8739" _type="ShellCommand" date="Tue Apr 12 10:16:48 EDT 2022" starttimestamp="1649721002230" timestamp="52006233" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8741" _type="ShellCommand" date="Tue Apr 12 10:16:48 EDT 2022" starttimestamp="1649721002230" timestamp="52006340" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8745" _type="PauseCommand" date="Tue Apr 12 10:16:51 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52009474">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[3100]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8744" _type="SelectTextCommand" caretOffset="437" date="Tue Apr 12 10:16:51 EDT 2022" end="473" start="437" starttimestamp="1649721002230" timestamp="52009474" />
  <Command __id="8746" _type="SelectTextCommand" caretOffset="437" date="Tue Apr 12 10:16:51 EDT 2022" end="473" start="437" starttimestamp="1649721002230" timestamp="52009474" />
  <Command __id="8748" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:16:51 EDT 2022" starttimestamp="1649721002230" timestamp="52009752" />
  <Command __id="8749" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:16:51 EDT 2022" starttimestamp="1649721002230" timestamp="52009752" />
  <Command __id="8751" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:16:52 EDT 2022" starttimestamp="1649721002230" timestamp="52010262" />
  <Command __id="8752" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:16:52 EDT 2022" starttimestamp="1649721002230" timestamp="52010262" />
  <Command __id="8754" _type="PauseCommand" date="Tue Apr 12 10:16:53 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52011319">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1057]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="8753" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:16:53 EDT 2022" starttimestamp="1649721002230" timestamp="52011319" />
  <Command __id="8755" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:16:53 EDT 2022" starttimestamp="1649721002230" timestamp="52011394" />
  <Command __id="8756" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:16:53 EDT 2022" starttimestamp="1649721002230" timestamp="52011449" />
  <Command __id="8758" _type="PauseCommand" date="Tue Apr 12 10:17:02 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52020724">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9275]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8757" _type="ShellCommand" date="Tue Apr 12 10:17:02 EDT 2022" starttimestamp="1649721002230" timestamp="52020724" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8760" _type="PauseCommand" date="Tue Apr 12 10:17:14 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="52032384">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11660]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="8764" _type="SelectTextCommand" caretOffset="3494" date="Tue Apr 12 10:17:45 EDT 2022" end="3503" start="3494" starttimestamp="1649721002230" timestamp="52063206" />
  <Command __id="8766" _type="CopyCommand" date="Tue Apr 12 10:17:45 EDT 2022" starttimestamp="1649721002230" timestamp="52063506" />
  <Command __id="8761" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:17:18 EDT 2022" docASTNodeCount="1386" docActiveCodeLength="8118" docExpressionCount="794" docLength="8637" projectName="A2" starttimestamp="1649721002230" timestamp="52036291">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A2\src\comp533\mvc\Model.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.mvc;¶¶import java.beans.PropertyChangeSupport;¶import java.util.ArrayList;¶import java.util.Arrays;¶import java.util.List;¶import java.util.Map;¶import java.util.concurrent.ArrayBlockingQueue;¶import java.util.concurrent.BlockingQueue;¶¶import comp533.barrier.Barrier;¶import comp533.barrier.BarrierInterface;¶import comp533.joiner.Joiner;¶import comp533.joiner.JoinerInterface;¶import comp533.salve.Slave;¶import comp533.salve.SlaveInterface;¶¶import java.util.HashMap;¶import java.util.LinkedList;¶import java.beans.PropertyChangeListener;¶//import java.beans.PropertyChangeEvent;¶import gradingTools.comp533s19.assignment0.AMapReduceTracer;¶¶public class Model extends AMapReduceTracer implements ModelInterface {¶	private PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);¶	private String inputString = null;¶	private Map<String, Integer> result = new HashMap<String, Integer>();¶	final String space = " ";¶	boolean slavesStarted = false;¶¶	// properties from A2¶	int aNumThreads = 0;¶	List<Thread> threads = new ArrayList<Thread>();¶	List<SlaveInterface> slaves = new ArrayList<SlaveInterface>();¶	BarrierInterface barrier;¶	JoinerInterface joiner;¶	BlockingQueue<KeyValueInterface<String, Integer>> aKeyValueQueue = new ArrayBlockingQueue<KeyValueInterface<String, Integer>>(¶			BUFFER_SIZE);¶	List<LinkedList<KeyValueInterface<String, Integer>>> aReductionQueueList = new ArrayList<LinkedList<KeyValueInterface<String, Integer>>>();¶¶	@Override¶	public int getNumThreads() {¶		return aNumThreads;¶	}¶¶	@Override¶	public void setNumThreads(final int numThreads) {¶		// barrier = new Barrier(numThreads);¶		// joiner = new Joiner(numThreads);¶		/*¶		 * traceBarrierCreated(barrier, numThreads); traceJoinerCreated(joiner,¶		 * numThreads);¶		 */¶¶		final String oldValue = Integer.toString(aNumThreads);¶		String oldThreads = threads.toString();¶		if (threads.isEmpty()) {¶			oldThreads = null;¶			aNumThreads = numThreads;¶		}¶¶		threads = new ArrayList<Thread>();¶		for (int i = 0; i < numThreads; i++) {¶			final String name = "Slave" + Integer.toString(i);¶¶			final SlaveInterface newSlave = new Slave(i, this);¶			slaves.add(newSlave);¶¶			final Thread slaveThread = new Thread(newSlave);¶			slaveThread.setName(name);¶			threads.add(slaveThread);¶¶			// Add separate reduction queue to Reduction queue list for each slave thread¶			aReductionQueueList.add(new LinkedList<KeyValueInterface<String, Integer>>());¶		}¶		final String label = "NumThreads";¶		final String newValue = Integer.toString(aNumThreads);¶¶		final String labelThread = "Threads";¶		final String newThreads = threads.toString();¶¶		propertyChangeSupport.firePropertyChange(label, oldValue, newValue);¶		propertyChangeSupport.firePropertyChange(labelThread, oldThreads, newThreads);¶	}¶¶	@Override¶	public List<Thread> getThreads() {¶		return threads;¶	}¶¶	@Override¶	public Map<String, Integer> getResult() {¶		return result;¶	}¶¶	@Override¶	public void addPropertyChangeListener(final PropertyChangeListener newListener) {¶		propertyChangeSupport.addPropertyChangeListener(newListener);¶	}¶¶	@Override¶	public void setInputString(final String newVal) {¶		barrier = new Barrier(aNumThreads);¶		joiner = new Joiner(aNumThreads);¶		traceBarrierCreated(barrier, aNumThreads);¶		traceJoinerCreated(joiner, aNumThreads);¶¶		final String oldResult = result.toString();¶		final String oldInputString = inputString;¶		inputString = newVal;¶		final String label = "InputString";¶¶		propertyChangeSupport.firePropertyChange(label, oldInputString, newVal);¶¶		// A2 tasks¶		// 1¶		aKeyValueQueue = new ArrayBlockingQueue<KeyValueInterface<String, Integer>>(BUFFER_SIZE);¶		aReductionQueueList = new ArrayList<LinkedList<KeyValueInterface<String, Integer>>>();¶		aKeyValueQueue.clear();¶		aReductionQueueList.clear();¶		result.clear();¶¶		if (!slavesStarted) {¶			for (int i = 0; i < threads.size(); i++) {¶				// TODO this cannot happen multiple times:¶				threads.get(i).start();¶			}¶			slavesStarted = true;¶		}¶¶	¶¶		aReductionQueueList = notifySlaves(slaves, aReductionQueueList);¶¶		// 3¶		final String tokens = inputString;¶		final List<String> listOfToken = Arrays.asList(tokens.split(space));¶		¶¶		aKeyValueQueue = mapping(aKeyValueQueue, listOfToken, slaves);¶¶	¶		// 5¶		aKeyValueQueue = enqueuer(threads, slaves, aKeyValueQueue);¶¶¶		// 6¶		joiner.join();¶		result = combineReductionQueueList(aReductionQueueList, result);¶¶		final String resultLabel = "Result";¶¶		propertyChangeSupport.firePropertyChange(resultLabel, oldResult, result.toString());¶¶	}¶¶	@Override¶	public String toString() {// overriding the toString() method¶		return MODEL;¶	}¶¶	@Override¶	public BarrierInterface getBarrier() {¶		return barrier;¶	}¶¶	@Override¶	public JoinerInterface getJoiner() {¶		return joiner;¶	}¶¶	@Override¶	public BlockingQueue getKeyValueQueue() {¶		return aKeyValueQueue;¶	}¶¶	@Override¶	public List<LinkedList<KeyValueInterface<String, Integer>>> getReductionQueueList() {¶		return aReductionQueueList;¶	}¶¶	@Override¶	public void computeResult() {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void terminate() {¶		// TODO Auto-generated method stub¶		for (int i = 0; i < threads.size(); i++) {¶			threads.get(i).interrupt();¶¶		}¶	}¶¶	@Override¶	public Map<String, Integer> combineReductionQueueList(¶			final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueueList,¶			final Map<String, Integer> aResult) {¶		Map<String, Integer> results = aResult;¶		for (int i = 0; i < reductionQueueList.size(); i++) {¶			final LinkedList<KeyValueInterface<String, Integer>> linkedList = reductionQueueList.get(i);¶¶			results = getResults(reductionQueueList, aResult, i);¶			traceAddedToMap(results, linkedList);¶		}¶		return results;¶	}¶¶	@Override¶	public Map<String, Integer> getResults(¶			final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueueList,¶			final Map<String, Integer> resultMap, final int index) {¶		final LinkedList<KeyValueInterface<String, Integer>> linkedList = reductionQueueList.get(index);¶		final Map<String, Integer> results = resultMap;¶		for (int listIndex = 0; listIndex < linkedList.size(); listIndex++) {¶			results.put(linkedList.get(listIndex).getKey(), linkedList.get(listIndex).getValue());¶		}¶		return results;¶¶	}¶¶	@Override¶	public BlockingQueue<KeyValueInterface<String, Integer>> enqueuer(final List<Thread> aThreads,¶			final List<SlaveInterface> aSlaves, final BlockingQueue<KeyValueInterface<String, Integer>> keyValueQueue) {¶¶		final BlockingQueue<KeyValueInterface<String, Integer>> keyValQueue = keyValueQueue;¶		for (int i = 0; i < aThreads.size(); i++) {¶			final KeyValueInterface<String, Integer> keyVal = new KeyValue<String, Integer>();¶			keyVal.setKey(null);¶			keyVal.setValue(null);¶			try {¶				traceEnqueueRequest(keyVal);¶				keyValQueue.put(keyVal);¶				traceEnqueue(keyValQueue);¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			aSlaves.get(i).notifySlave();¶		}¶		return keyValQueue;¶¶	}¶¶	@Override¶	public List<LinkedList<KeyValueInterface<String, Integer>>> notifySlaves(final List<SlaveInterface> aSlaves,¶			final List<LinkedList<KeyValueInterface<String, Integer>>> redQueue) {¶		final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueue = redQueue;¶		for (int i = 0; i < aSlaves.size(); i++) {¶			aSlaves.get(i).notifySlave();¶			reductionQueue.add(i, new LinkedList<KeyValueInterface<String, Integer>>());¶		}¶		return reductionQueue;¶	}¶¶	@Override¶	public BlockingQueue<KeyValueInterface<String, Integer>> mapping(¶			final BlockingQueue<KeyValueInterface<String, Integer>> keyValueQueue, final List<String> listOfToken,¶			final List<SlaveInterface> salves) {¶		¶		final TokenCountingMapperInterface<String, Integer> mapper = TokenCountingMapperFactory.getMapper();¶		¶		for (int i = 0; i < listOfToken.size(); i++) {¶			final int slaveNum = i % slaves.size();¶			slaves.get(slaveNum).notifySlave();¶			final KeyValueInterface<String, Integer> keyVal = mapper.map(listOfToken.get(i));¶¶			try {¶				traceEnqueueRequest(keyVal);¶				aKeyValueQueue.put(keyVal);¶				traceEnqueue(keyValueQueue);¶			} catch (InterruptedException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶¶			slaves.get(slaveNum).notifySlave();¶		}¶		return aKeyValueQueue;¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="8768" _type="PauseCommand" date="Tue Apr 12 10:17:47 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52064823">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1317]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="8769" _type="MoveCaretCommand" caretOffset="435" date="Tue Apr 12 10:17:47 EDT 2022" docOffset="435" starttimestamp="1649721002230" timestamp="52065136" />
  <Command __id="8771" _type="PauseCommand" date="Tue Apr 12 10:17:52 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52070357">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5221]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8770" _type="MoveCaretCommand" caretOffset="3773" date="Tue Apr 12 10:17:52 EDT 2022" docOffset="3773" starttimestamp="1649721002230" timestamp="52070357" />
  <Command __id="8772" _type="MoveCaretCommand" caretOffset="3773" date="Tue Apr 12 10:17:52 EDT 2022" docOffset="3773" starttimestamp="1649721002230" timestamp="52070357" />
  <Command __id="8774" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52070995" timestamp2="52070995">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8775" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52070995" timestamp2="52070995">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8777" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52071122" timestamp2="52071122">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8778" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52071122" timestamp2="52071122">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="8780" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52071315" timestamp2="52071315">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="8781" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52071315" timestamp2="52071315">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="8783" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52071536" timestamp2="52071536">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8784" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52071536" timestamp2="52071536">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8786" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52071648" timestamp2="52071648">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8787" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52071648" timestamp2="52071648">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8789" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52071739" timestamp2="52071739">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8790" _type="InsertStringCommand" date="Tue Apr 12 10:17:53 EDT 2022" starttimestamp="1649721002230" timestamp="52071747" timestamp2="52071747">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8792" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52071914" timestamp2="52071914">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8793" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52071914" timestamp2="52071914">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8795" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072099" timestamp2="52072099">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8796" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072099" timestamp2="52072099">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8798" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072222" timestamp2="52072222">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8799" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072222" timestamp2="52072222">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8801" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072356" timestamp2="52072356">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8802" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072356" timestamp2="52072356">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8804" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072405" timestamp2="52072405">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8805" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072405" timestamp2="52072405">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8807" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072497" timestamp2="52072497">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8808" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072497" timestamp2="52072497">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8810" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072561" timestamp2="52072561">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8811" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072561" timestamp2="52072561">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8813" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072713" timestamp2="52072713">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8814" _type="InsertStringCommand" date="Tue Apr 12 10:17:54 EDT 2022" starttimestamp="1649721002230" timestamp="52072713" timestamp2="52072713">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8816" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52072847" timestamp2="52072847">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8817" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52072847" timestamp2="52072847">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8819" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52072905" timestamp2="52072905">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8820" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52072905" timestamp2="52072905">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8822" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073005" timestamp2="52073005">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8823" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073005" timestamp2="52073005">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8825" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073081" timestamp2="52073081">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8826" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073081" timestamp2="52073081">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8828" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073193" timestamp2="52073193">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8829" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073193" timestamp2="52073193">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8831" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073280" timestamp2="52073280">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8832" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073280" timestamp2="52073280">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8834" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073381" timestamp2="52073381">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="8835" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073381" timestamp2="52073381">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="8837" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073458" timestamp2="52073458">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8838" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073458" timestamp2="52073458">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8840" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073647" timestamp2="52073647">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8841" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073647" timestamp2="52073647">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8767" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:17:47 EDT 2022" docASTNodeCount="519" docActiveCodeLength="3624" docExpressionCount="362" docLength="4071" projectName="A6" starttimestamp="1649721002230" timestamp="52064823">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶import assignments.util.MiscAssignmentUtils;¶¶import client.ClientRemoteInterfaceGIPC;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶"), Diff(INSERT,"import readThread.ReadThreadInterface;¶"), Diff(EQUAL,"import util.trace.factories.FactoryTraceUtility;¶"), Diff(DELETE,""), Diff(EQUAL,"import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶"), Diff(INSERT,"	Thread readThread = null;¶	"), Diff(EQUAL,"¶"), Diff(DELETE,""), Diff(EQUAL,"	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	"), Diff(INSERT,"	¶		//Create new read thread Runnable¶		final ReadThreadInterface reader = new exampleServerReadThread();¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		//readThread.setName("readThread");¶	"), Diff(EQUAL,"}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		// Pop value off the bounded buffer¶		ByteBuffer originalMessage = null;¶		try {¶			originalMessage = boundedBuffer.take();¶		} catch (InterruptedException e) {¶			e.printStackTrace();¶		}¶		// Echo recieve message to all clients (except original message sender)¶		for (SocketChannel socket : socketList) {¶			if (!socket.equals(aSocketChannel)) {¶				nioManager.write(socket, originalMessage, this);¶			}¶"), Diff(DELETE,""), Diff(EQUAL,"		}"), Diff(INSERT,"¶		¶		"), Diff(EQUAL,"¶¶	}¶¶	@Override¶	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import assignments.util.MiscAssignmentUtils;

import client.ClientRemoteInterfaceGIPC;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {

	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	Thread readThread = null;
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();

	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		final ReadThreadInterface reader = new exampleServerReadThread();
				
		//Create new readThread
		readThread = new Thread(reader);
		//readThread.setName("readThread");
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		// Pop value off the bounded buffer
		ByteBuffer originalMessage = null;
		try {
			originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		// Echo recieve message to all clients (except original message sender)
		for (SocketChannel socket : socketList) {
			if (!socket.equals(aSocketChannel)) {
				nioManager.write(socket, originalMessage, this);
			}
		}
		
		

	}

	@Override
	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);
	}

}
]]></snapshot>
  </Command>
  <Command __id="8843" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073743" timestamp2="52073743">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="8844" _type="InsertStringCommand" date="Tue Apr 12 10:17:55 EDT 2022" starttimestamp="1649721002230" timestamp="52073744" timestamp2="52073744">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="8846" _type="InsertStringCommand" date="Tue Apr 12 10:17:56 EDT 2022" starttimestamp="1649721002230" timestamp="52073885" timestamp2="52073885">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="8847" _type="InsertStringCommand" date="Tue Apr 12 10:17:56 EDT 2022" starttimestamp="1649721002230" timestamp="52073885" timestamp2="52073885">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="8849" _type="InsertStringCommand" date="Tue Apr 12 10:17:56 EDT 2022" starttimestamp="1649721002230" timestamp="52073972" timestamp2="52073972">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8850" _type="InsertStringCommand" date="Tue Apr 12 10:17:56 EDT 2022" starttimestamp="1649721002230" timestamp="52073972" timestamp2="52073972">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8852" _type="InsertStringCommand" date="Tue Apr 12 10:17:56 EDT 2022" starttimestamp="1649721002230" timestamp="52074102" timestamp2="52074102">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8853" _type="InsertStringCommand" date="Tue Apr 12 10:17:56 EDT 2022" starttimestamp="1649721002230" timestamp="52074103" timestamp2="52074103">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8855" _type="InsertStringCommand" date="Tue Apr 12 10:17:56 EDT 2022" starttimestamp="1649721002230" timestamp="52074266" timestamp2="52074266">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8856" _type="InsertStringCommand" date="Tue Apr 12 10:17:56 EDT 2022" starttimestamp="1649721002230" timestamp="52074266" timestamp2="52074266">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8858" _type="InsertStringCommand" date="Tue Apr 12 10:17:56 EDT 2022" starttimestamp="1649721002230" timestamp="52074489" timestamp2="52074489">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="8859" _type="InsertStringCommand" date="Tue Apr 12 10:17:56 EDT 2022" starttimestamp="1649721002230" timestamp="52074489" timestamp2="52074489">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="8861" _type="InsertStringCommand" date="Tue Apr 12 10:17:57 EDT 2022" starttimestamp="1649721002230" timestamp="52075326" timestamp2="52075326">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8862" _type="InsertStringCommand" date="Tue Apr 12 10:17:57 EDT 2022" starttimestamp="1649721002230" timestamp="52075326" timestamp2="52075326">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8864" _type="InsertStringCommand" date="Tue Apr 12 10:17:57 EDT 2022" starttimestamp="1649721002230" timestamp="52075426" timestamp2="52075426">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8865" _type="InsertStringCommand" date="Tue Apr 12 10:17:57 EDT 2022" starttimestamp="1649721002230" timestamp="52075426" timestamp2="52075426">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8867" _type="InsertStringCommand" date="Tue Apr 12 10:17:57 EDT 2022" starttimestamp="1649721002230" timestamp="52075537" timestamp2="52075537">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="8868" _type="InsertStringCommand" date="Tue Apr 12 10:17:57 EDT 2022" starttimestamp="1649721002230" timestamp="52075537" timestamp2="52075537">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="8870" _type="InsertStringCommand" date="Tue Apr 12 10:17:57 EDT 2022" starttimestamp="1649721002230" timestamp="52075581" timestamp2="52075581">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8871" _type="InsertStringCommand" date="Tue Apr 12 10:17:57 EDT 2022" starttimestamp="1649721002230" timestamp="52075581" timestamp2="52075581">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8874" _type="PauseCommand" date="Tue Apr 12 10:17:58 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52076707">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1126]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="8873" _type="InsertStringCommand" date="Tue Apr 12 10:17:58 EDT 2022" starttimestamp="1649721002230" timestamp="52076707" timestamp2="52076707">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8875" _type="InsertStringCommand" date="Tue Apr 12 10:17:58 EDT 2022" starttimestamp="1649721002230" timestamp="52076707" timestamp2="52076707">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8877" _type="PasteCommand" date="Tue Apr 12 10:17:59 EDT 2022" starttimestamp="1649721002230" timestamp="52077108" />
  <Command __id="8879" _type="PauseCommand" date="Tue Apr 12 10:18:01 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52078870">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1762]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8878" _type="MoveCaretCommand" caretOffset="3810" date="Tue Apr 12 10:18:01 EDT 2022" docOffset="3810" starttimestamp="1649721002230" timestamp="52078870" />
  <Command __id="8880" _type="MoveCaretCommand" caretOffset="3810" date="Tue Apr 12 10:18:01 EDT 2022" docOffset="3810" starttimestamp="1649721002230" timestamp="52078872" />
  <Command __id="8882" _type="InsertStringCommand" date="Tue Apr 12 10:18:01 EDT 2022" starttimestamp="1649721002230" timestamp="52079103" timestamp2="52079103">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8883" _type="InsertStringCommand" date="Tue Apr 12 10:18:01 EDT 2022" starttimestamp="1649721002230" timestamp="52079103" timestamp2="52079103">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8885" _type="InsertStringCommand" date="Tue Apr 12 10:18:01 EDT 2022" starttimestamp="1649721002230" timestamp="52079207" timestamp2="52079207">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8886" _type="InsertStringCommand" date="Tue Apr 12 10:18:01 EDT 2022" starttimestamp="1649721002230" timestamp="52079207" timestamp2="52079207">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8888" _type="InsertStringCommand" date="Tue Apr 12 10:18:01 EDT 2022" starttimestamp="1649721002230" timestamp="52079284" timestamp2="52079284">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8889" _type="InsertStringCommand" date="Tue Apr 12 10:18:01 EDT 2022" starttimestamp="1649721002230" timestamp="52079284" timestamp2="52079284">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8891" _type="InsertStringCommand" date="Tue Apr 12 10:18:01 EDT 2022" starttimestamp="1649721002230" timestamp="52079446" timestamp2="52079446">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8892" _type="InsertStringCommand" date="Tue Apr 12 10:18:01 EDT 2022" starttimestamp="1649721002230" timestamp="52079446" timestamp2="52079446">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8894" _type="InsertStringCommand" date="Tue Apr 12 10:18:02 EDT 2022" starttimestamp="1649721002230" timestamp="52079778" timestamp2="52079778">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8895" _type="InsertStringCommand" date="Tue Apr 12 10:18:02 EDT 2022" starttimestamp="1649721002230" timestamp="52079778" timestamp2="52079778">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8897" _type="InsertStringCommand" date="Tue Apr 12 10:18:02 EDT 2022" starttimestamp="1649721002230" timestamp="52080420" timestamp2="52080420">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8898" _type="InsertStringCommand" date="Tue Apr 12 10:18:02 EDT 2022" starttimestamp="1649721002230" timestamp="52080420" timestamp2="52080420">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8900" _type="InsertStringCommand" date="Tue Apr 12 10:18:02 EDT 2022" starttimestamp="1649721002230" timestamp="52080540" timestamp2="52080540">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8901" _type="InsertStringCommand" date="Tue Apr 12 10:18:02 EDT 2022" starttimestamp="1649721002230" timestamp="52080540" timestamp2="52080540">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8903" _type="InsertStringCommand" date="Tue Apr 12 10:18:02 EDT 2022" starttimestamp="1649721002230" timestamp="52080661" timestamp2="52080661">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8904" _type="InsertStringCommand" date="Tue Apr 12 10:18:02 EDT 2022" starttimestamp="1649721002230" timestamp="52080662" timestamp2="52080662">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8906" _type="InsertStringCommand" date="Tue Apr 12 10:18:02 EDT 2022" starttimestamp="1649721002230" timestamp="52080708" timestamp2="52080708">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8907" _type="InsertStringCommand" date="Tue Apr 12 10:18:02 EDT 2022" starttimestamp="1649721002230" timestamp="52080708" timestamp2="52080708">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8909" _type="InsertStringCommand" date="Tue Apr 12 10:18:03 EDT 2022" starttimestamp="1649721002230" timestamp="52080943" timestamp2="52080943">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8910" _type="InsertStringCommand" date="Tue Apr 12 10:18:03 EDT 2022" starttimestamp="1649721002230" timestamp="52080943" timestamp2="52080943">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8912" _type="PauseCommand" date="Tue Apr 12 10:18:04 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52082537">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1594]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="8911" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:18:04 EDT 2022" starttimestamp="1649721002230" timestamp="52082537" />
  <Command __id="8913" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:18:04 EDT 2022" starttimestamp="1649721002230" timestamp="52082612" />
  <Command __id="8914" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:18:04 EDT 2022" starttimestamp="1649721002230" timestamp="52082661" />
  <Command __id="8916" _type="PauseCommand" date="Tue Apr 12 10:18:06 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52084276">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1615]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8915" _type="MoveCaretCommand" caretOffset="3806" date="Tue Apr 12 10:18:06 EDT 2022" docOffset="3806" starttimestamp="1649721002230" timestamp="52084276" />
  <Command __id="8917" _type="MoveCaretCommand" caretOffset="3806" date="Tue Apr 12 10:18:06 EDT 2022" docOffset="3806" starttimestamp="1649721002230" timestamp="52084276" />
  <Command __id="8919" _type="PauseCommand" date="Tue Apr 12 10:18:09 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52087765">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3489]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="8918" _type="MoveCaretCommand" caretOffset="3829" date="Tue Apr 12 10:18:09 EDT 2022" docOffset="3829" starttimestamp="1649721002230" timestamp="52087765" />
  <Command __id="8920" _type="MoveCaretCommand" caretOffset="3829" date="Tue Apr 12 10:18:09 EDT 2022" docOffset="3829" starttimestamp="1649721002230" timestamp="52087765" />
  <Command __id="8922" _type="InsertStringCommand" date="Tue Apr 12 10:18:10 EDT 2022" starttimestamp="1649721002230" timestamp="52088146" timestamp2="52088146">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8923" _type="InsertStringCommand" date="Tue Apr 12 10:18:10 EDT 2022" starttimestamp="1649721002230" timestamp="52088146" timestamp2="52088146">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8925" _type="InsertStringCommand" date="Tue Apr 12 10:18:11 EDT 2022" starttimestamp="1649721002230" timestamp="52089034" timestamp2="52089034">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="8926" _type="InsertStringCommand" date="Tue Apr 12 10:18:11 EDT 2022" starttimestamp="1649721002230" timestamp="52089034" timestamp2="52089034">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="8928" _type="InsertStringCommand" date="Tue Apr 12 10:18:11 EDT 2022" starttimestamp="1649721002230" timestamp="52089373" timestamp2="52089373">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="8929" _type="InsertStringCommand" date="Tue Apr 12 10:18:11 EDT 2022" starttimestamp="1649721002230" timestamp="52089373" timestamp2="52089373">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="8931" _type="InsertStringCommand" date="Tue Apr 12 10:18:11 EDT 2022" starttimestamp="1649721002230" timestamp="52089396" timestamp2="52089396">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8932" _type="InsertStringCommand" date="Tue Apr 12 10:18:11 EDT 2022" starttimestamp="1649721002230" timestamp="52089396" timestamp2="52089396">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8934" _type="InsertStringCommand" date="Tue Apr 12 10:18:12 EDT 2022" starttimestamp="1649721002230" timestamp="52089978" timestamp2="52089978">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8935" _type="InsertStringCommand" date="Tue Apr 12 10:18:12 EDT 2022" starttimestamp="1649721002230" timestamp="52089978" timestamp2="52089978">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8937" _type="InsertStringCommand" date="Tue Apr 12 10:18:12 EDT 2022" starttimestamp="1649721002230" timestamp="52090114" timestamp2="52090114">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8938" _type="InsertStringCommand" date="Tue Apr 12 10:18:12 EDT 2022" starttimestamp="1649721002230" timestamp="52090114" timestamp2="52090114">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8940" _type="InsertStringCommand" date="Tue Apr 12 10:18:12 EDT 2022" starttimestamp="1649721002230" timestamp="52090220" timestamp2="52090220">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="8941" _type="InsertStringCommand" date="Tue Apr 12 10:18:12 EDT 2022" starttimestamp="1649721002230" timestamp="52090220" timestamp2="52090220">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="8943" _type="InsertStringCommand" date="Tue Apr 12 10:18:12 EDT 2022" starttimestamp="1649721002230" timestamp="52090377" timestamp2="52090377">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8944" _type="InsertStringCommand" date="Tue Apr 12 10:18:12 EDT 2022" starttimestamp="1649721002230" timestamp="52090378" timestamp2="52090378">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8945" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 10:18:12 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="52090388" />
  <Command __id="8950" _type="PauseCommand" date="Tue Apr 12 10:18:13 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52091637">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1249]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="8949" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 10:18:13 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="52091637" />
  <Command __id="8952" _type="InsertStringCommand" date="Tue Apr 12 10:18:13 EDT 2022" starttimestamp="1649721002230" timestamp="52091657" timestamp2="52091657">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8953" _type="InsertStringCommand" date="Tue Apr 12 10:18:13 EDT 2022" starttimestamp="1649721002230" timestamp="52091657" timestamp2="52091657">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8954" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 10:18:13 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="52091727" />
  <DocumentChange __id="8773" _type="Insert" date="Tue Apr 12 10:17:53 EDT 2022" docASTNodeCount="519" docActiveCodeLength="3628" docExpressionCount="362" docLength="4108" length="37" offset="3773" repeat="34" starttimestamp="1649721002230" timestamp="52070980" timestamp2="52076676">
    <text><![CDATA[//Start thread and do some action
		]]></text>
  </DocumentChange>
  <DocumentChange __id="8876" _type="Replace" date="Tue Apr 12 10:17:59 EDT 2022" docASTNodeCount="522" docActiveCodeLength="3637" docExpressionCount="364" docLength="4117" endLine="103" insertionLength="11" int_docASTNodeCount="519" int_docActiveCodeLength="3626" int_docExpressionCount="362" int_docLength="4106" length="2" offset="3808" startLine="103" starttimestamp="1649721002230" timestamp="52077100">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		.start();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8881" _type="Insert" date="Tue Apr 12 10:18:01 EDT 2022" docASTNodeCount="523" docActiveCodeLength="3647" docExpressionCount="365" docLength="4127" length="10" offset="3810" repeat="10" starttimestamp="1649721002230" timestamp="52079096" timestamp2="52080928">
    <text><![CDATA[readThread]]></text>
  </DocumentChange>
  <DocumentChange __id="8921" _type="Insert" date="Tue Apr 12 10:18:10 EDT 2022" docASTNodeCount="527" docActiveCodeLength="3661" docExpressionCount="368" docLength="4141" length="14" offset="3829" repeat="11" starttimestamp="1649721002230" timestamp="52088117" timestamp2="52090895">
    <text><![CDATA[
		System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="8951" _type="Replace" date="Tue Apr 12 10:18:13 EDT 2022" docASTNodeCount="527" docActiveCodeLength="3662" docExpressionCount="368" docLength="4142" endLine="104" insertionLength="4" int_docASTNodeCount="525" int_docActiveCodeLength="3658" int_docExpressionCount="366" int_docLength="4138" length="3" offset="3840" startLine="104" starttimestamp="1649721002230" timestamp="52091643">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8955" _type="Insert" date="Tue Apr 12 10:18:14 EDT 2022" docASTNodeCount="529" docActiveCodeLength="3667" docExpressionCount="370" docLength="4147" length="5" offset="3844" repeat="5" starttimestamp="1649721002230" timestamp="52091975" timestamp2="52093326">
    <text><![CDATA[print]]></text>
  </DocumentChange>
  <Command __id="8961" _type="PauseCommand" date="Tue Apr 12 10:18:17 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52095573">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[3598]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="8960" _type="Insert" date="Tue Apr 12 10:18:17 EDT 2022" docASTNodeCount="530" docActiveCodeLength="3681" docExpressionCount="371" docLength="4161" length="14" offset="3849" repeat="12" starttimestamp="1649721002230" timestamp="52095573" timestamp2="52098820">
    <text><![CDATA[ln("thread a")]]></text>
  </DocumentChange>
  <Command __id="8966" _type="PauseCommand" date="Tue Apr 12 10:18:19 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52097155">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1582]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="8965" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 10:18:19 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="52097155" />
  <Command __id="8968" _type="InsertStringCommand" date="Tue Apr 12 10:18:19 EDT 2022" starttimestamp="1649721002230" timestamp="52097741" timestamp2="52097741">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8969" _type="InsertStringCommand" date="Tue Apr 12 10:18:19 EDT 2022" starttimestamp="1649721002230" timestamp="52097741" timestamp2="52097741">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8971" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52097901" timestamp2="52097901">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8972" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52097901" timestamp2="52097901">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8974" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52097986" timestamp2="52097986">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8975" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52097986" timestamp2="52097986">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8977" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52098050" timestamp2="52098050">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8978" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52098050" timestamp2="52098050">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8980" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52098114" timestamp2="52098114">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8981" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52098114" timestamp2="52098114">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8983" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52098323" timestamp2="52098323">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8984" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52098323" timestamp2="52098323">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="8986" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52098702" timestamp2="52098702">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8987" _type="InsertStringCommand" date="Tue Apr 12 10:18:20 EDT 2022" starttimestamp="1649721002230" timestamp="52098702" timestamp2="52098702">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8989" _type="InsertStringCommand" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52098826" timestamp2="52098826">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8990" _type="InsertStringCommand" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52098826" timestamp2="52098826">
    <data><![CDATA[a]]></data>
  </Command>
  <DocumentChange __id="8991" _type="Delete" date="Tue Apr 12 10:18:21 EDT 2022" docASTNodeCount="530" docActiveCodeLength="3680" docExpressionCount="371" docLength="4160" endLine="104" length="1" offset="3860" startLine="104" starttimestamp="1649721002230" timestamp="52099188">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <Command __id="8992" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52099199" />
  <Command __id="8993" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52099200" />
  <Command __id="8995" _type="InsertStringCommand" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52099346" timestamp2="52099346">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8996" _type="InsertStringCommand" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52099346" timestamp2="52099346">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="8998" _type="InsertStringCommand" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52099408" timestamp2="52099408">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8999" _type="InsertStringCommand" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52099408" timestamp2="52099408">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9001" _type="InsertStringCommand" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52099521" timestamp2="52099521">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9002" _type="InsertStringCommand" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52099522" timestamp2="52099522">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9004" _type="InsertStringCommand" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52099698" timestamp2="52099698">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9005" _type="InsertStringCommand" date="Tue Apr 12 10:18:21 EDT 2022" starttimestamp="1649721002230" timestamp="52099698" timestamp2="52099698">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9007" _type="InsertStringCommand" date="Tue Apr 12 10:18:22 EDT 2022" starttimestamp="1649721002230" timestamp="52099920" timestamp2="52099920">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="9008" _type="InsertStringCommand" date="Tue Apr 12 10:18:22 EDT 2022" starttimestamp="1649721002230" timestamp="52099920" timestamp2="52099920">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="9010" _type="InsertStringCommand" date="Tue Apr 12 10:18:22 EDT 2022" starttimestamp="1649721002230" timestamp="52100005" timestamp2="52100005">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9011" _type="InsertStringCommand" date="Tue Apr 12 10:18:22 EDT 2022" starttimestamp="1649721002230" timestamp="52100005" timestamp2="52100005">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9013" _type="InsertStringCommand" date="Tue Apr 12 10:18:22 EDT 2022" starttimestamp="1649721002230" timestamp="52100141" timestamp2="52100141">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="9014" _type="InsertStringCommand" date="Tue Apr 12 10:18:22 EDT 2022" starttimestamp="1649721002230" timestamp="52100141" timestamp2="52100141">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="9016" _type="InsertStringCommand" date="Tue Apr 12 10:18:22 EDT 2022" starttimestamp="1649721002230" timestamp="52100401" timestamp2="52100401">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9017" _type="InsertStringCommand" date="Tue Apr 12 10:18:22 EDT 2022" starttimestamp="1649721002230" timestamp="52100401" timestamp2="52100401">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9019" _type="InsertStringCommand" date="Tue Apr 12 10:18:22 EDT 2022" starttimestamp="1649721002230" timestamp="52100626" timestamp2="52100626">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9020" _type="InsertStringCommand" date="Tue Apr 12 10:18:22 EDT 2022" starttimestamp="1649721002230" timestamp="52100626" timestamp2="52100626">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9022" _type="InsertStringCommand" date="Tue Apr 12 10:18:23 EDT 2022" starttimestamp="1649721002230" timestamp="52100969" timestamp2="52100969">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9023" _type="InsertStringCommand" date="Tue Apr 12 10:18:23 EDT 2022" starttimestamp="1649721002230" timestamp="52100969" timestamp2="52100969">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9025" _type="InsertStringCommand" date="Tue Apr 12 10:18:23 EDT 2022" starttimestamp="1649721002230" timestamp="52101191" timestamp2="52101191">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9026" _type="InsertStringCommand" date="Tue Apr 12 10:18:23 EDT 2022" starttimestamp="1649721002230" timestamp="52101192" timestamp2="52101192">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9028" _type="InsertStringCommand" date="Tue Apr 12 10:18:23 EDT 2022" starttimestamp="1649721002230" timestamp="52101336" timestamp2="52101336">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9029" _type="InsertStringCommand" date="Tue Apr 12 10:18:23 EDT 2022" starttimestamp="1649721002230" timestamp="52101336" timestamp2="52101336">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9031" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52101775" timestamp2="52101775">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9032" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52101776" timestamp2="52101776">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9034" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52101878" timestamp2="52101878">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9035" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52101879" timestamp2="52101879">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9037" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52101979" timestamp2="52101979">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9038" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52101979" timestamp2="52101979">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9040" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102254" timestamp2="52102254">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="9041" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102254" timestamp2="52102254">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="9043" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102487" timestamp2="52102487">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9044" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102487" timestamp2="52102487">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9046" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102571" timestamp2="52102571">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9047" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102571" timestamp2="52102571">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9049" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102589" timestamp2="52102589">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9050" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102589" timestamp2="52102589">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9052" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102702" timestamp2="52102702">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9053" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102702" timestamp2="52102702">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9055" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102753" timestamp2="52102753">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9056" _type="InsertStringCommand" date="Tue Apr 12 10:18:24 EDT 2022" starttimestamp="1649721002230" timestamp="52102753" timestamp2="52102753">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9058" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52102986" timestamp2="52102986">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9059" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52102986" timestamp2="52102986">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9061" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103071" timestamp2="52103071">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9062" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103071" timestamp2="52103071">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9064" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103202" timestamp2="52103202">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9065" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103203" timestamp2="52103203">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9067" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103283" timestamp2="52103283">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9068" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103285" timestamp2="52103285">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9070" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103381" timestamp2="52103381">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9071" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103381" timestamp2="52103381">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9073" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103476" timestamp2="52103476">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9074" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103476" timestamp2="52103476">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9076" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103556" timestamp2="52103556">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9077" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103556" timestamp2="52103556">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9079" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103698" timestamp2="52103698">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9080" _type="InsertStringCommand" date="Tue Apr 12 10:18:25 EDT 2022" starttimestamp="1649721002230" timestamp="52103698" timestamp2="52103698">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9082" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52103774" timestamp2="52103774">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9083" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52103774" timestamp2="52103774">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9085" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52103868" timestamp2="52103868">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="9086" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52103868" timestamp2="52103868">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="9088" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52103986" timestamp2="52103986">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9089" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52103986" timestamp2="52103986">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9091" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52104304" timestamp2="52104304">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="9092" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52104304" timestamp2="52104304">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="9094" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52104405" timestamp2="52104405">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9095" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52104405" timestamp2="52104405">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9097" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52104541" timestamp2="52104541">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9098" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52104541" timestamp2="52104541">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9100" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52104662" timestamp2="52104662">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9101" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52104662" timestamp2="52104662">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9103" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52104755" timestamp2="52104755">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9104" _type="InsertStringCommand" date="Tue Apr 12 10:18:26 EDT 2022" starttimestamp="1649721002230" timestamp="52104756" timestamp2="52104756">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9106" _type="InsertStringCommand" date="Tue Apr 12 10:18:27 EDT 2022" starttimestamp="1649721002230" timestamp="52104840" timestamp2="52104840">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9107" _type="InsertStringCommand" date="Tue Apr 12 10:18:27 EDT 2022" starttimestamp="1649721002230" timestamp="52104840" timestamp2="52104840">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9109" _type="InsertStringCommand" date="Tue Apr 12 10:18:27 EDT 2022" starttimestamp="1649721002230" timestamp="52105282" timestamp2="52105282">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="9110" _type="InsertStringCommand" date="Tue Apr 12 10:18:27 EDT 2022" starttimestamp="1649721002230" timestamp="52105283" timestamp2="52105283">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="9111" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:18:28 EDT 2022" starttimestamp="1649721002230" timestamp="52106111" />
  <Command __id="9112" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:18:28 EDT 2022" starttimestamp="1649721002230" timestamp="52106115" />
  <Command __id="9113" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:18:28 EDT 2022" starttimestamp="1649721002230" timestamp="52106166" />
  <Command __id="9114" _type="ShellCommand" date="Tue Apr 12 10:18:28 EDT 2022" starttimestamp="1649721002230" timestamp="52106482" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9116" _type="PauseCommand" date="Tue Apr 12 10:18:30 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52108500">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2018]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="9115" _type="ShellCommand" date="Tue Apr 12 10:18:30 EDT 2022" starttimestamp="1649721002230" timestamp="52108500" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9118" _type="PauseCommand" date="Tue Apr 12 10:18:33 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52111700">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3200]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="9117" _type="MoveCaretCommand" caretOffset="3901" date="Tue Apr 12 10:18:33 EDT 2022" docOffset="3901" starttimestamp="1649721002230" timestamp="52111700" />
  <Command __id="9119" _type="MoveCaretCommand" caretOffset="3901" date="Tue Apr 12 10:18:33 EDT 2022" docOffset="3901" starttimestamp="1649721002230" timestamp="52111700" />
  <Command __id="9121" _type="InsertStringCommand" date="Tue Apr 12 10:18:34 EDT 2022" starttimestamp="1649721002230" timestamp="52112288" timestamp2="52112288">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="9122" _type="InsertStringCommand" date="Tue Apr 12 10:18:34 EDT 2022" starttimestamp="1649721002230" timestamp="52112288" timestamp2="52112288">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="9124" _type="PauseCommand" date="Tue Apr 12 10:18:36 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52113879">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1591]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="9123" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:18:36 EDT 2022" starttimestamp="1649721002230" timestamp="52113879" />
  <Command __id="9125" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:18:36 EDT 2022" starttimestamp="1649721002230" timestamp="52113954" />
  <Command __id="9126" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:18:36 EDT 2022" starttimestamp="1649721002230" timestamp="52114015" />
  <DocumentChange __id="8994" _type="Insert" date="Tue Apr 12 10:18:21 EDT 2022" docASTNodeCount="530" docActiveCodeLength="3719" docExpressionCount="371" docLength="4199" length="39" offset="3860" repeat="39" starttimestamp="1649721002230" timestamp="52099340" timestamp2="52105279">
    <text><![CDATA[has completed action and is now waiting]]></text>
  </DocumentChange>
  <DocumentChange __id="9120" _type="Insert" date="Tue Apr 12 10:18:34 EDT 2022" docASTNodeCount="530" docActiveCodeLength="3720" docExpressionCount="371" docLength="4200" length="1" offset="3901" starttimestamp="1649721002230" timestamp="52112269">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="9128" _type="PauseCommand" date="Tue Apr 12 10:18:40 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52117780">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3765]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9129" _type="MoveCaretCommand" caretOffset="133" date="Tue Apr 12 10:18:40 EDT 2022" docOffset="133" starttimestamp="1649721002230" timestamp="52117993" />
  <Command __id="9131" _type="PauseCommand" date="Tue Apr 12 10:18:44 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52121975">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3982]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="9144" _type="MoveCaretCommand" caretOffset="693" date="Tue Apr 12 10:19:38 EDT 2022" docOffset="1155" starttimestamp="1649721002230" timestamp="52176626" />
  <Command __id="9136" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:18:58 EDT 2022" docASTNodeCount="933" docActiveCodeLength="5965" docExpressionCount="525" docLength="8043" projectName="A2" starttimestamp="1649721002230" timestamp="52136109">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A2\src\comp533\salve\Slave.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.salve;¶¶import java.util.HashMap;¶import java.util.LinkedList;¶import java.util.List;¶import java.util.Map;¶import java.util.concurrent.BlockingQueue;¶¶import comp533.mvc.KeyValue;¶import comp533.mvc.KeyValueInterface;¶import comp533.mvc.ModelInterface;¶import comp533.mvc.ReducerFactory;¶import comp533.mvc.ReducerInterface;¶import comp533.partitioner.PartitionerFactory;¶import comp533.partitioner.PartitionerInterface;¶import gradingTools.comp533s19.assignment0.AMapReduceTracer;¶¶public class Slave extends AMapReduceTracer implements SlaveInterface {¶	final int number;¶	final int numThreads;¶	final ModelInterface slaveModel;¶	¶	LinkedList<KeyValueInterface<String, Integer>> reductionLinkedList;¶	private Map<String, Integer> result = new HashMap<String, Integer>();¶	private Map<String, Integer> keyToPartition = new HashMap<String, Integer>();¶¶¶	¶	public Slave(final int identifier, final ModelInterface model) {¶		number = identifier;¶		slaveModel = model;¶		numThreads = model.getNumThreads();¶	}¶¶	@Override¶	final public void run() {¶		System.out.println("RUN METHOD");¶¶		while (true) {¶			boolean loop = true;¶			¶			//TODO make wait a separate method¶			synchronized (this) {¶				try {¶					traceWait();¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			LinkedList<KeyValueInterface<String, Integer>> localList = new LinkedList<KeyValueInterface<String, Integer>>();¶			localList = block(slaveModel, localList, loop);¶			/*while (loop) {¶				final BlockingQueue<KeyValueInterface<String, Integer>> aKeyValueQueue = slaveModel.getKeyValueQueue();¶¶				KeyValueInterface<String, Integer> keyVal = null;¶¶				try {¶					traceDequeueRequest(aKeyValueQueue);¶					keyVal = aKeyValueQueue.take();¶					traceDequeue(keyVal);¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶					// continue;¶				}¶¶				// if keyVal is null, null need to stop consuming¶				if (keyVal.getKey() == null) {¶					loop = false;¶					continue;¶				}¶¶				localList.add(keyVal);¶¶			}*/¶			loop = false;¶¶			// partially reduce list¶¶			final ReducerInterface<String, Integer> reducer = ReducerFactory.getReducer();¶			result = reducer.reduce(localList);¶			localList.clear();¶			// this gets the correct partitions for each key¶		/*	final PartitionerInterface<String, Integer> partitioner = PartitionerFactory.getPartitioner();¶			for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶				final int partition = partitioner.getPartition(keyVal.getKey(), keyVal.getValue(), numThreads);¶				keyToPartition.put(keyVal.getKey(), partition);¶			}*/¶			keyToPartition.clear();¶			keyToPartition = partitionKeys(keyToPartition, result); ¶			// System.out.println("key to partition "+keyToPartition.toString());¶¶			// add partitally reduced keyValues to the ReducitonQueueList¶¶			List<LinkedList<KeyValueInterface<String, Integer>>> aReductionQueueList = slaveModel¶					.getReductionQueueList();¶			¶			aReductionQueueList = updateReductionQueueListWithPartitions(aReductionQueueList, keyToPartition);¶¶			keyToPartition.clear();¶¶			// wait for the other slaves to complete their splitting¶			slaveModel.getBarrier().barrier();¶			traceSplitAfterBarrier(number, aReductionQueueList);¶¶			// Need to do final reduction of this threads linkedList¶			synchronized (aReductionQueueList) {¶				final LinkedList<KeyValueInterface<String, Integer>> updatedLocalLinkedList = aReductionQueueList¶						.get(number);¶				result = reducer.reduce(updatedLocalLinkedList);¶				final LinkedList<KeyValueInterface<String, Integer>> finalLocalLinkedList = addKeyValToLocalLinkedList();¶¶				// for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶				// final KeyValueInterface<String, Integer> finalKeyVal = new KeyValue<String,¶				// Integer>();¶				// finalKeyVal.setKey(keyVal.getKey());¶				// finalKeyVal.setValue(keyVal.getValue());¶				// finalLocalLinkedList.add(finalKeyVal);¶				// }¶				// aReductionQueueList.set(number, finalLocalLinkedList);¶				aReductionQueueList.set(number, finalLocalLinkedList);¶			}¶¶			loop = true;¶			slaveModel.getJoiner().finished();¶			// System.out.println(aReductionQueueList.toString());¶¶			// System.out.println(slaveModel.getJoiner().getTotalFinished());¶			if (slaveModel.getJoiner().getTotalFinished() == numThreads) {¶				slaveModel.getJoiner().join();¶¶			}¶¶			synchronized (this) {¶				try {¶					traceWait();¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶				}¶			}¶			continue;¶		}¶¶	}¶¶	@Override¶	public synchronized void notifySlave() {¶		// TODO This should be when a line is read¶¶		traceNotify();¶		this.notify();¶	}¶¶	@Override¶	public String toString() {¶		return SLAVE;¶	}¶¶	@Override¶	public LinkedList<KeyValueInterface<String, Integer>> addKeyValToLocalLinkedList() {¶		final LinkedList<KeyValueInterface<String, Integer>> finalLocalLinkedList = new LinkedList<KeyValueInterface<String, Integer>>();¶¶		for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶			final KeyValueInterface<String, Integer> finalKeyVal = new KeyValue<String, Integer>();¶			finalKeyVal.setKey(keyVal.getKey());¶			finalKeyVal.setValue(keyVal.getValue());¶			finalLocalLinkedList.add(finalKeyVal);¶		}¶		return finalLocalLinkedList;¶	}¶	¶	@Override¶	public List<LinkedList<KeyValueInterface<String, Integer>>> updateReductionQueueListWithPartitions(final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueueList, final Map<String, Integer> aKeyToPartition){¶		for (Map.Entry<String, Integer> keyVal : aKeyToPartition.entrySet()) {¶			final String key = keyVal.getKey();¶			final Integer partition = keyVal.getValue();¶			final Integer val = result.get(key);¶¶			final KeyValueInterface<String, Integer> partialKeyVal = new KeyValue<String, Integer>();¶			partialKeyVal.setKey(key);¶			partialKeyVal.setValue(val);¶			final LinkedList<KeyValueInterface<String, Integer>> localLinkedList = reductionQueueList¶					.get(partition);¶			localLinkedList.add(partialKeyVal);¶			// aReductionQueueList.set(partition, localLinkedList);¶			synchronized (reductionQueueList) {¶				reductionQueueList.set(partition, localLinkedList);¶			}¶¶		}¶		¶		return reductionQueueList;¶	}¶¶	@Override¶	public Map<String, Integer> partitionKeys(final Map<String, Integer> aKeyToPartition, final Map<String, Integer> aResult) {¶		final PartitionerInterface<String, Integer> partitioner = PartitionerFactory.getPartitioner();¶		for (Map.Entry<String, Integer> keyVal : aResult.entrySet()) {¶			final int partition = partitioner.getPartition(keyVal.getKey(), keyVal.getValue(), numThreads);¶			aKeyToPartition.put(keyVal.getKey(), partition);¶		}¶		return aKeyToPartition;¶	}¶¶	@Override¶	public LinkedList<KeyValueInterface<String, Integer>> block(final ModelInterface aSlaveModel, final LinkedList<KeyValueInterface<String, Integer>> aLocalList, final boolean aLoop) {¶		boolean loopy = aLoop;¶		while (loopy) {¶			final BlockingQueue<KeyValueInterface<String, Integer>> aKeyValueQueue = aSlaveModel.getKeyValueQueue();¶¶			KeyValueInterface<String, Integer> keyVal = null;¶¶			try {¶				traceDequeueRequest(aKeyValueQueue);¶				keyVal = aKeyValueQueue.take();¶				traceDequeue(keyVal);¶			} catch (InterruptedException e) {¶				// TODO Auto-generated catch block¶				traceQuit();¶				e.printStackTrace();¶				// continue;¶			}¶¶			// if keyVal is null, null need to stop consuming¶			if (keyVal.getKey() == null) {¶				loopy = false;¶				continue;¶			}¶¶			aLocalList.add(keyVal);¶¶		}¶		return aLocalList;¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="9147" _type="PauseCommand" date="Tue Apr 12 10:19:58 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="52196488">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[19862]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9146" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:19:58 EDT 2022" docASTNodeCount="51" docActiveCodeLength="371" docExpressionCount="29" docLength="439" projectName="A6" starttimestamp="1649721002230" timestamp="52196488">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	"), Diff(INSERT,"	¶	"), Diff(EQUAL,"}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import readThread.ReadThreadInterface;

public class exampleServerReadThread implements ReadThreadInterface{

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="9148" _type="MoveCaretCommand" caretOffset="424" date="Tue Apr 12 10:19:59 EDT 2022" docOffset="424" starttimestamp="1649721002230" timestamp="52197273" />
  <DocumentChange __id="9149" _type="Insert" date="Tue Apr 12 10:20:00 EDT 2022" docASTNodeCount="55" docActiveCodeLength="381" docExpressionCount="32" docLength="449" length="10" offset="424" repeat="10" starttimestamp="1649721002230" timestamp="52197858" timestamp2="52199047">
    <text><![CDATA[System.out]]></text>
  </DocumentChange>
  <Command __id="9150" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52197864" timestamp2="52197864">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="9151" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52197864" timestamp2="52197864">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="9153" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198090" timestamp2="52198090">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="9154" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198090" timestamp2="52198090">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="9156" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198168" timestamp2="52198168">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9157" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198168" timestamp2="52198168">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9159" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198302" timestamp2="52198302">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9160" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198302" timestamp2="52198302">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9162" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198401" timestamp2="52198401">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9163" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198401" timestamp2="52198401">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9165" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198521" timestamp2="52198521">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="9166" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198521" timestamp2="52198521">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="9168" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198612" timestamp2="52198612">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9169" _type="InsertStringCommand" date="Tue Apr 12 10:20:00 EDT 2022" starttimestamp="1649721002230" timestamp="52198613" timestamp2="52198613">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9170" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 10:20:00 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="52198634" />
  <Command __id="9175" _type="PauseCommand" date="Tue Apr 12 10:20:01 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52199689">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1055]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="9174" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 10:20:01 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="52199689" />
  <DocumentChange __id="9176" _type="Replace" date="Tue Apr 12 10:20:01 EDT 2022" docASTNodeCount="55" docActiveCodeLength="382" docExpressionCount="32" docLength="450" endLine="18" insertionLength="4" int_docASTNodeCount="53" int_docActiveCodeLength="378" int_docExpressionCount="30" int_docLength="446" length="3" offset="431" startLine="18" starttimestamp="1649721002230" timestamp="52199698">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="9177" _type="InsertStringCommand" date="Tue Apr 12 10:20:01 EDT 2022" starttimestamp="1649721002230" timestamp="52199709" timestamp2="52199709">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9178" _type="InsertStringCommand" date="Tue Apr 12 10:20:01 EDT 2022" starttimestamp="1649721002230" timestamp="52199709" timestamp2="52199709">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9179" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 10:20:01 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="52199733" />
  <Command __id="9194" _type="PauseCommand" date="Tue Apr 12 10:20:05 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52202977">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1791]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="9193" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 10:20:05 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="52202977" />
  <DocumentChange __id="9180" _type="Insert" date="Tue Apr 12 10:20:02 EDT 2022" docASTNodeCount="57" docActiveCodeLength="385" docExpressionCount="34" docLength="453" length="3" offset="435" repeat="3" starttimestamp="1649721002230" timestamp="52200026" timestamp2="52200391">
    <text><![CDATA[pin]]></text>
  </DocumentChange>
  <DocumentChange __id="9183" _type="Delete" date="Tue Apr 12 10:20:03 EDT 2022" docASTNodeCount="57" docActiveCodeLength="383" docExpressionCount="34" docLength="451" endLine="18" length="2" offset="436" repeat="2" startLine="18" starttimestamp="1649721002230" timestamp="52200792" timestamp2="52201036">
    <text><![CDATA[in]]></text>
  </DocumentChange>
  <DocumentChange __id="9185" _type="Insert" date="Tue Apr 12 10:20:03 EDT 2022" docASTNodeCount="58" docActiveCodeLength="393" docExpressionCount="35" docLength="461" length="10" offset="436" repeat="8" starttimestamp="1649721002230" timestamp="52201186" timestamp2="52202868">
    <text><![CDATA[rintln("")]]></text>
  </DocumentChange>
  <Command __id="9196" _type="PauseCommand" date="Tue Apr 12 10:20:07 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52204948">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1971]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="9197" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52204954" timestamp2="52204954">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="9198" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52204954" timestamp2="52204954">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="9200" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52205098" timestamp2="52205098">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="9201" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52205098" timestamp2="52205098">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="9203" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52205201" timestamp2="52205201">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9204" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52205201" timestamp2="52205201">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9206" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52205362" timestamp2="52205362">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="9207" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52205362" timestamp2="52205362">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="9209" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52205494" timestamp2="52205494">
    <data><![CDATA[U]]></data>
  </Command>
  <Command __id="9210" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52205494" timestamp2="52205494">
    <data><![CDATA[U]]></data>
  </Command>
  <Command __id="9212" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52205670" timestamp2="52205670">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="9213" _type="InsertStringCommand" date="Tue Apr 12 10:20:07 EDT 2022" starttimestamp="1649721002230" timestamp="52205670" timestamp2="52205670">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="9215" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52205800" timestamp2="52205800">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9216" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52205800" timestamp2="52205800">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9218" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52205984" timestamp2="52205984">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="9219" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52205984" timestamp2="52205984">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="9221" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206115" timestamp2="52206115">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="9222" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206115" timestamp2="52206115">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="9224" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206327" timestamp2="52206327">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9225" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206327" timestamp2="52206327">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9227" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206405" timestamp2="52206405">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="9228" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206405" timestamp2="52206405">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="9230" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206472" timestamp2="52206472">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="9231" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206472" timestamp2="52206472">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="9233" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206604" timestamp2="52206604">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="9234" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206606" timestamp2="52206606">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="9236" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206702" timestamp2="52206702">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9237" _type="InsertStringCommand" date="Tue Apr 12 10:20:08 EDT 2022" starttimestamp="1649721002230" timestamp="52206702" timestamp2="52206702">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9239" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52206772" timestamp2="52206772">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="9240" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52206772" timestamp2="52206772">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="9242" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52206840" timestamp2="52206840">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="9243" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52206841" timestamp2="52206841">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="9245" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52206991" timestamp2="52206991">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9246" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52206991" timestamp2="52206991">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9248" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52207108" timestamp2="52207108">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="9249" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52207108" timestamp2="52207108">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="9251" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52207194" timestamp2="52207194">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="9252" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52207194" timestamp2="52207194">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="9254" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52207398" timestamp2="52207398">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="9255" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52207398" timestamp2="52207398">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="9257" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52207646" timestamp2="52207646">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="9258" _type="InsertStringCommand" date="Tue Apr 12 10:20:09 EDT 2022" starttimestamp="1649721002230" timestamp="52207647" timestamp2="52207647">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="9260" _type="InsertStringCommand" date="Tue Apr 12 10:20:10 EDT 2022" starttimestamp="1649721002230" timestamp="52207832" timestamp2="52207832">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9261" _type="InsertStringCommand" date="Tue Apr 12 10:20:10 EDT 2022" starttimestamp="1649721002230" timestamp="52207832" timestamp2="52207832">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9263" _type="InsertStringCommand" date="Tue Apr 12 10:20:10 EDT 2022" starttimestamp="1649721002230" timestamp="52208107" timestamp2="52208107">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9264" _type="InsertStringCommand" date="Tue Apr 12 10:20:10 EDT 2022" starttimestamp="1649721002230" timestamp="52208107" timestamp2="52208107">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9266" _type="InsertStringCommand" date="Tue Apr 12 10:20:10 EDT 2022" starttimestamp="1649721002230" timestamp="52208330" timestamp2="52208330">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="9267" _type="InsertStringCommand" date="Tue Apr 12 10:20:10 EDT 2022" starttimestamp="1649721002230" timestamp="52208330" timestamp2="52208330">
    <data><![CDATA[H]]></data>
  </Command>
  <DocumentChange __id="9195" _type="Insert" date="Tue Apr 12 10:20:07 EDT 2022" docASTNodeCount="58" docActiveCodeLength="421" docExpressionCount="35" docLength="489" length="28" offset="444" repeat="28" starttimestamp="1649721002230" timestamp="52204948" timestamp2="52209001">
    <text><![CDATA[IN RUN METHOD OF READ THREAD]]></text>
  </DocumentChange>
  <Command __id="9269" _type="InsertStringCommand" date="Tue Apr 12 10:20:10 EDT 2022" starttimestamp="1649721002230" timestamp="52208489" timestamp2="52208489">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="9270" _type="InsertStringCommand" date="Tue Apr 12 10:20:10 EDT 2022" starttimestamp="1649721002230" timestamp="52208490" timestamp2="52208490">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="9272" _type="InsertStringCommand" date="Tue Apr 12 10:20:10 EDT 2022" starttimestamp="1649721002230" timestamp="52208588" timestamp2="52208588">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="9273" _type="InsertStringCommand" date="Tue Apr 12 10:20:10 EDT 2022" starttimestamp="1649721002230" timestamp="52208588" timestamp2="52208588">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="9275" _type="InsertStringCommand" date="Tue Apr 12 10:20:11 EDT 2022" starttimestamp="1649721002230" timestamp="52208795" timestamp2="52208795">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="9276" _type="InsertStringCommand" date="Tue Apr 12 10:20:11 EDT 2022" starttimestamp="1649721002230" timestamp="52208795" timestamp2="52208795">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="9278" _type="InsertStringCommand" date="Tue Apr 12 10:20:11 EDT 2022" starttimestamp="1649721002230" timestamp="52209005" timestamp2="52209005">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="9279" _type="InsertStringCommand" date="Tue Apr 12 10:20:11 EDT 2022" starttimestamp="1649721002230" timestamp="52209005" timestamp2="52209005">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="9280" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 10:20:11 EDT 2022" starttimestamp="1649721002230" timestamp="52209515" />
  <Command __id="9281" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 10:20:11 EDT 2022" starttimestamp="1649721002230" timestamp="52209515" />
  <Command __id="9282" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 10:20:12 EDT 2022" starttimestamp="1649721002230" timestamp="52209988" />
  <Command __id="9283" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 10:20:12 EDT 2022" starttimestamp="1649721002230" timestamp="52209988" />
  <Command __id="9285" _type="InsertStringCommand" date="Tue Apr 12 10:20:12 EDT 2022" starttimestamp="1649721002230" timestamp="52210288" timestamp2="52210288">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="9286" _type="InsertStringCommand" date="Tue Apr 12 10:20:12 EDT 2022" starttimestamp="1649721002230" timestamp="52210288" timestamp2="52210288">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="9288" _type="InsertStringCommand" date="Tue Apr 12 10:20:12 EDT 2022" starttimestamp="1649721002230" timestamp="52210591" timestamp2="52210591">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9289" _type="InsertStringCommand" date="Tue Apr 12 10:20:12 EDT 2022" starttimestamp="1649721002230" timestamp="52210591" timestamp2="52210591">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9291" _type="InsertStringCommand" date="Tue Apr 12 10:20:13 EDT 2022" starttimestamp="1649721002230" timestamp="52211121" timestamp2="52211121">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="9292" _type="InsertStringCommand" date="Tue Apr 12 10:20:13 EDT 2022" starttimestamp="1649721002230" timestamp="52211121" timestamp2="52211121">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="9294" _type="InsertStringCommand" date="Tue Apr 12 10:20:13 EDT 2022" starttimestamp="1649721002230" timestamp="52211255" timestamp2="52211255">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9295" _type="InsertStringCommand" date="Tue Apr 12 10:20:13 EDT 2022" starttimestamp="1649721002230" timestamp="52211255" timestamp2="52211255">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9297" _type="InsertStringCommand" date="Tue Apr 12 10:20:13 EDT 2022" starttimestamp="1649721002230" timestamp="52211428" timestamp2="52211428">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9298" _type="InsertStringCommand" date="Tue Apr 12 10:20:13 EDT 2022" starttimestamp="1649721002230" timestamp="52211428" timestamp2="52211428">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9300" _type="InsertStringCommand" date="Tue Apr 12 10:20:13 EDT 2022" starttimestamp="1649721002230" timestamp="52211539" timestamp2="52211539">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9301" _type="InsertStringCommand" date="Tue Apr 12 10:20:13 EDT 2022" starttimestamp="1649721002230" timestamp="52211540" timestamp2="52211540">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9304" _type="PauseCommand" date="Tue Apr 12 10:20:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52213464">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1924]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="9303" _type="InsertStringCommand" date="Tue Apr 12 10:20:15 EDT 2022" starttimestamp="1649721002230" timestamp="52213464" timestamp2="52213464">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="9305" _type="InsertStringCommand" date="Tue Apr 12 10:20:15 EDT 2022" starttimestamp="1649721002230" timestamp="52213465" timestamp2="52213465">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="9306" _type="InsertStringCommand" date="Tue Apr 12 10:20:15 EDT 2022" starttimestamp="1649721002230" timestamp="52213521" timestamp2="52213521">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="9307" _type="InsertStringCommand" date="Tue Apr 12 10:20:15 EDT 2022" starttimestamp="1649721002230" timestamp="52213521" timestamp2="52213521">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="9309" _type="InsertStringCommand" date="Tue Apr 12 10:20:16 EDT 2022" starttimestamp="1649721002230" timestamp="52213778" timestamp2="52213778">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="9310" _type="InsertStringCommand" date="Tue Apr 12 10:20:16 EDT 2022" starttimestamp="1649721002230" timestamp="52213778" timestamp2="52213778">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="9312" _type="PauseCommand" date="Tue Apr 12 10:20:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52217443">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3665]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="9354" _type="SelectTextCommand" caretOffset="4485" date="Tue Apr 12 10:22:10 EDT 2022" end="4613" start="4485" starttimestamp="1649721002230" timestamp="52328524" />
  <Command __id="9356" _type="CopyCommand" date="Tue Apr 12 10:22:11 EDT 2022" starttimestamp="1649721002230" timestamp="52329252" />
  <Command __id="9344" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:21:53 EDT 2022" docASTNodeCount="933" docActiveCodeLength="5965" docExpressionCount="525" docLength="8043" projectName="A2" starttimestamp="1649721002230" timestamp="52310996">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A2\src\comp533\salve\Slave.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.salve;¶¶import java.util.HashMap;¶import java.util.LinkedList;¶import java.util.List;¶import java.util.Map;¶import java.util.concurrent.BlockingQueue;¶¶import comp533.mvc.KeyValue;¶import comp533.mvc.KeyValueInterface;¶import comp533.mvc.ModelInterface;¶import comp533.mvc.ReducerFactory;¶import comp533.mvc.ReducerInterface;¶import comp533.partitioner.PartitionerFactory;¶import comp533.partitioner.PartitionerInterface;¶import gradingTools.comp533s19.assignment0.AMapReduceTracer;¶¶public class Slave extends AMapReduceTracer implements SlaveInterface {¶	final int number;¶	final int numThreads;¶	final ModelInterface slaveModel;¶	¶	LinkedList<KeyValueInterface<String, Integer>> reductionLinkedList;¶	private Map<String, Integer> result = new HashMap<String, Integer>();¶	private Map<String, Integer> keyToPartition = new HashMap<String, Integer>();¶¶¶	¶	public Slave(final int identifier, final ModelInterface model) {¶		number = identifier;¶		slaveModel = model;¶		numThreads = model.getNumThreads();¶	}¶¶	@Override¶	final public void run() {¶		System.out.println("RUN METHOD");¶¶		while (true) {¶			boolean loop = true;¶			¶			//TODO make wait a separate method¶			synchronized (this) {¶				try {¶					traceWait();¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			LinkedList<KeyValueInterface<String, Integer>> localList = new LinkedList<KeyValueInterface<String, Integer>>();¶			localList = block(slaveModel, localList, loop);¶			/*while (loop) {¶				final BlockingQueue<KeyValueInterface<String, Integer>> aKeyValueQueue = slaveModel.getKeyValueQueue();¶¶				KeyValueInterface<String, Integer> keyVal = null;¶¶				try {¶					traceDequeueRequest(aKeyValueQueue);¶					keyVal = aKeyValueQueue.take();¶					traceDequeue(keyVal);¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶					// continue;¶				}¶¶				// if keyVal is null, null need to stop consuming¶				if (keyVal.getKey() == null) {¶					loop = false;¶					continue;¶				}¶¶				localList.add(keyVal);¶¶			}*/¶			loop = false;¶¶			// partially reduce list¶¶			final ReducerInterface<String, Integer> reducer = ReducerFactory.getReducer();¶			result = reducer.reduce(localList);¶			localList.clear();¶			// this gets the correct partitions for each key¶		/*	final PartitionerInterface<String, Integer> partitioner = PartitionerFactory.getPartitioner();¶			for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶				final int partition = partitioner.getPartition(keyVal.getKey(), keyVal.getValue(), numThreads);¶				keyToPartition.put(keyVal.getKey(), partition);¶			}*/¶			keyToPartition.clear();¶			keyToPartition = partitionKeys(keyToPartition, result); ¶			// System.out.println("key to partition "+keyToPartition.toString());¶¶			// add partitally reduced keyValues to the ReducitonQueueList¶¶			List<LinkedList<KeyValueInterface<String, Integer>>> aReductionQueueList = slaveModel¶					.getReductionQueueList();¶			¶			aReductionQueueList = updateReductionQueueListWithPartitions(aReductionQueueList, keyToPartition);¶¶			keyToPartition.clear();¶¶			// wait for the other slaves to complete their splitting¶			slaveModel.getBarrier().barrier();¶			traceSplitAfterBarrier(number, aReductionQueueList);¶¶			// Need to do final reduction of this threads linkedList¶			synchronized (aReductionQueueList) {¶				final LinkedList<KeyValueInterface<String, Integer>> updatedLocalLinkedList = aReductionQueueList¶						.get(number);¶				result = reducer.reduce(updatedLocalLinkedList);¶				final LinkedList<KeyValueInterface<String, Integer>> finalLocalLinkedList = addKeyValToLocalLinkedList();¶¶				// for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶				// final KeyValueInterface<String, Integer> finalKeyVal = new KeyValue<String,¶				// Integer>();¶				// finalKeyVal.setKey(keyVal.getKey());¶				// finalKeyVal.setValue(keyVal.getValue());¶				// finalLocalLinkedList.add(finalKeyVal);¶				// }¶				// aReductionQueueList.set(number, finalLocalLinkedList);¶				aReductionQueueList.set(number, finalLocalLinkedList);¶			}¶¶			loop = true;¶			slaveModel.getJoiner().finished();¶			// System.out.println(aReductionQueueList.toString());¶¶			// System.out.println(slaveModel.getJoiner().getTotalFinished());¶			if (slaveModel.getJoiner().getTotalFinished() == numThreads) {¶				slaveModel.getJoiner().join();¶¶			}¶¶			synchronized (this) {¶				try {¶					traceWait();¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶				}¶			}¶			continue;¶		}¶¶	}¶¶	@Override¶	public synchronized void notifySlave() {¶		// TODO This should be when a line is read¶¶		traceNotify();¶		this.notify();¶	}¶¶	@Override¶	public String toString() {¶		return SLAVE;¶	}¶¶	@Override¶	public LinkedList<KeyValueInterface<String, Integer>> addKeyValToLocalLinkedList() {¶		final LinkedList<KeyValueInterface<String, Integer>> finalLocalLinkedList = new LinkedList<KeyValueInterface<String, Integer>>();¶¶		for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶			final KeyValueInterface<String, Integer> finalKeyVal = new KeyValue<String, Integer>();¶			finalKeyVal.setKey(keyVal.getKey());¶			finalKeyVal.setValue(keyVal.getValue());¶			finalLocalLinkedList.add(finalKeyVal);¶		}¶		return finalLocalLinkedList;¶	}¶	¶	@Override¶	public List<LinkedList<KeyValueInterface<String, Integer>>> updateReductionQueueListWithPartitions(final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueueList, final Map<String, Integer> aKeyToPartition){¶		for (Map.Entry<String, Integer> keyVal : aKeyToPartition.entrySet()) {¶			final String key = keyVal.getKey();¶			final Integer partition = keyVal.getValue();¶			final Integer val = result.get(key);¶¶			final KeyValueInterface<String, Integer> partialKeyVal = new KeyValue<String, Integer>();¶			partialKeyVal.setKey(key);¶			partialKeyVal.setValue(val);¶			final LinkedList<KeyValueInterface<String, Integer>> localLinkedList = reductionQueueList¶					.get(partition);¶			localLinkedList.add(partialKeyVal);¶			// aReductionQueueList.set(partition, localLinkedList);¶			synchronized (reductionQueueList) {¶				reductionQueueList.set(partition, localLinkedList);¶			}¶¶		}¶		¶		return reductionQueueList;¶	}¶¶	@Override¶	public Map<String, Integer> partitionKeys(final Map<String, Integer> aKeyToPartition, final Map<String, Integer> aResult) {¶		final PartitionerInterface<String, Integer> partitioner = PartitionerFactory.getPartitioner();¶		for (Map.Entry<String, Integer> keyVal : aResult.entrySet()) {¶			final int partition = partitioner.getPartition(keyVal.getKey(), keyVal.getValue(), numThreads);¶			aKeyToPartition.put(keyVal.getKey(), partition);¶		}¶		return aKeyToPartition;¶	}¶¶	@Override¶	public LinkedList<KeyValueInterface<String, Integer>> block(final ModelInterface aSlaveModel, final LinkedList<KeyValueInterface<String, Integer>> aLocalList, final boolean aLoop) {¶		boolean loopy = aLoop;¶		while (loopy) {¶			final BlockingQueue<KeyValueInterface<String, Integer>> aKeyValueQueue = aSlaveModel.getKeyValueQueue();¶¶			KeyValueInterface<String, Integer> keyVal = null;¶¶			try {¶				traceDequeueRequest(aKeyValueQueue);¶				keyVal = aKeyValueQueue.take();¶				traceDequeue(keyVal);¶			} catch (InterruptedException e) {¶				// TODO Auto-generated catch block¶				traceQuit();¶				e.printStackTrace();¶				// continue;¶			}¶¶			// if keyVal is null, null need to stop consuming¶			if (keyVal.getKey() == null) {¶				loopy = false;¶				continue;¶			}¶¶			aLocalList.add(keyVal);¶¶		}¶		return aLocalList;¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="9358" _type="PauseCommand" date="Tue Apr 12 10:22:13 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52330891">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1639]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9359" _type="SelectTextCommand" caretOffset="479" date="Tue Apr 12 10:22:13 EDT 2022" end="603" start="479" starttimestamp="1649721002230" timestamp="52331649" />
  <Command __id="9361" _type="PauseCommand" date="Tue Apr 12 10:22:16 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52333792">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2143]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="9360" _type="MoveCaretCommand" caretOffset="611" date="Tue Apr 12 10:22:16 EDT 2022" docOffset="611" starttimestamp="1649721002230" timestamp="52333792" />
  <Command __id="9362" _type="MoveCaretCommand" caretOffset="611" date="Tue Apr 12 10:22:16 EDT 2022" docOffset="611" starttimestamp="1649721002230" timestamp="52333792" />
  <Command __id="9364" _type="InsertStringCommand" date="Tue Apr 12 10:22:16 EDT 2022" starttimestamp="1649721002230" timestamp="52334189" timestamp2="52334189">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9365" _type="InsertStringCommand" date="Tue Apr 12 10:22:16 EDT 2022" starttimestamp="1649721002230" timestamp="52334189" timestamp2="52334189">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9367" _type="InsertStringCommand" date="Tue Apr 12 10:22:16 EDT 2022" starttimestamp="1649721002230" timestamp="52334264" timestamp2="52334264">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9368" _type="InsertStringCommand" date="Tue Apr 12 10:22:16 EDT 2022" starttimestamp="1649721002230" timestamp="52334264" timestamp2="52334264">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9370" _type="PasteCommand" date="Tue Apr 12 10:22:17 EDT 2022" starttimestamp="1649721002230" timestamp="52335013" />
  <Command __id="9372" _type="PauseCommand" date="Tue Apr 12 10:22:20 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52338516">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3503]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9371" _type="SelectTextCommand" caretOffset="648" date="Tue Apr 12 10:22:20 EDT 2022" end="653" start="648" starttimestamp="1649721002230" timestamp="52338516" />
  <Command __id="9373" _type="SelectTextCommand" caretOffset="648" date="Tue Apr 12 10:22:20 EDT 2022" end="653" start="648" starttimestamp="1649721002230" timestamp="52338516" />
  <Command __id="9357" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:22:13 EDT 2022" docASTNodeCount="73" docActiveCodeLength="516" docExpressionCount="42" docLength="618" projectName="A6" starttimestamp="1649721002230" timestamp="52330891">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		"), Diff(INSERT,"System.out.println("IN RUN METHOD OF READ THREAD");¶		try {¶			wait();¶		} catch (InterruptedException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}"), Diff(EQUAL,"¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import readThread.ReadThreadInterface;

public class exampleServerReadThread implements ReadThreadInterface{

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		System.out.println("IN RUN METHOD OF READ THREAD");
		try {
			wait();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="9363" _type="Insert" date="Tue Apr 12 10:22:16 EDT 2022" docASTNodeCount="73" docActiveCodeLength="522" docExpressionCount="42" docLength="624" length="6" offset="611" repeat="2" starttimestamp="1649721002230" timestamp="52334111" timestamp2="52334239">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="9369" _type="Replace" date="Tue Apr 12 10:22:17 EDT 2022" docASTNodeCount="86" docActiveCodeLength="608" docExpressionCount="48" docLength="752" endLine="28" insertionLength="129" int_docASTNodeCount="73" int_docActiveCodeLength="521" int_docExpressionCount="42" int_docLength="623" length="1" offset="616" startLine="28" starttimestamp="1649721002230" timestamp="52334972">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public synchronized void notifySlave() {
		// TODO This should be when a line is read

		traceNotify();
		this.notify();
	}]]></insertedText>
  </DocumentChange>
  <Command __id="9375" _type="PauseCommand" date="Tue Apr 12 10:22:22 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52340041">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1525]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="9374" _type="Replace" date="Tue Apr 12 10:22:22 EDT 2022" docASTNodeCount="86" docActiveCodeLength="604" docExpressionCount="48" docLength="748" endLine="28" insertionLength="1" int_docASTNodeCount="86" int_docActiveCodeLength="603" int_docExpressionCount="48" int_docLength="747" length="5" offset="648" startLine="28" starttimestamp="1649721002230" timestamp="52340041">
    <deletedText><![CDATA[Slave]]></deletedText>
    <insertedText><![CDATA[T]]></insertedText>
  </DocumentChange>
  <Command __id="9376" _type="InsertStringCommand" date="Tue Apr 12 10:22:22 EDT 2022" starttimestamp="1649721002230" timestamp="52340066" timestamp2="52340066">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9377" _type="InsertStringCommand" date="Tue Apr 12 10:22:22 EDT 2022" starttimestamp="1649721002230" timestamp="52340066" timestamp2="52340066">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9379" _type="InsertStringCommand" date="Tue Apr 12 10:22:22 EDT 2022" starttimestamp="1649721002230" timestamp="52340388" timestamp2="52340388">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="9380" _type="InsertStringCommand" date="Tue Apr 12 10:22:22 EDT 2022" starttimestamp="1649721002230" timestamp="52340388" timestamp2="52340388">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="9382" _type="InsertStringCommand" date="Tue Apr 12 10:22:22 EDT 2022" starttimestamp="1649721002230" timestamp="52340480" timestamp2="52340480">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9383" _type="InsertStringCommand" date="Tue Apr 12 10:22:22 EDT 2022" starttimestamp="1649721002230" timestamp="52340480" timestamp2="52340480">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9385" _type="InsertStringCommand" date="Tue Apr 12 10:22:22 EDT 2022" starttimestamp="1649721002230" timestamp="52340614" timestamp2="52340614">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9386" _type="InsertStringCommand" date="Tue Apr 12 10:22:22 EDT 2022" starttimestamp="1649721002230" timestamp="52340614" timestamp2="52340614">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9388" _type="InsertStringCommand" date="Tue Apr 12 10:22:22 EDT 2022" starttimestamp="1649721002230" timestamp="52340691" timestamp2="52340691">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9389" _type="InsertStringCommand" date="Tue Apr 12 10:22:22 EDT 2022" starttimestamp="1649721002230" timestamp="52340691" timestamp2="52340691">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9391" _type="InsertStringCommand" date="Tue Apr 12 10:22:23 EDT 2022" starttimestamp="1649721002230" timestamp="52341033" timestamp2="52341033">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9392" _type="InsertStringCommand" date="Tue Apr 12 10:22:23 EDT 2022" starttimestamp="1649721002230" timestamp="52341033" timestamp2="52341033">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9394" _type="PauseCommand" date="Tue Apr 12 10:22:24 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52342284">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1251]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="9393" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:22:24 EDT 2022" starttimestamp="1649721002230" timestamp="52342284" />
  <Command __id="9395" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:22:24 EDT 2022" starttimestamp="1649721002230" timestamp="52342366" />
  <Command __id="9396" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:22:24 EDT 2022" starttimestamp="1649721002230" timestamp="52342442" />
  <Command __id="9398" _type="PauseCommand" date="Tue Apr 12 10:22:31 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52349339">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6897]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9397" _type="SelectTextCommand" caretOffset="710" date="Tue Apr 12 10:22:31 EDT 2022" end="724" start="710" starttimestamp="1649721002230" timestamp="52349339" />
  <Command __id="9399" _type="SelectTextCommand" caretOffset="710" date="Tue Apr 12 10:22:31 EDT 2022" end="724" start="710" starttimestamp="1649721002230" timestamp="52349339" />
  <Command __id="9401" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:31 EDT 2022" starttimestamp="1649721002230" timestamp="52349557" />
  <Command __id="9402" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:31 EDT 2022" starttimestamp="1649721002230" timestamp="52349557" />
  <Command __id="9404" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:32 EDT 2022" starttimestamp="1649721002230" timestamp="52350261" />
  <Command __id="9405" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:32 EDT 2022" starttimestamp="1649721002230" timestamp="52350261" />
  <Command __id="9407" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:32 EDT 2022" starttimestamp="1649721002230" timestamp="52350286" />
  <Command __id="9408" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:32 EDT 2022" starttimestamp="1649721002230" timestamp="52350286" />
  <Command __id="9410" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:33 EDT 2022" starttimestamp="1649721002230" timestamp="52350869" />
  <Command __id="9411" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:33 EDT 2022" starttimestamp="1649721002230" timestamp="52350869" />
  <Command __id="9413" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:33 EDT 2022" starttimestamp="1649721002230" timestamp="52351545" />
  <Command __id="9414" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:33 EDT 2022" starttimestamp="1649721002230" timestamp="52351545" />
  <Command __id="9415" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:22:34 EDT 2022" starttimestamp="1649721002230" timestamp="52352415" />
  <Command __id="9416" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:22:34 EDT 2022" starttimestamp="1649721002230" timestamp="52352503" />
  <Command __id="9417" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:22:34 EDT 2022" starttimestamp="1649721002230" timestamp="52352548" />
  <Command __id="9418" _type="ShellCommand" date="Tue Apr 12 10:22:35 EDT 2022" starttimestamp="1649721002230" timestamp="52352828" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9420" _type="PauseCommand" date="Tue Apr 12 10:22:36 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52354547">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1719]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="9419" _type="ShellCommand" date="Tue Apr 12 10:22:36 EDT 2022" starttimestamp="1649721002230" timestamp="52354547" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9422" _type="PauseCommand" date="Tue Apr 12 10:22:44 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52362137">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7590]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="9421" _type="MoveCaretCommand" caretOffset="420" date="Tue Apr 12 10:22:44 EDT 2022" docOffset="420" starttimestamp="1649721002230" timestamp="52362137" />
  <Command __id="9423" _type="MoveCaretCommand" caretOffset="420" date="Tue Apr 12 10:22:44 EDT 2022" docOffset="420" starttimestamp="1649721002230" timestamp="52362137" />
  <Command __id="9425" _type="InsertStringCommand" date="Tue Apr 12 10:22:44 EDT 2022" starttimestamp="1649721002230" timestamp="52362459" timestamp2="52362459">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9426" _type="InsertStringCommand" date="Tue Apr 12 10:22:44 EDT 2022" starttimestamp="1649721002230" timestamp="52362459" timestamp2="52362459">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9428" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52362804" timestamp2="52362804">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="9429" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52362804" timestamp2="52362804">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="9431" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52362884" timestamp2="52362884">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="9432" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52362884" timestamp2="52362884">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="9434" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52363162" timestamp2="52363162">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9435" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52363162" timestamp2="52363162">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9437" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52363374" timestamp2="52363374">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9438" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52363374" timestamp2="52363374">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9440" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52363492" timestamp2="52363492">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9441" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52363492" timestamp2="52363492">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9443" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52363744" timestamp2="52363744">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="9444" _type="InsertStringCommand" date="Tue Apr 12 10:22:45 EDT 2022" starttimestamp="1649721002230" timestamp="52363744" timestamp2="52363744">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="9446" _type="InsertStringCommand" date="Tue Apr 12 10:22:46 EDT 2022" starttimestamp="1649721002230" timestamp="52363992" timestamp2="52363992">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9447" _type="InsertStringCommand" date="Tue Apr 12 10:22:46 EDT 2022" starttimestamp="1649721002230" timestamp="52363992" timestamp2="52363992">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9449" _type="InsertStringCommand" date="Tue Apr 12 10:22:46 EDT 2022" starttimestamp="1649721002230" timestamp="52364157" timestamp2="52364157">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9450" _type="InsertStringCommand" date="Tue Apr 12 10:22:46 EDT 2022" starttimestamp="1649721002230" timestamp="52364157" timestamp2="52364157">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9452" _type="InsertStringCommand" date="Tue Apr 12 10:22:46 EDT 2022" starttimestamp="1649721002230" timestamp="52364278" timestamp2="52364278">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="9453" _type="InsertStringCommand" date="Tue Apr 12 10:22:46 EDT 2022" starttimestamp="1649721002230" timestamp="52364278" timestamp2="52364278">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="9455" _type="InsertStringCommand" date="Tue Apr 12 10:22:46 EDT 2022" starttimestamp="1649721002230" timestamp="52364402" timestamp2="52364402">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9456" _type="InsertStringCommand" date="Tue Apr 12 10:22:46 EDT 2022" starttimestamp="1649721002230" timestamp="52364402" timestamp2="52364402">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9457" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 10:22:47 EDT 2022" starttimestamp="1649721002230" timestamp="52364872" />
  <Command __id="9458" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 10:22:47 EDT 2022" starttimestamp="1649721002230" timestamp="52364873" />
  <Command __id="9461" _type="PauseCommand" date="Tue Apr 12 10:22:48 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52365883">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1010]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="9460" _type="InsertStringCommand" date="Tue Apr 12 10:22:48 EDT 2022" starttimestamp="1649721002230" timestamp="52365883" timestamp2="52365883">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="9462" _type="InsertStringCommand" date="Tue Apr 12 10:22:48 EDT 2022" starttimestamp="1649721002230" timestamp="52365883" timestamp2="52365883">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="9464" _type="PauseCommand" date="Tue Apr 12 10:22:49 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52367214">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1331]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="9463" _type="MoveCaretCommand" caretOffset="620" date="Tue Apr 12 10:22:49 EDT 2022" docOffset="620" starttimestamp="1649721002230" timestamp="52367214" />
  <Command __id="9465" _type="MoveCaretCommand" caretOffset="620" date="Tue Apr 12 10:22:49 EDT 2022" docOffset="620" starttimestamp="1649721002230" timestamp="52367214" />
  <Command __id="9467" _type="InsertStringCommand" date="Tue Apr 12 10:22:49 EDT 2022" starttimestamp="1649721002230" timestamp="52367450" timestamp2="52367450">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9468" _type="InsertStringCommand" date="Tue Apr 12 10:22:49 EDT 2022" starttimestamp="1649721002230" timestamp="52367450" timestamp2="52367450">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9470" _type="InsertStringCommand" date="Tue Apr 12 10:22:50 EDT 2022" starttimestamp="1649721002230" timestamp="52368029" timestamp2="52368029">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="9471" _type="InsertStringCommand" date="Tue Apr 12 10:22:50 EDT 2022" starttimestamp="1649721002230" timestamp="52368029" timestamp2="52368029">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="9474" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:50 EDT 2022" starttimestamp="1649721002230" timestamp="52368750" />
  <Command __id="9475" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:22:50 EDT 2022" starttimestamp="1649721002230" timestamp="52368751" />
  <Command __id="9477" _type="InsertStringCommand" date="Tue Apr 12 10:22:51 EDT 2022" starttimestamp="1649721002230" timestamp="52369710" timestamp2="52369710">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="9478" _type="InsertStringCommand" date="Tue Apr 12 10:22:51 EDT 2022" starttimestamp="1649721002230" timestamp="52369710" timestamp2="52369710">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="9480" _type="PauseCommand" date="Tue Apr 12 10:22:54 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52372504">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2794]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9479" _type="SelectTextCommand" caretOffset="440" date="Tue Apr 12 10:22:54 EDT 2022" end="620" start="440" starttimestamp="1649721002230" timestamp="52372504" />
  <Command __id="9481" _type="SelectTextCommand" caretOffset="440" date="Tue Apr 12 10:22:54 EDT 2022" end="620" start="440" starttimestamp="1649721002230" timestamp="52372505" />
  <DocumentChange __id="9378" _type="Insert" date="Tue Apr 12 10:22:22 EDT 2022" docASTNodeCount="86" docActiveCodeLength="609" docExpressionCount="48" docLength="753" length="5" offset="649" repeat="5" starttimestamp="1649721002230" timestamp="52340372" timestamp2="52341007">
    <text><![CDATA[hread]]></text>
  </DocumentChange>
  <DocumentChange __id="9400" _type="Delete" date="Tue Apr 12 10:22:31 EDT 2022" docASTNodeCount="83" docActiveCodeLength="589" docExpressionCount="46" docLength="733" endLine="31" length="20" offset="704" repeat="5" startLine="29" starttimestamp="1649721002230" timestamp="52349549" timestamp2="52351522">
    <text><![CDATA[

		traceNotify();]]></text>
  </DocumentChange>
  <DocumentChange __id="9424" _type="Insert" date="Tue Apr 12 10:22:44 EDT 2022" docASTNodeCount="87" docActiveCodeLength="606" docExpressionCount="47" docLength="750" length="17" offset="420" repeat="12" starttimestamp="1649721002230" timestamp="52362435" timestamp2="52365868">
    <text><![CDATA[
		while(true) {]]></text>
  </DocumentChange>
  <DocumentChange __id="9466" _type="Insert" date="Tue Apr 12 10:22:49 EDT 2022" docASTNodeCount="90" docActiveCodeLength="612" docExpressionCount="50" docLength="756" length="6" offset="620" repeat="2" starttimestamp="1649721002230" timestamp="52367432" timestamp2="52368022">
    <text><![CDATA[
		""]]></text>
  </DocumentChange>
  <DocumentChange __id="9472" _type="Delete" date="Tue Apr 12 10:22:50 EDT 2022" docASTNodeCount="87" docActiveCodeLength="610" docExpressionCount="47" docLength="754" endLine="26" length="2" offset="624" repeat="2" startLine="26" starttimestamp="1649721002230" timestamp="52368723" timestamp2="52368739">
    <text><![CDATA[""]]></text>
  </DocumentChange>
  <DocumentChange __id="9476" _type="Replace" date="Tue Apr 12 10:22:51 EDT 2022" docASTNodeCount="86" docActiveCodeLength="611" docExpressionCount="47" docLength="755" endLine="26" insertionLength="3" int_docASTNodeCount="87" int_docActiveCodeLength="608" int_docExpressionCount="47" int_docLength="752" length="2" offset="622" startLine="26" starttimestamp="1649721002230" timestamp="52369693">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		}]]></insertedText>
  </DocumentChange>
  <Command __id="9483" _type="PauseCommand" date="Tue Apr 12 10:22:56 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52374291">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1786]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="9505" _type="SelectTextCommand" caretOffset="767" date="Tue Apr 12 10:23:17 EDT 2022" end="1039" start="767" starttimestamp="1649721002230" timestamp="52394984" />
  <Command __id="9507" _type="CopyCommand" date="Tue Apr 12 10:23:17 EDT 2022" starttimestamp="1649721002230" timestamp="52395535" />
  <Command __id="9492" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:22:58 EDT 2022" docASTNodeCount="933" docActiveCodeLength="5965" docExpressionCount="525" docLength="8043" projectName="A2" starttimestamp="1649721002230" timestamp="52376273">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A2\src\comp533\salve\Slave.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.salve;¶¶import java.util.HashMap;¶import java.util.LinkedList;¶import java.util.List;¶import java.util.Map;¶import java.util.concurrent.BlockingQueue;¶¶import comp533.mvc.KeyValue;¶import comp533.mvc.KeyValueInterface;¶import comp533.mvc.ModelInterface;¶import comp533.mvc.ReducerFactory;¶import comp533.mvc.ReducerInterface;¶import comp533.partitioner.PartitionerFactory;¶import comp533.partitioner.PartitionerInterface;¶import gradingTools.comp533s19.assignment0.AMapReduceTracer;¶¶public class Slave extends AMapReduceTracer implements SlaveInterface {¶	final int number;¶	final int numThreads;¶	final ModelInterface slaveModel;¶	¶	LinkedList<KeyValueInterface<String, Integer>> reductionLinkedList;¶	private Map<String, Integer> result = new HashMap<String, Integer>();¶	private Map<String, Integer> keyToPartition = new HashMap<String, Integer>();¶¶¶	¶	public Slave(final int identifier, final ModelInterface model) {¶		number = identifier;¶		slaveModel = model;¶		numThreads = model.getNumThreads();¶	}¶¶	@Override¶	final public void run() {¶		System.out.println("RUN METHOD");¶¶		while (true) {¶			boolean loop = true;¶			¶			//TODO make wait a separate method¶			synchronized (this) {¶				try {¶					traceWait();¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			LinkedList<KeyValueInterface<String, Integer>> localList = new LinkedList<KeyValueInterface<String, Integer>>();¶			localList = block(slaveModel, localList, loop);¶			/*while (loop) {¶				final BlockingQueue<KeyValueInterface<String, Integer>> aKeyValueQueue = slaveModel.getKeyValueQueue();¶¶				KeyValueInterface<String, Integer> keyVal = null;¶¶				try {¶					traceDequeueRequest(aKeyValueQueue);¶					keyVal = aKeyValueQueue.take();¶					traceDequeue(keyVal);¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶					// continue;¶				}¶¶				// if keyVal is null, null need to stop consuming¶				if (keyVal.getKey() == null) {¶					loop = false;¶					continue;¶				}¶¶				localList.add(keyVal);¶¶			}*/¶			loop = false;¶¶			// partially reduce list¶¶			final ReducerInterface<String, Integer> reducer = ReducerFactory.getReducer();¶			result = reducer.reduce(localList);¶			localList.clear();¶			// this gets the correct partitions for each key¶		/*	final PartitionerInterface<String, Integer> partitioner = PartitionerFactory.getPartitioner();¶			for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶				final int partition = partitioner.getPartition(keyVal.getKey(), keyVal.getValue(), numThreads);¶				keyToPartition.put(keyVal.getKey(), partition);¶			}*/¶			keyToPartition.clear();¶			keyToPartition = partitionKeys(keyToPartition, result); ¶			// System.out.println("key to partition "+keyToPartition.toString());¶¶			// add partitally reduced keyValues to the ReducitonQueueList¶¶			List<LinkedList<KeyValueInterface<String, Integer>>> aReductionQueueList = slaveModel¶					.getReductionQueueList();¶			¶			aReductionQueueList = updateReductionQueueListWithPartitions(aReductionQueueList, keyToPartition);¶¶			keyToPartition.clear();¶¶			// wait for the other slaves to complete their splitting¶			slaveModel.getBarrier().barrier();¶			traceSplitAfterBarrier(number, aReductionQueueList);¶¶			// Need to do final reduction of this threads linkedList¶			synchronized (aReductionQueueList) {¶				final LinkedList<KeyValueInterface<String, Integer>> updatedLocalLinkedList = aReductionQueueList¶						.get(number);¶				result = reducer.reduce(updatedLocalLinkedList);¶				final LinkedList<KeyValueInterface<String, Integer>> finalLocalLinkedList = addKeyValToLocalLinkedList();¶¶				// for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶				// final KeyValueInterface<String, Integer> finalKeyVal = new KeyValue<String,¶				// Integer>();¶				// finalKeyVal.setKey(keyVal.getKey());¶				// finalKeyVal.setValue(keyVal.getValue());¶				// finalLocalLinkedList.add(finalKeyVal);¶				// }¶				// aReductionQueueList.set(number, finalLocalLinkedList);¶				aReductionQueueList.set(number, finalLocalLinkedList);¶			}¶¶			loop = true;¶			slaveModel.getJoiner().finished();¶			// System.out.println(aReductionQueueList.toString());¶¶			// System.out.println(slaveModel.getJoiner().getTotalFinished());¶			if (slaveModel.getJoiner().getTotalFinished() == numThreads) {¶				slaveModel.getJoiner().join();¶¶			}¶¶			synchronized (this) {¶				try {¶					traceWait();¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					traceQuit();¶					e.printStackTrace();¶				}¶			}¶			continue;¶		}¶¶	}¶¶	@Override¶	public synchronized void notifySlave() {¶		// TODO This should be when a line is read¶¶		traceNotify();¶		this.notify();¶	}¶¶	@Override¶	public String toString() {¶		return SLAVE;¶	}¶¶	@Override¶	public LinkedList<KeyValueInterface<String, Integer>> addKeyValToLocalLinkedList() {¶		final LinkedList<KeyValueInterface<String, Integer>> finalLocalLinkedList = new LinkedList<KeyValueInterface<String, Integer>>();¶¶		for (Map.Entry<String, Integer> keyVal : result.entrySet()) {¶			final KeyValueInterface<String, Integer> finalKeyVal = new KeyValue<String, Integer>();¶			finalKeyVal.setKey(keyVal.getKey());¶			finalKeyVal.setValue(keyVal.getValue());¶			finalLocalLinkedList.add(finalKeyVal);¶		}¶		return finalLocalLinkedList;¶	}¶	¶	@Override¶	public List<LinkedList<KeyValueInterface<String, Integer>>> updateReductionQueueListWithPartitions(final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueueList, final Map<String, Integer> aKeyToPartition){¶		for (Map.Entry<String, Integer> keyVal : aKeyToPartition.entrySet()) {¶			final String key = keyVal.getKey();¶			final Integer partition = keyVal.getValue();¶			final Integer val = result.get(key);¶¶			final KeyValueInterface<String, Integer> partialKeyVal = new KeyValue<String, Integer>();¶			partialKeyVal.setKey(key);¶			partialKeyVal.setValue(val);¶			final LinkedList<KeyValueInterface<String, Integer>> localLinkedList = reductionQueueList¶					.get(partition);¶			localLinkedList.add(partialKeyVal);¶			// aReductionQueueList.set(partition, localLinkedList);¶			synchronized (reductionQueueList) {¶				reductionQueueList.set(partition, localLinkedList);¶			}¶¶		}¶		¶		return reductionQueueList;¶	}¶¶	@Override¶	public Map<String, Integer> partitionKeys(final Map<String, Integer> aKeyToPartition, final Map<String, Integer> aResult) {¶		final PartitionerInterface<String, Integer> partitioner = PartitionerFactory.getPartitioner();¶		for (Map.Entry<String, Integer> keyVal : aResult.entrySet()) {¶			final int partition = partitioner.getPartition(keyVal.getKey(), keyVal.getValue(), numThreads);¶			aKeyToPartition.put(keyVal.getKey(), partition);¶		}¶		return aKeyToPartition;¶	}¶¶	@Override¶	public LinkedList<KeyValueInterface<String, Integer>> block(final ModelInterface aSlaveModel, final LinkedList<KeyValueInterface<String, Integer>> aLocalList, final boolean aLoop) {¶		boolean loopy = aLoop;¶		while (loopy) {¶			final BlockingQueue<KeyValueInterface<String, Integer>> aKeyValueQueue = aSlaveModel.getKeyValueQueue();¶¶			KeyValueInterface<String, Integer> keyVal = null;¶¶			try {¶				traceDequeueRequest(aKeyValueQueue);¶				keyVal = aKeyValueQueue.take();¶				traceDequeue(keyVal);¶			} catch (InterruptedException e) {¶				// TODO Auto-generated catch block¶				traceQuit();¶				e.printStackTrace();¶				// continue;¶			}¶¶			// if keyVal is null, null need to stop consuming¶			if (keyVal.getKey() == null) {¶				loopy = false;¶				continue;¶			}¶¶			aLocalList.add(keyVal);¶¶		}¶		return aLocalList;¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="9509" _type="PauseCommand" date="Tue Apr 12 10:23:19 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52397013">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1478]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9508" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:23:19 EDT 2022" docASTNodeCount="86" docActiveCodeLength="618" docExpressionCount="47" docLength="762" projectName="A6" starttimestamp="1649721002230" timestamp="52397013">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		"), Diff(INSERT,"while(true) {¶			"), Diff(EQUAL,"System.out.println("IN RUN METHOD OF READ THREAD");¶		"), Diff(INSERT,"	"), Diff(EQUAL,"try {¶			"), Diff(INSERT,"	"), Diff(EQUAL,"wait();¶		"), Diff(INSERT,"	"), Diff(EQUAL,"} catch (InterruptedException e) {¶			"), Diff(INSERT,"	"), Diff(EQUAL,"// TODO Auto-generated catch block¶			"), Diff(INSERT,"	"), Diff(EQUAL,"e.printStackTrace();¶		"), Diff(INSERT,"	"), Diff(EQUAL,"}¶		"), Diff(INSERT,"}¶		¶	}¶	¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();"), Diff(EQUAL,"¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import readThread.ReadThreadInterface;

public class exampleServerReadThread implements ReadThreadInterface{

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			System.out.println("IN RUN METHOD OF READ THREAD");
			try {
				wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
	}
	
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <Command __id="9510" _type="SelectTextCommand" caretOffset="441" date="Tue Apr 12 10:23:19 EDT 2022" end="627" start="441" starttimestamp="1649721002230" timestamp="52397733" />
  <Command __id="9511" _type="MoveCaretCommand" caretOffset="437" date="Tue Apr 12 10:23:20 EDT 2022" docOffset="437" starttimestamp="1649721002230" timestamp="52398719" />
  <Command __id="9512" _type="MoveCaretCommand" caretOffset="437" date="Tue Apr 12 10:23:20 EDT 2022" docOffset="437" starttimestamp="1649721002230" timestamp="52398719" />
  <DocumentChange __id="9513" _type="Insert" date="Tue Apr 12 10:23:21 EDT 2022" docASTNodeCount="86" docActiveCodeLength="623" docExpressionCount="47" docLength="767" length="5" offset="437" starttimestamp="1649721002230" timestamp="52399005">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <Command __id="9514" _type="InsertStringCommand" date="Tue Apr 12 10:23:21 EDT 2022" starttimestamp="1649721002230" timestamp="52399027" timestamp2="52399027">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9515" _type="InsertStringCommand" date="Tue Apr 12 10:23:21 EDT 2022" starttimestamp="1649721002230" timestamp="52399028" timestamp2="52399028">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="9516" _type="Replace" date="Tue Apr 12 10:23:21 EDT 2022" docASTNodeCount="111" docActiveCodeLength="808" docExpressionCount="59" docLength="1039" endLine="19" insertionLength="275" int_docASTNodeCount="86" int_docActiveCodeLength="620" int_docExpressionCount="47" int_docLength="764" length="3" offset="439" startLine="19" starttimestamp="1649721002230" timestamp="52399453">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			synchronized (this) {
				try {
					traceWait();
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					traceQuit();
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}]]></insertedText>
  </DocumentChange>
  <Command __id="9517" _type="PasteCommand" date="Tue Apr 12 10:23:21 EDT 2022" starttimestamp="1649721002230" timestamp="52399657" />
  <Command __id="9519" _type="InsertStringCommand" date="Tue Apr 12 10:23:22 EDT 2022" starttimestamp="1649721002230" timestamp="52400046" timestamp2="52400046">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9520" _type="InsertStringCommand" date="Tue Apr 12 10:23:22 EDT 2022" starttimestamp="1649721002230" timestamp="52400046" timestamp2="52400046">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9522" _type="PauseCommand" date="Tue Apr 12 10:23:24 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52401897">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1851]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="9521" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:23:24 EDT 2022" starttimestamp="1649721002230" timestamp="52401897" />
  <Command __id="9523" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:23:24 EDT 2022" starttimestamp="1649721002230" timestamp="52401976" />
  <Command __id="9524" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:23:24 EDT 2022" starttimestamp="1649721002230" timestamp="52402003" />
  <Command __id="9526" _type="PauseCommand" date="Tue Apr 12 10:23:25 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52403761">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1758]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9525" _type="SelectTextCommand" caretOffset="480" date="Tue Apr 12 10:23:25 EDT 2022" end="493" start="480" starttimestamp="1649721002230" timestamp="52403761" />
  <Command __id="9527" _type="SelectTextCommand" caretOffset="480" date="Tue Apr 12 10:23:25 EDT 2022" end="493" start="480" starttimestamp="1649721002230" timestamp="52403761" />
  <Command __id="9529" _type="InsertStringCommand" date="Tue Apr 12 10:23:26 EDT 2022" starttimestamp="1649721002230" timestamp="52403999" timestamp2="52403999">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="9530" _type="InsertStringCommand" date="Tue Apr 12 10:23:26 EDT 2022" starttimestamp="1649721002230" timestamp="52403999" timestamp2="52403999">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="9532" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:26 EDT 2022" starttimestamp="1649721002230" timestamp="52404360" />
  <Command __id="9533" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:26 EDT 2022" starttimestamp="1649721002230" timestamp="52404361" />
  <Command __id="9535" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:26 EDT 2022" starttimestamp="1649721002230" timestamp="52404712" />
  <Command __id="9536" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:26 EDT 2022" starttimestamp="1649721002230" timestamp="52404712" />
  <Command __id="9538" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:27 EDT 2022" starttimestamp="1649721002230" timestamp="52405100" />
  <Command __id="9539" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:27 EDT 2022" starttimestamp="1649721002230" timestamp="52405100" />
  <Command __id="9541" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:28 EDT 2022" starttimestamp="1649721002230" timestamp="52405873" />
  <Command __id="9542" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:28 EDT 2022" starttimestamp="1649721002230" timestamp="52405873" />
  <Command __id="9544" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:28 EDT 2022" starttimestamp="1649721002230" timestamp="52406482" />
  <Command __id="9545" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:28 EDT 2022" starttimestamp="1649721002230" timestamp="52406482" />
  <Command __id="9547" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:29 EDT 2022" starttimestamp="1649721002230" timestamp="52406955" />
  <Command __id="9548" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:29 EDT 2022" starttimestamp="1649721002230" timestamp="52406955" />
  <Command __id="9550" _type="PauseCommand" date="Tue Apr 12 10:23:30 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52408740">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1785]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9549" _type="SelectTextCommand" caretOffset="571" date="Tue Apr 12 10:23:30 EDT 2022" end="588" start="571" starttimestamp="1649721002230" timestamp="52408740" />
  <Command __id="9551" _type="SelectTextCommand" caretOffset="571" date="Tue Apr 12 10:23:30 EDT 2022" end="588" start="571" starttimestamp="1649721002230" timestamp="52408741" />
  <Command __id="9553" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:31 EDT 2022" starttimestamp="1649721002230" timestamp="52409014" />
  <Command __id="9554" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:31 EDT 2022" starttimestamp="1649721002230" timestamp="52409014" />
  <Command __id="9556" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:32 EDT 2022" starttimestamp="1649721002230" timestamp="52409921" />
  <Command __id="9557" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:32 EDT 2022" starttimestamp="1649721002230" timestamp="52409921" />
  <Command __id="9558" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:23:32 EDT 2022" starttimestamp="1649721002230" timestamp="52410685" />
  <Command __id="9559" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:23:33 EDT 2022" starttimestamp="1649721002230" timestamp="52410773" />
  <Command __id="9560" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:23:33 EDT 2022" starttimestamp="1649721002230" timestamp="52410795" />
  <Command __id="9561" _type="ShellCommand" date="Tue Apr 12 10:23:33 EDT 2022" starttimestamp="1649721002230" timestamp="52411068" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9563" _type="PauseCommand" date="Tue Apr 12 10:23:35 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52412931">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1863]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="9562" _type="ShellCommand" date="Tue Apr 12 10:23:35 EDT 2022" starttimestamp="1649721002230" timestamp="52412931" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9565" _type="PauseCommand" date="Tue Apr 12 10:23:36 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52414029">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1098]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="9564" _type="ShellCommand" date="Tue Apr 12 10:23:36 EDT 2022" starttimestamp="1649721002230" timestamp="52414029" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9566" _type="ShellCommand" date="Tue Apr 12 10:23:36 EDT 2022" starttimestamp="1649721002230" timestamp="52414202" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="9518" _type="Insert" date="Tue Apr 12 10:23:22 EDT 2022" docASTNodeCount="111" docActiveCodeLength="813" docExpressionCount="59" docLength="1044" length="5" offset="714" starttimestamp="1649721002230" timestamp="52400019">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="9528" _type="Replace" date="Tue Apr 12 10:23:26 EDT 2022" docASTNodeCount="108" docActiveCodeLength="801" docExpressionCount="57" docLength="1032" endLine="21" insertionLength="1" int_docASTNodeCount="108" int_docActiveCodeLength="800" int_docExpressionCount="57" int_docLength="1031" length="13" offset="480" startLine="21" starttimestamp="1649721002230" timestamp="52403982">
    <deletedText><![CDATA[	traceWait();]]></deletedText>
    <insertedText><![CDATA[\]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9531" _type="Delete" date="Tue Apr 12 10:23:26 EDT 2022" docASTNodeCount="108" docActiveCodeLength="794" docExpressionCount="57" docLength="1025" endLine="21" length="7" offset="474" repeat="6" startLine="20" starttimestamp="1649721002230" timestamp="52404355" timestamp2="52406930">
    <text><![CDATA[
				\]]></text>
  </DocumentChange>
  <DocumentChange __id="9552" _type="Delete" date="Tue Apr 12 10:23:31 EDT 2022" docASTNodeCount="105" docActiveCodeLength="775" docExpressionCount="55" docLength="1006" endLine="24" length="19" offset="569" repeat="2" startLine="23" starttimestamp="1649721002230" timestamp="52409010" timestamp2="52409905">
    <text><![CDATA[
					traceQuit();]]></text>
  </DocumentChange>
  <Command __id="9568" _type="PauseCommand" date="Tue Apr 12 10:23:38 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52416179">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1977]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9569" _type="MoveCaretCommand" caretOffset="3902" date="Tue Apr 12 10:23:38 EDT 2022" docOffset="3902" starttimestamp="1649721002230" timestamp="52416452" />
  <Command __id="9571" _type="PauseCommand" date="Tue Apr 12 10:23:43 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52421426">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4974]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9570" _type="SelectTextCommand" caretOffset="3773" date="Tue Apr 12 10:23:43 EDT 2022" end="3829" start="3773" starttimestamp="1649721002230" timestamp="52421426" />
  <Command __id="9572" _type="SelectTextCommand" caretOffset="3773" date="Tue Apr 12 10:23:43 EDT 2022" end="3829" start="3773" starttimestamp="1649721002230" timestamp="52421426" />
  <Command __id="9574" _type="CutCommand" date="Tue Apr 12 10:23:43 EDT 2022" starttimestamp="1649721002230" timestamp="52421580" />
  <Command __id="9576" _type="PauseCommand" date="Tue Apr 12 10:23:47 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52425066">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[3486]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="9575" _type="MoveCaretCommand" caretOffset="2731" date="Tue Apr 12 10:23:47 EDT 2022" docOffset="2731" starttimestamp="1649721002230" timestamp="52425066" />
  <Command __id="9577" _type="MoveCaretCommand" caretOffset="2731" date="Tue Apr 12 10:23:47 EDT 2022" docOffset="2731" starttimestamp="1649721002230" timestamp="52425066" />
  <Command __id="9579" _type="InsertStringCommand" date="Tue Apr 12 10:23:47 EDT 2022" starttimestamp="1649721002230" timestamp="52425330" timestamp2="52425330">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9580" _type="InsertStringCommand" date="Tue Apr 12 10:23:47 EDT 2022" starttimestamp="1649721002230" timestamp="52425330" timestamp2="52425330">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9582" _type="InsertStringCommand" date="Tue Apr 12 10:23:47 EDT 2022" starttimestamp="1649721002230" timestamp="52425647" timestamp2="52425647">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9583" _type="InsertStringCommand" date="Tue Apr 12 10:23:47 EDT 2022" starttimestamp="1649721002230" timestamp="52425647" timestamp2="52425647">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9585" _type="PasteCommand" date="Tue Apr 12 10:23:48 EDT 2022" starttimestamp="1649721002230" timestamp="52426024" />
  <Command __id="9587" _type="PauseCommand" date="Tue Apr 12 10:23:50 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52427885">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1861]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="9586" _type="MoveCaretCommand" caretOffset="2778" date="Tue Apr 12 10:23:50 EDT 2022" docOffset="2778" starttimestamp="1649721002230" timestamp="52427885" />
  <Command __id="9588" _type="MoveCaretCommand" caretOffset="2778" date="Tue Apr 12 10:23:50 EDT 2022" docOffset="2778" starttimestamp="1649721002230" timestamp="52427886" />
  <Command __id="9590" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:50 EDT 2022" starttimestamp="1649721002230" timestamp="52428142" />
  <Command __id="9591" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:50 EDT 2022" starttimestamp="1649721002230" timestamp="52428142" />
  <Command __id="9593" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:50 EDT 2022" starttimestamp="1649721002230" timestamp="52428386" />
  <Command __id="9594" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:50 EDT 2022" starttimestamp="1649721002230" timestamp="52428386" />
  <Command __id="9596" _type="PauseCommand" date="Tue Apr 12 10:23:53 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52431183">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2797]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9595" _type="SelectTextCommand" caretOffset="2696" date="Tue Apr 12 10:23:53 EDT 2022" end="2731" start="2696" starttimestamp="1649721002230" timestamp="52431183" />
  <Command __id="9597" _type="SelectTextCommand" caretOffset="2696" date="Tue Apr 12 10:23:53 EDT 2022" end="2731" start="2696" starttimestamp="1649721002230" timestamp="52431184" />
  <Command __id="9599" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:53 EDT 2022" starttimestamp="1649721002230" timestamp="52431417" />
  <Command __id="9600" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:53 EDT 2022" starttimestamp="1649721002230" timestamp="52431418" />
  <Command __id="9602" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:53 EDT 2022" starttimestamp="1649721002230" timestamp="52431684" />
  <Command __id="9603" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:53 EDT 2022" starttimestamp="1649721002230" timestamp="52431684" />
  <Command __id="9605" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:54 EDT 2022" starttimestamp="1649721002230" timestamp="52431983" />
  <Command __id="9606" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:54 EDT 2022" starttimestamp="1649721002230" timestamp="52431983" />
  <Command __id="9608" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:54 EDT 2022" starttimestamp="1649721002230" timestamp="52432357" />
  <Command __id="9609" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:23:54 EDT 2022" starttimestamp="1649721002230" timestamp="52432357" />
  <Command __id="9610" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:23:55 EDT 2022" starttimestamp="1649721002230" timestamp="52433067" />
  <Command __id="9611" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:23:55 EDT 2022" starttimestamp="1649721002230" timestamp="52433124" />
  <Command __id="9612" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:23:55 EDT 2022" starttimestamp="1649721002230" timestamp="52433222" />
  <Command __id="9567" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:23:38 EDT 2022" docASTNodeCount="530" docActiveCodeLength="3720" docExpressionCount="371" docLength="4200" projectName="A6" starttimestamp="1649721002230" timestamp="52416179">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶import assignments.util.MiscAssignmentUtils;¶¶import client.ClientRemoteInterfaceGIPC;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	Thread readThread = null;¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		final ReadThreadInterface reader = new exampleServerReadThread();¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		//readThread.setName("readThread");¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		// Pop value off the bounded buffer¶		ByteBuffer originalMessage = null;¶		try {¶			originalMessage = boundedBuffer.take();¶		} catch (InterruptedException e) {¶			e.printStackTrace();¶		}¶		// Echo recieve message to all clients (except original message sender)¶		for (SocketChannel socket : socketList) {¶			if (!socket.equals(aSocketChannel)) {¶				nioManager.write(socket, originalMessage, this);¶			}¶		}¶		¶		"), Diff(INSERT,"//Start thread and do some action¶		readThread.start();¶		System.out.println("thread has completed action and is now waiting");"), Diff(EQUAL,"¶¶	}¶¶	@Override¶	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import assignments.util.MiscAssignmentUtils;

import client.ClientRemoteInterfaceGIPC;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {

	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	Thread readThread = null;
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();

	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		final ReadThreadInterface reader = new exampleServerReadThread();
				
		//Create new readThread
		readThread = new Thread(reader);
		//readThread.setName("readThread");
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		// Pop value off the bounded buffer
		ByteBuffer originalMessage = null;
		try {
			originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		// Echo recieve message to all clients (except original message sender)
		for (SocketChannel socket : socketList) {
			if (!socket.equals(aSocketChannel)) {
				nioManager.write(socket, originalMessage, this);
			}
		}
		
		//Start thread and do some action
		readThread.start();
		System.out.println("thread has completed action and is now waiting");

	}

	@Override
	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="9573" _type="Delete" date="Tue Apr 12 10:23:43 EDT 2022" docASTNodeCount="526" docActiveCodeLength="3697" docExpressionCount="368" docLength="4144" endLine="103" length="56" offset="3773" startLine="102" starttimestamp="1649721002230" timestamp="52421555">
    <text><![CDATA[//Start thread and do some action
		readThread.start();]]></text>
  </DocumentChange>
  <DocumentChange __id="9578" _type="Insert" date="Tue Apr 12 10:23:47 EDT 2022" docASTNodeCount="526" docActiveCodeLength="3705" docExpressionCount="368" docLength="4152" length="8" offset="2731" repeat="2" starttimestamp="1649721002230" timestamp="52425305" timestamp2="52425622">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="9584" _type="Replace" date="Tue Apr 12 10:23:48 EDT 2022" docASTNodeCount="530" docActiveCodeLength="3730" docExpressionCount="371" docLength="4210" endLine="71" insertionLength="60" int_docASTNodeCount="526" int_docActiveCodeLength="3703" int_docExpressionCount="368" int_docLength="4150" length="2" offset="2737" startLine="71" starttimestamp="1649721002230" timestamp="52425996">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		//Start thread and do some action
				readThread.start();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9589" _type="Delete" date="Tue Apr 12 10:23:50 EDT 2022" docASTNodeCount="530" docActiveCodeLength="3728" docExpressionCount="371" docLength="4208" endLine="72" length="2" offset="2776" repeat="2" startLine="72" starttimestamp="1649721002230" timestamp="52428137" timestamp2="52428381">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="9598" _type="Delete" date="Tue Apr 12 10:23:53 EDT 2022" docASTNodeCount="530" docActiveCodeLength="3724" docExpressionCount="371" docLength="4169" endLine="69" length="39" offset="2692" repeat="4" startLine="68" starttimestamp="1649721002230" timestamp="52431406" timestamp2="52432338">
    <text><![CDATA[
		//readThread.setName("readThread");]]></text>
  </DocumentChange>
  <Command __id="9614" _type="PauseCommand" date="Tue Apr 12 10:24:15 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="52452893">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[19671]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9615" _type="MoveCaretCommand" caretOffset="569" date="Tue Apr 12 10:24:15 EDT 2022" docOffset="569" starttimestamp="1649721002230" timestamp="52453094" />
  <Command __id="9617" _type="PauseCommand" date="Tue Apr 12 10:24:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52457308">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4214]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9616" _type="SelectTextCommand" caretOffset="741" date="Tue Apr 12 10:24:19 EDT 2022" end="871" start="741" starttimestamp="1649721002230" timestamp="52457308" />
  <Command __id="9618" _type="SelectTextCommand" caretOffset="741" date="Tue Apr 12 10:24:19 EDT 2022" end="871" start="741" starttimestamp="1649721002230" timestamp="52457308" />
  <Command __id="9620" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:24:20 EDT 2022" starttimestamp="1649721002230" timestamp="52457973" />
  <Command __id="9621" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:24:20 EDT 2022" starttimestamp="1649721002230" timestamp="52457973" />
  <Command __id="9623" _type="PauseCommand" date="Tue Apr 12 10:24:21 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52459704">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1730]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="9622" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:24:21 EDT 2022" starttimestamp="1649721002230" timestamp="52459703" />
  <Command __id="9624" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:24:22 EDT 2022" starttimestamp="1649721002230" timestamp="52459788" />
  <Command __id="9625" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:24:22 EDT 2022" starttimestamp="1649721002230" timestamp="52459819" />
  <Command __id="9613" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:24:15 EDT 2022" docASTNodeCount="105" docActiveCodeLength="775" docExpressionCount="55" docLength="1006" projectName="A6" starttimestamp="1649721002230" timestamp="52452893">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			"), Diff(INSERT,"synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			"), Diff(EQUAL,"System.out.println("IN RUN METHOD OF READ THREAD");¶			try {¶				wait();¶			} catch (InterruptedException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶		¶	}¶	¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import readThread.ReadThreadInterface;

public class exampleServerReadThread implements ReadThreadInterface{

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			try {
				wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
	}
	
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="9619" _type="Delete" date="Tue Apr 12 10:24:20 EDT 2022" docASTNodeCount="90" docActiveCodeLength="679" docExpressionCount="48" docLength="876" endLine="35" length="130" offset="741" startLine="30" starttimestamp="1649721002230" timestamp="52457951">
    <text><![CDATA[	try {
				wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}]]></text>
  </DocumentChange>
  <Command __id="9627" _type="PauseCommand" date="Tue Apr 12 10:24:25 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52462886">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3067]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9628" _type="MoveCaretCommand" caretOffset="2692" date="Tue Apr 12 10:24:25 EDT 2022" docOffset="2692" starttimestamp="1649721002230" timestamp="52463143" />
  <Command __id="9630" _type="PauseCommand" date="Tue Apr 12 10:24:34 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52472333">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9190]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="9629" _type="MoveCaretCommand" caretOffset="3798" date="Tue Apr 12 10:24:34 EDT 2022" docOffset="3798" starttimestamp="1649721002230" timestamp="52472333" />
  <Command __id="9631" _type="MoveCaretCommand" caretOffset="3798" date="Tue Apr 12 10:24:34 EDT 2022" docOffset="3798" starttimestamp="1649721002230" timestamp="52472333" />
  <Command __id="9633" _type="InsertStringCommand" date="Tue Apr 12 10:24:35 EDT 2022" starttimestamp="1649721002230" timestamp="52472776" timestamp2="52472776">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9634" _type="InsertStringCommand" date="Tue Apr 12 10:24:35 EDT 2022" starttimestamp="1649721002230" timestamp="52472776" timestamp2="52472776">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9636" _type="InsertStringCommand" date="Tue Apr 12 10:24:35 EDT 2022" starttimestamp="1649721002230" timestamp="52472857" timestamp2="52472857">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9637" _type="InsertStringCommand" date="Tue Apr 12 10:24:35 EDT 2022" starttimestamp="1649721002230" timestamp="52472857" timestamp2="52472857">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9639" _type="InsertStringCommand" date="Tue Apr 12 10:24:35 EDT 2022" starttimestamp="1649721002230" timestamp="52472925" timestamp2="52472925">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9640" _type="InsertStringCommand" date="Tue Apr 12 10:24:35 EDT 2022" starttimestamp="1649721002230" timestamp="52472926" timestamp2="52472926">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9642" _type="InsertStringCommand" date="Tue Apr 12 10:24:35 EDT 2022" starttimestamp="1649721002230" timestamp="52473116" timestamp2="52473116">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9643" _type="InsertStringCommand" date="Tue Apr 12 10:24:35 EDT 2022" starttimestamp="1649721002230" timestamp="52473116" timestamp2="52473116">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9645" _type="InsertStringCommand" date="Tue Apr 12 10:24:35 EDT 2022" starttimestamp="1649721002230" timestamp="52473580" timestamp2="52473580">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9646" _type="InsertStringCommand" date="Tue Apr 12 10:24:35 EDT 2022" starttimestamp="1649721002230" timestamp="52473580" timestamp2="52473580">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9648" _type="InsertStringCommand" date="Tue Apr 12 10:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="52473834" timestamp2="52473834">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="9649" _type="InsertStringCommand" date="Tue Apr 12 10:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="52473834" timestamp2="52473834">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="9651" _type="InsertStringCommand" date="Tue Apr 12 10:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="52473889" timestamp2="52473889">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9652" _type="InsertStringCommand" date="Tue Apr 12 10:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="52473890" timestamp2="52473890">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9654" _type="InsertStringCommand" date="Tue Apr 12 10:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="52474000" timestamp2="52474000">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9655" _type="InsertStringCommand" date="Tue Apr 12 10:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="52474001" timestamp2="52474001">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9657" _type="InsertStringCommand" date="Tue Apr 12 10:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="52474531" timestamp2="52474531">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9658" _type="InsertStringCommand" date="Tue Apr 12 10:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="52474531" timestamp2="52474531">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9660" _type="InsertStringCommand" date="Tue Apr 12 10:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="52474723" timestamp2="52474723">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9661" _type="InsertStringCommand" date="Tue Apr 12 10:24:36 EDT 2022" starttimestamp="1649721002230" timestamp="52474723" timestamp2="52474723">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9663" _type="InsertStringCommand" date="Tue Apr 12 10:24:37 EDT 2022" starttimestamp="1649721002230" timestamp="52475003" timestamp2="52475003">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9664" _type="InsertStringCommand" date="Tue Apr 12 10:24:37 EDT 2022" starttimestamp="1649721002230" timestamp="52475003" timestamp2="52475003">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9665" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 10:24:37 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="52475009" />
  <Command __id="9668" _type="PauseCommand" date="Tue Apr 12 10:24:40 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52478122">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3113]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="9667" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 10:24:40 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="52478122" />
  <Command __id="9670" _type="InsertStringCommand" date="Tue Apr 12 10:24:40 EDT 2022" starttimestamp="1649721002230" timestamp="52478150" timestamp2="52478150">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9671" _type="InsertStringCommand" date="Tue Apr 12 10:24:40 EDT 2022" starttimestamp="1649721002230" timestamp="52478150" timestamp2="52478150">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9672" _type="InsertStringCommand" date="Tue Apr 12 10:24:40 EDT 2022" starttimestamp="1649721002230" timestamp="52478544" timestamp2="52478544">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="9673" _type="InsertStringCommand" date="Tue Apr 12 10:24:40 EDT 2022" starttimestamp="1649721002230" timestamp="52478544" timestamp2="52478544">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="9626" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:24:25 EDT 2022" docASTNodeCount="530" docActiveCodeLength="3724" docExpressionCount="371" docLength="4169" projectName="A6" starttimestamp="1649721002230" timestamp="52462886">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶import assignments.util.MiscAssignmentUtils;¶¶import client.ClientRemoteInterfaceGIPC;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	Thread readThread = null;¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		final ReadThreadInterface reader = new exampleServerReadThread();¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		"), Diff(DELETE,"//readThread.setName(""), Diff(INSERT,"¶		//Start thread and do some action¶		"), Diff(EQUAL,"readThread"), Diff(DELETE,"""), Diff(INSERT,".start("), Diff(EQUAL,");¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		// Pop value off the bounded buffer¶		ByteBuffer originalMessage = null;¶		try {¶			originalMessage = boundedBuffer.take();¶		} catch (InterruptedException e) {¶			e.printStackTrace();¶		}¶		// Echo recieve message to all clients (except original message sender)¶		for (SocketChannel socket : socketList) {¶			if (!socket.equals(aSocketChannel)) {¶				nioManager.write(socket, originalMessage, this);¶			}¶		}¶		¶		"), Diff(DELETE,"//Start thread and do some action¶		readThread.start();"), Diff(EQUAL,"¶		System.out.println("thread has completed action and is now waiting");¶¶	}¶¶	@Override¶	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import assignments.util.MiscAssignmentUtils;

import client.ClientRemoteInterfaceGIPC;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {

	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	Thread readThread = null;
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();

	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		final ReadThreadInterface reader = new exampleServerReadThread();
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		// Pop value off the bounded buffer
		ByteBuffer originalMessage = null;
		try {
			originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		// Echo recieve message to all clients (except original message sender)
		for (SocketChannel socket : socketList) {
			if (!socket.equals(aSocketChannel)) {
				nioManager.write(socket, originalMessage, this);
			}
		}
		
		
		System.out.println("thread has completed action and is now waiting");

	}

	@Override
	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="9632" _type="Insert" date="Tue Apr 12 10:24:34 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3736" docExpressionCount="373" docLength="4181" length="12" offset="3798" repeat="12" starttimestamp="1649721002230" timestamp="52472764" timestamp2="52476008">
    <text><![CDATA[readThread.n]]></text>
  </DocumentChange>
  <DocumentChange __id="9669" _type="Replace" date="Tue Apr 12 10:24:40 EDT 2022" docASTNodeCount="534" docActiveCodeLength="3744" docExpressionCount="374" docLength="4189" endLine="104" insertionLength="9" int_docASTNodeCount="532" int_docActiveCodeLength="3735" int_docExpressionCount="373" int_docLength="4180" length="1" offset="3809" startLine="104" starttimestamp="1649721002230" timestamp="52478129">
    <deletedText><![CDATA[n]]></deletedText>
    <insertedText><![CDATA[notify();]]></insertedText>
  </DocumentChange>
  <Command __id="9675" _type="PauseCommand" date="Tue Apr 12 10:24:44 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52481881">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3337]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9676" _type="MoveCaretCommand" caretOffset="741" date="Tue Apr 12 10:24:44 EDT 2022" docOffset="741" starttimestamp="1649721002230" timestamp="52482098" />
  <Command __id="9674" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:24:44 EDT 2022" docASTNodeCount="90" docActiveCodeLength="679" docExpressionCount="48" docLength="876" projectName="A6" starttimestamp="1649721002230" timestamp="52481881">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶		"), Diff(DELETE,"	try {¶				wait();¶			} catch (InterruptedException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}"), Diff(EQUAL,"¶		}¶		¶	}¶	¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import readThread.ReadThreadInterface;

public class exampleServerReadThread implements ReadThreadInterface{

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
		
		}
		
	}
	
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <Command __id="9678" _type="PauseCommand" date="Tue Apr 12 10:24:48 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52486071">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3973]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9680" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:24:50 EDT 2022" starttimestamp="1649721002230" timestamp="52488542" />
  <Command __id="9682" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:24:50 EDT 2022" starttimestamp="1649721002230" timestamp="52488582" />
  <Command __id="9683" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:24:50 EDT 2022" starttimestamp="1649721002230" timestamp="52488707" />
  <Command __id="9686" _type="PauseCommand" date="Tue Apr 12 10:24:53 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52490981">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[1349]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="9719" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:24:57 EDT 2022" starttimestamp="1649721002230" timestamp="52495641" />
  <Command __id="9721" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:24:57 EDT 2022" starttimestamp="1649721002230" timestamp="52495693" />
  <Command __id="9722" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:24:58 EDT 2022" starttimestamp="1649721002230" timestamp="52495849" />
  <Command __id="9724" _type="PauseCommand" date="Tue Apr 12 10:25:03 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52500976">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5127]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="9723" _type="ShellCommand" date="Tue Apr 12 10:25:03 EDT 2022" starttimestamp="1649721002230" timestamp="52500976" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9725" _type="ShellCommand" date="Tue Apr 12 10:25:03 EDT 2022" starttimestamp="1649721002230" timestamp="52501298" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9729" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:25:04 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="52502264" />
  <Command __id="9731" _type="PauseCommand" date="Tue Apr 12 10:25:06 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52504122">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1854]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="9730" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:25:06 EDT 2022" starttimestamp="1649721002230" timestamp="52504118" />
  <Command __id="9732" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:25:06 EDT 2022" starttimestamp="1649721002230" timestamp="52504213" />
  <Command __id="9733" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:25:06 EDT 2022" starttimestamp="1649721002230" timestamp="52504282" />
  <Command __id="9677" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:24:48 EDT 2022" docASTNodeCount="534" docActiveCodeLength="3744" docExpressionCount="374" docLength="4189" projectName="A6" starttimestamp="1649721002230" timestamp="52486071">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶import assignments.util.MiscAssignmentUtils;¶¶import client.ClientRemoteInterfaceGIPC;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	Thread readThread = null;¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		final ReadThreadInterface reader = new exampleServerReadThread();¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		// Pop value off the bounded buffer¶		ByteBuffer originalMessage = null;¶		try {¶			originalMessage = boundedBuffer.take();¶		} catch (InterruptedException e) {¶			e.printStackTrace();¶		}¶		// Echo recieve message to all clients (except original message sender)¶		for (SocketChannel socket : socketList) {¶			if (!socket.equals(aSocketChannel)) {¶				nioManager.write(socket, originalMessage, this);¶			}¶		}¶		¶		"), Diff(INSERT,"readThread.notify();"), Diff(EQUAL,"¶		System.out.println("thread has completed action and is now waiting");¶¶	}¶¶	@Override¶	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import assignments.util.MiscAssignmentUtils;

import client.ClientRemoteInterfaceGIPC;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {

	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	Thread readThread = null;
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();

	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		final ReadThreadInterface reader = new exampleServerReadThread();
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		// Pop value off the bounded buffer
		ByteBuffer originalMessage = null;
		try {
			originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		// Echo recieve message to all clients (except original message sender)
		for (SocketChannel socket : socketList) {
			if (!socket.equals(aSocketChannel)) {
				nioManager.write(socket, originalMessage, this);
			}
		}
		
		readThread.notify();
		System.out.println("thread has completed action and is now waiting");

	}

	@Override
	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);
	}

}
]]></snapshot>
  </Command>
  <Command __id="9684" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:24:51 EDT 2022" docASTNodeCount="90" docActiveCodeLength="679" docExpressionCount="48" docLength="876" projectName="A6" starttimestamp="1649721002230" timestamp="52489632">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶		¶		}¶		¶	}¶	¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="9689" _type="Insert" date="Tue Apr 12 10:24:54 EDT 2022" docASTNodeCount="92" docActiveCodeLength="691" docExpressionCount="50" docLength="888" length="12" offset="757" repeat="10" starttimestamp="1649721002230" timestamp="52492242" timestamp2="52494229">
    <text><![CDATA[
	@Override]]></text>
  </DocumentChange>
  <Command __id="9726" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:25:03 EDT 2022" docASTNodeCount="41" docActiveCodeLength="315" docExpressionCount="32" docLength="315" projectName="A6" starttimestamp="1649721002230" timestamp="52501709">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶¶@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})¶public interface ReadThreadInterface extends SocketChannelReadListener, Runnable{¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="9727" _type="Insert" date="Tue Apr 12 10:25:04 EDT 2022" docASTNodeCount="44" docActiveCodeLength="340" docExpressionCount="33" docLength="340" length="25" offset="308" repeat="2" starttimestamp="1649721002230" timestamp="52501791" timestamp2="52501791">
    <text><![CDATA[

	void notifyThread();]]></text>
  </DocumentChange>
  <Command __id="9735" _type="PauseCommand" date="Tue Apr 12 10:25:08 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52506750">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2468]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9736" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:25:09 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="52506903" />
  <Command __id="9738" _type="PauseCommand" date="Tue Apr 12 10:25:13 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52511646">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4743]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="9737" _type="ShellCommand" date="Tue Apr 12 10:25:13 EDT 2022" starttimestamp="1649721002230" timestamp="52511646" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9739" _type="ShellCommand" date="Tue Apr 12 10:25:14 EDT 2022" starttimestamp="1649721002230" timestamp="52511797" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9745" _type="PauseCommand" date="Tue Apr 12 10:25:18 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52516279">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[4435]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="9744" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:25:18 EDT 2022" starttimestamp="1649721002230" timestamp="52516279" />
  <Command __id="9746" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:25:18 EDT 2022" starttimestamp="1649721002230" timestamp="52516362" />
  <Command __id="9747" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:25:18 EDT 2022" starttimestamp="1649721002230" timestamp="52516405" />
  <Command __id="9734" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:25:08 EDT 2022" docASTNodeCount="68" docActiveCodeLength="454" docExpressionCount="45" docLength="522" projectName="A6" starttimestamp="1649721002230" timestamp="52506750">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="9740" _type="Insert" date="Tue Apr 12 10:25:14 EDT 2022" docASTNodeCount="75" docActiveCodeLength="511" docExpressionCount="48" docLength="613" length="91" offset="515" repeat="4" starttimestamp="1649721002230" timestamp="52511844" timestamp2="52511852">
    <text><![CDATA[

	@Override
	public void notifyThread() {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="9749" _type="PauseCommand" date="Tue Apr 12 10:25:24 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52522690">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6285]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9750" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:25:25 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="52523128" />
  <Command __id="9748" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:25:24 EDT 2022" docASTNodeCount="68" docActiveCodeLength="454" docExpressionCount="45" docLength="522" projectName="A6" starttimestamp="1649721002230" timestamp="52522690">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶"), Diff(INSERT,"import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶"), Diff(EQUAL,"import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})¶public class ClientReadThread implements ReadThreadInterface{¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(INSERT,"	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})
public class ClientReadThread implements ReadThreadInterface{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="9752" _type="PauseCommand" date="Tue Apr 12 10:25:34 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52531892">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8764]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9753" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:25:34 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="52532602" />
  <Command __id="9755" _type="PauseCommand" date="Tue Apr 12 10:25:37 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52535406">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2804]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9754" _type="SelectTextCommand" caretOffset="210" date="Tue Apr 12 10:25:37 EDT 2022" end="231" start="210" starttimestamp="1649721002230" timestamp="52535406" />
  <Command __id="9757" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:25:37 EDT 2022" starttimestamp="1649721002230" timestamp="52535657" />
  <Command __id="9759" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:25:38 EDT 2022" starttimestamp="1649721002230" timestamp="52536252" />
  <Command __id="9760" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:25:39 EDT 2022" starttimestamp="1649721002230" timestamp="52537194" />
  <Command __id="9761" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:25:39 EDT 2022" starttimestamp="1649721002230" timestamp="52537251" />
  <Command __id="9762" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:25:39 EDT 2022" starttimestamp="1649721002230" timestamp="52537439" />
  <Command __id="9751" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:25:34 EDT 2022" docASTNodeCount="44" docActiveCodeLength="340" docExpressionCount="33" docLength="340" projectName="A6" starttimestamp="1649721002230" timestamp="52531892">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶¶@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})¶public interface ReadThreadInterface extends SocketChannelReadListener, Runnable{¶¶"), Diff(INSERT,"	void notifyThread();¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import util.annotations.Tags;
import util.tags.DistributedTags;
import inputport.nio.manager.listeners.SocketChannelReadListener;

@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})
public interface ReadThreadInterface extends SocketChannelReadListener, Runnable{

	void notifyThread();

}
]]></snapshot>
  </Command>
  <DocumentChange __id="9756" _type="Delete" date="Tue Apr 12 10:25:37 EDT 2022" docASTNodeCount="41" docActiveCodeLength="317" docExpressionCount="32" docLength="317" endLine="9" length="23" offset="310" repeat="2" startLine="8" starttimestamp="1649721002230" timestamp="52535649" timestamp2="52536244">
    <text><![CDATA[
	void notifyThread();]]></text>
  </DocumentChange>
  <Command __id="9764" _type="PauseCommand" date="Tue Apr 12 10:25:41 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52538888">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1449]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9765" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:25:41 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="52539073" />
  <Command __id="9767" _type="PauseCommand" date="Tue Apr 12 10:25:43 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52541366">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2293]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9770" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:25:45 EDT 2022" starttimestamp="1649721002230" timestamp="52543682" />
  <Command __id="9772" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:25:45 EDT 2022" starttimestamp="1649721002230" timestamp="52543730" />
  <Command __id="9773" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:25:46 EDT 2022" starttimestamp="1649721002230" timestamp="52543800" />
  <Command __id="9763" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:25:41 EDT 2022" docASTNodeCount="75" docActiveCodeLength="511" docExpressionCount="48" docLength="613" projectName="A6" starttimestamp="1649721002230" timestamp="52538888">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(INSERT,"	@Override¶	public void notifyThread() {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notifyThread() {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="9768" _type="Delete" date="Tue Apr 12 10:25:43 EDT 2022" docASTNodeCount="68" docActiveCodeLength="456" docExpressionCount="45" docLength="524" endLine="28" length="89" offset="517" startLine="23" starttimestamp="1649721002230" timestamp="52541625">
    <text><![CDATA[
	@Override
	public void notifyThread() {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="9775" _type="PauseCommand" date="Tue Apr 12 10:25:49 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52546828">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3028]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9776" _type="MoveCaretCommand" caretOffset="769" date="Tue Apr 12 10:25:49 EDT 2022" docOffset="769" starttimestamp="1649721002230" timestamp="52547089" />
  <Command __id="9778" _type="PauseCommand" date="Tue Apr 12 10:25:52 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52550515">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3426]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9783" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:25:54 EDT 2022" starttimestamp="1649721002230" timestamp="52552567" />
  <Command __id="9785" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:25:54 EDT 2022" starttimestamp="1649721002230" timestamp="52552638" />
  <Command __id="9786" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:25:54 EDT 2022" starttimestamp="1649721002230" timestamp="52552743" />
  <Command __id="9774" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:25:49 EDT 2022" docASTNodeCount="92" docActiveCodeLength="691" docExpressionCount="50" docLength="888" projectName="A6" starttimestamp="1649721002230" timestamp="52546828">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶		¶		}¶		¶	}¶	¶	"), Diff(INSERT,"@Override¶	"), Diff(EQUAL,"public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import readThread.ReadThreadInterface;

public class exampleServerReadThread implements ReadThreadInterface{

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
		
		}
		
	}
	
	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="9780" _type="Delete" date="Tue Apr 12 10:25:53 EDT 2022" docASTNodeCount="80" docActiveCodeLength="611" docExpressionCount="44" docLength="766" endLine="39" length="122" offset="759" startLine="35" starttimestamp="1649721002230" timestamp="52550775">
    <text><![CDATA[	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}]]></text>
  </DocumentChange>
  <Command __id="9788" _type="PauseCommand" date="Tue Apr 12 10:25:58 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52555932">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3189]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9797" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Tue Apr 12 10:26:24 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="52582183" type="Run" />
  <Command __id="9799" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Tue Apr 12 10:26:25 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="52582992" type="Run" />
  <Command __id="9800" _type="ConsoleOutput" date="Tue Apr 12 10:26:25 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52583407" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"AReadCommand for java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57070]:An existing connection was forcibly closed by the"), Diff(INSERT,"Enter a line of input to be printed"), Diff(EQUAL," remote"), Diff(DELETE," host"), Diff(INSERT,"ly"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9801" _type="ConsoleOutput" date="Tue Apr 12 10:26:25 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52583728" type="ConsoleOutput">
    <outputString><![CDATA[Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely"), Diff(INSERT,"Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9802" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Tue Apr 12 10:26:26 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="52583861" type="Run" />
  <Command __id="9803" _type="ConsoleOutput" date="Tue Apr 12 10:26:26 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52584165" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Enter a line of input to be printed remotely¶"), Diff(EQUAL,"Client Connect to Server¶")]]]></diff>
  </Command>
  <Command __id="9804" _type="ConsoleOutput" date="Tue Apr 12 10:26:27 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52584891" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶Client Connect to Server¶")]]]></diff>
  </Command>
  <Command __id="9806" _type="PauseCommand" date="Tue Apr 12 10:26:32 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52590225">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5334]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="9805" _type="ConsoleInput" date="Tue Apr 12 10:26:32 EDT 2022" starttimestamp="1649721002230" timestamp="52590225" type="Exception">
    <outputString><![CDATA[hi hi
]]></outputString>
  </Command>
  <Command __id="9807" _type="ConsoleOutput" date="Tue Apr 12 10:26:32 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52590295" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Enter a line of input to be printed remotely¶"), Diff(DELETE,"C"), Diff(INSERT,"c"), Diff(EQUAL,"lient "), Diff(DELETE,"Connect to Server"), Diff(INSERT,"channel has written"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9808" _type="ExceptionCommand" date="Tue Apr 12 10:26:32 EDT 2022" starttimestamp="1649721002230" timestamp="52590345" type="Exception">
    <exceptionString><![CDATA[hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57258]
java.lang.IllegalMonitorStateException
	at java.base/java.lang.Object.notify(Native Method)
	at nioExample.AnNIOManagerPrintServer.socketChannelRead(AnNIOManagerPrintServer.java:105)
	at inputport.nio.manager.commands.classes.AReadCommand.notifyRead(AReadCommand.java:102)
	at inputport.nio.manager.commands.classes.AScatterGatherReadCommand.maybeExtractMessageAndNotifyReadListener(AScatterGatherReadCommand.java:120)
	at inputport.nio.manager.commands.classes.AScatterGatherReadCommand.processRead(AScatterGatherReadCommand.java:43)
	at inputport.nio.manager.commands.classes.AReadCommand.execute(AReadCommand.java:57)
	at inputport.nio.manager.ASelectionReadManager.processRead(ASelectionReadManager.java:54)
	at inputport.nio.manager.ASelectionManager.processSelectedOperation(ASelectionManager.java:81)
	at inputport.nio.manager.ASelectionManager.run(ASelectionManager.java:110)
	at java.base/java.lang.Thread.run(Thread.java:834)
Process select operation exception:null
SERVER SENT MESSAGE TO CLIENT: hi hi-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57255]
SERVER SENT MESSAGE TO CLIENT: hi hi-->java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57252]
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="9809" _type="ConsoleOutput" date="Tue Apr 12 10:26:32 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52590353" type="ConsoleOutput">
    <outputString><![CDATA[hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:57255 remote=localhost/127.0.0.1:9000]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶client channel has written"), Diff(INSERT,"hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:57255 remote=localhost/127.0.0.1:9000]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9810" _type="ConsoleOutput" date="Tue Apr 12 10:26:33 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52591164" type="ConsoleOutput">
    <outputString><![CDATA[hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:57252 remote=localhost/127.0.0.1:9000]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:5725"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL," remote=localhost/127.0.0.1:9000]¶")]]]></diff>
  </Command>
  <Command __id="9787" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:25:58 EDT 2022" docASTNodeCount="534" docActiveCodeLength="3744" docExpressionCount="374" docLength="4189" projectName="A6" starttimestamp="1649721002230" timestamp="52555932">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶import assignments.util.MiscAssignmentUtils;¶¶import client.ClientRemoteInterfaceGIPC;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	Thread readThread = null;¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		final ReadThreadInterface reader = new exampleServerReadThread();¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		// Pop value off the bounded buffer¶		ByteBuffer originalMessage = null;¶		try {¶			originalMessage = boundedBuffer.take();¶		} catch (InterruptedException e) {¶			e.printStackTrace();¶		}¶		// Echo recieve message to all clients (except original message sender)¶		for (SocketChannel socket : socketList) {¶			if (!socket.equals(aSocketChannel)) {¶				nioManager.write(socket, originalMessage, this);¶			}¶		}¶		¶		readThread.notify();¶		System.out.println("thread has completed action and is now waiting");¶¶	}¶¶	@Override¶	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="9812" _type="PauseCommand" date="Tue Apr 12 10:27:08 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="52626240">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[35076]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9813" _type="MoveCaretCommand" caretOffset="759" date="Tue Apr 12 10:27:08 EDT 2022" docOffset="759" starttimestamp="1649721002230" timestamp="52626495" />
  <Command __id="9811" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:27:08 EDT 2022" docASTNodeCount="80" docActiveCodeLength="611" docExpressionCount="44" docLength="766" projectName="A6" starttimestamp="1649721002230" timestamp="52626240">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶		¶		}¶		¶	}¶	¶"), Diff(DELETE,"	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import readThread.ReadThreadInterface;

public class exampleServerReadThread implements ReadThreadInterface{

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
		
		}
		
	}
	


}
]]></snapshot>
  </Command>
  <Command __id="9815" _type="PauseCommand" date="Tue Apr 12 10:27:10 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52627799">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1304]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="9816" _type="UndoCommand" date="Tue Apr 12 10:27:10 EDT 2022" starttimestamp="1649721002230" timestamp="52627815" />
  <Command __id="9818" _type="PauseCommand" date="Tue Apr 12 10:27:11 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52629371">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1556]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="9817" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:27:11 EDT 2022" starttimestamp="1649721002230" timestamp="52629371" />
  <Command __id="9819" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:27:11 EDT 2022" starttimestamp="1649721002230" timestamp="52629452" />
  <Command __id="9820" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:27:11 EDT 2022" starttimestamp="1649721002230" timestamp="52629497" />
  <DocumentChange __id="9814" _type="Insert" date="Tue Apr 12 10:27:10 EDT 2022" docASTNodeCount="92" docActiveCodeLength="691" docExpressionCount="50" docLength="888" length="122" offset="759" starttimestamp="1649721002230" timestamp="52627799">
    <text><![CDATA[	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}]]></text>
  </DocumentChange>
  <Command __id="9822" _type="PauseCommand" date="Tue Apr 12 10:27:16 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52634066">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4569]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="9823" _type="UndoCommand" date="Tue Apr 12 10:27:16 EDT 2022" starttimestamp="1649721002230" timestamp="52634095" />
  <Command __id="9825" _type="PauseCommand" date="Tue Apr 12 10:27:18 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52636563">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2468]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="9824" _type="SelectTextCommand" caretOffset="759" date="Tue Apr 12 10:27:18 EDT 2022" end="869" start="759" starttimestamp="1649721002230" timestamp="52636563" />
  <Command __id="9826" _type="SelectTextCommand" caretOffset="759" date="Tue Apr 12 10:27:18 EDT 2022" end="869" start="759" starttimestamp="1649721002230" timestamp="52636563" />
  <Command __id="9828" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:27:19 EDT 2022" starttimestamp="1649721002230" timestamp="52636828" />
  <Command __id="9829" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:27:19 EDT 2022" starttimestamp="1649721002230" timestamp="52636828" />
  <Command __id="9831" _type="PauseCommand" date="Tue Apr 12 10:27:20 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52638546">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1718]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="9830" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:27:20 EDT 2022" starttimestamp="1649721002230" timestamp="52638546" />
  <Command __id="9832" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:27:20 EDT 2022" starttimestamp="1649721002230" timestamp="52638614" />
  <Command __id="9833" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:27:20 EDT 2022" starttimestamp="1649721002230" timestamp="52638665" />
  <DocumentChange __id="9821" _type="Delete" date="Tue Apr 12 10:27:16 EDT 2022" docASTNodeCount="90" docActiveCodeLength="679" docExpressionCount="48" docLength="876" endLine="35" length="12" offset="757" startLine="34" starttimestamp="1649721002230" timestamp="52634066">
    <text><![CDATA[
	@Override]]></text>
  </DocumentChange>
  <DocumentChange __id="9827" _type="Delete" date="Tue Apr 12 10:27:19 EDT 2022" docASTNodeCount="80" docActiveCodeLength="611" docExpressionCount="44" docLength="766" endLine="38" length="110" offset="759" startLine="35" starttimestamp="1649721002230" timestamp="52636809">
    <text><![CDATA[	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}]]></text>
  </DocumentChange>
  <Command __id="9835" _type="PauseCommand" date="Tue Apr 12 10:28:08 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="52685839">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[47174]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="9836" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:28:08 EDT 2022" starttimestamp="1649721002230" timestamp="52685866" />
  <Command __id="9837" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:28:08 EDT 2022" starttimestamp="1649721002230" timestamp="52685866" />
  <DocumentChange __id="9834" _type="Delete" date="Tue Apr 12 10:28:08 EDT 2022" docASTNodeCount="80" docActiveCodeLength="609" docExpressionCount="44" docLength="764" endLine="35" length="2" offset="757" startLine="34" starttimestamp="1649721002230" timestamp="52685839">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="9839" _type="PauseCommand" date="Tue Apr 12 10:28:12 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52689830">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3964]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="9840" _type="MoveCaretCommand" caretOffset="3818" date="Tue Apr 12 10:28:12 EDT 2022" docOffset="3818" starttimestamp="1649721002230" timestamp="52690165" />
  <Command __id="9842" _type="PauseCommand" date="Tue Apr 12 10:28:13 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52691337">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1172]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="9841" _type="MoveCaretCommand" caretOffset="3794" date="Tue Apr 12 10:28:13 EDT 2022" docOffset="3794" starttimestamp="1649721002230" timestamp="52691337" />
  <Command __id="9843" _type="MoveCaretCommand" caretOffset="3794" date="Tue Apr 12 10:28:13 EDT 2022" docOffset="3794" starttimestamp="1649721002230" timestamp="52691337" />
  <Command __id="9845" _type="InsertStringCommand" date="Tue Apr 12 10:28:13 EDT 2022" starttimestamp="1649721002230" timestamp="52691704" timestamp2="52691704">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9846" _type="InsertStringCommand" date="Tue Apr 12 10:28:13 EDT 2022" starttimestamp="1649721002230" timestamp="52691704" timestamp2="52691704">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9848" _type="InsertStringCommand" date="Tue Apr 12 10:28:14 EDT 2022" starttimestamp="1649721002230" timestamp="52692315" timestamp2="52692315">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="9849" _type="InsertStringCommand" date="Tue Apr 12 10:28:14 EDT 2022" starttimestamp="1649721002230" timestamp="52692315" timestamp2="52692315">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="9851" _type="InsertStringCommand" date="Tue Apr 12 10:28:14 EDT 2022" starttimestamp="1649721002230" timestamp="52692547" timestamp2="52692547">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="9852" _type="InsertStringCommand" date="Tue Apr 12 10:28:14 EDT 2022" starttimestamp="1649721002230" timestamp="52692547" timestamp2="52692547">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="9854" _type="InsertStringCommand" date="Tue Apr 12 10:28:15 EDT 2022" starttimestamp="1649721002230" timestamp="52692905" timestamp2="52692905">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9855" _type="InsertStringCommand" date="Tue Apr 12 10:28:15 EDT 2022" starttimestamp="1649721002230" timestamp="52692905" timestamp2="52692905">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9857" _type="InsertStringCommand" date="Tue Apr 12 10:28:15 EDT 2022" starttimestamp="1649721002230" timestamp="52693105" timestamp2="52693105">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9858" _type="InsertStringCommand" date="Tue Apr 12 10:28:15 EDT 2022" starttimestamp="1649721002230" timestamp="52693105" timestamp2="52693105">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9860" _type="InsertStringCommand" date="Tue Apr 12 10:28:15 EDT 2022" starttimestamp="1649721002230" timestamp="52693597" timestamp2="52693597">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9861" _type="InsertStringCommand" date="Tue Apr 12 10:28:15 EDT 2022" starttimestamp="1649721002230" timestamp="52693597" timestamp2="52693597">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9863" _type="InsertStringCommand" date="Tue Apr 12 10:28:15 EDT 2022" starttimestamp="1649721002230" timestamp="52693734" timestamp2="52693734">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="9864" _type="InsertStringCommand" date="Tue Apr 12 10:28:15 EDT 2022" starttimestamp="1649721002230" timestamp="52693734" timestamp2="52693734">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="9866" _type="InsertStringCommand" date="Tue Apr 12 10:28:16 EDT 2022" starttimestamp="1649721002230" timestamp="52693911" timestamp2="52693911">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9867" _type="InsertStringCommand" date="Tue Apr 12 10:28:16 EDT 2022" starttimestamp="1649721002230" timestamp="52693911" timestamp2="52693911">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9868" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 10:28:16 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="52693928" />
  <Command __id="9873" _type="PauseCommand" date="Tue Apr 12 10:28:17 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52695205">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1277]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="9872" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 10:28:17 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="52695205" />
  <Command __id="9875" _type="InsertStringCommand" date="Tue Apr 12 10:28:17 EDT 2022" starttimestamp="1649721002230" timestamp="52695215" timestamp2="52695215">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9876" _type="InsertStringCommand" date="Tue Apr 12 10:28:17 EDT 2022" starttimestamp="1649721002230" timestamp="52695215" timestamp2="52695215">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9877" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 10:28:17 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="52695307" />
  <Command __id="9838" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:28:12 EDT 2022" docASTNodeCount="534" docActiveCodeLength="3744" docExpressionCount="374" docLength="4189" projectName="A6" starttimestamp="1649721002230" timestamp="52689830">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶import assignments.util.MiscAssignmentUtils;¶¶import client.ClientRemoteInterfaceGIPC;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	Thread readThread = null;¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		final ReadThreadInterface reader = new exampleServerReadThread();¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		// Pop value off the bounded buffer¶		ByteBuffer originalMessage = null;¶		try {¶			originalMessage = boundedBuffer.take();¶		} catch (InterruptedException e) {¶			e.printStackTrace();¶		}¶		// Echo recieve message to all clients (except original message sender)¶		for (SocketChannel socket : socketList) {¶			if (!socket.equals(aSocketChannel)) {¶				nioManager.write(socket, originalMessage, this);¶			}¶		}¶		¶		readThread.notify();¶		System.out.println("thread has completed action and is now waiting");¶¶	}¶¶	@Override¶	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="9844" _type="Insert" date="Tue Apr 12 10:28:13 EDT 2022" docASTNodeCount="540" docActiveCodeLength="3758" docExpressionCount="377" docLength="4203" length="14" offset="3794" repeat="11" starttimestamp="1649721002230" timestamp="52691657" timestamp2="52694441">
    <text><![CDATA[
		System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="9874" _type="Replace" date="Tue Apr 12 10:28:17 EDT 2022" docASTNodeCount="538" docActiveCodeLength="3759" docExpressionCount="378" docLength="4204" endLine="104" insertionLength="4" int_docASTNodeCount="536" int_docActiveCodeLength="3755" int_docExpressionCount="376" int_docLength="4200" length="3" offset="3805" startLine="104" starttimestamp="1649721002230" timestamp="52695206">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="9879" _type="PauseCommand" date="Tue Apr 12 10:28:20 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52698370">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3063]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="9881" _type="PauseCommand" date="Tue Apr 12 10:28:22 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52699946">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1576]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <DocumentChange __id="9878" _type="Insert" date="Tue Apr 12 10:28:20 EDT 2022" docASTNodeCount="542" docActiveCodeLength="3760" docExpressionCount="379" docLength="4205" length="1" offset="3809" starttimestamp="1649721002230" timestamp="52698370">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="9882" _type="Replace" date="Tue Apr 12 10:28:22 EDT 2022" docASTNodeCount="541" docActiveCodeLength="3768" docExpressionCount="380" docLength="4213" endLine="104" insertionLength="9" int_docASTNodeCount="538" int_docActiveCodeLength="3759" int_docExpressionCount="378" int_docLength="4204" length="1" offset="3809" startLine="104" starttimestamp="1649721002230" timestamp="52699950">
    <deletedText><![CDATA[p]]></deletedText>
    <insertedText><![CDATA[print(b);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9885" _type="Replace" date="Tue Apr 12 10:28:22 EDT 2022" docASTNodeCount="541" docActiveCodeLength="3768" docExpressionCount="380" docLength="4213" endLine="104" insertionLength="1" int_docASTNodeCount="540" int_docActiveCodeLength="3767" int_docExpressionCount="379" int_docLength="4212" length="1" offset="3815" startLine="104" starttimestamp="1649721002230" timestamp="52700523">
    <deletedText><![CDATA[b]]></deletedText>
    <insertedText><![CDATA[l]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9888" _type="Delete" date="Tue Apr 12 10:28:23 EDT 2022" docASTNodeCount="540" docActiveCodeLength="3767" docExpressionCount="379" docLength="4212" endLine="104" length="1" offset="3815" startLine="104" starttimestamp="1649721002230" timestamp="52700997">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <DocumentChange __id="9893" _type="Insert" date="Tue Apr 12 10:28:24 EDT 2022" docASTNodeCount="540" docActiveCodeLength="3769" docExpressionCount="379" docLength="4214" length="2" offset="3814" repeat="2" starttimestamp="1649721002230" timestamp="52702080" timestamp2="52702240">
    <text><![CDATA[ln]]></text>
  </DocumentChange>
  <Command __id="9880" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 10:28:22 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="52699946" />
  <Command __id="9883" _type="InsertStringCommand" date="Tue Apr 12 10:28:22 EDT 2022" starttimestamp="1649721002230" timestamp="52700090" timestamp2="52700090">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9884" _type="InsertStringCommand" date="Tue Apr 12 10:28:22 EDT 2022" starttimestamp="1649721002230" timestamp="52700090" timestamp2="52700090">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9886" _type="InsertStringCommand" date="Tue Apr 12 10:28:22 EDT 2022" starttimestamp="1649721002230" timestamp="52700544" timestamp2="52700544">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9887" _type="InsertStringCommand" date="Tue Apr 12 10:28:22 EDT 2022" starttimestamp="1649721002230" timestamp="52700544" timestamp2="52700544">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9889" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:28:23 EDT 2022" starttimestamp="1649721002230" timestamp="52701013" />
  <Command __id="9890" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:28:23 EDT 2022" starttimestamp="1649721002230" timestamp="52701013" />
  <Command __id="9891" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 10:28:23 EDT 2022" starttimestamp="1649721002230" timestamp="52701514" />
  <Command __id="9892" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Apr 12 10:28:23 EDT 2022" starttimestamp="1649721002230" timestamp="52701514" />
  <Command __id="9894" _type="InsertStringCommand" date="Tue Apr 12 10:28:24 EDT 2022" starttimestamp="1649721002230" timestamp="52702104" timestamp2="52702104">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9895" _type="InsertStringCommand" date="Tue Apr 12 10:28:24 EDT 2022" starttimestamp="1649721002230" timestamp="52702104" timestamp2="52702104">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9897" _type="InsertStringCommand" date="Tue Apr 12 10:28:24 EDT 2022" starttimestamp="1649721002230" timestamp="52702265" timestamp2="52702265">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9898" _type="InsertStringCommand" date="Tue Apr 12 10:28:24 EDT 2022" starttimestamp="1649721002230" timestamp="52702265" timestamp2="52702265">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9899" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 10:28:25 EDT 2022" starttimestamp="1649721002230" timestamp="52703097" />
  <Command __id="9900" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Apr 12 10:28:25 EDT 2022" starttimestamp="1649721002230" timestamp="52703097" />
  <Command __id="9902" _type="InsertStringCommand" date="Tue Apr 12 10:28:26 EDT 2022" starttimestamp="1649721002230" timestamp="52703914" timestamp2="52703914">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="9903" _type="InsertStringCommand" date="Tue Apr 12 10:28:26 EDT 2022" starttimestamp="1649721002230" timestamp="52703915" timestamp2="52703915">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="9906" _type="PauseCommand" date="Tue Apr 12 10:28:27 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52705251">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1336]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="9905" _type="InsertStringCommand" date="Tue Apr 12 10:28:27 EDT 2022" starttimestamp="1649721002230" timestamp="52705251" timestamp2="52705251">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9907" _type="InsertStringCommand" date="Tue Apr 12 10:28:27 EDT 2022" starttimestamp="1649721002230" timestamp="52705251" timestamp2="52705251">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9909" _type="InsertStringCommand" date="Tue Apr 12 10:28:27 EDT 2022" starttimestamp="1649721002230" timestamp="52705383" timestamp2="52705383">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9910" _type="InsertStringCommand" date="Tue Apr 12 10:28:27 EDT 2022" starttimestamp="1649721002230" timestamp="52705383" timestamp2="52705383">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9912" _type="InsertStringCommand" date="Tue Apr 12 10:28:27 EDT 2022" starttimestamp="1649721002230" timestamp="52705615" timestamp2="52705615">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9913" _type="InsertStringCommand" date="Tue Apr 12 10:28:27 EDT 2022" starttimestamp="1649721002230" timestamp="52705615" timestamp2="52705615">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9915" _type="InsertStringCommand" date="Tue Apr 12 10:28:27 EDT 2022" starttimestamp="1649721002230" timestamp="52705702" timestamp2="52705702">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9916" _type="InsertStringCommand" date="Tue Apr 12 10:28:27 EDT 2022" starttimestamp="1649721002230" timestamp="52705702" timestamp2="52705702">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9918" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52705825" timestamp2="52705825">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="9919" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52705825" timestamp2="52705825">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="9921" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52706095" timestamp2="52706095">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="9922" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52706095" timestamp2="52706095">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="9924" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52706251" timestamp2="52706251">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9925" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52706251" timestamp2="52706251">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9927" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52706382" timestamp2="52706382">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9928" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52706382" timestamp2="52706382">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9930" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52706543" timestamp2="52706543">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="9931" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52706543" timestamp2="52706543">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="9933" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52706629" timestamp2="52706629">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9934" _type="InsertStringCommand" date="Tue Apr 12 10:28:28 EDT 2022" starttimestamp="1649721002230" timestamp="52706630" timestamp2="52706630">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9936" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52706776" timestamp2="52706776">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9937" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52706777" timestamp2="52706777">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9939" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52706834" timestamp2="52706834">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9940" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52706834" timestamp2="52706834">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9942" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52706912" timestamp2="52706912">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9943" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52706913" timestamp2="52706913">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9945" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52707079" timestamp2="52707079">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9946" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52707079" timestamp2="52707079">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9948" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52707433" timestamp2="52707433">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9949" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52707433" timestamp2="52707433">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9951" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52707529" timestamp2="52707529">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9952" _type="InsertStringCommand" date="Tue Apr 12 10:28:29 EDT 2022" starttimestamp="1649721002230" timestamp="52707530" timestamp2="52707530">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9954" _type="InsertStringCommand" date="Tue Apr 12 10:28:30 EDT 2022" starttimestamp="1649721002230" timestamp="52708073" timestamp2="52708073">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="9955" _type="InsertStringCommand" date="Tue Apr 12 10:28:30 EDT 2022" starttimestamp="1649721002230" timestamp="52708073" timestamp2="52708073">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="9957" _type="InsertStringCommand" date="Tue Apr 12 10:28:30 EDT 2022" starttimestamp="1649721002230" timestamp="52708322" timestamp2="52708322">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="9958" _type="InsertStringCommand" date="Tue Apr 12 10:28:30 EDT 2022" starttimestamp="1649721002230" timestamp="52708322" timestamp2="52708322">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="9960" _type="PauseCommand" date="Tue Apr 12 10:28:31 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52709374">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1052]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="9959" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Tue Apr 12 10:28:31 EDT 2022" starttimestamp="1649721002230" timestamp="52709374" />
  <Command __id="9962" _type="PauseCommand" date="Tue Apr 12 10:28:32 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52710379">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1005]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="9981" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Apr 12 10:28:41 EDT 2022" starttimestamp="1649721002230" timestamp="52719365" />
  <Command __id="9983" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Tue Apr 12 10:28:41 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="52719384" type="Run" />
  <Command __id="9984" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Tue Apr 12 10:28:41 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="52719384" type="Run" />
  <Command __id="9986" _type="PauseCommand" date="Tue Apr 12 10:28:52 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="52730416">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[11032]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="9985" _type="ShellCommand" date="Tue Apr 12 10:28:52 EDT 2022" starttimestamp="1649721002230" timestamp="52730416" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9988" _type="PauseCommand" date="Tue Apr 12 10:28:55 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52732843">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2427]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="9997" _type="ConsoleOutput" date="Tue Apr 12 10:28:59 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52737109" type="ConsoleOutput">
    <outputString><![CDATA[Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely"), Diff(INSERT,"Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10000" _type="PauseCommand" date="Tue Apr 12 10:29:03 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52741229">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4120]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="9999" _type="ConsoleInput" date="Tue Apr 12 10:29:03 EDT 2022" starttimestamp="1649721002230" timestamp="52741229" type="Exception">
    <outputString><![CDATA[HALLO
]]></outputString>
  </Command>
  <Command __id="10001" _type="ConsoleOutput" date="Tue Apr 12 10:29:03 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52741315" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Client Connect to Server"), Diff(INSERT,"Enter a line of input to be printed remotely¶client channel has written"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10002" _type="ExceptionCommand" date="Tue Apr 12 10:29:03 EDT 2022" starttimestamp="1649721002230" timestamp="52741415" type="Exception">
    <exceptionString><![CDATA[HALLO<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57275]
notifying reader!!
java.lang.IllegalMonitorStateException
	at java.base/java.lang.Object.notify(Native Method)
	at nioExample.AnNIOManagerPrintServer.socketChannelRead(AnNIOManagerPrintServer.java:106)
	at inputport.nio.manager.commands.classes.AReadCommand.notifyRead(AReadCommand.java:102)
	at inputport.nio.manager.commands.classes.AScatterGatherReadCommand.maybeExtractMessageAndNotifyReadListener(AScatterGatherReadCommand.java:120)
	at inputport.nio.manager.commands.classes.AScatterGatherReadCommand.processRead(AScatterGatherReadCommand.java:43)
	at inputport.nio.manager.commands.classes.AReadCommand.execute(AReadCommand.java:57)
	at inputport.nio.manager.ASelectionReadManager.processRead(ASelectionReadManager.java:54)
	at inputport.nio.manager.ASelectionManager.processSelectedOperation(ASelectionManager.java:81)
	at inputport.nio.manager.ASelectionManager.run(ASelectionManager.java:110)
	at java.base/java.lang.Thread.run(Thread.java:834)
Process select operation exception:null
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="10004" _type="PauseCommand" date="Tue Apr 12 10:29:20 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="52757855">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[16440]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="10003" _type="CopyCommand" date="Tue Apr 12 10:29:20 EDT 2022" starttimestamp="1649721002230" timestamp="52757855" />
  <Command __id="10006" _type="PauseCommand" date="Tue Apr 12 10:29:21 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52758897">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1042]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="10005" _type="ShellCommand" date="Tue Apr 12 10:29:21 EDT 2022" starttimestamp="1649721002230" timestamp="52758897" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10008" _type="PauseCommand" date="Tue Apr 12 10:30:15 EDT 2022" range="30s-1m" starttimestamp="1649721002230" timestamp="52813573">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[54676]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="10007" _type="ShellCommand" date="Tue Apr 12 10:30:15 EDT 2022" starttimestamp="1649721002230" timestamp="52813573" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10009" _type="MoveCaretCommand" caretOffset="3558" date="Tue Apr 12 10:30:15 EDT 2022" docOffset="3558" starttimestamp="1649721002230" timestamp="52813733" />
  <Command __id="10010" _type="MoveCaretCommand" caretOffset="3558" date="Tue Apr 12 10:30:15 EDT 2022" docOffset="3558" starttimestamp="1649721002230" timestamp="52813733" />
  <DocumentChange __id="9901" _type="Insert" date="Tue Apr 12 10:28:26 EDT 2022" docASTNodeCount="541" docActiveCodeLength="3789" docExpressionCount="380" docLength="4234" length="20" offset="3817" repeat="19" starttimestamp="1649721002230" timestamp="52703906" timestamp2="52708316">
    <text><![CDATA["notifying reader!!"]]></text>
  </DocumentChange>
  <Command __id="10012" _type="PauseCommand" date="Tue Apr 12 10:30:18 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52816512">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2779]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="10013" _type="MoveCaretCommand" caretOffset="757" date="Tue Apr 12 10:30:18 EDT 2022" docOffset="757" starttimestamp="1649721002230" timestamp="52816725" />
  <Command __id="10011" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:30:18 EDT 2022" docASTNodeCount="80" docActiveCodeLength="609" docExpressionCount="44" docLength="764" projectName="A6" starttimestamp="1649721002230" timestamp="52816512">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶		¶		}¶		¶	}¶	¶¶"), Diff(DELETE,"¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import readThread.ReadThreadInterface;

public class exampleServerReadThread implements ReadThreadInterface{

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
		
		}
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="10015" _type="PauseCommand" date="Tue Apr 12 10:30:24 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52822564">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5839]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="10016" _type="UndoCommand" date="Tue Apr 12 10:30:24 EDT 2022" starttimestamp="1649721002230" timestamp="52822610" />
  <Command __id="10018" _type="UndoCommand" date="Tue Apr 12 10:30:25 EDT 2022" starttimestamp="1649721002230" timestamp="52823498" />
  <DocumentChange __id="10014" _type="Insert" date="Tue Apr 12 10:30:24 EDT 2022" docASTNodeCount="90" docActiveCodeLength="679" docExpressionCount="48" docLength="876" length="112" offset="757" repeat="2" starttimestamp="1649721002230" timestamp="52822564" timestamp2="52823467">
    <text><![CDATA[
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}]]></text>
  </DocumentChange>
  <Command __id="10020" _type="PauseCommand" date="Tue Apr 12 10:30:28 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52825787">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2289]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="10021" _type="InsertStringCommand" date="Tue Apr 12 10:30:28 EDT 2022" starttimestamp="1649721002230" timestamp="52825808" timestamp2="52825808">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="10022" _type="InsertStringCommand" date="Tue Apr 12 10:30:28 EDT 2022" starttimestamp="1649721002230" timestamp="52825808" timestamp2="52825808">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="10025" _type="PauseCommand" date="Tue Apr 12 10:30:29 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52827276">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1468]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="10024" _type="InsertStringCommand" date="Tue Apr 12 10:30:29 EDT 2022" starttimestamp="1649721002230" timestamp="52827276" timestamp2="52827276">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="10026" _type="InsertStringCommand" date="Tue Apr 12 10:30:29 EDT 2022" starttimestamp="1649721002230" timestamp="52827276" timestamp2="52827276">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="10028" _type="InsertStringCommand" date="Tue Apr 12 10:30:29 EDT 2022" starttimestamp="1649721002230" timestamp="52827697" timestamp2="52827697">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="10029" _type="InsertStringCommand" date="Tue Apr 12 10:30:29 EDT 2022" starttimestamp="1649721002230" timestamp="52827698" timestamp2="52827698">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="10031" _type="InsertStringCommand" date="Tue Apr 12 10:30:30 EDT 2022" starttimestamp="1649721002230" timestamp="52827888" timestamp2="52827888">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="10032" _type="InsertStringCommand" date="Tue Apr 12 10:30:30 EDT 2022" starttimestamp="1649721002230" timestamp="52827889" timestamp2="52827889">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="10034" _type="InsertStringCommand" date="Tue Apr 12 10:30:30 EDT 2022" starttimestamp="1649721002230" timestamp="52828067" timestamp2="52828067">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10035" _type="InsertStringCommand" date="Tue Apr 12 10:30:30 EDT 2022" starttimestamp="1649721002230" timestamp="52828067" timestamp2="52828067">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10037" _type="InsertStringCommand" date="Tue Apr 12 10:30:30 EDT 2022" starttimestamp="1649721002230" timestamp="52828154" timestamp2="52828154">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10038" _type="InsertStringCommand" date="Tue Apr 12 10:30:30 EDT 2022" starttimestamp="1649721002230" timestamp="52828155" timestamp2="52828155">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10040" _type="InsertStringCommand" date="Tue Apr 12 10:30:31 EDT 2022" starttimestamp="1649721002230" timestamp="52828938" timestamp2="52828938">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10041" _type="InsertStringCommand" date="Tue Apr 12 10:30:31 EDT 2022" starttimestamp="1649721002230" timestamp="52828938" timestamp2="52828938">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10043" _type="InsertStringCommand" date="Tue Apr 12 10:30:31 EDT 2022" starttimestamp="1649721002230" timestamp="52829106" timestamp2="52829106">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="10044" _type="InsertStringCommand" date="Tue Apr 12 10:30:31 EDT 2022" starttimestamp="1649721002230" timestamp="52829106" timestamp2="52829106">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="10046" _type="InsertStringCommand" date="Tue Apr 12 10:30:31 EDT 2022" starttimestamp="1649721002230" timestamp="52829219" timestamp2="52829219">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="10047" _type="InsertStringCommand" date="Tue Apr 12 10:30:31 EDT 2022" starttimestamp="1649721002230" timestamp="52829219" timestamp2="52829219">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="10049" _type="InsertStringCommand" date="Tue Apr 12 10:30:31 EDT 2022" starttimestamp="1649721002230" timestamp="52829390" timestamp2="52829390">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10050" _type="InsertStringCommand" date="Tue Apr 12 10:30:31 EDT 2022" starttimestamp="1649721002230" timestamp="52829391" timestamp2="52829391">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10052" _type="PauseCommand" date="Tue Apr 12 10:30:32 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52830460">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1069]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="10051" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:30:32 EDT 2022" starttimestamp="1649721002230" timestamp="52830460" />
  <Command __id="10053" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:30:32 EDT 2022" starttimestamp="1649721002230" timestamp="52830504" />
  <Command __id="10054" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:30:32 EDT 2022" starttimestamp="1649721002230" timestamp="52830586" />
  <Command __id="10056" _type="PauseCommand" date="Tue Apr 12 10:30:35 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52833690">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3104]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="10055" _type="ShellCommand" date="Tue Apr 12 10:30:35 EDT 2022" starttimestamp="1649721002230" timestamp="52833690" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10057" _type="ShellCommand" date="Tue Apr 12 10:30:36 EDT 2022" starttimestamp="1649721002230" timestamp="52833919" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10061" _type="MoveCaretCommand" caretOffset="233" date="Tue Apr 12 10:30:36 EDT 2022" docOffset="335" starttimestamp="1649721002230" timestamp="52834380" />
  <Command __id="10063" _type="PauseCommand" date="Tue Apr 12 10:30:37 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52835650">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1270]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="10062" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:30:37 EDT 2022" starttimestamp="1649721002230" timestamp="52835650" />
  <Command __id="10064" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:30:37 EDT 2022" starttimestamp="1649721002230" timestamp="52835731" />
  <Command __id="10065" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:30:38 EDT 2022" starttimestamp="1649721002230" timestamp="52835808" />
  <DocumentChange __id="10019" _type="Insert" date="Tue Apr 12 10:30:28 EDT 2022" docASTNodeCount="92" docActiveCodeLength="691" docExpressionCount="50" docLength="888" length="12" offset="757" repeat="10" starttimestamp="1649721002230" timestamp="52825787" timestamp2="52829369">
    <text><![CDATA[
	@Override]]></text>
  </DocumentChange>
  <Command __id="10058" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:30:36 EDT 2022" docASTNodeCount="41" docActiveCodeLength="317" docExpressionCount="32" docLength="317" projectName="A6" starttimestamp="1649721002230" timestamp="52834058">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶¶@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})¶public interface ReadThreadInterface extends SocketChannelReadListener, Runnable{¶¶"), Diff(DELETE,"	void notifyThread();¶"), Diff(EQUAL,"¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import util.annotations.Tags;
import util.tags.DistributedTags;
import inputport.nio.manager.listeners.SocketChannelReadListener;

@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})
public interface ReadThreadInterface extends SocketChannelReadListener, Runnable{


}
]]></snapshot>
  </Command>
  <DocumentChange __id="10059" _type="Insert" date="Tue Apr 12 10:30:36 EDT 2022" docASTNodeCount="44" docActiveCodeLength="342" docExpressionCount="33" docLength="342" length="25" offset="308" repeat="2" starttimestamp="1649721002230" timestamp="52834083" timestamp2="52834083">
    <text><![CDATA[

	void notifyThread();]]></text>
  </DocumentChange>
  <Command __id="10067" _type="PauseCommand" date="Tue Apr 12 10:30:40 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52838719">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2911]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="10068" _type="MoveCaretCommand" caretOffset="3558" date="Tue Apr 12 10:30:41 EDT 2022" docOffset="3558" starttimestamp="1649721002230" timestamp="52838885" />
  <Command __id="10070" _type="PauseCommand" date="Tue Apr 12 10:30:43 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52841449">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2564]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="10069" _type="MoveCaretCommand" caretOffset="3860" date="Tue Apr 12 10:30:43 EDT 2022" docOffset="3860" starttimestamp="1649721002230" timestamp="52841449" />
  <Command __id="10071" _type="MoveCaretCommand" caretOffset="3860" date="Tue Apr 12 10:30:43 EDT 2022" docOffset="3860" starttimestamp="1649721002230" timestamp="52841449" />
  <Command __id="10072" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.goto.lineStart" date="Tue Apr 12 10:30:44 EDT 2022" starttimestamp="1649721002230" timestamp="52841939" />
  <Command __id="10074" _type="PauseCommand" date="Tue Apr 12 10:30:46 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52843770">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1831]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="10073" _type="MoveCaretCommand" caretOffset="3862" date="Tue Apr 12 10:30:46 EDT 2022" docOffset="3862" starttimestamp="1649721002230" timestamp="52843770" />
  <Command __id="10075" _type="MoveCaretCommand" caretOffset="3862" date="Tue Apr 12 10:30:46 EDT 2022" docOffset="3862" starttimestamp="1649721002230" timestamp="52843770" />
  <Command __id="10077" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52843980" />
  <Command __id="10078" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52843980" />
  <Command __id="10080" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52844128" />
  <Command __id="10081" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52844128" />
  <Command __id="10083" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52844286" />
  <Command __id="10084" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52844286" />
  <Command __id="10086" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52844448" />
  <Command __id="10087" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52844448" />
  <Command __id="10089" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52844591" />
  <Command __id="10090" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52844591" />
  <Command __id="10092" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52844756" />
  <Command __id="10093" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:46 EDT 2022" starttimestamp="1649721002230" timestamp="52844756" />
  <Command __id="10095" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:47 EDT 2022" starttimestamp="1649721002230" timestamp="52844920" />
  <Command __id="10096" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:47 EDT 2022" starttimestamp="1649721002230" timestamp="52844920" />
  <Command __id="10098" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:47 EDT 2022" starttimestamp="1649721002230" timestamp="52845072" />
  <Command __id="10099" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:47 EDT 2022" starttimestamp="1649721002230" timestamp="52845072" />
  <Command __id="10101" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:47 EDT 2022" starttimestamp="1649721002230" timestamp="52845217" />
  <Command __id="10102" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Apr 12 10:30:47 EDT 2022" starttimestamp="1649721002230" timestamp="52845217" />
  <Command __id="10104" _type="InsertStringCommand" date="Tue Apr 12 10:30:48 EDT 2022" starttimestamp="1649721002230" timestamp="52845782" timestamp2="52845782">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="10105" _type="InsertStringCommand" date="Tue Apr 12 10:30:48 EDT 2022" starttimestamp="1649721002230" timestamp="52845782" timestamp2="52845782">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="10106" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 10:30:48 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="52845808" />
  <Command __id="10066" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:30:40 EDT 2022" docASTNodeCount="541" docActiveCodeLength="3789" docExpressionCount="380" docLength="4234" projectName="A6" starttimestamp="1649721002230" timestamp="52838719">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶import assignments.util.MiscAssignmentUtils;¶¶import client.ClientRemoteInterfaceGIPC;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	Thread readThread = null;¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		final ReadThreadInterface reader = new exampleServerReadThread();¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		// Pop value off the bounded buffer¶		ByteBuffer originalMessage = null;¶		try {¶			originalMessage = boundedBuffer.take();¶		} catch (InterruptedException e) {¶			e.printStackTrace();¶		}¶		// Echo recieve message to all clients (except original message sender)¶		for (SocketChannel socket : socketList) {¶			if (!socket.equals(aSocketChannel)) {¶				nioManager.write(socket, originalMessage, this);¶			}¶		}¶		¶		"), Diff(INSERT,"System.out.println("notifying reader!!");¶		"), Diff(EQUAL,"readThread.notify();¶		System.out.println("thread has completed action and is now waiting");¶¶	}¶¶	@Override¶	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import assignments.util.MiscAssignmentUtils;

import client.ClientRemoteInterfaceGIPC;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {

	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	Thread readThread = null;
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();

	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
//	}
	protected void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	protected void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		final ReadThreadInterface reader = new exampleServerReadThread();
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		// Pop value off the bounded buffer
		ByteBuffer originalMessage = null;
		try {
			originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		// Echo recieve message to all clients (except original message sender)
		for (SocketChannel socket : socketList) {
			if (!socket.equals(aSocketChannel)) {
				nioManager.write(socket, originalMessage, this);
			}
		}
		
		System.out.println("notifying reader!!");
		readThread.notify();
		System.out.println("thread has completed action and is now waiting");

	}

	@Override
	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="10076" _type="Delete" date="Tue Apr 12 10:30:46 EDT 2022" docASTNodeCount="539" docActiveCodeLength="3780" docExpressionCount="378" docLength="4225" endLine="105" length="9" offset="3853" repeat="9" startLine="105" starttimestamp="1649721002230" timestamp="52843957" timestamp2="52845209">
    <text><![CDATA[.notify()]]></text>
  </DocumentChange>
  <DocumentChange __id="10103" _type="Insert" date="Tue Apr 12 10:30:48 EDT 2022" docASTNodeCount="541" docActiveCodeLength="3783" docExpressionCount="380" docLength="4228" length="3" offset="3853" repeat="3" starttimestamp="1649721002230" timestamp="52845773" timestamp2="52846563">
    <text><![CDATA[.no]]></text>
  </DocumentChange>
  <Command __id="10110" _type="PauseCommand" date="Tue Apr 12 10:30:50 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52848399">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2591]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="10109" _type="Delete" date="Tue Apr 12 10:30:50 EDT 2022" docASTNodeCount="539" docActiveCodeLength="3780" docExpressionCount="378" docLength="4225" endLine="105" length="3" offset="3853" repeat="3" startLine="105" starttimestamp="1649721002230" timestamp="52848399" timestamp2="52848721">
    <text><![CDATA[.no]]></text>
  </DocumentChange>
  <Command __id="10114" _type="PauseCommand" date="Tue Apr 12 10:30:54 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52851797">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[3398]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="10115" _type="MoveCaretCommand" caretOffset="769" date="Tue Apr 12 10:30:54 EDT 2022" docOffset="769" starttimestamp="1649721002230" timestamp="52852209" />
  <Command __id="10113" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:30:54 EDT 2022" docASTNodeCount="92" docActiveCodeLength="691" docExpressionCount="50" docLength="888" projectName="A6" starttimestamp="1649721002230" timestamp="52851797">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶		¶		}¶		¶	}¶	"), Diff(INSERT,"¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import readThread.ReadThreadInterface;

public class exampleServerReadThread implements ReadThreadInterface{

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
		
		}
		
	}
	
	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <Command __id="10117" _type="PauseCommand" date="Tue Apr 12 10:31:00 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52858513">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6304]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="10121" _type="SelectTextCommand" caretOffset="6631" date="Tue Apr 12 10:31:34 EDT 2022" end="6631" start="6620" starttimestamp="1649721002230" timestamp="52892033" />
  <Command __id="10119" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:31:33 EDT 2022" docASTNodeCount="1386" docActiveCodeLength="8118" docExpressionCount="794" docLength="8637" projectName="A2" starttimestamp="1649721002230" timestamp="52891669">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A2\src\comp533\mvc\Model.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.mvc;¶¶import java.beans.PropertyChangeSupport;¶import java.util.ArrayList;¶import java.util.Arrays;¶import java.util.List;¶import java.util.Map;¶import java.util.concurrent.ArrayBlockingQueue;¶import java.util.concurrent.BlockingQueue;¶¶import comp533.barrier.Barrier;¶import comp533.barrier.BarrierInterface;¶import comp533.joiner.Joiner;¶import comp533.joiner.JoinerInterface;¶import comp533.salve.Slave;¶import comp533.salve.SlaveInterface;¶¶import java.util.HashMap;¶import java.util.LinkedList;¶import java.beans.PropertyChangeListener;¶//import java.beans.PropertyChangeEvent;¶import gradingTools.comp533s19.assignment0.AMapReduceTracer;¶¶public class Model extends AMapReduceTracer implements ModelInterface {¶	private PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);¶	private String inputString = null;¶	private Map<String, Integer> result = new HashMap<String, Integer>();¶	final String space = " ";¶	boolean slavesStarted = false;¶¶	// properties from A2¶	int aNumThreads = 0;¶	List<Thread> threads = new ArrayList<Thread>();¶	List<SlaveInterface> slaves = new ArrayList<SlaveInterface>();¶	BarrierInterface barrier;¶	JoinerInterface joiner;¶	BlockingQueue<KeyValueInterface<String, Integer>> aKeyValueQueue = new ArrayBlockingQueue<KeyValueInterface<String, Integer>>(¶			BUFFER_SIZE);¶	List<LinkedList<KeyValueInterface<String, Integer>>> aReductionQueueList = new ArrayList<LinkedList<KeyValueInterface<String, Integer>>>();¶¶	@Override¶	public int getNumThreads() {¶		return aNumThreads;¶	}¶¶	@Override¶	public void setNumThreads(final int numThreads) {¶		// barrier = new Barrier(numThreads);¶		// joiner = new Joiner(numThreads);¶		/*¶		 * traceBarrierCreated(barrier, numThreads); traceJoinerCreated(joiner,¶		 * numThreads);¶		 */¶¶		final String oldValue = Integer.toString(aNumThreads);¶		String oldThreads = threads.toString();¶		if (threads.isEmpty()) {¶			oldThreads = null;¶			aNumThreads = numThreads;¶		}¶¶		threads = new ArrayList<Thread>();¶		for (int i = 0; i < numThreads; i++) {¶			final String name = "Slave" + Integer.toString(i);¶¶			final SlaveInterface newSlave = new Slave(i, this);¶			slaves.add(newSlave);¶¶			final Thread slaveThread = new Thread(newSlave);¶			slaveThread.setName(name);¶			threads.add(slaveThread);¶¶			// Add separate reduction queue to Reduction queue list for each slave thread¶			aReductionQueueList.add(new LinkedList<KeyValueInterface<String, Integer>>());¶		}¶		final String label = "NumThreads";¶		final String newValue = Integer.toString(aNumThreads);¶¶		final String labelThread = "Threads";¶		final String newThreads = threads.toString();¶¶		propertyChangeSupport.firePropertyChange(label, oldValue, newValue);¶		propertyChangeSupport.firePropertyChange(labelThread, oldThreads, newThreads);¶	}¶¶	@Override¶	public List<Thread> getThreads() {¶		return threads;¶	}¶¶	@Override¶	public Map<String, Integer> getResult() {¶		return result;¶	}¶¶	@Override¶	public void addPropertyChangeListener(final PropertyChangeListener newListener) {¶		propertyChangeSupport.addPropertyChangeListener(newListener);¶	}¶¶	@Override¶	public void setInputString(final String newVal) {¶		barrier = new Barrier(aNumThreads);¶		joiner = new Joiner(aNumThreads);¶		traceBarrierCreated(barrier, aNumThreads);¶		traceJoinerCreated(joiner, aNumThreads);¶¶		final String oldResult = result.toString();¶		final String oldInputString = inputString;¶		inputString = newVal;¶		final String label = "InputString";¶¶		propertyChangeSupport.firePropertyChange(label, oldInputString, newVal);¶¶		// A2 tasks¶		// 1¶		aKeyValueQueue = new ArrayBlockingQueue<KeyValueInterface<String, Integer>>(BUFFER_SIZE);¶		aReductionQueueList = new ArrayList<LinkedList<KeyValueInterface<String, Integer>>>();¶		aKeyValueQueue.clear();¶		aReductionQueueList.clear();¶		result.clear();¶¶		if (!slavesStarted) {¶			for (int i = 0; i < threads.size(); i++) {¶				// TODO this cannot happen multiple times:¶				threads.get(i).start();¶			}¶			slavesStarted = true;¶		}¶¶	¶¶		aReductionQueueList = notifySlaves(slaves, aReductionQueueList);¶¶		// 3¶		final String tokens = inputString;¶		final List<String> listOfToken = Arrays.asList(tokens.split(space));¶		¶¶		aKeyValueQueue = mapping(aKeyValueQueue, listOfToken, slaves);¶¶	¶		// 5¶		aKeyValueQueue = enqueuer(threads, slaves, aKeyValueQueue);¶¶¶		// 6¶		joiner.join();¶		result = combineReductionQueueList(aReductionQueueList, result);¶¶		final String resultLabel = "Result";¶¶		propertyChangeSupport.firePropertyChange(resultLabel, oldResult, result.toString());¶¶	}¶¶	@Override¶	public String toString() {// overriding the toString() method¶		return MODEL;¶	}¶¶	@Override¶	public BarrierInterface getBarrier() {¶		return barrier;¶	}¶¶	@Override¶	public JoinerInterface getJoiner() {¶		return joiner;¶	}¶¶	@Override¶	public BlockingQueue getKeyValueQueue() {¶		return aKeyValueQueue;¶	}¶¶	@Override¶	public List<LinkedList<KeyValueInterface<String, Integer>>> getReductionQueueList() {¶		return aReductionQueueList;¶	}¶¶	@Override¶	public void computeResult() {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void terminate() {¶		// TODO Auto-generated method stub¶		for (int i = 0; i < threads.size(); i++) {¶			threads.get(i).interrupt();¶¶		}¶	}¶¶	@Override¶	public Map<String, Integer> combineReductionQueueList(¶			final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueueList,¶			final Map<String, Integer> aResult) {¶		Map<String, Integer> results = aResult;¶		for (int i = 0; i < reductionQueueList.size(); i++) {¶			final LinkedList<KeyValueInterface<String, Integer>> linkedList = reductionQueueList.get(i);¶¶			results = getResults(reductionQueueList, aResult, i);¶			traceAddedToMap(results, linkedList);¶		}¶		return results;¶	}¶¶	@Override¶	public Map<String, Integer> getResults(¶			final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueueList,¶			final Map<String, Integer> resultMap, final int index) {¶		final LinkedList<KeyValueInterface<String, Integer>> linkedList = reductionQueueList.get(index);¶		final Map<String, Integer> results = resultMap;¶		for (int listIndex = 0; listIndex < linkedList.size(); listIndex++) {¶			results.put(linkedList.get(listIndex).getKey(), linkedList.get(listIndex).getValue());¶		}¶		return results;¶¶	}¶¶	@Override¶	public BlockingQueue<KeyValueInterface<String, Integer>> enqueuer(final List<Thread> aThreads,¶			final List<SlaveInterface> aSlaves, final BlockingQueue<KeyValueInterface<String, Integer>> keyValueQueue) {¶¶		final BlockingQueue<KeyValueInterface<String, Integer>> keyValQueue = keyValueQueue;¶		for (int i = 0; i < aThreads.size(); i++) {¶			final KeyValueInterface<String, Integer> keyVal = new KeyValue<String, Integer>();¶			keyVal.setKey(null);¶			keyVal.setValue(null);¶			try {¶				traceEnqueueRequest(keyVal);¶				keyValQueue.put(keyVal);¶				traceEnqueue(keyValQueue);¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶			aSlaves.get(i).notifySlave();¶		}¶		return keyValQueue;¶¶	}¶¶	@Override¶	public List<LinkedList<KeyValueInterface<String, Integer>>> notifySlaves(final List<SlaveInterface> aSlaves,¶			final List<LinkedList<KeyValueInterface<String, Integer>>> redQueue) {¶		final List<LinkedList<KeyValueInterface<String, Integer>>> reductionQueue = redQueue;¶		for (int i = 0; i < aSlaves.size(); i++) {¶			aSlaves.get(i).notifySlave();¶			reductionQueue.add(i, new LinkedList<KeyValueInterface<String, Integer>>());¶		}¶		return reductionQueue;¶	}¶¶	@Override¶	public BlockingQueue<KeyValueInterface<String, Integer>> mapping(¶			final BlockingQueue<KeyValueInterface<String, Integer>> keyValueQueue, final List<String> listOfToken,¶			final List<SlaveInterface> salves) {¶		¶		final TokenCountingMapperInterface<String, Integer> mapper = TokenCountingMapperFactory.getMapper();¶		¶		for (int i = 0; i < listOfToken.size(); i++) {¶			final int slaveNum = i % slaves.size();¶			slaves.get(slaveNum).notifySlave();¶			final KeyValueInterface<String, Integer> keyVal = mapper.map(listOfToken.get(i));¶¶			try {¶				traceEnqueueRequest(keyVal);¶				aKeyValueQueue.put(keyVal);¶				traceEnqueue(keyValueQueue);¶			} catch (InterruptedException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶¶			slaves.get(slaveNum).notifySlave();¶		}¶		return aKeyValueQueue;¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="10123" _type="PauseCommand" date="Tue Apr 12 10:31:47 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="52905081">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[13048]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="10124" _type="MoveCaretCommand" caretOffset="3853" date="Tue Apr 12 10:31:47 EDT 2022" docOffset="3853" starttimestamp="1649721002230" timestamp="52905457" />
  <Command __id="10126" _type="PauseCommand" date="Tue Apr 12 10:32:00 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="52918479">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13022]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="10125" _type="SelectTextCommand" caretOffset="2558" date="Tue Apr 12 10:32:00 EDT 2022" end="2590" start="2558" starttimestamp="1649721002230" timestamp="52918479" />
  <Command __id="10127" _type="SelectTextCommand" caretOffset="2558" date="Tue Apr 12 10:32:00 EDT 2022" end="2590" start="2558" starttimestamp="1649721002230" timestamp="52918480" />
  <Command __id="10122" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:31:47 EDT 2022" docASTNodeCount="539" docActiveCodeLength="3780" docExpressionCount="378" docLength="4225" projectName="A6" starttimestamp="1649721002230" timestamp="52905081">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶import assignments.util.MiscAssignmentUtils;¶¶import client.ClientRemoteInterfaceGIPC;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import inputport.nio.manager.listeners.WriteBoundedBufferListener;¶import readThread.ReadThreadInterface;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶¶public class AnNIOManagerPrintServer implements NIOManagerPrintServer {¶¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	Thread readThread = null;¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶¶	public AnNIOManagerPrintServer(int aServerPort) {¶		setTracing();¶//		setFactories();¶		initialize(aServerPort);¶	}¶¶//	protected void setFactories() {¶//		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶//	}¶	protected void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	protected void initialize(int aServerPort) {¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		final ReadThreadInterface reader = new exampleServerReadThread();¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		¶		//Start thread and do some action¶		readThread.start();¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		// Pop value off the bounded buffer¶		ByteBuffer originalMessage = null;¶		try {¶			originalMessage = boundedBuffer.take();¶		} catch (InterruptedException e) {¶			e.printStackTrace();¶		}¶		// Echo recieve message to all clients (except original message sender)¶		for (SocketChannel socket : socketList) {¶			if (!socket.equals(aSocketChannel)) {¶				nioManager.write(socket, originalMessage, this);¶			}¶		}¶		¶		System.out.println("notifying reader!!");¶		readThread;¶		System.out.println("thread has completed action and is now waiting");¶¶	}¶¶	@Override¶	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {¶		// TODO Auto-generated method stub¶		String aMessageString = new String(aMessage.array());¶		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="10129" _type="PauseCommand" date="Tue Apr 12 10:32:04 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52921881">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3401]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="10130" _type="CutCommand" date="Tue Apr 12 10:32:04 EDT 2022" starttimestamp="1649721002230" timestamp="52921894" />
  <Command __id="10132" _type="PauseCommand" date="Tue Apr 12 10:32:08 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52925957">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[4063]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="10131" _type="MoveCaretCommand" caretOffset="1445" date="Tue Apr 12 10:32:08 EDT 2022" docOffset="1445" starttimestamp="1649721002230" timestamp="52925957" />
  <Command __id="10133" _type="MoveCaretCommand" caretOffset="1445" date="Tue Apr 12 10:32:08 EDT 2022" docOffset="1445" starttimestamp="1649721002230" timestamp="52925957" />
  <Command __id="10136" _type="PasteCommand" date="Tue Apr 12 10:32:08 EDT 2022" starttimestamp="1649721002230" timestamp="52926539" />
  <Command __id="10139" _type="PauseCommand" date="Tue Apr 12 10:32:11 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52929432">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2623]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="10138" _type="SelectTextCommand" caretOffset="1448" date="Tue Apr 12 10:32:11 EDT 2022" end="1454" start="1448" starttimestamp="1649721002230" timestamp="52929432" />
  <Command __id="10140" _type="SelectTextCommand" caretOffset="1448" date="Tue Apr 12 10:32:11 EDT 2022" end="1454" start="1448" starttimestamp="1649721002230" timestamp="52929433" />
  <Command __id="10143" _type="PauseCommand" date="Tue Apr 12 10:32:13 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52931137">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[1467]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="10142" _type="MoveCaretCommand" caretOffset="1474" date="Tue Apr 12 10:32:13 EDT 2022" docOffset="1474" starttimestamp="1649721002230" timestamp="52931137" />
  <Command __id="10144" _type="MoveCaretCommand" caretOffset="1474" date="Tue Apr 12 10:32:13 EDT 2022" docOffset="1474" starttimestamp="1649721002230" timestamp="52931138" />
  <Command __id="10153" _type="PauseCommand" date="Tue Apr 12 10:32:15 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52933288">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1790]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="10152" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:32:15 EDT 2022" starttimestamp="1649721002230" timestamp="52933288" />
  <Command __id="10154" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:32:15 EDT 2022" starttimestamp="1649721002230" timestamp="52933364" />
  <Command __id="10155" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:32:15 EDT 2022" starttimestamp="1649721002230" timestamp="52933492" />
  <Command __id="10157" _type="PauseCommand" date="Tue Apr 12 10:32:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52936841">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3349]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="10169" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:32:22 EDT 2022" starttimestamp="1649721002230" timestamp="52939877" />
  <Command __id="10171" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:32:22 EDT 2022" starttimestamp="1649721002230" timestamp="52939927" />
  <Command __id="10172" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:32:22 EDT 2022" starttimestamp="1649721002230" timestamp="52940054" />
  <Command __id="10174" _type="PauseCommand" date="Tue Apr 12 10:32:27 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52944970">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4916]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <DocumentChange __id="10128" _type="Delete" date="Tue Apr 12 10:32:04 EDT 2022" docASTNodeCount="534" docActiveCodeLength="3748" docExpressionCount="376" docLength="4193" endLine="65" length="32" offset="2558" startLine="65" starttimestamp="1649721002230" timestamp="52921881">
    <text><![CDATA[final ReadThreadInterface reader]]></text>
  </DocumentChange>
  <DocumentChange __id="10134" _type="Insert" date="Tue Apr 12 10:32:08 EDT 2022" docASTNodeCount="534" docActiveCodeLength="3751" docExpressionCount="376" docLength="4196" length="3" offset="1445" starttimestamp="1649721002230" timestamp="52926198">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="10135" _type="Replace" date="Tue Apr 12 10:32:08 EDT 2022" docASTNodeCount="540" docActiveCodeLength="3783" docExpressionCount="378" docLength="4228" endLine="32" insertionLength="33" int_docASTNodeCount="534" int_docActiveCodeLength="3750" int_docExpressionCount="376" int_docLength="4195" length="1" offset="1447" startLine="32" starttimestamp="1649721002230" timestamp="52926525">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	final ReadThreadInterface reader]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="10137" _type="Insert" date="Tue Apr 12 10:32:09 EDT 2022" docASTNodeCount="540" docActiveCodeLength="3784" docExpressionCount="378" docLength="4229" length="1" offset="1480" starttimestamp="1649721002230" timestamp="52926809">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="10141" _type="Delete" date="Tue Apr 12 10:32:11 EDT 2022" docASTNodeCount="539" docActiveCodeLength="3778" docExpressionCount="378" docLength="4223" endLine="32" length="6" offset="1448" startLine="32" starttimestamp="1649721002230" timestamp="52929670">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="10145" _type="Insert" date="Tue Apr 12 10:32:13 EDT 2022" docASTNodeCount="540" docActiveCodeLength="3785" docExpressionCount="379" docLength="4230" length="7" offset="1474" repeat="7" starttimestamp="1649721002230" timestamp="52931498" timestamp2="52932830">
    <text><![CDATA[ = null]]></text>
  </DocumentChange>
  <DocumentChange __id="10159" _type="Insert" date="Tue Apr 12 10:32:19 EDT 2022" docASTNodeCount="542" docActiveCodeLength="3786" docExpressionCount="381" docLength="4231" length="1" offset="2596" starttimestamp="1649721002230" timestamp="52937062">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <DocumentChange __id="10160" _type="Delete" date="Tue Apr 12 10:32:19 EDT 2022" docASTNodeCount="540" docActiveCodeLength="3784" docExpressionCount="379" docLength="4229" endLine="66" length="2" offset="2595" repeat="2" startLine="66" starttimestamp="1649721002230" timestamp="52937373" timestamp2="52937511">
    <text><![CDATA[ r]]></text>
  </DocumentChange>
  <DocumentChange __id="10162" _type="Insert" date="Tue Apr 12 10:32:19 EDT 2022" docASTNodeCount="542" docActiveCodeLength="3791" docExpressionCount="381" docLength="4236" length="7" offset="2595" repeat="7" starttimestamp="1649721002230" timestamp="52937603" timestamp2="52938504">
    <text><![CDATA[reader ]]></text>
  </DocumentChange>
  <DocumentChange __id="10176" _type="Replace" date="Tue Apr 12 10:32:27 EDT 2022" docASTNodeCount="542" docActiveCodeLength="3782" docExpressionCount="381" docLength="4227" endLine="106" insertionLength="1" int_docASTNodeCount="541" int_docActiveCodeLength="3781" int_docExpressionCount="380" int_docLength="4226" length="10" offset="3854" startLine="106" starttimestamp="1649721002230" timestamp="52945141">
    <deletedText><![CDATA[readThread]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <Command __id="10173" _type="SelectTextCommand" caretOffset="3854" date="Tue Apr 12 10:32:27 EDT 2022" end="3864" start="3854" starttimestamp="1649721002230" timestamp="52944970" />
  <Command __id="10175" _type="SelectTextCommand" caretOffset="3854" date="Tue Apr 12 10:32:27 EDT 2022" end="3864" start="3854" starttimestamp="1649721002230" timestamp="52944970" />
  <Command __id="10184" _type="PauseCommand" date="Tue Apr 12 10:32:28 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52946281">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1033]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="10183" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Apr 12 10:32:28 EDT 2022" start_end="START" starttimestamp="1649721002230" timestamp="52946281" />
  <Command __id="10187" _type="PauseCommand" date="Tue Apr 12 10:32:32 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52950241">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3960]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="10186" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Apr 12 10:32:32 EDT 2022" start_end="END" starttimestamp="1649721002230" timestamp="52950241" />
  <Command __id="10189" _type="InsertStringCommand" date="Tue Apr 12 10:32:32 EDT 2022" starttimestamp="1649721002230" timestamp="52950259" timestamp2="52950259">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="10190" _type="InsertStringCommand" date="Tue Apr 12 10:32:32 EDT 2022" starttimestamp="1649721002230" timestamp="52950259" timestamp2="52950259">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="10177" _type="Insert" date="Tue Apr 12 10:32:27 EDT 2022" docASTNodeCount="544" docActiveCodeLength="3789" docExpressionCount="383" docLength="4234" length="7" offset="3855" repeat="7" starttimestamp="1649721002230" timestamp="52945248" timestamp2="52947766">
    <text><![CDATA[eader.n]]></text>
  </DocumentChange>
  <DocumentChange __id="10188" _type="Replace" date="Tue Apr 12 10:32:32 EDT 2022" docASTNodeCount="545" docActiveCodeLength="3803" docExpressionCount="383" docLength="4248" endLine="106" insertionLength="15" int_docASTNodeCount="542" int_docActiveCodeLength="3788" int_docExpressionCount="382" int_docLength="4233" length="1" offset="3861" startLine="106" starttimestamp="1649721002230" timestamp="52950244">
    <deletedText><![CDATA[n]]></deletedText>
    <insertedText><![CDATA[notifyThread();]]></insertedText>
  </DocumentChange>
  <Command __id="10192" _type="PauseCommand" date="Tue Apr 12 10:32:33 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52951748">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1489]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="10193" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue Apr 12 10:32:33 EDT 2022" starttimestamp="1649721002230" timestamp="52951761" />
  <Command __id="10194" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:32:34 EDT 2022" starttimestamp="1649721002230" timestamp="52952243" />
  <Command __id="10195" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:32:34 EDT 2022" starttimestamp="1649721002230" timestamp="52952313" />
  <Command __id="10196" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:32:34 EDT 2022" starttimestamp="1649721002230" timestamp="52952413" />
  <Command __id="10198" _type="PauseCommand" date="Tue Apr 12 10:32:39 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="52957248">
    <prevType><![CDATA[Save]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4835]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="10202" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Apr 12 10:32:41 EDT 2022" starttimestamp="1649721002230" timestamp="52959645" />
  <Command __id="10204" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintServerLauncherNoFactory.java" date="Tue Apr 12 10:32:41 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="52959679" type="Run" />
  <Command __id="10205" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintServerLauncherNoFactory.java" date="Tue Apr 12 10:32:41 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="52959679" type="Run" />
  <Command __id="10207" _type="PauseCommand" date="Tue Apr 12 10:32:49 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52966970">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[7291]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="10206" _type="ShellCommand" date="Tue Apr 12 10:32:49 EDT 2022" starttimestamp="1649721002230" timestamp="52966970" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10209" _type="PauseCommand" date="Tue Apr 12 10:32:50 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52968768">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1798]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="10208" _type="ShellCommand" date="Tue Apr 12 10:32:50 EDT 2022" starttimestamp="1649721002230" timestamp="52968768" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10210" _type="ProgramExecutionEvent" className="/A6/src/nioExample/NIOManagerPrintServerLauncherNoFactory.java" date="Tue Apr 12 10:32:51 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="52968910" type="Run" />
  <Command __id="10211" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintServerLauncherNoFactory.java" date="Tue Apr 12 10:32:51 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="52968910" type="Run" />
  <Command __id="10213" _type="PauseCommand" date="Tue Apr 12 10:32:52 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52970439">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1529]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="10212" _type="ShellCommand" date="Tue Apr 12 10:32:52 EDT 2022" starttimestamp="1649721002230" timestamp="52970439" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10215" _type="PauseCommand" date="Tue Apr 12 10:32:54 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52971830">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1391]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="10214" _type="ShellCommand" date="Tue Apr 12 10:32:54 EDT 2022" starttimestamp="1649721002230" timestamp="52971830" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10216" _type="RunCommand" className="/A6/src/nioExample/NIOManagerPrintClientLauncherNoFactory.java" date="Tue Apr 12 10:32:54 EDT 2022" kind="HitBreakPoint" projectName="A6" starttimestamp="1649721002230" timestamp="52971973" type="Run" />
  <Command __id="10218" _type="PauseCommand" date="Tue Apr 12 10:32:55 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="52973027">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1054]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="10217" _type="ConsoleOutput" date="Tue Apr 12 10:32:55 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52973027" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
Client Connect to Server
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Enter a line of input to be printed remotely¶Client Connect to Server"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10220" _type="PauseCommand" date="Tue Apr 12 10:33:03 EDT 2022" range="5s-10s" starttimestamp="1649721002230" timestamp="52981393">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8366]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="10219" _type="ConsoleInput" date="Tue Apr 12 10:33:03 EDT 2022" starttimestamp="1649721002230" timestamp="52981393" type="Exception">
    <outputString><![CDATA[hi hi hi
]]></outputString>
  </Command>
  <Command __id="10221" _type="ConsoleOutput" date="Tue Apr 12 10:33:03 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52981460" type="ConsoleOutput">
    <outputString><![CDATA[hi hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57307]
notifying reader!!
thread has completed action and is now waiting
IN RUN METHOD OF READ THREAD
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶Client Connect to Server"), Diff(INSERT,"hi hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57307]¶notifying reader!!¶thread has completed action and is now waiting¶IN RUN METHOD OF READ THREAD"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10222" _type="ConsoleOutput" date="Tue Apr 12 10:33:03 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52981460" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"hi hi hi<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57307]¶notifying reader!!¶thread has completed action and is now"), Diff(INSERT,"Enter a line of input to be printed remotely¶client channel has"), Diff(EQUAL," w"), Diff(DELETE,"a"), Diff(INSERT,"r"), Diff(EQUAL,"it"), Diff(DELETE,"ing¶IN RUN METHOD OF READ THREAD"), Diff(INSERT,"ten"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10224" _type="PauseCommand" date="Tue Apr 12 10:33:20 EDT 2022" range="10s-20s" starttimestamp="1649721002230" timestamp="52998687">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[17227]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="10223" _type="ConsoleInput" date="Tue Apr 12 10:33:20 EDT 2022" starttimestamp="1649721002230" timestamp="52998687" type="Exception">
    <outputString><![CDATA[hahahahaah
]]></outputString>
  </Command>
  <Command __id="10225" _type="ConsoleOutput" date="Tue Apr 12 10:33:21 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52998803" type="ConsoleOutput">
    <outputString><![CDATA[hahahahaah<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57307]
notifying reader!!
thread has completed action and is now waiting
IN RUN METHOD OF READ THREAD
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Enter a line of input to be printed remotely¶client channel has"), Diff(INSERT,"hahahahaah<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57307]¶notifying reader!!¶thread has completed action and is now"), Diff(EQUAL," w"), Diff(DELETE,"r"), Diff(INSERT,"a"), Diff(EQUAL,"it"), Diff(DELETE,"ten"), Diff(INSERT,"ing¶IN RUN METHOD OF READ THREAD"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10226" _type="ConsoleOutput" date="Tue Apr 12 10:33:21 EDT 2022" overflow="false" starttimestamp="1649721002230" timestamp="52999221" type="ConsoleOutput">
    <outputString><![CDATA[Enter a line of input to be printed remotely
client channel has written
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"hahahahaah<--java.nio.channels.SocketChannel[connected local=/127.0.0.1:9000 remote=/127.0.0.1:57307]¶notifying reader!!¶thread has completed action and is now waiting¶IN RUN METHOD OF READ THREAD"), Diff(INSERT,"Enter a line of input to be printed remotely¶client channel has written"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="10191" _type="Delete" date="Tue Apr 12 10:32:33 EDT 2022" docASTNodeCount="544" docActiveCodeLength="3802" docExpressionCount="383" docLength="4247" endLine="106" length="1" offset="3876" startLine="106" starttimestamp="1649721002230" timestamp="52951748">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="10228" _type="PauseCommand" date="Tue Apr 12 10:37:58 EDT 2022" range="2m-5m" starttimestamp="1649721002230" timestamp="53276043">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[276822]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="10229" _type="MoveCaretCommand" caretOffset="408" date="Tue Apr 12 10:37:58 EDT 2022" docOffset="517" starttimestamp="1649721002230" timestamp="53276230" />
  <Command __id="10231" _type="PauseCommand" date="Tue Apr 12 10:38:02 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="53280595">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4365]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="10230" _type="ShellCommand" date="Tue Apr 12 10:38:02 EDT 2022" starttimestamp="1649721002230" timestamp="53280595" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10232" _type="ShellCommand" date="Tue Apr 12 10:38:02 EDT 2022" starttimestamp="1649721002230" timestamp="53280718" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10227" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:37:58 EDT 2022" docASTNodeCount="68" docActiveCodeLength="456" docExpressionCount="45" docLength="524" projectName="A6" starttimestamp="1649721002230" timestamp="53276043">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(DELETE,"	@Override¶	public void notifyThread() {¶		// TODO Auto-generated method stub¶		¶	}¶"), Diff(EQUAL,"¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="10233" _type="Insert" date="Tue Apr 12 10:38:02 EDT 2022" docASTNodeCount="75" docActiveCodeLength="513" docExpressionCount="48" docLength="615" length="91" offset="515" repeat="4" starttimestamp="1649721002230" timestamp="53280738" timestamp2="53280741">
    <text><![CDATA[

	@Override
	public void notifyThread() {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="10238" _type="PauseCommand" date="Tue Apr 12 10:38:07 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="53285493">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[4755]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="10239" _type="MoveCaretCommand" caretOffset="769" date="Tue Apr 12 10:38:07 EDT 2022" docOffset="769" starttimestamp="1649721002230" timestamp="53285620" />
  <Command __id="10241" _type="PauseCommand" date="Tue Apr 12 10:38:10 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="53288177">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2557]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="10240" _type="SelectTextCommand" caretOffset="863" date="Tue Apr 12 10:38:10 EDT 2022" end="877" start="863" starttimestamp="1649721002230" timestamp="53288177" />
  <Command __id="10242" _type="SelectTextCommand" caretOffset="863" date="Tue Apr 12 10:38:10 EDT 2022" end="877" start="863" starttimestamp="1649721002230" timestamp="53288177" />
  <Command __id="10243" _type="CopyCommand" date="Tue Apr 12 10:38:10 EDT 2022" starttimestamp="1649721002230" timestamp="53288524" />
  <Command __id="10237" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:38:07 EDT 2022" docASTNodeCount="92" docActiveCodeLength="691" docExpressionCount="50" docLength="888" projectName="A6" starttimestamp="1649721002230" timestamp="53285493">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶		¶		}¶		¶	}¶	¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="10245" _type="PauseCommand" date="Tue Apr 12 10:38:11 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="53289693">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1169]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="10246" _type="MoveCaretCommand" caretOffset="499" date="Tue Apr 12 10:38:12 EDT 2022" docOffset="608" starttimestamp="1649721002230" timestamp="53289821" />
  <Command __id="10244" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:38:11 EDT 2022" docASTNodeCount="75" docActiveCodeLength="513" docExpressionCount="48" docLength="615" projectName="A6" starttimestamp="1649721002230" timestamp="53289693">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(INSERT,"	@Override¶	public void notifyThread() {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"¶}¶")]]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import util.annotations.Tags;
import util.tags.DistributedTags;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void notifyThread() {
		// TODO Auto-generated method stub
		
	}


}
]]></snapshot>
  </Command>
  <Command __id="10248" _type="PauseCommand" date="Tue Apr 12 10:38:13 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="53291426">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1605]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="10249" _type="SelectTextCommand" caretOffset="863" date="Tue Apr 12 10:38:13 EDT 2022" end="877" start="863" starttimestamp="1649721002230" timestamp="53291532" />
  <Command __id="10251" _type="PauseCommand" date="Tue Apr 12 10:38:16 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="53294142">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2610]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="10250" _type="SelectTextCommand" caretOffset="760" date="Tue Apr 12 10:38:16 EDT 2022" end="881" start="760" starttimestamp="1649721002230" timestamp="53294142" />
  <Command __id="10252" _type="SelectTextCommand" caretOffset="760" date="Tue Apr 12 10:38:16 EDT 2022" end="881" start="760" starttimestamp="1649721002230" timestamp="53294142" />
  <Command __id="10253" _type="CopyCommand" date="Tue Apr 12 10:38:16 EDT 2022" starttimestamp="1649721002230" timestamp="53294365" />
  <Command __id="10255" _type="MoveCaretCommand" caretOffset="499" date="Tue Apr 12 10:38:17 EDT 2022" docOffset="608" starttimestamp="1649721002230" timestamp="53295232" />
  <Command __id="10257" _type="PauseCommand" date="Tue Apr 12 10:38:19 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="53297663">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2431]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="10256" _type="SelectTextCommand" caretOffset="411" date="Tue Apr 12 10:38:19 EDT 2022" end="497" start="411" starttimestamp="1649721002230" timestamp="53297663" />
  <Command __id="10259" _type="PasteCommand" date="Tue Apr 12 10:38:20 EDT 2022" starttimestamp="1649721002230" timestamp="53298031" />
  <Command __id="10260" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:38:20 EDT 2022" starttimestamp="1649721002230" timestamp="53298546" />
  <Command __id="10261" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:38:20 EDT 2022" starttimestamp="1649721002230" timestamp="53298651" />
  <Command __id="10262" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:38:20 EDT 2022" starttimestamp="1649721002230" timestamp="53298667" />
  <Command __id="10247" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:38:13 EDT 2022" docASTNodeCount="92" docActiveCodeLength="691" docExpressionCount="50" docLength="888" projectName="A6" starttimestamp="1649721002230" timestamp="53291426">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nioExample;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import readThread.ReadThreadInterface;¶¶public class exampleServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		while(true) {¶			synchronized (this) {¶				try {¶					wait();¶				} catch (InterruptedException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶					break; // this breaks out of run loop then thread terminates¶				}¶			}¶			¶			System.out.println("IN RUN METHOD OF READ THREAD");¶		¶		}¶		¶	}¶	¶	@Override¶	public synchronized void notifyThread() {¶		// TODO This should be when a line is read¶		this.notify();¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="10254" _type="DiffBasedFileOpenCommand" date="Tue Apr 12 10:38:17 EDT 2022" docASTNodeCount="75" docActiveCodeLength="513" docExpressionCount="48" docLength="615" projectName="A6" starttimestamp="1649721002230" timestamp="53295139">
    <filePath><![CDATA[C:\Users\mannu\COMP_533\A6\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package readThread;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶¶@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})¶public class ServerReadThread implements ReadThreadInterface{¶¶	@Override¶	public void run() {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void notifyThread() {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="10258" _type="Replace" date="Tue Apr 12 10:38:20 EDT 2022" docASTNodeCount="80" docActiveCodeLength="540" docExpressionCount="51" docLength="650" endLine="28" insertionLength="122" int_docASTNodeCount="68" int_docActiveCodeLength="460" int_docExpressionCount="45" int_docLength="528" length="87" offset="519" startLine="24" starttimestamp="1649721002230" timestamp="53297963">
    <deletedText><![CDATA[	@Override
	public void notifyThread() {
		// TODO Auto-generated method stub
		
	}]]></deletedText>
    <insertedText><![CDATA[	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}]]></insertedText>
  </DocumentChange>
  <Command __id="10264" _type="PauseCommand" date="Tue Apr 12 10:38:22 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="53300112">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1445]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="10265" _type="MoveCaretCommand" caretOffset="0" date="Tue Apr 12 10:38:22 EDT 2022" docOffset="0" starttimestamp="1649721002230" timestamp="53300236" />
  <Command __id="10267" _type="PauseCommand" date="Tue Apr 12 10:38:24 EDT 2022" range="1s-2s" starttimestamp="1649721002230" timestamp="53302129">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1893]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="10266" _type="MoveCaretCommand" caretOffset="406" date="Tue Apr 12 10:38:24 EDT 2022" docOffset="515" starttimestamp="1649721002230" timestamp="53302129" />
  <Command __id="10269" _type="InsertStringCommand" date="Tue Apr 12 10:38:24 EDT 2022" starttimestamp="1649721002230" timestamp="53302456" timestamp2="53302456">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="10271" _type="InsertStringCommand" date="Tue Apr 12 10:38:24 EDT 2022" starttimestamp="1649721002230" timestamp="53302543" timestamp2="53302543">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="10273" _type="PasteCommand" date="Tue Apr 12 10:38:25 EDT 2022" starttimestamp="1649721002230" timestamp="53302962" />
  <Command __id="10274" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Apr 12 10:38:25 EDT 2022" starttimestamp="1649721002230" timestamp="53303300" />
  <Command __id="10275" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:38:25 EDT 2022" starttimestamp="1649721002230" timestamp="53303555" />
  <Command __id="10276" _type="EclipseCommand" commandID="" date="Tue Apr 12 10:38:25 EDT 2022" starttimestamp="1649721002230" timestamp="53303590" />
  <Command __id="10278" _type="PauseCommand" date="Tue Apr 12 10:38:29 EDT 2022" range="2s-5s" starttimestamp="1649721002230" timestamp="53307069">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3479]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
